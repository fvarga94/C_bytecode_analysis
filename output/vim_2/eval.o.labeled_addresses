get_var_special_name	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,1:CALL,1:functions,0	25
0x4000100	        0x4883ec08	                              sub rsp, 8	      5516	eval.c	FUNCTION_86
0x4000104	          0x83ff01	                              cmp edi, 1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000107	            0x743f	                            je 0x4000148	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000109	            0x7e1d	                           jle 0x4000128	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400010b	          0x83ff02	                              cmp edi, 2	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400010e	      0xb800000000	                              mov eax, 0	      5521	eval.c	FUNCTION_86	SWITCH_1
0x4000113	            0x740a	                            je 0x400011f	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000115	          0x83ff03	                              cmp edi, 3	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000118	      0xb800000000	                              mov eax, 0	      5522	eval.c	FUNCTION_86	SWITCH_1
0x400011d	            0x7512	                           jne 0x4000131	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400011f	        0x4883c408	                              add rsp, 8	      5526	eval.c	FUNCTION_86
0x4000123	              0xc3	                                     ret	      5526	eval.c	FUNCTION_86
0x4000124	         0xf1f4000	                         nop dword [rax]	      5526	eval.c	FUNCTION_86
0x4000128	            0x85ff	                           test edi, edi	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400012a	      0xb800000000	                              mov eax, 0	      5519	eval.c	FUNCTION_86	SWITCH_1
0x400012f	            0x74ee	                            je 0x400011f	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4000131	      0xbf00000000	                              mov edi, 0	      5524	eval.c	FUNCTION_86	CALL_1
0x4000136	      0xe800000000	                          call 0x400013b	      5524	eval.c	FUNCTION_86	CALL_1
0x400013b	      0xb800000000	                              mov eax, 0	      5525	eval.c	FUNCTION_86
0x4000140	        0x4883c408	                              add rsp, 8	      5526	eval.c	FUNCTION_86
0x4000144	              0xc3	                                     ret	      5526	eval.c	FUNCTION_86
0x4000145	           0xf1f00	                         nop dword [rax]	      5526	eval.c	FUNCTION_86
0x4000148	      0xb800000000	                              mov eax, 0	      5520	eval.c	FUNCTION_86	SWITCH_1
0x400014d	        0x4883c408	                              add rsp, 8	      5526	eval.c	FUNCTION_86
0x4000151	              0xc3	                                     ret	      5526	eval.c	FUNCTION_86
cat_prefix_varname	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,4:functions,0	40
0x4000160	            0x4155	                                push r13	      3107	eval.c	FUNCTION_60
0x4000162	            0x4154	                                push r12	      3107	eval.c	FUNCTION_60
0x4000164	          0x4189fd	                           mov r13d, edi	      3107	eval.c	FUNCTION_60
0x4000167	              0x55	                                push rbp	      3107	eval.c	FUNCTION_60
0x4000168	              0x53	                                push rbx	      3107	eval.c	FUNCTION_60
0x4000169	          0x4889f7	                            mov rdi, rsi	      3110	eval.c	FUNCTION_60	CALL_1
0x400016c	          0x4989f4	                            mov r12, rsi	      3107	eval.c	FUNCTION_60
0x400016f	        0x4883ec08	                              sub rsp, 8	      3107	eval.c	FUNCTION_60
0x4000173	      0xe800000000	                          call 0x4000178	      3110	eval.c	FUNCTION_60	CALL_1
0x4000178	          0x4889c3	                            mov rbx, rax	      3110	eval.c	FUNCTION_60	CALL_1
0x400017b	          0x83c003	                              add eax, 3	      3111	eval.c	FUNCTION_60	IF_1
0x400017e	    0x3b0500000000	            cmp eax, dword [0x04000184] 	      3111	eval.c	FUNCTION_60	IF_1
0x4000184	            0x7f2a	                            jg 0x40001b0	      3111	eval.c	FUNCTION_60	IF_1
0x4000186	    0x488b1d000000	            mov rbx, qword [0x0400018d] 	      3111	eval.c	FUNCTION_60	IF_1
0x400018d	        0x488d7b02	                      lea rdi, [rbx + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x4000191	          0x44882b	                    mov byte [rbx], r13b	      3123	eval.c	FUNCTION_60
0x4000194	        0xc643013a	                mov byte [rbx + 1], 0x3a	      3124	eval.c	FUNCTION_60
0x4000198	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_197	CALL_3
0x400019b	      0xe800000000	                          call 0x40001a0	       110	string3.h	FUNCTION_197	CALL_3
0x40001a0	        0x4883c408	                              add rsp, 8	      3127	eval.c	FUNCTION_60
0x40001a4	          0x4889d8	                            mov rax, rbx	      3127	eval.c	FUNCTION_60
0x40001a7	              0x5b	                                 pop rbx	      3127	eval.c	FUNCTION_60
0x40001a8	              0x5d	                                 pop rbp	      3127	eval.c	FUNCTION_60
0x40001a9	            0x415c	                                 pop r12	      3127	eval.c	FUNCTION_60
0x40001ab	            0x415d	                                 pop r13	      3127	eval.c	FUNCTION_60
0x40001ad	              0xc3	                                     ret	      3127	eval.c	FUNCTION_60
0x40001ae	            0x6690	                                     nop	      3127	eval.c	FUNCTION_60
0x40001b0	    0x488b3d000000	            mov rdi, qword [0x040001b7] 	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x40001b7	          0x8d6b0d	                    lea ebp, [rbx + 0xd]	      3114	eval.c	FUNCTION_60	IF_1
0x40001ba	      0xe800000000	                          call 0x40001bf	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x40001bf	            0x89ef	                            mov edi, ebp	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x40001c1	      0xe800000000	                          call 0x40001c6	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x40001c6	          0x4885c0	                           test rax, rax	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x40001c9	          0x4889c3	                            mov rbx, rax	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x40001cc	    0x488905000000	            mov qword [0x040001d3], rax 	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x40001d3	            0x7408	                            je 0x40001dd	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x40001d5	    0x892d00000000	            mov dword [0x040001db], ebp 	      3121	eval.c	FUNCTION_60	IF_1
0x40001db	            0xebb0	                           jmp 0x400018d	      3121	eval.c	FUNCTION_60	IF_1
0x40001dd	    0xc70500000000	               mov dword [0x040001e7], 0	      3118	eval.c	FUNCTION_60	IF_1	IF_2
0x40001e7	            0xebb7	                           jmp 0x40001a0	      3119	eval.c	FUNCTION_60	IF_1	IF_2
unref_var_dict	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,1:functions,0	2
0x4004ac0	    0x816f049e8601	            sub dword [rdi + 4], 0x1869e	      7393	eval.c	FUNCTION_137
0x4004ac7	      0xe900000000	                           jmp 0x4004acc	      7394	eval.c	FUNCTION_137	CALL_1
get_tv_number_chk	DO,0:WHILE,0:FOR,0:ELSE,1:IF,2:SWITCH,1:CALL,14:functions,0	99
0x4003080	              0x53	                                push rbx	      6969	eval.c	FUNCTION_125
0x4003081	          0x4889f3	                            mov rbx, rsi	      6969	eval.c	FUNCTION_125
0x4003084	        0x4883ec10	                           sub rsp, 0x10	      6969	eval.c	FUNCTION_125
0x4003088	    0x64488b042528	                mov rax, qword fs:[0x28]	      6969	eval.c	FUNCTION_125
0x4003091	      0x4889442408	                mov qword [rsp + 8], rax	      6969	eval.c	FUNCTION_125
0x4003096	            0x31c0	                            xor eax, eax	      6969	eval.c	FUNCTION_125
0x4003098	          0x833f0a	                    cmp dword [rdi], 0xa	      6972	eval.c	FUNCTION_125	SWITCH_1
0x400309b	    0x48c704240000	                      mov qword [rsp], 0	      6970	eval.c	FUNCTION_125
0x40030a3	            0x771b	                            ja 0x40030c0	      6972	eval.c	FUNCTION_125	SWITCH_1
0x40030a5	            0x8b07	                    mov eax, dword [rdi]	      6972	eval.c	FUNCTION_125	SWITCH_1
0x40030a7	    0xff24c5000000	                       jmp qword [rax*8]	      6972	eval.c	FUNCTION_125	SWITCH_1
0x40030ae	            0x6690	                                     nop	      6972	eval.c	FUNCTION_125	SWITCH_1
0x40030b0	      0xbf00000000	                              mov edi, 0	      7010	eval.c	FUNCTION_125	SWITCH_1	CALL_14
0x40030b5	      0xe800000000	                          call 0x40030ba	      7010	eval.c	FUNCTION_125	SWITCH_1	CALL_14
0x40030ba	    0x660f1f440000	                    nop word [rax + rax]	      7010	eval.c	FUNCTION_125	SWITCH_1	CALL_14
0x40030c0	          0x4885db	                           test rbx, rbx	      7013	eval.c	FUNCTION_125	IF_2
0x40030c3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      7013	eval.c	FUNCTION_125	IF_2
0x40030ca	            0x740a	                            je 0x40030d6	      7013	eval.c	FUNCTION_125	IF_2
0x40030cc	        0x488b0424	                    mov rax, qword [rsp]	      7013	eval.c	FUNCTION_125	IF_2
0x40030d0	    0xc70301000000	                      mov dword [rbx], 1	      7016	eval.c	FUNCTION_125	ELSE_1
0x40030d6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030e4	     0xf8525010000	                           jne 0x400320f	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030ea	        0x4883c410	                           add rsp, 0x10	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030ee	              0x5b	                                 pop rbx	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030ef	              0xc3	                                     ret	      7018	eval.c	FUNCTION_125	ELSE_1
0x40030f0	            0x31ff	                            xor edi, edi	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x40030f2	      0xba05000000	                              mov edx, 5	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x40030f7	      0xbe00000000	                              mov esi, 0	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x40030fc	      0xe800000000	                          call 0x4003101	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4003101	          0x4889c7	                            mov rdi, rax	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4003104	      0xe800000000	                          call 0x4003109	      7001	eval.c	FUNCTION_125	SWITCH_1	CALL_11
0x4003109	            0xebb5	                           jmp 0x40030c0	      7002	eval.c	FUNCTION_125	SWITCH_1
0x400310b	       0xf1f440000	                   nop dword [rax + rax]	      7002	eval.c	FUNCTION_125	SWITCH_1
0x4003110	            0x31ff	                            xor edi, edi	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4003112	      0xba05000000	                              mov edx, 5	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4003117	      0xbe00000000	                              mov esi, 0	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x400311c	      0xe800000000	                          call 0x4003121	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4003121	          0x4889c7	                            mov rdi, rax	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4003124	      0xe800000000	                          call 0x4003129	      7006	eval.c	FUNCTION_125	SWITCH_1	CALL_13
0x4003129	            0xeb95	                           jmp 0x40030c0	      7007	eval.c	FUNCTION_125	SWITCH_1
0x400312b	       0xf1f440000	                   nop dword [rax + rax]	      7007	eval.c	FUNCTION_125	SWITCH_1
0x4003130	        0x488b4708	                mov rax, qword [rdi + 8]	      6975	eval.c	FUNCTION_125	SWITCH_1
0x4003134	            0xeba0	                           jmp 0x40030d6	      6975	eval.c	FUNCTION_125	SWITCH_1
0x4003136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6975	eval.c	FUNCTION_125	SWITCH_1
0x4003140	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4003144	            0x31c0	                            xor eax, eax	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4003146	          0x4885ff	                           test rdi, rdi	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x4003149	            0x748b	                            je 0x40030d6	      6986	eval.c	FUNCTION_125	SWITCH_1	IF_1
0x400314b	        0x4883ec08	                              sub rsp, 8	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400314f	      0xb907000000	                              mov ecx, 7	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003154	            0x31d2	                            xor edx, edx	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003156	            0x6a00	                                  push 0	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003158	          0x4531c9	                            xor r9d, r9d	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400315b	            0x31f6	                            xor esi, esi	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400315d	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003162	      0xe800000000	                          call 0x4003167	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003167	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400316c	              0x5a	                                 pop rdx	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400316d	              0x59	                                 pop rcx	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x400316e	      0xe963ffffff	                           jmp 0x40030d6	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003173	       0xf1f440000	                   nop dword [rax + rax]	      6987	eval.c	FUNCTION_125	SWITCH_1	IF_1	CALL_5
0x4003178	            0x31ff	                            xor edi, edi	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x400317a	      0xba05000000	                              mov edx, 5	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x400317f	      0xbe00000000	                              mov esi, 0	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4003184	      0xe800000000	                          call 0x4003189	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4003189	          0x4889c7	                            mov rdi, rax	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x400318c	      0xe800000000	                          call 0x4003191	      6983	eval.c	FUNCTION_125	SWITCH_1	CALL_4
0x4003191	      0xe92affffff	                           jmp 0x40030c0	      6984	eval.c	FUNCTION_125	SWITCH_1
0x4003196	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6984	eval.c	FUNCTION_125	SWITCH_1
0x40031a0	            0x31ff	                            xor edi, edi	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031a2	      0xba05000000	                              mov edx, 5	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031a7	      0xbe00000000	                              mov esi, 0	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031ac	      0xe800000000	                          call 0x40031b1	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031b1	          0x4889c7	                            mov rdi, rax	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031b4	      0xe800000000	                          call 0x40031b9	      6991	eval.c	FUNCTION_125	SWITCH_1	CALL_7
0x40031b9	      0xe902ffffff	                           jmp 0x40030c0	      6992	eval.c	FUNCTION_125	SWITCH_1
0x40031be	            0x6690	                                     nop	      6992	eval.c	FUNCTION_125	SWITCH_1
0x40031c0	            0x31ff	                            xor edi, edi	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031c2	      0xba05000000	                              mov edx, 5	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031c7	      0xbe00000000	                              mov esi, 0	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031cc	      0xe800000000	                          call 0x40031d1	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031d1	          0x4889c7	                            mov rdi, rax	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031d4	      0xe800000000	                          call 0x40031d9	      6994	eval.c	FUNCTION_125	SWITCH_1	CALL_9
0x40031d9	      0xe9e2feffff	                           jmp 0x40030c0	      6995	eval.c	FUNCTION_125	SWITCH_1
0x40031de	            0x6690	                                     nop	      6995	eval.c	FUNCTION_125	SWITCH_1
0x40031e0	            0x31ff	                            xor edi, edi	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031e2	      0xba05000000	                              mov edx, 5	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031e7	      0xbe00000000	                              mov esi, 0	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031ec	      0xe800000000	                          call 0x40031f1	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031f1	          0x4889c7	                            mov rdi, rax	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031f4	      0xe800000000	                          call 0x40031f9	      6978	eval.c	FUNCTION_125	SWITCH_1	CALL_2
0x40031f9	      0xe9c2feffff	                           jmp 0x40030c0	      6979	eval.c	FUNCTION_125	SWITCH_1
0x40031fe	            0x6690	                                     nop	      6979	eval.c	FUNCTION_125	SWITCH_1
0x4003200	            0x31c0	                            xor eax, eax	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4003202	      0x48837f0801	                  cmp qword [rdi + 8], 1	      6997	eval.c	FUNCTION_125	SWITCH_1
0x4003207	           0xf94c0	                                 sete al	      6997	eval.c	FUNCTION_125	SWITCH_1
0x400320a	      0xe9c7feffff	                           jmp 0x40030d6	      6997	eval.c	FUNCTION_125	SWITCH_1
0x400320f	      0xe800000000	                          call 0x4003214	      7018	eval.c	FUNCTION_125	ELSE_1
ga_concat_esc	DO,0:WHILE,0:FOR,1:ELSE,1:IF,2:SWITCH,1:CALL,11:functions,0	99
0x4000330	              0x55	                                push rbp	      9109	eval.c	FUNCTION_179
0x4000331	              0x53	                                push rbx	      9109	eval.c	FUNCTION_179
0x4000332	          0x4889fd	                            mov rbp, rdi	      9109	eval.c	FUNCTION_179
0x4000335	        0x4883ec58	                           sub rsp, 0x58	      9109	eval.c	FUNCTION_179
0x4000339	    0x64488b042528	                mov rax, qword fs:[0x28]	      9109	eval.c	FUNCTION_179
0x4000342	      0x4889442448	             mov qword [rsp + 0x48], rax	      9109	eval.c	FUNCTION_179
0x4000347	            0x31c0	                            xor eax, eax	      9109	eval.c	FUNCTION_179
0x4000349	          0x4885f6	                           test rsi, rsi	      9113	eval.c	FUNCTION_179	IF_1
0x400034c	     0xf844e010000	                            je 0x40004a0	      9113	eval.c	FUNCTION_179	IF_1
0x4000352	           0xfb60e	                   movzx ecx, byte [rsi]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000355	          0x4889f3	                            mov rbx, rsi	      9119	eval.c	FUNCTION_179	FOR_1
0x4000358	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x400035a	            0x755f	                           jne 0x40003bb	      9119	eval.c	FUNCTION_179	FOR_1
0x400035c	      0xe98f000000	                           jmp 0x40003f0	      9119	eval.c	FUNCTION_179	FOR_1
0x4000361	     0xf1f80000000	                         nop dword [rax]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000368	          0x80f909	                               cmp cl, 9	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400036b	     0xf8407010000	                            je 0x4000478	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000371	          0x80f90a	                             cmp cl, 0xa	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000374	     0xf84e6000000	                            je 0x4000460	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400037a	          0x80f908	                               cmp cl, 8	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400037d	     0xf84c5000000	                            je 0x4000448	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000383	          0x80f91f	                            cmp cl, 0x1f	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x4000386	     0xf8704010000	                            ja 0x4000490	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x400038c	      0xbe41000000	                           mov esi, 0x41	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000391	          0x4889e7	                            mov rdi, rsp	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000394	      0xba00000000	                              mov edx, 0	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000399	            0x31c0	                            xor eax, eax	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x400039b	      0xe800000000	                          call 0x40003a0	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x40003a0	          0x4889e6	                            mov rsi, rsp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40003a3	          0x4889ef	                            mov rdi, rbp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40003a6	      0xe800000000	                          call 0x40003ab	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40003ab	       0xf1f440000	                   nop dword [rax + rax]	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x40003b0	        0x4883c301	                              add rbx, 1	      9119	eval.c	FUNCTION_179	FOR_1
0x40003b4	           0xfb60b	                   movzx ecx, byte [rbx]	      9119	eval.c	FUNCTION_179	FOR_1
0x40003b7	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x40003b9	            0x7435	                            je 0x40003f0	      9119	eval.c	FUNCTION_179	FOR_1
0x40003bb	          0x80f90c	                             cmp cl, 0xc	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003be	            0x7450	                            je 0x4000410	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003c0	            0x76a6	                           jbe 0x4000368	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003c2	          0x80f91b	                            cmp cl, 0x1b	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003c5	            0x7469	                            je 0x4000430	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003c7	          0x80f95c	                            cmp cl, 0x5c	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003ca	            0x7454	                            je 0x4000420	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003cc	          0x80f90d	                             cmp cl, 0xd	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003cf	            0x75b2	                           jne 0x4000383	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x40003d1	        0x4883c301	                              add rbx, 1	      9119	eval.c	FUNCTION_179	FOR_1
0x40003d5	      0xbe00000000	                              mov esi, 0	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40003da	          0x4889ef	                            mov rdi, rbp	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40003dd	      0xe800000000	                          call 0x40003e2	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x40003e2	           0xfb60b	                   movzx ecx, byte [rbx]	      9119	eval.c	FUNCTION_179	FOR_1
0x40003e5	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x40003e7	            0x75d2	                           jne 0x40003bb	      9119	eval.c	FUNCTION_179	FOR_1
0x40003e9	     0xf1f80000000	                         nop dword [rax]	      9119	eval.c	FUNCTION_179	FOR_1
0x40003f0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      9139	eval.c	FUNCTION_179
0x40003f5	    0x644833042528	                xor rax, qword fs:[0x28]	      9139	eval.c	FUNCTION_179
0x40003fe	     0xf85ab000000	                           jne 0x40004af	      9139	eval.c	FUNCTION_179
0x4000404	        0x4883c458	                           add rsp, 0x58	      9139	eval.c	FUNCTION_179
0x4000408	              0x5b	                                 pop rbx	      9139	eval.c	FUNCTION_179
0x4000409	              0x5d	                                 pop rbp	      9139	eval.c	FUNCTION_179
0x400040a	              0xc3	                                     ret	      9139	eval.c	FUNCTION_179
0x400040b	       0xf1f440000	                   nop dword [rax + rax]	      9139	eval.c	FUNCTION_179
0x4000410	      0xbe00000000	                              mov esi, 0	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x4000415	          0x4889ef	                            mov rdi, rbp	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x4000418	      0xe800000000	                          call 0x400041d	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x400041d	            0xeb91	                           jmp 0x40003b0	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x400041f	              0x90	                                     nop	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x4000420	      0xbe00000000	                              mov esi, 0	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x4000425	          0x4889ef	                            mov rdi, rbp	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x4000428	      0xe800000000	                          call 0x400042d	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x400042d	            0xeb81	                           jmp 0x40003b0	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x400042f	              0x90	                                     nop	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x4000430	      0xbe00000000	                              mov esi, 0	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000435	          0x4889ef	                            mov rdi, rbp	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000438	      0xe800000000	                          call 0x400043d	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x400043d	      0xe96effffff	                           jmp 0x40003b0	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000442	    0x660f1f440000	                    nop word [rax + rax]	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x4000448	      0xbe00000000	                              mov esi, 0	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x400044d	          0x4889ef	                            mov rdi, rbp	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000450	      0xe800000000	                          call 0x4000455	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000455	      0xe956ffffff	                           jmp 0x40003b0	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x400045a	    0x660f1f440000	                    nop word [rax + rax]	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000460	      0xbe00000000	                              mov esi, 0	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000465	          0x4889ef	                            mov rdi, rbp	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000468	      0xe800000000	                          call 0x400046d	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x400046d	      0xe93effffff	                           jmp 0x40003b0	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000472	    0x660f1f440000	                    nop word [rax + rax]	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000478	      0xbe00000000	                              mov esi, 0	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x400047d	          0x4889ef	                            mov rdi, rbp	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000480	      0xe800000000	                          call 0x4000485	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000485	      0xe926ffffff	                           jmp 0x40003b0	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x400048a	    0x660f1f440000	                    nop word [rax + rax]	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000490	           0xfb6f1	                           movzx esi, cl	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000493	          0x4889ef	                            mov rdi, rbp	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000496	      0xe800000000	                          call 0x400049b	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x400049b	      0xe910ffffff	                           jmp 0x40003b0	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x40004a0	      0xbe00000000	                              mov esi, 0	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x40004a5	      0xe800000000	                          call 0x40004aa	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x40004aa	      0xe941ffffff	                           jmp 0x40003f0	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x40004af	      0xe800000000	                          call 0x40004b4	      9139	eval.c	FUNCTION_179
set_cmdarg	DO,0:WHILE,0:FOR,0:ELSE,6:IF,16:SWITCH,0:CALL,16:functions,0	157
0x4002310	            0x4155	                                push r13	      6569	eval.c	FUNCTION_115
0x4002312	            0x4154	                                push r12	      6569	eval.c	FUNCTION_115
0x4002314	              0x55	                                push rbp	      6569	eval.c	FUNCTION_115
0x4002315	              0x53	                                push rbx	      6569	eval.c	FUNCTION_115
0x4002316	        0x4883ec18	                           sub rsp, 0x18	      6569	eval.c	FUNCTION_115
0x400231a	          0x4885ff	                           test rdi, rdi	      6575	eval.c	FUNCTION_115	IF_1
0x400231d	    0x4c8b25000000	            mov r12, qword [0x04002324] 	      6574	eval.c	FUNCTION_115
0x4002324	     0xf845d020000	                            je 0x4002587	      6575	eval.c	FUNCTION_115	IF_1
0x400232a	          0x8b4778	            mov eax, dword [rdi + 0x78] 	      6582	eval.c	FUNCTION_115	IF_2
0x400232d	          0x4889fd	                            mov rbp, rdi	      6582	eval.c	FUNCTION_115	IF_2
0x4002330	      0xbb06000000	                              mov ebx, 6	      6583	eval.c	FUNCTION_115	IF_2
0x4002335	          0x83f801	                              cmp eax, 1	      6582	eval.c	FUNCTION_115	IF_2
0x4002338	            0x740b	                            je 0x4002345	      6582	eval.c	FUNCTION_115	IF_2
0x400233a	            0x31db	                            xor ebx, ebx	      6587	eval.c	FUNCTION_115	ELSE_2
0x400233c	          0x83f802	                              cmp eax, 2	      6587	eval.c	FUNCTION_115	ELSE_2
0x400233f	           0xf94c3	                                 sete bl	      6587	eval.c	FUNCTION_115	ELSE_2
0x4002342	          0xc1e303	                              shl ebx, 3	      6587	eval.c	FUNCTION_115	ELSE_2
0x4002345	          0x8b757c	            mov esi, dword [rbp + 0x7c] 	      6590	eval.c	FUNCTION_115	IF_4
0x4002348	    0x8bbd80000000	            mov edi, dword [rbp + 0x80] 	      6593	eval.c	FUNCTION_115	IF_5
0x400234e	          0x8d4307	                      lea eax, [rbx + 7]	      6590	eval.c	FUNCTION_115	IF_4
0x4002351	            0x85f6	                           test esi, esi	      6590	eval.c	FUNCTION_115	IF_4
0x4002353	           0xf45d8	                         cmovne ebx, eax	      6590	eval.c	FUNCTION_115	IF_4
0x4002356	            0x85ff	                           test edi, edi	      6593	eval.c	FUNCTION_115	IF_5
0x4002358	    0x4863bd840000	         movsxd rdi, dword [rbp + 0x84] 	      6595	eval.c	FUNCTION_115	IF_6
0x400235f	          0x8d430a	                    lea eax, [rbx + 0xa]	      6593	eval.c	FUNCTION_115	IF_5
0x4002362	           0xf45d8	                         cmovne ebx, eax	      6593	eval.c	FUNCTION_115	IF_5
0x4002365	            0x85ff	                           test edi, edi	      6595	eval.c	FUNCTION_115	IF_6
0x4002367	     0xf859b000000	                           jne 0x4002408	      6595	eval.c	FUNCTION_115	IF_6
0x400236d	    0x8b8d88000000	            mov ecx, dword [rbp + 0x88] 	      6598	eval.c	FUNCTION_115	IF_7
0x4002373	          0x8d430b	                    lea eax, [rbx + 0xb]	      6598	eval.c	FUNCTION_115	IF_7
0x4002376	            0x85c9	                           test ecx, ecx	      6598	eval.c	FUNCTION_115	IF_7
0x4002378	           0xf45d8	                         cmovne ebx, eax	      6598	eval.c	FUNCTION_115	IF_7
0x400237b	          0x8d7b01	                      lea edi, [rbx + 1]	      6601	eval.c	FUNCTION_115	CALL_3
0x400237e	      0xe800000000	                          call 0x4002383	      6601	eval.c	FUNCTION_115	CALL_3
0x4002383	          0x4885c0	                           test rax, rax	      6602	eval.c	FUNCTION_115	IF_8
0x4002386	          0x4889c3	                            mov rbx, rax	      6601	eval.c	FUNCTION_115	CALL_3
0x4002389	     0xf84f1010000	                            je 0x4002580	      6602	eval.c	FUNCTION_115	IF_8
0x400238f	          0x8b4578	            mov eax, dword [rbp + 0x78] 	      6605	eval.c	FUNCTION_115	IF_9
0x4002392	          0x83f801	                              cmp eax, 1	      6605	eval.c	FUNCTION_115	IF_9
0x4002395	     0xf848d010000	                            je 0x4002528	      6605	eval.c	FUNCTION_115	IF_9
0x400239b	          0x83f802	                              cmp eax, 2	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x400239e	     0xf84c4010000	                            je 0x4002568	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x40023a4	          0xc60300	                       mov byte [rbx], 0	      6610	eval.c	FUNCTION_115	ELSE_4
0x40023a7	          0x8b457c	            mov eax, dword [rbp + 0x7c] 	      6612	eval.c	FUNCTION_115	IF_11
0x40023aa	            0x85c0	                           test eax, eax	      6612	eval.c	FUNCTION_115	IF_11
0x40023ac	     0xf8526010000	                           jne 0x40024d8	      6612	eval.c	FUNCTION_115	IF_11
0x40023b2	    0x8b8580000000	            mov eax, dword [rbp + 0x80] 	      6615	eval.c	FUNCTION_115	IF_12
0x40023b8	            0x85c0	                           test eax, eax	      6615	eval.c	FUNCTION_115	IF_12
0x40023ba	            0x7564	                           jne 0x4002420	      6615	eval.c	FUNCTION_115	IF_12
0x40023bc	    0x448bad840000	           mov r13d, dword [rbp + 0x84] 	      6621	eval.c	FUNCTION_115	IF_13
0x40023c3	          0x4585ed	                         test r13d, r13d	      6621	eval.c	FUNCTION_115	IF_13
0x40023c6	     0xf85a8000000	                           jne 0x4002474	      6621	eval.c	FUNCTION_115	IF_13
0x40023cc	    0x8bad88000000	            mov ebp, dword [rbp + 0x88] 	      6624	eval.c	FUNCTION_115	IF_14
0x40023d2	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      6624	eval.c	FUNCTION_115	IF_14
0x40023d5	     0xf84d3000000	                            je 0x40024ae	      6624	eval.c	FUNCTION_115	IF_14
0x40023db	          0x83fdfe	             cmp ebp, 0xfffffffffffffffe	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x40023de	     0xf845c010000	                            je 0x4002540	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x40023e4	            0x85ed	                           test ebp, ebp	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x40023e6	     0xf850c010000	                           jne 0x40024f8	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x40023ec	    0x48891d000000	            mov qword [0x040023f3], rbx 	      6631	eval.c	FUNCTION_115
0x40023f3	          0x4c89e0	                            mov rax, r12	      6632	eval.c	FUNCTION_115
0x40023f6	        0x4883c418	                           add rsp, 0x18	      6633	eval.c	FUNCTION_115
0x40023fa	              0x5b	                                 pop rbx	      6633	eval.c	FUNCTION_115
0x40023fb	              0x5d	                                 pop rbp	      6633	eval.c	FUNCTION_115
0x40023fc	            0x415c	                                 pop r12	      6633	eval.c	FUNCTION_115
0x40023fe	            0x415d	                                 pop r13	      6633	eval.c	FUNCTION_115
0x4002400	              0xc3	                                     ret	      6633	eval.c	FUNCTION_115
0x4002401	     0xf1f80000000	                         nop dword [rax]	      6633	eval.c	FUNCTION_115
0x4002408	        0x48037d10	             add rdi, qword [rbp + 0x10]	      6596	eval.c	FUNCTION_115	CALL_2
0x400240c	      0xe800000000	                          call 0x4002411	      6596	eval.c	FUNCTION_115	CALL_2
0x4002411	        0x8d5c0307	                lea ebx, [rbx + rax + 7]	      6596	eval.c	FUNCTION_115	CALL_2
0x4002415	      0xe953ffffff	                           jmp 0x400236d	      6596	eval.c	FUNCTION_115	CALL_2
0x400241a	    0x660f1f440000	                    nop word [rax + rax]	      6596	eval.c	FUNCTION_115	CALL_2
0x4002420	          0x83f875	                           cmp eax, 0x75	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002423	    0x41bd00000000	                             mov r13d, 0	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002429	            0x7412	                            je 0x400243d	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x400242b	          0x83f864	                           cmp eax, 0x64	      6619	eval.c	FUNCTION_115	IF_12
0x400242e	    0x41bd00000000	                             mov r13d, 0	      6619	eval.c	FUNCTION_115	IF_12
0x4002434	      0xb800000000	                              mov eax, 0	      6619	eval.c	FUNCTION_115	IF_12
0x4002439	        0x4c0f44e8	                          cmove r13, rax	      6619	eval.c	FUNCTION_115	IF_12
0x400243d	          0x4889df	                            mov rdi, rbx	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002440	      0xe800000000	                          call 0x4002445	      6616	eval.c	FUNCTION_115	IF_12	CALL_8
0x4002445	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002449	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_206	CALL_2
0x400244c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_206	CALL_2
0x400244e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002453	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_206	CALL_2
0x400245a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_206	CALL_2
0x400245f	      0xe800000000	                          call 0x4002464	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002464	    0x448bad840000	           mov r13d, dword [rbp + 0x84] 	      6621	eval.c	FUNCTION_115	IF_13
0x400246b	          0x4585ed	                         test r13d, r13d	      6621	eval.c	FUNCTION_115	IF_13
0x400246e	     0xf8458ffffff	                            je 0x40023cc	      6621	eval.c	FUNCTION_115	IF_13
0x4002474	          0x4889df	                            mov rdi, rbx	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x4002477	      0xe800000000	                          call 0x400247c	      6622	eval.c	FUNCTION_115	IF_13	CALL_10
0x400247c	          0x4d63c5	                         movsxd r8, r13d	        33	stdio2.h	FUNCTION_206	CALL_2
0x400247f	        0x4c034510	              add r8, qword [rbp + 0x10]	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002483	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002487	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x400248c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_206	CALL_2
0x400248e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002495	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_206	CALL_2
0x400249a	      0xe800000000	                          call 0x400249f	        33	stdio2.h	FUNCTION_206	CALL_2
0x400249f	    0x8bad88000000	            mov ebp, dword [rbp + 0x88] 	      6624	eval.c	FUNCTION_115	IF_14
0x40024a5	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      6624	eval.c	FUNCTION_115	IF_14
0x40024a8	     0xf852dffffff	                           jne 0x40023db	      6624	eval.c	FUNCTION_115	IF_14
0x40024ae	          0x4889df	                            mov rdi, rbx	      6625	eval.c	FUNCTION_115	CALL_12
0x40024b1	      0xe800000000	                          call 0x40024b6	      6625	eval.c	FUNCTION_115	CALL_12
0x40024b6	    0x48b9202b2b62	          movabs rcx, 0x6b3d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x40024c0	          0x4801d8	                            add rax, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x40024c3	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x40024c6	    0xc74008656570	          mov dword [rax + 8], 0x706565 	       110	string3.h	FUNCTION_197	CALL_3
0x40024cd	      0xe91affffff	                           jmp 0x40023ec	       110	string3.h	FUNCTION_197	CALL_3
0x40024d2	    0x660f1f440000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x40024d8	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x40024db	      0xe800000000	                          call 0x40024e0	       148	string3.h	FUNCTION_201	CALL_3
0x40024e0	    0x48ba202b2b65	            movabs rdx, 0x746964652b2b20	       148	string3.h	FUNCTION_201	CALL_3
0x40024ea	        0x48891403	              mov qword [rbx + rax], rdx	       148	string3.h	FUNCTION_201	CALL_3
0x40024ee	      0xe9bffeffff	                           jmp 0x40023b2	       148	string3.h	FUNCTION_201	CALL_3
0x40024f3	       0xf1f440000	                   nop dword [rax + rax]	       148	string3.h	FUNCTION_201	CALL_3
0x40024f8	          0x4889df	                            mov rdi, rbx	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x40024fb	      0xe800000000	                          call 0x4002500	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002500	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002504	          0x4189e8	                            mov r8d, ebp	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002507	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x400250c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002513	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002518	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_206	CALL_2
0x400251a	      0xe800000000	                          call 0x400251f	        33	stdio2.h	FUNCTION_206	CALL_2
0x400251f	      0xe9c8feffff	                           jmp 0x40023ec	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002524	         0xf1f4000	                         nop dword [rax]	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002528	      0xba696e0000	                         mov edx, 0x6e69	        33	stdio2.h	FUNCTION_206	CALL_2
0x400252d	    0xc703202b2b62	            mov dword [rbx], 0x622b2b20 	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002533	        0xc6430600	                   mov byte [rbx + 6], 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002537	        0x66895304	                  mov word [rbx + 4], dx	        33	stdio2.h	FUNCTION_206	CALL_2
0x400253b	      0xe967feffff	                           jmp 0x40023a7	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002540	          0x4889df	                            mov rdi, rbx	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002543	      0xe800000000	                          call 0x4002548	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002548	    0x48b9202b2b62	          movabs rcx, 0x643d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x4002552	          0x4801d8	                            add rax, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4002555	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4002558	    0xc74008726f70	          mov dword [rax + 8], 0x706f72 	       110	string3.h	FUNCTION_197	CALL_3
0x400255f	      0xe988feffff	                           jmp 0x40023ec	       110	string3.h	FUNCTION_197	CALL_3
0x4002564	         0xf1f4000	                         nop dword [rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4002568	    0x48b8202b2b6e	          movabs rax, 0x6e69626f6e2b2b20	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002572	        0xc6430800	                   mov byte [rbx + 8], 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002576	          0x488903	                    mov qword [rbx], rax	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002579	      0xe929feffff	                           jmp 0x40023a7	        33	stdio2.h	FUNCTION_206	CALL_2
0x400257e	            0x6690	                                     nop	        33	stdio2.h	FUNCTION_206	CALL_2
0x4002580	            0x31c0	                            xor eax, eax	      6603	eval.c	FUNCTION_115	IF_8
0x4002582	      0xe96ffeffff	                           jmp 0x40023f6	      6603	eval.c	FUNCTION_115	IF_8
0x4002587	          0x4c89e7	                            mov rdi, r12	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x400258a	      0x4889742408	                mov qword [rsp + 8], rsi	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x400258f	      0xe800000000	                          call 0x4002594	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002594	      0x488b742408	                mov rsi, qword [rsp + 8]	      6578	eval.c	FUNCTION_115	IF_1
0x4002599	            0x31c0	                            xor eax, eax	      6579	eval.c	FUNCTION_115	IF_1
0x400259b	    0x488935000000	            mov qword [0x040025a2], rsi 	      6578	eval.c	FUNCTION_115	IF_1
0x40025a2	      0xe94ffeffff	                           jmp 0x40023f6	      6579	eval.c	FUNCTION_115	IF_1
eval_diff	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,7:functions,0	46
0x4008f20	              0x55	                                push rbp	       631	eval.c	FUNCTION_11
0x4008f21	              0x53	                                push rbx	       631	eval.c	FUNCTION_11
0x4008f22	          0x4889f5	                            mov rbp, rsi	       631	eval.c	FUNCTION_11
0x4008f25	          0x4889d3	                            mov rbx, rdx	       631	eval.c	FUNCTION_11
0x4008f28	          0x4889fe	                            mov rsi, rdi	       634	eval.c	FUNCTION_11	CALL_1
0x4008f2b	      0xbaffffffff	                     mov edx, 0xffffffff	       634	eval.c	FUNCTION_11	CALL_1
0x4008f30	        0x4883ec18	                           sub rsp, 0x18	       631	eval.c	FUNCTION_11
0x4008f34	      0xbf11000000	                           mov edi, 0x11	       634	eval.c	FUNCTION_11	CALL_1
0x4008f39	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	eval.c	FUNCTION_11
0x4008f42	      0x4889442408	                mov qword [rsp + 8], rax	       631	eval.c	FUNCTION_11
0x4008f47	            0x31c0	                            xor eax, eax	       631	eval.c	FUNCTION_11
0x4008f49	    0xc74424040000	                  mov dword [rsp + 4], 0	       632	eval.c	FUNCTION_11
0x4008f51	      0xe800000000	                          call 0x4008f56	       634	eval.c	FUNCTION_11	CALL_1
0x4008f56	      0xbaffffffff	                     mov edx, 0xffffffff	       635	eval.c	FUNCTION_11	CALL_2
0x4008f5b	          0x4889ee	                            mov rsi, rbp	       635	eval.c	FUNCTION_11	CALL_2
0x4008f5e	      0xbf13000000	                           mov edi, 0x13	       635	eval.c	FUNCTION_11	CALL_2
0x4008f63	      0xe800000000	                          call 0x4008f68	       635	eval.c	FUNCTION_11	CALL_2
0x4008f68	      0xbaffffffff	                     mov edx, 0xffffffff	       636	eval.c	FUNCTION_11	CALL_3
0x4008f6d	          0x4889de	                            mov rsi, rbx	       636	eval.c	FUNCTION_11	CALL_3
0x4008f70	      0xbf12000000	                           mov edi, 0x12	       636	eval.c	FUNCTION_11	CALL_3
0x4008f75	      0xe800000000	                          call 0x4008f7a	       636	eval.c	FUNCTION_11	CALL_3
0x4008f7a	    0x488b3d000000	            mov rdi, qword [0x04008f81] 	       637	eval.c	FUNCTION_11	CALL_4
0x4008f81	      0x488d742404	                      lea rsi, [rsp + 4]	       637	eval.c	FUNCTION_11	CALL_4
0x4008f86	            0x31c9	                            xor ecx, ecx	       637	eval.c	FUNCTION_11	CALL_4
0x4008f88	            0x31d2	                            xor edx, edx	       637	eval.c	FUNCTION_11	CALL_4
0x4008f8a	      0xe800000000	                          call 0x4008f8f	       637	eval.c	FUNCTION_11	CALL_4
0x4008f8f	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008f94	      0xe800000000	                          call 0x4008f99	      6473	eval.c	FUNCTION_109	CALL_1
0x4008f99	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008f9e	    0xc70500000000	               mov dword [0x04008fa8], 2	      6474	eval.c	FUNCTION_109
0x4008fa8	    0x48c705000000	               mov qword [0x04008fb3], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008fb3	      0xe800000000	                          call 0x4008fb8	      6473	eval.c	FUNCTION_109	CALL_1
0x4008fb8	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008fbd	    0xc70500000000	               mov dword [0x04008fc7], 2	      6474	eval.c	FUNCTION_109
0x4008fc7	    0x48c705000000	               mov qword [0x04008fd2], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008fd2	      0xe800000000	                          call 0x4008fd7	      6473	eval.c	FUNCTION_109	CALL_1
0x4008fd7	      0x488b442408	                mov rax, qword [rsp + 8]	       641	eval.c	FUNCTION_11
0x4008fdc	    0x644833042528	                xor rax, qword fs:[0x28]	       641	eval.c	FUNCTION_11
0x4008fe5	    0xc70500000000	               mov dword [0x04008fef], 2	      6474	eval.c	FUNCTION_109
0x4008fef	    0x48c705000000	               mov qword [0x04008ffa], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008ffa	            0x7507	                           jne 0x4009003	       641	eval.c	FUNCTION_11
0x4008ffc	        0x4883c418	                           add rsp, 0x18	       641	eval.c	FUNCTION_11
0x4009000	              0x5b	                                 pop rbx	       641	eval.c	FUNCTION_11
0x4009001	              0x5d	                                 pop rbp	       641	eval.c	FUNCTION_11
0x4009002	              0xc3	                                     ret	       641	eval.c	FUNCTION_11
0x4009003	      0xe800000000	                          call 0x4009008	       641	eval.c	FUNCTION_11
find_tabwin	DO,0:WHILE,0:FOR,0:ELSE,2:IF,4:SWITCH,0:CALL,3:functions,0	39
0x4005470	              0x53	                                push rbx	      8250	eval.c	FUNCTION_156
0x4005471	          0x4889fb	                            mov rbx, rdi	      8250	eval.c	FUNCTION_156
0x4005474	        0x4883ec10	                           sub rsp, 0x10	      8250	eval.c	FUNCTION_156
0x4005478	            0x8b17	                    mov edx, dword [rdi]	      8255	eval.c	FUNCTION_156	IF_1
0x400547a	    0x64488b042528	                mov rax, qword fs:[0x28]	      8250	eval.c	FUNCTION_156
0x4005483	      0x4889442408	                mov qword [rsp + 8], rax	      8250	eval.c	FUNCTION_156
0x4005488	            0x31c0	                            xor eax, eax	      8250	eval.c	FUNCTION_156
0x400548a	    0x488b05000000	            mov rax, qword [0x04005491] 	      8270	eval.c	FUNCTION_156	ELSE_2
0x4005491	            0x85d2	                           test edx, edx	      8255	eval.c	FUNCTION_156	IF_1
0x4005493	            0x741d	                            je 0x40054b2	      8255	eval.c	FUNCTION_156	IF_1
0x4005495	          0x4889f7	                            mov rdi, rsi	      8255	eval.c	FUNCTION_156	IF_1
0x4005498	    0x488b35000000	            mov rsi, qword [0x0400549f] 	      8264	eval.c	FUNCTION_156	IF_1	ELSE_1
0x400549f	            0x8b07	                    mov eax, dword [rdi]	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x40054a1	            0x85c0	                           test eax, eax	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x40054a3	            0x752b	                           jne 0x40054d0	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x40054a5	          0x4885f6	                           test rsi, rsi	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x40054a8	            0x744e	                            je 0x40054f8	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x40054aa	          0x4889df	                            mov rdi, rbx	      8267	eval.c	FUNCTION_156	IF_1	CALL_3
0x40054ad	      0xe800000000	                          call 0x40054b2	      8267	eval.c	FUNCTION_156	IF_1	CALL_3
0x40054b2	      0x488b542408	                mov rdx, qword [rsp + 8]	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054b7	    0x644833142528	                xor rdx, qword fs:[0x28]	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054c0	            0x753a	                           jne 0x40054fc	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054c2	        0x4883c410	                           add rsp, 0x10	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054c6	              0x5b	                                 pop rbx	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054c7	              0xc3	                                     ret	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054c8	     0xf1f84000000	                   nop dword [rax + rax]	      8273	eval.c	FUNCTION_156	ELSE_2
0x40054d0	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x40054d5	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x40054dd	      0xe800000000	                          call 0x40054e2	      6964	eval.c	FUNCTION_124	CALL_1
0x40054e2	          0x4885c0	                           test rax, rax	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x40054e5	            0x7811	                            js 0x40054f8	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x40054e7	            0x89c7	                            mov edi, eax	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x40054e9	      0xe800000000	                          call 0x40054ee	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x40054ee	          0x4889c6	                            mov rsi, rax	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x40054f1	            0xebb2	                           jmp 0x40054a5	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x40054f3	       0xf1f440000	                   nop dword [rax + rax]	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x40054f8	            0x31c0	                            xor eax, eax	      8251	eval.c	FUNCTION_156
0x40054fa	            0xebb6	                           jmp 0x40054b2	      8251	eval.c	FUNCTION_156
0x40054fc	      0xe800000000	                          call 0x4005501	      8273	eval.c	FUNCTION_156	ELSE_2
set_internal_string_var	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,4:functions,0	36
0x4005f40	            0x4154	                                push r12	       410	eval.c	FUNCTION_5
0x4005f42	              0x55	                                push rbp	       410	eval.c	FUNCTION_5
0x4005f43	          0x4989fc	                            mov r12, rdi	       410	eval.c	FUNCTION_5
0x4005f46	              0x53	                                push rbx	       410	eval.c	FUNCTION_5
0x4005f47	          0x4889f7	                            mov rdi, rsi	       414	eval.c	FUNCTION_5	CALL_1
0x4005f4a	      0xe800000000	                          call 0x4005f4f	       414	eval.c	FUNCTION_5	CALL_1
0x4005f4f	          0x4885c0	                           test rax, rax	       415	eval.c	FUNCTION_5	IF_1
0x4005f52	            0x743c	                            je 0x4005f90	       415	eval.c	FUNCTION_5	IF_1
0x4005f54	      0xbf10000000	                           mov edi, 0x10	      6817	eval.c	FUNCTION_119	CALL_1
0x4005f59	          0x4889c5	                            mov rbp, rax	      6817	eval.c	FUNCTION_119	CALL_1
0x4005f5c	      0xe800000000	                          call 0x4005f61	      6817	eval.c	FUNCTION_119	CALL_1
0x4005f61	          0x4885c0	                           test rax, rax	      6831	eval.c	FUNCTION_120	IF_1
0x4005f64	          0x4889c3	                            mov rbx, rax	      6817	eval.c	FUNCTION_119	CALL_1
0x4005f67	            0x742f	                            je 0x4005f98	      6831	eval.c	FUNCTION_120	IF_1
0x4005f69	          0x4c89e7	                            mov rdi, r12	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005f6c	        0x48896808	                mov qword [rax + 8], rbp	      6834	eval.c	FUNCTION_120	IF_1
0x4005f70	    0xc70002000000	                      mov dword [rax], 2	      6833	eval.c	FUNCTION_120	IF_1
0x4005f76	            0x31d2	                            xor edx, edx	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005f78	          0x4889c6	                            mov rsi, rax	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005f7b	      0xe800000000	                          call 0x4005f80	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4005f80	          0x4889df	                            mov rdi, rbx	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005f83	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x4005f84	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x4005f85	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x4005f87	      0xe984caffff	                         jmp sym.free_tv	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005f8c	         0xf1f4000	                         nop dword [rax]	       421	eval.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4005f90	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x4005f91	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x4005f92	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x4005f94	              0xc3	                                     ret	       424	eval.c	FUNCTION_5
0x4005f95	           0xf1f00	                         nop dword [rax]	       424	eval.c	FUNCTION_5
0x4005f98	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x4005f99	          0x4889ef	                            mov rdi, rbp	      6837	eval.c	FUNCTION_120	CALL_2
0x4005f9c	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x4005f9d	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x4005f9f	      0xe900000000	                           jmp 0x4005fa4	      6837	eval.c	FUNCTION_120	CALL_2
var_redir_stop	DO,0:WHILE,0:FOR,0:ELSE,0:IF,4:SWITCH,0:CALL,7:functions,0	77
0x400a5a0	              0x53	                                push rbx	       542	eval.c	FUNCTION_8
0x400a5a1	        0x4883ec20	                           sub rsp, 0x20	       542	eval.c	FUNCTION_8
0x400a5a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       542	eval.c	FUNCTION_8
0x400a5ae	      0x4889442418	             mov qword [rsp + 0x18], rax	       542	eval.c	FUNCTION_8
0x400a5b3	            0x31c0	                            xor eax, eax	       542	eval.c	FUNCTION_8
0x400a5b5	    0x488b05000000	            mov rax, qword [0x0400a5bc] 	       545	eval.c	FUNCTION_8	IF_1
0x400a5bc	    0x483d00000000	                              cmp rax, 0	       545	eval.c	FUNCTION_8	IF_1
0x400a5c2	     0xf8428010000	                            je 0x400a6f0	       545	eval.c	FUNCTION_8	IF_1
0x400a5c8	          0x4885c0	                           test rax, rax	       551	eval.c	FUNCTION_8	IF_2
0x400a5cb	     0xf84d5000000	                            je 0x400a6a6	       551	eval.c	FUNCTION_8	IF_2
0x400a5d1	    0x48833d000000	               cmp qword [0x0400a5d9], 0	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x400a5d9	     0xf8401010000	                            je 0x400a6e0	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x400a5df	            0x31f6	                            xor esi, esi	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x400a5e1	      0xbf00000000	                              mov edi, 0	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x400a5e6	      0xe800000000	                          call 0x400a5eb	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x400a5eb	    0x488b05000000	            mov rax, qword [0x0400a5f2] 	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x400a5f2	    0xc70424020000	                      mov dword [rsp], 2	       557	eval.c	FUNCTION_8	IF_2	IF_3
0x400a5f9	        0x4883ec08	                              sub rsp, 8	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a5fd	    0x488b15000000	            mov rdx, qword [0x0400a604] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a604	    0x488b3d000000	            mov rdi, qword [0x0400a60b] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a60b	            0x31c9	                            xor ecx, ecx	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a60d	          0x4531c9	                            xor r9d, r9d	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a610	          0x4531c0	                            xor r8d, r8d	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a613	            0x31f6	                            xor esi, esi	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a615	      0x4889442410	             mov qword [rsp + 0x10], rax	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x400a61a	            0x6a02	                                  push 2	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a61c	      0xe800000000	                          call 0x400a621	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a621	          0x4885c0	                           test rax, rax	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a624	    0x488905000000	            mov qword [0x0400a62b], rax 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x400a62b	    0x488b1d000000	            mov rbx, qword [0x0400a632] 	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a632	              0x5a	                                 pop rdx	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a633	              0x59	                                 pop rcx	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a634	            0x7423	                            je 0x400a659	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a636	        0x48833b00	                      cmp qword [rbx], 0	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a63a	            0x741d	                            je 0x400a659	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x400a63c	          0x4889df	                            mov rdi, rbx	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a63f	    0x41b800000000	                              mov r8d, 0	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a645	            0x31c9	                            xor ecx, ecx	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a647	          0x4889e2	                            mov rdx, rsp	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a64a	          0x4889c6	                            mov rsi, rax	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a64d	      0xe85eb9ffff	                   call sym.set_var_lval	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a652	    0x488b1d000000	            mov rbx, qword [0x0400a659] 	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400a659	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x400a65d	      0xe800000000	                          call 0x400a662	      2230	eval.c	FUNCTION_45	CALL_1
0x400a662	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400a666	      0xe800000000	                          call 0x400a66b	      2231	eval.c	FUNCTION_45	CALL_2
0x400a66b	    0x488b3d000000	            mov rdi, qword [0x0400a672] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a672	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a675	            0x7410	                            je 0x400a687	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a677	      0xe800000000	                          call 0x400a67c	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a67c	    0x48c705000000	               mov qword [0x0400a687], 0	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a687	    0x488b05000000	            mov rax, qword [0x0400a68e] 	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a68e	          0x4885c0	                           test rax, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a691	            0x7413	                            je 0x400a6a6	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a693	          0x4889c7	                            mov rdi, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a696	      0xe800000000	                          call 0x400a69b	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a69b	    0x48c705000000	               mov qword [0x0400a6a6], 0	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x400a6a6	    0x488b3d000000	            mov rdi, qword [0x0400a6ad] 	       573	eval.c	FUNCTION_8	CALL_7
0x400a6ad	          0x4885ff	                           test rdi, rdi	       573	eval.c	FUNCTION_8	CALL_7
0x400a6b0	            0x7410	                            je 0x400a6c2	       573	eval.c	FUNCTION_8	CALL_7
0x400a6b2	      0xe800000000	                          call 0x400a6b7	       573	eval.c	FUNCTION_8	CALL_7
0x400a6b7	    0x48c705000000	               mov qword [0x0400a6c2], 0	       573	eval.c	FUNCTION_8	CALL_7
0x400a6c2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       574	eval.c	FUNCTION_8
0x400a6c7	    0x644833042528	                xor rax, qword fs:[0x28]	       574	eval.c	FUNCTION_8
0x400a6d0	            0x752b	                           jne 0x400a6fd	       574	eval.c	FUNCTION_8
0x400a6d2	        0x4883c420	                           add rsp, 0x20	       574	eval.c	FUNCTION_8
0x400a6d6	              0x5b	                                 pop rbx	       574	eval.c	FUNCTION_8
0x400a6d7	              0xc3	                                     ret	       574	eval.c	FUNCTION_8
0x400a6d8	     0xf1f84000000	                   nop dword [rax + rax]	       574	eval.c	FUNCTION_8
0x400a6e0	    0x488b3d000000	            mov rdi, qword [0x0400a6e7] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a6e7	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a6ea	            0x758b	                           jne 0x400a677	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a6ec	            0xeba5	                           jmp 0x400a693	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a6ee	            0x6690	                                     nop	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x400a6f0	    0x48c705000000	               mov qword [0x0400a6fb], 0	       547	eval.c	FUNCTION_8	IF_1
0x400a6fb	            0xebc5	                           jmp 0x400a6c2	       547	eval.c	FUNCTION_8	IF_1
0x400a6fd	      0xe800000000	                          call 0x400a702	       574	eval.c	FUNCTION_8
eval6	DO,0:WHILE,0:FOR,1:ELSE,15:IF,23:SWITCH,0:CALL,9:functions,0	169
0x400d560	            0x4157	                                push r15	      3810	eval.c	FUNCTION_69
0x400d562	            0x4156	                                push r14	      3810	eval.c	FUNCTION_69
0x400d564	            0x4155	                                push r13	      3810	eval.c	FUNCTION_69
0x400d566	            0x4154	                                push r12	      3810	eval.c	FUNCTION_69
0x400d568	          0x4189d4	                           mov r12d, edx	      3810	eval.c	FUNCTION_69
0x400d56b	              0x55	                                push rbp	      3810	eval.c	FUNCTION_69
0x400d56c	              0x53	                                push rbx	      3810	eval.c	FUNCTION_69
0x400d56d	          0x4889f5	                            mov rbp, rsi	      3810	eval.c	FUNCTION_69
0x400d570	          0x4889fb	                            mov rbx, rdi	      3810	eval.c	FUNCTION_69
0x400d573	        0x4883ec58	                           sub rsp, 0x58	      3810	eval.c	FUNCTION_69
0x400d577	    0x64488b042528	                mov rax, qword fs:[0x28]	      3810	eval.c	FUNCTION_69
0x400d580	      0x4889442448	             mov qword [rsp + 0x48], rax	      3810	eval.c	FUNCTION_69
0x400d585	            0x31c0	                            xor eax, eax	      3810	eval.c	FUNCTION_69
0x400d587	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      3818	eval.c	FUNCTION_69
0x400d58f	      0xe8bcf2ffff	                          call sym.eval7	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400d594	            0x85c0	                           test eax, eax	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400d596	     0xf84c7000000	                            je 0x400d663	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400d59c	        0x660fefd2	                         pxor xmm2, xmm2	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400d5a0	    0xc74424140000	               mov dword [rsp + 0x14], 0	      3823	eval.c	FUNCTION_69	IF_1	CALL_1
0x400d5a8	    0x49bd00000000	              movabs r13, 0x842000000000	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d5b2	    0xf20f11542408	             movsd qword [rsp + 8], xmm2	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d5b8	     0xf1f84000000	                   nop dword [rax + rax]	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d5c0	          0x488b3b	                    mov rdi, qword [rbx]	      3831	eval.c	FUNCTION_69	FOR_1
0x400d5c3	        0x440fb637	                  movzx r14d, byte [rdi]	      3831	eval.c	FUNCTION_69	FOR_1
0x400d5c7	        0x4180fe2f	                          cmp r14b, 0x2f	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d5cb	          0x4489f0	                           mov eax, r14d	      3831	eval.c	FUNCTION_69	FOR_1
0x400d5ce	            0x7630	                           jbe 0x400d600	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d5d0	    0x41bf01000000	                             mov r15d, 1	      3957	eval.c	FUNCTION_69	ELSE_15
0x400d5d6	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5db	    0x644833142528	                xor rdx, qword fs:[0x28]	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5e4	          0x4489f8	                           mov eax, r15d	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5e7	     0xf851b020000	                           jne 0x400d808	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5ed	        0x4883c458	                           add rsp, 0x58	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f1	              0x5b	                                 pop rbx	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f2	              0x5d	                                 pop rbp	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f3	            0x415c	                                 pop r12	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f5	            0x415d	                                 pop r13	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f7	            0x415e	                                 pop r14	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5f9	            0x415f	                                 pop r15	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5fb	              0xc3	                                     ret	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d5fc	         0xf1f4000	                         nop dword [rax]	      3958	eval.c	FUNCTION_69	ELSE_15
0x400d600	        0x490fa3c5	                             bt r13, rax	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d604	            0x73ca	                           jae 0x400d5d0	      3832	eval.c	FUNCTION_69	FOR_1	IF_2
0x400d606	          0x4585e4	                         test r12d, r12d	      3835	eval.c	FUNCTION_69	FOR_1	IF_3
0x400d609	            0x747d	                            je 0x400d688	      3835	eval.c	FUNCTION_69	FOR_1	IF_3
0x400d60b	        0x837d0007	                      cmp dword [rbp], 7	      3838	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d60f	            0x755f	                           jne 0x400d670	      3838	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d611	      0xf20f104d08	            movsd xmm1, qword [rbp + 8] 	      3840	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d616	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3841	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d61e	    0x48c704240000	                      mov qword [rsp], 0	      3842	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d626	    0xf20f114c2408	             movsd qword [rsp + 8], xmm1	      3840	eval.c	FUNCTION_69	FOR_1	IF_3	IF_4
0x400d62c	          0x4889ef	                            mov rdi, rbp	      3847	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_3
0x400d62f	      0xe800000000	                          call 0x400d634	      3847	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_3
0x400d634	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400d639	          0x4585ff	                         test r15d, r15d	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400d63c	            0x7525	                           jne 0x400d663	      3848	eval.c	FUNCTION_69	FOR_1	IF_3	IF_5
0x400d63e	          0x488b03	                    mov rax, qword [rbx]	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d641	        0x488d7801	                      lea rdi, [rax + 1]	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d645	      0xe800000000	                          call 0x400d64a	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d64a	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d64f	            0x31c9	                            xor ecx, ecx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d651	          0x488903	                    mov qword [rbx], rax	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d654	          0x4489e2	                           mov edx, r12d	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d657	          0x4889df	                            mov rdi, rbx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d65a	      0xe8f1f1ffff	                          call sym.eval7	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d65f	            0x85c0	                           test eax, eax	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d661	            0x754d	                           jne 0x400d6b0	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d663	          0x4531ff	                          xor r15d, r15d	      3824	eval.c	FUNCTION_69	IF_1
0x400d666	      0xe96bffffff	                           jmp 0x400d5d6	      3824	eval.c	FUNCTION_69	IF_1
0x400d66b	       0xf1f440000	                   nop dword [rax + rax]	      3824	eval.c	FUNCTION_69	IF_1
0x400d670	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d675	          0x4889ef	                            mov rdi, rbp	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d678	      0xe800000000	                          call 0x400d67d	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d67d	        0x48890424	                    mov qword [rsp], rax	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d681	            0xeba9	                           jmp 0x400d62c	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d683	       0xf1f440000	                   nop dword [rax + rax]	      3846	eval.c	FUNCTION_69	FOR_1	IF_3	CALL_2
0x400d688	        0x4883c701	                              add rdi, 1	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d68c	      0xe800000000	                          call 0x400d691	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d691	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d696	            0x31c9	                            xor ecx, ecx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d698	            0x31d2	                            xor edx, edx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d69a	          0x488903	                    mov qword [rbx], rax	      3857	eval.c	FUNCTION_69	FOR_1	CALL_4
0x400d69d	          0x4889df	                            mov rdi, rbx	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6a0	      0xe8abf1ffff	                          call sym.eval7	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6a5	            0x85c0	                           test eax, eax	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6a7	     0xf8513ffffff	                           jne 0x400d5c0	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6ad	            0xebb4	                           jmp 0x400d663	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6af	              0x90	                                     nop	      3858	eval.c	FUNCTION_69	FOR_1	IF_6	CALL_5
0x400d6b0	      0x837c243007	               cmp dword [rsp + 0x30], 7	      3864	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400d6b5	     0xf8485000000	                            je 0x400d740	      3864	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400d6bb	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400d6c0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400d6c5	      0xe800000000	                          call 0x400d6ca	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400d6ca	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3878	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_7
0x400d6cf	      0x4889442418	             mov qword [rsp + 0x18], rax	      3877	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_6
0x400d6d4	      0xe800000000	                          call 0x400d6d9	      3878	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	CALL_7
0x400d6d9	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      3879	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400d6dd	            0x85d2	                           test edx, edx	      3879	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400d6df	     0xf857effffff	                           jne 0x400d663	      3879	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_10
0x400d6e5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6e9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6ee	            0x85c0	                           test eax, eax	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6f0	            0x746e	                            je 0x400d760	      3882	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6f2	        0x660fefc0	                         pxor xmm0, xmm0	      3883	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6f6	      0xf2480f2ac1	                      cvtsi2sd xmm0, rcx	      3883	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_3	IF_11
0x400d6fb	        0x4183fe2a	                          cmp r14d, 0x2a	      3894	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400d6ff	     0xf8496000000	                            je 0x400d79b	      3894	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400d705	        0x4183fe2f	                          cmp r14d, 0x2f	      3896	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400d709	     0xf85db000000	                           jne 0x400d7ea	      3896	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400d70f	    0xf20f105c2408	            movsd xmm3, qword [rsp + 8] 	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400d715	        0xf20f5ed8	                        divsd xmm3, xmm0	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400d719	    0xf20f115c2408	             movsd qword [rsp + 8], xmm3	      3914	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_4	IF_14
0x400d71f	    0xf20f10642408	            movsd xmm4, qword [rsp + 8] 	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d725	    0xc74500070000	                      mov dword [rbp], 7	      3922	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d72c	    0xc74424140100	               mov dword [rsp + 0x14], 1	      3922	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d734	      0xf20f116508	            movsd qword [rbp + 8], xmm4 	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d739	      0xe982feffff	                           jmp 0x400d5c0	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d73e	            0x6690	                                     nop	      3923	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12
0x400d740	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      3866	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d744	            0x85c9	                           test ecx, ecx	      3866	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d746	            0x7510	                           jne 0x400d758	      3866	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d748	        0x660fefed	                         pxor xmm5, xmm5	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d74c	    0xf2480f2a2c24	              cvtsi2sd xmm5, qword [rsp]	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d752	    0xf20f116c2408	             movsd qword [rsp + 8], xmm5	      3868	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8	IF_9
0x400d758	    0xf20f10442438	         movsd xmm0, qword [rsp + 0x38] 	      3871	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400d75e	            0xeb9b	                           jmp 0x400d6fb	      3871	eval.c	FUNCTION_69	FOR_1	IF_7	IF_8
0x400d760	        0x4183fe2a	                          cmp r14d, 0x2a	      3928	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400d764	            0x742b	                            je 0x400d791	      3928	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400d766	        0x4183fe2f	                          cmp r14d, 0x2f	      3930	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19
0x400d76a	            0x7440	                            je 0x400d7ac	      3930	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19
0x400d76c	            0x31f6	                            xor esi, esi	      3947	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400d76e	          0x4885c9	                           test rcx, rcx	      3946	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400d771	            0x7510	                           jne 0x400d783	      3946	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	IF_23
0x400d773	    0xc74500010000	                      mov dword [rbp], 1	      3951	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400d77a	        0x48897508	                mov qword [rbp + 8], rsi	      3952	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400d77e	      0xe93dfeffff	                           jmp 0x400d5c0	      3952	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_15
0x400d783	        0x488b0424	                    mov rax, qword [rsp]	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400d787	            0x4899	                                     cqo	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400d789	          0x48f7f9	                                idiv rcx	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400d78c	          0x4889d6	                            mov rsi, rdx	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400d78f	            0xebe2	                           jmp 0x400d773	      3949	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_14	ELSE_15
0x400d791	        0x488b3424	                    mov rsi, qword [rsp]	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400d795	        0x480faff1	                           imul rsi, rcx	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400d799	            0xebd8	                           jmp 0x400d773	      3929	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	IF_18
0x400d79b	    0xf20f59442408	             mulsd xmm0, qword [rsp + 8]	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400d7a1	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400d7a7	      0xe973ffffff	                           jmp 0x400d71f	      3895	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	IF_13
0x400d7ac	          0x4885c9	                           test rcx, rcx	      3932	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20
0x400d7af	            0x752b	                           jne 0x400d7dc	      3932	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20
0x400d7b1	      0x48833c2400	                      cmp qword [rsp], 0	      3934	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400d7b6	    0x48be00000000	          movabs rsi, 0x8000000000000000	      3935	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400d7c0	            0x74b1	                            je 0x400d773	      3934	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	IF_21
0x400d7c2	    0x48be01000000	          movabs rsi, 0x8000000000000001	      3937	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_11	IF_22
0x400d7cc	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	      3937	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_11	IF_22
0x400d7d6	        0x480f49f0	                         cmovns rsi, rax	      3937	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_11	IF_22
0x400d7da	            0xeb97	                           jmp 0x400d773	      3937	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	IF_20	ELSE_11	IF_22
0x400d7dc	        0x488b0424	                    mov rax, qword [rsp]	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400d7e0	            0x4899	                                     cqo	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400d7e2	          0x48f7f9	                                idiv rcx	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400d7e5	          0x4889c6	                            mov rsi, rax	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400d7e8	            0xeb89	                           jmp 0x400d773	      3942	eval.c	FUNCTION_69	FOR_1	IF_7	ELSE_9	ELSE_10	IF_19	ELSE_13
0x400d7ea	            0x31ff	                            xor edi, edi	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d7ec	      0xba05000000	                              mov edx, 5	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d7f1	      0xbe00000000	                              mov esi, 0	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d7f6	      0xe800000000	                          call 0x400d7fb	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d7fb	          0x4889c7	                            mov rdi, rax	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d7fe	      0xe800000000	                          call 0x400d803	      3919	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8	CALL_9
0x400d803	      0xe9cefdffff	                           jmp 0x400d5d6	      3920	eval.c	FUNCTION_69	FOR_1	IF_7	IF_12	ELSE_8
0x400d808	      0xe800000000	                          call 0x400d80d	      3958	eval.c	FUNCTION_69	ELSE_15
reset_v_option_vars	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,3:functions,0	15
0x4006c10	        0x4883ec08	                              sub rsp, 8	      8774	eval.c	FUNCTION_167
0x4006c14	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c19	      0xe800000000	                          call 0x4006c1e	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c1e	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c23	    0xc70500000000	               mov dword [0x04006c2d], 2	      6474	eval.c	FUNCTION_109
0x4006c2d	    0x48c705000000	               mov qword [0x04006c38], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4006c38	      0xe800000000	                          call 0x4006c3d	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c3d	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c42	    0xc70500000000	               mov dword [0x04006c4c], 2	      6474	eval.c	FUNCTION_109
0x4006c4c	    0x48c705000000	               mov qword [0x04006c57], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4006c57	      0xe800000000	                          call 0x4006c5c	      6473	eval.c	FUNCTION_109	CALL_1
0x4006c5c	    0xc70500000000	               mov dword [0x04006c66], 2	      6474	eval.c	FUNCTION_109
0x4006c66	    0x48c705000000	               mov qword [0x04006c71], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4006c71	        0x4883c408	                              add rsp, 8	      8778	eval.c	FUNCTION_167
0x4006c75	              0xc3	                                     ret	      8778	eval.c	FUNCTION_167
eval_to_number	DO,0:WHILE,0:FOR,0:ELSE,1:IF,1:SWITCH,0:CALL,4:functions,0	30
0x40089e0	              0x53	                                push rbx	       883	eval.c	FUNCTION_20
0x40089e1	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       883	eval.c	FUNCTION_20
0x40089e8	        0x4883ec30	                           sub rsp, 0x30	       883	eval.c	FUNCTION_20
0x40089ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       883	eval.c	FUNCTION_20
0x40089f5	      0x4889442428	             mov qword [rsp + 0x28], rax	       883	eval.c	FUNCTION_20
0x40089fa	            0x31c0	                            xor eax, eax	       883	eval.c	FUNCTION_20
0x40089fc	      0xe800000000	                          call 0x4008a01	       886	eval.c	FUNCTION_20	CALL_1
0x4008a01	      0x488d742410	                   lea rsi, [rsp + 0x10]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a06	      0x488d7c2408	                      lea rdi, [rsp + 8]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a0b	      0xba01000000	                              mov edx, 1	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a10	    0x830500000000	               add dword [0x04008a17], 1	       888	eval.c	FUNCTION_20
0x4008a17	      0x4889442408	                mov qword [rsp + 8], rax	       886	eval.c	FUNCTION_20	CALL_1
0x4008a1c	      0xe800000000	                          call 0x4008a21	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a21	            0x85c0	                           test eax, eax	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a23	            0x7419	                            je 0x4008a3e	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x4008a25	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4008a2a	            0x31f6	                            xor esi, esi	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4008a2c	      0xe800000000	                          call 0x4008a31	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4008a31	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x4008a36	          0x4889c3	                            mov rbx, rax	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x4008a39	      0xe800000000	                          call 0x4008a3e	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x4008a3e	    0x832d00000000	               sub dword [0x04008a45], 1	       897	eval.c	FUNCTION_20
0x4008a45	          0x4889d8	                            mov rax, rbx	       900	eval.c	FUNCTION_20
0x4008a48	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       900	eval.c	FUNCTION_20
0x4008a4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       900	eval.c	FUNCTION_20
0x4008a56	            0x7506	                           jne 0x4008a5e	       900	eval.c	FUNCTION_20
0x4008a58	        0x4883c430	                           add rsp, 0x30	       900	eval.c	FUNCTION_20
0x4008a5c	              0x5b	                                 pop rbx	       900	eval.c	FUNCTION_20
0x4008a5d	              0xc3	                                     ret	       900	eval.c	FUNCTION_20
0x4008a5e	      0xe800000000	                          call 0x4008a63	       900	eval.c	FUNCTION_20
list_hashtable_vars	DO,0:WHILE,0:FOR,1:ELSE,0:IF,2:SWITCH,0:CALL,3:functions,0	78
0x4003f30	            0x4157	                                push r15	      1483	eval.c	FUNCTION_35
0x4003f32	            0x4156	                                push r14	      1483	eval.c	FUNCTION_35
0x4003f34	            0x4155	                                push r13	      1483	eval.c	FUNCTION_35
0x4003f36	            0x4154	                                push r12	      1483	eval.c	FUNCTION_35
0x4003f38	              0x55	                                push rbp	      1483	eval.c	FUNCTION_35
0x4003f39	              0x53	                                push rbx	      1483	eval.c	FUNCTION_35
0x4003f3a	        0x4883ec68	                           sub rsp, 0x68	      1483	eval.c	FUNCTION_35
0x4003f3e	        0x4c8b7f20	            mov r15, qword [rdi + 0x20] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f42	    0x64488b042528	                mov rax, qword fs:[0x28]	      1483	eval.c	FUNCTION_35
0x4003f4b	      0x4889442458	             mov qword [rsp + 0x58], rax	      1483	eval.c	FUNCTION_35
0x4003f50	            0x31c0	                            xor eax, eax	      1483	eval.c	FUNCTION_35
0x4003f52	        0x488b4708	                mov rax, qword [rdi + 8]	      1488	eval.c	FUNCTION_35
0x4003f56	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f58	     0xf8eb6000000	                           jle 0x4004014	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f5e	          0x4989f4	                            mov r12, rsi	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f61	            0x89d5	                            mov ebp, edx	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f63	          0x4989cd	                            mov r13, rcx	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f66	          0x4189c6	                           mov r14d, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f69	     0xf1f80000000	                         nop dword [rax]	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f70	    0x8b0500000000	            mov eax, dword [0x04003f76] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f76	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f78	     0xf8596000000	                           jne 0x4004014	      1489	eval.c	FUNCTION_35	FOR_1
0x4003f7e	        0x498b5f08	                mov rbx, qword [r15 + 8]	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003f82	    0x4881fb000000	                              cmp rbx, 0	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003f89	     0xf84a9000000	                            je 0x4004038	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003f8f	          0x4885db	                           test rbx, rbx	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003f92	     0xf84a0000000	                            je 0x4004038	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4003f98	        0x4183ee01	                             sub r14d, 1	      1493	eval.c	FUNCTION_35	FOR_1	IF_1
0x4003f9c	            0x85ed	                           test ebp, ebp	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003f9e	            0x750a	                           jne 0x4003faa	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003fa0	        0x837bef02	               cmp dword [rbx - 0x11], 2	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003fa4	     0xf849e000000	                            je 0x4004048	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4003faa	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fae	    0x8b0500000000	            mov eax, dword [0x04003fb4] 	      5053	eval.c	FUNCTION_80
0x4003fb4	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7464	eval.c	FUNCTION_141	CALL_2
0x4003fb8	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fba	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fbd	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fc3	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fc8	          0x8d4802	                      lea ecx, [rax + 2]	      5053	eval.c	FUNCTION_80
0x4003fcb	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fd0	    0x890d00000000	            mov dword [0x04003fd6], ecx 	      5053	eval.c	FUNCTION_80
0x4003fd6	      0xe800000000	                          call 0x4003fdb	      5742	eval.c	FUNCTION_88	CALL_1
0x4003fdb	              0x5a	                                 pop rdx	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fdc	              0x59	                                 pop rcx	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fdd	          0x4885c0	                           test rax, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fe0	      0xbe00000000	                              mov esi, 0	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fe5	          0x8b53ef	             mov edx, dword [rbx - 0x11]	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fe8	        0x480f44c6	                          cmove rax, rsi	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fec	          0x4c89e7	                            mov rdi, r12	      7465	eval.c	FUNCTION_141	CALL_3
0x4003fef	          0x4d89e8	                             mov r8, r13	      7465	eval.c	FUNCTION_141	CALL_3
0x4003ff2	          0x4889c1	                            mov rcx, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x4003ff5	          0x4889de	                            mov rsi, rbx	      7465	eval.c	FUNCTION_141	CALL_3
0x4003ff8	      0xe8f3c1ffff	                 call sym.list_one_var_a	      7465	eval.c	FUNCTION_141	CALL_3
0x4003ffd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7467	eval.c	FUNCTION_141	CALL_4
0x4004002	      0xe800000000	                          call 0x4004007	      7467	eval.c	FUNCTION_141	CALL_4
0x4004007	        0x4983c710	                           add r15, 0x10	      1489	eval.c	FUNCTION_35	FOR_1
0x400400b	          0x4585f6	                         test r14d, r14d	      1489	eval.c	FUNCTION_35	FOR_1
0x400400e	     0xf855cffffff	                           jne 0x4003f70	      1489	eval.c	FUNCTION_35	FOR_1
0x4004014	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1500	eval.c	FUNCTION_35
0x4004019	    0x644833042528	                xor rax, qword fs:[0x28]	      1500	eval.c	FUNCTION_35
0x4004022	            0x7531	                           jne 0x4004055	      1500	eval.c	FUNCTION_35
0x4004024	        0x4883c468	                           add rsp, 0x68	      1500	eval.c	FUNCTION_35
0x4004028	              0x5b	                                 pop rbx	      1500	eval.c	FUNCTION_35
0x4004029	              0x5d	                                 pop rbp	      1500	eval.c	FUNCTION_35
0x400402a	            0x415c	                                 pop r12	      1500	eval.c	FUNCTION_35
0x400402c	            0x415d	                                 pop r13	      1500	eval.c	FUNCTION_35
0x400402e	            0x415e	                                 pop r14	      1500	eval.c	FUNCTION_35
0x4004030	            0x415f	                                 pop r15	      1500	eval.c	FUNCTION_35
0x4004032	              0xc3	                                     ret	      1500	eval.c	FUNCTION_35
0x4004033	       0xf1f440000	                   nop dword [rax + rax]	      1500	eval.c	FUNCTION_35
0x4004038	        0x4983c710	                           add r15, 0x10	      1489	eval.c	FUNCTION_35	FOR_1
0x400403c	      0xe92fffffff	                           jmp 0x4003f70	      1489	eval.c	FUNCTION_35	FOR_1
0x4004041	     0xf1f80000000	                         nop dword [rax]	      1489	eval.c	FUNCTION_35	FOR_1
0x4004048	      0x48837bf700	                  cmp qword [rbx - 9], 0	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400404d	     0xf8557ffffff	                           jne 0x4003faa	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004053	            0xebb2	                           jmp 0x4004007	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004055	      0xe800000000	                          call 0x400405a	      1500	eval.c	FUNCTION_35
v_exception	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,0:functions,0	8
0x40022d0	          0x4885ff	                           test rdi, rdi	      6538	eval.c	FUNCTION_113	IF_1
0x40022d3	            0x750b	                           jne 0x40022e0	      6538	eval.c	FUNCTION_113	IF_1
0x40022d5	    0x488b05000000	            mov rax, qword [0x040022dc] 	      6539	eval.c	FUNCTION_113	IF_1
0x40022dc	              0xc3	                                     ret	      6539	eval.c	FUNCTION_113	IF_1
0x40022dd	           0xf1f00	                         nop dword [rax]	      6539	eval.c	FUNCTION_113	IF_1
0x40022e0	    0x48893d000000	            mov qword [0x040022e7], rdi 	      6541	eval.c	FUNCTION_113
0x40022e7	            0x31c0	                            xor eax, eax	      6542	eval.c	FUNCTION_113
0x40022e9	              0xc3	                                     ret	      6543	eval.c	FUNCTION_113
filter_map_one	DO,0:WHILE,0:FOR,0:ELSE,1:IF,3:SWITCH,0:CALL,6:functions,0	69
0x4008870	            0x4155	                                push r13	     10191	eval.c	FUNCTION_189
0x4008872	            0x4154	                                push r12	     10191	eval.c	FUNCTION_189
0x4008874	          0x4989cd	                            mov r13, rcx	     10191	eval.c	FUNCTION_189
0x4008877	              0x55	                                push rbp	     10191	eval.c	FUNCTION_189
0x4008878	              0x53	                                push rbx	     10191	eval.c	FUNCTION_189
0x4008879	          0x4889f3	                            mov rbx, rsi	     10191	eval.c	FUNCTION_189
0x400887c	      0xbe00000000	                              mov esi, 0	     10196	eval.c	FUNCTION_189	CALL_1
0x4008881	          0x4889fd	                            mov rbp, rdi	     10191	eval.c	FUNCTION_189
0x4008884	          0x4189d4	                           mov r12d, edx	     10191	eval.c	FUNCTION_189
0x4008887	        0x4883ec68	                           sub rsp, 0x68	     10191	eval.c	FUNCTION_189
0x400888b	    0x64488b042528	                mov rax, qword fs:[0x28]	     10191	eval.c	FUNCTION_189
0x4008894	      0x4889442458	             mov qword [rsp + 0x58], rax	     10191	eval.c	FUNCTION_189
0x4008899	            0x31c0	                            xor eax, eax	     10191	eval.c	FUNCTION_189
0x400889b	      0xe800000000	                          call 0x40088a0	     10196	eval.c	FUNCTION_189	CALL_1
0x40088a0	    0x488b15000000	            mov rdx, qword [0x040088a7] 	     10197	eval.c	FUNCTION_189
0x40088a7	    0x488b05000000	            mov rax, qword [0x040088ae] 	     10197	eval.c	FUNCTION_189
0x40088ae	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088b3	      0x488d742420	                   lea rsi, [rsp + 0x20]	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088b8	          0x4889df	                            mov rdi, rbx	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088bb	            0x31db	                            xor ebx, ebx	     10194	eval.c	FUNCTION_189
0x40088bd	      0x4889542428	             mov qword [rsp + 0x28], rdx	     10197	eval.c	FUNCTION_189
0x40088c2	    0x488b15000000	            mov rdx, qword [0x040088c9] 	     10198	eval.c	FUNCTION_189
0x40088c9	      0x4889442420	             mov qword [rsp + 0x20], rax	     10197	eval.c	FUNCTION_189
0x40088ce	    0x488b05000000	            mov rax, qword [0x040088d5] 	     10198	eval.c	FUNCTION_189
0x40088d5	      0x4889542438	             mov qword [rsp + 0x38], rdx	     10198	eval.c	FUNCTION_189
0x40088da	      0xba02000000	                              mov edx, 2	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088df	      0x4889442430	             mov qword [rsp + 0x30], rax	     10198	eval.c	FUNCTION_189
0x40088e4	      0xe887fdffff	               call sym.eval_expr_typval	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088e9	            0x85c0	                           test eax, eax	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088eb	            0x743e	                            je 0x400892b	     10199	eval.c	FUNCTION_189	IF_1	CALL_2
0x40088ed	          0x4585e4	                         test r12d, r12d	     10201	eval.c	FUNCTION_189	IF_2
0x40088f0	            0x7566	                           jne 0x4008958	     10201	eval.c	FUNCTION_189	IF_2
0x40088f2	      0x488d74240c	                    lea rsi, [rsp + 0xc]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x40088f7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x40088fc	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     10210	eval.c	FUNCTION_189	ELSE_1
0x4008904	      0xe800000000	                          call 0x4008909	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4008909	          0x4885c0	                           test rax, rax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x400890c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4008911	           0xf94c0	                                 sete al	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4008914	            0x31db	                            xor ebx, ebx	     10220	eval.c	FUNCTION_189
0x4008916	           0xfb6c0	                           movzx eax, al	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4008919	        0x41894500	                    mov dword [r13], eax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x400891d	      0xe800000000	                          call 0x4008922	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4008922	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10220	eval.c	FUNCTION_189
0x4008926	            0x85c0	                           test eax, eax	     10220	eval.c	FUNCTION_189
0x4008928	           0xf94c3	                                 sete bl	     10220	eval.c	FUNCTION_189
0x400892b	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x4008930	      0xe800000000	                          call 0x4008935	     10222	eval.c	FUNCTION_189	CALL_6
0x4008935	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	     10224	eval.c	FUNCTION_189
0x400893a	    0x644833142528	                xor rdx, qword fs:[0x28]	     10224	eval.c	FUNCTION_189
0x4008943	            0x89d8	                            mov eax, ebx	     10224	eval.c	FUNCTION_189
0x4008945	            0x7537	                           jne 0x400897e	     10224	eval.c	FUNCTION_189
0x4008947	        0x4883c468	                           add rsp, 0x68	     10224	eval.c	FUNCTION_189
0x400894b	              0x5b	                                 pop rbx	     10224	eval.c	FUNCTION_189
0x400894c	              0x5d	                                 pop rbp	     10224	eval.c	FUNCTION_189
0x400894d	            0x415c	                                 pop r12	     10224	eval.c	FUNCTION_189
0x400894f	            0x415d	                                 pop r13	     10224	eval.c	FUNCTION_189
0x4008951	              0xc3	                                     ret	     10224	eval.c	FUNCTION_189
0x4008952	    0x660f1f440000	                    nop word [rax + rax]	     10224	eval.c	FUNCTION_189
0x4008958	          0x4889ef	                            mov rdi, rbp	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x400895b	      0xbb01000000	                              mov ebx, 1	     10220	eval.c	FUNCTION_189
0x4008960	      0xe800000000	                          call 0x4008965	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4008965	      0xc644241400	                mov byte [rsp + 0x14], 0	     10205	eval.c	FUNCTION_189	IF_2
0x400896a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	     10206	eval.c	FUNCTION_189	IF_2
0x400896f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10206	eval.c	FUNCTION_189	IF_2
0x4008974	        0x48895508	                mov qword [rbp + 8], rdx	     10206	eval.c	FUNCTION_189	IF_2
0x4008978	        0x48894500	                    mov qword [rbp], rax	     10206	eval.c	FUNCTION_189	IF_2
0x400897c	            0xebad	                           jmp 0x400892b	     10206	eval.c	FUNCTION_189	IF_2
0x400897e	      0xe800000000	                          call 0x4008983	     10224	eval.c	FUNCTION_189
set_vim_var_dict	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,2:functions,0	25
0x4002cb0	              0x55	                                push rbp	      6501	eval.c	FUNCTION_111
0x4002cb1	              0x53	                                push rbx	      6501	eval.c	FUNCTION_111
0x4002cb2	          0x4863df	                         movsxd rbx, edi	      6502	eval.c	FUNCTION_111	CALL_1
0x4002cb5	    0x488d04dd0000	                        lea rax, [rbx*8]	      6502	eval.c	FUNCTION_111	CALL_1
0x4002cbd	        0x48c1e306	                              shl rbx, 6	      6502	eval.c	FUNCTION_111	CALL_1
0x4002cc1	          0x4889f5	                            mov rbp, rsi	      6501	eval.c	FUNCTION_111
0x4002cc4	        0x4883ec08	                              sub rsp, 8	      6501	eval.c	FUNCTION_111
0x4002cc8	          0x4829c3	                            sub rbx, rax	      6502	eval.c	FUNCTION_111	CALL_1
0x4002ccb	    0x488dbb000000	                          lea rdi, [rbx]	      6502	eval.c	FUNCTION_111	CALL_1
0x4002cd2	      0xe800000000	                          call 0x4002cd7	      6502	eval.c	FUNCTION_111	CALL_1
0x4002cd7	          0x4885ed	                           test rbp, rbp	      6505	eval.c	FUNCTION_111	IF_1
0x4002cda	    0xc78300000000	                      mov dword [rbx], 6	      6503	eval.c	FUNCTION_111
0x4002ce4	    0x4889ab000000	                    mov qword [rbx], rbp	      6504	eval.c	FUNCTION_111
0x4002ceb	            0x7413	                            je 0x4002d00	      6505	eval.c	FUNCTION_111	IF_1
0x4002ced	        0x83450401	                  add dword [rbp + 4], 1	      6507	eval.c	FUNCTION_111	IF_1
0x4002cf1	        0x4883c408	                              add rsp, 8	      6510	eval.c	FUNCTION_111
0x4002cf5	          0x4889ef	                            mov rdi, rbp	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x4002cf8	              0x5b	                                 pop rbx	      6510	eval.c	FUNCTION_111
0x4002cf9	              0x5d	                                 pop rbp	      6510	eval.c	FUNCTION_111
0x4002cfa	      0xe900000000	                           jmp 0x4002cff	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x4002cff	              0x90	                                     nop	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x4002d00	        0x4883c408	                              add rsp, 8	      6510	eval.c	FUNCTION_111
0x4002d04	              0x5b	                                 pop rbx	      6510	eval.c	FUNCTION_111
0x4002d05	              0x5d	                                 pop rbp	      6510	eval.c	FUNCTION_111
0x4002d06	              0xc3	                                     ret	      6510	eval.c	FUNCTION_111
list2fpos	DO,0:WHILE,0:FOR,0:ELSE,1:IF,8:SWITCH,0:CALL,5:functions,0	83
0x4001c60	            0x4156	                                push r14	      6028	eval.c	FUNCTION_94
0x4001c62	            0x4155	                                push r13	      6028	eval.c	FUNCTION_94
0x4001c64	            0x4154	                                push r12	      6028	eval.c	FUNCTION_94
0x4001c66	              0x55	                                push rbp	      6028	eval.c	FUNCTION_94
0x4001c67	              0x53	                                push rbx	      6028	eval.c	FUNCTION_94
0x4001c68	          0x833f05	                      cmp dword [rdi], 5	      6036	eval.c	FUNCTION_94	IF_1
0x4001c6b	        0x488b5f08	                mov rbx, qword [rdi + 8]	      6029	eval.c	FUNCTION_94
0x4001c6f	     0xf85cb000000	                           jne 0x4001d40	      6036	eval.c	FUNCTION_94	IF_1
0x4001c75	          0x4885db	                           test rbx, rbx	      6036	eval.c	FUNCTION_94	IF_1
0x4001c78	     0xf84c2000000	                            je 0x4001d40	      6036	eval.c	FUNCTION_94	IF_1
0x4001c7e	          0x4885d2	                           test rdx, rdx	      6037	eval.c	FUNCTION_94	IF_1
0x4001c81	          0x4989cc	                            mov r12, rcx	      6037	eval.c	FUNCTION_94	IF_1
0x4001c84	          0x4889d5	                            mov rbp, rdx	      6037	eval.c	FUNCTION_94	IF_1
0x4001c87	          0x4989f5	                            mov r13, rsi	      6037	eval.c	FUNCTION_94	IF_1
0x4001c8a	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      6037	eval.c	FUNCTION_94	IF_1
0x4001c8d	     0xf84a5000000	                            je 0x4001d38	      6037	eval.c	FUNCTION_94	IF_1
0x4001c93	          0x83f802	                              cmp eax, 2	      6037	eval.c	FUNCTION_94	IF_1
0x4001c96	     0xf8ea4000000	                           jle 0x4001d40	      6037	eval.c	FUNCTION_94	IF_1
0x4001c9c	          0x83f805	                              cmp eax, 5	      6038	eval.c	FUNCTION_94	IF_1
0x4001c9f	     0xf8f9b000000	                            jg 0x4001d40	      6038	eval.c	FUNCTION_94	IF_1
0x4001ca5	            0x31d2	                            xor edx, edx	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001ca7	            0x31f6	                            xor esi, esi	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001ca9	          0x4889df	                            mov rdi, rbx	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001cac	      0xe800000000	                          call 0x4001cb1	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001cb1	          0x4885c0	                           test rax, rax	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x4001cb4	     0xf8886000000	                            js 0x4001d40	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x4001cba	     0xf8490000000	                            je 0x4001d50	      6046	eval.c	FUNCTION_94	IF_2	IF_4
0x4001cc0	          0x894500	                    mov dword [rbp], eax	      6048	eval.c	FUNCTION_94	IF_2
0x4001cc3	    0x41be01000000	                             mov r14d, 1	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x4001cc9	      0xbd02000000	                              mov ebp, 2	      6048	eval.c	FUNCTION_94	IF_2
0x4001cce	            0x31d2	                            xor edx, edx	      6051	eval.c	FUNCTION_94	CALL_2
0x4001cd0	          0x4c89f6	                            mov rsi, r14	      6051	eval.c	FUNCTION_94	CALL_2
0x4001cd3	          0x4889df	                            mov rdi, rbx	      6051	eval.c	FUNCTION_94	CALL_2
0x4001cd6	      0xe800000000	                          call 0x4001cdb	      6051	eval.c	FUNCTION_94	CALL_2
0x4001cdb	          0x4885c0	                           test rax, rax	      6052	eval.c	FUNCTION_94	IF_5
0x4001cde	            0x7860	                            js 0x4001d40	      6052	eval.c	FUNCTION_94	IF_5
0x4001ce0	            0x31d2	                            xor edx, edx	      6056	eval.c	FUNCTION_94	CALL_3
0x4001ce2	        0x49894500	                    mov qword [r13], rax	      6054	eval.c	FUNCTION_94
0x4001ce6	          0x4889ee	                            mov rsi, rbp	      6056	eval.c	FUNCTION_94	CALL_3
0x4001ce9	          0x4889df	                            mov rdi, rbx	      6056	eval.c	FUNCTION_94	CALL_3
0x4001cec	      0xe800000000	                          call 0x4001cf1	      6056	eval.c	FUNCTION_94	CALL_3
0x4001cf1	          0x4885c0	                           test rax, rax	      6057	eval.c	FUNCTION_94	IF_6
0x4001cf4	            0x784a	                            js 0x4001d40	      6057	eval.c	FUNCTION_94	IF_6
0x4001cf6	        0x498d7602	                      lea rsi, [r14 + 2]	      6062	eval.c	FUNCTION_94	CALL_4
0x4001cfa	            0x31d2	                            xor edx, edx	      6062	eval.c	FUNCTION_94	CALL_4
0x4001cfc	        0x41894508	                mov dword [r13 + 8], eax	      6059	eval.c	FUNCTION_94
0x4001d00	          0x4889df	                            mov rdi, rbx	      6062	eval.c	FUNCTION_94	CALL_4
0x4001d03	      0xbd01000000	                              mov ebp, 1	      6072	eval.c	FUNCTION_94
0x4001d08	      0xe800000000	                          call 0x4001d0d	      6062	eval.c	FUNCTION_94	CALL_4
0x4001d0d	      0xba00000000	                              mov edx, 0	      6064	eval.c	FUNCTION_94	IF_7
0x4001d12	          0x4885c0	                           test rax, rax	      6064	eval.c	FUNCTION_94	IF_7
0x4001d15	           0xf48c2	                          cmovs eax, edx	      6064	eval.c	FUNCTION_94	IF_7
0x4001d18	          0x4d85e4	                           test r12, r12	      6069	eval.c	FUNCTION_94	IF_8
0x4001d1b	        0x4189450c	              mov dword [r13 + 0xc], eax	      6064	eval.c	FUNCTION_94	IF_7
0x4001d1f	            0x7421	                            je 0x4001d42	      6069	eval.c	FUNCTION_94	IF_8
0x4001d21	        0x498d7603	                      lea rsi, [r14 + 3]	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d25	            0x31d2	                            xor edx, edx	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d27	          0x4889df	                            mov rdi, rbx	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d2a	      0xe800000000	                          call 0x4001d2f	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d2f	        0x41890424	                    mov dword [r12], eax	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d33	            0xeb0d	                           jmp 0x4001d42	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d35	           0xf1f00	                         nop dword [rax]	      6070	eval.c	FUNCTION_94	CALL_5
0x4001d38	          0x83f801	                              cmp eax, 1	      6037	eval.c	FUNCTION_94	IF_1
0x4001d3b	            0x7f2b	                            jg 0x4001d68	      6037	eval.c	FUNCTION_94	IF_1
0x4001d3d	           0xf1f00	                         nop dword [rax]	      6037	eval.c	FUNCTION_94	IF_1
0x4001d40	            0x31ed	                            xor ebp, ebp	      6039	eval.c	FUNCTION_94	IF_1
0x4001d42	              0x5b	                                 pop rbx	      6073	eval.c	FUNCTION_94
0x4001d43	            0x89e8	                            mov eax, ebp	      6073	eval.c	FUNCTION_94
0x4001d45	              0x5d	                                 pop rbp	      6073	eval.c	FUNCTION_94
0x4001d46	            0x415c	                                 pop r12	      6073	eval.c	FUNCTION_94
0x4001d48	            0x415d	                                 pop r13	      6073	eval.c	FUNCTION_94
0x4001d4a	            0x415e	                                 pop r14	      6073	eval.c	FUNCTION_94
0x4001d4c	              0xc3	                                     ret	      6073	eval.c	FUNCTION_94
0x4001d4d	           0xf1f00	                         nop dword [rax]	      6073	eval.c	FUNCTION_94
0x4001d50	    0x488b05000000	            mov rax, qword [0x04001d57] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001d57	    0x486380b80000	         movsxd rax, dword [rax + 0xb8] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001d5e	      0xe95dffffff	                           jmp 0x4001cc0	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001d63	       0xf1f440000	                   nop dword [rax + rax]	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4001d68	          0x83f804	                              cmp eax, 4	      6038	eval.c	FUNCTION_94	IF_1
0x4001d6b	            0x7fd3	                            jg 0x4001d40	      6038	eval.c	FUNCTION_94	IF_1
0x4001d6d	      0xbd01000000	                              mov ebp, 1	      6038	eval.c	FUNCTION_94	IF_1
0x4001d72	          0x4531f6	                          xor r14d, r14d	      6030	eval.c	FUNCTION_94
0x4001d75	      0xe954ffffff	                           jmp 0x4001cce	      6030	eval.c	FUNCTION_94
eval_to_string_skip	DO,0:WHILE,0:FOR,0:ELSE,1:IF,3:SWITCH,0:CALL,4:functions,0	42
0x40090f0	              0x53	                                push rbx	       769	eval.c	FUNCTION_16
0x40090f1	        0x4883ec20	                           sub rsp, 0x20	       769	eval.c	FUNCTION_16
0x40090f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	eval.c	FUNCTION_16
0x40090fe	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	eval.c	FUNCTION_16
0x4009103	            0x31c0	                            xor eax, eax	       769	eval.c	FUNCTION_16
0x4009105	            0x85d2	                           test edx, edx	       773	eval.c	FUNCTION_16	IF_1
0x4009107	            0x7557	                           jne 0x4009160	       773	eval.c	FUNCTION_16	IF_1
0x4009109	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400910c	      0xb901000000	                              mov ecx, 1	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009111	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009114	      0xe800000000	                          call 0x4009119	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009119	            0x85c0	                           test eax, eax	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400911b	            0x7467	                            je 0x4009184	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400911d	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4009122	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x4009125	      0xe800000000	                          call 0x400912a	      7085	eval.c	FUNCTION_128	CALL_1
0x400912a	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x400912f	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4009132	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x4009136	      0xe800000000	                          call 0x400913b	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x400913b	          0x4889e7	                            mov rdi, rsp	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x400913e	          0x4889c3	                            mov rbx, rax	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x4009141	      0xe800000000	                          call 0x4009146	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x4009146	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       786	eval.c	FUNCTION_16
0x400914b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       786	eval.c	FUNCTION_16
0x4009154	          0x4889d8	                            mov rax, rbx	       786	eval.c	FUNCTION_16
0x4009157	            0x7526	                           jne 0x400917f	       786	eval.c	FUNCTION_16
0x4009159	        0x4883c420	                           add rsp, 0x20	       786	eval.c	FUNCTION_16
0x400915d	              0x5b	                                 pop rbx	       786	eval.c	FUNCTION_16
0x400915e	              0xc3	                                     ret	       786	eval.c	FUNCTION_16
0x400915f	              0x90	                                     nop	       786	eval.c	FUNCTION_16
0x4009160	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009163	            0x31c9	                            xor ecx, ecx	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009165	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009168	    0x830500000000	               add dword [0x0400916f], 1	       774	eval.c	FUNCTION_16	IF_1
0x400916f	            0x31db	                            xor ebx, ebx	       783	eval.c	FUNCTION_16	IF_3
0x4009171	      0xe800000000	                          call 0x4009176	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x4009176	    0x832d00000000	               sub dword [0x0400917d], 1	       783	eval.c	FUNCTION_16	IF_3
0x400917d	            0xebc7	                           jmp 0x4009146	       783	eval.c	FUNCTION_16	IF_3
0x400917f	      0xe800000000	                          call 0x4009184	       786	eval.c	FUNCTION_16
0x4009184	            0x31db	                            xor ebx, ebx	       776	eval.c	FUNCTION_16	IF_2
0x4009186	            0xebbe	                           jmp 0x4009146	       776	eval.c	FUNCTION_16	IF_2
free_tv	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,1:CALL,8:functions,0	53
0x4002a10	          0x4885ff	                           test rdi, rdi	      6847	eval.c	FUNCTION_121	IF_1
0x4002a13	     0xf84b7000000	                            je 0x4002ad0	      6847	eval.c	FUNCTION_121	IF_1
0x4002a19	              0x53	                                push rbx	      6846	eval.c	FUNCTION_121
0x4002a1a	          0x833f0a	                    cmp dword [rdi], 0xa	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a1d	          0x4889fb	                            mov rbx, rdi	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a20	            0x7717	                            ja 0x4002a39	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a22	            0x8b07	                    mov eax, dword [rdi]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a24	    0xff24c5000000	                       jmp qword [rax*8]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a2b	       0xf1f440000	                   nop dword [rax + rax]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4002a30	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x4002a34	      0xe800000000	                          call 0x4002a39	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x4002a39	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a3c	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x4002a3d	      0xe900000000	                           jmp 0x4002a42	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a42	    0x660f1f440000	                    nop word [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a48	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x4002a4c	      0xe800000000	                          call 0x4002a51	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x4002a51	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x4002a55	      0xe800000000	                          call 0x4002a5a	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x4002a5a	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a5d	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x4002a5e	      0xe900000000	                           jmp 0x4002a63	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a63	       0xf1f440000	                   nop dword [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a68	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x4002a6c	      0xe800000000	                          call 0x4002a71	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x4002a71	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a74	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x4002a75	      0xe900000000	                           jmp 0x4002a7a	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a7a	    0x660f1f440000	                    nop word [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002a80	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6858	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_3
0x4002a84	          0x4885ff	                           test rdi, rdi	      4893	eval.c	FUNCTION_77	IF_1
0x4002a87	            0x74b0	                            je 0x4002a39	      4893	eval.c	FUNCTION_77	IF_1
0x4002a89	            0x8b07	                    mov eax, dword [rdi]	      4893	eval.c	FUNCTION_77	IF_1
0x4002a8b	          0x83e801	                              sub eax, 1	      4893	eval.c	FUNCTION_77	IF_1
0x4002a8e	            0x85c0	                           test eax, eax	      4893	eval.c	FUNCTION_77	IF_1
0x4002a90	            0x8907	                    mov dword [rdi], eax	      4893	eval.c	FUNCTION_77	IF_1
0x4002a92	            0x7fa5	                            jg 0x4002a39	      4893	eval.c	FUNCTION_77	IF_1
0x4002a94	      0xe8c7feffff	                   call sym.partial_free	      4894	eval.c	FUNCTION_77	CALL_1
0x4002a99	            0xeb9e	                           jmp 0x4002a39	      4894	eval.c	FUNCTION_77	CALL_1
0x4002a9b	       0xf1f440000	                   nop dword [rax + rax]	      4894	eval.c	FUNCTION_77	CALL_1
0x4002aa0	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x4002aa4	      0xe800000000	                          call 0x4002aa9	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x4002aa9	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002aac	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x4002aad	      0xe900000000	                           jmp 0x4002ab2	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002ab2	    0x660f1f440000	                    nop word [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002ab8	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x4002abc	      0xe800000000	                          call 0x4002ac1	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x4002ac1	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002ac4	              0x5b	                                 pop rbx	      6884	eval.c	FUNCTION_121
0x4002ac5	      0xe900000000	                           jmp 0x4002aca	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002aca	    0x660f1f440000	                    nop word [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4002ad0	            0xf3c3	                                     ret	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
eval_to_string	DO,0:WHILE,0:FOR,0:ELSE,3:IF,5:SWITCH,0:CALL,10:functions,0	77
0x4009190	              0x53	                                push rbx	       812	eval.c	FUNCTION_18
0x4009191	      0xb901000000	                              mov ecx, 1	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x4009196	            0x89d3	                            mov ebx, edx	       812	eval.c	FUNCTION_18
0x4009198	          0x4889f2	                            mov rdx, rsi	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400919b	        0x4883c480	             add rsp, 0xffffffffffffff80	       812	eval.c	FUNCTION_18
0x400919f	          0x4889e6	                            mov rsi, rsp	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x40091a2	    0x64488b042528	                mov rax, qword fs:[0x28]	       812	eval.c	FUNCTION_18
0x40091ab	      0x4889442478	             mov qword [rsp + 0x78], rax	       812	eval.c	FUNCTION_18
0x40091b0	            0x31c0	                            xor eax, eax	       812	eval.c	FUNCTION_18
0x40091b2	      0xe800000000	                          call 0x40091b7	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x40091b7	            0x85c0	                           test eax, eax	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x40091b9	     0xf8491000000	                            je 0x4009250	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x40091bf	            0x85db	                           test ebx, ebx	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40091c1	            0x754d	                           jne 0x4009210	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40091c3	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40091c8	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x40091cb	      0xe800000000	                          call 0x40091d0	      7085	eval.c	FUNCTION_128	CALL_1
0x40091d0	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x40091d5	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40091d8	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x40091dc	      0xe800000000	                          call 0x40091e1	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x40091e1	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x40091e4	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x40091e7	      0xe800000000	                          call 0x40091ec	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x40091ec	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       849	eval.c	FUNCTION_18
0x40091f1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       849	eval.c	FUNCTION_18
0x40091fa	          0x4889d8	                            mov rax, rbx	       849	eval.c	FUNCTION_18
0x40091fd	     0xf85be000000	                           jne 0x40092c1	       849	eval.c	FUNCTION_18
0x4009203	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       849	eval.c	FUNCTION_18
0x4009207	              0x5b	                                 pop rbx	       849	eval.c	FUNCTION_18
0x4009208	              0xc3	                                     ret	       849	eval.c	FUNCTION_18
0x4009209	     0xf1f80000000	                         nop dword [rax]	       849	eval.c	FUNCTION_18
0x4009210	          0x8b0424	                    mov eax, dword [rsp]	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x4009213	          0x83f805	                              cmp eax, 5	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x4009216	            0x7440	                            je 0x4009258	       824	eval.c	FUNCTION_18	ELSE_1	IF_2
0x4009218	          0x83f807	                              cmp eax, 7	       837	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5
0x400921b	            0x75a6	                           jne 0x40091c3	       837	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5
0x400921d	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x4009223	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x4009228	      0xba00000000	                              mov edx, 0	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x400922d	      0xbe41000000	                           mov esi, 0x41	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x4009232	      0xb801000000	                              mov eax, 1	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x4009237	      0xe800000000	                          call 0x400923c	       839	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_6
0x400923c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x4009241	      0xe800000000	                          call 0x4009246	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x4009246	          0x4889c3	                            mov rbx, rax	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x4009249	            0xeb99	                           jmp 0x40091e4	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x400924b	       0xf1f440000	                   nop dword [rax + rax]	       840	eval.c	FUNCTION_18	ELSE_1	ELSE_2	IF_5	CALL_7
0x4009250	            0x31db	                            xor ebx, ebx	       821	eval.c	FUNCTION_18	IF_1
0x4009252	            0xeb98	                           jmp 0x40091ec	       821	eval.c	FUNCTION_18	IF_1
0x4009254	         0xf1f4000	                         nop dword [rax]	       821	eval.c	FUNCTION_18	IF_1
0x4009258	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x400925d	      0xbe01000000	                              mov esi, 1	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x4009262	      0xba50000000	                           mov edx, 0x50	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x4009267	      0xe800000000	                          call 0x400926c	       826	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_2
0x400926c	      0x488b742408	                mov rsi, qword [rsp + 8]	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4009271	          0x4885f6	                           test rsi, rsi	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4009274	            0x7435	                            je 0x40092ab	       827	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3
0x4009276	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x400927b	          0x4531c9	                            xor r9d, r9d	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x400927e	          0x4531c0	                            xor r8d, r8d	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4009281	      0xb901000000	                              mov ecx, 1	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4009286	      0xba00000000	                              mov edx, 0	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x400928b	      0xe800000000	                          call 0x4009290	       829	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_3
0x4009290	      0x488b442408	                mov rax, qword [rsp + 8]	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x4009295	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x4009298	            0x85c0	                           test eax, eax	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x400929a	            0x7e0f	                           jle 0x40092ab	       830	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	IF_4
0x400929c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40092a1	      0xbe0a000000	                            mov esi, 0xa	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40092a6	      0xe800000000	                          call 0x40092ab	       831	eval.c	FUNCTION_18	ELSE_1	IF_2	IF_3	CALL_4
0x40092ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40092b0	            0x31f6	                            xor esi, esi	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40092b2	      0xe800000000	                          call 0x40092b7	       833	eval.c	FUNCTION_18	ELSE_1	IF_2	CALL_5
0x40092b7	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       834	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40092bc	      0xe923ffffff	                           jmp 0x40091e4	       834	eval.c	FUNCTION_18	ELSE_1	IF_2
0x40092c1	      0xe800000000	                          call 0x40092c6	       849	eval.c	FUNCTION_18
autoload_name	DO,0:WHILE,1:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,7:functions,0	40
0x4005510	              0x55	                                push rbp	      8460	eval.c	FUNCTION_160
0x4005511	              0x53	                                push rbx	      8460	eval.c	FUNCTION_160
0x4005512	          0x4889fd	                            mov rbp, rdi	      8460	eval.c	FUNCTION_160
0x4005515	        0x4883ec08	                              sub rsp, 8	      8460	eval.c	FUNCTION_160
0x4005519	      0xe800000000	                          call 0x400551e	      8465	eval.c	FUNCTION_160	CALL_2
0x400551e	          0x8d780e	                    lea edi, [rax + 0xe]	      8465	eval.c	FUNCTION_160	CALL_2
0x4005521	      0xe800000000	                          call 0x4005526	      8465	eval.c	FUNCTION_160	CALL_2
0x4005526	          0x4885c0	                           test rax, rax	      8466	eval.c	FUNCTION_160	IF_1
0x4005529	            0x746c	                            je 0x4005597	      8466	eval.c	FUNCTION_160	IF_1
0x400552b	          0x4889c3	                            mov rbx, rax	      8466	eval.c	FUNCTION_160	IF_1
0x400552e	    0x48b86175746f	          movabs rax, 0x64616f6c6f747561	       110	string3.h	FUNCTION_197	CALL_3
0x4005538	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_201	CALL_3
0x400553b	        0x488d7b09	                      lea rdi, [rbx + 9]	       148	string3.h	FUNCTION_201	CALL_3
0x400553f	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_197	CALL_3
0x4005542	        0xc643082f	                mov byte [rbx + 8], 0x2f	       110	string3.h	FUNCTION_197	CALL_3
0x4005546	      0xe800000000	                          call 0x400554b	       148	string3.h	FUNCTION_201	CALL_3
0x400554b	      0xbe23000000	                           mov esi, 0x23	      8470	eval.c	FUNCTION_160	CALL_5
0x4005550	          0x4889df	                            mov rdi, rbx	      8470	eval.c	FUNCTION_160	CALL_5
0x4005553	      0xe800000000	                          call 0x4005558	      8470	eval.c	FUNCTION_160	CALL_5
0x4005558	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x400555b	          0xc60000	                       mov byte [rax], 0	      8470	eval.c	FUNCTION_160	CALL_5
0x400555e	      0xe800000000	                          call 0x4005563	       148	string3.h	FUNCTION_201	CALL_3
0x4005563	          0x4801d8	                            add rax, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x4005566	    0xc7002e76696d	            mov dword [rax], 0x6d69762e 	       148	string3.h	FUNCTION_201	CALL_3
0x400556c	        0xc6400400	                   mov byte [rax + 4], 0	       148	string3.h	FUNCTION_201	CALL_3
0x4005570	            0xeb09	                           jmp 0x400557b	       148	string3.h	FUNCTION_201	CALL_3
0x4005572	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_201	CALL_3
0x4005578	          0xc6002f	                    mov byte [rax], 0x2f	      8473	eval.c	FUNCTION_160	WHILE_1
0x400557b	      0xbe23000000	                           mov esi, 0x23	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4005580	          0x4889df	                            mov rdi, rbx	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4005583	      0xe800000000	                          call 0x4005588	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4005588	          0x4885c0	                           test rax, rax	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x400558b	            0x75eb	                           jne 0x4005578	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x400558d	          0x4889d8	                            mov rax, rbx	      8472	eval.c	FUNCTION_160	WHILE_1	CALL_7
0x4005590	        0x4883c408	                              add rsp, 8	      8475	eval.c	FUNCTION_160
0x4005594	              0x5b	                                 pop rbx	      8475	eval.c	FUNCTION_160
0x4005595	              0x5d	                                 pop rbp	      8475	eval.c	FUNCTION_160
0x4005596	              0xc3	                                     ret	      8475	eval.c	FUNCTION_160
0x4005597	            0x31c0	                            xor eax, eax	      8467	eval.c	FUNCTION_160	IF_1
0x4005599	            0xebf5	                           jmp 0x4005590	      8467	eval.c	FUNCTION_160	IF_1
assert_exception	DO,0:WHILE,0:FOR,0:ELSE,1:IF,2:SWITCH,0:CALL,10:functions,0	52
0x4007700	              0x53	                                push rbx	      9007	eval.c	FUNCTION_176
0x4007701	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4007706	          0x4889fb	                            mov rbx, rdi	      9007	eval.c	FUNCTION_176
0x4007709	        0x4883ec20	                           sub rsp, 0x20	      9007	eval.c	FUNCTION_176
0x400770d	    0x64488b042528	                mov rax, qword fs:[0x28]	      9007	eval.c	FUNCTION_176
0x4007716	      0x4889442418	             mov qword [rsp + 0x18], rax	      9007	eval.c	FUNCTION_176
0x400771b	            0x31c0	                            xor eax, eax	      9007	eval.c	FUNCTION_176
0x400771d	      0xe800000000	                          call 0x4007722	      7098	eval.c	FUNCTION_129	CALL_1
0x4007722	    0x488b3d000000	            mov rdi, qword [0x04007729] 	      9011	eval.c	FUNCTION_176	IF_1
0x4007729	          0x4885ff	                           test rdi, rdi	      9011	eval.c	FUNCTION_176	IF_1
0x400772c	            0x747a	                            je 0x40077a8	      9011	eval.c	FUNCTION_176	IF_1
0x400772e	          0x4885c0	                           test rax, rax	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4007731	            0x742d	                            je 0x4007760	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4007733	          0x4889c6	                            mov rsi, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4007736	      0xe800000000	                          call 0x400773b	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x400773b	            0x31d2	                            xor edx, edx	      9029	eval.c	FUNCTION_176
0x400773d	          0x4885c0	                           test rax, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4007740	            0x7426	                            je 0x4007768	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4007742	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9030	eval.c	FUNCTION_176
0x4007747	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9030	eval.c	FUNCTION_176
0x4007750	            0x89d0	                            mov eax, edx	      9030	eval.c	FUNCTION_176
0x4007752	            0x756b	                           jne 0x40077bf	      9030	eval.c	FUNCTION_176
0x4007754	        0x4883c420	                           add rsp, 0x20	      9030	eval.c	FUNCTION_176
0x4007758	              0x5b	                                 pop rbx	      9030	eval.c	FUNCTION_176
0x4007759	              0xc3	                                     ret	      9030	eval.c	FUNCTION_176
0x400775a	    0x660f1f440000	                    nop word [rax + rax]	      9030	eval.c	FUNCTION_176
0x4007760	            0x31d2	                            xor edx, edx	      9029	eval.c	FUNCTION_176
0x4007762	            0xebde	                           jmp 0x4007742	      9029	eval.c	FUNCTION_176
0x4007764	         0xf1f4000	                         nop dword [rax]	      9029	eval.c	FUNCTION_176
0x4007768	          0x4889e7	                            mov rdi, rsp	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x400776b	      0xe800000000	                          call 0x4007770	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x4007770	        0x488d7310	                   lea rsi, [rbx + 0x10]	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4007774	    0x41b904000000	                              mov r9d, 4	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x400777a	    0x41b800000000	                              mov r8d, 0	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4007780	          0x4889d9	                            mov rcx, rbx	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4007783	            0x31d2	                            xor edx, edx	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4007785	          0x4889e7	                            mov rdi, rsp	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4007788	      0xe800000000	                          call 0x400778d	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x400778d	          0x4889e7	                            mov rdi, rsp	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x4007790	      0xe800000000	                          call 0x4007795	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x4007795	          0x4889e7	                            mov rdi, rsp	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x4007798	      0xe800000000	                          call 0x400779d	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x400779d	      0xba01000000	                              mov edx, 1	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x40077a2	            0xeb9e	                           jmp 0x4007742	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x40077a4	         0xf1f4000	                         nop dword [rax]	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x40077a8	          0x4889e7	                            mov rdi, rsp	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x40077ab	      0xe800000000	                          call 0x40077b0	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x40077b0	      0xbe00000000	                              mov esi, 0	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x40077b5	          0x4889e7	                            mov rdi, rsp	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x40077b8	      0xe800000000	                          call 0x40077bd	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x40077bd	            0xebce	                           jmp 0x400778d	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x40077bf	      0xe800000000	                          call 0x40077c4	      9030	eval.c	FUNCTION_176
assert_equal_common	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,5:functions,0	44
0x4007490	            0x4154	                                push r12	      8820	eval.c	FUNCTION_170
0x4007492	              0x55	                                push rbp	      8820	eval.c	FUNCTION_170
0x4007493	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4007497	              0x53	                                push rbx	      8820	eval.c	FUNCTION_170
0x4007498	            0x31c9	                            xor ecx, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x400749a	            0x31d2	                            xor edx, edx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x400749c	          0x4189f4	                           mov r12d, esi	      8820	eval.c	FUNCTION_170
0x400749f	          0x4889ee	                            mov rsi, rbp	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074a2	          0x4889fb	                            mov rbx, rdi	      8820	eval.c	FUNCTION_170
0x40074a5	        0x4883ec20	                           sub rsp, 0x20	      8820	eval.c	FUNCTION_170
0x40074a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      8820	eval.c	FUNCTION_170
0x40074b2	      0x4889442418	             mov qword [rsp + 0x18], rax	      8820	eval.c	FUNCTION_170
0x40074b7	            0x31c0	                            xor eax, eax	      8820	eval.c	FUNCTION_170
0x40074b9	      0xe800000000	                          call 0x40074be	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074be	            0x31c9	                            xor ecx, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074c0	          0x4585e4	                         test r12d, r12d	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074c3	           0xf94c1	                                 sete cl	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074c6	            0x31d2	                            xor edx, edx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074c8	            0x39c8	                            cmp eax, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074ca	            0x7434	                            je 0x4007500	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x40074cc	          0x4889e7	                            mov rdi, rsp	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x40074cf	      0xe800000000	                          call 0x40074d4	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x40074d4	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074d8	            0x31d2	                            xor edx, edx	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074da	          0x4589e1	                           mov r9d, r12d	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074dd	          0x4989e8	                             mov r8, rbp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074e0	          0x4889d9	                            mov rcx, rbx	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074e3	          0x4889e7	                            mov rdi, rsp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074e6	      0xe800000000	                          call 0x40074eb	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x40074eb	          0x4889e7	                            mov rdi, rsp	      8829	eval.c	FUNCTION_170	IF_1	CALL_4
0x40074ee	      0xe800000000	                          call 0x40074f3	      8829	eval.c	FUNCTION_170	IF_1	CALL_4
0x40074f3	          0x4889e7	                            mov rdi, rsp	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x40074f6	      0xe800000000	                          call 0x40074fb	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x40074fb	      0xba01000000	                              mov edx, 1	      8831	eval.c	FUNCTION_170	IF_1
0x4007500	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8834	eval.c	FUNCTION_170
0x4007505	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8834	eval.c	FUNCTION_170
0x400750e	            0x89d0	                            mov eax, edx	      8834	eval.c	FUNCTION_170
0x4007510	            0x7509	                           jne 0x400751b	      8834	eval.c	FUNCTION_170
0x4007512	        0x4883c420	                           add rsp, 0x20	      8834	eval.c	FUNCTION_170
0x4007516	              0x5b	                                 pop rbx	      8834	eval.c	FUNCTION_170
0x4007517	              0x5d	                                 pop rbp	      8834	eval.c	FUNCTION_170
0x4007518	            0x415c	                                 pop r12	      8834	eval.c	FUNCTION_170
0x400751a	              0xc3	                                     ret	      8834	eval.c	FUNCTION_170
0x400751b	      0xe800000000	            call sym.assert_match_common	      8834	eval.c	FUNCTION_170
set_reg_var	DO,0:WHILE,0:FOR,0:ELSE,1:IF,2:SWITCH,0:CALL,1:functions,0	24
0x4002b60	        0x4883ec18	                           sub rsp, 0x18	      6517	eval.c	FUNCTION_112
0x4002b64	    0x64488b042528	                mov rax, qword fs:[0x28]	      6517	eval.c	FUNCTION_112
0x4002b6d	      0x4889442408	                mov qword [rsp + 8], rax	      6517	eval.c	FUNCTION_112
0x4002b72	            0x31c0	                            xor eax, eax	      6517	eval.c	FUNCTION_112
0x4002b74	    0xf7c7dfffffff	                    test edi, 0xffffffdf	      6521	eval.c	FUNCTION_112	IF_1
0x4002b7a	      0xb822000000	                           mov eax, 0x22	      6521	eval.c	FUNCTION_112	IF_1
0x4002b7f	           0xf45c7	                         cmovne eax, edi	      6521	eval.c	FUNCTION_112	IF_1
0x4002b82	        0x88442407	                  mov byte [rsp + 7], al	      6521	eval.c	FUNCTION_112	IF_1
0x4002b86	    0x488b05000000	            mov rax, qword [0x04002b8d] 	      6525	eval.c	FUNCTION_112	IF_2
0x4002b8d	          0x4885c0	                           test rax, rax	      6525	eval.c	FUNCTION_112	IF_2
0x4002b90	            0x7407	                            je 0x4002b99	      6525	eval.c	FUNCTION_112	IF_2
0x4002b92	           0xfb600	                   movzx eax, byte [rax]	      6525	eval.c	FUNCTION_112	IF_2
0x4002b95	            0x39c7	                            cmp edi, eax	      6525	eval.c	FUNCTION_112	IF_2
0x4002b97	            0x7414	                            je 0x4002bad	      6525	eval.c	FUNCTION_112	IF_2
0x4002b99	      0x488d742407	                      lea rsi, [rsp + 7]	      6526	eval.c	FUNCTION_112	CALL_1
0x4002b9e	      0xba01000000	                              mov edx, 1	      6526	eval.c	FUNCTION_112	CALL_1
0x4002ba3	      0xbf1f000000	                           mov edi, 0x1f	      6526	eval.c	FUNCTION_112	CALL_1
0x4002ba8	      0xe800000000	                          call 0x4002bad	      6526	eval.c	FUNCTION_112	CALL_1
0x4002bad	      0x488b442408	                mov rax, qword [rsp + 8]	      6527	eval.c	FUNCTION_112
0x4002bb2	    0x644833042528	                xor rax, qword fs:[0x28]	      6527	eval.c	FUNCTION_112
0x4002bbb	            0x7505	                           jne 0x4002bc2	      6527	eval.c	FUNCTION_112
0x4002bbd	        0x4883c418	                           add rsp, 0x18	      6527	eval.c	FUNCTION_112
0x4002bc1	              0xc3	                                     ret	      6527	eval.c	FUNCTION_112
0x4002bc2	      0xe800000000	                          call 0x4002bc7	      6527	eval.c	FUNCTION_112
free_for_info	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	14
0x40007d0	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x40007d3	              0x53	                                push rbx	      2587	eval.c	FUNCTION_50
0x40007d4	          0x4889fb	                            mov rbx, rdi	      2587	eval.c	FUNCTION_50
0x40007d7	            0x741b	                            je 0x40007f4	      2590	eval.c	FUNCTION_50	IF_1
0x40007d9	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2590	eval.c	FUNCTION_50	IF_1
0x40007dd	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x40007e0	            0x7412	                            je 0x40007f4	      2590	eval.c	FUNCTION_50	IF_1
0x40007e2	        0x488d7308	                      lea rsi, [rbx + 8]	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x40007e6	      0xe800000000	                          call 0x40007eb	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x40007eb	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x40007ef	      0xe800000000	                          call 0x40007f4	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x40007f4	          0x4889df	                            mov rdi, rbx	      2595	eval.c	FUNCTION_50	CALL_3
0x40007f7	              0x5b	                                 pop rbx	      2596	eval.c	FUNCTION_50
0x40007f8	      0xe900000000	                           jmp 0x40007fd	      2595	eval.c	FUNCTION_50	CALL_3
get_id_len	DO,0:WHILE,0:FOR,1:ELSE,0:IF,3:SWITCH,0:CALL,3:functions,0	42
0x4001db0	            0x4154	                                push r12	      6103	eval.c	FUNCTION_96
0x4001db2	              0x55	                                push rbp	      6103	eval.c	FUNCTION_96
0x4001db3	          0x4889fd	                            mov rbp, rdi	      6103	eval.c	FUNCTION_96
0x4001db6	              0x53	                                push rbx	      6103	eval.c	FUNCTION_96
0x4001db7	          0x488b1f	                    mov rbx, qword [rdi]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dba	          0x4989d8	                             mov r8, rbx	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dbd	            0xeb05	                           jmp 0x4001dc4	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dbf	              0x90	                                     nop	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dc0	        0x4883c301	                              add rbx, 1	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dc4	           0xfb63b	                   movzx edi, byte [rbx]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dc7	            0x89fe	                            mov esi, edi	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dc9	      0xe800000000	                          call 0x4001dce	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dce	            0x85c0	                           test eax, eax	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dd0	            0x7413	                            je 0x4001de5	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4001dd2	        0x4080fe3a	                           cmp sil, 0x3a	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001dd6	            0x75e8	                           jne 0x4001dc0	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001dd8	          0x4889d8	                            mov rax, rbx	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001ddb	          0x4c29c0	                             sub rax, r8	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x4001dde	          0x83f801	                              cmp eax, 1	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001de1	            0x742d	                            je 0x4001e10	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001de3	            0x7edb	                           jle 0x4001dc0	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4001de5	            0x31c0	                            xor eax, eax	      6121	eval.c	FUNCTION_96	IF_3
0x4001de7	          0x4c39c3	                             cmp rbx, r8	      6120	eval.c	FUNCTION_96	IF_3
0x4001dea	            0x7415	                            je 0x4001e01	      6120	eval.c	FUNCTION_96	IF_3
0x4001dec	          0x4989dc	                            mov r12, rbx	      6123	eval.c	FUNCTION_96
0x4001def	          0x4889df	                            mov rdi, rbx	      6124	eval.c	FUNCTION_96	CALL_3
0x4001df2	          0x4d29c4	                             sub r12, r8	      6123	eval.c	FUNCTION_96
0x4001df5	      0xe800000000	                          call 0x4001dfa	      6124	eval.c	FUNCTION_96	CALL_3
0x4001dfa	        0x48894500	                    mov qword [rbp], rax	      6124	eval.c	FUNCTION_96	CALL_3
0x4001dfe	          0x4489e0	                           mov eax, r12d	      6126	eval.c	FUNCTION_96
0x4001e01	              0x5b	                                 pop rbx	      6127	eval.c	FUNCTION_96
0x4001e02	              0x5d	                                 pop rbp	      6127	eval.c	FUNCTION_96
0x4001e03	            0x415c	                                 pop r12	      6127	eval.c	FUNCTION_96
0x4001e05	              0xc3	                                     ret	      6127	eval.c	FUNCTION_96
0x4001e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6127	eval.c	FUNCTION_96
0x4001e10	        0x410fb630	                    movzx esi, byte [r8]	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e14	      0xbf00000000	                              mov edi, 0	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e19	      0xe800000000	                          call 0x4001e1e	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e1e	          0x4885c0	                           test rax, rax	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e21	        0x4c8b4500	                     mov r8, qword [rbp]	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e25	            0x7599	                           jne 0x4001dc0	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4001e27	            0xebbc	                           jmp 0x4001de5	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
ex_unletlock	DO,1:WHILE,0:FOR,0:ELSE,1:IF,9:SWITCH,0:CALL,12:functions,0	279
0x400b1d0	            0x4157	                                push r15	      2753	eval.c	FUNCTION_54
0x400b1d2	            0x4156	                                push r14	      2753	eval.c	FUNCTION_54
0x400b1d4	          0x4189d6	                           mov r14d, edx	      2753	eval.c	FUNCTION_54
0x400b1d7	            0x4155	                                push r13	      2753	eval.c	FUNCTION_54
0x400b1d9	            0x4154	                                push r12	      2753	eval.c	FUNCTION_54
0x400b1db	          0x4989fd	                            mov r13, rdi	      2753	eval.c	FUNCTION_54
0x400b1de	              0x55	                                push rbp	      2753	eval.c	FUNCTION_54
0x400b1df	              0x53	                                push rbx	      2753	eval.c	FUNCTION_54
0x400b1e0	          0x4989f4	                            mov r12, rsi	      2753	eval.c	FUNCTION_54
0x400b1e3	            0x31db	                            xor ebx, ebx	      2756	eval.c	FUNCTION_54
0x400b1e5	    0x4881ec880000	                           sub rsp, 0x88	      2753	eval.c	FUNCTION_54
0x400b1ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      2753	eval.c	FUNCTION_54
0x400b1f5	      0x4889442478	             mov qword [rsp + 0x78], rax	      2753	eval.c	FUNCTION_54
0x400b1fa	            0x31c0	                            xor eax, eax	      2753	eval.c	FUNCTION_54
0x400b1fc	         0xf1f4000	                         nop dword [rax]	      2753	eval.c	FUNCTION_54
0x400b200	            0x89d8	                            mov eax, ebx	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b202	          0x4531c0	                            xor r8d, r8d	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b205	        0x410b4530	              or eax, dword [r13 + 0x30]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b209	      0xb901000000	                              mov ecx, 1	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b20e	          0x4c89e7	                            mov rdi, r12	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b211	        0x410f95c0	                               setne r8b	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b215	        0x4883ec08	                              sub rsp, 8	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b219	          0x4531c9	                            xor r9d, r9d	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b21c	            0x6a02	                                  push 2	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b21e	            0x31f6	                            xor esi, esi	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b220	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b225	      0xe800000000	                          call 0x400b22a	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b22a	            0x415b	                                 pop r11	      2764	eval.c	FUNCTION_54	DO_1	IF_1
0x400b22c	            0x415f	                                 pop r15	      2764	eval.c	FUNCTION_54	DO_1	IF_1
0x400b22e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400b234	          0x4889c5	                            mov rbp, rax	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x400b237	      0xb801000000	                              mov eax, 1	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400b23c	           0xf44d8	                          cmove ebx, eax	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x400b23f	          0x4885ed	                           test rbp, rbp	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b242	     0xf84a0010000	                            je 0x400b3e8	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b248	         0xfb67d00	                   movzx edi, byte [rbp]	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b24c	        0x4080ff20	                           cmp dil, 0x20	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b250	            0x740a	                            je 0x400b25c	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b252	        0x4080ff09	                              cmp dil, 9	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b256	     0xf855c010000	                           jne 0x400b3b8	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x400b25c	            0x85db	                           test ebx, ebx	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400b25e	     0xf8524010000	                           jne 0x400b388	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400b264	        0x458b5530	           mov r10d, dword [r13 + 0x30] 	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400b268	          0x4585d2	                         test r10d, r10d	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400b26b	     0xf858f000000	                           jne 0x400b300	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x400b271	        0x418b4d20	            mov ecx, dword [r13 + 0x20] 	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400b275	    0x81f9e2010000	                          cmp ecx, 0x1e2	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400b27b	     0xf84cf000000	                            je 0x400b350	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x400b281	          0x4585f6	                         test r14d, r14d	      2935	eval.c	FUNCTION_57	IF_1
0x400b284	     0xf840f010000	                            je 0x400b399	      2935	eval.c	FUNCTION_57	IF_1
0x400b28a	          0x4531ff	                          xor r15d, r15d	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400b28d	    0x81f9f4000000	                           cmp ecx, 0xf4	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400b293	        0x410f94c7	                               sete r15b	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x400b297	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2938	eval.c	FUNCTION_57	IF_2
0x400b29d	     0xf84ca020000	                            je 0x400b56d	      2938	eval.c	FUNCTION_57	IF_2
0x400b2a3	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400b2a7	            0x85c9	                           test ecx, ecx	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400b2a9	     0xf8401020000	                            je 0x400b4b0	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400b2af	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2965	eval.c	FUNCTION_57	ELSE_4	IF_6
0x400b2b4	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2b7	     0xf84dc000000	                            je 0x400b399	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2bd	           0xf1f00	                         nop dword [rax]	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2c0	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2c4	            0x85d2	                           test edx, edx	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2c6	            0x750c	                           jne 0x400b2d4	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2c8	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2cd	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2d2	            0x7c1f	                            jl 0x400b2f3	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2d4	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400b2d9	          0x4489fa	                           mov edx, r15d	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400b2dc	          0x4489f6	                           mov esi, r14d	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400b2df	      0xe8ac52ffff	                      call sym.item_lock	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x400b2e4	        0x4d8b2424	                    mov r12, qword [r12]	      2971	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2e8	    0x488344244001	               add qword [rsp + 0x40], 1	      2972	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2ee	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2f1	            0x75cd	                           jne 0x400b2c0	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x400b2f3	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b2f7	            0x85c0	                           test eax, eax	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b2f9	     0xf849a000000	                            je 0x400b399	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b2ff	              0x90	                                     nop	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b300	          0x4889ef	                            mov rdi, rbp	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400b303	      0xe800000000	                          call 0x400b308	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400b308	           0xfb638	                   movzx edi, byte [rax]	      2798	eval.c	FUNCTION_54	CALL_11
0x400b30b	          0x4989c4	                            mov r12, rax	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x400b30e	      0xe800000000	                          call 0x400b313	      2798	eval.c	FUNCTION_54	CALL_11
0x400b313	            0x85c0	                           test eax, eax	      2798	eval.c	FUNCTION_54	CALL_11
0x400b315	     0xf84e5feffff	                            je 0x400b200	      2798	eval.c	FUNCTION_54	CALL_11
0x400b31b	          0x4c89e7	                            mov rdi, r12	      2800	eval.c	FUNCTION_54	CALL_12
0x400b31e	      0xe800000000	                          call 0x400b323	      2800	eval.c	FUNCTION_54	CALL_12
0x400b323	        0x49894508	                mov qword [r13 + 8], rax	      2800	eval.c	FUNCTION_54	CALL_12
0x400b327	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      2801	eval.c	FUNCTION_54
0x400b32c	    0x644833042528	                xor rax, qword fs:[0x28]	      2801	eval.c	FUNCTION_54
0x400b335	     0xf85ec020000	                           jne 0x400b627	      2801	eval.c	FUNCTION_54
0x400b33b	    0x4881c4880000	                           add rsp, 0x88	      2801	eval.c	FUNCTION_54
0x400b342	              0x5b	                                 pop rbx	      2801	eval.c	FUNCTION_54
0x400b343	              0x5d	                                 pop rbp	      2801	eval.c	FUNCTION_54
0x400b344	            0x415c	                                 pop r12	      2801	eval.c	FUNCTION_54
0x400b346	            0x415d	                                 pop r13	      2801	eval.c	FUNCTION_54
0x400b348	            0x415e	                                 pop r14	      2801	eval.c	FUNCTION_54
0x400b34a	            0x415f	                                 pop r15	      2801	eval.c	FUNCTION_54
0x400b34c	              0xc3	                                     ret	      2801	eval.c	FUNCTION_54
0x400b34d	           0xf1f00	                         nop dword [rax]	      2801	eval.c	FUNCTION_54
0x400b350	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2812	eval.c	FUNCTION_55	IF_1
0x400b356	     0xf8497020000	                            je 0x400b5f3	      2812	eval.c	FUNCTION_55	IF_1
0x400b35c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b361	          0x4885c0	                           test rax, rax	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b364	     0xf84a6000000	                            je 0x400b410	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b36a	         0xfbe7848	           movsx edi, byte [rax + 0x48] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b36e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b373	            0x31d2	                            xor edx, edx	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b375	      0xe800000000	                          call 0x400b37a	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b37a	            0x85c0	                           test eax, eax	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b37c	     0xf848e000000	                            je 0x400b410	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b382	    0x660f1f440000	                    nop word [rax + rax]	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x400b388	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b38c	      0xbb01000000	                              mov ebx, 1	      2784	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7
0x400b391	            0x85c0	                           test eax, eax	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b393	     0xf8567ffffff	                           jne 0x400b300	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x400b399	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2230	eval.c	FUNCTION_45	CALL_1
0x400b39e	      0xe800000000	                          call 0x400b3a3	      2230	eval.c	FUNCTION_45	CALL_1
0x400b3a3	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400b3a8	      0xe800000000	                          call 0x400b3ad	      2231	eval.c	FUNCTION_45	CALL_2
0x400b3ad	      0xe94effffff	                           jmp 0x400b300	      2231	eval.c	FUNCTION_45	CALL_2
0x400b3b2	    0x660f1f440000	                    nop word [rax + rax]	      2231	eval.c	FUNCTION_45	CALL_2
0x400b3b8	      0xe800000000	                          call 0x400b3bd	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400b3bd	            0x85c0	                           test eax, eax	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400b3bf	     0xf8597feffff	                           jne 0x400b25c	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x400b3c5	            0x31ff	                            xor edi, edi	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3c7	      0xba05000000	                              mov edx, 5	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3cc	      0xbe00000000	                              mov esi, 0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3d1	    0xc70500000000	               mov dword [0x0400b3db], 1	      2771	eval.c	FUNCTION_54	DO_1	IF_2	IF_3
0x400b3db	      0xe800000000	                          call 0x400b3e0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3e0	          0x4889c7	                            mov rdi, rax	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3e3	      0xe800000000	                          call 0x400b3e8	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x400b3e8	        0x410b5d30	              or ebx, dword [r13 + 0x30]	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x400b3ec	     0xf8529ffffff	                           jne 0x400b31b	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x400b3f2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2230	eval.c	FUNCTION_45	CALL_1
0x400b3f7	      0xe800000000	                          call 0x400b3fc	      2230	eval.c	FUNCTION_45	CALL_1
0x400b3fc	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400b401	      0xe800000000	                          call 0x400b406	      2231	eval.c	FUNCTION_45	CALL_2
0x400b406	      0xe910ffffff	                           jmp 0x400b31b	      2231	eval.c	FUNCTION_45	CALL_2
0x400b40b	       0xf1f440000	                   nop dword [rax + rax]	      2231	eval.c	FUNCTION_45	CALL_2
0x400b410	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b415	          0x4885c0	                           test rax, rax	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b418	            0x7417	                            je 0x400b431	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x400b41a	           0xfbe38	                   movsx edi, byte [rax]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b41d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b422	            0x31d2	                            xor edx, edx	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b424	      0xe800000000	                          call 0x400b429	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b429	            0x85c0	                           test eax, eax	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b42b	     0xf8557ffffff	                           jne 0x400b388	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x400b431	      0x448b4c2438	            mov r9d, dword [rsp + 0x38] 	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400b436	          0x4585c9	                           test r9d, r9d	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400b439	     0xf8499000000	                            je 0x400b4d8	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400b43f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2830	eval.c	FUNCTION_55	ELSE_2	IF_4
0x400b444	      0x48634c2440	         movsxd rcx, dword [rsp + 0x40] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b449	          0x4531e4	                          xor r12d, r12d	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b44c	          0x4885c0	                           test rax, rax	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b44f	      0x48894c2408	                mov qword [rsp + 8], rcx	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b454	            0x751a	                           jne 0x400b470	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b456	      0xe998feffff	                           jmp 0x400b2f3	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b45b	       0xf1f440000	                   nop dword [rax + rax]	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b460	        0x4983c401	                              add r12, 1	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b464	          0x4d85ff	                           test r15, r15	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b467	     0xf84b3000000	                            je 0x400b520	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b46d	          0x4c89f8	                            mov rax, r15	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b470	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b475	          0x4585c0	                           test r8d, r8d	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b478	            0x7514	                           jne 0x400b48e	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b47a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b47f	        0x4a8d1421	                    lea rdx, [rcx + r12]	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b483	      0x483b542448	            cmp rdx, qword [rsp + 0x48] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b488	     0xf8f92000000	                            jg 0x400b520	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b48e	         0xfbe7814	           movsx edi, byte [rax + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b492	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b497	            0x31d2	                            xor edx, edx	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b499	          0x4c8b38	                    mov r15, qword [rax]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x400b49c	      0xe800000000	                          call 0x400b4a1	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b4a1	            0x85c0	                           test eax, eax	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b4a3	            0x74bb	                            je 0x400b460	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b4a5	      0xe9defeffff	                           jmp 0x400b388	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b4aa	    0x660f1f440000	                    nop word [rax + rax]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x400b4b0	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4b6	            0x7450	                            je 0x400b508	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4b8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4bd	          0x4489fa	                           mov edx, r15d	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4c0	          0x4489f6	                           mov esi, r14d	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4c3	        0x488d7810	                   lea rdi, [rax + 0x10]	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4c7	      0xe8c450ffff	                      call sym.item_lock	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4cc	      0xe922feffff	                           jmp 0x400b2f3	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4d1	     0xf1f80000000	                         nop dword [rax]	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x400b4d8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400b4dd	          0x4885ff	                           test rdi, rdi	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400b4e0	            0x740f	                            je 0x400b4f1	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x400b4e2	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400b4e7	      0xe800000000	                          call 0x400b4ec	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400b4ec	      0xe902feffff	                           jmp 0x400b2f3	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x400b4f1	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400b4f6	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400b4fb	      0xe800000000	                          call 0x400b500	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400b500	      0xe9eefdffff	                           jmp 0x400b2f3	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400b505	           0xf1f00	                         nop dword [rax]	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x400b508	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      2980	eval.c	FUNCTION_57	CALL_7
0x400b50d	          0x4489fa	                           mov edx, r15d	      2980	eval.c	FUNCTION_57	CALL_7
0x400b510	          0x4489f6	                           mov esi, r14d	      2980	eval.c	FUNCTION_57	CALL_7
0x400b513	      0xe87850ffff	                      call sym.item_lock	      2980	eval.c	FUNCTION_57	CALL_7
0x400b518	      0xe9d6fdffff	                           jmp 0x400b2f3	      2980	eval.c	FUNCTION_57	CALL_7
0x400b51d	           0xf1f00	                         nop dword [rax]	      2980	eval.c	FUNCTION_57	CALL_7
0x400b520	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b525	          0x4885f6	                           test rsi, rsi	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b528	     0xf84c5fdffff	                            je 0x400b2f3	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b52e	            0x6690	                                     nop	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b530	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b534	            0x85ff	                           test edi, edi	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b536	            0x7510	                           jne 0x400b548	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b538	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b53d	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b542	     0xf8cabfdffff	                            jl 0x400b2f3	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b548	          0x4c8b26	                    mov r12, qword [rsi]	      2845	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b54b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x400b550	      0xe800000000	                          call 0x400b555	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x400b555	    0x488344244001	               add qword [rsp + 0x40], 1	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b55b	          0x4d85e4	                           test r12, r12	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b55e	      0x4c89642428	             mov qword [rsp + 0x28], r12	      2847	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b563	          0x4c89e6	                            mov rsi, r12	      2847	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b566	            0x75c8	                           jne 0x400b530	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b568	      0xe986fdffff	                           jmp 0x400b2f3	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x400b56d	      0x440fb66500	                  movzx r12d, byte [rbp]	      2940	eval.c	FUNCTION_57	IF_2
0x400b572	        0xc6450000	                       mov byte [rbp], 0	      2941	eval.c	FUNCTION_57	IF_2
0x400b576	            0x31f6	                            xor esi, esi	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400b578	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400b57d	      0xba01000000	                              mov edx, 1	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400b582	        0x894c2408	                mov dword [rsp + 8], ecx	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400b586	      0xe800000000	                          call 0x400b58b	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x400b58b	          0x4885c0	                           test rax, rax	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400b58e	     0xf848c000000	                            je 0x400b620	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400b594	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b598	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b59c	          0xf6c204	                              test dl, 4	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b59f	            0x7434	                            je 0x400b5d5	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5a1	            0x8b30	                    mov esi, dword [rax]	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5a3	          0x83ee05	                              sub esi, 5	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5a6	          0x83fe01	                              cmp esi, 1	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5a9	            0x762a	                           jbe 0x400b5d5	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5ab	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5b0	      0xbe00000000	                              mov esi, 0	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5b5	            0x31ff	                            xor edi, edi	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5b7	      0xba05000000	                              mov edx, 5	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5bc	      0xe800000000	                          call 0x400b5c1	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5c1	          0x4c89fe	                            mov rsi, r15	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5c4	          0x4889c7	                            mov rdi, rax	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5c7	      0xe800000000	                          call 0x400b5cc	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x400b5cc	        0x44886500	                    mov byte [rbp], r12b	      2961	eval.c	FUNCTION_57	IF_2
0x400b5d0	      0xe91efdffff	                           jmp 0x400b2f3	      2961	eval.c	FUNCTION_57	IF_2
0x400b5d5	    0x81f9f4000000	                           cmp ecx, 0xf4	      2955	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400b5db	            0x743b	                            je 0x400b618	      2955	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400b5dd	          0x83e2f7	                     and edx, 0xfffffff7	      2958	eval.c	FUNCTION_57	IF_2	ELSE_2	ELSE_3
0x400b5e0	          0x885010	               mov byte [rax + 0x10], dl	      2958	eval.c	FUNCTION_57	IF_2	ELSE_2	ELSE_3
0x400b5e3	          0x4489fa	                           mov edx, r15d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400b5e6	          0x4489f6	                           mov esi, r14d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400b5e9	          0x4889c7	                            mov rdi, rax	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400b5ec	      0xe89f4fffff	                      call sym.item_lock	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400b5f1	            0xebd9	                           jmp 0x400b5cc	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x400b5f3	         0xfb65d00	                   movzx ebx, byte [rbp]	      2814	eval.c	FUNCTION_55	IF_1
0x400b5f7	        0x418b7534	            mov esi, dword [r13 + 0x34] 	      2783	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7	CALL_7
0x400b5fb	        0xc6450000	                       mov byte [rbp], 0	      2815	eval.c	FUNCTION_55	IF_1
0x400b5ff	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x400b604	      0xe800000000	                          call 0x400b609	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x400b609	          0x885d00	                      mov byte [rbp], bl	      2820	eval.c	FUNCTION_55	IF_1
0x400b60c	            0x31db	                            xor ebx, ebx	      2820	eval.c	FUNCTION_55	IF_1
0x400b60e	            0x85c0	                           test eax, eax	      2820	eval.c	FUNCTION_55	IF_1
0x400b610	           0xf94c3	                                 sete bl	      2820	eval.c	FUNCTION_55	IF_1
0x400b613	      0xe9dbfcffff	                           jmp 0x400b2f3	      2820	eval.c	FUNCTION_55	IF_1
0x400b618	          0x83ca08	                               or edx, 8	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400b61b	          0x885010	               mov byte [rax + 0x10], dl	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400b61e	            0xebc3	                           jmp 0x400b5e3	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x400b620	      0xbb01000000	                              mov ebx, 1	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400b625	            0xeba5	                           jmp 0x400b5cc	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x400b627	      0xe800000000	                          call 0x400b62c	      2801	eval.c	FUNCTION_54
eval_to_string_safe	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,3:functions,0	38
0x40092d0	            0x4155	                                push r13	       860	eval.c	FUNCTION_19
0x40092d2	            0x4154	                                push r12	       860	eval.c	FUNCTION_19
0x40092d4	          0x4189d5	                           mov r13d, edx	       860	eval.c	FUNCTION_19
0x40092d7	              0x55	                                push rbp	       860	eval.c	FUNCTION_19
0x40092d8	              0x53	                                push rbx	       860	eval.c	FUNCTION_19
0x40092d9	          0x4889f5	                            mov rbp, rsi	       860	eval.c	FUNCTION_19
0x40092dc	          0x4889fb	                            mov rbx, rdi	       860	eval.c	FUNCTION_19
0x40092df	        0x4883ec08	                              sub rsp, 8	       860	eval.c	FUNCTION_19
0x40092e3	      0xe800000000	                          call 0x40092e8	       864	eval.c	FUNCTION_19	CALL_1
0x40092e8	          0x4585ed	                         test r13d, r13d	       865	eval.c	FUNCTION_19	IF_1
0x40092eb	          0x4989c4	                            mov r12, rax	       864	eval.c	FUNCTION_19	CALL_1
0x40092ee	            0x7538	                           jne 0x4009328	       865	eval.c	FUNCTION_19	IF_1
0x40092f0	          0x4889df	                            mov rdi, rbx	       868	eval.c	FUNCTION_19	CALL_2
0x40092f3	            0x31d2	                            xor edx, edx	       868	eval.c	FUNCTION_19	CALL_2
0x40092f5	          0x4889ee	                            mov rsi, rbp	       868	eval.c	FUNCTION_19	CALL_2
0x40092f8	    0x830500000000	               add dword [0x040092ff], 1	       867	eval.c	FUNCTION_19
0x40092ff	      0xe800000000	                          call 0x4009304	       868	eval.c	FUNCTION_19	CALL_2
0x4009304	          0x4889c3	                            mov rbx, rax	       868	eval.c	FUNCTION_19	CALL_2
0x4009307	          0x4c89e7	                            mov rdi, r12	       872	eval.c	FUNCTION_19	CALL_3
0x400930a	    0x832d00000000	               sub dword [0x04009311], 1	       871	eval.c	FUNCTION_19
0x4009311	      0xe800000000	                          call 0x4009316	       872	eval.c	FUNCTION_19	CALL_3
0x4009316	        0x4883c408	                              add rsp, 8	       874	eval.c	FUNCTION_19
0x400931a	          0x4889d8	                            mov rax, rbx	       874	eval.c	FUNCTION_19
0x400931d	              0x5b	                                 pop rbx	       874	eval.c	FUNCTION_19
0x400931e	              0x5d	                                 pop rbp	       874	eval.c	FUNCTION_19
0x400931f	            0x415c	                                 pop r12	       874	eval.c	FUNCTION_19
0x4009321	            0x415d	                                 pop r13	       874	eval.c	FUNCTION_19
0x4009323	              0xc3	                                     ret	       874	eval.c	FUNCTION_19
0x4009324	         0xf1f4000	                         nop dword [rax]	       874	eval.c	FUNCTION_19
0x4009328	          0x4889df	                            mov rdi, rbx	       868	eval.c	FUNCTION_19	CALL_2
0x400932b	            0x31d2	                            xor edx, edx	       868	eval.c	FUNCTION_19	CALL_2
0x400932d	          0x4889ee	                            mov rsi, rbp	       868	eval.c	FUNCTION_19	CALL_2
0x4009330	    0x830500000000	               add dword [0x04009337], 1	       866	eval.c	FUNCTION_19	IF_1
0x4009337	    0x830500000000	               add dword [0x0400933e], 1	       867	eval.c	FUNCTION_19
0x400933e	      0xe800000000	                          call 0x4009343	       868	eval.c	FUNCTION_19	CALL_2
0x4009343	    0x832d00000000	               sub dword [0x0400934a], 1	       870	eval.c	FUNCTION_19	IF_2
0x400934a	          0x4889c3	                            mov rbx, rax	       868	eval.c	FUNCTION_19	CALL_2
0x400934d	            0xebb8	                           jmp 0x4009307	       868	eval.c	FUNCTION_19	CALL_2
find_option_end	DO,0:WHILE,1:FOR,0:ELSE,3:IF,4:SWITCH,0:CALL,2:functions,0	53
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	      8426	eval.c	FUNCTION_159
0x4000043	         0xfb64a01	               movzx ecx, byte [rdx + 1]	      8429	eval.c	FUNCTION_159	IF_1
0x4000047	        0x488d4201	                      lea rax, [rdx + 1]	      8428	eval.c	FUNCTION_159
0x400004b	          0x80f967	                            cmp cl, 0x67	      8429	eval.c	FUNCTION_159	IF_1
0x400004e	            0x7460	                            je 0x40000b0	      8429	eval.c	FUNCTION_159	IF_1
0x4000050	          0x80f96c	                            cmp cl, 0x6c	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000053	            0x7443	                            je 0x4000098	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4000055	    0xc70600000000	                      mov dword [rsi], 0	      8440	eval.c	FUNCTION_159	ELSE_2
0x400005b	           0xfb610	                   movzx edx, byte [rax]	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x400005e	          0x83e2df	                     and edx, 0xffffffdf	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000061	          0x83ea41	                           sub edx, 0x41	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000064	          0x80fa19	                            cmp dl, 0x19	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4000067	     0xf8783000000	                            ja 0x40000f0	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x400006d	          0x488907	                    mov qword [rdi], rax	      8444	eval.c	FUNCTION_159
0x4000070	           0xfb610	                   movzx edx, byte [rax]	      8446	eval.c	FUNCTION_159	IF_4
0x4000073	          0x80fa74	                            cmp dl, 0x74	      8446	eval.c	FUNCTION_159	IF_4
0x4000076	            0x7510	                           jne 0x4000088	      8446	eval.c	FUNCTION_159	IF_4
0x4000078	            0xeb4e	                           jmp 0x40000c8	      8446	eval.c	FUNCTION_159	IF_4
0x400007a	    0x660f1f440000	                    nop word [rax + rax]	      8446	eval.c	FUNCTION_159	IF_4
0x4000080	         0xfb65001	               movzx edx, byte [rax + 1]	      8446	eval.c	FUNCTION_159	IF_4
0x4000084	        0x4883c001	                              add rax, 1	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x4000088	          0x83e2df	                     and edx, 0xffffffdf	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x400008b	          0x83ea41	                           sub edx, 0x41	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x400008e	          0x80fa19	                            cmp dl, 0x19	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x4000091	            0x76ed	                           jbe 0x4000080	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x4000093	            0xf3c3	                                     ret	      8452	eval.c	FUNCTION_159
0x4000095	           0xf1f00	                         nop dword [rax]	      8452	eval.c	FUNCTION_159
0x4000098	        0x807a023a	                cmp byte [rdx + 2], 0x3a	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400009c	            0x75b7	                           jne 0x4000055	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400009e	    0xc70604000000	                      mov dword [rsi], 4	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40000a4	        0x488d4203	                      lea rax, [rdx + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40000a8	            0xebb1	                           jmp 0x400005b	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40000aa	    0x660f1f440000	                    nop word [rax + rax]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40000b0	        0x807a023a	                cmp byte [rdx + 2], 0x3a	      8429	eval.c	FUNCTION_159	IF_1
0x40000b4	            0x759f	                           jne 0x4000055	      8429	eval.c	FUNCTION_159	IF_1
0x40000b6	    0xc70602000000	                      mov dword [rsi], 2	      8431	eval.c	FUNCTION_159	IF_1
0x40000bc	        0x488d4203	                      lea rax, [rdx + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x40000c0	            0xeb99	                           jmp 0x400005b	      8432	eval.c	FUNCTION_159	IF_1
0x40000c2	    0x660f1f440000	                    nop word [rax + rax]	      8432	eval.c	FUNCTION_159	IF_1
0x40000c8	         0xfb65001	               movzx edx, byte [rax + 1]	      8446	eval.c	FUNCTION_159	IF_4
0x40000cc	          0x80fa5f	                            cmp dl, 0x5f	      8446	eval.c	FUNCTION_159	IF_4
0x40000cf	            0x75b3	                           jne 0x4000084	      8446	eval.c	FUNCTION_159	IF_4
0x40000d1	        0x80780200	                   cmp byte [rax + 2], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40000d5	            0x740b	                            je 0x40000e2	      8446	eval.c	FUNCTION_159	IF_4
0x40000d7	        0x80780300	                   cmp byte [rax + 3], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40000db	            0x7405	                            je 0x40000e2	      8446	eval.c	FUNCTION_159	IF_4
0x40000dd	        0x4883c004	                              add rax, 4	      8447	eval.c	FUNCTION_159	IF_4
0x40000e1	              0xc3	                                     ret	      8447	eval.c	FUNCTION_159	IF_4
0x40000e2	        0x4883c001	                              add rax, 1	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x40000e6	              0xc3	                                     ret	      8452	eval.c	FUNCTION_159
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	      8452	eval.c	FUNCTION_159
0x40000f0	            0x31c0	                            xor eax, eax	      8443	eval.c	FUNCTION_159	IF_3
0x40000f2	              0xc3	                                     ret	      8443	eval.c	FUNCTION_159	IF_3
getwinvar	DO,0:WHILE,0:FOR,0:ELSE,3:IF,10:SWITCH,0:CALL,12:functions,0	127
0x40065d0	            0x4156	                                push r14	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065d2	            0x4155	                                push r13	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065d4	            0x4154	                                push r12	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065d6	              0x55	                                push rbp	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065d7	          0x4989f4	                            mov r12, rsi	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065da	              0x53	                                push rbx	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065db	          0x4889fd	                            mov rbp, rdi	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065de	        0x4883ec30	                           sub rsp, 0x30	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065e2	    0x4c8b2d000000	            mov r13, qword [0x040065e9] 	      8296	eval.c	ELSE_2	FUNCTION_157	ELSE_1
0x40065e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065f2	      0x4889442428	             mov qword [rsp + 0x28], rax	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065f7	            0x31c0	                            xor eax, eax	      8283	eval.c	ELSE_2	FUNCTION_157
0x40065f9	          0x83fa01	                              cmp edx, 1	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x40065fc	     0xf84f6000000	                            je 0x40066f8	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x4006602	          0x4863da	                         movsxd rbx, edx	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4006605	          0x4c89ee	                            mov rsi, r13	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4006608	        0x48c1e304	                              shl rbx, 4	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x400660c	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4006611	      0xe800000000	                          call 0x4006616	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4006616	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x400661b	          0x4989c6	                            mov r14, rax	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x400661e	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4006623	      0xe800000000	                          call 0x4006628	      7098	eval.c	FUNCTION_129	CALL_1
0x4006628	    0x830500000000	               add dword [0x0400662f], 1	      8299	eval.c	ELSE_2	FUNCTION_157
0x400662f	          0x4d85f6	                           test r14, r14	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4006632	      0x4889442410	             mov qword [rsp + 0x10], rax	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x4006637	    0x41c704240200	                      mov dword [r12], 2	      8301	eval.c	ELSE_2	FUNCTION_157
0x400663f	    0x49c744240800	                  mov qword [r12 + 8], 0	      8302	eval.c	ELSE_2	FUNCTION_157
0x4006648	            0x744a	                            je 0x4006694	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x400664a	          0x4885c0	                           test rax, rax	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x400664d	            0x7445	                            je 0x4006694	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x400664f	    0x4c3b2d000000	            cmp r13, qword [0x04006656] 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x4006656	     0xf8484000000	                            je 0x40066e0	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x400665c	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4006661	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4006666	    0x41b801000000	                              mov r8d, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x400666c	          0x4c89e9	                            mov rcx, r13	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x400666f	          0x4c89f2	                            mov rdx, r14	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4006672	      0xe800000000	                          call 0x4006677	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4006677	          0x83f801	                              cmp eax, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x400667a	     0xf84a0000000	                            je 0x4006720	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4006680	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4006685	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400668a	      0xba01000000	                              mov edx, 1	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400668f	      0xe800000000	                          call 0x4006694	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4006694	      0x488d7c1d20	            lea rdi, [rbp + rbx + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4006699	            0x8b07	                    mov eax, dword [rdi]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400669b	            0x85c0	                           test eax, eax	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400669d	            0x7531	                           jne 0x40066d0	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400669f	    0x832d00000000	               sub dword [0x040066a6], 1	      8353	eval.c	FUNCTION_157	ELSE_2
0x40066a6	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066ab	    0x644833042528	                xor rax, qword fs:[0x28]	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066b4	     0xf851a010000	                           jne 0x40067d4	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066ba	        0x4883c430	                           add rsp, 0x30	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066be	              0x5b	                                 pop rbx	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066bf	              0x5d	                                 pop rbp	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066c0	            0x415c	                                 pop r12	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066c2	            0x415d	                                 pop r13	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066c4	            0x415e	                                 pop r14	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066c6	              0xc3	                                     ret	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066c7	    0x660f1f840000	                    nop word [rax + rax]	      8354	eval.c	FUNCTION_157	ELSE_2
0x40066d0	          0x4c89e6	                            mov rsi, r12	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x40066d3	      0xe800000000	                          call 0x40066d8	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x40066d8	            0xebc5	                           jmp 0x400669f	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x40066da	    0x660f1f440000	                    nop word [rax + rax]	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x40066e0	    0x4c3b35000000	            cmp r14, qword [0x040066e7] 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40066e7	     0xf856fffffff	                           jne 0x400665c	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40066ed	          0x4531ed	                          xor r13d, r13d	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40066f0	            0xeb39	                           jmp 0x400672b	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40066f2	    0x660f1f440000	                    nop word [rax + rax]	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40066f8	            0x31f6	                            xor esi, esi	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40066fa	        0x8954240c	              mov dword [rsp + 0xc], edx	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40066fe	      0xe800000000	                          call 0x4006703	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006703	            0x89c7	                            mov edi, eax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006705	      0xe800000000	                          call 0x400670a	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x400670a	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x400670e	          0x4989c5	                            mov r13, rax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006711	      0xe9ecfeffff	                           jmp 0x4006602	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006720	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x4006725	    0x41bd01000000	                             mov r13d, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x400672b	          0x803826	                    cmp byte [rax], 0x26	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x400672e	            0x7540	                           jne 0x4006770	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x4006730	        0x80780100	                   cmp byte [rax + 1], 0	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x4006734	            0x756a	                           jne 0x40067a0	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x4006736	            0x31ff	                            xor edi, edi	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4006738	      0xe800000000	                          call 0x400673d	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x400673d	          0x4885c0	                           test rax, rax	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4006740	            0x7475	                            je 0x40067b7	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4006742	          0x4889c6	                            mov rsi, rax	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4006745	          0x4c89e7	                            mov rdi, r12	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4006748	      0xe800000000	                          call 0x400674d	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x400674d	          0x4585ed	                         test r13d, r13d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4006750	     0xf8449ffffff	                            je 0x400669f	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4006756	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400675b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4006760	      0xba01000000	                              mov edx, 1	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4006765	      0xe800000000	                          call 0x400676a	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400676a	      0xe930ffffff	                           jmp 0x400669f	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400676f	              0x90	                                     nop	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4006770	    0x498bbe700500	           mov rdi, qword [r14 + 0x570] 	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4006777	            0x31c9	                            xor ecx, ecx	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4006779	          0x4889c2	                            mov rdx, rax	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x400677c	      0xbe77000000	                           mov esi, 0x77	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4006781	        0x4883c710	                           add rdi, 0x10	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4006785	      0xe800000000	                          call 0x400678a	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x400678a	          0x4885c0	                           test rax, rax	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x400678d	            0x7428	                            je 0x40067b7	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x400678f	          0x4c89e6	                            mov rsi, r12	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4006792	          0x4889c7	                            mov rdi, rax	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4006795	      0xe800000000	                          call 0x400679a	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x400679a	            0xebb1	                           jmp 0x400674d	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x400679c	         0xf1f4000	                         nop dword [rax]	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x40067a0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067a5	      0xba01000000	                              mov edx, 1	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067aa	          0x4c89e6	                            mov rsi, r12	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067ad	      0xe800000000	                          call 0x40067b2	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067b2	          0x83f801	                              cmp eax, 1	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067b5	            0x7496	                            je 0x400674d	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x40067b7	          0x4585ed	                         test r13d, r13d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x40067ba	     0xf85c0feffff	                           jne 0x4006680	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x40067c0	      0x488d7c1d20	            lea rdi, [rbp + rbx + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40067c5	            0x8b07	                    mov eax, dword [rdi]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40067c7	            0x85c0	                           test eax, eax	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40067c9	     0xf84d0feffff	                            je 0x400669f	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40067cf	      0xe9fcfeffff	                           jmp 0x40066d0	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40067d4	      0xe800000000	                          call 0x40067d9	      8354	eval.c	FUNCTION_157	ELSE_2
call_func_retstr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,4:functions,0	30
0x4004420	              0x53	                                push rbx	      1133	eval.c	FUNCTION_28
0x4004421	    0x41b801000000	                              mov r8d, 1	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4004427	        0x4883ec20	                           sub rsp, 0x20	      1133	eval.c	FUNCTION_28
0x400442b	          0x4989e1	                             mov r9, rsp	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x400442e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1133	eval.c	FUNCTION_28
0x4004437	      0x4889442418	             mov qword [rsp + 0x18], rax	      1133	eval.c	FUNCTION_28
0x400443c	            0x31c0	                            xor eax, eax	      1133	eval.c	FUNCTION_28
0x400443e	      0xe800000000	                          call 0x4004443	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4004443	            0x31d2	                            xor edx, edx	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4004445	            0x85c0	                           test eax, eax	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4004447	            0x742c	                            je 0x4004475	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4004449	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400444e	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x4004451	      0xe800000000	                          call 0x4004456	      7085	eval.c	FUNCTION_128	CALL_1
0x4004456	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x400445b	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400445e	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x4004462	      0xe800000000	                          call 0x4004467	      1141	eval.c	FUNCTION_28	CALL_3
0x4004467	          0x4889e7	                            mov rdi, rsp	      1142	eval.c	FUNCTION_28	CALL_4
0x400446a	          0x4889c3	                            mov rbx, rax	      1141	eval.c	FUNCTION_28	CALL_3
0x400446d	      0xe800000000	                          call 0x4004472	      1142	eval.c	FUNCTION_28	CALL_4
0x4004472	          0x4889da	                            mov rdx, rbx	      1143	eval.c	FUNCTION_28
0x4004475	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1144	eval.c	FUNCTION_28
0x400447a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1144	eval.c	FUNCTION_28
0x4004483	          0x4889d0	                            mov rax, rdx	      1144	eval.c	FUNCTION_28
0x4004486	            0x7506	                           jne 0x400448e	      1144	eval.c	FUNCTION_28
0x4004488	        0x4883c420	                           add rsp, 0x20	      1144	eval.c	FUNCTION_28
0x400448c	              0x5b	                                 pop rbx	      1144	eval.c	FUNCTION_28
0x400448d	              0xc3	                                     ret	      1144	eval.c	FUNCTION_28
0x400448e	      0xe800000000	                          call 0x4004493	      1144	eval.c	FUNCTION_28
skip_expr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,2:functions,0	20
0x4008990	              0x53	                                push rbx	       794	eval.c	FUNCTION_17
0x4008991	          0x4889fb	                            mov rbx, rdi	       794	eval.c	FUNCTION_17
0x4008994	        0x4883ec20	                           sub rsp, 0x20	       794	eval.c	FUNCTION_17
0x4008998	          0x488b3f	                    mov rdi, qword [rdi]	       797	eval.c	FUNCTION_17	CALL_1
0x400899b	    0x64488b042528	                mov rax, qword fs:[0x28]	       794	eval.c	FUNCTION_17
0x40089a4	      0x4889442418	             mov qword [rsp + 0x18], rax	       794	eval.c	FUNCTION_17
0x40089a9	            0x31c0	                            xor eax, eax	       794	eval.c	FUNCTION_17
0x40089ab	      0xe800000000	                          call 0x40089b0	       797	eval.c	FUNCTION_17	CALL_1
0x40089b0	            0x31d2	                            xor edx, edx	       798	eval.c	FUNCTION_17	CALL_2
0x40089b2	          0x488903	                    mov qword [rbx], rax	       797	eval.c	FUNCTION_17	CALL_1
0x40089b5	          0x4889e6	                            mov rsi, rsp	       798	eval.c	FUNCTION_17	CALL_2
0x40089b8	          0x4889df	                            mov rdi, rbx	       798	eval.c	FUNCTION_17	CALL_2
0x40089bb	      0xe800000000	                          call 0x40089c0	       798	eval.c	FUNCTION_17	CALL_2
0x40089c0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       799	eval.c	FUNCTION_17
0x40089c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       799	eval.c	FUNCTION_17
0x40089ce	            0x7506	                           jne 0x40089d6	       799	eval.c	FUNCTION_17
0x40089d0	        0x4883c420	                           add rsp, 0x20	       799	eval.c	FUNCTION_17
0x40089d4	              0x5b	                                 pop rbx	       799	eval.c	FUNCTION_17
0x40089d5	              0xc3	                                     ret	       799	eval.c	FUNCTION_17
0x40089d6	      0xe800000000	                          call 0x40089db	       799	eval.c	FUNCTION_17
call_vim_function	DO,0:WHILE,0:FOR,1:ELSE,2:IF,8:SWITCH,0:CALL,9:functions,0	163
0x4002690	            0x4157	                                push r15	      1026	eval.c	FUNCTION_26
0x4002692	            0x4156	                                push r14	      1026	eval.c	FUNCTION_26
0x4002694	            0x4155	                                push r13	      1026	eval.c	FUNCTION_26
0x4002696	            0x4154	                                push r12	      1026	eval.c	FUNCTION_26
0x4002698	          0x4189f5	                           mov r13d, esi	      1026	eval.c	FUNCTION_26
0x400269b	              0x55	                                push rbp	      1026	eval.c	FUNCTION_26
0x400269c	              0x53	                                push rbx	      1026	eval.c	FUNCTION_26
0x400269d	          0x4589c4	                           mov r12d, r8d	      1026	eval.c	FUNCTION_26
0x40026a0	          0x4889d3	                            mov rbx, rdx	      1026	eval.c	FUNCTION_26
0x40026a3	        0x4883ec48	                           sub rsp, 0x48	      1026	eval.c	FUNCTION_26
0x40026a7	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1026	eval.c	FUNCTION_26
0x40026ac	          0x8d7e01	                      lea edi, [rsi + 1]	      1035	eval.c	FUNCTION_26	CALL_1
0x40026af	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1026	eval.c	FUNCTION_26
0x40026b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1026	eval.c	FUNCTION_26
0x40026bc	      0x4889442438	             mov qword [rsp + 0x38], rax	      1026	eval.c	FUNCTION_26
0x40026c1	            0x31c0	                            xor eax, eax	      1026	eval.c	FUNCTION_26
0x40026c3	          0xc1e704	                              shl edi, 4	      1035	eval.c	FUNCTION_26	CALL_1
0x40026c6	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1026	eval.c	FUNCTION_26
0x40026cb	      0xe800000000	                          call 0x40026d0	      1035	eval.c	FUNCTION_26	CALL_1
0x40026d0	          0x4885c0	                           test rax, rax	      1036	eval.c	FUNCTION_26	IF_1
0x40026d3	     0xf84ff010000	                            je 0x40028d8	      1036	eval.c	FUNCTION_26	IF_1
0x40026d9	          0x4585ed	                         test r13d, r13d	      1039	eval.c	FUNCTION_26	FOR_1
0x40026dc	          0x4989c6	                            mov r14, rax	      1039	eval.c	FUNCTION_26	FOR_1
0x40026df	            0x7e62	                           jle 0x4002743	      1039	eval.c	FUNCTION_26	FOR_1
0x40026e1	        0x488d6808	                      lea rbp, [rax + 8]	      1039	eval.c	FUNCTION_26	FOR_1
0x40026e5	        0x418d45ff	                      lea eax, [r13 - 1]	      1039	eval.c	FUNCTION_26	FOR_1
0x40026e9	      0x4c8d7cc308	              lea r15, [rbx + rax*8 + 8]	      1039	eval.c	FUNCTION_26	FOR_1
0x40026ee	            0xeb29	                           jmp 0x4002719	      1039	eval.c	FUNCTION_26	FOR_1
0x40026f0	          0x4585e4	                         test r12d, r12d	      1049	eval.c	FUNCTION_26	FOR_1	IF_3
0x40026f3	     0xf84e7000000	                            je 0x40027e0	      1049	eval.c	FUNCTION_26	FOR_1	IF_3
0x40026f9	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1057	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002701	    0xc745f8020000	                  mov dword [rbp - 8], 2	      1066	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x4002708	        0x4c895500	                    mov qword [rbp], r10	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x400270c	        0x4883c308	                              add rbx, 8	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x4002710	        0x4883c510	                           add rbp, 0x10	      1067	eval.c	FUNCTION_26	FOR_1	ELSE_2
0x4002714	          0x4c39fb	                            cmp rbx, r15	      1039	eval.c	FUNCTION_26	FOR_1
0x4002717	            0x742a	                            je 0x4002743	      1039	eval.c	FUNCTION_26	FOR_1
0x4002719	          0x4c8b13	                    mov r10, qword [rbx]	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x400271c	          0x4d85d2	                           test r10, r10	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x400271f	            0x7406	                            je 0x4002727	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002721	        0x41803a00	                       cmp byte [r10], 0	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002725	            0x75c9	                           jne 0x40026f0	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002727	        0x4883c308	                              add rbx, 8	      1042	eval.c	FUNCTION_26	FOR_1	IF_2
0x400272b	    0xc745f8020000	                  mov dword [rbp - 8], 2	      1044	eval.c	FUNCTION_26	FOR_1	IF_2
0x4002732	    0x48c745000000	                      mov qword [rbp], 0	      1045	eval.c	FUNCTION_26	FOR_1	IF_2
0x400273a	        0x4883c510	                           add rbp, 0x10	      1045	eval.c	FUNCTION_26	FOR_1	IF_2
0x400273e	          0x4c39fb	                            cmp rbx, r15	      1039	eval.c	FUNCTION_26	FOR_1
0x4002741	            0x75d6	                           jne 0x4002719	      1039	eval.c	FUNCTION_26	FOR_1
0x4002743	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1071	eval.c	FUNCTION_26	IF_6
0x4002747	            0x85f6	                           test esi, esi	      1071	eval.c	FUNCTION_26	IF_6
0x4002749	     0xf8511010000	                           jne 0x4002860	      1071	eval.c	FUNCTION_26	IF_6
0x400274f	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      1077	eval.c	FUNCTION_26
0x4002754	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1078	eval.c	FUNCTION_26	CALL_6
0x4002759	    0x488b05000000	            mov rax, qword [0x04002760] 	      1078	eval.c	FUNCTION_26	CALL_6
0x4002760	          0x4889ef	                            mov rdi, rbp	      1078	eval.c	FUNCTION_26	CALL_6
0x4002763	    0x41c707000000	                      mov dword [r15], 0	      1077	eval.c	FUNCTION_26
0x400276a	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x400276e	      0xe800000000	                          call 0x4002773	      1078	eval.c	FUNCTION_26	CALL_6
0x4002773	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x4002775	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x4002777	          0x4531c9	                            xor r9d, r9d	      1078	eval.c	FUNCTION_26	CALL_6
0x400277a	            0x6a01	                                  push 1	      1078	eval.c	FUNCTION_26	CALL_6
0x400277c	          0x4d89f0	                             mov r8, r14	      1078	eval.c	FUNCTION_26	CALL_6
0x400277f	          0x4489e9	                           mov ecx, r13d	      1078	eval.c	FUNCTION_26	CALL_6
0x4002782	            0x89c6	                            mov esi, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x4002784	          0x4889ef	                            mov rdi, rbp	      1078	eval.c	FUNCTION_26	CALL_6
0x4002787	      0x488d542444	                   lea rdx, [rsp + 0x44]	      1078	eval.c	FUNCTION_26	CALL_6
0x400278c	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x400278d	              0x53	                                push rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x400278e	          0x4c89fa	                            mov rdx, r15	      1078	eval.c	FUNCTION_26	CALL_6
0x4002791	              0x53	                                push rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x4002792	      0xe800000000	                          call 0x4002797	      1078	eval.c	FUNCTION_26	CALL_6
0x4002797	        0x4883c430	                           add rsp, 0x30	      1078	eval.c	FUNCTION_26	CALL_6
0x400279b	            0x89c3	                            mov ebx, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x400279d	          0x4c89f7	                            mov rdi, r14	      1086	eval.c	FUNCTION_26	CALL_8
0x40027a0	      0xe800000000	                          call 0x40027a5	      1086	eval.c	FUNCTION_26	CALL_8
0x40027a5	            0x85db	                           test ebx, ebx	      1088	eval.c	FUNCTION_26	IF_8
0x40027a7	            0x89d8	                            mov eax, ebx	      1088	eval.c	FUNCTION_26	IF_8
0x40027a9	            0x7510	                           jne 0x40027bb	      1088	eval.c	FUNCTION_26	IF_8
0x40027ab	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1089	eval.c	FUNCTION_26	CALL_9
0x40027b0	          0x891c24	                    mov dword [rsp], ebx	      1089	eval.c	FUNCTION_26	CALL_9
0x40027b3	      0xe800000000	                          call 0x40027b8	      1089	eval.c	FUNCTION_26	CALL_9
0x40027b8	          0x8b0424	                    mov eax, dword [rsp]	      1089	eval.c	FUNCTION_26	CALL_9
0x40027bb	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1092	eval.c	FUNCTION_26
0x40027c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1092	eval.c	FUNCTION_26
0x40027c9	     0xf8510010000	                           jne 0x40028df	      1092	eval.c	FUNCTION_26
0x40027cf	        0x4883c448	                           add rsp, 0x48	      1092	eval.c	FUNCTION_26
0x40027d3	              0x5b	                                 pop rbx	      1092	eval.c	FUNCTION_26
0x40027d4	              0x5d	                                 pop rbp	      1092	eval.c	FUNCTION_26
0x40027d5	            0x415c	                                 pop r12	      1092	eval.c	FUNCTION_26
0x40027d7	            0x415d	                                 pop r13	      1092	eval.c	FUNCTION_26
0x40027d9	            0x415e	                                 pop r14	      1092	eval.c	FUNCTION_26
0x40027db	            0x415f	                                 pop r15	      1092	eval.c	FUNCTION_26
0x40027dd	              0xc3	                                     ret	      1092	eval.c	FUNCTION_26
0x40027de	            0x6690	                                     nop	      1092	eval.c	FUNCTION_26
0x40027e0	        0x4883ec08	                              sub rsp, 8	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027e4	          0x4531c9	                            xor r9d, r9d	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027e7	      0xb907000000	                              mov ecx, 7	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027ec	            0x6a00	                                  push 0	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027ee	            0x31f6	                            xor esi, esi	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027f0	          0x4c89d7	                            mov rdi, r10	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027f3	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027f8	      0x4c8d442440	                    lea r8, [rsp + 0x40]	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x40027fd	      0xe800000000	                          call 0x4002802	      1055	eval.c	FUNCTION_26	FOR_1	ELSE_1	CALL_2
0x4002802	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002806	          0x4c8b13	                    mov r10, qword [rbx]	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002809	              0x58	                                 pop rax	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400280a	              0x59	                                 pop rcx	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400280b	          0x83fa01	                              cmp edx, 1	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400280e	            0x7440	                            je 0x4002850	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002810	            0x85d2	                           test edx, edx	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002812	     0xf84e9feffff	                            je 0x4002701	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002818	          0x4c89d7	                            mov rdi, r10	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400281b	        0x89542410	             mov dword [rsp + 0x10], edx	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400281f	        0x4c891424	                    mov qword [rsp], r10	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002823	      0xe800000000	                          call 0x4002828	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002828	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x400282c	        0x4c8b1424	                    mov r10, qword [rsp]	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002830	            0x39c2	                            cmp edx, eax	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002832	     0xf85c9feffff	                           jne 0x4002701	      1059	eval.c	FUNCTION_26	FOR_1	IF_5	CALL_3
0x4002838	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x400283d	    0xc745f8010000	                  mov dword [rbp - 8], 1	      1061	eval.c	FUNCTION_26	FOR_1	IF_5
0x4002844	        0x48894500	                    mov qword [rbp], rax	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x4002848	      0xe9bffeffff	                           jmp 0x400270c	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x400284d	           0xf1f00	                         nop dword [rax]	      1062	eval.c	FUNCTION_26	FOR_1	IF_5
0x4002850	        0x41803a2d	                    cmp byte [r10], 0x2d	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002854	            0x75c2	                           jne 0x4002818	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002856	      0xe99efeffff	                           jmp 0x40026f9	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x400285b	       0xf1f440000	                   nop dword [rax + rax]	      1056	eval.c	FUNCTION_26	FOR_1	ELSE_1	IF_4
0x4002860	      0xe800000000	                          call 0x4002865	      1073	eval.c	FUNCTION_26	IF_6	CALL_4
0x4002865	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      1077	eval.c	FUNCTION_26
0x400286a	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      1078	eval.c	FUNCTION_26	CALL_6
0x400286f	          0x4889c5	                            mov rbp, rax	      1073	eval.c	FUNCTION_26	IF_6	CALL_4
0x4002872	    0x488b05000000	            mov rax, qword [0x04002879] 	      1078	eval.c	FUNCTION_26	CALL_6
0x4002879	    0x830500000000	               add dword [0x04002880], 1	      1074	eval.c	FUNCTION_26	IF_6
0x4002880	          0x4c89e7	                            mov rdi, r12	      1078	eval.c	FUNCTION_26	CALL_6
0x4002883	    0x41c707000000	                      mov dword [r15], 0	      1077	eval.c	FUNCTION_26
0x400288a	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      1078	eval.c	FUNCTION_26	CALL_6
0x400288e	      0xe800000000	                          call 0x4002893	      1078	eval.c	FUNCTION_26	CALL_6
0x4002893	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x4002895	            0x6a00	                                  push 0	      1078	eval.c	FUNCTION_26	CALL_6
0x4002897	          0x4c89e7	                            mov rdi, r12	      1078	eval.c	FUNCTION_26	CALL_6
0x400289a	            0x6a01	                                  push 1	      1078	eval.c	FUNCTION_26	CALL_6
0x400289c	          0x4531c9	                            xor r9d, r9d	      1078	eval.c	FUNCTION_26	CALL_6
0x400289f	          0x4d89f0	                             mov r8, r14	      1078	eval.c	FUNCTION_26	CALL_6
0x40028a2	          0x4489e9	                           mov ecx, r13d	      1078	eval.c	FUNCTION_26	CALL_6
0x40028a5	            0x89c6	                            mov esi, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x40028a7	      0x488d542444	                   lea rdx, [rsp + 0x44]	      1078	eval.c	FUNCTION_26	CALL_6
0x40028ac	              0x52	                                push rdx	      1078	eval.c	FUNCTION_26	CALL_6
0x40028ad	              0x53	                                push rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x40028ae	          0x4c89fa	                            mov rdx, r15	      1078	eval.c	FUNCTION_26	CALL_6
0x40028b1	              0x53	                                push rbx	      1078	eval.c	FUNCTION_26	CALL_6
0x40028b2	      0xe800000000	                          call 0x40028b7	      1078	eval.c	FUNCTION_26	CALL_6
0x40028b7	        0x4883c430	                           add rsp, 0x30	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x40028bb	          0x4889ef	                            mov rdi, rbp	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x40028be	            0x89c3	                            mov ebx, eax	      1078	eval.c	FUNCTION_26	CALL_6
0x40028c0	    0x832d00000000	               sub dword [0x040028c7], 1	      1083	eval.c	FUNCTION_26	IF_7
0x40028c7	      0xe800000000	                          call 0x40028cc	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x40028cc	      0xe9ccfeffff	                           jmp 0x400279d	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x40028d1	     0xf1f80000000	                         nop dword [rax]	      1084	eval.c	FUNCTION_26	IF_7	CALL_7
0x40028d8	            0x31c0	                            xor eax, eax	      1037	eval.c	FUNCTION_26	IF_1
0x40028da	      0xe9dcfeffff	                           jmp 0x40027bb	      1037	eval.c	FUNCTION_26	IF_1
0x40028df	      0xe800000000	                          call 0x40028e4	      1092	eval.c	FUNCTION_26
vars_clear	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,1:functions,0	2
0x4004b70	      0xbe01000000	                              mov esi, 1	      7405	eval.c	FUNCTION_138	CALL_1
0x4004b75	      0xe956ffffff	                  jmp sym.vars_clear_ext	      7405	eval.c	FUNCTION_138	CALL_1
get_vim_var_nr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,0:functions,0	6
0x4002240	          0x4863ff	                         movsxd rdi, edi	      6394	eval.c	FUNCTION_103
0x4002243	    0x488d04fd0000	                        lea rax, [rdi*8]	      6394	eval.c	FUNCTION_103
0x400224b	        0x48c1e706	                              shl rdi, 6	      6394	eval.c	FUNCTION_103
0x400224f	          0x4829c7	                            sub rdi, rax	      6394	eval.c	FUNCTION_103
0x4002252	    0x488b87000000	                    mov rax, qword [rdi]	      6394	eval.c	FUNCTION_103
0x4002259	              0xc3	                                     ret	      6395	eval.c	FUNCTION_103
vars_clear_ext	DO,0:WHILE,0:FOR,1:ELSE,0:IF,3:SWITCH,0:CALL,6:functions,0	47
0x4004ad0	            0x4156	                                push r14	      7413	eval.c	FUNCTION_139
0x4004ad2	            0x4155	                                push r13	      7413	eval.c	FUNCTION_139
0x4004ad4	          0x4989fe	                            mov r14, rdi	      7413	eval.c	FUNCTION_139
0x4004ad7	            0x4154	                                push r12	      7413	eval.c	FUNCTION_139
0x4004ad9	              0x55	                                push rbp	      7413	eval.c	FUNCTION_139
0x4004ada	          0x4189f5	                           mov r13d, esi	      7413	eval.c	FUNCTION_139
0x4004add	              0x53	                                push rbx	      7413	eval.c	FUNCTION_139
0x4004ade	      0xe800000000	                          call 0x4004ae3	      7418	eval.c	FUNCTION_139	CALL_1
0x4004ae3	        0x498b4608	                mov rax, qword [r14 + 8]	      7419	eval.c	FUNCTION_139
0x4004ae7	        0x498b6e20	            mov rbp, qword [r14 + 0x20] 	      7420	eval.c	FUNCTION_139	FOR_1
0x4004aeb	            0x85c0	                           test eax, eax	      7420	eval.c	FUNCTION_139	FOR_1
0x4004aed	          0x4189c4	                           mov r12d, eax	      7419	eval.c	FUNCTION_139
0x4004af0	            0x7e30	                           jle 0x4004b22	      7420	eval.c	FUNCTION_139	FOR_1
0x4004af2	    0x660f1f440000	                    nop word [rax + rax]	      7420	eval.c	FUNCTION_139	FOR_1
0x4004af8	        0x488b5d08	                mov rbx, qword [rbp + 8]	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004afc	    0x4881fb000000	                              cmp rbx, 0	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004b03	            0x745b	                            je 0x4004b60	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004b05	          0x4885db	                           test rbx, rbx	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004b08	            0x7456	                            je 0x4004b60	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4004b0a	        0x4183ec01	                             sub r12d, 1	      7424	eval.c	FUNCTION_139	FOR_1	IF_1
0x4004b0e	          0x4585ed	                         test r13d, r13d	      7430	eval.c	FUNCTION_139	FOR_1	IF_1	IF_2
0x4004b11	            0x753d	                           jne 0x4004b50	      7430	eval.c	FUNCTION_139	FOR_1	IF_1	IF_2
0x4004b13	        0xf643ff10	               test byte [rbx - 1], 0x10	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4004b17	            0x7527	                           jne 0x4004b40	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4004b19	        0x4883c510	                           add rbp, 0x10	      7420	eval.c	FUNCTION_139	FOR_1
0x4004b1d	          0x4585e4	                         test r12d, r12d	      7420	eval.c	FUNCTION_139	FOR_1
0x4004b20	            0x75d6	                           jne 0x4004af8	      7420	eval.c	FUNCTION_139	FOR_1
0x4004b22	          0x4c89f7	                            mov rdi, r14	      7436	eval.c	FUNCTION_139	CALL_6
0x4004b25	      0xe800000000	                          call 0x4004b2a	      7436	eval.c	FUNCTION_139	CALL_6
0x4004b2a	              0x5b	                                 pop rbx	      7438	eval.c	FUNCTION_139
0x4004b2b	    0x49c746080000	                  mov qword [r14 + 8], 0	      7437	eval.c	FUNCTION_139
0x4004b33	              0x5d	                                 pop rbp	      7438	eval.c	FUNCTION_139
0x4004b34	            0x415c	                                 pop r12	      7438	eval.c	FUNCTION_139
0x4004b36	            0x415d	                                 pop r13	      7438	eval.c	FUNCTION_139
0x4004b38	            0x415e	                                 pop r14	      7438	eval.c	FUNCTION_139
0x4004b3a	              0xc3	                                     ret	      7438	eval.c	FUNCTION_139
0x4004b3b	       0xf1f440000	                   nop dword [rax + rax]	      7438	eval.c	FUNCTION_139
0x4004b40	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4004b44	      0xe800000000	                          call 0x4004b49	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4004b49	            0xebce	                           jmp 0x4004b19	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4004b4b	       0xf1f440000	                   nop dword [rax + rax]	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4004b50	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4004b54	      0xe800000000	                          call 0x4004b59	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4004b59	            0xebb8	                           jmp 0x4004b13	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4004b5b	       0xf1f440000	                   nop dword [rax + rax]	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4004b60	        0x4883c510	                           add rbp, 0x10	      7420	eval.c	FUNCTION_139	FOR_1
0x4004b64	            0xeb92	                           jmp 0x4004af8	      7420	eval.c	FUNCTION_139	FOR_1
get_var_value	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,2:functions,0	16
0x4005bf0	        0x4883ec08	                              sub rsp, 8	      7322	eval.c	FUNCTION_134
0x4005bf4	            0x31d2	                            xor edx, edx	      7325	eval.c	FUNCTION_134	CALL_1
0x4005bf6	            0x31f6	                            xor esi, esi	      7325	eval.c	FUNCTION_134	CALL_1
0x4005bf8	      0xe800000000	                          call 0x4005bfd	      7325	eval.c	FUNCTION_134	CALL_1
0x4005bfd	          0x4885c0	                           test rax, rax	      7326	eval.c	FUNCTION_134	IF_1
0x4005c00	            0x741e	                            je 0x4005c20	      7326	eval.c	FUNCTION_134	IF_1
0x4005c02	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4005c07	          0x4889c7	                            mov rdi, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x4005c0a	      0xe800000000	                          call 0x4005c0f	      7085	eval.c	FUNCTION_128	CALL_1
0x4005c0f	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x4005c14	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4005c17	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x4005c1b	        0x4883c408	                              add rsp, 8	      7329	eval.c	FUNCTION_134
0x4005c1f	              0xc3	                                     ret	      7329	eval.c	FUNCTION_134
0x4005c20	            0x31c0	                            xor eax, eax	      7327	eval.c	FUNCTION_134	IF_1
0x4005c22	            0xebf7	                           jmp 0x4005c1b	      7327	eval.c	FUNCTION_134	IF_1
ex_unlet	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,1:functions,0	3
0x400b630	          0x488b37	                    mov rsi, qword [rdi]	      2722	eval.c	FUNCTION_52	CALL_1
0x400b633	            0x31d2	                            xor edx, edx	      2722	eval.c	FUNCTION_52	CALL_1
0x400b635	      0xe996fbffff	                    jmp sym.ex_unletlock	      2722	eval.c	FUNCTION_52	CALL_1
fill_assert_error	DO,0:WHILE,0:FOR,0:ELSE,5:IF,7:SWITCH,0:CALL,17:functions,0	127
0x40072a0	            0x4156	                                push r14	      9152	eval.c	FUNCTION_180
0x40072a2	            0x4155	                                push r13	      9152	eval.c	FUNCTION_180
0x40072a4	          0x4989ce	                            mov r14, rcx	      9152	eval.c	FUNCTION_180
0x40072a7	            0x4154	                                push r12	      9152	eval.c	FUNCTION_180
0x40072a9	              0x55	                                push rbp	      9152	eval.c	FUNCTION_180
0x40072aa	          0x4989d4	                            mov r12, rdx	      9152	eval.c	FUNCTION_180
0x40072ad	              0x53	                                push rbx	      9152	eval.c	FUNCTION_180
0x40072ae	          0x4489cb	                            mov ebx, r9d	      9152	eval.c	FUNCTION_180
0x40072b1	          0x4889fd	                            mov rbp, rdi	      9152	eval.c	FUNCTION_180
0x40072b4	          0x4d89c5	                             mov r13, r8	      9152	eval.c	FUNCTION_180
0x40072b7	        0x4883ec60	                           sub rsp, 0x60	      9152	eval.c	FUNCTION_180
0x40072bb	          0x448b0e	                    mov r9d, dword [rsi]	      9156	eval.c	FUNCTION_180	IF_1
0x40072be	    0x64488b042528	                mov rax, qword fs:[0x28]	      9152	eval.c	FUNCTION_180
0x40072c7	      0x4889442458	             mov qword [rsp + 0x58], rax	      9152	eval.c	FUNCTION_180
0x40072cc	            0x31c0	                            xor eax, eax	      9152	eval.c	FUNCTION_180
0x40072ce	          0x4585c9	                           test r9d, r9d	      9156	eval.c	FUNCTION_180	IF_1
0x40072d1	     0xf85b9000000	                           jne 0x4007390	      9156	eval.c	FUNCTION_180	IF_1
0x40072d7	          0x8d43fe	                      lea eax, [rbx - 2]	      9163	eval.c	FUNCTION_180	IF_2
0x40072da	          0x83f801	                              cmp eax, 1	      9163	eval.c	FUNCTION_180	IF_2
0x40072dd	     0xf8601010000	                           jbe 0x40073e4	      9163	eval.c	FUNCTION_180	IF_2
0x40072e3	          0x83fb01	                              cmp ebx, 1	      9165	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40072e6	     0xf8454010000	                            je 0x4007440	      9165	eval.c	FUNCTION_180	ELSE_1	IF_3
0x40072ec	      0xbe00000000	                              mov esi, 0	      9168	eval.c	FUNCTION_180	CALL_7
0x40072f1	          0x4889ef	                            mov rdi, rbp	      9168	eval.c	FUNCTION_180	CALL_7
0x40072f4	      0xe800000000	                          call 0x40072f9	      9168	eval.c	FUNCTION_180	CALL_7
0x40072f9	          0x4d85e4	                           test r12, r12	      9169	eval.c	FUNCTION_180	IF_4
0x40072fc	     0xf84fe000000	                            je 0x4007400	      9169	eval.c	FUNCTION_180	IF_4
0x4007302	          0x4c89e6	                            mov rsi, r12	      9175	eval.c	FUNCTION_180	CALL_11
0x4007305	          0x4889ef	                            mov rdi, rbp	      9175	eval.c	FUNCTION_180	CALL_11
0x4007308	      0xe82390ffff	                  call sym.ga_concat_esc	      9175	eval.c	FUNCTION_180	CALL_11
0x400730d	          0x83fb01	                              cmp ebx, 1	      9176	eval.c	FUNCTION_180	IF_5
0x4007310	            0x7459	                            je 0x400736b	      9176	eval.c	FUNCTION_180	IF_5
0x4007312	          0x83fb02	                              cmp ebx, 2	      9178	eval.c	FUNCTION_180	IF_5	IF_6
0x4007315	     0xf8455010000	                            je 0x4007470	      9178	eval.c	FUNCTION_180	IF_5	IF_6
0x400731b	          0x83fb03	                              cmp ebx, 3	      9180	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400731e	     0xf8434010000	                            je 0x4007458	      9180	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4007324	      0xbe00000000	                              mov esi, 0	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4007329	          0x4889ef	                            mov rdi, rbp	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x400732c	      0xe800000000	                          call 0x4007331	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4007331	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x4007335	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x400733b	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x400733e	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4007340	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x4007342	          0x4c89ef	                            mov rdi, r13	      5759	eval.c	FUNCTION_89	CALL_1
0x4007345	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5759	eval.c	FUNCTION_89	CALL_1
0x400734a	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5759	eval.c	FUNCTION_89	CALL_1
0x400734f	      0xe800000000	                          call 0x4007354	      5759	eval.c	FUNCTION_89	CALL_1
0x4007354	          0x4889ef	                            mov rdi, rbp	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4007357	          0x4889c6	                            mov rsi, rax	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x400735a	      0xe8d18fffff	                  call sym.ga_concat_esc	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x400735f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x4007364	      0xe800000000	                          call 0x4007369	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x4007369	              0x58	                                 pop rax	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x400736a	              0x5a	                                 pop rdx	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x400736b	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      9187	eval.c	FUNCTION_180
0x4007370	    0x644833042528	                xor rax, qword fs:[0x28]	      9187	eval.c	FUNCTION_180
0x4007379	     0xf8503010000	                           jne 0x4007482	      9187	eval.c	FUNCTION_180
0x400737f	        0x4883c460	                           add rsp, 0x60	      9187	eval.c	FUNCTION_180
0x4007383	              0x5b	                                 pop rbx	      9187	eval.c	FUNCTION_180
0x4007384	              0x5d	                                 pop rbp	      9187	eval.c	FUNCTION_180
0x4007385	            0x415c	                                 pop r12	      9187	eval.c	FUNCTION_180
0x4007387	            0x415d	                                 pop r13	      9187	eval.c	FUNCTION_180
0x4007389	            0x415e	                                 pop r14	      9187	eval.c	FUNCTION_180
0x400738b	              0xc3	                                     ret	      9187	eval.c	FUNCTION_180
0x400738c	         0xf1f4000	                         nop dword [rax]	      9187	eval.c	FUNCTION_180
0x4007390	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x4007394	          0x4889f7	                            mov rdi, rsi	      5742	eval.c	FUNCTION_88	CALL_1
0x4007397	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x400739a	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x400739c	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x40073a2	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x40073a4	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x40073a9	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x40073ae	      0xe800000000	                          call 0x40073b3	      5742	eval.c	FUNCTION_88	CALL_1
0x40073b3	          0x4889ef	                            mov rdi, rbp	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40073b6	          0x4889c6	                            mov rsi, rax	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40073b9	      0xe800000000	                          call 0x40073be	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40073be	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x40073c3	      0xe800000000	                          call 0x40073c8	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x40073c8	          0x4889ef	                            mov rdi, rbp	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40073cb	      0xbe00000000	                              mov esi, 0	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40073d0	      0xe800000000	                          call 0x40073d5	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40073d5	          0x8d43fe	                      lea eax, [rbx - 2]	      9163	eval.c	FUNCTION_180	IF_2
0x40073d8	              0x5f	                                 pop rdi	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40073d9	          0x83f801	                              cmp eax, 1	      9163	eval.c	FUNCTION_180	IF_2
0x40073dc	            0x4158	                                  pop r8	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40073de	     0xf87fffeffff	                            ja 0x40072e3	      9163	eval.c	FUNCTION_180	IF_2
0x40073e4	      0xbe00000000	                              mov esi, 0	      9164	eval.c	FUNCTION_180	CALL_5
0x40073e9	          0x4889ef	                            mov rdi, rbp	      9164	eval.c	FUNCTION_180	CALL_5
0x40073ec	      0xe800000000	                          call 0x40073f1	      9164	eval.c	FUNCTION_180	CALL_5
0x40073f1	          0x4d85e4	                           test r12, r12	      9169	eval.c	FUNCTION_180	IF_4
0x40073f4	     0xf8508ffffff	                           jne 0x4007302	      9169	eval.c	FUNCTION_180	IF_4
0x40073fa	    0x660f1f440000	                    nop word [rax + rax]	      9169	eval.c	FUNCTION_180	IF_4
0x4007400	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x4007404	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x4007406	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x400740c	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x400740e	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x4007411	          0x4c89f7	                            mov rdi, r14	      5759	eval.c	FUNCTION_89	CALL_1
0x4007414	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5759	eval.c	FUNCTION_89	CALL_1
0x4007419	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5759	eval.c	FUNCTION_89	CALL_1
0x400741e	      0xe800000000	                          call 0x4007423	      5759	eval.c	FUNCTION_89	CALL_1
0x4007423	          0x4889ef	                            mov rdi, rbp	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x4007426	          0x4889c6	                            mov rsi, rax	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x4007429	      0xe8028fffff	                  call sym.ga_concat_esc	      9171	eval.c	FUNCTION_180	IF_4	CALL_9
0x400742e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4007433	      0xe800000000	                          call 0x4007438	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4007438	              0x59	                                 pop rcx	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4007439	              0x5e	                                 pop rsi	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x400743a	      0xe9cefeffff	                           jmp 0x400730d	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x400743f	              0x90	                                     nop	      9172	eval.c	FUNCTION_180	IF_4	CALL_10
0x4007440	      0xbe00000000	                              mov esi, 0	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x4007445	          0x4889ef	                            mov rdi, rbp	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x4007448	      0xe800000000	                          call 0x400744d	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x400744d	      0xe9a7feffff	                           jmp 0x40072f9	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x4007452	    0x660f1f440000	                    nop word [rax + rax]	      9166	eval.c	FUNCTION_180	ELSE_1	IF_3
0x4007458	      0xbe00000000	                              mov esi, 0	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400745d	          0x4889ef	                            mov rdi, rbp	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4007460	      0xe800000000	                          call 0x4007465	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4007465	      0xe9c7feffff	                           jmp 0x4007331	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x400746a	    0x660f1f440000	                    nop word [rax + rax]	      9181	eval.c	FUNCTION_180	IF_5	ELSE_4	IF_7
0x4007470	      0xbe00000000	                              mov esi, 0	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4007475	          0x4889ef	                            mov rdi, rbp	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4007478	      0xe800000000	                          call 0x400747d	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x400747d	      0xe9affeffff	                           jmp 0x4007331	      9179	eval.c	FUNCTION_180	IF_5	CALL_12
0x4007482	      0xe800000000	                          call 0x4007487	      9187	eval.c	FUNCTION_180
ex_let	DO,0:WHILE,0:FOR,0:ELSE,5:IF,12:SWITCH,0:CALL,22:functions,0	360
0x400c230	            0x4157	                                push r15	      1235	eval.c	FUNCTION_31
0x400c232	            0x4156	                                push r14	      1235	eval.c	FUNCTION_31
0x400c234	            0x4155	                                push r13	      1235	eval.c	FUNCTION_31
0x400c236	            0x4154	                                push r12	      1235	eval.c	FUNCTION_31
0x400c238	              0x55	                                push rbp	      1235	eval.c	FUNCTION_31
0x400c239	              0x53	                                push rbx	      1235	eval.c	FUNCTION_31
0x400c23a	          0x4889fd	                            mov rbp, rdi	      1235	eval.c	FUNCTION_31
0x400c23d	    0x4881ec980000	                           sub rsp, 0x98	      1235	eval.c	FUNCTION_31
0x400c244	          0x488b1f	                    mov rbx, qword [rdi]	      1236	eval.c	FUNCTION_31
0x400c247	    0x64488b042528	                mov rax, qword fs:[0x28]	      1235	eval.c	FUNCTION_31
0x400c250	    0x488984248800	             mov qword [rsp + 0x88], rax	      1235	eval.c	FUNCTION_31
0x400c258	            0x31c0	                            xor eax, eax	      1235	eval.c	FUNCTION_31
0x400c25a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1240	eval.c	FUNCTION_31
0x400c262	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1241	eval.c	FUNCTION_31
0x400c26a	    0xc74424140100	               mov dword [rsp + 0x14], 1	      1244	eval.c	FUNCTION_31
0x400c272	          0x803b5b	                    cmp byte [rbx], 0x5b	      1421	eval.c	FUNCTION_33	IF_1
0x400c275	     0xf8425010000	                            je 0x400c3a0	      1421	eval.c	FUNCTION_33	IF_1
0x400c27b	          0x4889df	                            mov rdi, rbx	      1457	eval.c	FUNCTION_33	CALL_10
0x400c27e	      0xe88d5effff	                   call sym.skip_var_one	      1457	eval.c	FUNCTION_33	CALL_10
0x400c283	          0x4885c0	                           test rax, rax	      1247	eval.c	FUNCTION_31	IF_1
0x400c286	            0x746d	                            je 0x400c2f5	      1247	eval.c	FUNCTION_31	IF_1
0x400c288	          0x4839c3	                            cmp rbx, rax	      1249	eval.c	FUNCTION_31	IF_2
0x400c28b	            0x730c	                           jae 0x400c299	      1249	eval.c	FUNCTION_31	IF_2
0x400c28d	            0x31d2	                            xor edx, edx	      1250	eval.c	FUNCTION_31	IF_2
0x400c28f	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      1250	eval.c	FUNCTION_31	IF_2
0x400c293	           0xf94c2	                                 sete dl	      1250	eval.c	FUNCTION_31	IF_2
0x400c296	          0x4829d0	                            sub rax, rdx	      1250	eval.c	FUNCTION_31	IF_2
0x400c299	          0x4889c7	                            mov rdi, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x400c29c	      0xe800000000	                          call 0x400c2a1	      1251	eval.c	FUNCTION_31	CALL_2
0x400c2a1	           0xfb630	                   movzx esi, byte [rax]	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2a4	          0x4989c4	                            mov r12, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x400c2a7	        0x4080fe3d	                           cmp sil, 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2ab	            0x7473	                            je 0x400c320	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2ad	      0xbf00000000	                              mov edi, 0	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2b2	      0xe800000000	                          call 0x400c2b7	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2b7	          0x4885c0	                           test rax, rax	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2ba	            0x7408	                            je 0x400c2c4	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2bc	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2c2	            0x745c	                            je 0x400c320	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x400c2c4	           0xfb63b	                   movzx edi, byte [rbx]	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400c2c7	        0x4080ff5b	                           cmp dil, 0x5b	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400c2cb	     0xf843f020000	                            je 0x400c510	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x400c2d1	      0xe800000000	                          call 0x400c2d6	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400c2d6	            0x85c0	                           test eax, eax	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400c2d8	     0xf8442010000	                            je 0x400c420	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400c2de	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x400c2e1	            0x85c9	                           test ecx, ecx	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x400c2e3	     0xf8457030000	                            je 0x400c640	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x400c2e9	          0x4889df	                            mov rdi, rbx	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400c2ec	      0xe800000000	                          call 0x400c2f1	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400c2f1	        0x48894508	                mov qword [rbp + 8], rax	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x400c2f5	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1305	eval.c	FUNCTION_31
0x400c2fd	    0x644833042528	                xor rax, qword fs:[0x28]	      1305	eval.c	FUNCTION_31
0x400c306	     0xf8514050000	                           jne 0x400c820	      1305	eval.c	FUNCTION_31
0x400c30c	    0x4881c4980000	                           add rsp, 0x98	      1305	eval.c	FUNCTION_31
0x400c313	              0x5b	                                 pop rbx	      1305	eval.c	FUNCTION_31
0x400c314	              0x5d	                                 pop rbp	      1305	eval.c	FUNCTION_31
0x400c315	            0x415c	                                 pop r12	      1305	eval.c	FUNCTION_31
0x400c317	            0x415d	                                 pop r13	      1305	eval.c	FUNCTION_31
0x400c319	            0x415e	                                 pop r14	      1305	eval.c	FUNCTION_31
0x400c31b	            0x415f	                                 pop r15	      1305	eval.c	FUNCTION_31
0x400c31d	              0xc3	                                     ret	      1305	eval.c	FUNCTION_31
0x400c31e	            0x6690	                                     nop	      1305	eval.c	FUNCTION_31
0x400c320	      0xc64424403d	            mov byte [rsp + 0x40], 0x3d 	      1278	eval.c	FUNCTION_31	ELSE_3
0x400c325	      0xc644244100	                mov byte [rsp + 0x41], 0	      1279	eval.c	FUNCTION_31	ELSE_3
0x400c32a	      0x410fb63424	                   movzx esi, byte [r12]	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400c32f	        0x4080fe3d	                           cmp sil, 0x3d	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400c333	     0xf84bf000000	                            je 0x400c3f8	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x400c339	      0xbf00000000	                              mov edi, 0	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400c33e	      0xe800000000	                          call 0x400c343	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400c343	          0x4885c0	                           test rax, rax	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400c346	            0x7409	                            je 0x400c351	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x400c348	      0x410fb60424	                   movzx eax, byte [r12]	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x400c34d	        0x88442440	               mov byte [rsp + 0x40], al	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x400c351	      0x498d7c2402	                      lea rdi, [r12 + 2]	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400c356	      0xe800000000	                          call 0x400c35b	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400c35b	          0x4889c7	                            mov rdi, rax	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x400c35e	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400c361	            0x85d2	                           test edx, edx	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400c363	            0x7407	                            je 0x400c36c	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400c365	    0x830500000000	               add dword [0x0400c36c], 1	      1290	eval.c	FUNCTION_31	ELSE_3	IF_9
0x400c36c	            0x31c9	                            xor ecx, ecx	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c36e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c373	            0x85d2	                           test edx, edx	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c375	        0x488d5508	                      lea rdx, [rbp + 8]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c379	           0xf94c1	                                 sete cl	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c37c	      0xe800000000	                          call 0x400c381	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x400c381	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c384	            0x85d2	                           test edx, edx	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c386	            0x7438	                            je 0x400c3c0	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c388	            0x85c0	                           test eax, eax	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x400c38a	     0xf8580000000	                           jne 0x400c410	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x400c390	    0x832d00000000	               sub dword [0x0400c397], 1	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c397	      0xe959ffffff	                           jmp 0x400c2f5	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c39c	         0xf1f4000	                         nop dword [rax]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3a0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3a5	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3aa	          0x4889df	                            mov rdi, rbx	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3ad	      0xe89e5dffff	           call sym.skip_var_list.part.4	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3b2	      0xe9ccfeffff	                           jmp 0x400c283	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3b7	    0x660f1f840000	                    nop word [rax + rax]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x400c3c0	            0x85c0	                           test eax, eax	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x400c3c2	     0xf842dffffff	                            je 0x400c2f5	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x400c3c8	        0x488b7d00	                    mov rdi, qword [rbp]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3cc	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3d1	      0x4c8d4c2440	                    lea r9, [rsp + 0x40]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3d6	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3da	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3df	            0x31d2	                            xor edx, edx	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3e1	      0xe8baebffff	                    call sym.ex_let_vars	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x400c3e6	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400c3eb	      0xe800000000	                          call 0x400c3f0	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400c3f0	      0xe900ffffff	                           jmp 0x400c2f5	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400c3f5	           0xf1f00	                         nop dword [rax]	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x400c3f8	      0x498d7c2401	                      lea rdi, [r12 + 1]	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400c3fd	      0xe800000000	                          call 0x400c402	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400c402	          0x4889c7	                            mov rdi, rax	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400c405	      0xe954ffffff	                           jmp 0x400c35e	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400c40a	    0x660f1f440000	                    nop word [rax + rax]	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x400c410	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400c415	      0xe800000000	                          call 0x400c41a	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400c41a	      0xe971ffffff	                           jmp 0x400c390	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400c41f	              0x90	                                     nop	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400c420	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x400c425	          0x4889d8	                            mov rax, rbx	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x400c428	            0x31db	                            xor ebx, ebx	      1567	eval.c	FUNCTION_42
0x400c42a	            0xeb0e	                           jmp 0x400c43a	      1567	eval.c	FUNCTION_42
0x400c42c	         0xf1f4000	                         nop dword [rax]	      1567	eval.c	FUNCTION_42
0x400c430	      0xe800000000	                          call 0x400c435	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x400c435	      0x4889442418	             mov qword [rsp + 0x18], rax	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x400c43a	           0xfb638	                   movzx edi, byte [rax]	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c43d	      0xe800000000	                          call 0x400c442	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c442	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c444	     0xf8526010000	                           jne 0x400c570	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c44a	    0x8b0500000000	            mov eax, dword [0x0400c450] 	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c450	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c452	     0xf8518010000	                           jne 0x400c570	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x400c458	            0x85db	                           test ebx, ebx	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400c45a	            0x7509	                           jne 0x400c465	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400c45c	        0x448b4530	            mov r8d, dword [rbp + 0x30] 	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400c460	          0x4585c0	                           test r8d, r8d	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400c463	            0x7443	                            je 0x400c4a8	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x400c465	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c46a	            0x31d2	                            xor edx, edx	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c46c	            0x31f6	                            xor esi, esi	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c46e	      0xb903000000	                              mov ecx, 3	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c473	      0xe800000000	                          call 0x400c478	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c478	          0x4889c7	                            mov rdi, rax	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c47b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x400c480	           0xfb600	                   movzx eax, byte [rax]	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c483	            0x3c20	                            cmp al, 0x20	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c485	            0x74a9	                            je 0x400c430	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c487	            0x3c09	                               cmp al, 9	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c489	            0x74a5	                            je 0x400c430	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c48b	           0xfb6f8	                           movzx edi, al	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c48e	      0xe800000000	                          call 0x400c493	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c493	            0x85c0	                           test eax, eax	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c495	     0xf845f020000	                            je 0x400c6fa	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c49b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c4a0	            0xeb8e	                           jmp 0x400c430	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c4a2	    0x660f1f440000	                    nop word [rax + rax]	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x400c4a8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4ad	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4b2	      0xb901000000	                              mov ecx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4b7	      0xba01000000	                              mov edx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4bc	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400c4c1	      0xe800000000	                          call 0x400c4c6	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4c6	          0x83f800	                              cmp eax, 0	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400c4c9	          0x4189c5	                           mov r13d, eax	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x400c4cc	            0x7e62	                           jle 0x400c530	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400c4ce	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      1606	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_5
0x400c4d3	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4d8	    0x41b801000000	                              mov r8d, 1	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4de	            0x89c6	                            mov esi, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4e0	          0x4d85e4	                           test r12, r12	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400c4e3	        0x4d0f44e6	                          cmove r12, r14	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x400c4e7	          0x4531c9	                            xor r9d, r9d	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4ea	            0x31c9	                            xor ecx, ecx	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4ec	          0x4c89e7	                            mov rdi, r12	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4ef	      0xe800000000	                          call 0x400c4f4	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4f4	            0x85c0	                           test eax, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4f6	     0xf8584000000	                           jne 0x400c580	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x400c4fc	      0xbb01000000	                              mov ebx, 1	      1602	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x400c501	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400c506	      0xe800000000	                          call 0x400c50b	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400c50b	            0xeb8e	                           jmp 0x400c49b	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400c50d	           0xf1f00	                         nop dword [rax]	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x400c510	            0x31ff	                            xor edi, edi	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c512	      0xba05000000	                              mov edx, 5	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c517	      0xbe00000000	                              mov esi, 0	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c51c	      0xe800000000	                          call 0x400c521	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c521	          0x4889c7	                            mov rdi, rax	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c524	      0xe800000000	                          call 0x400c529	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c529	      0xe9bbfdffff	                           jmp 0x400c2e9	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c52e	            0x6690	                                     nop	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x400c530	            0x74ca	                            je 0x400c4fc	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400c532	      0xe800000000	                          call 0x400c537	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400c537	            0x85c0	                           test eax, eax	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400c539	            0x75c1	                           jne 0x400c4fc	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x400c53b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c540	      0xbe00000000	                              mov esi, 0	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c545	            0x31ff	                            xor edi, edi	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c547	      0xba05000000	                              mov edx, 5	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c54c	    0xc70500000000	               mov dword [0x0400c556], 1	      1598	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4
0x400c556	      0xe800000000	                          call 0x400c55b	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c55b	          0x4889de	                            mov rsi, rbx	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c55e	          0x4889c7	                            mov rdi, rax	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c561	      0xe800000000	                          call 0x400c566	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x400c570	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1662	eval.c	FUNCTION_42
0x400c575	      0xe96ffdffff	                           jmp 0x400c2e9	      1662	eval.c	FUNCTION_42
0x400c57a	    0x660f1f440000	                    nop word [rax + rax]	      1662	eval.c	FUNCTION_42
0x400c580	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c585	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c58a	      0xb901000000	                              mov ecx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c58f	      0xba01000000	                              mov edx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c594	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1613	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3
0x400c599	      0xe800000000	                          call 0x400c59e	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c59e	            0x85c0	                           test eax, eax	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c5a0	     0xf8456ffffff	                            je 0x400c4fc	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x400c5a6	      0x4c397c2418	            cmp qword [rsp + 0x18], r15 	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c5ab	            0x750a	                           jne 0x400c5b7	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c5ad	        0x4183fd02	                             cmp r13d, 2	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c5b1	     0xf846b010000	                            je 0x400c722	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c5b7	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5bb	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5be	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5c0	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5c2	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5c8	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5cd	      0x488d742438	                   lea rsi, [rsp + 0x38]	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5d2	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5d7	      0xe800000000	                          call 0x400c5dc	      5742	eval.c	FUNCTION_88	CALL_1
0x400c5dc	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400c5e1	          0x4885c0	                           test rax, rax	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5e4	        0x440fb62a	                  movzx r13d, byte [rdx]	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400c5e8	          0xc60200	                       mov byte [rdx], 0	      1642	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400c5eb	      0xba00000000	                              mov edx, 0	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5f0	              0x5e	                                 pop rsi	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5f1	              0x5f	                                 pop rdi	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5f2	        0x480f44c2	                          cmove rax, rdx	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5f6	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5fb	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c5ff	          0x4889c1	                            mov rcx, rax	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c602	      0xbf00000000	                              mov edi, 0	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c607	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c60c	        0x4d0f44f4	                          cmove r14, r12	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c610	          0x4c89f6	                            mov rsi, r14	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c613	      0xe8d83bffff	                 call sym.list_one_var_a	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x400c618	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400c61d	          0x448828	                    mov byte [rax], r13b	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x400c620	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x400c625	      0xe800000000	                          call 0x400c62a	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x400c62a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400c62f	      0xe800000000	                          call 0x400c634	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400c634	      0xe9c8feffff	                           jmp 0x400c501	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400c639	     0xf1f80000000	                         nop dword [rax]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x400c640	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1508	eval.c	FUNCTION_36	CALL_1
0x400c645	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x400c64a	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400c64f	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400c654	      0xe800000000	                          call 0x400c659	      1508	eval.c	FUNCTION_36	CALL_1
0x400c659	    0x488b05000000	            mov rax, qword [0x0400c660] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400c660	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1517	eval.c	FUNCTION_37	CALL_1
0x400c665	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x400c66a	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x400c66f	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400c676	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x400c67a	      0xe800000000	                          call 0x400c67f	      1517	eval.c	FUNCTION_37	CALL_1
0x400c67f	    0x488b05000000	            mov rax, qword [0x0400c686] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400c686	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1527	eval.c	FUNCTION_38	CALL_1
0x400c68b	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x400c690	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x400c695	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400c69c	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x400c6a0	      0xe800000000	                          call 0x400c6a5	      1527	eval.c	FUNCTION_38	CALL_1
0x400c6a5	    0x488b05000000	            mov rax, qword [0x0400c6ac] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6ac	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6b1	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6b6	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6bb	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6c2	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6c6	      0xe800000000	                          call 0x400c6cb	      1537	eval.c	FUNCTION_39	CALL_1
0x400c6cb	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1270	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_12
0x400c6d0	      0xe88b79ffff	               call sym.list_script_vars	      1270	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_12
0x400c6d5	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x400c6da	      0xe800000000	                          call 0x400c6df	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x400c6df	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6e4	            0x31d2	                            xor edx, edx	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6e6	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6eb	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6f0	      0xe800000000	                          call 0x400c6f5	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6f5	      0xe9effbffff	                           jmp 0x400c2e9	      1547	eval.c	FUNCTION_40	CALL_1
0x400c6fa	            0x31ff	                            xor edi, edi	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c6fc	      0xba05000000	                              mov edx, 5	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c701	      0xbe00000000	                              mov esi, 0	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c706	    0xc70500000000	               mov dword [0x0400c710], 1	      1582	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2
0x400c710	      0xe800000000	                          call 0x400c715	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c715	          0x4889c7	                            mov rdi, rax	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c718	      0xe800000000	                          call 0x400c71d	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c71d	      0xe94efeffff	                           jmp 0x400c570	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x400c722	    0x41807c24013a	                cmp byte [r12 + 1], 0x3a	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c728	     0xf8589feffff	                           jne 0x400c5b7	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x400c72e	      0x410fb60424	                   movzx eax, byte [r12]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c733	          0x83e862	                           sub eax, 0x62	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c736	            0x3c15	                            cmp al, 0x15	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c738	     0xf87e7000000	                            ja 0x400c825	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c73e	           0xfb6c0	                           movzx eax, al	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c741	    0xff24c5000000	                       jmp qword [rax*8]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x400c748	    0x488b05000000	            mov rax, qword [0x0400c74f] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400c74f	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1527	eval.c	FUNCTION_38	CALL_1
0x400c754	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x400c759	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x400c75e	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x400c765	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x400c769	      0xe800000000	                          call 0x400c76e	      1527	eval.c	FUNCTION_38	CALL_1
0x400c76e	      0xe9b7feffff	                           jmp 0x400c62a	      1527	eval.c	FUNCTION_38	CALL_1
0x400c773	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1547	eval.c	FUNCTION_40	CALL_1
0x400c778	            0x31d2	                            xor edx, edx	      1547	eval.c	FUNCTION_40	CALL_1
0x400c77a	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400c77f	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x400c784	      0xe800000000	                          call 0x400c789	      1547	eval.c	FUNCTION_40	CALL_1
0x400c789	      0xe99cfeffff	                           jmp 0x400c62a	      1547	eval.c	FUNCTION_40	CALL_1
0x400c78e	    0x488b05000000	            mov rax, qword [0x0400c795] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400c795	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1537	eval.c	FUNCTION_39	CALL_1
0x400c79a	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x400c79f	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x400c7a4	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x400c7ab	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x400c7af	      0xe800000000	                          call 0x400c7b4	      1537	eval.c	FUNCTION_39	CALL_1
0x400c7b4	      0xe971feffff	                           jmp 0x400c62a	      1537	eval.c	FUNCTION_39	CALL_1
0x400c7b9	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400c7be	      0xe89d78ffff	               call sym.list_script_vars	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400c7c3	      0xe962feffff	                           jmp 0x400c62a	      1627	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_18
0x400c7c8	      0x488d7c2414	                   lea rdi, [rsp + 0x14]	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400c7cd	      0xe800000000	                          call 0x400c7d2	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400c7d2	      0xe953feffff	                           jmp 0x400c62a	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x400c7d7	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7dc	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7e1	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7e6	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7eb	      0xe800000000	                          call 0x400c7f0	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7f0	      0xe935feffff	                           jmp 0x400c62a	      1508	eval.c	FUNCTION_36	CALL_1
0x400c7f5	    0x488b05000000	            mov rax, qword [0x0400c7fc] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400c7fc	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1517	eval.c	FUNCTION_37	CALL_1
0x400c801	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x400c806	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x400c80b	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x400c812	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x400c816	      0xe800000000	                          call 0x400c81b	      1517	eval.c	FUNCTION_37	CALL_1
0x400c81b	      0xe90afeffff	                           jmp 0x400c62a	      1517	eval.c	FUNCTION_37	CALL_1
0x400c820	      0xe800000000	                          call 0x400c825	      1305	eval.c	FUNCTION_31
0x400c825	            0x31ff	                            xor edi, edi	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c827	      0xba05000000	                              mov edx, 5	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c82c	      0xbe00000000	                              mov esi, 0	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c831	      0xe800000000	                          call 0x400c836	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c836	          0x4c89e6	                            mov rsi, r12	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c839	          0x4889c7	                            mov rdi, rax	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c83c	      0xe800000000	                          call 0x400c841	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x400c841	      0xe9e4fdffff	                           jmp 0x400c62a	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
assert_beeps	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,7:functions,0	41
0x40071e0	              0x53	                                push rbx	      9034	eval.c	FUNCTION_177
0x40071e1	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40071e6	        0x4883ec20	                           sub rsp, 0x20	      9034	eval.c	FUNCTION_177
0x40071ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      9034	eval.c	FUNCTION_177
0x40071f3	      0x4889442418	             mov qword [rsp + 0x18], rax	      9034	eval.c	FUNCTION_177
0x40071f8	            0x31c0	                            xor eax, eax	      9034	eval.c	FUNCTION_177
0x40071fa	      0xe800000000	                          call 0x40071ff	      7098	eval.c	FUNCTION_129	CALL_1
0x40071ff	          0x4889c7	                            mov rdi, rax	      9042	eval.c	FUNCTION_177	CALL_2
0x4007202	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4007205	    0xc70500000000	               mov dword [0x0400720f], 0	      9039	eval.c	FUNCTION_177
0x400720f	    0xc70500000000	               mov dword [0x04007219], 1	      9040	eval.c	FUNCTION_177
0x4007219	    0xc70500000000	               mov dword [0x04007223], 0	      9041	eval.c	FUNCTION_177
0x4007223	      0xe800000000	                          call 0x4007228	      9042	eval.c	FUNCTION_177	CALL_2
0x4007228	    0x8b0500000000	            mov eax, dword [0x0400722e] 	      9043	eval.c	FUNCTION_177	IF_1
0x400722e	            0x85c0	                           test eax, eax	      9043	eval.c	FUNCTION_177	IF_1
0x4007230	            0x742e	                            je 0x4007260	      9043	eval.c	FUNCTION_177	IF_1
0x4007232	            0x31c0	                            xor eax, eax	      9043	eval.c	FUNCTION_177	IF_1
0x4007234	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      9056	eval.c	FUNCTION_177
0x4007239	    0x644833142528	                xor rdx, qword fs:[0x28]	      9056	eval.c	FUNCTION_177
0x4007242	    0xc70500000000	               mov dword [0x0400724c], 0	      9053	eval.c	FUNCTION_177
0x400724c	    0xc70500000000	               mov dword [0x04007256], 0	      9054	eval.c	FUNCTION_177
0x4007256	            0x753f	                           jne 0x4007297	      9056	eval.c	FUNCTION_177
0x4007258	        0x4883c420	                           add rsp, 0x20	      9056	eval.c	FUNCTION_177
0x400725c	              0x5b	                                 pop rbx	      9056	eval.c	FUNCTION_177
0x400725d	              0xc3	                                     ret	      9056	eval.c	FUNCTION_177
0x400725e	            0x6690	                                     nop	      9056	eval.c	FUNCTION_177
0x4007260	          0x4889e7	                            mov rdi, rsp	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x4007263	      0xe800000000	                          call 0x4007268	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x4007268	      0xbe00000000	                              mov esi, 0	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x400726d	          0x4889e7	                            mov rdi, rsp	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x4007270	      0xe800000000	                          call 0x4007275	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x4007275	          0x4889de	                            mov rsi, rbx	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x4007278	          0x4889e7	                            mov rdi, rsp	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x400727b	      0xe800000000	                          call 0x4007280	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x4007280	          0x4889e7	                            mov rdi, rsp	      9048	eval.c	FUNCTION_177	IF_1	CALL_6
0x4007283	      0xe800000000	                          call 0x4007288	      9048	eval.c	FUNCTION_177	IF_1	CALL_6
0x4007288	          0x4889e7	                            mov rdi, rsp	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x400728b	      0xe800000000	                          call 0x4007290	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x4007290	      0xb801000000	                              mov eax, 1	      9050	eval.c	FUNCTION_177	IF_1
0x4007295	            0xeb9d	                           jmp 0x4007234	      9050	eval.c	FUNCTION_177	IF_1
0x4007297	      0xe800000000	                          call 0x400729c	      9056	eval.c	FUNCTION_177
get_option_tv	DO,0:WHILE,0:FOR,0:ELSE,5:IF,10:SWITCH,0:CALL,6:functions,0	116
0x4000e80	            0x4156	                                push r14	      4585	eval.c	FUNCTION_72
0x4000e82	            0x4155	                                push r13	      4585	eval.c	FUNCTION_72
0x4000e84	          0x4189d0	                            mov r8d, edx	      4585	eval.c	FUNCTION_72
0x4000e87	            0x4154	                                push r12	      4585	eval.c	FUNCTION_72
0x4000e89	              0x55	                                push rbp	      4585	eval.c	FUNCTION_72
0x4000e8a	          0x4989f4	                            mov r12, rsi	      4585	eval.c	FUNCTION_72
0x4000e8d	              0x53	                                push rbx	      4585	eval.c	FUNCTION_72
0x4000e8e	          0x4889fb	                            mov rbx, rdi	      4585	eval.c	FUNCTION_72
0x4000e91	        0x4883ec20	                           sub rsp, 0x20	      4585	eval.c	FUNCTION_72
0x4000e95	    0x64488b042528	                mov rax, qword fs:[0x28]	      4585	eval.c	FUNCTION_72
0x4000e9e	      0x4889442418	             mov qword [rsp + 0x18], rax	      4585	eval.c	FUNCTION_72
0x4000ea3	            0x31c0	                            xor eax, eax	      4585	eval.c	FUNCTION_72
0x4000ea5	          0x488b07	                    mov rax, qword [rdi]	      4591	eval.c	FUNCTION_72
0x4000ea8	      0x488d742404	                      lea rsi, [rsp + 4]	      4598	eval.c	FUNCTION_72	CALL_1
0x4000ead	        0x440fb628	                  movzx r13d, byte [rax]	      4591	eval.c	FUNCTION_72
0x4000eb1	      0xe88af1ffff	                call sym.find_option_end	      4598	eval.c	FUNCTION_72	CALL_1
0x4000eb6	          0x4885c0	                           test rax, rax	      4599	eval.c	FUNCTION_72	IF_1
0x4000eb9	          0x4889c5	                            mov rbp, rax	      4598	eval.c	FUNCTION_72	CALL_1
0x4000ebc	     0xf84fe000000	                            je 0x4000fc0	      4599	eval.c	FUNCTION_72	IF_1
0x4000ec2	          0x4585c0	                           test r8d, r8d	      4606	eval.c	FUNCTION_72	IF_3
0x4000ec5	            0x7471	                            je 0x4000f38	      4606	eval.c	FUNCTION_72	IF_3
0x4000ec7	          0x4d85e4	                           test r12, r12	      4614	eval.c	FUNCTION_72	CALL_4
0x4000eca	        0x440fb630	                  movzx r14d, byte [rax]	      4612	eval.c	FUNCTION_72
0x4000ece	          0xc60000	                       mov byte [rax], 0	      4613	eval.c	FUNCTION_72
0x4000ed1	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000ed5	     0xf848d000000	                            je 0x4000f68	      4614	eval.c	FUNCTION_72	CALL_4
0x4000edb	          0x488b3f	                    mov rdi, qword [rdi]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000ede	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000ee3	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000ee8	      0xe800000000	                          call 0x4000eed	      4614	eval.c	FUNCTION_72	CALL_4
0x4000eed	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x4000ef0	     0xf84fa000000	                            je 0x4000ff0	      4617	eval.c	FUNCTION_72	IF_4
0x4000ef6	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000ef9	     0xf8421010000	                            je 0x4001020	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4000eff	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000f02	     0xf8498000000	                            je 0x4000fa0	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000f08	          0x83f801	                              cmp eax, 1	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000f0b	     0xf842f010000	                            je 0x4001040	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4000f11	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000f16	    0x41c704240200	                      mov dword [r12], 2	      4642	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000f1e	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4000f23	      0x4989442408	                mov qword [r12 + 8], rax	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4000f28	        0x44887500	                    mov byte [rbp], r14b	      4649	eval.c	FUNCTION_72
0x4000f2c	          0x48892b	                    mov qword [rbx], rbp	      4650	eval.c	FUNCTION_72
0x4000f2f	            0x89d5	                            mov ebp, edx	      4652	eval.c	FUNCTION_72
0x4000f31	            0xeb0d	                           jmp 0x4000f40	      4652	eval.c	FUNCTION_72
0x4000f33	       0xf1f440000	                   nop dword [rax + rax]	      4652	eval.c	FUNCTION_72
0x4000f38	          0x488903	                    mov qword [rbx], rax	      4608	eval.c	FUNCTION_72	IF_3
0x4000f3b	      0xbd01000000	                              mov ebp, 1	      4609	eval.c	FUNCTION_72	IF_3
0x4000f40	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4653	eval.c	FUNCTION_72
0x4000f45	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4653	eval.c	FUNCTION_72
0x4000f4e	            0x89e8	                            mov eax, ebp	      4653	eval.c	FUNCTION_72
0x4000f50	     0xf8506010000	                           jne 0x400105c	      4653	eval.c	FUNCTION_72
0x4000f56	        0x4883c420	                           add rsp, 0x20	      4653	eval.c	FUNCTION_72
0x4000f5a	              0x5b	                                 pop rbx	      4653	eval.c	FUNCTION_72
0x4000f5b	              0x5d	                                 pop rbp	      4653	eval.c	FUNCTION_72
0x4000f5c	            0x415c	                                 pop r12	      4653	eval.c	FUNCTION_72
0x4000f5e	            0x415d	                                 pop r13	      4653	eval.c	FUNCTION_72
0x4000f60	            0x415e	                                 pop r14	      4653	eval.c	FUNCTION_72
0x4000f62	              0xc3	                                     ret	      4653	eval.c	FUNCTION_72
0x4000f63	       0xf1f440000	                   nop dword [rax + rax]	      4653	eval.c	FUNCTION_72
0x4000f68	          0x488b3f	                    mov rdi, qword [rdi]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000f6b	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x4000f70	            0x31d2	                            xor edx, edx	      4614	eval.c	FUNCTION_72	CALL_4
0x4000f72	      0xe800000000	                          call 0x4000f77	      4614	eval.c	FUNCTION_72	CALL_4
0x4000f77	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x4000f79	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x4000f7c	            0x74aa	                            je 0x4000f28	      4617	eval.c	FUNCTION_72	IF_4
0x4000f7e	        0x4180fd2b	                          cmp r13b, 0x2b	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4000f82	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4000f87	            0x759f	                           jne 0x4000f28	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4000f89	          0x83c002	                              add eax, 2	      4621	eval.c	FUNCTION_72	IF_4
0x4000f8c	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x4000f8e	          0x83f801	                              cmp eax, 1	      4621	eval.c	FUNCTION_72	IF_4
0x4000f91	           0xf97c2	                                 seta dl	      4621	eval.c	FUNCTION_72	IF_4
0x4000f94	            0xeb92	                           jmp 0x4000f28	      4621	eval.c	FUNCTION_72	IF_4
0x4000f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4621	eval.c	FUNCTION_72	IF_4
0x4000fa0	    0x41c704240100	                      mov dword [r12], 1	      4632	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000fa8	    0x49c744240800	                  mov qword [r12 + 8], 0	      4633	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4000fb1	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4000fb6	      0xe96dffffff	                           jmp 0x4000f28	      4592	eval.c	FUNCTION_72
0x4000fbb	       0xf1f440000	                   nop dword [rax + rax]	      4592	eval.c	FUNCTION_72
0x4000fc0	          0x4d85e4	                           test r12, r12	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x4000fc3	     0xf8477ffffff	                            je 0x4000f40	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x4000fc9	          0x488b1f	                    mov rbx, qword [rdi]	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fcc	      0xba05000000	                              mov edx, 5	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fd1	            0x31ff	                            xor edi, edi	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fd3	      0xbe00000000	                              mov esi, 0	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fd8	      0xe800000000	                          call 0x4000fdd	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fdd	          0x4889de	                            mov rsi, rbx	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fe0	          0x4889c7	                            mov rdi, rax	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fe3	      0xe800000000	                          call 0x4000fe8	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fe8	      0xe953ffffff	                           jmp 0x4000f40	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000fed	           0xf1f00	                         nop dword [rax]	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x4000ff0	          0x4c8b23	                    mov r12, qword [rbx]	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000ff3	      0xba05000000	                              mov edx, 5	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000ff8	      0xbe00000000	                              mov esi, 0	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000ffd	            0x31ff	                            xor edi, edi	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4000fff	      0xe800000000	                          call 0x4001004	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001004	          0x4c89e6	                            mov rsi, r12	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001007	          0x4889c7	                            mov rdi, rax	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x400100a	      0xe800000000	                          call 0x400100f	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x400100f	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x4001011	      0xe912ffffff	                           jmp 0x4000f28	      4621	eval.c	FUNCTION_72	IF_4
0x4001016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4621	eval.c	FUNCTION_72	IF_4
0x4001020	    0x41c704240200	                      mov dword [r12], 2	      4627	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4001028	    0x49c744240800	                  mov qword [r12 + 8], 0	      4628	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4001031	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4001036	      0xe9edfeffff	                           jmp 0x4000f28	      4592	eval.c	FUNCTION_72
0x400103b	       0xf1f440000	                   nop dword [rax + rax]	      4592	eval.c	FUNCTION_72
0x4001040	      0x488b442408	                mov rax, qword [rsp + 8]	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4001045	    0x41c704240100	                      mov dword [r12], 1	      4637	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x400104d	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4001052	      0x4989442408	                mov qword [r12 + 8], rax	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4001057	      0xe9ccfeffff	                           jmp 0x4000f28	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x400105c	      0xe800000000	                          call 0x4001061	      4653	eval.c	FUNCTION_72
garbage_collect	DO,0:WHILE,0:FOR,1:ELSE,1:IF,4:SWITCH,0:CALL,29:functions,0	247
0x4001530	            0x4155	                                push r13	      5084	eval.c	FUNCTION_81
0x4001532	            0x4154	                                push r12	      5084	eval.c	FUNCTION_81
0x4001534	          0x4189fd	                           mov r13d, edi	      5084	eval.c	FUNCTION_81
0x4001537	              0x55	                                push rbp	      5084	eval.c	FUNCTION_81
0x4001538	              0x53	                                push rbx	      5084	eval.c	FUNCTION_81
0x4001539	        0x4883ec08	                              sub rsp, 8	      5084	eval.c	FUNCTION_81
0x400153d	            0x85ff	                           test edi, edi	      5093	eval.c	FUNCTION_81	IF_1
0x400153f	            0x751e	                           jne 0x400155f	      5093	eval.c	FUNCTION_81	IF_1
0x4001541	    0xc70500000000	               mov dword [0x0400154b], 0	      5096	eval.c	FUNCTION_81	IF_1
0x400154b	    0xc70500000000	               mov dword [0x04001555], 0	      5097	eval.c	FUNCTION_81	IF_1
0x4001555	    0xc70500000000	               mov dword [0x0400155f], 0	      5098	eval.c	FUNCTION_81	IF_1
0x400155f	    0x8b0500000000	            mov eax, dword [0x04001565] 	      5053	eval.c	FUNCTION_80
0x4001565	        0x448d6002	                     lea r12d, [rax + 2]	      5053	eval.c	FUNCTION_80
0x4001569	          0x4489e7	                           mov edi, r12d	      5113	eval.c	FUNCTION_81	CALL_2
0x400156c	    0x448925000000	           mov dword [0x04001573], r12d 	      5053	eval.c	FUNCTION_80
0x4001573	      0xe800000000	                          call 0x4001578	      5113	eval.c	FUNCTION_81	CALL_2
0x4001578	    0x8b1500000000	            mov edx, dword [0x0400157e] 	      5116	eval.c	FUNCTION_81	FOR_1
0x400157e	            0x85c0	                           test eax, eax	      5113	eval.c	FUNCTION_81	CALL_2
0x4001580	           0xf95c0	                                setne al	      5113	eval.c	FUNCTION_81	CALL_2
0x4001583	           0xfb6c0	                           movzx eax, al	      5113	eval.c	FUNCTION_81	CALL_2
0x4001586	            0x85d2	                           test edx, edx	      5116	eval.c	FUNCTION_81	FOR_1
0x4001588	            0x7e56	                           jle 0x40015e0	      5116	eval.c	FUNCTION_81	FOR_1
0x400158a	            0x31ed	                            xor ebp, ebp	      5116	eval.c	FUNCTION_81	FOR_1
0x400158c	      0xbb01000000	                              mov ebx, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x4001591	            0xeb19	                           jmp 0x40015ac	      5116	eval.c	FUNCTION_81	FOR_1
0x4001593	       0xf1f440000	                   nop dword [rax + rax]	      5116	eval.c	FUNCTION_81	FOR_1
0x4001598	          0x83c301	                              add ebx, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x400159b	        0x4883c508	                              add rbp, 8	      5116	eval.c	FUNCTION_81	FOR_1
0x400159f	    0x391d00000000	            cmp dword [0x040015a5], ebx 	      5116	eval.c	FUNCTION_81	FOR_1
0x40015a5	      0xb801000000	                              mov eax, 1	      5117	eval.c	FUNCTION_81	CALL_4
0x40015aa	            0x7c34	                            jl 0x40015e0	      5116	eval.c	FUNCTION_81	FOR_1
0x40015ac	            0x85c0	                           test eax, eax	      5117	eval.c	FUNCTION_81	CALL_4
0x40015ae	            0x75e8	                           jne 0x4001598	      5117	eval.c	FUNCTION_81	CALL_4
0x40015b0	    0x488b05000000	            mov rax, qword [0x040015b7] 	      5117	eval.c	FUNCTION_81	CALL_4
0x40015b7	            0x31d2	                            xor edx, edx	      5117	eval.c	FUNCTION_81	CALL_4
0x40015b9	          0x4489e6	                           mov esi, r12d	      5117	eval.c	FUNCTION_81	CALL_4
0x40015bc	        0x488b3c28	              mov rdi, qword [rax + rbp]	      5117	eval.c	FUNCTION_81	CALL_4
0x40015c0	        0x4883c728	                           add rdi, 0x28	      5117	eval.c	FUNCTION_81	CALL_4
0x40015c4	      0xe800000000	                          call 0x40015c9	      5117	eval.c	FUNCTION_81	CALL_4
0x40015c9	            0x85c0	                           test eax, eax	      5117	eval.c	FUNCTION_81	CALL_4
0x40015cb	           0xf95c0	                                setne al	      5117	eval.c	FUNCTION_81	CALL_4
0x40015ce	          0x83c301	                              add ebx, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x40015d1	        0x4883c508	                              add rbp, 8	      5116	eval.c	FUNCTION_81	FOR_1
0x40015d5	    0x391d00000000	            cmp dword [0x040015db], ebx 	      5116	eval.c	FUNCTION_81	FOR_1
0x40015db	           0xfb6c0	                           movzx eax, al	      5117	eval.c	FUNCTION_81	CALL_4
0x40015de	            0x7dcc	                           jge 0x40015ac	      5116	eval.c	FUNCTION_81	FOR_1
0x40015e0	    0x488b1d000000	            mov rbx, qword [0x040015e7] 	      5120	eval.c	FUNCTION_81	CALL_5
0x40015e7	          0x4885db	                           test rbx, rbx	      5120	eval.c	FUNCTION_81	CALL_5
0x40015ea	            0x7512	                           jne 0x40015fe	      5120	eval.c	FUNCTION_81	CALL_5
0x40015ec	            0xeb38	                           jmp 0x4001626	      5120	eval.c	FUNCTION_81	CALL_5
0x40015ee	            0x6690	                                     nop	      5120	eval.c	FUNCTION_81	CALL_5
0x40015f0	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5120	eval.c	FUNCTION_81	CALL_5
0x40015f4	      0xb801000000	                              mov eax, 1	      5121	eval.c	FUNCTION_81	CALL_6
0x40015f9	          0x4885db	                           test rbx, rbx	      5120	eval.c	FUNCTION_81	CALL_5
0x40015fc	            0x7428	                            je 0x4001626	      5120	eval.c	FUNCTION_81	CALL_5
0x40015fe	            0x85c0	                           test eax, eax	      5121	eval.c	FUNCTION_81	CALL_6
0x4001600	            0x75ee	                           jne 0x40015f0	      5121	eval.c	FUNCTION_81	CALL_6
0x4001602	    0x488dbb181700	                 lea rdi, [rbx + 0x1718]	      5121	eval.c	FUNCTION_81	CALL_6
0x4001609	            0x31c9	                            xor ecx, ecx	      5121	eval.c	FUNCTION_81	CALL_6
0x400160b	            0x31d2	                            xor edx, edx	      5121	eval.c	FUNCTION_81	CALL_6
0x400160d	          0x4489e6	                           mov esi, r12d	      5121	eval.c	FUNCTION_81	CALL_6
0x4001610	      0xe800000000	                          call 0x4001615	      5121	eval.c	FUNCTION_81	CALL_6
0x4001615	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5120	eval.c	FUNCTION_81	CALL_5
0x4001619	            0x85c0	                           test eax, eax	      5121	eval.c	FUNCTION_81	CALL_6
0x400161b	           0xf95c0	                                setne al	      5121	eval.c	FUNCTION_81	CALL_6
0x400161e	           0xfb6c0	                           movzx eax, al	      5121	eval.c	FUNCTION_81	CALL_6
0x4001621	          0x4885db	                           test rbx, rbx	      5120	eval.c	FUNCTION_81	CALL_5
0x4001624	            0x75d8	                           jne 0x40015fe	      5120	eval.c	FUNCTION_81	CALL_5
0x4001626	    0x488b2d000000	            mov rbp, qword [0x0400162d] 	      5125	eval.c	FUNCTION_81	CALL_7
0x400162d	          0x4885ed	                           test rbp, rbp	      5125	eval.c	FUNCTION_81	CALL_7
0x4001630	     0xf8444020000	                            je 0x400187a	      5125	eval.c	FUNCTION_81	CALL_7
0x4001636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5125	eval.c	FUNCTION_81	CALL_7
0x4001640	    0x48392d000000	            cmp qword [0x04001647], rbp 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001647	     0xf84eb000000	                            je 0x4001738	      5125	eval.c	FUNCTION_81	CALL_7
0x400164d	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001651	            0xeb0e	                           jmp 0x4001661	      5125	eval.c	FUNCTION_81	CALL_7
0x4001653	       0xf1f440000	                   nop dword [rax + rax]	      5125	eval.c	FUNCTION_81	CALL_7
0x4001658	      0xb801000000	                              mov eax, 1	      5126	eval.c	FUNCTION_81	CALL_8
0x400165d	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_7
0x4001661	          0x4885db	                           test rbx, rbx	      5125	eval.c	FUNCTION_81	CALL_7
0x4001664	            0x742a	                            je 0x4001690	      5125	eval.c	FUNCTION_81	CALL_7
0x4001666	            0x85c0	                           test eax, eax	      5126	eval.c	FUNCTION_81	CALL_8
0x4001668	            0x75ee	                           jne 0x4001658	      5126	eval.c	FUNCTION_81	CALL_8
0x400166a	    0x488dbb580500	                  lea rdi, [rbx + 0x558]	      5126	eval.c	FUNCTION_81	CALL_8
0x4001671	            0x31c9	                            xor ecx, ecx	      5126	eval.c	FUNCTION_81	CALL_8
0x4001673	            0x31d2	                            xor edx, edx	      5126	eval.c	FUNCTION_81	CALL_8
0x4001675	          0x4489e6	                           mov esi, r12d	      5126	eval.c	FUNCTION_81	CALL_8
0x4001678	      0xe800000000	                          call 0x400167d	      5126	eval.c	FUNCTION_81	CALL_8
0x400167d	            0x85c0	                           test eax, eax	      5126	eval.c	FUNCTION_81	CALL_8
0x400167f	           0xf95c0	                                setne al	      5126	eval.c	FUNCTION_81	CALL_8
0x4001682	           0xfb6c0	                           movzx eax, al	      5126	eval.c	FUNCTION_81	CALL_8
0x4001685	            0xebd6	                           jmp 0x400165d	      5126	eval.c	FUNCTION_81	CALL_8
0x4001687	    0x660f1f840000	                    nop word [rax + rax]	      5126	eval.c	FUNCTION_81	CALL_8
0x4001690	        0x488b6d00	                    mov rbp, qword [rbp]	      5125	eval.c	FUNCTION_81	CALL_7
0x4001694	          0x4885ed	                           test rbp, rbp	      5125	eval.c	FUNCTION_81	CALL_7
0x4001697	            0x75a7	                           jne 0x4001640	      5125	eval.c	FUNCTION_81	CALL_7
0x4001699	    0x488b15000000	            mov rdx, qword [0x040016a0] 	      5128	eval.c	FUNCTION_81	IF_2
0x40016a0	          0x4885d2	                           test rdx, rdx	      5128	eval.c	FUNCTION_81	IF_2
0x40016a3	     0xf8404020000	                            je 0x40018ad	      5128	eval.c	FUNCTION_81	IF_2
0x40016a9	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40016ab	     0xf84e1010000	                            je 0x4001892	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40016b1	    0x488b1d000000	            mov rbx, qword [0x040016b8] 	      5133	eval.c	FUNCTION_81	CALL_10
0x40016b8	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40016bb	            0x7443	                            je 0x4001700	      5133	eval.c	FUNCTION_81	CALL_10
0x40016bd	      0xb801000000	                              mov eax, 1	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40016c2	            0xeb11	                           jmp 0x40016d5	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40016c4	         0xf1f4000	                         nop dword [rax]	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40016c8	          0x488b1b	                    mov rbx, qword [rbx]	      5133	eval.c	FUNCTION_81	CALL_10
0x40016cb	      0xb801000000	                              mov eax, 1	      5134	eval.c	FUNCTION_81	CALL_11
0x40016d0	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40016d3	            0x7427	                            je 0x40016fc	      5133	eval.c	FUNCTION_81	CALL_10
0x40016d5	            0x85c0	                           test eax, eax	      5134	eval.c	FUNCTION_81	CALL_11
0x40016d7	            0x75ef	                           jne 0x40016c8	      5134	eval.c	FUNCTION_81	CALL_11
0x40016d9	    0x488dbbb80000	                   lea rdi, [rbx + 0xb8]	      5134	eval.c	FUNCTION_81	CALL_11
0x40016e0	            0x31c9	                            xor ecx, ecx	      5134	eval.c	FUNCTION_81	CALL_11
0x40016e2	            0x31d2	                            xor edx, edx	      5134	eval.c	FUNCTION_81	CALL_11
0x40016e4	          0x4489e6	                           mov esi, r12d	      5134	eval.c	FUNCTION_81	CALL_11
0x40016e7	      0xe800000000	                          call 0x40016ec	      5134	eval.c	FUNCTION_81	CALL_11
0x40016ec	          0x488b1b	                    mov rbx, qword [rbx]	      5133	eval.c	FUNCTION_81	CALL_10
0x40016ef	            0x85c0	                           test eax, eax	      5134	eval.c	FUNCTION_81	CALL_11
0x40016f1	           0xf95c0	                                setne al	      5134	eval.c	FUNCTION_81	CALL_11
0x40016f4	           0xfb6c0	                           movzx eax, al	      5134	eval.c	FUNCTION_81	CALL_11
0x40016f7	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40016fa	            0x75d9	                           jne 0x40016d5	      5133	eval.c	FUNCTION_81	CALL_10
0x40016fc	            0x85c0	                           test eax, eax	      5137	eval.c	FUNCTION_81	CALL_12
0x40016fe	            0x7444	                            je 0x4001744	      5137	eval.c	FUNCTION_81	CALL_12
0x4001700	            0x31db	                            xor ebx, ebx	      5090	eval.c	FUNCTION_81
0x4001702	    0x48833d000000	               cmp qword [0x0400170a], 0	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x400170a	            0x7e1b	                           jle 0x4001727	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x400170c	      0xba05000000	                              mov edx, 5	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x4001711	      0xbe00000000	                              mov esi, 0	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x4001716	            0x31ff	                            xor edi, edi	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x4001718	      0xe800000000	                          call 0x400171d	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x400171d	            0x31db	                            xor ebx, ebx	      5090	eval.c	FUNCTION_81
0x400171f	          0x4889c7	                            mov rdi, rax	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x4001722	      0xe800000000	                          call 0x4001727	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_29
0x4001727	        0x4883c408	                              add rsp, 8	      5202	eval.c	FUNCTION_81
0x400172b	            0x89d8	                            mov eax, ebx	      5202	eval.c	FUNCTION_81
0x400172d	              0x5b	                                 pop rbx	      5202	eval.c	FUNCTION_81
0x400172e	              0x5d	                                 pop rbp	      5202	eval.c	FUNCTION_81
0x400172f	            0x415c	                                 pop r12	      5202	eval.c	FUNCTION_81
0x4001731	            0x415d	                                 pop r13	      5202	eval.c	FUNCTION_81
0x4001733	              0xc3	                                     ret	      5202	eval.c	FUNCTION_81
0x4001734	         0xf1f4000	                         nop dword [rax]	      5202	eval.c	FUNCTION_81
0x4001738	    0x488b1d000000	            mov rbx, qword [0x0400173f] 	      5125	eval.c	FUNCTION_81	CALL_7
0x400173f	      0xe91dffffff	                           jmp 0x4001661	      5125	eval.c	FUNCTION_81	CALL_7
0x4001744	            0x31d2	                            xor edx, edx	      5137	eval.c	FUNCTION_81	CALL_12
0x4001746	          0x4489e6	                           mov esi, r12d	      5137	eval.c	FUNCTION_81	CALL_12
0x4001749	      0xbf00000000	                              mov edi, 0	      5137	eval.c	FUNCTION_81	CALL_12
0x400174e	      0xe800000000	                          call 0x4001753	      5137	eval.c	FUNCTION_81	CALL_12
0x4001753	            0x85c0	                           test eax, eax	      5137	eval.c	FUNCTION_81	CALL_12
0x4001755	            0x75a9	                           jne 0x4001700	      5137	eval.c	FUNCTION_81	CALL_12
0x4001757	          0x4489e7	                           mov edi, r12d	      5140	eval.c	FUNCTION_81	CALL_13
0x400175a	      0xe800000000	                          call 0x400175f	      5140	eval.c	FUNCTION_81	CALL_13
0x400175f	            0x85c0	                           test eax, eax	      5140	eval.c	FUNCTION_81	CALL_13
0x4001761	            0x759d	                           jne 0x4001700	      5140	eval.c	FUNCTION_81	CALL_13
0x4001763	          0x4489e7	                           mov edi, r12d	      5143	eval.c	FUNCTION_81	CALL_14
0x4001766	      0xe800000000	                          call 0x400176b	      5143	eval.c	FUNCTION_81	CALL_14
0x400176b	            0x85c0	                           test eax, eax	      5143	eval.c	FUNCTION_81	CALL_14
0x400176d	            0x7591	                           jne 0x4001700	      5143	eval.c	FUNCTION_81	CALL_14
0x400176f	          0x4489e7	                           mov edi, r12d	      5146	eval.c	FUNCTION_81	CALL_15
0x4001772	      0xe800000000	                          call 0x4001777	      5146	eval.c	FUNCTION_81	CALL_15
0x4001777	            0x85c0	                           test eax, eax	      5146	eval.c	FUNCTION_81	CALL_15
0x4001779	            0x7585	                           jne 0x4001700	      5146	eval.c	FUNCTION_81	CALL_15
0x400177b	            0x31d2	                            xor edx, edx	      5149	eval.c	FUNCTION_81	CALL_16
0x400177d	          0x4489e6	                           mov esi, r12d	      5149	eval.c	FUNCTION_81	CALL_16
0x4001780	      0xbf00000000	                              mov edi, 0	      5149	eval.c	FUNCTION_81	CALL_16
0x4001785	      0xe800000000	                          call 0x400178a	      5149	eval.c	FUNCTION_81	CALL_16
0x400178a	            0x85c0	                           test eax, eax	      5149	eval.c	FUNCTION_81	CALL_16
0x400178c	     0xf856effffff	                           jne 0x4001700	      5149	eval.c	FUNCTION_81	CALL_16
0x4001792	          0x4489e7	                           mov edi, r12d	      5164	eval.c	FUNCTION_81	CALL_20
0x4001795	      0xe800000000	                          call 0x400179a	      5164	eval.c	FUNCTION_81	CALL_20
0x400179a	            0x85c0	                           test eax, eax	      5164	eval.c	FUNCTION_81	CALL_20
0x400179c	     0xf855effffff	                           jne 0x4001700	      5164	eval.c	FUNCTION_81	CALL_20
0x40017a2	          0x4489e7	                           mov edi, r12d	      5165	eval.c	FUNCTION_81	CALL_21
0x40017a5	      0xe800000000	                          call 0x40017aa	      5165	eval.c	FUNCTION_81	CALL_21
0x40017aa	            0x85c0	                           test eax, eax	      5165	eval.c	FUNCTION_81	CALL_21
0x40017ac	     0xf854effffff	                           jne 0x4001700	      5165	eval.c	FUNCTION_81	CALL_21
0x40017b2	          0x4489e7	                           mov edi, r12d	      5168	eval.c	FUNCTION_81	CALL_22
0x40017b5	      0xe800000000	                          call 0x40017ba	      5168	eval.c	FUNCTION_81	CALL_22
0x40017ba	            0x85c0	                           test eax, eax	      5168	eval.c	FUNCTION_81	CALL_22
0x40017bc	     0xf853effffff	                           jne 0x4001700	      5168	eval.c	FUNCTION_81	CALL_22
0x40017c2	          0x4489e7	                           mov edi, r12d	      5172	eval.c	FUNCTION_81	CALL_23
0x40017c5	      0xe800000000	                          call 0x40017ca	      5172	eval.c	FUNCTION_81	CALL_23
0x40017ca	            0x85c0	                           test eax, eax	      5172	eval.c	FUNCTION_81	CALL_23
0x40017cc	     0xf852effffff	                           jne 0x4001700	      5172	eval.c	FUNCTION_81	CALL_23
0x40017d2	          0x4489e7	                           mov edi, r12d	      5176	eval.c	FUNCTION_81	CALL_24
0x40017d5	      0xe800000000	                          call 0x40017da	      5176	eval.c	FUNCTION_81	CALL_24
0x40017da	            0x85c0	                           test eax, eax	      5176	eval.c	FUNCTION_81	CALL_24
0x40017dc	     0xf851effffff	                           jne 0x4001700	      5176	eval.c	FUNCTION_81	CALL_24
0x40017e2	          0x4489e7	                           mov edi, r12d	      5180	eval.c	FUNCTION_81	CALL_25
0x40017e5	      0xe800000000	                          call 0x40017ea	      5180	eval.c	FUNCTION_81	CALL_25
0x40017ea	            0x85c0	                           test eax, eax	      5180	eval.c	FUNCTION_81	CALL_25
0x40017ec	     0xf850effffff	                           jne 0x4001700	      5180	eval.c	FUNCTION_81	CALL_25
0x40017f2	          0x4489e7	                           mov edi, r12d	      5223	eval.c	FUNCTION_82	CALL_1
0x40017f5	    0xc70500000000	               mov dword [0x040017ff], 1	      5215	eval.c	FUNCTION_82
0x40017ff	      0xe800000000	                          call 0x4001804	      5223	eval.c	FUNCTION_82	CALL_1
0x4001804	          0x4489e7	                           mov edi, r12d	      5226	eval.c	FUNCTION_82	CALL_2
0x4001807	            0x89c3	                            mov ebx, eax	      5223	eval.c	FUNCTION_82	CALL_1
0x4001809	      0xe800000000	                          call 0x400180e	      5226	eval.c	FUNCTION_82	CALL_2
0x400180e	          0x4489e7	                           mov edi, r12d	      5232	eval.c	FUNCTION_82	CALL_3
0x4001811	      0xbefeffffff	                     mov esi, 0xfffffffe	      5232	eval.c	FUNCTION_82	CALL_3
0x4001816	             0x9c3	                             or ebx, eax	      5226	eval.c	FUNCTION_82	CALL_2
0x4001818	      0xe800000000	                          call 0x400181d	      5232	eval.c	FUNCTION_82	CALL_3
0x400181d	      0xbefeffffff	                     mov esi, 0xfffffffe	      5235	eval.c	FUNCTION_82	CALL_4
0x4001822	          0x4489e7	                           mov edi, r12d	      5235	eval.c	FUNCTION_82	CALL_4
0x4001825	             0x9c3	                             or ebx, eax	      5232	eval.c	FUNCTION_82	CALL_3
0x4001827	      0xe800000000	                          call 0x400182c	      5235	eval.c	FUNCTION_82	CALL_4
0x400182c	          0x4489e7	                           mov edi, r12d	      5241	eval.c	FUNCTION_82	CALL_5
0x400182f	             0x9c3	                             or ebx, eax	      5235	eval.c	FUNCTION_82	CALL_4
0x4001831	      0xe800000000	                          call 0x4001836	      5241	eval.c	FUNCTION_82	CALL_5
0x4001836	          0x4489e7	                           mov edi, r12d	      5242	eval.c	FUNCTION_82	CALL_6
0x4001839	      0xe800000000	                          call 0x400183e	      5242	eval.c	FUNCTION_82	CALL_6
0x400183e	          0x4489e7	                           mov edi, r12d	      5248	eval.c	FUNCTION_82	CALL_7
0x4001841	      0xbefeffffff	                     mov esi, 0xfffffffe	      5248	eval.c	FUNCTION_82	CALL_7
0x4001846	      0xe800000000	                          call 0x400184b	      5248	eval.c	FUNCTION_82	CALL_7
0x400184b	          0x4489e7	                           mov edi, r12d	      5251	eval.c	FUNCTION_82	CALL_8
0x400184e	      0xbefeffffff	                     mov esi, 0xfffffffe	      5251	eval.c	FUNCTION_82	CALL_8
0x4001853	      0xe800000000	                          call 0x4001858	      5251	eval.c	FUNCTION_82	CALL_8
0x4001858	          0x4489ee	                           mov esi, r13d	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x400185b	          0x4489e7	                           mov edi, r12d	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x400185e	    0xc70500000000	               mov dword [0x04001868], 0	      5254	eval.c	FUNCTION_82
0x4001868	      0xe800000000	                          call 0x400186d	      5194	eval.c	FUNCTION_81	IF_3	CALL_27
0x400186d	        0x4883c408	                              add rsp, 8	      5202	eval.c	FUNCTION_81
0x4001871	            0x89d8	                            mov eax, ebx	      5202	eval.c	FUNCTION_81
0x4001873	              0x5b	                                 pop rbx	      5202	eval.c	FUNCTION_81
0x4001874	              0x5d	                                 pop rbp	      5202	eval.c	FUNCTION_81
0x4001875	            0x415c	                                 pop r12	      5202	eval.c	FUNCTION_81
0x4001877	            0x415d	                                 pop r13	      5202	eval.c	FUNCTION_81
0x4001879	              0xc3	                                     ret	      5202	eval.c	FUNCTION_81
0x400187a	    0x488b15000000	            mov rdx, qword [0x04001881] 	      5128	eval.c	FUNCTION_81	IF_2
0x4001881	          0x4885d2	                           test rdx, rdx	      5128	eval.c	FUNCTION_81	IF_2
0x4001884	     0xf8472feffff	                            je 0x40016fc	      5128	eval.c	FUNCTION_81	IF_2
0x400188a	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400188c	     0xf856efeffff	                           jne 0x4001700	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001892	    0x488dba580500	                  lea rdi, [rdx + 0x558]	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x4001899	            0x31c9	                            xor ecx, ecx	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400189b	            0x31d2	                            xor edx, edx	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x400189d	          0x4489e6	                           mov esi, r12d	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40018a0	      0xe800000000	                          call 0x40018a5	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40018a5	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40018a7	           0xf95c0	                                setne al	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40018aa	           0xfb6c0	                           movzx eax, al	      5129	eval.c	FUNCTION_81	IF_2	CALL_9
0x40018ad	    0x488b1d000000	            mov rbx, qword [0x040018b4] 	      5133	eval.c	FUNCTION_81	CALL_10
0x40018b4	          0x4885db	                           test rbx, rbx	      5133	eval.c	FUNCTION_81	CALL_10
0x40018b7	     0xf8518feffff	                           jne 0x40016d5	      5133	eval.c	FUNCTION_81	CALL_10
0x40018bd	      0xe93afeffff	                           jmp 0x40016fc	      5133	eval.c	FUNCTION_81	CALL_10
eval0	DO,0:WHILE,0:FOR,0:ELSE,0:IF,4:SWITCH,0:CALL,8:functions,0	61
0x4008b80	            0x4155	                                push r13	      3258	eval.c	FUNCTION_63
0x4008b82	            0x4154	                                push r12	      3258	eval.c	FUNCTION_63
0x4008b84	          0x4989f4	                            mov r12, rsi	      3258	eval.c	FUNCTION_63
0x4008b87	              0x55	                                push rbp	      3258	eval.c	FUNCTION_63
0x4008b88	              0x53	                                push rbx	      3258	eval.c	FUNCTION_63
0x4008b89	            0x89cb	                            mov ebx, ecx	      3258	eval.c	FUNCTION_63
0x4008b8b	          0x4989fd	                            mov r13, rdi	      3258	eval.c	FUNCTION_63
0x4008b8e	          0x4889d5	                            mov rbp, rdx	      3258	eval.c	FUNCTION_63
0x4008b91	        0x4883ec18	                           sub rsp, 0x18	      3258	eval.c	FUNCTION_63
0x4008b95	    0x64488b042528	                mov rax, qword fs:[0x28]	      3258	eval.c	FUNCTION_63
0x4008b9e	      0x4889442408	                mov qword [rsp + 8], rax	      3258	eval.c	FUNCTION_63
0x4008ba3	            0x31c0	                            xor eax, eax	      3258	eval.c	FUNCTION_63
0x4008ba5	      0xe800000000	                          call 0x4008baa	      3262	eval.c	FUNCTION_63	CALL_1
0x4008baa	            0x89da	                            mov edx, ebx	      3263	eval.c	FUNCTION_63	CALL_2
0x4008bac	          0x4c89e6	                            mov rsi, r12	      3263	eval.c	FUNCTION_63	CALL_2
0x4008baf	          0x4889e7	                            mov rdi, rsp	      3263	eval.c	FUNCTION_63	CALL_2
0x4008bb2	        0x48890424	                    mov qword [rsp], rax	      3262	eval.c	FUNCTION_63	CALL_1
0x4008bb6	      0xe800000000	                          call 0x4008bbb	      3263	eval.c	FUNCTION_63	CALL_2
0x4008bbb	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008bbd	            0x7541	                           jne 0x4008c00	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008bbf	      0xe800000000	                          call 0x4008bc4	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008bc4	            0x31db	                            xor ebx, ebx	      3275	eval.c	FUNCTION_63	IF_1
0x4008bc6	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008bc8	            0x745b	                            je 0x4008c25	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008bca	          0x4885ed	                           test rbp, rbp	      3277	eval.c	FUNCTION_63	IF_4
0x4008bcd	            0x740d	                            je 0x4008bdc	      3277	eval.c	FUNCTION_63	IF_4
0x4008bcf	        0x488b3c24	                    mov rdi, qword [rsp]	      3278	eval.c	FUNCTION_63	CALL_8
0x4008bd3	      0xe800000000	                          call 0x4008bd8	      3278	eval.c	FUNCTION_63	CALL_8
0x4008bd8	        0x48894500	                    mov qword [rbp], rax	      3278	eval.c	FUNCTION_63	CALL_8
0x4008bdc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3281	eval.c	FUNCTION_63
0x4008be1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3281	eval.c	FUNCTION_63
0x4008bea	            0x89d8	                            mov eax, ebx	      3281	eval.c	FUNCTION_63
0x4008bec	            0x7555	                           jne 0x4008c43	      3281	eval.c	FUNCTION_63
0x4008bee	        0x4883c418	                           add rsp, 0x18	      3281	eval.c	FUNCTION_63
0x4008bf2	              0x5b	                                 pop rbx	      3281	eval.c	FUNCTION_63
0x4008bf3	              0x5d	                                 pop rbp	      3281	eval.c	FUNCTION_63
0x4008bf4	            0x415c	                                 pop r12	      3281	eval.c	FUNCTION_63
0x4008bf6	            0x415d	                                 pop r13	      3281	eval.c	FUNCTION_63
0x4008bf8	              0xc3	                                     ret	      3281	eval.c	FUNCTION_63
0x4008bf9	     0xf1f80000000	                         nop dword [rax]	      3281	eval.c	FUNCTION_63
0x4008c00	            0x89c3	                            mov ebx, eax	      3281	eval.c	FUNCTION_63
0x4008c02	        0x488b0424	                    mov rax, qword [rsp]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008c06	           0xfb638	                   movzx edi, byte [rax]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008c09	      0xe800000000	                          call 0x4008c0e	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008c0e	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008c10	            0x75b8	                           jne 0x4008bca	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4008c12	          0x4c89e7	                            mov rdi, r12	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4008c15	            0x31db	                            xor ebx, ebx	      3275	eval.c	FUNCTION_63	IF_1
0x4008c17	      0xe800000000	                          call 0x4008c1c	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4008c1c	      0xe800000000	                          call 0x4008c21	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008c21	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008c23	            0x75a5	                           jne 0x4008bca	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4008c25	            0x31ff	                            xor edi, edi	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c27	      0xba05000000	                              mov edx, 5	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c2c	      0xbe00000000	                              mov esi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c31	      0xe800000000	                          call 0x4008c36	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c36	          0x4c89ee	                            mov rsi, r13	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c39	          0x4889c7	                            mov rdi, rax	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c3c	      0xe800000000	                          call 0x4008c41	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c41	            0xeb87	                           jmp 0x4008bca	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4008c43	      0xe800000000	                          call 0x4008c48	      3281	eval.c	FUNCTION_63
eval_expr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	25
0x4009660	            0x4154	                                push r12	      1001	eval.c	FUNCTION_25
0x4009662	              0x55	                                push rbp	      1001	eval.c	FUNCTION_25
0x4009663	          0x4889fd	                            mov rbp, rdi	      1001	eval.c	FUNCTION_25
0x4009666	              0x53	                                push rbx	      1001	eval.c	FUNCTION_25
0x4009667	      0xbf10000000	                           mov edi, 0x10	      1004	eval.c	FUNCTION_25	CALL_1
0x400966c	          0x4989f4	                            mov r12, rsi	      1001	eval.c	FUNCTION_25
0x400966f	      0xe800000000	                          call 0x4009674	      1004	eval.c	FUNCTION_25	CALL_1
0x4009674	          0x4885c0	                           test rax, rax	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009677	          0x4889c3	                            mov rbx, rax	      1004	eval.c	FUNCTION_25	CALL_1
0x400967a	            0x7421	                            je 0x400969d	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x400967c	      0xb901000000	                              mov ecx, 1	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009681	          0x4c89e2	                            mov rdx, r12	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009684	          0x4889c6	                            mov rsi, rax	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009687	          0x4889ef	                            mov rdi, rbp	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x400968a	      0xe800000000	                          call 0x400968f	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x400968f	            0x85c0	                           test eax, eax	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009691	            0x750a	                           jne 0x400969d	      1005	eval.c	FUNCTION_25	IF_1	CALL_2
0x4009693	          0x4889df	                            mov rdi, rbx	      1006	eval.c	FUNCTION_25	CALL_3
0x4009696	            0x31db	                            xor ebx, ebx	      1006	eval.c	FUNCTION_25	CALL_3
0x4009698	      0xe800000000	                          call 0x400969d	      1006	eval.c	FUNCTION_25	CALL_3
0x400969d	          0x4889d8	                            mov rax, rbx	      1009	eval.c	FUNCTION_25
0x40096a0	              0x5b	                                 pop rbx	      1009	eval.c	FUNCTION_25
0x40096a1	              0x5d	                                 pop rbp	      1009	eval.c	FUNCTION_25
0x40096a2	            0x415c	                                 pop r12	      1009	eval.c	FUNCTION_25
0x40096a4	              0xc3	                                     ret	      1009	eval.c	FUNCTION_25
clear_tv	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,1:CALL,7:functions,0	47
0x40025c0	          0x4885ff	                           test rdi, rdi	      6892	eval.c	FUNCTION_122	IF_1
0x40025c3	            0x7440	                            je 0x4002605	      6892	eval.c	FUNCTION_122	IF_1
0x40025c5	              0x53	                                push rbx	      6891	eval.c	FUNCTION_122
0x40025c6	          0x833f0a	                    cmp dword [rdi], 0xa	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025c9	          0x4889fb	                            mov rbx, rdi	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025cc	            0x7732	                            ja 0x4002600	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025ce	            0x8b07	                    mov eax, dword [rdi]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025d0	    0xff24c5000000	                       jmp qword [rax*8]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025d7	    0x660f1f840000	                    nop word [rax + rax]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x40025e0	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x40025e4	      0xe800000000	                          call 0x40025e9	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x40025e9	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40025ed	          0x4885ff	                           test rdi, rdi	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40025f0	            0x740e	                            je 0x4002600	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40025f2	      0xe800000000	                          call 0x40025f7	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40025f7	    0x48c743080000	                  mov qword [rbx + 8], 0	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x40025ff	              0x90	                                     nop	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x4002600	        0xc6430400	                   mov byte [rbx + 4], 0	      6937	eval.c	FUNCTION_122	IF_1
0x4002604	              0x5b	                                 pop rbx	      6939	eval.c	FUNCTION_122
0x4002605	            0xf3c3	                                     ret	      6939	eval.c	FUNCTION_122
0x4002607	    0x660f1f840000	                    nop word [rax + rax]	      6939	eval.c	FUNCTION_122
0x4002610	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x4002614	      0xe800000000	                          call 0x4002619	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x4002619	    0x48c743080000	                  mov qword [rbx + 8], 0	      6932	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002621	        0xc6430400	                   mov byte [rbx + 4], 0	      6937	eval.c	FUNCTION_122	IF_1
0x4002625	              0x5b	                                 pop rbx	      6939	eval.c	FUNCTION_122
0x4002626	            0xebdd	                           jmp 0x4002605	      6939	eval.c	FUNCTION_122
0x4002628	     0xf1f84000000	                   nop dword [rax + rax]	      6939	eval.c	FUNCTION_122
0x4002630	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6903	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_3
0x4002634	      0xe800000000	                          call 0x4002639	      6903	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_3
0x4002639	    0x48c743080000	                  mov qword [rbx + 8], 0	      6904	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002641	            0xebbd	                           jmp 0x4002600	      6905	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002643	       0xf1f440000	                   nop dword [rax + rax]	      6905	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002648	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x400264c	      0xe800000000	                          call 0x4002651	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x4002651	    0x48c743080000	                  mov qword [rbx + 8], 0	      6908	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002659	            0xeba5	                           jmp 0x4002600	      6909	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400265b	       0xf1f440000	                   nop dword [rax + rax]	      6909	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002660	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x4002664	      0xe800000000	                          call 0x4002669	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x4002669	    0x48c743080000	                  mov qword [rbx + 8], 0	      6912	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002671	            0xeb8d	                           jmp 0x4002600	      6913	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002673	       0xf1f440000	                   nop dword [rax + rax]	      6913	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002678	        0x488b7f08	                mov rdi, qword [rdi + 8]	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x400267c	      0xe800000000	                          call 0x4002681	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x4002681	    0x48c743080000	                  mov qword [rbx + 8], 0	      6926	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x4002689	      0xe972ffffff	                           jmp 0x4002600	      6928	eval.c	FUNCTION_122	IF_1	SWITCH_1
do_string_sub	DO,0:WHILE,1:FOR,0:ELSE,1:IF,8:SWITCH,0:CALL,16:functions,0	166
0x400e2f0	            0x4157	                                push r15	     10099	eval.c	FUNCTION_188
0x400e2f2	            0x4156	                                push r14	     10099	eval.c	FUNCTION_188
0x400e2f4	          0x4989ce	                            mov r14, rcx	     10099	eval.c	FUNCTION_188
0x400e2f7	            0x4155	                                push r13	     10099	eval.c	FUNCTION_188
0x400e2f9	            0x4154	                                push r12	     10099	eval.c	FUNCTION_188
0x400e2fb	          0x4989fc	                            mov r12, rdi	     10099	eval.c	FUNCTION_188
0x400e2fe	              0x55	                                push rbp	     10099	eval.c	FUNCTION_188
0x400e2ff	              0x53	                                push rbx	     10099	eval.c	FUNCTION_188
0x400e300	          0x4c89c5	                             mov rbp, r8	     10099	eval.c	FUNCTION_188
0x400e303	          0x4889f3	                            mov rbx, rsi	     10099	eval.c	FUNCTION_188
0x400e306	      0xbe01000000	                              mov esi, 1	     10115	eval.c	FUNCTION_188	CALL_1
0x400e30b	    0x4881ec180100	                          sub rsp, 0x118	     10099	eval.c	FUNCTION_188
0x400e312	    0x64488b042528	                mov rax, qword fs:[0x28]	     10099	eval.c	FUNCTION_188
0x400e31b	    0x488984240801	            mov qword [rsp + 0x108], rax	     10099	eval.c	FUNCTION_188
0x400e323	            0x31c0	                            xor eax, eax	     10099	eval.c	FUNCTION_188
0x400e325	    0x488b05000000	            mov rax, qword [0x0400e32c] 	     10112	eval.c	FUNCTION_188
0x400e32c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10115	eval.c	FUNCTION_188	CALL_1
0x400e331	      0x4889542408	                mov qword [rsp + 8], rdx	     10099	eval.c	FUNCTION_188
0x400e336	      0xbac8000000	                           mov edx, 0xc8	     10115	eval.c	FUNCTION_188	CALL_1
0x400e33b	      0x4889442428	             mov qword [rsp + 0x28], rax	     10112	eval.c	FUNCTION_188
0x400e340	    0x488b05000000	            mov rax, qword [0x0400e347] 	     10113	eval.c	FUNCTION_188
0x400e347	    0x488905000000	            mov qword [0x0400e34e], rax 	     10113	eval.c	FUNCTION_188
0x400e34e	      0xe800000000	                          call 0x400e353	     10115	eval.c	FUNCTION_188	CALL_1
0x400e353	         0xfb64500	                   movzx eax, byte [rbp]	     10117	eval.c	FUNCTION_188
0x400e357	      0xbe03000000	                              mov esi, 3	     10120	eval.c	FUNCTION_188	CALL_2
0x400e35c	          0x4889df	                            mov rdi, rbx	     10120	eval.c	FUNCTION_188	CALL_2
0x400e35f	        0x8844241f	               mov byte [rsp + 0x1f], al	     10117	eval.c	FUNCTION_188
0x400e363	    0x8b0500000000	            mov eax, dword [0x0400e369] 	     10119	eval.c	FUNCTION_188
0x400e369	    0x898424f80000	             mov dword [rsp + 0xf8], eax	     10119	eval.c	FUNCTION_188
0x400e370	      0xe800000000	                          call 0x400e375	     10120	eval.c	FUNCTION_188	CALL_2
0x400e375	          0x4885c0	                           test rax, rax	     10121	eval.c	FUNCTION_188	IF_1
0x400e378	      0x4889442450	             mov qword [rsp + 0x50], rax	     10120	eval.c	FUNCTION_188	CALL_2
0x400e37d	     0xf845b010000	                            je 0x400e4de	     10121	eval.c	FUNCTION_188	IF_1
0x400e383	          0x4c89e7	                            mov rdi, r12	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400e386	          0x4c89e3	                            mov rbx, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e389	      0xe800000000	                          call 0x400e38e	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400e38e	          0x4c01e0	                            add rax, r12	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400e391	    0x48c744242000	               mov qword [rsp + 0x20], 0	     10109	eval.c	FUNCTION_188
0x400e39a	      0x4889442410	             mov qword [rsp + 0x10], rax	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x400e39f	      0xe9c8000000	                           jmp 0x400e46c	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e3a4	         0xf1f4000	                         nop dword [rax]	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e3a8	        0x4883ec08	                              sub rsp, 8	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3ac	          0x4531c0	                            xor r8d, r8d	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3af	          0x4889d9	                            mov rcx, rbx	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3b2	            0x6a00	                                  push 0	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3b4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3b9	    0x41b901000000	                              mov r9d, 1	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3bf	          0x4c89f2	                            mov rdx, r14	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3c2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3c7	      0xe800000000	                          call 0x400e3cc	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3cc	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3d1	            0x89c5	                            mov ebp, eax	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x400e3d3	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3db	      0x482b442468	             sub rax, qword [rsp + 0x68]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3e0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3e5	          0x4829de	                            sub rsi, rbx	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3e8	            0x29c6	                            sub esi, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3ea	             0x1ee	                            add esi, ebp	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3ec	      0xe800000000	                          call 0x400e3f1	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3f1	            0x85c0	                           test eax, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3f3	              0x59	                                 pop rcx	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3f4	              0x5e	                                 pop rsi	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3f5	     0xf84b5000000	                            je 0x400e4b0	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x400e3fb	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400e400	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x400e405	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x400e408	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x400e40d	          0x4929df	                            sub r15, rbx	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400e410	          0x4d63ef	                        movsxd r13, r15d	     10160	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_10
0x400e413	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_192	CALL_3
0x400e416	      0xe800000000	                          call 0x400e41b	        59	string3.h	FUNCTION_192	CALL_3
0x400e41b	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e420	        0x4883ec08	                              sub rsp, 8	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e424	          0x4c89f2	                            mov rdx, r14	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e427	    0x41b901000000	                              mov r9d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e42d	    0x41b801000000	                              mov r8d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e433	        0x4a8d0c28	                    lea rcx, [rax + r13]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e437	      0x48034c2448	             add rcx, qword [rsp + 0x48]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e43c	            0x6a00	                                  push 0	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e43e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e443	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e448	      0xe800000000	                          call 0x400e44d	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x400e44d	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	     10165	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400e455	      0x428d443dff	                lea eax, [rbp + r15 - 1]	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400e45a	         0x1442440	             add dword [rsp + 0x40], eax	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x400e45e	              0x58	                                 pop rax	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e45f	              0x5a	                                 pop rdx	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e460	          0x803b00	                       cmp byte [rbx], 0	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e463	            0x7455	                            je 0x400e4ba	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e465	      0x807c241f67	            cmp byte [rsp + 0x1f], 0x67 	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e46a	            0x754e	                           jne 0x400e4ba	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x400e46c	          0x4889da	                            mov rdx, rbx	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e46f	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e474	          0x4c89e6	                            mov rsi, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e477	          0x4c29e2	                            sub rdx, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e47a	      0xe800000000	                          call 0x400e47f	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e47f	            0x85c0	                           test eax, eax	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e481	            0x7437	                            je 0x400e4ba	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x400e483	      0x488b442458	            mov rax, qword [rsp + 0x58] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400e488	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400e490	     0xf8512ffffff	                           jne 0x400e3a8	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x400e496	      0x4839442420	            cmp qword [rsp + 0x20], rax 	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e49b	     0xf849f000000	                            je 0x400e540	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e4a1	      0x4889442420	             mov qword [rsp + 0x20], rax	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e4a6	      0xe9fdfeffff	                           jmp 0x400e3a8	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e4ab	       0xf1f440000	                   nop dword [rax + rax]	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e4b0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x400e4b5	      0xe800000000	                          call 0x400e4ba	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x400e4ba	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400e4bf	          0x4885ff	                           test rdi, rdi	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400e4c2	            0x7410	                            je 0x400e4d4	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x400e4c4	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	       110	string3.h	FUNCTION_197	CALL_3
0x400e4c9	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x400e4cc	          0x4801c7	                            add rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x400e4cf	      0xe800000000	                          call 0x400e4d4	       110	string3.h	FUNCTION_197	CALL_3
0x400e4d4	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x400e4d9	      0xe800000000	                          call 0x400e4de	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x400e4de	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10178	eval.c	FUNCTION_188	CALL_14
0x400e4e3	          0x4885ff	                           test rdi, rdi	     10178	eval.c	FUNCTION_188	CALL_14
0x400e4e6	        0x490f44fc	                          cmove rdi, r12	     10178	eval.c	FUNCTION_188	CALL_14
0x400e4ea	      0xe800000000	                          call 0x400e4ef	     10178	eval.c	FUNCTION_188	CALL_14
0x400e4ef	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10179	eval.c	FUNCTION_188	CALL_15
0x400e4f4	          0x4889c3	                            mov rbx, rax	     10178	eval.c	FUNCTION_188	CALL_14
0x400e4f7	      0xe800000000	                          call 0x400e4fc	     10179	eval.c	FUNCTION_188	CALL_15
0x400e4fc	    0x488b05000000	            mov rax, qword [0x0400e503] 	     10180	eval.c	FUNCTION_188	IF_8
0x400e503	    0x483905000000	            cmp qword [0x0400e50a], rax 	     10180	eval.c	FUNCTION_188	IF_8
0x400e50a	            0x7474	                            je 0x400e580	     10180	eval.c	FUNCTION_188	IF_8
0x400e50c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10184	eval.c	FUNCTION_188	CALL_16
0x400e511	      0xe800000000	                          call 0x400e516	     10184	eval.c	FUNCTION_188	CALL_16
0x400e516	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	     10187	eval.c	FUNCTION_188
0x400e51e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10187	eval.c	FUNCTION_188
0x400e527	          0x4889d8	                            mov rax, rbx	     10187	eval.c	FUNCTION_188
0x400e52a	            0x7575	                           jne 0x400e5a1	     10187	eval.c	FUNCTION_188
0x400e52c	    0x4881c4180100	                          add rsp, 0x118	     10187	eval.c	FUNCTION_188
0x400e533	              0x5b	                                 pop rbx	     10187	eval.c	FUNCTION_188
0x400e534	              0x5d	                                 pop rbp	     10187	eval.c	FUNCTION_188
0x400e535	            0x415c	                                 pop r12	     10187	eval.c	FUNCTION_188
0x400e537	            0x415d	                                 pop r13	     10187	eval.c	FUNCTION_188
0x400e539	            0x415e	                                 pop r14	     10187	eval.c	FUNCTION_188
0x400e53b	            0x415f	                                 pop r15	     10187	eval.c	FUNCTION_188
0x400e53d	              0xc3	                                     ret	     10187	eval.c	FUNCTION_188
0x400e53e	            0x6690	                                     nop	     10187	eval.c	FUNCTION_188
0x400e540	    0x8b3d00000000	            mov edi, dword [0x0400e546] 	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e546	      0xbd01000000	                              mov ebp, 1	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e54b	    0x41bd01000000	                             mov r13d, 1	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e551	            0x85ff	                           test edi, edi	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e553	            0x753b	                           jne 0x400e590	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e555	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x400e55a	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x400e55d	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x400e560	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x400e565	          0x4801eb	                            add rbx, rbp	     10137	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e568	      0xe800000000	                          call 0x400e56d	        59	string3.h	FUNCTION_192	CALL_3
0x400e56d	      0x44016c2430	            add dword [rsp + 0x30], r13d	     10136	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e572	      0xe9f5feffff	                           jmp 0x400e46c	     10138	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e577	    0x660f1f840000	                    nop word [rax + rax]	     10138	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x400e580	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     10181	eval.c	FUNCTION_188	IF_8
0x400e585	    0x488905000000	            mov qword [0x0400e58c], rax 	     10181	eval.c	FUNCTION_188	IF_8
0x400e58c	            0xeb88	                           jmp 0x400e516	     10181	eval.c	FUNCTION_188	IF_8
0x400e58e	            0x6690	                                     nop	     10181	eval.c	FUNCTION_188	IF_8
0x400e590	          0x4889df	                            mov rdi, rbx	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e593	    0xff1500000000	                 call qword [0x0400e599]	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e599	          0x4863e8	                         movsxd rbp, eax	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e59c	          0x4989ed	                            mov r13, rbp	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e59f	            0xebb4	                           jmp 0x400e555	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x400e5a1	      0xe800000000	                          call 0x400e5a6	     10187	eval.c	FUNCTION_188
get_spellword	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,2:functions,0	35
0x4004390	              0x55	                                push rbp	       979	eval.c	FUNCTION_24
0x4004391	              0x53	                                push rbx	       979	eval.c	FUNCTION_24
0x4004392	        0x4883ec18	                           sub rsp, 0x18	       979	eval.c	FUNCTION_24
0x4004396	          0x488b1f	                    mov rbx, qword [rdi]	       982	eval.c	FUNCTION_24
0x4004399	    0x64488b042528	                mov rax, qword fs:[0x28]	       979	eval.c	FUNCTION_24
0x40043a2	      0x4889442408	                mov qword [rsp + 8], rax	       979	eval.c	FUNCTION_24
0x40043a7	            0x31c0	                            xor eax, eax	       979	eval.c	FUNCTION_24
0x40043a9	          0x4885db	                           test rbx, rbx	       983	eval.c	FUNCTION_24	IF_1
0x40043ac	            0x745a	                            je 0x4004408	       983	eval.c	FUNCTION_24	IF_1
0x40043ae	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       985	eval.c	FUNCTION_24	CALL_1
0x40043b2	          0x4889f5	                            mov rbp, rsi	       985	eval.c	FUNCTION_24	CALL_1
0x40043b5	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40043ba	      0xe800000000	                          call 0x40043bf	      7085	eval.c	FUNCTION_128	CALL_1
0x40043bf	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x40043c4	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40043c7	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x40043cb	        0x48894500	                    mov qword [rbp], rax	       985	eval.c	FUNCTION_24	CALL_1
0x40043cf	          0x488b3b	                    mov rdi, qword [rbx]	       987	eval.c	FUNCTION_24
0x40043d2	          0x4885ff	                           test rdi, rdi	       988	eval.c	FUNCTION_24	IF_2
0x40043d5	            0x7431	                            je 0x4004408	       988	eval.c	FUNCTION_24	IF_2
0x40043d7	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x40043dc	        0x4883c710	                           add rdi, 0x10	       990	eval.c	FUNCTION_24	CALL_2
0x40043e0	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x40043e8	      0xe800000000	                          call 0x40043ed	      6964	eval.c	FUNCTION_124	CALL_1
0x40043ed	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       991	eval.c	FUNCTION_24
0x40043f2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       991	eval.c	FUNCTION_24
0x40043fb	            0x7512	                           jne 0x400440f	       991	eval.c	FUNCTION_24
0x40043fd	        0x4883c418	                           add rsp, 0x18	       991	eval.c	FUNCTION_24
0x4004401	              0x5b	                                 pop rbx	       991	eval.c	FUNCTION_24
0x4004402	              0x5d	                                 pop rbp	       991	eval.c	FUNCTION_24
0x4004403	              0xc3	                                     ret	       991	eval.c	FUNCTION_24
0x4004404	         0xf1f4000	                         nop dword [rax]	       991	eval.c	FUNCTION_24
0x4004408	      0xb8ffffffff	                     mov eax, 0xffffffff	       984	eval.c	FUNCTION_24	IF_1
0x400440d	            0xebde	                           jmp 0x40043ed	       984	eval.c	FUNCTION_24	IF_1
0x400440f	      0xe800000000	                          call 0x4004414	       991	eval.c	FUNCTION_24
read_viminfo_varlist	DO,0:WHILE,0:FOR,0:ELSE,4:IF,9:SWITCH,1:CALL,15:functions,0	122
0x40096b0	            0x4154	                                push r12	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096b2	              0x55	                                push rbp	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096b3	              0x53	                                push rbx	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096b4	          0x4889fb	                            mov rbx, rdi	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096b7	        0x4883ec20	                           sub rsp, 0x20	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096bb	    0x64488b042528	                mov rax, qword fs:[0x28]	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096c4	      0x4889442418	             mov qword [rsp + 0x18], rax	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096c9	            0x31c0	                            xor eax, eax	      8556	eval.c	ELSE_1	FUNCTION_163
0x40096cb	            0x85f6	                           test esi, esi	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x40096cd	            0x7429	                            je 0x40096f8	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x40096cf	          0x4889df	                            mov rdi, rbx	      8621	eval.c	FUNCTION_163	ELSE_1	CALL_15
0x40096d2	      0xe800000000	                          call 0x40096d7	      8621	eval.c	FUNCTION_163	ELSE_1	CALL_15
0x40096d7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096dc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096e5	     0xf85b3010000	                           jne 0x400989e	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096eb	        0x4883c420	                           add rsp, 0x20	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096ef	              0x5b	                                 pop rbx	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096f0	              0x5d	                                 pop rbp	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096f1	            0x415c	                                 pop r12	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096f3	              0xc3	                                     ret	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096f4	         0xf1f4000	                         nop dword [rax]	      8622	eval.c	FUNCTION_163	ELSE_1
0x40096f8	      0xbf21000000	                           mov edi, 0x21	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x40096fd	      0xe800000000	                          call 0x4009702	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4009702	          0x4885c0	                           test rax, rax	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4009705	            0x74c8	                            je 0x40096cf	      8562	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_1
0x4009707	          0x488b03	                    mov rax, qword [rbx]	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x400970a	      0xbe09000000	                              mov esi, 9	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x400970f	        0x488d7801	                      lea rdi, [rax + 1]	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4009713	      0xe800000000	                          call 0x4009718	      8564	eval.c	ELSE_1	FUNCTION_163	IF_1	CALL_2
0x4009718	          0x4885c0	                           test rax, rax	      8565	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x400971b	            0x74b2	                            je 0x40096cf	      8565	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x400971d	        0x488d7801	                      lea rdi, [rax + 1]	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4009721	          0xc60000	                       mov byte [rax], 0	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4009724	         0xfb64001	               movzx eax, byte [rax + 1]	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4009728	          0x83e844	                           sub eax, 0x44	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x400972b	            0x3c14	                            cmp al, 0x14	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x400972d	     0xf879d000000	                            ja 0x40097d0	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4009733	           0xfb6c0	                           movzx eax, al	      8567	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2
0x4009736	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x400973b	    0x8b2c85000000	                  mov ebp, dword [rax*4]	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4009742	      0xe800000000	                          call 0x4009747	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x4009747	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x400974a	            0x7483	                            je 0x40096cf	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x400974c	          0x83fd02	                              cmp ebp, 2	      8583	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4
0x400974f	          0x892c24	                    mov dword [rsp], ebp	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4009752	    0x41bcfdffffff	                    mov r12d, 0xfffffffd	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x4009758	     0xf85b2000000	                           jne 0x4009810	      8583	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4
0x400975e	          0x482b03	                    sub rax, qword [rbx]	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009761	      0xba01000000	                              mov edx, 1	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009766	          0x4889df	                            mov rdi, rbx	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009769	          0x8d7001	                      lea esi, [rax + 1]	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400976c	      0xe800000000	                          call 0x4009771	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009771	        0x4183fc01	                             cmp r12d, 1	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4009775	      0x4889442408	                mov qword [rsp + 8], rax	      8584	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400977a	     0xf86c0000000	                           jbe 0x4009840	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4009780	          0x4889e5	                            mov rbp, rsp	      8592	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6
0x4009783	      0xe800000000	                          call 0x4009788	      8609	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_10
0x4009788	          0x4989c4	                            mov r12, rax	      8609	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_10
0x400978b	          0x488b03	                    mov rax, qword [rbx]	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x400978e	            0x31d2	                            xor edx, edx	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4009790	          0x4889ee	                            mov rsi, rbp	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4009793	        0x488d7801	                      lea rdi, [rax + 1]	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x4009797	      0xe800000000	                          call 0x400979c	      8610	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_11
0x400979c	          0x4c89e7	                            mov rdi, r12	      8611	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_12
0x400979f	      0xe800000000	                          call 0x40097a4	      8611	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_12
0x40097a4	          0x8b0424	                    mov eax, dword [rsp]	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x40097a7	          0x83f802	                              cmp eax, 2	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x40097aa	     0xf84d0000000	                            je 0x4009880	      8613	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_8
0x40097b0	          0x83e805	                              sub eax, 5	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097b3	          0x83f801	                              cmp eax, 1	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097b6	     0xf8713ffffff	                            ja 0x40096cf	      8615	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097bc	          0x4889ef	                            mov rdi, rbp	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097bf	      0xe800000000	                          call 0x40097c4	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097c4	      0xe906ffffff	                           jmp 0x40096cf	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097c9	     0xf1f80000000	                         nop dword [rax]	      8616	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	ELSE_4	IF_9
0x40097d0	      0xbe09000000	                              mov esi, 9	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x40097d5	      0xe800000000	                          call 0x40097da	      8579	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	CALL_3
0x40097da	          0x4885c0	                           test rax, rax	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x40097dd	     0xf84ecfeffff	                            je 0x40096cf	      8580	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x40097e3	    0xc70424010000	                      mov dword [rsp], 1	      8582	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3
0x40097ea	        0x488d7801	                      lea rdi, [rax + 1]	       285	stdlib.h	FUNCTION_204	CALL_2
0x40097ee	      0xba0a000000	                            mov edx, 0xa	       285	stdlib.h	FUNCTION_204	CALL_2
0x40097f3	            0x31f6	                            xor esi, esi	       285	stdlib.h	FUNCTION_204	CALL_2
0x40097f5	          0x4889e5	                            mov rbp, rsp	       285	stdlib.h	FUNCTION_204	CALL_2
0x40097f8	      0xe800000000	                          call 0x40097fd	       285	stdlib.h	FUNCTION_204	CALL_2
0x40097fd	      0x4889442408	                mov qword [rsp + 8], rax	      8591	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_6
0x4009802	      0xe97cffffff	                           jmp 0x4009783	      8591	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_6
0x4009807	    0x660f1f840000	                    nop word [rax + rax]	      8591	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_6
0x4009810	        0x448d65fb	                     lea r12d, [rbp - 5]	      8583	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4
0x4009814	        0x4183fc01	                             cmp r12d, 1	      8583	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4
0x4009818	     0xf8640ffffff	                           jbe 0x400975e	      8583	eval.c	ELSE_1	FUNCTION_163	IF_1	IF_2	IF_3	IF_4
0x400981e	          0x83fd07	                              cmp ebp, 7	      8587	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	IF_5
0x4009821	            0x75c7	                           jne 0x40097ea	      8587	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	IF_5
0x4009823	      0x488d742408	                      lea rsi, [rsp + 8]	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4009828	        0x488d7801	                      lea rdi, [rax + 1]	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x400982c	          0x4889e5	                            mov rbp, rsp	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x400982f	      0xe800000000	                          call 0x4009834	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4009834	      0xe94affffff	                           jmp 0x4009783	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4009839	     0xf1f80000000	                         nop dword [rax]	      8588	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_5
0x4009840	            0x31f6	                            xor esi, esi	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4009842	          0x4889c7	                            mov rdi, rax	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4009845	      0xe800000000	                          call 0x400984a	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x400984a	          0x4885c0	                           test rax, rax	      8596	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x400984d	          0x4889c5	                            mov rbp, rax	      8594	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	CALL_7
0x4009850	            0x743d	                            je 0x400988f	      8596	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4009852	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8602	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_8
0x4009857	      0xe800000000	                          call 0x400985c	      8602	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_8
0x400985c	        0x488b4500	                    mov rax, qword [rbp]	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4009860	        0x488b5508	                mov rdx, qword [rbp + 8]	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4009864	          0x4889ef	                            mov rdi, rbp	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x4009867	        0x48890424	                    mov qword [rsp], rax	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x400986b	      0x4889542408	                mov qword [rsp + 8], rdx	      8603	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3
0x4009870	      0xe800000000	                          call 0x4009875	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x4009875	      0xe906ffffff	                           jmp 0x4009780	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x400987a	    0x660f1f440000	                    nop word [rax + rax]	      8604	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	ELSE_3	CALL_9
0x4009880	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x4009885	      0xe800000000	                          call 0x400988a	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x400988a	      0xe940feffff	                           jmp 0x40096cf	      8614	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	CALL_13
0x400988f	    0xc70424020000	                      mov dword [rsp], 2	      8599	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4009896	          0x4889e5	                            mov rbp, rsp	      8599	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x4009899	      0xe9e5feffff	                           jmp 0x4009783	      8599	eval.c	FUNCTION_163	IF_1	IF_2	IF_3	ELSE_1	IF_6	IF_7
0x400989e	      0xe800000000	                          call 0x40098a3	      8622	eval.c	FUNCTION_163	ELSE_1
item_copy	DO,0:WHILE,0:FOR,0:ELSE,4:IF,7:SWITCH,1:CALL,6:functions,0	89
0x4004f40	    0x448b05000000	            mov r8d, dword [0x04004f47] 	      7838	eval.c	FUNCTION_150	IF_1
0x4004f47	              0x53	                                push rbx	      7834	eval.c	FUNCTION_150
0x4004f48	        0x4183f863	                           cmp r8d, 0x63	      7838	eval.c	FUNCTION_150	IF_1
0x4004f4c	            0x7f22	                            jg 0x4004f70	      7838	eval.c	FUNCTION_150	IF_1
0x4004f4e	        0x4183c001	                              add r8d, 1	      7843	eval.c	FUNCTION_150
0x4004f52	          0x833f0a	                    cmp dword [rdi], 0xa	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f55	    0x448905000000	            mov dword [0x04004f5c], r8d 	      7843	eval.c	FUNCTION_150
0x4004f5c	     0xf8729010000	                            ja 0x400508b	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f62	            0x8b07	                    mov eax, dword [rdi]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f64	          0x4889f3	                            mov rbx, rsi	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f67	            0x89d6	                            mov esi, edx	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f69	    0xff24c5000000	                       jmp qword [rax*8]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x4004f70	      0xba05000000	                              mov edx, 5	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f75	      0xbe00000000	                              mov esi, 0	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f7a	            0x31ff	                            xor edi, edi	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f7c	      0xe800000000	                          call 0x4004f81	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f81	          0x4889c7	                            mov rdi, rax	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f84	      0xe800000000	                          call 0x4004f89	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x4004f89	            0x31c0	                            xor eax, eax	      7841	eval.c	FUNCTION_150	IF_1
0x4004f8b	              0x5b	                                 pop rbx	      7895	eval.c	FUNCTION_150
0x4004f8c	              0xc3	                                     ret	      7895	eval.c	FUNCTION_150
0x4004f8d	           0xf1f00	                         nop dword [rax]	      7895	eval.c	FUNCTION_150
0x4004f90	    0xc70305000000	                      mov dword [rbx], 5	      7858	eval.c	FUNCTION_150	SWITCH_1
0x4004f96	        0xc6430400	                   mov byte [rbx + 4], 0	      7859	eval.c	FUNCTION_150	SWITCH_1
0x4004f9a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004f9e	          0x4885ff	                           test rdi, rdi	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004fa1	     0xf8499000000	                            je 0x4005040	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4004fa7	            0x85c9	                           test ecx, ecx	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004fa9	            0x7409	                            je 0x4004fb4	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004fab	          0x3b4f44	            cmp ecx, dword [rdi + 0x44] 	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004fae	     0xf84bc000000	                            je 0x4005070	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4004fb4	            0x89ca	                            mov edx, ecx	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x4004fb6	      0xe800000000	                          call 0x4004fbb	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x4004fbb	        0x48894308	                mov qword [rbx + 8], rax	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004fbf	          0x4885c0	                           test rax, rax	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004fc2	    0x448b05000000	            mov r8d, dword [0x04004fc9] 	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004fc9	           0xf95c0	                                setne al	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004fcc	           0xfb6c0	                           movzx eax, al	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004fcf	        0x4183e801	                              sub r8d, 1	      7893	eval.c	FUNCTION_150
0x4004fd3	    0x448905000000	            mov dword [0x04004fda], r8d 	      7893	eval.c	FUNCTION_150
0x4004fda	              0x5b	                                 pop rbx	      7895	eval.c	FUNCTION_150
0x4004fdb	              0xc3	                                     ret	      7895	eval.c	FUNCTION_150
0x4004fdc	         0xf1f4000	                         nop dword [rax]	      7895	eval.c	FUNCTION_150
0x4004fe0	    0xc70306000000	                      mov dword [rbx], 6	      7874	eval.c	FUNCTION_150	SWITCH_1
0x4004fe6	        0xc6430400	                   mov byte [rbx + 4], 0	      7875	eval.c	FUNCTION_150	SWITCH_1
0x4004fea	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4004fee	          0x4885ff	                           test rdi, rdi	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4004ff1	            0x744d	                            je 0x4005040	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4004ff3	            0x85c9	                           test ecx, ecx	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004ff5	            0x7405	                            je 0x4004ffc	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004ff7	          0x3b4f08	                cmp ecx, dword [rdi + 8]	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004ffa	            0x7454	                            je 0x4005050	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4004ffc	            0x89ca	                            mov edx, ecx	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4004ffe	      0xe800000000	                          call 0x4005003	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4005003	            0xebb6	                           jmp 0x4004fbb	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4005005	           0xf1f00	                         nop dword [rax]	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4005008	      0xbf00000000	                              mov edi, 0	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x400500d	      0xe800000000	                          call 0x4005012	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x4005012	    0x448b05000000	            mov r8d, dword [0x04005019] 	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x4005019	            0x31c0	                            xor eax, eax	      7891	eval.c	FUNCTION_150	SWITCH_1
0x400501b	            0xebb2	                           jmp 0x4004fcf	      7891	eval.c	FUNCTION_150	SWITCH_1
0x400501d	           0xf1f00	                         nop dword [rax]	      7891	eval.c	FUNCTION_150	SWITCH_1
0x4005020	          0x4889de	                            mov rsi, rbx	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x4005023	      0xe800000000	                          call 0x4005028	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x4005028	    0x448b05000000	            mov r8d, dword [0x0400502f] 	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x400502f	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x4005034	            0xeb99	                           jmp 0x4004fcf	      7856	eval.c	FUNCTION_150	SWITCH_1
0x4005036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7856	eval.c	FUNCTION_150	SWITCH_1
0x4005040	    0x48c743080000	                  mov qword [rbx + 8], 0	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4005048	            0x31c0	                            xor eax, eax	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400504a	      0xe980ffffff	                           jmp 0x4004fcf	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400504f	              0x90	                                     nop	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4005050	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4005057	        0x48894308	                mov qword [rbx + 8], rax	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400505b	        0x83400401	                  add dword [rax + 4], 1	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400505f	            0x31c0	                            xor eax, eax	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4005061	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4005066	           0xf95c0	                                setne al	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4005069	      0xe961ffffff	                           jmp 0x4004fcf	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400506e	            0x6690	                                     nop	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4005070	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4005074	        0x48894308	                mov qword [rbx + 8], rax	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4005078	        0x83403801	               add dword [rax + 0x38], 1	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400507c	            0x31c0	                            xor eax, eax	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400507e	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4005083	           0xf95c0	                                setne al	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4005086	      0xe944ffffff	                           jmp 0x4004fcf	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400508b	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x4005090	      0xe93affffff	                           jmp 0x4004fcf	      7836	eval.c	FUNCTION_150
list_script_vars	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,2:functions,0	15
0x4004060	    0x486305000000	         movsxd rax, dword [0x04004067] 	      1556	eval.c	FUNCTION_41	IF_1
0x4004067	            0x85c0	                           test eax, eax	      1556	eval.c	FUNCTION_41	IF_1
0x4004069	            0x7e08	                           jle 0x4004073	      1556	eval.c	FUNCTION_41	IF_1
0x400406b	    0x3b0500000000	            cmp eax, dword [0x04004071] 	      1556	eval.c	FUNCTION_41	IF_1
0x4004071	            0x7e05	                           jle 0x4004078	      1556	eval.c	FUNCTION_41	IF_1
0x4004073	            0xf3c3	                                     ret	      1556	eval.c	FUNCTION_41	IF_1
0x4004075	           0xf1f00	                         nop dword [rax]	      1556	eval.c	FUNCTION_41	IF_1
0x4004078	    0x488b15000000	            mov rdx, qword [0x0400407f] 	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x400407f	          0x4889f9	                            mov rcx, rdi	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x4004082	      0xbe00000000	                              mov esi, 0	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x4004087	      0x488b44c2f8	        mov rax, qword [rdx + rax*8 - 8]	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x400408c	            0x31d2	                            xor edx, edx	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x400408e	        0x4883c028	                           add rax, 0x28	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x4004092	          0x4889c7	                            mov rdi, rax	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
0x4004095	      0xe996feffff	             jmp sym.list_hashtable_vars	      1557	eval.c	FUNCTION_41	IF_1	CALL_2
ex_let_one	DO,0:WHILE,0:FOR,0:ELSE,16:IF,29:SWITCH,0:CALL,56:functions,0	389
0x400a990	            0x4157	                                push r15	      1677	eval.c	FUNCTION_43
0x400a992	            0x4156	                                push r14	      1677	eval.c	FUNCTION_43
0x400a994	            0x4155	                                push r13	      1677	eval.c	FUNCTION_43
0x400a996	            0x4154	                                push r12	      1677	eval.c	FUNCTION_43
0x400a998	          0x4989f5	                            mov r13, rsi	      1677	eval.c	FUNCTION_43
0x400a99b	              0x55	                                push rbp	      1677	eval.c	FUNCTION_43
0x400a99c	              0x53	                                push rbx	      1677	eval.c	FUNCTION_43
0x400a99d	          0x4889cd	                            mov rbp, rcx	      1677	eval.c	FUNCTION_43
0x400a9a0	          0x4889fb	                            mov rbx, rdi	      1677	eval.c	FUNCTION_43
0x400a9a3	          0x4d89c4	                             mov r12, r8	      1677	eval.c	FUNCTION_43
0x400a9a6	    0x4881ec980000	                           sub rsp, 0x98	      1677	eval.c	FUNCTION_43
0x400a9ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      1677	eval.c	FUNCTION_43
0x400a9b6	    0x488984248800	             mov qword [rsp + 0x88], rax	      1677	eval.c	FUNCTION_43
0x400a9be	            0x31c0	                            xor eax, eax	      1677	eval.c	FUNCTION_43
0x400a9c0	      0x48897c2408	                mov qword [rsp + 8], rdi	      1677	eval.c	FUNCTION_43
0x400a9c5	           0xfb607	                   movzx eax, byte [rdi]	      1689	eval.c	FUNCTION_43	IF_1
0x400a9c8	            0x3c24	                            cmp al, 0x24	      1689	eval.c	FUNCTION_43	IF_1
0x400a9ca	     0xf8480010000	                            je 0x400ab50	      1689	eval.c	FUNCTION_43	IF_1
0x400a9d0	            0x3c26	                            cmp al, 0x26	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x400a9d2	     0xf84e0020000	                            je 0x400acb8	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x400a9d8	            0x3c40	                            cmp al, 0x40	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400a9da	     0xf84d0000000	                            je 0x400aab0	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400a9e0	          0x83e841	                           sub eax, 0x41	      6376	eval.c	FUNCTION_101	CALL_1
0x400a9e3	            0x3c3a	                            cmp al, 0x3a	      6376	eval.c	FUNCTION_101	CALL_1
0x400a9e5	     0xf8735040000	                            ja 0x400ae20	      6376	eval.c	FUNCTION_101	CALL_1
0x400a9eb	          0x4189d6	                           mov r14d, edx	      6376	eval.c	FUNCTION_101	CALL_1
0x400a9ee	    0x48baffffff43	           movabs rdx, 0x7ffffff43ffffff	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a9f8	        0x480fa3c2	                             bt rdx, rax	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400a9fc	     0xf831e040000	                           jae 0x400ae20	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400aa02	        0x4883ec08	                              sub rsp, 8	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa06	          0x4531c9	                            xor r9d, r9d	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa09	          0x4531c0	                            xor r8d, r8d	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa0c	            0x6a02	                                  push 2	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa0e	            0x31c9	                            xor ecx, ecx	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa10	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa15	      0xe800000000	                          call 0x400aa1a	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa1a	          0x4889c3	                            mov rbx, rax	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400aa1d	          0x4885db	                           test rbx, rbx	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa20	              0x58	                                 pop rax	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa21	              0x5a	                                 pop rdx	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa22	            0x7443	                            je 0x400aa67	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa24	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa2a	     0xf84d0040000	                            je 0x400af00	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400aa30	          0x4885ed	                           test rbp, rbp	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa33	            0x741c	                            je 0x400aa51	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa35	          0x4889df	                            mov rdi, rbx	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa38	      0xe800000000	                          call 0x400aa3d	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa3d	           0xfb630	                   movzx esi, byte [rax]	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa40	          0x4889ef	                            mov rdi, rbp	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa43	      0xe800000000	                          call 0x400aa48	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa48	          0x4885c0	                           test rax, rax	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa4b	     0xf84bf040000	                            je 0x400af10	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400aa51	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa56	          0x4d89e0	                             mov r8, r12	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa59	          0x4489f1	                           mov ecx, r14d	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa5c	          0x4c89ea	                            mov rdx, r13	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa5f	          0x4889de	                            mov rsi, rbx	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa62	      0xe849b5ffff	                   call sym.set_var_lval	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400aa67	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2230	eval.c	FUNCTION_45	CALL_1
0x400aa6c	      0xe800000000	                          call 0x400aa71	      2230	eval.c	FUNCTION_45	CALL_1
0x400aa71	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400aa76	      0xe800000000	                          call 0x400aa7b	      2231	eval.c	FUNCTION_45	CALL_2
0x400aa7b	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1862	eval.c	FUNCTION_43
0x400aa83	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1862	eval.c	FUNCTION_43
0x400aa8c	          0x4889d8	                            mov rax, rbx	      1862	eval.c	FUNCTION_43
0x400aa8f	     0xf85f8040000	                           jne 0x400af8d	      1862	eval.c	FUNCTION_43
0x400aa95	    0x4881c4980000	                           add rsp, 0x98	      1862	eval.c	FUNCTION_43
0x400aa9c	              0x5b	                                 pop rbx	      1862	eval.c	FUNCTION_43
0x400aa9d	              0x5d	                                 pop rbp	      1862	eval.c	FUNCTION_43
0x400aa9e	            0x415c	                                 pop r12	      1862	eval.c	FUNCTION_43
0x400aaa0	            0x415d	                                 pop r13	      1862	eval.c	FUNCTION_43
0x400aaa2	            0x415e	                                 pop r14	      1862	eval.c	FUNCTION_43
0x400aaa4	            0x415f	                                 pop r15	      1862	eval.c	FUNCTION_43
0x400aaa6	              0xc3	                                     ret	      1862	eval.c	FUNCTION_43
0x400aaa7	    0x660f1f840000	                    nop word [rax + rax]	      1862	eval.c	FUNCTION_43
0x400aab0	        0x488d4701	                      lea rax, [rdi + 1]	      1806	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400aab4	          0x4d85c0	                             test r8, r8	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aab7	      0x4889442408	                mov qword [rsp + 8], rax	      1806	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400aabc	     0xf8486030000	                            je 0x400ae48	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aac2	        0x410fb600	                    movzx eax, byte [r8]	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aac6	          0x83e82b	                           sub eax, 0x2b	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aac9	            0xa8fd	                           test al, 0xfd	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aacb	     0xf846f040000	                            je 0x400af40	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x400aad1	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400aad4	            0x741d	                            je 0x400aaf3	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400aad6	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aada	      0xe800000000	                          call 0x400aadf	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aadf	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aae2	          0x4889ef	                            mov rdi, rbp	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aae5	      0xe800000000	                          call 0x400aaea	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aaea	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aaed	     0xf8470040000	                            je 0x400af63	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400aaf3	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400aaf8	          0x4c89ef	                            mov rdi, r13	      7098	eval.c	FUNCTION_129	CALL_1
0x400aafb	      0xe800000000	                          call 0x400ab00	      7098	eval.c	FUNCTION_129	CALL_1
0x400ab00	          0x4885c0	                           test rax, rax	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400ab03	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400ab06	     0xf84d4020000	                            je 0x400ade0	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400ab0c	      0x41803c242e	                    cmp byte [r12], 0x2e	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400ab11	     0xf8479030000	                            je 0x400ae90	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x400ab17	            0x31ed	                            xor ebp, ebp	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400ab19	      0x488b442408	                mov rax, qword [rsp + 8]	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab1e	      0xbf22000000	                           mov edi, 0x22	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab23	          0x4889de	                            mov rsi, rbx	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab26	      0xbaffffffff	                     mov edx, 0xffffffff	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab2b	           0xfb600	                   movzx eax, byte [rax]	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab2e	            0x3c40	                            cmp al, 0x40	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab30	           0xf45f8	                         cmovne edi, eax	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab33	            0x31c9	                            xor ecx, ecx	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab35	      0xe800000000	                          call 0x400ab3a	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x400ab3a	      0x488b442408	                mov rax, qword [rsp + 8]	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400ab3f	        0x488d5801	                      lea rbx, [rax + 1]	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400ab43	          0x4889ef	                            mov rdi, rbp	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400ab46	      0xe800000000	                          call 0x400ab4b	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400ab4b	      0xe92bffffff	                           jmp 0x400aa7b	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x400ab50	        0x4c8d7f01	                      lea r15, [rdi + 1]	      1692	eval.c	FUNCTION_43	IF_1
0x400ab54	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x400ab59	      0x4c897c2408	                mov qword [rsp + 8], r15	      1692	eval.c	FUNCTION_43	IF_1
0x400ab5e	      0xe88d57ffff	                    call sym.get_env_len	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x400ab63	          0x4c63f0	                         movsxd r14, eax	      1694	eval.c	FUNCTION_43	IF_1	CALL_1
0x400ab66	          0x4585f6	                         test r14d, r14d	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x400ab69	     0xf84b1020000	                            je 0x400ae20	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x400ab6f	          0x4d85e4	                           test r12, r12	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab72	            0x7410	                            je 0x400ab84	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab74	      0x410fb60424	                   movzx eax, byte [r12]	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab79	          0x83e82b	                           sub eax, 0x2b	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab7c	            0xa8fd	                           test al, 0xfd	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab7e	     0xf84bc030000	                            je 0x400af40	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ab84	          0x4885ed	                           test rbp, rbp	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x400ab87	            0x741e	                            je 0x400aba7	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x400ab89	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ab8e	      0xe800000000	                          call 0x400ab93	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ab93	           0xfb630	                   movzx esi, byte [rax]	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ab96	          0x4889ef	                            mov rdi, rbp	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ab99	      0xe800000000	                          call 0x400ab9e	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ab9e	          0x4885c0	                           test rax, rax	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400aba1	     0xf84bc030000	                            je 0x400af63	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400aba7	      0xe800000000	                          call 0x400abac	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400abac	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400abae	            0x85c0	                           test eax, eax	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400abb0	     0xf85c5feffff	                           jne 0x400aa7b	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400abb6	          0x4d01fe	                            add r14, r15	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x400abb9	          0x4c89ef	                            mov rdi, r13	      7098	eval.c	FUNCTION_129	CALL_1
0x400abbc	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400abc1	        0x410fb62e	                   movzx ebp, byte [r14]	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x400abc5	        0x41c60600	                       mov byte [r14], 0	      1707	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x400abc9	          0x4531ed	                          xor r13d, r13d	      1684	eval.c	FUNCTION_43
0x400abcc	      0xe800000000	                          call 0x400abd1	      7098	eval.c	FUNCTION_129	CALL_1
0x400abd1	          0x4885c0	                           test rax, rax	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abd4	          0x4889c2	                            mov rdx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400abd7	            0x7467	                            je 0x400ac40	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abd9	          0x4d85e4	                           test r12, r12	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abdc	            0x7462	                            je 0x400ac40	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abde	      0x41803c242e	                    cmp byte [r12], 0x2e	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abe3	            0x7562	                           jne 0x400ac47	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abe5	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x400abea	          0x4c89ff	                            mov rdi, r15	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x400abed	        0x48890424	                    mov qword [rsp], rax	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x400abf1	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1711	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x400abf9	      0xe800000000	                          call 0x400abfe	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x400abfe	          0x4885c0	                           test rax, rax	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400ac01	          0x4889c3	                            mov rbx, rax	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x400ac04	        0x488b1424	                    mov rdx, qword [rsp]	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400ac08	            0x7436	                            je 0x400ac40	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x400ac0a	          0x4889d6	                            mov rsi, rdx	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac0d	          0x4889c7	                            mov rdi, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac10	      0xe800000000	                          call 0x400ac15	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac15	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x400ac19	          0x4889c2	                            mov rdx, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac1c	          0x4989c5	                            mov r13, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac1f	            0x85ff	                           test edi, edi	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x400ac21	            0x741d	                            je 0x400ac40	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x400ac23	          0x4889df	                            mov rdi, rbx	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x400ac26	        0x48890424	                    mov qword [rsp], rax	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x400ac2a	      0xe800000000	                          call 0x400ac2f	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x400ac2f	        0x488b1424	                    mov rdx, qword [rsp]	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac33	          0x4989d5	                            mov r13, rdx	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x400ac40	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ac42	          0x4885d2	                           test rdx, rdx	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x400ac45	            0x745e	                            je 0x400aca5	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x400ac47	          0x4889d6	                            mov rsi, rdx	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x400ac4a	          0x4c89ff	                            mov rdi, r15	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x400ac4d	      0xe800000000	                          call 0x400ac52	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x400ac52	      0xbe00000000	                              mov esi, 0	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x400ac57	          0x4c89ff	                            mov rdi, r15	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x400ac5a	      0xe800000000	                          call 0x400ac5f	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x400ac5f	            0x85c0	                           test eax, eax	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x400ac61	     0xf84c9020000	                            je 0x400af30	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x400ac67	    0x8b3500000000	            mov esi, dword [0x0400ac6d] 	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400ac6d	            0x85f6	                           test esi, esi	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400ac6f	     0xf8563020000	                           jne 0x400aed8	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400ac75	    0x8b0d00000000	            mov ecx, dword [0x0400ac7b] 	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x400ac7b	            0x85c9	                           test ecx, ecx	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x400ac7d	            0x7421	                            je 0x400aca0	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x400ac7f	      0xbe00000000	                              mov esi, 0	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x400ac84	          0x4c89ff	                            mov rdi, r15	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x400ac87	      0xe800000000	                          call 0x400ac8c	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x400ac8c	            0x85c0	                           test eax, eax	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x400ac8e	            0x7510	                           jne 0x400aca0	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x400ac90	    0xc70500000000	               mov dword [0x0400ac9a], 0	      1730	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x400ac9a	    0x660f1f440000	                    nop word [rax + rax]	      1730	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x400aca0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1731	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x400aca5	          0x41882e	                     mov byte [r14], bpl	      1733	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x400aca8	          0x4c89ef	                            mov rdi, r13	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x400acab	      0xe800000000	                          call 0x400acb0	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x400acb0	      0xe9c6fdffff	                           jmp 0x400aa7b	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x400acb5	           0xf1f00	                         nop dword [rax]	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x400acb8	      0x488d742414	                   lea rsi, [rsp + 0x14]	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x400acbd	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x400acc2	      0xe87953ffff	                call sym.find_option_end	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x400acc7	          0x4885c0	                           test rax, rax	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x400acca	          0x4989c6	                            mov r14, rax	      1747	eval.c	FUNCTION_43	ELSE_6	IF_13	CALL_21
0x400accd	     0xf8490020000	                            je 0x400af63	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x400acd3	          0x4885ed	                           test rbp, rbp	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x400acd6	            0x741c	                            je 0x400acf4	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x400acd8	          0x4889c7	                            mov rdi, rax	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400acdb	      0xe800000000	                          call 0x400ace0	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400ace0	           0xfb630	                   movzx esi, byte [rax]	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400ace3	          0x4889ef	                            mov rdi, rbp	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400ace6	      0xe800000000	                          call 0x400aceb	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400aceb	          0x4885c0	                           test rax, rax	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400acee	     0xf846f020000	                            je 0x400af63	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x400acf4	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6964	eval.c	FUNCTION_124	CALL_1
0x400acf9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1756	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x400ad02	          0x4c89ef	                            mov rdi, r13	      6964	eval.c	FUNCTION_124	CALL_1
0x400ad05	        0x410fb62e	                   movzx ebp, byte [r14]	      1759	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x400ad09	        0x41c60600	                       mov byte [r14], 0	      1760	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x400ad0d	    0xc74424180000	               mov dword [rsp + 0x18], 0	      6962	eval.c	FUNCTION_124
0x400ad15	      0xe800000000	                          call 0x400ad1a	      6964	eval.c	FUNCTION_124	CALL_1
0x400ad1a	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400ad1f	          0x4c89ef	                            mov rdi, r13	      7098	eval.c	FUNCTION_129	CALL_1
0x400ad22	          0x4989c7	                            mov r15, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400ad25	      0xe800000000	                          call 0x400ad2a	      7098	eval.c	FUNCTION_129	CALL_1
0x400ad2a	          0x4885c0	                           test rax, rax	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad2d	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400ad30	     0xf84da000000	                            je 0x400ae10	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad36	          0x4d85e4	                           test r12, r12	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad39	     0xf84d1000000	                            je 0x400ae10	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad3f	      0x41803c243d	                    cmp byte [r12], 0x3d	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad44	            0x746a	                            je 0x400adb0	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x400ad46	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x400ad4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x400ad4f	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x400ad54	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x400ad59	      0xe800000000	                          call 0x400ad5e	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x400ad5e	          0x83f801	                              cmp eax, 1	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad61	            0x742b	                            je 0x400ad8e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad63	            0x85c0	                           test eax, eax	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad65	            0x7549	                           jne 0x400adb0	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad67	      0x41803c242e	                    cmp byte [r12], 0x2e	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad6c	            0x747b	                            je 0x400ade9	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad6e	      0xba05000000	                              mov edx, 5	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad73	      0xbe00000000	                              mov esi, 0	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad78	            0x31ff	                            xor edi, edi	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad7a	      0xe800000000	                          call 0x400ad7f	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad7f	          0x4c89e6	                            mov rsi, r12	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad82	          0x4889c7	                            mov rdi, rax	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad85	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ad87	      0xe800000000	                          call 0x400ad8c	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad8c	            0xeb39	                           jmp 0x400adc7	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x400ad8e	      0x410fb60424	                   movzx eax, byte [r12]	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad93	            0x3c2e	                            cmp al, 0x2e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad95	            0x74d7	                            je 0x400ad6e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x400ad97	            0x3c2b	                            cmp al, 0x2b	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x400ad99	     0xf84e4010000	                            je 0x400af83	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x400ad9f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x400ada4	          0x4c29f8	                            sub rax, r15	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x400ada7	          0x4989c7	                            mov r15, rax	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x400adaa	    0x660f1f440000	                    nop word [rax + rax]	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x400adb0	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adb4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adb9	          0x4889da	                            mov rdx, rbx	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adbc	          0x4c89fe	                            mov rsi, r15	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adbf	          0x4c89f3	                            mov rbx, r14	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adc2	      0xe800000000	                          call 0x400adc7	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x400adc7	          0x41882e	                     mov byte [r14], bpl	      1796	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x400adca	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x400adcf	      0xe800000000	                          call 0x400add4	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x400add4	      0xe9a2fcffff	                           jmp 0x400aa7b	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x400add9	     0xf1f80000000	                         nop dword [rax]	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x400ade0	            0x31ed	                            xor ebp, ebp	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400ade2	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ade4	      0xe95afdffff	                           jmp 0x400ab43	      1681	eval.c	FUNCTION_43
0x400ade9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x400adee	          0x4885ff	                           test rdi, rdi	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x400adf1	            0x74bd	                            je 0x400adb0	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x400adf3	          0x4889de	                            mov rsi, rbx	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x400adf6	      0xe800000000	                          call 0x400adfb	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x400adfb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x400ae00	          0x4889c3	                            mov rbx, rax	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x400ae03	      0xe800000000	                          call 0x400ae08	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x400ae08	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      1787	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x400ae0d	           0xf1f00	                         nop dword [rax]	      1787	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x400ae10	          0x4885db	                           test rbx, rbx	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x400ae13	            0x759b	                           jne 0x400adb0	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x400ae15	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ae17	            0xebae	                           jmp 0x400adc7	      1681	eval.c	FUNCTION_43
0x400ae19	     0xf1f80000000	                         nop dword [rax]	      1681	eval.c	FUNCTION_43
0x400ae20	      0xba05000000	                              mov edx, 5	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae25	      0xbe00000000	                              mov esi, 0	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae2a	            0x31ff	                            xor edi, edi	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae2c	      0xe800000000	                          call 0x400ae31	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae31	          0x4889de	                            mov rsi, rbx	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae34	          0x4889c7	                            mov rdi, rax	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae37	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ae39	      0xe800000000	                          call 0x400ae3e	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae3e	      0xe938fcffff	                           jmp 0x400aa7b	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae43	       0xf1f440000	                   nop dword [rax + rax]	      1859	eval.c	FUNCTION_43	CALL_56
0x400ae48	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400ae4b	            0x741d	                            je 0x400ae6a	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400ae4d	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae51	      0xe800000000	                          call 0x400ae56	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae56	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae59	          0x4889ef	                            mov rdi, rbp	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae5c	      0xe800000000	                          call 0x400ae61	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae61	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae64	     0xf84f9000000	                            je 0x400af63	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x400ae6a	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400ae6f	          0x4c89ef	                            mov rdi, r13	      7098	eval.c	FUNCTION_129	CALL_1
0x400ae72	            0x31ed	                            xor ebp, ebp	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x400ae74	      0xe800000000	                          call 0x400ae79	      7098	eval.c	FUNCTION_129	CALL_1
0x400ae79	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400ae7c	          0x4885db	                           test rbx, rbx	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400ae7f	     0xf8594fcffff	                           jne 0x400ab19	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x400ae85	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400ae87	      0xe9b7fcffff	                           jmp 0x400ab43	      1681	eval.c	FUNCTION_43
0x400ae8c	         0xf1f4000	                         nop dword [rax]	      1681	eval.c	FUNCTION_43
0x400ae90	      0x488b442408	                mov rax, qword [rsp + 8]	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400ae95	      0xbf22000000	                           mov edi, 0x22	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400ae9a	      0xbe02000000	                              mov esi, 2	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400ae9f	           0xfb600	                   movzx eax, byte [rax]	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400aea2	            0x3c40	                            cmp al, 0x40	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400aea4	           0xf45f8	                         cmovne edi, eax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400aea7	      0xe800000000	                          call 0x400aeac	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400aeac	          0x4885c0	                           test rax, rax	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x400aeaf	          0x4889c5	                            mov rbp, rax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x400aeb2	     0xf845ffcffff	                            je 0x400ab17	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x400aeb8	          0x4889de	                            mov rsi, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400aebb	          0x4889c7	                            mov rdi, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400aebe	      0xe800000000	                          call 0x400aec3	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400aec3	          0x4889ef	                            mov rdi, rbp	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400aec6	          0x4889c3	                            mov rbx, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400aec9	          0x4889dd	                            mov rbp, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x400aecc	      0xe800000000	                          call 0x400aed1	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400aed1	            0xeba9	                           jmp 0x400ae7c	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400aed3	       0xf1f440000	                   nop dword [rax + rax]	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x400aed8	      0xbe00000000	                              mov esi, 0	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400aedd	          0x4c89ff	                            mov rdi, r15	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400aee0	      0xe800000000	                          call 0x400aee5	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400aee5	            0x85c0	                           test eax, eax	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400aee7	     0xf8588fdffff	                           jne 0x400ac75	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x400aeed	    0xc70500000000	               mov dword [0x0400aef7], 0	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x400aef7	      0xe9a4fdffff	                           jmp 0x400aca0	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x400aefc	         0xf1f4000	                         nop dword [rax]	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x400af00	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400af02	      0xe960fbffff	                           jmp 0x400aa67	      1681	eval.c	FUNCTION_43
0x400af07	    0x660f1f840000	                    nop word [rax + rax]	      1681	eval.c	FUNCTION_43
0x400af10	      0xba05000000	                              mov edx, 5	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af15	      0xbe00000000	                              mov esi, 0	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af1a	            0x31ff	                            xor edi, edi	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af1c	      0xe800000000	                          call 0x400af21	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af21	          0x4889c7	                            mov rdi, rax	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af24	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400af26	      0xe800000000	                          call 0x400af2b	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af2b	      0xe937fbffff	                           jmp 0x400aa67	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x400af30	      0xe800000000	                          call 0x400af35	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x400af35	      0xe966fdffff	                           jmp 0x400aca0	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x400af3a	    0x660f1f440000	                    nop word [rax + rax]	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x400af40	      0xba05000000	                              mov edx, 5	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af45	      0xbe00000000	                              mov esi, 0	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af4a	            0x31ff	                            xor edi, edi	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af4c	      0xe800000000	                          call 0x400af51	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af51	          0x4c89e6	                            mov rsi, r12	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af54	          0x4889c7	                            mov rdi, rax	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af57	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400af59	      0xe800000000	                          call 0x400af5e	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af5e	      0xe918fbffff	                           jmp 0x400aa7b	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x400af63	      0xba05000000	                              mov edx, 5	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af68	      0xbe00000000	                              mov esi, 0	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af6d	            0x31ff	                            xor edi, edi	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af6f	      0xe800000000	                          call 0x400af74	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af74	          0x4889c7	                            mov rdi, rax	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af77	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x400af79	      0xe800000000	                          call 0x400af7e	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af7e	      0xe9f8faffff	                           jmp 0x400aa7b	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x400af83	      0x4c037c2418	             add r15, qword [rsp + 0x18]	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x400af88	      0xe923feffff	                           jmp 0x400adb0	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x400af8d	      0xe800000000	                          call 0x400af92	      1862	eval.c	FUNCTION_43
handle_subscript	DO,0:WHILE,1:FOR,0:ELSE,4:IF,10:SWITCH,0:CALL,13:functions,0	702
0x400b6e0	            0x4157	                                push r15	      6721	eval.c	FUNCTION_118
0x400b6e2	            0x4156	                                push r14	      6721	eval.c	FUNCTION_118
0x400b6e4	          0x4189d6	                           mov r14d, edx	      6721	eval.c	FUNCTION_118
0x400b6e7	            0x4155	                                push r13	      6721	eval.c	FUNCTION_118
0x400b6e9	            0x4154	                                push r12	      6721	eval.c	FUNCTION_118
0x400b6eb	          0x4989fd	                            mov r13, rdi	      6721	eval.c	FUNCTION_118
0x400b6ee	              0x55	                                push rbp	      6721	eval.c	FUNCTION_118
0x400b6ef	              0x53	                                push rbx	      6721	eval.c	FUNCTION_118
0x400b6f0	            0x31ed	                            xor ebp, ebp	      6723	eval.c	FUNCTION_118
0x400b6f2	          0x4889f3	                            mov rbx, rsi	      6721	eval.c	FUNCTION_118
0x400b6f5	        0x4883ec78	                           sub rsp, 0x78	      6721	eval.c	FUNCTION_118
0x400b6f9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6721	eval.c	FUNCTION_118
0x400b702	      0x4889442468	             mov qword [rsp + 0x68], rax	      6721	eval.c	FUNCTION_118
0x400b707	            0x31c0	                            xor eax, eax	      6721	eval.c	FUNCTION_118
0x400b709	          0x488b07	                    mov rax, qword [rdi]	      6721	eval.c	FUNCTION_118
0x400b70c	      0x4c8d7c2428	                   lea r15, [rsp + 0x28]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b711	        0x894c2418	             mov dword [rsp + 0x18], ecx	      6721	eval.c	FUNCTION_118
0x400b715	           0xf1f00	                         nop dword [rax]	      6721	eval.c	FUNCTION_118
0x400b718	           0xfb610	                   movzx edx, byte [rax]	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b71b	          0x80fa5b	                            cmp dl, 0x5b	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b71e	     0xf841c010000	                            je 0x400b840	      6729	eval.c	FUNCTION_118	WHILE_1
0x400b724	          0x80fa2e	                            cmp dl, 0x2e	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b727	     0xf8403010000	                            je 0x400b830	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b72d	          0x80fa28	                            cmp dl, 0x28	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b730	     0xf85ba030000	                           jne 0x400baf0	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b736	          0x4585f6	                         test r14d, r14d	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b739	     0xf84c1030000	                            je 0x400bb00	      6731	eval.c	FUNCTION_118	WHILE_1
0x400b73f	            0x8b33	                    mov esi, dword [rbx]	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b741	          0x8d56fd	                      lea edx, [rsi - 3]	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b744	          0x83fa01	                              cmp edx, 1	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b747	     0xf87a3030000	                            ja 0x400baf0	      6732	eval.c	FUNCTION_118	WHILE_1
0x400b74d	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b751	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b753	     0xf8497030000	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b759	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b75b	     0xf848f030000	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b761	          0x488b03	                    mov rax, qword [rbx]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400b764	        0x488b4b08	                mov rcx, qword [rbx + 8]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400b768	    0xc70300000000	                      mov dword [rbx], 0	      6743	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400b76e	          0x83f804	                              cmp eax, 4	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400b771	      0x4889442430	             mov qword [rsp + 0x30], rax	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400b776	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400b77b	     0xf846f040000	                            je 0x400bbf0	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400b781	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      6752	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	ELSE_1
0x400b786	            0x31d2	                            xor edx, edx	      6737	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400b788	    0x488b05000000	            mov rax, qword [0x0400b78f] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b78f	          0x4c89e7	                            mov rdi, r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b792	      0x4889542408	                mov qword [rsp + 8], rdx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b797	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b79b	        0x4c890424	                     mov qword [rsp], r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b79f	      0xe800000000	                          call 0x400b7a4	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7a4	              0x55	                                push rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7a5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7aa	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7ad	            0x89c6	                            mov esi, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7af	          0x4c89e7	                            mov rdi, r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7b2	              0x52	                                push rdx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7b3	            0x4156	                                push r14	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7b5	          0x4889da	                            mov rdx, rbx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7b8	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7ba	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7bf	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7c2	      0xe800000000	                          call 0x400b7c7	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7c7	        0x4883c420	                           add rsp, 0x20	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b7cb	          0x4189c4	                           mov r12d, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400b7ce	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b7d3	      0xe800000000	                          call 0x400b7d8	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400b7d8	      0xe800000000	                          call 0x400b7dd	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400b7dd	            0x85c0	                           test eax, eax	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400b7df	     0xf8462030000	                            je 0x400bb47	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400b7e5	        0x4183fc01	                             cmp r12d, 1	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400b7e9	     0xf84b8040000	                            je 0x400bca7	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400b7ef	          0x4889ef	                            mov rdi, rbp	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400b7f2	          0x4531e4	                          xor r12d, r12d	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400b7f5	      0xe800000000	                          call 0x400b7fa	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400b7fa	            0x31ed	                            xor ebp, ebp	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b7fc	         0xf1f4000	                         nop dword [rax]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b800	          0x4889ef	                            mov rdi, rbp	      6806	eval.c	FUNCTION_118	CALL_13
0x400b803	      0xe800000000	                          call 0x400b808	      6806	eval.c	FUNCTION_118	CALL_13
0x400b808	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      6808	eval.c	FUNCTION_118
0x400b80d	    0x644833342528	                xor rsi, qword fs:[0x28]	      6808	eval.c	FUNCTION_118
0x400b816	          0x4489e0	                           mov eax, r12d	      6808	eval.c	FUNCTION_118
0x400b819	     0xf85080a0000	                           jne 0x400c227	      6808	eval.c	FUNCTION_118
0x400b81f	        0x4883c478	                           add rsp, 0x78	      6808	eval.c	FUNCTION_118
0x400b823	              0x5b	                                 pop rbx	      6808	eval.c	FUNCTION_118
0x400b824	              0x5d	                                 pop rbp	      6808	eval.c	FUNCTION_118
0x400b825	            0x415c	                                 pop r12	      6808	eval.c	FUNCTION_118
0x400b827	            0x415d	                                 pop r13	      6808	eval.c	FUNCTION_118
0x400b829	            0x415e	                                 pop r14	      6808	eval.c	FUNCTION_118
0x400b82b	            0x415f	                                 pop r15	      6808	eval.c	FUNCTION_118
0x400b82d	              0xc3	                                     ret	      6808	eval.c	FUNCTION_118
0x400b82e	            0x6690	                                     nop	      6808	eval.c	FUNCTION_118
0x400b830	          0x833b06	                      cmp dword [rbx], 6	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b833	     0xf85b7020000	                           jne 0x400baf0	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b839	     0xf1f80000000	                         nop dword [rax]	      6730	eval.c	FUNCTION_118	WHILE_1
0x400b840	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b844	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b846	     0xf84a4020000	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b84c	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b84e	     0xf849c020000	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400b854	          0x4889ef	                            mov rdi, rbp	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400b857	      0xe800000000	                          call 0x400b85c	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400b85c	            0x8b03	                    mov eax, dword [rbx]	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400b85e	          0x83f806	                              cmp eax, 6	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400b861	     0xf8401030000	                            je 0x400bb68	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400b867	            0x31ed	                            xor ebp, ebp	      6787	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4
0x400b869	          0x83f80a	                            cmp eax, 0xa	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400b86c	     0xf87cf000000	                            ja 0x400b941	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400b872	    0xff24c5000000	                       jmp qword [rax*8]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400b879	     0xf1f80000000	                         nop dword [rax]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400b880	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400b885	          0x4585ed	                         test r13d, r13d	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400b888	     0xf8526040000	                           jne 0x400bcb4	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400b88e	            0x6690	                                     nop	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400b890	          0x4889df	                            mov rdi, rbx	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400b893	          0x4531e4	                          xor r12d, r12d	      6791	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9
0x400b896	      0xe800000000	                          call 0x400b89b	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400b89b	          0x4885ed	                           test rbp, rbp	      6799	eval.c	FUNCTION_118	IF_10
0x400b89e	     0xf845cffffff	                            je 0x400b800	      6799	eval.c	FUNCTION_118	IF_10
0x400b8a4	            0x8b03	                    mov eax, dword [rbx]	      6800	eval.c	FUNCTION_118	IF_10
0x400b8a6	          0x83f803	                              cmp eax, 3	      6800	eval.c	FUNCTION_118	IF_10
0x400b8a9	            0x741a	                            je 0x400b8c5	      6800	eval.c	FUNCTION_118	IF_10
0x400b8ab	          0x83f804	                              cmp eax, 4	      6801	eval.c	FUNCTION_118	IF_10
0x400b8ae	     0xf854cffffff	                           jne 0x400b800	      6801	eval.c	FUNCTION_118	IF_10
0x400b8b4	        0x488b4308	                mov rax, qword [rbx + 8]	      6802	eval.c	FUNCTION_118	IF_10
0x400b8b8	        0x448b4018	            mov r8d, dword [rax + 0x18] 	      6802	eval.c	FUNCTION_118	IF_10
0x400b8bc	          0x4585c0	                           test r8d, r8d	      6802	eval.c	FUNCTION_118	IF_10
0x400b8bf	     0xf840d040000	                            je 0x400bcd2	      6802	eval.c	FUNCTION_118	IF_10
0x400b8c5	          0x4889ef	                            mov rdi, rbp	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8c8	          0x4889de	                            mov rsi, rbx	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8cb	      0xe800000000	                          call 0x400b8d0	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8d0	          0x4889c5	                            mov rbp, rax	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8d3	      0xe928ffffff	                           jmp 0x400b800	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8d8	     0xf1f84000000	                   nop dword [rax + rax]	      6804	eval.c	FUNCTION_118	CALL_12
0x400b8e0	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400b8e5	          0x4585f6	                         test r14d, r14d	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400b8e8	            0x74a6	                            je 0x400b890	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400b8ea	            0x31ff	                            xor edi, edi	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b8ec	      0xba05000000	                              mov edx, 5	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b8f1	      0xbe00000000	                              mov esi, 0	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b8f6	      0xe800000000	                          call 0x400b8fb	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b8fb	          0x4889c7	                            mov rdi, rax	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b8fe	      0xe800000000	                          call 0x400b903	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b903	            0xeb8b	                           jmp 0x400b890	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b905	           0xf1f00	                         nop dword [rax]	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400b908	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400b90d	          0x4585e4	                         test r12d, r12d	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400b910	     0xf847affffff	                            je 0x400b890	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400b916	            0x31ff	                            xor edi, edi	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b918	      0xba05000000	                              mov edx, 5	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b91d	      0xbe00000000	                              mov esi, 0	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b922	      0xe800000000	                          call 0x400b927	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b927	          0x4889c7	                            mov rdi, rax	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b92a	      0xe800000000	                          call 0x400b92f	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b92f	      0xe95cffffff	                           jmp 0x400b890	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b934	         0xf1f4000	                         nop dword [rax]	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400b938	          0x4585f6	                         test r14d, r14d	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400b93b	     0xf854fffffff	                           jne 0x400b890	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400b941	        0x4d8b4500	                     mov r8, qword [r13]	      4344	eval.c	FUNCTION_71	IF_5
0x400b945	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400b94e	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400b957	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400b960	    0x48c744245800	               mov qword [rsp + 0x58], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400b969	        0x4180382e	                     cmp byte [r8], 0x2e	      4344	eval.c	FUNCTION_71	IF_5
0x400b96d	     0xf850d020000	                           jne 0x400bb80	      4344	eval.c	FUNCTION_71	IF_5
0x400b973	        0x4d8d6001	                       lea r12, [r8 + 1]	      4349	eval.c	FUNCTION_71	IF_5
0x400b977	            0x31c9	                            xor ecx, ecx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b979	          0x4c89e7	                            mov rdi, r12	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b97c	            0xeb0a	                           jmp 0x400b988	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b97e	            0x6690	                                     nop	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b980	        0x4883c101	                              add rcx, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b984	        0x4883c701	                              add rdi, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b988	           0xfb617	                   movzx edx, byte [rdi]	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b98b	            0x89d0	                            mov eax, edx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b98d	          0x83e0df	                     and eax, 0xffffffdf	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b990	          0x83e841	                           sub eax, 0x41	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b993	            0x3c19	                            cmp al, 0x19	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b995	            0x76e9	                           jbe 0x400b980	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b997	           0xfb6c2	                           movzx eax, dl	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b99a	          0x83e830	                           sub eax, 0x30	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b99d	          0x83f809	                              cmp eax, 9	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b9a0	            0x76de	                           jbe 0x400b980	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b9a2	          0x80fa5f	                            cmp dl, 0x5f	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b9a5	            0x74d9	                            je 0x400b980	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400b9a7	          0x4885c9	                           test rcx, rcx	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400b9aa	     0xf84e0feffff	                            je 0x400b890	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400b9b0	        0x48890c24	                    mov qword [rsp], rcx	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400b9b4	      0xe800000000	                          call 0x400b9b9	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400b9b9	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400b9bc	        0x49894500	                    mov qword [r13], rax	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400b9c0	        0x488b0c24	                    mov rcx, qword [rsp]	      4413	eval.c	FUNCTION_71	IF_19
0x400b9c4	     0xf844efdffff	                            je 0x400b718	      4413	eval.c	FUNCTION_71	IF_19
0x400b9ca	          0x4531d2	                          xor r10d, r10d	      4307	eval.c	FUNCTION_71
0x400b9cd	            0x31d2	                            xor edx, edx	      4307	eval.c	FUNCTION_71
0x400b9cf	          0x833b06	                      cmp dword [rbx], 6	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400b9d2	     0xf8498030000	                            je 0x400bd70	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400b9d8	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9dd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9e2	      0x448954241c	            mov dword [rsp + 0x1c], r10d	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9e7	        0x89542410	             mov dword [rsp + 0x10], edx	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9eb	      0x48894c2408	                mov qword [rsp + 8], rcx	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9f0	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400b9f8	      0xe800000000	                          call 0x400b9fd	      6964	eval.c	FUNCTION_124	CALL_1
0x400b9fd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ba02	        0x48890424	                    mov qword [rsp], rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400ba06	      0xe800000000	                          call 0x400ba0b	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ba0b	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba0f	        0x4c8b0c24	                     mov r9, qword [rsp]	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba13	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba18	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba1d	            0x85d2	                           test edx, edx	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba1f	     0xf85be070000	                           jne 0x400c1e3	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ba25	            0x8b03	                    mov eax, dword [rbx]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba27	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba2a	     0xf84e6060000	                            je 0x400c116	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba30	     0xf872d050000	                            ja 0x400bf63	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba36	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba39	          0x4531e4	                          xor r12d, r12d	      4305	eval.c	FUNCTION_71
0x400ba3c	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba3f	     0xf8700030000	                            ja 0x400bd45	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ba45	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba4a	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba4d	        0x89542408	                mov dword [rsp + 8], edx	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba51	        0x4c890c24	                     mov qword [rsp], r9	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba55	      0xe800000000	                          call 0x400ba5a	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba5a	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400ba5d	        0x4c8b0c24	                     mov r9, qword [rsp]	      7087	eval.c	FUNCTION_128
0x400ba61	        0x8b542408	                mov edx, dword [rsp + 8]	      7087	eval.c	FUNCTION_128
0x400ba65	     0xf84d4060000	                            je 0x400c13f	      7087	eval.c	FUNCTION_128
0x400ba6b	          0x4889c7	                            mov rdi, rax	      7087	eval.c	FUNCTION_128
0x400ba6e	        0x89542410	             mov dword [rsp + 0x10], edx	      7087	eval.c	FUNCTION_128
0x400ba72	      0x4c894c2408	                 mov qword [rsp + 8], r9	      7087	eval.c	FUNCTION_128
0x400ba77	        0x48890424	                    mov qword [rsp], rax	      7087	eval.c	FUNCTION_128
0x400ba7b	      0xe800000000	                          call 0x400ba80	      7087	eval.c	FUNCTION_128
0x400ba80	        0x488b0c24	                    mov rcx, qword [rsp]	      7087	eval.c	FUNCTION_128
0x400ba84	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      7087	eval.c	FUNCTION_128
0x400ba89	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      7087	eval.c	FUNCTION_128
0x400ba8d	            0x85d2	                           test edx, edx	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400ba8f	     0xf843a050000	                            je 0x400bfcf	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400ba95	          0x4d85c9	                             test r9, r9	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400ba98	     0xf885f060000	                            js 0x400c0fd	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400ba9e	          0x4d85e4	                           test r12, r12	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400baa1	     0xf8867060000	                            js 0x400c10e	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400baa7	          0x4c39e0	                            cmp rax, r12	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400baaa	        0x4c0f4ee0	                         cmovle r12, rax	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400baae	          0x4c89e2	                            mov rdx, r12	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bab1	        0x48c1ea3f	                           shr rdx, 0x3f	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bab5	          0x4d39e1	                             cmp r9, r12	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bab8	        0x400f9fc6	                                setg sil	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400babc	          0x4008d6	                              or sil, dl	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400babf	     0xf852d050000	                           jne 0x400bff2	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bac5	          0x4939c1	                             cmp r9, rax	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bac8	     0xf8d24050000	                           jge 0x400bff2	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bace	          0x4529cc	                           sub r12d, r9d	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bad1	        0x4a8d3c09	                     lea rdi, [rcx + r9]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bad5	      0x418d742401	                      lea esi, [r12 + 1]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bada	      0xe800000000	                          call 0x400badf	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400badf	          0x4989c4	                            mov r12, rax	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bae2	      0xe90e050000	                           jmp 0x400bff5	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bae7	    0x660f1f840000	                    nop word [rax + rax]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400baf0	    0x41bc01000000	                             mov r12d, 1	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400baf6	      0xe9a0fdffff	                           jmp 0x400b89b	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bafb	       0xf1f440000	                   nop dword [rax + rax]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400bb00	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400bb04	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400bb06	            0x74e8	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400bb08	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400bb0a	            0x74e4	                            je 0x400baf0	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400bb0c	    0x488b05000000	            mov rax, qword [0x0400bb13] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb13	            0x31f6	                            xor esi, esi	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb15	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb18	          0x4889da	                            mov rdx, rbx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb1b	      0xbf00000000	                              mov edi, 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb20	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb24	              0x55	                                push rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb25	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb27	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb29	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb2b	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb2e	      0xe800000000	                          call 0x400bb33	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb33	        0x4883c420	                           add rsp, 0x20	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb37	          0x4189c4	                           mov r12d, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400bb3a	      0xe800000000	                          call 0x400bb3f	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400bb3f	            0x85c0	                           test eax, eax	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400bb41	     0xf859efcffff	                           jne 0x400b7e5	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400bb47	          0x4889ef	                            mov rdi, rbp	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400bb4a	      0xe800000000	                          call 0x400bb4f	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400bb4f	        0x4183fc01	                             cmp r12d, 1	      6728	eval.c	FUNCTION_118	WHILE_1
0x400bb53	     0xf85a1fcffff	                           jne 0x400b7fa	      6728	eval.c	FUNCTION_118	WHILE_1
0x400bb59	        0x498b4500	                    mov rax, qword [r13]	      6728	eval.c	FUNCTION_118	WHILE_1
0x400bb5d	            0x31ed	                            xor ebp, ebp	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400bb5f	      0xe9b4fbffff	                           jmp 0x400b718	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400bb64	         0xf1f4000	                         nop dword [rax]	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400bb68	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6782	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400bb6c	          0x4885ed	                           test rbp, rbp	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400bb6f	     0xf84ccfdffff	                            je 0x400b941	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400bb75	        0x83450401	                  add dword [rbp + 4], 1	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400bb79	      0xe9c3fdffff	                           jmp 0x400b941	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400bb7e	            0x6690	                                     nop	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400bb80	        0x498d7801	                       lea rdi, [r8 + 1]	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400bb84	      0xe800000000	                          call 0x400bb89	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400bb89	        0x49894500	                    mov qword [r13], rax	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400bb8d	          0x80383a	                    cmp byte [rax], 0x3a	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400bb90	            0x747e	                            je 0x400bc10	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400bb92	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bb97	          0x4489f2	                           mov edx, r14d	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bb9a	          0x4c89ef	                            mov rdi, r13	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bb9d	      0xe800000000	                          call 0x400bba2	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bba2	            0x85c0	                           test eax, eax	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bba4	     0xf84e6fcffff	                            je 0x400b890	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400bbaa	          0x4585f6	                         test r14d, r14d	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bbad	     0xf859b010000	                           jne 0x400bd4e	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bbb3	        0x498b4500	                    mov rax, qword [r13]	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bbb7	           0xfb610	                   movzx edx, byte [rax]	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bbba	          0x80fa3a	                            cmp dl, 0x3a	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bbbd	     0xf8428060000	                            je 0x400c1eb	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bbc3	          0x80fa5d	                            cmp dl, 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400bbc6	     0xf84b4010000	                            je 0x400bd80	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400bbcc	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bbd1	          0x4531e4	                          xor r12d, r12d	      4307	eval.c	FUNCTION_71
0x400bbd4	          0x4585db	                         test r11d, r11d	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bbd7	     0xf858f000000	                           jne 0x400bc6c	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bbdd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bbe2	      0xe800000000	                          call 0x400bbe7	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bbe7	      0xe9a4fcffff	                           jmp 0x400b890	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bbec	         0xf1f4000	                         nop dword [rax]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bbf0	        0x4c8b6108	                mov r12, qword [rcx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x400bbf4	          0x4889ca	                            mov rdx, rcx	      6748	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400bbf7	          0x4d85e4	                           test r12, r12	      4862	eval.c	FUNCTION_75	IF_1
0x400bbfa	     0xf8588fbffff	                           jne 0x400b788	      4862	eval.c	FUNCTION_75	IF_1
0x400bc00	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4864	eval.c	FUNCTION_75
0x400bc04	    0x4c8da0d80000	                   lea r12, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x400bc0b	      0xe978fbffff	                           jmp 0x400b788	      4864	eval.c	FUNCTION_75
0x400bc10	    0x41bc01000000	                             mov r12d, 1	      4365	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400bc16	        0x488d7801	                      lea rdi, [rax + 1]	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400bc1a	      0xe800000000	                          call 0x400bc1f	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400bc1f	        0x49894500	                    mov qword [r13], rax	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400bc23	          0x80385d	                    cmp byte [rax], 0x5d	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400bc26	     0xf84b6000000	                            je 0x400bce2	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400bc2c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc31	          0x4489f2	                           mov edx, r14d	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc34	          0x4c89ef	                            mov rdi, r13	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc37	      0xe800000000	                          call 0x400bc3c	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc3c	            0x85c0	                           test eax, eax	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc3e	     0xf84cc030000	                            je 0x400c010	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400bc44	          0x4585f6	                         test r14d, r14d	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400bc47	     0xf8528050000	                           jne 0x400c175	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400bc4d	        0x498b4500	                    mov rax, qword [r13]	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400bc51	          0x80385d	                    cmp byte [rax], 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400bc54	     0xf8477050000	                            je 0x400c1d1	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400bc5a	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bc5e	            0x85ff	                           test edi, edi	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bc60	     0xf84b2050000	                            je 0x400c218	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400bc66	    0x41bc01000000	                             mov r12d, 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bc6c	      0xba05000000	                              mov edx, 5	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc71	      0xbe00000000	                              mov esi, 0	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc76	            0x31ff	                            xor edi, edi	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc78	      0xe800000000	                          call 0x400bc7d	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc7d	          0x4889c7	                            mov rdi, rax	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc80	      0xe800000000	                          call 0x400bc85	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400bc85	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bc8a	      0xe800000000	                          call 0x400bc8f	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400bc8f	          0x4585e4	                         test r12d, r12d	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400bc92	     0xf84f8fbffff	                            je 0x400b890	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400bc98	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400bc9d	      0xe800000000	                          call 0x400bca2	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400bca2	      0xe9e9fbffff	                           jmp 0x400b890	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400bca7	          0x4889df	                            mov rdi, rbx	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400bcaa	      0xe800000000	                          call 0x400bcaf	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400bcaf	      0xe93bfbffff	                           jmp 0x400b7ef	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400bcb4	            0x31ff	                            xor edi, edi	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcb6	      0xba05000000	                              mov edx, 5	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcbb	      0xbe00000000	                              mov esi, 0	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcc0	      0xe800000000	                          call 0x400bcc5	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcc5	          0x4889c7	                            mov rdi, rax	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcc8	      0xe800000000	                          call 0x400bccd	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bccd	      0xe9befbffff	                           jmp 0x400b890	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400bcd2	      0x4883782800	               cmp qword [rax + 0x28], 0	      6803	eval.c	FUNCTION_118	IF_10
0x400bcd7	     0xf8523fbffff	                           jne 0x400b800	      6803	eval.c	FUNCTION_118	IF_10
0x400bcdd	      0xe9e3fbffff	                           jmp 0x400b8c5	      6803	eval.c	FUNCTION_118	IF_10
0x400bce2	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bce6	      0xe800000000	                          call 0x400bceb	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bceb	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400bcee	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bcf2	     0xf8420faffff	                            je 0x400b718	      4413	eval.c	FUNCTION_71	IF_19
0x400bcf8	    0x41ba01000000	                             mov r10d, 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400bcfe	          0x4585e4	                         test r12d, r12d	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400bd01	     0xf84ec040000	                            je 0x400c1f3	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400bd07	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400bd0e	    0x41b801000000	                              mov r8d, 1	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400bd14	          0x4531c9	                            xor r9d, r9d	      4415	eval.c	FUNCTION_71	IF_19
0x400bd17	          0x4585d2	                         test r10d, r10d	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400bd1a	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4424	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400bd21	     0xf84a3000000	                            je 0x400bdca	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400bd27	            0x8b03	                    mov eax, dword [rbx]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd29	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd2c	     0xf84e7000000	                            je 0x400be19	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd32	            0x7774	                            ja 0x400bda8	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd34	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd37	      0xba01000000	                              mov edx, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd3c	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd3f	     0xf8600fdffff	                           jbe 0x400ba45	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd45	        0x498b4500	                    mov rax, qword [r13]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd49	      0xe9caf9ffff	                           jmp 0x400b718	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bd4e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      7098	eval.c	FUNCTION_129	CALL_1
0x400bd53	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400bd58	      0xe800000000	                          call 0x400bd5d	      7098	eval.c	FUNCTION_129	CALL_1
0x400bd5d	          0x4885c0	                           test rax, rax	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bd60	     0xf854dfeffff	                           jne 0x400bbb3	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bd66	      0xe972feffff	                           jmp 0x400bbdd	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bd6b	       0xf1f440000	                   nop dword [rax + rax]	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400bd70	            0x85d2	                           test edx, edx	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400bd72	     0xf84f4010000	                            je 0x400bf6c	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400bd78	          0x4531c0	                            xor r8d, r8d	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400bd7b	          0x4531c9	                            xor r9d, r9d	      4415	eval.c	FUNCTION_71	IF_19
0x400bd7e	            0xeb97	                           jmp 0x400bd17	      4415	eval.c	FUNCTION_71	IF_19
0x400bd80	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bd84	      0xe800000000	                          call 0x400bd89	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bd89	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400bd8c	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400bd90	     0xf8482f9ffff	                            je 0x400b718	      4413	eval.c	FUNCTION_71	IF_19
0x400bd96	          0x4531e4	                          xor r12d, r12d	      4309	eval.c	FUNCTION_71
0x400bd99	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400bda0	      0xe925fcffff	                           jmp 0x400b9ca	      4306	eval.c	FUNCTION_71
0x400bda5	           0xf1f00	                         nop dword [rax]	      4306	eval.c	FUNCTION_71
0x400bda8	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bdab	            0x7598	                           jne 0x400bd45	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bdad	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400bdb2	          0x4585c9	                           test r9d, r9d	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400bdb5	     0xf8585020000	                           jne 0x400c040	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400bdbb	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400bdbf	     0xf85cbfaffff	                           jne 0x400b890	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400bdc5	      0xe913feffff	                           jmp 0x400bbdd	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400bdca	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdcf	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdd4	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdd9	      0x4489542410	            mov dword [rsp + 0x10], r10d	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdde	      0x4c894c2408	                 mov qword [rsp + 8], r9	      6964	eval.c	FUNCTION_124	CALL_1
0x400bde3	        0x48890c24	                    mov qword [rsp], rcx	      6964	eval.c	FUNCTION_124	CALL_1
0x400bde7	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400bdef	      0xe800000000	                          call 0x400bdf4	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdf4	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400bdf9	          0x4989c4	                            mov r12, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400bdfc	      0xe800000000	                          call 0x400be01	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be01	        0x488b0c24	                    mov rcx, qword [rsp]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be05	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be0a	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be0f	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be14	      0xe90effffff	                           jmp 0x400bd27	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400be19	      0xba01000000	                              mov edx, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400be1e	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be22	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be27	      0x4489542410	            mov dword [rsp + 0x10], r10d	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be2c	        0x89542408	                mov dword [rsp + 8], edx	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be30	        0x4c890c24	                     mov qword [rsp], r9	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be34	      0xe800000000	                          call 0x400be39	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400be39	        0x4c8b0c24	                     mov r9, qword [rsp]	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400be3d	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be42	        0x8b542408	                mov edx, dword [rsp + 8]	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be46	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be4b	        0x498d0c01	                     lea rcx, [r9 + rax]	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400be4f	          0x4d85c9	                             test r9, r9	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400be52	        0x4c0f48c9	                           cmovs r9, rcx	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400be56	          0x4585c0	                           test r8d, r8d	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be59	            0x7555	                           jne 0x400beb0	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be5b	          0x4c89c9	                             mov rcx, r9	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be5e	        0x48c1e93f	                           shr rcx, 0x3f	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be62	            0x84c9	                             test cl, cl	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be64	            0x7505	                           jne 0x400be6b	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be66	          0x4c39c8	                             cmp rax, r9	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be69	            0x7f45	                            jg 0x400beb0	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400be6b	            0x85d2	                           test edx, edx	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400be6d	     0xf85fa020000	                           jne 0x400c16d	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400be73	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400be78	          0x4585d2	                         test r10d, r10d	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400be7b	     0xf840ffaffff	                            je 0x400b890	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400be81	            0x31ff	                            xor edi, edi	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be83	      0xba05000000	                              mov edx, 5	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be88	      0xbe00000000	                              mov esi, 0	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be8d	        0x4c890c24	                     mov qword [rsp], r9	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be91	      0xe800000000	                          call 0x400be96	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be96	        0x4c8b0c24	                     mov r9, qword [rsp]	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be9a	          0x4889c7	                            mov rdi, rax	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400be9d	          0x4c89ce	                             mov rsi, r9	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400bea0	      0xe800000000	                          call 0x400bea5	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400bea5	      0xe9e6f9ffff	                           jmp 0x400b890	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400beaa	    0x660f1f440000	                    nop word [rax + rax]	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400beb0	            0x85d2	                           test edx, edx	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400beb2	     0xf849b020000	                            je 0x400c153	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400beb8	          0x4d85e4	                           test r12, r12	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400bebb	     0xf888a020000	                            js 0x400c14b	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400bec1	          0x4c39e0	                            cmp rax, r12	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400bec4	     0xf8e54010000	                           jle 0x400c01e	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400beca	          0x4585d2	                         test r10d, r10d	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400becd	            0x7513	                           jne 0x400bee2	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400becf	      0x498d442401	                      lea rax, [r12 + 1]	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400bed4	          0x4c39c8	                             cmp rax, r9	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400bed7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400bede	        0x4c0f4ce0	                          cmovl r12, rax	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400bee2	        0x4c890c24	                     mov qword [rsp], r9	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400bee6	      0xe800000000	                          call 0x400beeb	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400beeb	          0x4885c0	                           test rax, rax	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400beee	      0x4889442410	             mov qword [rsp + 0x10], rax	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400bef3	     0xf8497f9ffff	                            je 0x400b890	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400bef9	        0x4c8b0c24	                     mov r9, qword [rsp]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400befd	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf01	          0x4c89ce	                             mov rsi, r9	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf04	      0xe800000000	                          call 0x400bf09	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf09	        0x4c8b0c24	                     mov r9, qword [rsp]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf0d	          0x4889c2	                            mov rdx, rax	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf10	          0x4d39cc	                             cmp r12, r9	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf13	            0x7d1b	                           jge 0x400bf30	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf15	      0xe907020000	                           jmp 0x400c121	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf1a	    0x660f1f440000	                    nop word [rax + rax]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf20	        0x4983c101	                               add r9, 1	      4512	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400bf24	          0x488b12	                    mov rdx, qword [rdx]	      4519	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400bf27	          0x4d39e1	                             cmp r9, r12	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf2a	     0xf8ff1010000	                            jg 0x400c121	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400bf30	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf35	        0x488d7210	                   lea rsi, [rdx + 0x10]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf39	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf3e	        0x48891424	                    mov qword [rsp], rdx	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf42	      0xe800000000	                          call 0x400bf47	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf47	            0x85c0	                           test eax, eax	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf49	        0x488b1424	                    mov rdx, qword [rsp]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf4d	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf52	            0x75cc	                           jne 0x400bf20	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400bf54	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400bf59	      0xe800000000	                          call 0x400bf5e	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400bf5e	      0xe92df9ffff	                           jmp 0x400b890	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400bf63	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bf66	     0xf85d9fdffff	                           jne 0x400bd45	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bf6c	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400bf70	     0xf84f0000000	                            je 0x400c066	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400bf76	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400bf7a	            0x89ca	                            mov edx, ecx	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400bf7c	          0x4c89e6	                            mov rsi, r12	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400bf7f	      0xe800000000	                          call 0x400bf84	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400bf84	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf88	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf8b	          0x4889c1	                            mov rcx, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400bf8e	           0xf94c0	                                 sete al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf91	          0x880424	                      mov byte [rsp], al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf94	            0x85d2	                           test edx, edx	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf96	     0xf8452010000	                            je 0x400c0ee	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf9c	            0x84c0	                             test al, al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bf9e	     0xf850c020000	                           jne 0x400c1b0	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400bfa4	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400bfa9	          0x4889cf	                            mov rdi, rcx	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400bfac	      0xe800000000	                          call 0x400bfb1	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400bfb1	          0x4889df	                            mov rdi, rbx	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400bfb4	      0xe800000000	                          call 0x400bfb9	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400bfb9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bfbe	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bfc3	          0x488903	                    mov qword [rbx], rax	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bfc6	        0x48895308	                mov qword [rbx + 8], rdx	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bfca	      0xe976fdffff	                           jmp 0x400bd45	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400bfcf	          0x4c39c8	                             cmp rax, r9	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfd2	            0x7e1e	                           jle 0x400bff2	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfd4	          0x4c89c8	                             mov rax, r9	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfd7	        0x48c1e83f	                           shr rax, 0x3f	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfdb	            0x84c0	                             test al, al	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfdd	            0x7513	                           jne 0x400bff2	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400bfdf	        0x4a8d3c09	                     lea rdi, [rcx + r9]	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400bfe3	      0xbe01000000	                              mov esi, 1	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400bfe8	      0xe800000000	                          call 0x400bfed	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400bfed	          0x4989c4	                            mov r12, rax	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400bff0	            0xeb03	                           jmp 0x400bff5	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400bff2	          0x4531e4	                          xor r12d, r12d	      4462	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400bff5	          0x4889df	                            mov rdi, rbx	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400bff8	      0xe800000000	                          call 0x400bffd	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400bffd	        0x4c896308	                mov qword [rbx + 8], r12	      4478	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400c001	    0xc70302000000	                      mov dword [rbx], 2	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400c007	        0x498b4500	                    mov rax, qword [r13]	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400c00b	      0xe908f7ffff	                           jmp 0x400b718	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400c010	          0x4585e4	                         test r12d, r12d	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400c013	     0xf8577f8ffff	                           jne 0x400b890	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400c019	      0xe9bffbffff	                           jmp 0x400bbdd	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400c01e	        0x4c8d60ff	                      lea r12, [rax - 1]	      4505	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400c022	          0x4585d2	                         test r10d, r10d	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c025	     0xf85b7feffff	                           jne 0x400bee2	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c02b	          0x4d85e4	                           test r12, r12	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c02e	     0xf899bfeffff	                           jns 0x400becf	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c034	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c03b	      0xe9a2feffff	                           jmp 0x400bee2	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400c040	      0xba05000000	                              mov edx, 5	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c045	      0xbe00000000	                              mov esi, 0	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c04a	            0x31ff	                            xor edi, edi	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c04c	        0x48890c24	                    mov qword [rsp], rcx	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c050	      0xe800000000	                          call 0x400c055	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c055	          0x4889c7	                            mov rdi, rax	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c058	      0xe800000000	                          call 0x400c05d	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c05d	        0x488b0c24	                    mov rcx, qword [rsp]	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c061	      0xe955fdffff	                           jmp 0x400bdbb	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400c066	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      7098	eval.c	FUNCTION_129	CALL_1
0x400c06b	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400c070	        0x48890c24	                    mov qword [rsp], rcx	      7098	eval.c	FUNCTION_129	CALL_1
0x400c074	      0xe800000000	                          call 0x400c079	      7098	eval.c	FUNCTION_129	CALL_1
0x400c079	          0x4885c0	                           test rax, rax	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400c07c	          0x4989c4	                            mov r12, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400c07f	        0x488b0c24	                    mov rcx, qword [rsp]	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400c083	     0xf8454fbffff	                            je 0x400bbdd	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400c089	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400c08d	            0x89ca	                            mov edx, ecx	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400c08f	          0x4889c6	                            mov rsi, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400c092	      0xe800000000	                          call 0x400c097	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400c097	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c09b	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c09e	          0x4889c1	                            mov rcx, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400c0a1	           0xf94c0	                                 sete al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0a4	            0x85f6	                           test esi, esi	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0a6	           0xf95c2	                                setne dl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0a9	            0x20c2	                              and dl, al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0ab	          0x881424	                      mov byte [rsp], dl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0ae	     0xf8453010000	                            je 0x400c207	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c0b4	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0b9	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0be	            0x31ff	                            xor edi, edi	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0c0	      0x48894c2408	                mov qword [rsp + 8], rcx	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0c5	      0xe800000000	                          call 0x400c0ca	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0ca	          0x4c89e6	                            mov rsi, r12	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0cd	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0d0	      0xe800000000	                          call 0x400c0d5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0d5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c0da	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400c0df	      0x48894c2408	                mov qword [rsp + 8], rcx	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400c0e4	      0xe800000000	                          call 0x400c0e9	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400c0e9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400c0ee	        0x803c2400	                       cmp byte [rsp], 0	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c0f2	     0xf84acfeffff	                            je 0x400bfa4	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c0f8	      0xe993f7ffff	                           jmp 0x400b890	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c0fd	          0x4901c1	                             add r9, rax	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c100	      0xba00000000	                              mov edx, 0	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c105	        0x4c0f48ca	                           cmovs r9, rdx	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c109	      0xe990f9ffff	                           jmp 0x400ba9e	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400c10e	          0x4901c4	                            add r12, rax	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400c111	      0xe998f9ffff	                           jmp 0x400baae	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400c116	          0x4531c0	                            xor r8d, r8d	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400c119	          0x4531e4	                          xor r12d, r12d	      4305	eval.c	FUNCTION_71
0x400c11c	      0xe9fdfcffff	                           jmp 0x400be1e	      4305	eval.c	FUNCTION_71
0x400c121	          0x4889df	                            mov rdi, rbx	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400c124	      0xe800000000	                          call 0x400c129	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400c129	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400c12e	          0x4889df	                            mov rdi, rbx	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400c131	      0xe800000000	                          call 0x400c136	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400c136	        0x498b4500	                    mov rax, qword [r13]	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400c13a	      0xe9d9f5ffff	                           jmp 0x400b718	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400c13f	            0x31c0	                            xor eax, eax	      7087	eval.c	FUNCTION_128
0x400c141	      0xb900000000	                              mov ecx, 0	      7087	eval.c	FUNCTION_128
0x400c146	      0xe942f9ffff	                           jmp 0x400ba8d	      7087	eval.c	FUNCTION_128
0x400c14b	          0x4901c4	                            add r12, rax	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400c14e	      0xe9cffeffff	                           jmp 0x400c022	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400c153	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c157	          0x4c89ce	                             mov rsi, r9	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c15a	      0xe800000000	                          call 0x400c15f	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c15f	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c164	        0x488d7810	                   lea rdi, [rax + 0x10]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c168	      0xe93ffeffff	                           jmp 0x400bfac	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400c16d	          0x4989c1	                             mov r9, rax	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400c170	      0xe943fdffff	                           jmp 0x400beb8	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400c175	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      7098	eval.c	FUNCTION_129	CALL_1
0x400c17a	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400c17f	      0xe800000000	                          call 0x400c184	      7098	eval.c	FUNCTION_129	CALL_1
0x400c184	          0x4885c0	                           test rax, rax	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400c187	     0xf8482000000	                            je 0x400c20f	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400c18d	        0x498b4500	                    mov rax, qword [r13]	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400c191	          0x80385d	                    cmp byte [rax], 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400c194	     0xf85c0faffff	                           jne 0x400bc5a	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400c19a	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c19e	      0xe800000000	                          call 0x400c1a3	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1a3	          0x4531d2	                          xor r10d, r10d	      4303	eval.c	FUNCTION_71
0x400c1a6	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1aa	      0xe94ffbffff	                           jmp 0x400bcfe	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1af	              0x90	                                     nop	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1b0	            0x31ff	                            xor edi, edi	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1b2	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1b7	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1bc	      0xe800000000	                          call 0x400c1c1	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1c1	          0x4c89e6	                            mov rsi, r12	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1c4	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1c7	      0xe800000000	                          call 0x400c1cc	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1cc	      0xe9bff6ffff	                           jmp 0x400b890	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400c1d1	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1d5	      0xe800000000	                          call 0x400c1da	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1da	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1de	      0xe935f5ffff	                           jmp 0x400b718	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400c1e3	          0x4531c0	                            xor r8d, r8d	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400c1e6	      0xe92cfbffff	                           jmp 0x400bd17	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400c1eb	          0x4531e4	                          xor r12d, r12d	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400c1ee	      0xe923faffff	                           jmp 0x400bc16	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400c1f3	          0x4531e4	                          xor r12d, r12d	      4309	eval.c	FUNCTION_71
0x400c1f6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400c1fd	      0xba01000000	                              mov edx, 1	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400c202	      0xe9c8f7ffff	                           jmp 0x400b9cf	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400c207	          0x880424	                      mov byte [rsp], al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c20a	      0xe9cbfeffff	                           jmp 0x400c0da	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400c20f	          0x4585e4	                         test r12d, r12d	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400c212	     0xf8580faffff	                           jne 0x400bc98	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400c218	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400c21d	      0xe800000000	                          call 0x400c222	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400c222	      0xe971faffff	                           jmp 0x400bc98	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400c227	      0xe800000000	                          call 0x400c22c	      6808	eval.c	FUNCTION_118
eval7	DO,0:WHILE,2:FOR,0:ELSE,13:IF,32:SWITCH,1:CALL,39:functions,0	822
0x400c850	            0x4157	                                push r15	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c852	            0x4156	                                push r14	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c854	          0x4189ce	                           mov r14d, ecx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c857	            0x4155	                                push r13	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c859	            0x4154	                                push r12	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c85b	          0x4189d5	                           mov r13d, edx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c85e	              0x55	                                push rbp	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c85f	              0x53	                                push rbx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c860	          0x4989f4	                            mov r12, rsi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c863	          0x4889fb	                            mov rbx, rdi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c866	        0x4883ec38	                           sub rsp, 0x38	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c86a	          0x488b2f	                    mov rbp, qword [rdi]	      4009	eval.c	ELSE_15	FUNCTION_70
0x400c86d	    0xc70600000000	                      mov dword [rsi], 0	      4004	eval.c	ELSE_15	FUNCTION_70
0x400c873	    0x64488b042528	                mov rax, qword fs:[0x28]	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c87c	      0x4889442428	             mov qword [rsp + 0x28], rax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c881	            0x31c0	                            xor eax, eax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400c883	         0xfb64500	                   movzx eax, byte [rbp]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c887	          0x4989ef	                            mov r15, rbp	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c88a	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c88d	    0x81e2fd000000	                           and edx, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c893	            0x7520	                           jne 0x400c8b5	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c895	           0xf1f00	                         nop dword [rax]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c898	        0x498d7f01	                      lea rdi, [r15 + 1]	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400c89c	      0xe800000000	                          call 0x400c8a1	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400c8a1	          0x4989c7	                            mov r15, rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400c8a4	          0x488903	                    mov qword [rbx], rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400c8a7	           0xfb600	                   movzx eax, byte [rax]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8aa	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8ad	    0x81e2fd000000	                           and edx, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8b3	            0x74e3	                            je 0x400c898	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8b5	            0x3c21	                            cmp al, 0x21	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8b7	            0x74df	                            je 0x400c898	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400c8b9	          0x83e822	                           sub eax, 0x22	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c8bc	            0x3c59	                            cmp al, 0x59	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c8be	     0xf8795030000	                            ja 0x400cc59	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c8c4	           0xfb6c0	                           movzx eax, al	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c8c7	    0xff24c5000000	                       jmp qword [rax*8]	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400c8ce	          0x4489ea	                           mov edx, r13d	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c8d1	          0x4c89e6	                            mov rsi, r12	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c8d4	          0x4889df	                            mov rdi, rbx	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c8d7	      0xe800000000	                          call 0x400c8dc	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c8dc	          0x83f802	                              cmp eax, 2	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400c8df	          0x4189c6	                           mov r14d, eax	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400c8e2	     0xf845c0b0000	                            je 0x400d444	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400c8e8	          0x488b3b	                    mov rdi, qword [rbx]	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400c8eb	      0xe800000000	                          call 0x400c8f0	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c8f0	        0x4183fe01	                             cmp r14d, 1	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400c8f4	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c8f7	     0xf8469010000	                            je 0x400ca66	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400c8fd	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c902	    0x644833342528	                xor rsi, qword fs:[0x28]	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c90b	          0x4489f0	                           mov eax, r14d	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c90e	     0xf853f0c0000	                           jne 0x400d553	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c914	        0x4883c438	                           add rsp, 0x38	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c918	              0x5b	                                 pop rbx	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c919	              0x5d	                                 pop rbp	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c91a	            0x415c	                                 pop r12	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c91c	            0x415d	                                 pop r13	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c91e	            0x415e	                                 pop r14	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c920	            0x415f	                                 pop r15	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c922	              0xc3	                                     ret	      4289	eval.c	ELSE_15	FUNCTION_70
0x400c923	        0x498d4701	                      lea rax, [r15 + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c927	          0x4531f6	                          xor r14d, r14d	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c92a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c92f	      0x410fb65701	               movzx edx, byte [r15 + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c934	          0x80fa22	                            cmp dl, 0x22	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c937	     0xf844c040000	                            je 0x400cd89	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c93d	            0x84d2	                             test dl, dl	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c93f	            0x752b	                           jne 0x400c96c	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c941	      0xe943040000	                           jmp 0x400cd89	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c950	          0x4801f8	                            add rax, rdi	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c953	      0x4889442418	             mov qword [rsp + 0x18], rax	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c958	           0xfb610	                   movzx edx, byte [rax]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c95b	            0x84d2	                             test dl, dl	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c95d	     0xf8426040000	                            je 0x400cd89	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c963	          0x80fa22	                            cmp dl, 0x22	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c966	     0xf841d040000	                            je 0x400cd89	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c96c	          0x80fa5c	                            cmp dl, 0x5c	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400c96f	     0xf8493030000	                            je 0x400cd08	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400c975	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400c97a	    0x8b1500000000	            mov edx, dword [0x0400c980] 	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c980	      0xb801000000	                              mov eax, 1	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c985	            0x85d2	                           test edx, edx	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c987	            0x74c7	                            je 0x400c950	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c989	    0xff1500000000	                 call qword [0x0400c98f]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c98f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c994	            0x4898	                                    cdqe	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c996	            0xebb8	                           jmp 0x400c950	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400c998	        0x498d7f01	                      lea rdi, [r15 + 1]	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c99c	      0xe800000000	                          call 0x400c9a1	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c9a1	          0x4889df	                            mov rdi, rbx	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c9a4	          0x488903	                    mov qword [rbx], rax	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400c9a7	          0x4489ea	                           mov edx, r13d	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c9aa	          0x4c89e6	                            mov rsi, r12	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c9ad	      0xe800000000	                          call 0x400c9b2	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c9b2	          0x488b3b	                    mov rdi, qword [rbx]	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c9b5	          0x4189c6	                           mov r14d, eax	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400c9b8	          0x803f29	                    cmp byte [rdi], 0x29	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c9bb	     0xf84480a0000	                            je 0x400d409	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400c9c1	          0x83f801	                              cmp eax, 1	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c9c4	     0xf84030b0000	                            je 0x400d4cd	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400c9ca	          0x83f802	                              cmp eax, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c9cd	     0xf846e010000	                            je 0x400cb41	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400c9d3	      0xe800000000	                          call 0x400c9d8	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c9d8	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c9db	      0xe91dffffff	                           jmp 0x400c8fd	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400c9e0	        0x498d7f01	                      lea rdi, [r15 + 1]	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400c9e4	      0xe800000000	                          call 0x400c9e9	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400c9e9	          0x4585f6	                         test r14d, r14d	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400c9ec	            0x7509	                           jne 0x400c9f7	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400c9ee	          0x80382e	                    cmp byte [rax], 0x2e	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400c9f1	     0xf8463050000	                            je 0x400cf5a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400c9f7	        0x4883ec08	                              sub rsp, 8	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400c9fb	          0x488b3b	                    mov rdi, qword [rbx]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400c9fe	          0x4531c9	                            xor r9d, r9d	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca01	            0x6a00	                                  push 0	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca03	            0x31f6	                            xor esi, esi	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca05	      0xb907000000	                              mov ecx, 7	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca0a	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca0f	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca14	      0xe800000000	                          call 0x400ca19	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400ca19	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400ca1e	          0x48033b	                    add rdi, qword [rbx]	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400ca21	          0x4585ed	                         test r13d, r13d	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca24	          0x48893b	                    mov qword [rbx], rdi	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400ca27	              0x58	                                 pop rax	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca28	              0x5a	                                 pop rdx	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca29	            0x7433	                            je 0x400ca5e	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca2b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca30	    0x41c704240100	                      mov dword [r12], 1	      4074	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca38	      0x4989442408	                mov qword [r12 + 8], rax	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca3d	          0x488b3b	                    mov rdi, qword [rbx]	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca40	            0xeb1c	                           jmp 0x400ca5e	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400ca42	        0x498d7f01	                      lea rdi, [r15 + 1]	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400ca46	          0x4585ed	                         test r13d, r13d	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400ca49	          0x48893b	                    mov qword [rbx], rdi	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400ca4c	     0xf85ac080000	                           jne 0x400d2fe	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400ca52	          0x803f00	                       cmp byte [rdi], 0	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400ca55	            0x7407	                            je 0x400ca5e	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400ca57	        0x4883c701	                              add rdi, 1	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400ca5b	          0x48893b	                    mov qword [rbx], rdi	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400ca5e	      0xe800000000	                          call 0x400ca63	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400ca63	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400ca66	      0xb901000000	                              mov ecx, 1	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca6b	          0x4489ea	                           mov edx, r13d	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca6e	          0x4c89e6	                            mov rsi, r12	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca71	          0x4889df	                            mov rdi, rbx	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca74	      0xe800000000	                          call 0x400ca79	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca79	          0x83f801	                              cmp eax, 1	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca7c	          0x4189c6	                           mov r14d, eax	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400ca7f	     0xf8578feffff	                           jne 0x400c8fd	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca85	          0x4585ed	                         test r13d, r13d	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca88	     0xf846ffeffff	                            je 0x400c8fd	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca8e	          0x4c39fd	                            cmp rbp, r15	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca91	     0xf8366feffff	                           jae 0x400c8fd	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400ca97	        0x418b0424	                    mov eax, dword [r12]	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400ca9b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4233	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400caa3	          0x83f807	                              cmp eax, 7	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400caa6	     0xf85a4020000	                           jne 0x400cd50	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400caac	    0xf2410f104424	            movsd xmm0, qword [r12 + 8] 	      4239	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400cab3	            0x31db	                            xor ebx, ebx	      4234	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400cab5	    0xf20f10150000	         movsd xmm2, qword [0x0400cabd] 	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400cabd	        0x660fefc9	                         pxor xmm1, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cac1	            0xeb13	                           jmp 0x400cad6	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cac3	       0xf1f440000	                   nop dword [rax + rax]	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cac8	          0x80fa2d	                            cmp dl, 0x2d	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400cacb	     0xf84ff010000	                            je 0x400ccd0	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400cad1	          0x4c39fd	                            cmp rbp, r15	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400cad4	            0x7424	                            je 0x400cafa	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400cad6	        0x4983ef01	                              sub r15, 1	      4252	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400cada	        0x410fb617	                   movzx edx, byte [r15]	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400cade	          0x80fa21	                            cmp dl, 0x21	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400cae1	            0x75e5	                           jne 0x400cac8	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400cae3	          0x83f807	                              cmp eax, 7	      4256	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cae6	     0xf8444020000	                            je 0x400cd30	      4256	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400caec	          0x4885db	                           test rbx, rbx	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400caef	           0xf94c3	                                 sete bl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400caf2	          0x4c39fd	                            cmp rbp, r15	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400caf5	           0xfb6db	                           movzx ebx, bl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400caf8	            0x75dc	                           jne 0x400cad6	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400cafa	          0x83f807	                              cmp eax, 7	      4273	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400cafd	     0xf84e1020000	                            je 0x400cde4	      4273	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400cb03	          0x4c89e7	                            mov rdi, r12	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400cb06	    0x41be01000000	                             mov r14d, 1	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400cb0c	      0xe800000000	                          call 0x400cb11	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400cb11	    0x41c704240100	                      mov dword [r12], 1	      4282	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400cb19	      0x49895c2408	                mov qword [r12 + 8], rbx	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400cb1e	      0xe9dafdffff	                           jmp 0x400c8fd	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400cb23	          0x4889df	                            mov rdi, rbx	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb26	          0x4489ea	                           mov edx, r13d	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb29	          0x4c89e6	                            mov rsi, r12	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb2c	      0xe800000000	                          call 0x400cb31	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb31	          0x488b3b	                    mov rdi, qword [rbx]	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb34	          0x4189c6	                           mov r14d, eax	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400cb37	        0x4183fe02	                             cmp r14d, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400cb3b	     0xf85aafdffff	                           jne 0x400c8eb	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400cb41	          0x4989fe	                            mov r14, rdi	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400cb44	      0xe913010000	                           jmp 0x400cc5c	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400cb49	        0x498d5701	                      lea rdx, [r15 + 1]	      5858	eval.c	FUNCTION_92
0x400cb4d	          0x4889df	                            mov rdi, rbx	      5860	eval.c	FUNCTION_92	CALL_1
0x400cb50	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5856	eval.c	FUNCTION_92
0x400cb58	    0x41be01000000	                             mov r14d, 1	      5891	eval.c	FUNCTION_92
0x400cb5e	          0x488913	                    mov qword [rbx], rdx	      5858	eval.c	FUNCTION_92
0x400cb61	        0x48891424	                    mov qword [rsp], rdx	      5858	eval.c	FUNCTION_92
0x400cb65	      0xe88637ffff	                    call sym.get_env_len	      5860	eval.c	FUNCTION_92	CALL_1
0x400cb6a	          0x4585ed	                         test r13d, r13d	      5861	eval.c	FUNCTION_92	IF_1
0x400cb6d	     0xf8475fdffff	                            je 0x400c8e8	      5861	eval.c	FUNCTION_92	IF_1
0x400cb73	          0x4531f6	                          xor r14d, r14d	      5864	eval.c	FUNCTION_92	IF_1	IF_2
0x400cb76	            0x85c0	                           test eax, eax	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400cb78	        0x488b1424	                    mov rdx, qword [rsp]	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400cb7c	     0xf8466fdffff	                            je 0x400c8e8	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400cb82	            0x4898	                                    cdqe	      5866	eval.c	FUNCTION_92	IF_1
0x400cb84	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400cb89	          0x4889d7	                            mov rdi, rdx	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400cb8c	        0x4c8d3402	                    lea r14, [rdx + rax]	      5866	eval.c	FUNCTION_92	IF_1
0x400cb90	        0x410fb606	                   movzx eax, byte [r14]	      5866	eval.c	FUNCTION_92	IF_1
0x400cb94	        0x41c60600	                       mov byte [r14], 0	      5867	eval.c	FUNCTION_92	IF_1
0x400cb98	          0x880424	                      mov byte [rsp], al	      5866	eval.c	FUNCTION_92	IF_1
0x400cb9b	      0xe800000000	                          call 0x400cba0	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400cba0	          0x4885c0	                           test rax, rax	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400cba3	     0xf84b4080000	                            je 0x400d45d	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400cba9	          0x803800	                       cmp byte [rax], 0	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400cbac	     0xf84ab080000	                            je 0x400d45d	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400cbb2	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400cbb7	          0x4585c0	                           test r8d, r8d	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400cbba	            0x7508	                           jne 0x400cbc4	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400cbbc	          0x4889c7	                            mov rdi, rax	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400cbbf	      0xe800000000	                          call 0x400cbc4	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400cbc4	         0xfb60c24	                   movzx ecx, byte [rsp]	      5885	eval.c	FUNCTION_92	IF_1
0x400cbc8	          0x41880e	                      mov byte [r14], cl	      5885	eval.c	FUNCTION_92	IF_1
0x400cbcb	    0x41c704240200	                      mov dword [r12], 2	      5887	eval.c	FUNCTION_92	IF_1
0x400cbd3	    0x41be01000000	                             mov r14d, 1	      5891	eval.c	FUNCTION_92
0x400cbd9	      0x4989442408	                mov qword [r12 + 8], rax	      5888	eval.c	FUNCTION_92	IF_1
0x400cbde	      0xe905fdffff	                           jmp 0x400c8e8	      5888	eval.c	FUNCTION_92	IF_1
0x400cbe3	        0x498d7f01	                      lea rdi, [r15 + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbe7	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbec	      0x410fb64701	               movzx eax, byte [r15 + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbf1	            0x84c0	                             test al, al	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbf3	     0xf84c1010000	                            je 0x400cdba	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbf9	          0x4531f6	                          xor r14d, r14d	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbfc	            0xeb15	                           jmp 0x400cc13	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cbfe	            0x6690	                                     nop	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc00	          0x4801c7	                            add rdi, rax	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc03	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc08	           0xfb607	                   movzx eax, byte [rdi]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc0b	            0x84c0	                             test al, al	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc0d	     0xf84a7010000	                            je 0x400cdba	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc13	            0x3c27	                            cmp al, 0x27	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400cc15	     0xf84cd000000	                            je 0x400cce8	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400cc1b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400cc20	    0x448b15000000	           mov r10d, dword [0x0400cc27] 	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc27	      0xb801000000	                              mov eax, 1	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc2c	          0x4585d2	                         test r10d, r10d	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc2f	            0x74cf	                            je 0x400cc00	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc31	    0xff1500000000	                 call qword [0x0400cc37]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc37	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc3c	            0x4898	                                    cdqe	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc3e	            0xebc0	                           jmp 0x400cc00	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400cc40	          0x4889df	                            mov rdi, rbx	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc43	          0x4489ea	                           mov edx, r13d	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc46	          0x4c89e6	                            mov rsi, r12	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc49	      0xe800000000	                          call 0x400cc4e	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc4e	          0x488b3b	                    mov rdi, qword [rbx]	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc51	          0x4189c6	                           mov r14d, eax	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400cc54	      0xe9defeffff	                           jmp 0x400cb37	      4097	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400cc59	          0x4c8b33	                    mov r14, qword [rbx]	      4097	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400cc5c	      0x488d742418	                   lea rsi, [rsp + 0x18]	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc61	          0x4889df	                            mov rdi, rbx	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc64	      0xb901000000	                              mov ecx, 1	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc69	          0x4489ea	                           mov edx, r13d	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc6c	      0xe800000000	                          call 0x400cc71	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc71	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4161	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_15
0x400cc76	        0x89442410	             mov dword [rsp + 0x10], eax	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc7a	          0x4885ff	                           test rdi, rdi	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc7d	        0x4c0f45f7	                         cmovne r14, rdi	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400cc81	            0x85c0	                           test eax, eax	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400cc83	     0xf8e6d060000	                           jle 0x400d2f6	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400cc89	          0x488b13	                    mov rdx, qword [rbx]	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400cc8c	          0x803a28	                    cmp byte [rdx], 0x28	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400cc8f	     0xf848d060000	                            je 0x400d322	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400cc95	          0x4585ed	                         test r13d, r13d	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400cc98	     0xf8589070000	                           jne 0x400d427	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400cc9e	    0x48833d000000	               cmp qword [0x0400cca6], 0	      6693	eval.c	FUNCTION_117	IF_1
0x400cca6	     0xf84a3020000	                            je 0x400cf4f	      6693	eval.c	FUNCTION_117	IF_1
0x400ccac	          0x4c89f7	                            mov rdi, r14	      6693	eval.c	FUNCTION_117	IF_1
0x400ccaf	            0x89c6	                            mov esi, eax	      6693	eval.c	FUNCTION_117	IF_1
0x400ccb1	    0x41be01000000	                             mov r14d, 1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400ccb7	      0xe8e48dffff	             call sym.check_vars.part.12	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400ccbc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400ccc1	      0xe800000000	                          call 0x400ccc6	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400ccc6	      0xe91dfcffff	                           jmp 0x400c8e8	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400cccb	       0xf1f440000	                   nop dword [rax + rax]	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400ccd0	          0x83f807	                              cmp eax, 7	      4265	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400ccd3	     0xf84a7000000	                            je 0x400cd80	      4265	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400ccd9	          0x48f7db	                                 neg rbx	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400ccdc	      0xe9f0fdffff	                           jmp 0x400cad1	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400cce1	     0xf1f80000000	                         nop dword [rax]	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400cce8	        0x807f0127	                cmp byte [rdi + 1], 0x27	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400ccec	     0xf8516010000	                           jne 0x400ce08	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400ccf2	        0x4883c701	                              add rdi, 1	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400ccf6	        0x4183c601	                             add r14d, 1	      4813	eval.c	FUNCTION_74	FOR_1	IF_1
0x400ccfa	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400ccff	      0xe91cffffff	                           jmp 0x400cc20	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400cd04	         0xf1f4000	                         nop dword [rax]	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400cd08	        0x80780100	                   cmp byte [rax + 1], 0	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400cd0c	     0xf8463fcffff	                            je 0x400c975	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400cd12	        0x488d7801	                      lea rdi, [rax + 1]	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400cd16	        0x418d5602	                      lea edx, [r14 + 2]	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400cd1a	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400cd1f	        0x8078013c	                cmp byte [rax + 1], 0x3c	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400cd23	        0x440f44f2	                         cmove r14d, edx	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400cd27	      0xe94efcffff	                           jmp 0x400c97a	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400cd2c	         0xf1f4000	                         nop dword [rax]	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400cd30	        0x660f2ec1	                      ucomisd xmm0, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd34	            0x7a0e	                            jp 0x400cd44	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd36	    0xf20f10050000	         movsd xmm0, qword [0x0400cd3e] 	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd3e	     0xf848dfdffff	                            je 0x400cad1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd44	        0x660f28c1	                       movapd xmm0, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd48	      0xe984fdffff	                           jmp 0x400cad1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd4d	           0xf1f00	                         nop dword [rax]	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400cd50	      0x488d742414	                   lea rsi, [rsp + 0x14]	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400cd55	          0x4c89e7	                            mov rdi, r12	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400cd58	      0xe800000000	                          call 0x400cd5d	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400cd5d	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400cd61	          0x4889c3	                            mov rbx, rax	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400cd64	            0x85c9	                           test ecx, ecx	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400cd66	            0x7445	                            je 0x400cdad	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400cd68	          0x4c89e7	                            mov rdi, r12	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400cd6b	          0x4531f6	                          xor r14d, r14d	      4246	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400cd6e	      0xe800000000	                          call 0x400cd73	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400cd73	      0xe985fbffff	                           jmp 0x400c8fd	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400cd78	     0xf1f84000000	                   nop dword [rax + rax]	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400cd80	        0x660f57c2	                        xorpd xmm0, xmm2	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400cd84	      0xe948fdffff	                           jmp 0x400cad1	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400cd89	          0x80fa22	                            cmp dl, 0x22	      4681	eval.c	FUNCTION_73	IF_3
0x400cd8c	     0xf8552050000	                           jne 0x400d2e4	      4681	eval.c	FUNCTION_73	IF_3
0x400cd92	          0x4585ed	                         test r13d, r13d	      4688	eval.c	FUNCTION_73	IF_4
0x400cd95	     0xf8588000000	                           jne 0x400ce23	      4688	eval.c	FUNCTION_73	IF_4
0x400cd9b	        0x488d7801	                      lea rdi, [rax + 1]	      4851	eval.c	FUNCTION_74
0x400cd9f	    0x41be01000000	                             mov r14d, 1	      4853	eval.c	FUNCTION_74
0x400cda5	          0x48893b	                    mov qword [rbx], rdi	      4851	eval.c	FUNCTION_74
0x400cda8	      0xe93efbffff	                           jmp 0x400c8eb	      4091	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400cdad	        0x418b0424	                    mov eax, dword [r12]	      4091	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400cdb1	        0x660fefc0	                         pxor xmm0, xmm0	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400cdb5	      0xe9fbfcffff	                           jmp 0x400cab5	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400cdba	          0x4c8b33	                    mov r14, qword [rbx]	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdbd	      0xba05000000	                              mov edx, 5	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdc2	      0xbe00000000	                              mov esi, 0	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdc7	            0x31ff	                            xor edi, edi	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdc9	      0xe800000000	                          call 0x400cdce	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdce	          0x4c89f6	                            mov rsi, r14	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdd1	          0x4889c7	                            mov rdi, rax	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdd4	      0xe800000000	                          call 0x400cdd9	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cdd9	          0x488b3b	                    mov rdi, qword [rbx]	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400cddc	          0x4531f6	                          xor r14d, r14d	      4821	eval.c	FUNCTION_74	IF_3
0x400cddf	      0xe907fbffff	                           jmp 0x400c8eb	      4821	eval.c	FUNCTION_74	IF_3
0x400cde4	          0x4c89e7	                            mov rdi, r12	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400cde7	      0xf20f110424	                 movsd qword [rsp], xmm0	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400cdec	    0x41be01000000	                             mov r14d, 1	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400cdf2	      0xe800000000	                          call 0x400cdf7	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400cdf7	      0xf20f100424	                 movsd xmm0, qword [rsp]	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400cdfc	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400ce03	      0xe9f5faffff	                           jmp 0x400c8fd	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400ce08	          0x4585ed	                         test r13d, r13d	      4825	eval.c	FUNCTION_74	IF_4
0x400ce0b	     0xf85b0000000	                           jne 0x400cec1	      4825	eval.c	FUNCTION_74	IF_4
0x400ce11	        0x4883c701	                              add rdi, 1	      4827	eval.c	FUNCTION_74	IF_4
0x400ce15	    0x41be01000000	                             mov r14d, 1	      4828	eval.c	FUNCTION_74	IF_4
0x400ce1b	          0x48893b	                    mov qword [rbx], rdi	      4827	eval.c	FUNCTION_74	IF_4
0x400ce1e	      0xe9c8faffff	                           jmp 0x400c8eb	      4827	eval.c	FUNCTION_74	IF_4
0x400ce23	          0x482b03	                    sub rax, qword [rbx]	      4698	eval.c	FUNCTION_73	CALL_4
0x400ce26	        0x418d3c06	                    lea edi, [r14 + rax]	      4698	eval.c	FUNCTION_73	CALL_4
0x400ce2a	      0xe800000000	                          call 0x400ce2f	      4698	eval.c	FUNCTION_73	CALL_4
0x400ce2f	          0x4885c0	                           test rax, rax	      4699	eval.c	FUNCTION_73	IF_5
0x400ce32	      0x4889442420	             mov qword [rsp + 0x20], rax	      4698	eval.c	FUNCTION_73	CALL_4
0x400ce37	            0x74a0	                            je 0x400cdd9	      4699	eval.c	FUNCTION_73	IF_5
0x400ce39	      0x4989442408	                mov qword [r12 + 8], rax	      4702	eval.c	FUNCTION_73
0x400ce3e	          0x488b03	                    mov rax, qword [rbx]	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce41	    0x41c704240200	                      mov dword [r12], 2	      4701	eval.c	FUNCTION_73
0x400ce49	        0x4883c001	                              add rax, 1	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce4d	      0x4889442418	             mov qword [rsp + 0x18], rax	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce52	           0xfb610	                   movzx edx, byte [rax]	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce55	            0x84d2	                             test dl, dl	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce57	            0x7446	                            je 0x400ce9f	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce59	          0x80fa22	                            cmp dl, 0x22	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce5c	            0x7441	                            je 0x400ce9f	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce5e	          0x80fa5c	                            cmp dl, 0x5c	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400ce61	     0xf84c7010000	                            je 0x400d02e	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400ce67	    0x448b1d000000	           mov r11d, dword [0x0400ce6e] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce6e	          0x4585db	                         test r11d, r11d	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce71	     0xf8554040000	                           jne 0x400d2cb	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce77	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce7c	        0x488d4a01	                      lea rcx, [rdx + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce80	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce85	        0x488d4801	                      lea rcx, [rax + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce89	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce8e	           0xfb600	                   movzx eax, byte [rax]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce91	            0x8802	                      mov byte [rdx], al	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce93	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400ce98	           0xfb610	                   movzx edx, byte [rax]	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce9b	            0x84d2	                             test dl, dl	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce9d	            0x75ba	                           jne 0x400ce59	      4704	eval.c	FUNCTION_73	FOR_2
0x400ce9f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4785	eval.c	FUNCTION_73
0x400cea4	    0x41be01000000	                             mov r14d, 1	      4790	eval.c	FUNCTION_73
0x400ceaa	          0xc60000	                       mov byte [rax], 0	      4785	eval.c	FUNCTION_73
0x400cead	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4786	eval.c	FUNCTION_73	IF_14
0x400ceb2	          0x803f01	                       cmp byte [rdi], 1	      4787	eval.c	FUNCTION_73	IF_14
0x400ceb5	        0x4883dfff	             sbb rdi, 0xffffffffffffffff	      4787	eval.c	FUNCTION_73	IF_14
0x400ceb9	          0x48893b	                    mov qword [rbx], rdi	      4788	eval.c	FUNCTION_73
0x400cebc	      0xe92afaffff	                           jmp 0x400c8eb	      4085	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400cec1	          0x482b3b	                    sub rdi, qword [rbx]	      4834	eval.c	FUNCTION_74	CALL_4
0x400cec4	          0x4429f7	                           sub edi, r14d	      4834	eval.c	FUNCTION_74	CALL_4
0x400cec7	      0xe800000000	                          call 0x400cecc	      4834	eval.c	FUNCTION_74	CALL_4
0x400cecc	          0x4885c0	                           test rax, rax	      4835	eval.c	FUNCTION_74	IF_5
0x400cecf	      0x4889442420	             mov qword [rsp + 0x20], rax	      4834	eval.c	FUNCTION_74	CALL_4
0x400ced4	     0xf84fffeffff	                            je 0x400cdd9	      4835	eval.c	FUNCTION_74	IF_5
0x400ceda	      0x4989442408	                mov qword [r12 + 8], rax	      4838	eval.c	FUNCTION_74
0x400cedf	          0x488b03	                    mov rax, qword [rbx]	      4840	eval.c	FUNCTION_74	FOR_2
0x400cee2	    0x41c704240200	                      mov dword [r12], 2	      4837	eval.c	FUNCTION_74
0x400ceea	        0x4883c001	                              add rax, 1	      4840	eval.c	FUNCTION_74	FOR_2
0x400ceee	      0x4889442418	             mov qword [rsp + 0x18], rax	      4840	eval.c	FUNCTION_74	FOR_2
0x400cef3	            0xeb29	                           jmp 0x400cf1e	      4840	eval.c	FUNCTION_74	FOR_2
0x400cef5	           0xf1f00	                         nop dword [rax]	      4840	eval.c	FUNCTION_74	FOR_2
0x400cef8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cefd	        0x488d5001	                      lea rdx, [rax + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf01	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf06	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf0b	        0x488d4a01	                      lea rcx, [rdx + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf0f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf14	           0xfb612	                   movzx edx, byte [rdx]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf17	            0x8810	                      mov byte [rax], dl	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf19	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf1e	           0xfb610	                   movzx edx, byte [rax]	      4840	eval.c	FUNCTION_74	FOR_2
0x400cf21	            0x84d2	                             test dl, dl	      4840	eval.c	FUNCTION_74	FOR_2
0x400cf23	     0xf84ec040000	                            je 0x400d415	      4840	eval.c	FUNCTION_74	FOR_2
0x400cf29	          0x80fa27	                            cmp dl, 0x27	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400cf2c	     0xf84e4000000	                            je 0x400d016	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400cf32	    0x448b0d000000	            mov r9d, dword [0x0400cf39] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf39	          0x4585c9	                           test r9d, r9d	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf3c	            0x74ba	                            je 0x400cef8	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf3e	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf43	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf48	      0xe800000000	                          call 0x400cf4d	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf4d	            0xebca	                           jmp 0x400cf19	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400cf4f	    0x41be01000000	                             mov r14d, 1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400cf55	      0xe967fdffff	                           jmp 0x400ccc1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400cf5a	         0xfb67801	               movzx edi, byte [rax + 1]	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf5e	        0x48890424	                    mov qword [rsp], rax	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf62	      0xe800000000	                          call 0x400cf67	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf67	            0x85c0	                           test eax, eax	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf69	        0x488b1424	                    mov rdx, qword [rsp]	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf6d	     0xf8484faffff	                            je 0x400c9f7	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400cf73	        0x488d7a02	                      lea rdi, [rdx + 2]	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400cf77	      0xe800000000	                          call 0x400cf7c	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400cf7c	           0xfb608	                   movzx ecx, byte [rax]	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf7f	            0x89ca	                            mov edx, ecx	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf81	          0x83e2df	                     and edx, 0xffffffdf	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf84	          0x80fa45	                            cmp dl, 0x45	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf87	            0x753c	                           jne 0x400cfc5	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf89	         0xfb65001	               movzx edx, byte [rax + 1]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cf8d	        0x4c8d7001	                      lea r14, [rax + 1]	      4045	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400cf91	          0x8d4ad5	                   lea ecx, [rdx - 0x2b]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cf94	    0x81e1fd000000	                           and ecx, 0xfd	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cf9a	            0x7508	                           jne 0x400cfa4	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cf9c	         0xfb65002	               movzx edx, byte [rax + 2]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cfa0	        0x4c8d7002	                      lea r14, [rax + 2]	      4047	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400cfa4	           0xfb6fa	                           movzx edi, dl	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400cfa7	      0xe800000000	                          call 0x400cfac	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400cfac	            0x85c0	                           test eax, eax	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400cfae	     0xf8443faffff	                            je 0x400c9f7	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400cfb4	        0x498d7e01	                      lea rdi, [r14 + 1]	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400cfb8	      0xe800000000	                          call 0x400cfbd	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400cfbd	           0xfb608	                   movzx ecx, byte [rax]	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400cfc0	            0x89ca	                            mov edx, ecx	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400cfc2	          0x83e2df	                     and edx, 0xffffffdf	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400cfc5	          0x83ea41	                           sub edx, 0x41	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400cfc8	          0x80fa19	                            cmp dl, 0x19	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400cfcb	     0xf8626faffff	                           jbe 0x400c9f7	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400cfd1	          0x80f92e	                            cmp cl, 0x2e	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400cfd4	     0xf841dfaffff	                            je 0x400c9f7	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400cfda	          0x488b3b	                    mov rdi, qword [rbx]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cfdd	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cfe2	      0xe800000000	                          call 0x400cfe7	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cfe7	          0x4863f8	                         movsxd rdi, eax	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cfea	          0x48033b	                    add rdi, qword [rbx]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cfed	          0x4585ed	                         test r13d, r13d	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400cff0	          0x48893b	                    mov qword [rbx], rdi	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400cff3	     0xf8465faffff	                            je 0x400ca5e	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400cff9	    0xf20f10442420	         movsd xmm0, qword [rsp + 0x20] 	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400cfff	    0x41c704240700	                      mov dword [r12], 7	      4063	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d007	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d00e	          0x488b3b	                    mov rdi, qword [rbx]	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d011	      0xe948faffff	                           jmp 0x400ca5e	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d016	        0x80780127	                cmp byte [rax + 1], 0x27	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400d01a	     0xf85f5030000	                           jne 0x400d415	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400d020	        0x4883c001	                              add rax, 1	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d024	      0x4889442418	             mov qword [rsp + 0x18], rax	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d029	      0xe904ffffff	                           jmp 0x400cf32	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d02e	        0x488d5001	                      lea rdx, [rax + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d032	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d037	         0xfb64801	               movzx ecx, byte [rax + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d03b	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d03e	          0x80fa48	                            cmp dl, 0x48	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d041	     0xf874d020000	                            ja 0x400d294	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d047	           0xfb6d2	                           movzx edx, dl	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d04a	    0xff24d5000000	                       jmp qword [rdx*8]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d051	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d056	        0x488d5001	                      lea rdx, [rax + 1]	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d05a	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d05f	          0xc60009	                       mov byte [rax], 9	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d062	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d067	        0x4883c001	                              add rax, 1	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d06b	      0x4889442418	             mov qword [rsp + 0x18], rax	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d070	      0xe9ddfdffff	                           jmp 0x400ce52	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d075	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d07a	        0x488d5001	                      lea rdx, [rax + 1]	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d07e	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d083	          0xc6000d	                     mov byte [rax], 0xd	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d086	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d08b	        0x4883c001	                              add rax, 1	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d08f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d094	      0xe9b9fdffff	                           jmp 0x400ce52	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d099	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d09e	        0x488d5001	                      lea rdx, [rax + 1]	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0a2	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0a7	          0xc6000a	                     mov byte [rax], 0xa	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0aa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0af	        0x4883c001	                              add rax, 1	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0b3	      0x4889442418	             mov qword [rsp + 0x18], rax	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0b8	      0xe995fdffff	                           jmp 0x400ce52	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0bd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0c2	        0x488d5001	                      lea rdx, [rax + 1]	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0c6	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0cb	          0xc6000c	                     mov byte [rax], 0xc	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0ce	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0d3	        0x4883c001	                              add rax, 1	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0d7	      0x4889442418	             mov qword [rsp + 0x18], rax	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0dc	      0xe971fdffff	                           jmp 0x400ce52	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0e1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0e6	        0x488d5001	                      lea rdx, [rax + 1]	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0ea	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0ef	          0xc6001b	                    mov byte [rax], 0x1b	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0f2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0f7	        0x4883c001	                              add rax, 1	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d0fb	      0x4889442418	             mov qword [rsp + 0x18], rax	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d100	      0xe94dfdffff	                           jmp 0x400ce52	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d105	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d10a	        0x488d5001	                      lea rdx, [rax + 1]	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d10e	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d113	          0xc60008	                       mov byte [rax], 8	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d116	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d11b	        0x4883c001	                              add rax, 1	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d11f	      0x4889442418	             mov qword [rsp + 0x18], rax	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d124	      0xe929fdffff	                           jmp 0x400ce52	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d129	         0xfb67802	               movzx edi, byte [rax + 2]	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400d12d	      0xe800000000	                          call 0x400d132	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400d132	            0x85c0	                           test eax, eax	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400d134	     0xf8459fdffff	                            je 0x400ce93	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400d13a	      0xe800000000	                          call 0x400d13f	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d13f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d144	          0x488b00	                    mov rax, qword [rax]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d147	           0xfb611	                   movzx edx, byte [rcx]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d14a	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d14d	          0x4889d6	                            mov rsi, rdx	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d150	      0xba01000000	                              mov edx, 1	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400d155	          0x83f858	                           cmp eax, 0x58	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400d158	        0x8944240c	              mov dword [rsp + 0xc], eax	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400d15c	            0x7410	                            je 0x400d16e	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400d15e	            0x31d2	                            xor edx, edx	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400d160	        0x4080fe75	                           cmp sil, 0x75	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400d164	           0xf95c2	                                setne dl	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400d167	    0x8d1495030000	                    lea edx, [rdx*4 + 3]	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400d16e	          0x4531f6	                          xor r14d, r14d	      4664	eval.c	FUNCTION_73
0x400d171	            0xeb31	                           jmp 0x400d1a4	      4664	eval.c	FUNCTION_73
0x400d173	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400d178	          0x891424	                    mov dword [rsp], edx	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400d17b	        0x41c1e604	                             shl r14d, 4	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400d17f	        0x488d4801	                      lea rcx, [rax + 1]	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400d183	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400d188	         0xfb67801	               movzx edi, byte [rax + 1]	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400d18c	      0xe800000000	                          call 0x400d191	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400d191	          0x8b1424	                    mov edx, dword [rsp]	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d194	          0x4101c6	                           add r14d, eax	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400d197	          0x83ea01	                              sub edx, 1	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d19a	          0x83faff	             cmp edx, 0xffffffffffffffff	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d19d	            0x7418	                            je 0x400d1b7	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d19f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1a4	         0xfb67901	               movzx edi, byte [rcx + 1]	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1a8	          0x891424	                    mov dword [rsp], edx	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1ab	      0xe800000000	                          call 0x400d1b0	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1b0	            0x85c0	                           test eax, eax	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1b2	          0x8b1424	                    mov edx, dword [rsp]	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1b5	            0x75bc	                           jne 0x400d173	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400d1b7	    0x488344241801	               add qword [rsp + 0x18], 1	      4738	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7
0x400d1bd	      0x837c240c58	            cmp dword [rsp + 0xc], 0x58 	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1c2	     0xf8460030000	                            je 0x400d528	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1c8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1cd	          0x4489f7	                           mov edi, r14d	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1d0	    0xff1500000000	                 call qword [0x0400d1d6]	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1d6	            0x4898	                                    cdqe	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1d8	      0x4801442420	            add qword [rsp + 0x20], rax 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1dd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1e2	      0xe96bfcffff	                           jmp 0x400ce52	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400d1e7	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400d1ec	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400d1f1	      0xb901000000	                              mov ecx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400d1f6	      0xba01000000	                              mov edx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400d1fb	      0xe800000000	                          call 0x400d200	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400d200	            0x85c0	                           test eax, eax	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d202	     0xf848c000000	                            je 0x400d294	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d208	            0x4898	                                    cdqe	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d20a	      0x4801442420	            add qword [rsp + 0x20], rax 	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d20f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d214	      0xe939fcffff	                           jmp 0x400ce52	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400d219	        0x488d5002	                      lea rdx, [rax + 2]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d21d	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d222	         0xfb64001	               movzx eax, byte [rax + 1]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d226	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d22b	          0x83e830	                           sub eax, 0x30	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d22e	            0x8802	                      mov byte [rdx], al	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400d230	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d235	           0xfb608	                   movzx ecx, byte [rax]	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d238	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d23b	          0x80fa07	                               cmp dl, 7	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d23e	            0x7749	                            ja 0x400d289	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d240	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d245	        0x488d7001	                      lea rsi, [rax + 1]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d249	           0xfb611	                   movzx edx, byte [rcx]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d24c	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d251	           0xfb600	                   movzx eax, byte [rax]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d254	        0x8d44d0d0	           lea eax, [rax + rdx*8 - 0x30]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d258	            0x8801	                      mov byte [rcx], al	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400d25a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d25f	           0xfb608	                   movzx ecx, byte [rax]	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d262	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d265	          0x80fa07	                               cmp dl, 7	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d268	            0x771f	                            ja 0x400d289	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d26a	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d26f	        0x488d7001	                      lea rsi, [rax + 1]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d273	           0xfb611	                   movzx edx, byte [rcx]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d276	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d27b	           0xfb600	                   movzx eax, byte [rax]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d27e	        0x8d44d0d0	           lea eax, [rax + rdx*8 - 0x30]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d282	            0x8801	                      mov byte [rcx], al	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d284	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400d289	    0x488344242001	               add qword [rsp + 0x20], 1	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d28f	      0xe9befbffff	                           jmp 0x400ce52	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d294	    0x448b35000000	           mov r14d, dword [0x0400d29b] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d29b	          0x4585f6	                         test r14d, r14d	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d29e	            0x752b	                           jne 0x400d2cb	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2a0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2a5	        0x488d5001	                      lea rdx, [rax + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2a9	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2ae	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2b3	        0x488d4a01	                      lea rcx, [rdx + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2b7	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2bc	           0xfb612	                   movzx edx, byte [rdx]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2bf	            0x8810	                      mov byte [rax], dl	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2c1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2c6	      0xe987fbffff	                           jmp 0x400ce52	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400d2cb	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d2d0	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d2d5	      0xe800000000	                          call 0x400d2da	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d2da	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d2df	      0xe96efbffff	                           jmp 0x400ce52	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d2e4	          0x4c8b33	                    mov r14, qword [rbx]	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400d2e7	      0xba05000000	                              mov edx, 5	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400d2ec	      0xbe00000000	                              mov esi, 0	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400d2f1	      0xe9d1faffff	                           jmp 0x400cdc7	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400d2f6	          0x4531f6	                          xor r14d, r14d	      4165	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400d2f9	      0xe9c3f9ffff	                           jmp 0x400ccc1	      4165	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400d2fe	    0x41c704240200	                      mov dword [r12], 2	      4126	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400d306	      0x410fb67f01	               movzx edi, byte [r15 + 1]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d30b	      0xbe02000000	                              mov esi, 2	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d310	      0xe800000000	                          call 0x400d315	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d315	      0x4989442408	                mov qword [r12 + 8], rax	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d31a	          0x488b3b	                    mov rdi, qword [rbx]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d31d	      0xe930f7ffff	                           jmp 0x400ca52	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400d322	          0x4585ed	                         test r13d, r13d	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400d325	     0xf856b010000	                           jne 0x400d496	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400d32b	    0x48833d000000	               cmp qword [0x0400d333], 0	      6693	eval.c	FUNCTION_117	IF_1
0x400d333	            0x740a	                            je 0x400d33f	      6693	eval.c	FUNCTION_117	IF_1
0x400d335	            0x89c6	                            mov esi, eax	      6693	eval.c	FUNCTION_117	IF_1
0x400d337	          0x4c89f7	                            mov rdi, r14	      6693	eval.c	FUNCTION_117	IF_1
0x400d33a	      0xe86187ffff	             call sym.check_vars.part.12	      6693	eval.c	FUNCTION_117	IF_1
0x400d33f	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d344	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d349	          0x4c89f7	                            mov rdi, r14	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d34c	      0xb901000000	                              mov ecx, 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d351	          0x4531f6	                          xor r14d, r14d	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d354	          0x4c89ce	                             mov rsi, r9	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d357	        0x4c890c24	                     mov qword [rsp], r9	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d35b	      0xe800000000	                          call 0x400d360	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d360	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d363	      0xe800000000	                          call 0x400d368	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d368	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d36b	          0x4989c2	                            mov r10, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d36e	    0x41bb01000000	                             mov r11d, 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d374	            0x7449	                            je 0x400d3bf	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d376	        0x4c8b0c24	                     mov r9, qword [rsp]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d37a	    0x488b05000000	            mov rax, qword [0x0400d381] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d381	      0x44885c240c	              mov byte [rsp + 0xc], r11b	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d386	          0x4c89d7	                            mov rdi, r10	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d389	          0x4889d9	                            mov rcx, rbx	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d38c	          0x4c89e2	                            mov rdx, r12	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d38f	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d393	            0x6a00	                                  push 0	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d395	        0xff742428	                 push qword [rsp + 0x28]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d399	            0x4155	                                push r13	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d39b	            0x4151	                                 push r9	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d39d	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3a1	          0x4d89c1	                              mov r9, r8	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3a4	      0x4c89542420	             mov qword [rsp + 0x20], r10	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3a9	      0xe800000000	                          call 0x400d3ae	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3ae	        0x4883c420	                           add rsp, 0x20	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3b2	    0x440fb65c240c	           movzx r11d, byte [rsp + 0xc] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3b8	        0x4c8b1424	                    mov r10, qword [rsp]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3bc	          0x4189c6	                           mov r14d, eax	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400d3bf	          0x4c89d7	                            mov rdi, r10	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400d3c2	        0x44881c24	                    mov byte [rsp], r11b	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400d3c6	      0xe800000000	                          call 0x400d3cb	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400d3cb	        0x418b3424	                    mov esi, dword [r12]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3cf	            0x85f6	                           test esi, esi	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3d1	            0x7516	                           jne 0x400d3e9	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3d3	      0x440fb61c24	                  movzx r11d, byte [rsp]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3d8	          0x4584db	                         test r11b, r11b	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3db	            0x740c	                            je 0x400d3e9	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3dd	          0x488b03	                    mov rax, qword [rbx]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3e0	          0x803828	                    cmp byte [rax], 0x28	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3e3	     0xf8429010000	                            je 0x400d512	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d3e9	      0xe800000000	                          call 0x400d3ee	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400d3ee	            0x85c0	                           test eax, eax	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400d3f0	            0x740d	                            je 0x400d3ff	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400d3f2	        0x4183fe01	                             cmp r14d, 1	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400d3f6	     0xf8447010000	                            je 0x400d543	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400d3fc	          0x4531f6	                          xor r14d, r14d	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d3ff	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d404	      0xe9b8f8ffff	                           jmp 0x400ccc1	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d409	        0x4883c701	                              add rdi, 1	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d40d	          0x48893b	                    mov qword [rbx], rdi	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d410	      0xe922f7ffff	                           jmp 0x400cb37	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d415	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4850	eval.c	FUNCTION_74
0x400d41a	          0xc60000	                       mov byte [rax], 0	      4850	eval.c	FUNCTION_74
0x400d41d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4851	eval.c	FUNCTION_74
0x400d422	      0xe974f9ffff	                           jmp 0x400cd9b	      4851	eval.c	FUNCTION_74
0x400d427	          0x4c89f7	                            mov rdi, r14	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d42a	          0x4531c9	                            xor r9d, r9d	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d42d	    0x41b801000000	                              mov r8d, 1	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d433	            0x31c9	                            xor ecx, ecx	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d435	          0x4c89e2	                            mov rdx, r12	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d438	            0x89c6	                            mov esi, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d43a	      0xe800000000	                          call 0x400d43f	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d43f	          0x4189c6	                           mov r14d, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d442	            0xebbb	                           jmp 0x400d3ff	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d444	          0x4889df	                            mov rdi, rbx	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d447	          0x4489ea	                           mov edx, r13d	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d44a	          0x4c89e6	                            mov rsi, r12	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d44d	      0xe800000000	                          call 0x400d452	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d452	          0x488b3b	                    mov rdi, qword [rbx]	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d455	          0x4189c6	                           mov r14d, eax	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d458	      0xe9daf6ffff	                           jmp 0x400cb37	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400d45d	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400d461	            0x85ff	                           test edi, edi	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400d463	            0x7408	                            je 0x400d46d	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400d465	          0x4889c7	                            mov rdi, rax	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400d468	      0xe800000000	                          call 0x400d46d	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400d46d	          0x4c89ff	                            mov rdi, r15	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400d470	      0xe800000000	                          call 0x400d475	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400d475	          0x4885c0	                           test rax, rax	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400d478	     0xf8446f7ffff	                            je 0x400cbc4	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400d47e	          0x803824	                    cmp byte [rax], 0x24	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400d481	     0xf853df7ffff	                           jne 0x400cbc4	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400d487	          0x4889c7	                            mov rdi, rax	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400d48a	      0xe800000000	                          call 0x400d48f	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400d48f	            0x31c0	                            xor eax, eax	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400d491	      0xe92ef7ffff	                           jmp 0x400cbc4	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400d496	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d49b	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4a0	            0x31c9	                            xor ecx, ecx	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4a2	          0x4c89f7	                            mov rdi, r14	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4a5	          0x4c89ce	                             mov rsi, r9	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4a8	        0x4c890c24	                     mov qword [rsp], r9	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4ac	      0xe800000000	                          call 0x400d4b1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4b1	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d4b4	      0xe800000000	                          call 0x400d4b9	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d4b9	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d4bc	          0x4989c2	                            mov r10, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400d4bf	            0x7440	                            je 0x400d501	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400d4c1	          0x4531db	                          xor r11d, r11d	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4c4	        0x4c8b0c24	                     mov r9, qword [rsp]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4c8	      0xe9adfeffff	                           jmp 0x400d37a	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400d4cd	      0xba05000000	                              mov edx, 5	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4d2	      0xbe00000000	                              mov esi, 0	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4d7	            0x31ff	                            xor edi, edi	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4d9	      0xe800000000	                          call 0x400d4de	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4de	          0x4889c7	                            mov rdi, rax	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4e1	          0x4531f6	                          xor r14d, r14d	      4145	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400d4e4	      0xe800000000	                          call 0x400d4e9	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400d4e9	          0x4c89e7	                            mov rdi, r12	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400d4ec	      0xe800000000	                          call 0x400d4f1	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400d4f1	          0x488b3b	                    mov rdi, qword [rbx]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d4f4	      0xe800000000	                          call 0x400d4f9	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d4f9	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d4fc	      0xe9fcf3ffff	                           jmp 0x400c8fd	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d501	            0x31ff	                            xor edi, edi	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400d503	      0xe800000000	                          call 0x400d508	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400d508	      0xe800000000	                          call 0x400d50d	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400d50d	      0xe9eafeffff	                           jmp 0x400d3fc	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400d512	    0x49c744240800	                  mov qword [r12 + 8], 0	      4196	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d51b	    0x41c704240300	                      mov dword [r12], 3	      4197	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d523	      0xe9c1feffff	                           jmp 0x400d3e9	      4197	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400d528	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d52d	        0x488d5001	                      lea rdx, [rax + 1]	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d531	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d536	          0x448830	                    mov byte [rax], r14b	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d539	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d53e	      0xe90ff9ffff	                           jmp 0x400ce52	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400d543	          0x4c89e7	                            mov rdi, r12	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400d546	          0x4531f6	                          xor r14d, r14d	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400d549	      0xe800000000	                          call 0x400d54e	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400d54e	      0xe9acfeffff	                           jmp 0x400d3ff	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400d553	      0xe800000000	                          call 0x400d558	      4289	eval.c	ELSE_15	FUNCTION_70
new_script_vars	DO,0:WHILE,1:FOR,1:ELSE,0:IF,2:SWITCH,0:CALL,6:functions,0	65
0x4004970	            0x89fe	                            mov esi, edi	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004972	    0x2b3500000000	             sub esi, dword [0x04004978]	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004978	            0x4154	                                push r12	      7337	eval.c	FUNCTION_135
0x400497a	              0x55	                                push rbp	      7337	eval.c	FUNCTION_135
0x400497b	              0x53	                                push rbx	      7337	eval.c	FUNCTION_135
0x400497c	            0x89fd	                            mov ebp, edi	      7337	eval.c	FUNCTION_135
0x400497e	      0xbf00000000	                              mov edi, 0	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004983	      0xe800000000	                          call 0x4004988	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4004988	          0x83f801	                              cmp eax, 1	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x400498b	            0x740b	                            je 0x4004998	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x400498d	              0x5b	                                 pop rbx	      7364	eval.c	FUNCTION_135
0x400498e	              0x5d	                                 pop rbp	      7364	eval.c	FUNCTION_135
0x400498f	            0x415c	                                 pop r12	      7364	eval.c	FUNCTION_135
0x4004991	              0xc3	                                     ret	      7364	eval.c	FUNCTION_135
0x4004992	    0x660f1f440000	                    nop word [rax + rax]	      7364	eval.c	FUNCTION_135
0x4004998	    0x8b0500000000	            mov eax, dword [0x0400499e] 	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x400499e	            0x85c0	                           test eax, eax	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049a0	     0xf8eb4000000	                           jle 0x4004a5a	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049a6	    0x488b0d000000	            mov rcx, qword [0x040049ad] 	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049ad	          0x8d50ff	                      lea edx, [rax - 1]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049b0	      0x488d7cd108	              lea rdi, [rcx + rdx*8 + 8]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049b5	            0xeb1e	                           jmp 0x40049d5	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049b7	    0x660f1f840000	                    nop word [rax + rax]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049c0	        0x488d7218	                   lea rsi, [rdx + 0x18]	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049c4	        0x4883c108	                              add rcx, 8	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049c8	          0x4839cf	                            cmp rdi, rcx	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049cb	        0x48897208	                mov qword [rdx + 8], rsi	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049cf	     0xf8485000000	                            je 0x4004a5a	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40049d5	          0x488b11	                    mov rdx, qword [rcx]	      7349	eval.c	FUNCTION_135	IF_1	FOR_1	CALL_2
0x40049d8	      0x48837a280f	            cmp qword [rdx + 0x28], 0xf 	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049dd	            0x75e1	                           jne 0x40049c0	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049df	        0x488d7250	                   lea rsi, [rdx + 0x50]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049e3	        0x48897248	             mov qword [rdx + 0x48], rsi	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049e7	          0x488b11	                    mov rdx, qword [rcx]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049ea	            0xebd4	                           jmp 0x40049c0	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049ec	         0xf1f4000	                         nop dword [rax]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40049f0	    0x488b15000000	            mov rdx, qword [0x040049f7] 	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40049f7	          0x83c001	                              add eax, 1	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x40049fa	      0xbf68010000	                          mov edi, 0x168	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_5
0x40049ff	            0x4898	                                    cdqe	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x4004a01	      0x4c8d64c2f8	              lea r12, [rdx + rax*8 - 8]	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x4004a06	      0xe800000000	                          call 0x4004a0b	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_5
0x4004a0b	        0x488d7828	                   lea rdi, [rax + 0x28]	      7373	eval.c	FUNCTION_136	CALL_1
0x4004a0f	        0x49890424	                    mov qword [r12], rax	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_4
0x4004a13	          0x4889c3	                            mov rbx, rax	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_5
0x4004a16	        0x4c8d6018	                   lea r12, [rax + 0x18]	      7373	eval.c	FUNCTION_136	CALL_1
0x4004a1a	      0xe800000000	                          call 0x4004a1f	      7373	eval.c	FUNCTION_136	CALL_1
0x4004a1f	    0x8b0500000000	            mov eax, dword [0x04004a25] 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4004a25	    0xc70306000000	                      mov dword [rbx], 6	      7379	eval.c	FUNCTION_136
0x4004a2b	        0xc6431800	                mov byte [rbx + 0x18], 0	      7374	eval.c	FUNCTION_136
0x4004a2f	        0xc6431901	                mov byte [rbx + 0x19], 1	      7375	eval.c	FUNCTION_136
0x4004a33	    0xc7431c9f8601	        mov dword [rbx + 0x1c], 0x1869f 	      7376	eval.c	FUNCTION_136
0x4004a3a	    0xc74320000000	               mov dword [rbx + 0x20], 0	      7377	eval.c	FUNCTION_136
0x4004a41	          0x83c001	                              add eax, 1	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4004a44	        0x4c896308	                mov qword [rbx + 8], r12	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_6
0x4004a48	        0xc6430402	                   mov byte [rbx + 4], 2	      7380	eval.c	FUNCTION_136
0x4004a4c	        0xc6431005	                mov byte [rbx + 0x10], 5	      7381	eval.c	FUNCTION_136
0x4004a50	        0xc6431100	                mov byte [rbx + 0x11], 0	      7382	eval.c	FUNCTION_136
0x4004a54	    0x890500000000	            mov dword [0x04004a5a], eax 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4004a5a	            0x39c5	                            cmp ebp, eax	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4004a5c	            0x7f92	                            jg 0x40049f0	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4004a5e	              0x5b	                                 pop rbx	      7364	eval.c	FUNCTION_135
0x4004a5f	              0x5d	                                 pop rbp	      7364	eval.c	FUNCTION_135
0x4004a60	            0x415c	                                 pop r12	      7364	eval.c	FUNCTION_135
0x4004a62	              0xc3	                                     ret	      7364	eval.c	FUNCTION_135
get_tv_float	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,1:CALL,15:functions,0	52
0x40032d0	        0x4883ec08	                              sub rsp, 8	      7023	eval.c	ELSE_1	FUNCTION_126
0x40032d4	          0x833f0a	                    cmp dword [rdi], 0xa	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40032d7	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x40032db	            0x7736	                            ja 0x4003313	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40032dd	            0x8b07	                    mov eax, dword [rdi]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40032df	    0xff24c5000000	                       jmp qword [rax*8]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40032e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40032f0	      0xba05000000	                              mov edx, 5	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x40032f5	      0xbe00000000	                              mov esi, 0	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x40032fa	    0x660f1f440000	                    nop word [rax + rax]	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4003300	            0x31ff	                            xor edi, edi	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003302	      0xe800000000	                          call 0x4003307	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003307	          0x4889c7	                            mov rdi, rax	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x400330a	      0xe800000000	                          call 0x400330f	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x400330f	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4003313	        0x4883c408	                              add rsp, 8	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003317	              0xc3	                                     ret	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003318	     0xf1f84000000	                   nop dword [rax + rax]	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003320	      0xba05000000	                              mov edx, 5	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003325	      0xbe00000000	                              mov esi, 0	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x400332a	            0xebd4	                           jmp 0x4003300	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x400332c	         0xf1f4000	                         nop dword [rax]	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003330	      0xbf00000000	                              mov edi, 0	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x4003335	      0xe800000000	                          call 0x400333a	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x400333a	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x400333e	            0xebd3	                           jmp 0x4003313	      7058	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003340	        0x660fefc0	                         pxor xmm0, xmm0	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003344	    0xf2480f2a4708	          cvtsi2sd xmm0, qword [rdi + 8]	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x400334a	            0xebc7	                           jmp 0x4003313	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x400334c	         0xf1f4000	                         nop dword [rax]	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003350	      0xba05000000	                              mov edx, 5	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003355	      0xbe00000000	                              mov esi, 0	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x400335a	            0xeba4	                           jmp 0x4003300	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x400335c	         0xf1f4000	                         nop dword [rax]	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003360	      0xba05000000	                              mov edx, 5	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003365	      0xbe00000000	                              mov esi, 0	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x400336a	            0xeb94	                           jmp 0x4003300	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x400336c	         0xf1f4000	                         nop dword [rax]	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003370	      0xba05000000	                              mov edx, 5	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003375	      0xbe00000000	                              mov esi, 0	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x400337a	            0xeb84	                           jmp 0x4003300	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x400337c	         0xf1f4000	                         nop dword [rax]	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003380	      0xba05000000	                              mov edx, 5	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003385	      0xbe00000000	                              mov esi, 0	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x400338a	      0xe971ffffff	                           jmp 0x4003300	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x400338f	              0x90	                                     nop	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003390	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003395	      0xe979ffffff	                           jmp 0x4003313	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x400339a	    0x660f1f440000	                    nop word [rax + rax]	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x40033a0	      0xba05000000	                              mov edx, 5	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x40033a5	      0xbe00000000	                              mov esi, 0	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x40033aa	      0xe951ffffff	                           jmp 0x4003300	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
get_env_len	DO,0:WHILE,0:FOR,1:ELSE,0:IF,1:SWITCH,0:CALL,1:functions,0	22
0x40002f0	              0x55	                                push rbp	      6082	eval.c	FUNCTION_95
0x40002f1	              0x53	                                push rbx	      6082	eval.c	FUNCTION_95
0x40002f2	          0x4889fd	                            mov rbp, rdi	      6082	eval.c	FUNCTION_95
0x40002f5	        0x4883ec08	                              sub rsp, 8	      6082	eval.c	FUNCTION_95
0x40002f9	          0x488b1f	                    mov rbx, qword [rdi]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40002fc	            0xeb06	                           jmp 0x4000304	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x40002fe	            0x6690	                                     nop	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x4000300	        0x4883c301	                              add rbx, 1	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x4000304	           0xfb63b	                   movzx edi, byte [rbx]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x4000307	      0xe800000000	                          call 0x400030c	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400030c	            0x85c0	                           test eax, eax	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400030e	            0x75f0	                           jne 0x4000300	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x4000310	        0x488b5500	                    mov rdx, qword [rbp]	      6088	eval.c	FUNCTION_95	IF_1
0x4000314	          0x4839d3	                            cmp rbx, rdx	      6088	eval.c	FUNCTION_95	IF_1
0x4000317	            0x7408	                            je 0x4000321	      6088	eval.c	FUNCTION_95	IF_1
0x4000319	            0x89d8	                            mov eax, ebx	      6093	eval.c	FUNCTION_95
0x400031b	        0x48895d00	                    mov qword [rbp], rbx	      6092	eval.c	FUNCTION_95
0x400031f	            0x29d0	                            sub eax, edx	      6093	eval.c	FUNCTION_95
0x4000321	        0x4883c408	                              add rsp, 8	      6094	eval.c	FUNCTION_95
0x4000325	              0x5b	                                 pop rbx	      6094	eval.c	FUNCTION_95
0x4000326	              0x5d	                                 pop rbp	      6094	eval.c	FUNCTION_95
0x4000327	              0xc3	                                     ret	      6094	eval.c	FUNCTION_95
get_user_var_name	DO,0:WHILE,4:FOR,0:ELSE,4:IF,11:SWITCH,0:CALL,11:functions,0	176
0x4000b00	            0x85f6	                           test esi, esi	      3144	eval.c	FUNCTION_61	IF_1
0x4000b02	     0xf85b8000000	                           jne 0x4000bc0	      3144	eval.c	FUNCTION_61	IF_1
0x4000b08	    0x48833d000000	               cmp qword [0x04000b10], 0	      3151	eval.c	FUNCTION_61	IF_2
0x4000b10	    0xc70500000000	               mov dword [0x04000b1a], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000b1a	    0x48c705000000	               mov qword [0x04000b25], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000b25	    0x48c705000000	               mov qword [0x04000b30], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000b30	    0x48c705000000	               mov qword [0x04000b3b], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000b3b	    0x48c705000000	               mov qword [0x04000b46], 0	      3147	eval.c	FUNCTION_61	IF_1
0x4000b46	     0xf84fc000000	                            je 0x4000c48	      3151	eval.c	FUNCTION_61	IF_2
0x4000b4c	    0x48c705000000	               mov qword [0x04000b57], 1	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000b57	    0x488b15000000	            mov rdx, qword [0x04000b5e] 	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000b5e	    0x488915000000	            mov qword [0x04000b65], rdx 	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000b65	        0x488b4208	                mov rax, qword [rdx + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b69	          0x4885c0	                           test rax, rax	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b6c	            0x7408	                            je 0x4000b76	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b6e	    0x483d00000000	                              cmp rax, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b74	            0x7529	                           jne 0x4000b9f	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b76	        0x4883c210	                           add rdx, 0x10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b7a	    0x660f1f440000	                    nop word [rax + rax]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b80	        0x488b4208	                mov rax, qword [rdx + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b84	          0x4889d1	                            mov rcx, rdx	      3158	eval.c	FUNCTION_61	IF_2	WHILE_1
0x4000b87	        0x4883c210	                           add rdx, 0x10	      3158	eval.c	FUNCTION_61	IF_2	WHILE_1
0x4000b8b	    0x483d00000000	                              cmp rax, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b91	            0x74ed	                            je 0x4000b80	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b93	          0x4885c0	                           test rax, rax	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b96	            0x74e8	                            je 0x4000b80	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b98	    0x48890d000000	            mov qword [0x04000b9f], rcx 	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000b9f	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000ba3	      0xbe00000000	                              mov esi, 0	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000ba8	      0xb902000000	                              mov ecx, 2	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000bad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000baf	     0xf848b010000	                            je 0x4000d40	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000bb5	            0xf3c3	                                     ret	      3210	eval.c	FUNCTION_61
0x4000bb7	    0x660f1f840000	                    nop word [rax + rax]	      3210	eval.c	FUNCTION_61
0x4000bc0	    0x488b05000000	            mov rax, qword [0x04000bc7] 	      3151	eval.c	FUNCTION_61	IF_2
0x4000bc7	    0x483905000000	            cmp qword [0x04000bce], rax 	      3151	eval.c	FUNCTION_61	IF_2
0x4000bce	            0x7630	                           jbe 0x4000c00	      3151	eval.c	FUNCTION_61	IF_2
0x4000bd0	        0x488d5001	                      lea rdx, [rax + 1]	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000bd4	          0x4885c0	                           test rax, rax	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000bd7	    0x488915000000	            mov qword [0x04000bde], rdx 	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000bde	     0xf8473ffffff	                            je 0x4000b57	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000be4	    0x488b05000000	            mov rax, qword [0x04000beb] 	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000beb	        0x488d5010	                   lea rdx, [rax + 0x10]	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000bef	    0x488915000000	            mov qword [0x04000bf6], rdx 	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000bf6	      0xe96affffff	                           jmp 0x4000b65	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000bfb	       0xf1f440000	                   nop dword [rax + rax]	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000c00	    0x488b05000000	            mov rax, qword [0x04000c07] 	      3165	eval.c	FUNCTION_61
0x4000c07	    0x488b15000000	            mov rdx, qword [0x04000c0e] 	      3165	eval.c	FUNCTION_61
0x4000c0e	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000c15	        0x48395018	            cmp qword [rax + 0x18], rdx 	      3166	eval.c	FUNCTION_61	IF_5
0x4000c19	     0xf86a1000000	                           jbe 0x4000cc0	      3166	eval.c	FUNCTION_61	IF_5
0x4000c1f	        0x488d4a01	                      lea rcx, [rdx + 1]	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c23	          0x4885d2	                           test rdx, rdx	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c26	    0x48890d000000	            mov qword [0x04000c2d], rcx 	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c2d	            0x7439	                            je 0x4000c68	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c2f	    0x488b05000000	            mov rax, qword [0x04000c36] 	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000c36	        0x4883c010	                           add rax, 0x10	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000c3a	    0x488905000000	            mov qword [0x04000c41], rax 	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000c41	            0xeb30	                           jmp 0x4000c73	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000c43	       0xf1f440000	                   nop dword [rax + rax]	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000c48	    0x488b05000000	            mov rax, qword [0x04000c4f] 	      3165	eval.c	FUNCTION_61
0x4000c4f	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000c56	      0x4883781800	               cmp qword [rax + 0x18], 0	      3166	eval.c	FUNCTION_61	IF_5
0x4000c5b	            0x7463	                            je 0x4000cc0	      3166	eval.c	FUNCTION_61	IF_5
0x4000c5d	    0x48c705000000	               mov qword [0x04000c68], 1	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c68	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c6c	    0x488905000000	            mov qword [0x04000c73], rax 	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000c73	        0x488b7008	                mov rsi, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c77	    0x4881fe000000	                              cmp rsi, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c7e	            0x7405	                            je 0x4000c85	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c80	          0x4885f6	                           test rsi, rsi	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c83	            0x752b	                           jne 0x4000cb0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c85	        0x4883c010	                           add rax, 0x10	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c89	     0xf1f80000000	                         nop dword [rax]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c90	        0x488b7008	                mov rsi, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000c94	          0x4889c2	                            mov rdx, rax	      3173	eval.c	FUNCTION_61	IF_5	WHILE_2
0x4000c97	        0x4883c010	                           add rax, 0x10	      3173	eval.c	FUNCTION_61	IF_5	WHILE_2
0x4000c9b	    0x4881fe000000	                              cmp rsi, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ca2	            0x74ec	                            je 0x4000c90	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ca4	          0x4885f6	                           test rsi, rsi	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ca7	            0x74e7	                            je 0x4000c90	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ca9	    0x488915000000	            mov qword [0x04000cb0], rdx 	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000cb0	      0xbf62000000	                           mov edi, 0x62	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000cb5	      0xe9a6f4ffff	              jmp sym.cat_prefix_varname	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000cba	    0x660f1f440000	                    nop word [rax + rax]	      3174	eval.c	FUNCTION_61	IF_5	CALL_5
0x4000cc0	    0x488b05000000	            mov rax, qword [0x04000cc7] 	      3178	eval.c	FUNCTION_61
0x4000cc7	    0x488b90700500	           mov rdx, qword [rax + 0x570] 	      3178	eval.c	FUNCTION_61
0x4000cce	    0x488b05000000	            mov rax, qword [0x04000cd5] 	      3179	eval.c	FUNCTION_61	IF_7
0x4000cd5	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3179	eval.c	FUNCTION_61	IF_7
0x4000cd9	            0x7675	                           jbe 0x4000d50	      3179	eval.c	FUNCTION_61	IF_7
0x4000cdb	        0x488d4801	                      lea rcx, [rax + 1]	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000cdf	          0x4885c0	                           test rax, rax	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000ce2	    0x48890d000000	            mov qword [0x04000ce9], rcx 	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000ce9	     0xf85f1000000	                           jne 0x4000de0	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4000cef	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x4000cf3	    0x488905000000	            mov qword [0x04000cfa], rax 	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x4000cfa	        0x488b7008	                mov rsi, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000cfe	    0x4881fe000000	                              cmp rsi, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d05	            0x7405	                            je 0x4000d0c	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d07	          0x4885f6	                           test rsi, rsi	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d0a	            0x7524	                           jne 0x4000d30	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d0c	        0x4883c010	                           add rax, 0x10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d10	        0x488b7008	                mov rsi, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d14	          0x4889c2	                            mov rdx, rax	      3186	eval.c	FUNCTION_61	IF_7	WHILE_3
0x4000d17	        0x4883c010	                           add rax, 0x10	      3186	eval.c	FUNCTION_61	IF_7	WHILE_3
0x4000d1b	    0x4881fe000000	                              cmp rsi, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d22	            0x74ec	                            je 0x4000d10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d24	          0x4885f6	                           test rsi, rsi	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d27	            0x74e7	                            je 0x4000d10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d29	    0x488915000000	            mov qword [0x04000d30], rdx 	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x4000d30	      0xbf77000000	                           mov edi, 0x77	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000d35	      0xe926f4ffff	              jmp sym.cat_prefix_varname	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000d3a	    0x660f1f440000	                    nop word [rax + rax]	      3187	eval.c	FUNCTION_61	IF_7	CALL_7
0x4000d40	          0x4889c6	                            mov rsi, rax	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000d43	      0xbf67000000	                           mov edi, 0x67	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000d48	      0xe913f4ffff	              jmp sym.cat_prefix_varname	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000d4d	           0xf1f00	                         nop dword [rax]	      3160	eval.c	FUNCTION_61	IF_2	CALL_3
0x4000d50	    0x488b05000000	            mov rax, qword [0x04000d57] 	      3191	eval.c	FUNCTION_61
0x4000d57	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      3191	eval.c	FUNCTION_61
0x4000d5e	    0x488b05000000	            mov rax, qword [0x04000d65] 	      3192	eval.c	FUNCTION_61	IF_9
0x4000d65	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3192	eval.c	FUNCTION_61	IF_9
0x4000d69	     0xf8691000000	                           jbe 0x4000e00	      3192	eval.c	FUNCTION_61	IF_9
0x4000d6f	        0x488d4801	                      lea rcx, [rax + 1]	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000d73	          0x4885c0	                           test rax, rax	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000d76	    0x48890d000000	            mov qword [0x04000d7d], rcx 	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000d7d	     0xf84b2000000	                            je 0x4000e35	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4000d83	    0x488b05000000	            mov rax, qword [0x04000d8a] 	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4000d8a	        0x4883c010	                           add rax, 0x10	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4000d8e	    0x488905000000	            mov qword [0x04000d95], rax 	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4000d95	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000d99	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000da0	            0x7405	                            je 0x4000da7	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000da2	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000da5	            0x7529	                           jne 0x4000dd0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000da7	        0x4883c010	                           add rax, 0x10	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dab	       0xf1f440000	                   nop dword [rax + rax]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000db0	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000db4	          0x4889c2	                            mov rdx, rax	      3199	eval.c	FUNCTION_61	IF_9	WHILE_4
0x4000db7	        0x4883c010	                           add rax, 0x10	      3199	eval.c	FUNCTION_61	IF_9	WHILE_4
0x4000dbb	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dbe	            0x74f0	                            je 0x4000db0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dc0	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dc7	            0x74e7	                            je 0x4000db0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dc9	    0x488915000000	            mov qword [0x04000dd0], rdx 	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4000dd0	      0xbf74000000	                           mov edi, 0x74	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000dd5	      0xe986f3ffff	              jmp sym.cat_prefix_varname	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000dda	    0x660f1f440000	                    nop word [rax + rax]	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x4000de0	    0x488b05000000	            mov rax, qword [0x04000de7] 	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000de7	        0x4883c010	                           add rax, 0x10	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000deb	    0x488905000000	            mov qword [0x04000df2], rax 	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000df2	      0xe903ffffff	                           jmp 0x4000cfa	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000df7	    0x660f1f840000	                    nop word [rax + rax]	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x4000e00	    0x486305000000	         movsxd rax, dword [0x04000e07] 	      3204	eval.c	FUNCTION_61	IF_11
0x4000e07	          0x83f856	                           cmp eax, 0x56	      3204	eval.c	FUNCTION_61	IF_11
0x4000e0a	            0x7f39	                            jg 0x4000e45	      3204	eval.c	FUNCTION_61	IF_11
0x4000e0c	          0x8d5001	                      lea edx, [rax + 1]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e0f	      0xbf76000000	                           mov edi, 0x76	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e14	    0x891500000000	            mov dword [0x04000e1a], edx 	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e1a	    0x488d14c50000	                        lea rdx, [rax*8]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e22	        0x48c1e006	                              shl rax, 6	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e26	          0x4829d0	                            sub rax, rdx	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e29	    0x488bb0000000	                    mov rsi, qword [rax]	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e30	      0xe92bf3ffff	              jmp sym.cat_prefix_varname	      3205	eval.c	FUNCTION_61	CALL_10
0x4000e35	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000e39	    0x488905000000	            mov qword [0x04000e40], rax 	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000e40	      0xe950ffffff	                           jmp 0x4000d95	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4000e45	        0x4883ec08	                              sub rsp, 8	      3135	eval.c	FUNCTION_61
0x4000e49	    0x488b3d000000	            mov rdi, qword [0x04000e50] 	      3207	eval.c	FUNCTION_61	CALL_11
0x4000e50	          0x4885ff	                           test rdi, rdi	      3207	eval.c	FUNCTION_61	CALL_11
0x4000e53	            0x7410	                            je 0x4000e65	      3207	eval.c	FUNCTION_61	CALL_11
0x4000e55	      0xe800000000	                          call 0x4000e5a	      3207	eval.c	FUNCTION_61	CALL_11
0x4000e5a	    0x48c705000000	               mov qword [0x04000e65], 0	      3207	eval.c	FUNCTION_61	CALL_11
0x4000e65	    0xc70500000000	               mov dword [0x04000e6f], 0	      3208	eval.c	FUNCTION_61
0x4000e6f	            0x31c0	                            xor eax, eax	      3209	eval.c	FUNCTION_61
0x4000e71	        0x4883c408	                              add rsp, 8	      3210	eval.c	FUNCTION_61
0x4000e75	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
typval_compare	DO,0:WHILE,0:FOR,0:ELSE,19:IF,26:SWITCH,3:CALL,27:functions,0	366
0x4007940	            0x4157	                                push r15	      9199	eval.c	FUNCTION_181
0x4007942	            0x4156	                                push r14	      9199	eval.c	FUNCTION_181
0x4007944	            0x4155	                                push r13	      9199	eval.c	FUNCTION_181
0x4007946	            0x4154	                                push r12	      9199	eval.c	FUNCTION_181
0x4007948	          0x4189d4	                           mov r12d, edx	      9199	eval.c	FUNCTION_181
0x400794b	              0x55	                                push rbp	      9199	eval.c	FUNCTION_181
0x400794c	              0x53	                                push rbx	      9199	eval.c	FUNCTION_181
0x400794d	          0x4889f5	                            mov rbp, rsi	      9199	eval.c	FUNCTION_181
0x4007950	          0x4889fb	                            mov rbx, rdi	      9199	eval.c	FUNCTION_181
0x4007953	    0x4881ecc80000	                           sub rsp, 0xc8	      9199	eval.c	FUNCTION_181
0x400795a	    0x64488b042528	                mov rax, qword fs:[0x28]	      9199	eval.c	FUNCTION_181
0x4007963	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      9199	eval.c	FUNCTION_181
0x400796b	            0x31c0	                            xor eax, eax	      9199	eval.c	FUNCTION_181
0x400796d	            0x85c9	                           test ecx, ecx	      9205	eval.c	FUNCTION_181	IF_1
0x400796f	            0x745f	                            je 0x40079d0	      9205	eval.c	FUNCTION_181	IF_1
0x4007971	            0x8b17	                    mov edx, dword [rdi]	      9205	eval.c	FUNCTION_181	IF_1
0x4007973	            0x3b16	                    cmp edx, dword [rsi]	      9205	eval.c	FUNCTION_181	IF_1
0x4007975	     0xf8475010000	                            je 0x4007af0	      9205	eval.c	FUNCTION_181	IF_1
0x400797b	          0x4531ed	                          xor r13d, r13d	      9209	eval.c	FUNCTION_181	IF_1
0x400797e	        0x4183fc02	                             cmp r12d, 2	      9209	eval.c	FUNCTION_181	IF_1
0x4007982	        0x410f94c5	                               sete r13b	      9209	eval.c	FUNCTION_181	IF_1
0x4007986	          0x4889df	                            mov rdi, rbx	      9386	eval.c	FUNCTION_181	CALL_27
0x4007989	      0xe800000000	                          call 0x400798e	      9386	eval.c	FUNCTION_181	CALL_27
0x400798e	    0xc70301000000	                      mov dword [rbx], 1	      9387	eval.c	FUNCTION_181
0x4007994	        0x4c896b08	                mov qword [rbx + 8], r13	      9388	eval.c	FUNCTION_181
0x4007998	      0xb801000000	                              mov eax, 1	      9390	eval.c	FUNCTION_181
0x400799d	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      9391	eval.c	FUNCTION_181
0x40079a5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9391	eval.c	FUNCTION_181
0x40079ae	     0xf8591050000	                           jne 0x4007f45	      9391	eval.c	FUNCTION_181
0x40079b4	    0x4881c4c80000	                           add rsp, 0xc8	      9391	eval.c	FUNCTION_181
0x40079bb	              0x5b	                                 pop rbx	      9391	eval.c	FUNCTION_181
0x40079bc	              0x5d	                                 pop rbp	      9391	eval.c	FUNCTION_181
0x40079bd	            0x415c	                                 pop r12	      9391	eval.c	FUNCTION_181
0x40079bf	            0x415d	                                 pop r13	      9391	eval.c	FUNCTION_181
0x40079c1	            0x415e	                                 pop r14	      9391	eval.c	FUNCTION_181
0x40079c3	            0x415f	                                 pop r15	      9391	eval.c	FUNCTION_181
0x40079c5	              0xc3	                                     ret	      9391	eval.c	FUNCTION_181
0x40079c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9391	eval.c	FUNCTION_181
0x40079d0	            0x8b37	                    mov esi, dword [rdi]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079d2	          0x83fe05	                              cmp esi, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079d5	     0xf84dd000000	                            je 0x4007ab8	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079db	          0x8b5500	                    mov edx, dword [rbp]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079de	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079e1	     0xf84db000000	                            je 0x4007ac2	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x40079e7	          0x83fa06	                              cmp edx, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x40079ea	     0xf8410010000	                            je 0x4007b00	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x40079f0	          0x83fe06	                              cmp esi, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x40079f3	     0xf8407010000	                            je 0x4007b00	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x40079f9	          0x8d46fd	                      lea eax, [rsi - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x40079fc	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x40079ff	     0xf862b010000	                           jbe 0x4007b30	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007a05	          0x8d42fd	                      lea eax, [rdx - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007a08	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007a0b	     0xf861f010000	                           jbe 0x4007b30	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4007a11	          0x83fe07	                              cmp esi, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007a14	     0xf840e020000	                            je 0x4007c28	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007a1a	          0x83fa07	                              cmp edx, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007a1d	     0xf8405020000	                            je 0x4007c28	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007a23	          0x83fe01	                              cmp esi, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007a26	     0xf84c4030000	                            je 0x4007df0	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007a2c	          0x83fa01	                              cmp edx, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007a2f	      0x458d6c24f9	                     lea r13d, [r12 - 7]	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007a34	     0xf84b6030000	                            je 0x4007df0	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007a3a	      0x488d742420	                   lea rsi, [rsp + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a3f	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a42	      0x4489442408	                mov dword [rsp + 8], r8d	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a47	    0x41bf00000000	                             mov r15d, 0	      7087	eval.c	FUNCTION_128
0x4007a4d	      0xe800000000	                          call 0x4007a52	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a52	      0x488d742470	                   lea rsi, [rsp + 0x70]	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a57	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4007a5a	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a5d	        0x490f44c7	                          cmove rax, r15	      7087	eval.c	FUNCTION_128
0x4007a61	          0x4989c6	                            mov r14, rax	      7087	eval.c	FUNCTION_128
0x4007a64	      0xe800000000	                          call 0x4007a69	      7085	eval.c	FUNCTION_128	CALL_1
0x4007a69	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4007a6c	      0x448b442408	                mov r8d, dword [rsp + 8]	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4007a71	        0x4c0f45f8	                         cmovne r15, rax	      7087	eval.c	FUNCTION_128
0x4007a75	            0x31c0	                            xor eax, eax	      9365	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4007a77	        0x4183fd01	                             cmp r13d, 1	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4007a7b	          0x4c89fd	                            mov rbp, r15	      7087	eval.c	FUNCTION_128
0x4007a7e	            0x761e	                           jbe 0x4007a9e	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4007a80	          0x4585c0	                           test r8d, r8d	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a83	     0xf856a040000	                           jne 0x4007ef3	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a89	          0x4c89fe	                            mov rsi, r15	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a8c	          0x4c89f7	                            mov rdi, r14	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a8f	      0x4489442408	                mov dword [rsp + 8], r8d	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a94	      0xe800000000	                          call 0x4007a99	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a99	      0x448b442408	                mov r8d, dword [rsp + 8]	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007a9e	        0x4183fc08	                             cmp r12d, 8	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007aa2	     0xf87a2020000	                            ja 0x4007d4a	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007aa8	          0x4489e2	                           mov edx, r12d	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007aab	    0xff24d5000000	                       jmp qword [rdx*8]	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007ab2	    0x660f1f440000	                    nop word [rax + rax]	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007ab8	        0x837d0005	                      cmp dword [rbp], 5	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007abc	     0xf8496020000	                            je 0x4007d58	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007ac2	            0x31ff	                            xor edi, edi	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007ac4	      0xba05000000	                              mov edx, 5	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007ac9	      0xbe00000000	                              mov esi, 0	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007ace	      0xe800000000	                          call 0x4007ad3	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007ad3	          0x4889c7	                            mov rdi, rax	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007ad6	      0xe800000000	                          call 0x4007adb	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4007adb	          0x4889df	                            mov rdi, rbx	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4007ade	      0xe800000000	                          call 0x4007ae3	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4007ae3	            0x31c0	                            xor eax, eax	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007ae5	      0xe9b3feffff	                           jmp 0x400799d	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007aea	    0x660f1f440000	                    nop word [rax + rax]	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007af0	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4007af3	     0xf84c7000000	                            je 0x4007bc0	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4007af9	            0x89d6	                            mov esi, edx	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4007afb	      0xe9e7feffff	                           jmp 0x40079e7	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4007b00	            0x85c9	                           test ecx, ecx	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b02	     0xf8488000000	                            je 0x4007b90	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b08	          0x4531ed	                          xor r13d, r13d	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b0b	            0x31c0	                            xor eax, eax	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b0d	            0x39f2	                            cmp edx, esi	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b0f	     0xf84ab000000	                            je 0x4007bc0	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007b15	        0x4183fc02	                             cmp r12d, 2	      9246	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b19	     0xf8567feffff	                           jne 0x4007986	      9246	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b1f	          0x83f001	                              xor eax, 1	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b22	          0x4c63e8	                         movsxd r13, eax	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b25	      0xe95cfeffff	                           jmp 0x4007986	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b2a	    0x660f1f440000	                    nop word [rax + rax]	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4007b30	      0x418d4424ff	                      lea eax, [r12 - 1]	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4007b35	          0x83f801	                              cmp eax, 1	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4007b38	     0xf87a2000000	                            ja 0x4007be0	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4007b3e	          0x83fe04	                              cmp esi, 4	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007b41	     0xf8481020000	                            je 0x4007dc8	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007b47	          0x83fa04	                              cmp edx, 4	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007b4a	     0xf8490020000	                            je 0x4007de0	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007b50	            0x85c9	                           test ecx, ecx	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4007b52	     0xf84b8000000	                            je 0x4007c10	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4007b58	          0x83fe03	                              cmp esi, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007b5b	     0xf849f000000	                            je 0x4007c00	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007b61	          0x83fa04	                              cmp edx, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007b64	            0x7509	                           jne 0x4007b6f	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007b66	          0x83fe04	                              cmp esi, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007b69	     0xf849e030000	                            je 0x4007f0d	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007b6f	          0x4531ed	                          xor r13d, r13d	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007b72	        0x4183fc02	                             cmp r12d, 2	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x4007b76	     0xf850afeffff	                           jne 0x4007986	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x4007b7c	          0x4d85ed	                           test r13, r13	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007b7f	        0x410f94c5	                               sete r13b	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007b83	        0x450fb6ed	                        movzx r13d, r13b	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007b87	      0xe9fafdffff	                           jmp 0x4007986	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007b8c	         0xf1f4000	                         nop dword [rax]	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007b90	            0x39f2	                            cmp edx, esi	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4007b92	     0xf8400020000	                            je 0x4007d98	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4007b98	            0x31ff	                            xor edi, edi	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007b9a	      0xba05000000	                              mov edx, 5	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007b9f	      0xbe00000000	                              mov esi, 0	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007ba4	      0xe800000000	                          call 0x4007ba9	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007ba9	          0x4889c7	                            mov rdi, rax	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007bac	      0xe800000000	                          call 0x4007bb1	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007bb1	      0xe925ffffff	                           jmp 0x4007adb	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4007bc0	        0x488b4308	                mov rax, qword [rbx + 8]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bc4	          0x4531ed	                          xor r13d, r13d	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bc7	        0x483b4508	                cmp rax, qword [rbp + 8]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bcb	           0xf94c0	                                 sete al	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bce	        0x410f94c5	                               sete r13b	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bd2	           0xfb6c0	                           movzx eax, al	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bd5	      0xe93bffffff	                           jmp 0x4007b15	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007bda	    0x660f1f440000	                    nop word [rax + rax]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4007be0	      0xba05000000	                              mov edx, 5	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4007be5	      0xbe00000000	                              mov esi, 0	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4007bea	            0x31ff	                            xor edi, edi	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007bec	      0xe800000000	                          call 0x4007bf1	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007bf1	          0x4889c7	                            mov rdi, rax	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007bf4	      0xe800000000	                          call 0x4007bf9	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007bf9	      0xe9ddfeffff	                           jmp 0x4007adb	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007bfe	            0x6690	                                     nop	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007c00	          0x4531ed	                          xor r13d, r13d	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007c03	          0x83fa03	                              cmp edx, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007c06	     0xf8566ffffff	                           jne 0x4007b72	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007c0c	         0xf1f4000	                         nop dword [rax]	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4007c10	            0x31c9	                            xor ecx, ecx	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c12	          0x4489c2	                            mov edx, r8d	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c15	          0x4889ee	                            mov rsi, rbp	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c18	          0x4889df	                            mov rdi, rbx	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c1b	      0xe800000000	                          call 0x4007c20	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c20	          0x4c63e8	                         movsxd r13, eax	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c23	      0xe94affffff	                           jmp 0x4007b72	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4007c28	      0x458d6c24f9	                     lea r13d, [r12 - 7]	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007c2d	        0x4183fd01	                             cmp r13d, 1	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007c31	     0xf8603feffff	                           jbe 0x4007a3a	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4007c37	          0x83fe07	                              cmp esi, 7	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007c3a	     0xf858d020000	                           jne 0x4007ecd	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007c40	      0xf20f104308	            movsd xmm0, qword [rbx + 8] 	      9313	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4007c45	          0x83fa07	                              cmp edx, 7	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4007c48	     0xf8550020000	                           jne 0x4007e9e	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4007c4e	      0xf20f104d08	            movsd xmm1, qword [rbp + 8] 	      9317	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4007c53	        0x4183fc06	                             cmp r12d, 6	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007c57	     0xf87ed000000	                            ja 0x4007d4a	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007c5d	    0x42ff24e50000	                       jmp qword [r12*8]	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007c65	          0x4531ed	                          xor r13d, r13d	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c68	            0x85c0	                           test eax, eax	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c6a	        0x410f9ec5	                              setle r13b	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c6e	      0xe913fdffff	                           jmp 0x4007986	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c73	          0x4c63e8	                         movsxd r13, eax	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c76	        0x49c1ed3f	                           shr r13, 0x3f	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c7a	      0xe907fdffff	                           jmp 0x4007986	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c7f	          0x4c63e8	                         movsxd r13, eax	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c82	          0x49f7d5	                                 not r13	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c85	        0x49c1ed3f	                           shr r13, 0x3f	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c89	      0xe9f8fcffff	                           jmp 0x4007986	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c8e	          0x4531ed	                          xor r13d, r13d	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c91	            0x85c0	                           test eax, eax	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c93	        0x410f9fc5	                               setg r13b	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c97	      0xe9eafcffff	                           jmp 0x4007986	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c9c	          0x4531ed	                          xor r13d, r13d	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007c9f	            0x85c0	                           test eax, eax	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007ca1	        0x410f95c5	                              setne r13b	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007ca5	      0xe9dcfcffff	                           jmp 0x4007986	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007caa	          0x4531ed	                          xor r13d, r13d	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007cad	            0x85c0	                           test eax, eax	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007caf	        0x410f94c5	                               sete r13b	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007cb3	      0xe9cefcffff	                           jmp 0x4007986	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4007cb8	          0x4489c2	                            mov edx, r8d	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007cbb	          0x4c89f6	                            mov rsi, r14	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007cbe	          0x4889ef	                            mov rdi, rbp	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007cc1	      0xe8fa87ffff	                  call sym.pattern_match	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007cc6	        0x4183fc08	                             cmp r12d, 8	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007cca	          0x4c63e8	                         movsxd r13, eax	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4007ccd	     0xf85b3fcffff	                           jne 0x4007986	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007cd3	      0xe9a4feffff	                           jmp 0x4007b7c	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4007cd8	          0x4531ed	                          xor r13d, r13d	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cdb	        0x660f2ec8	                      ucomisd xmm1, xmm0	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cdf	        0x410f97c5	                               seta r13b	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007ce3	      0xe99efcffff	                           jmp 0x4007986	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007ce8	          0x4531ed	                          xor r13d, r13d	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007ceb	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cef	        0x410f93c5	                              setae r13b	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cf3	      0xe98efcffff	                           jmp 0x4007986	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cf8	          0x4531ed	                          xor r13d, r13d	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cfb	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007cff	        0x410f97c5	                               seta r13b	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d03	      0xe97efcffff	                           jmp 0x4007986	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d08	          0x4531ed	                          xor r13d, r13d	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d0b	      0xb801000000	                              mov eax, 1	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d10	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d14	        0x410f9ac5	                               setp r13b	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d18	        0x4c0f45e8	                         cmovne r13, rax	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d1c	      0xe965fcffff	                           jmp 0x4007986	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d21	          0x4531ed	                          xor r13d, r13d	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d24	      0xb800000000	                              mov eax, 0	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d29	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d2d	        0x410f9bc5	                              setnp r13b	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d31	        0x4c0f45e8	                         cmovne r13, rax	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d35	      0xe94cfcffff	                           jmp 0x4007986	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d3a	          0x4531ed	                          xor r13d, r13d	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d3d	        0x660f2ec8	                      ucomisd xmm1, xmm0	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d41	        0x410f93c5	                              setae r13b	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d45	      0xe93cfcffff	                           jmp 0x4007986	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4007d4a	          0x4531ed	                          xor r13d, r13d	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4007d4d	      0xe934fcffff	                           jmp 0x4007986	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4007d52	    0x660f1f440000	                    nop word [rax + rax]	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4007d58	      0x418d4424ff	                      lea eax, [r12 - 1]	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007d5d	      0xba05000000	                              mov edx, 5	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007d62	      0xbe00000000	                              mov esi, 0	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4007d67	          0x83f801	                              cmp eax, 1	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007d6a	     0xf877afeffff	                            ja 0x4007bea	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4007d70	        0x488b7508	                mov rsi, qword [rbp + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d74	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d78	            0x31c9	                            xor ecx, ecx	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d7a	          0x4489c2	                            mov edx, r8d	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d7d	      0xe800000000	                          call 0x4007d82	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d82	        0x4183fc02	                             cmp r12d, 2	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4007d86	          0x4c63e8	                         movsxd r13, eax	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4007d89	     0xf85f7fbffff	                           jne 0x4007986	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4007d8f	      0xe9e8fdffff	                           jmp 0x4007b7c	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4007d94	         0xf1f4000	                         nop dword [rax]	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4007d98	      0x418d4424ff	                      lea eax, [r12 - 1]	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4007d9d	          0x83f801	                              cmp eax, 1	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4007da0	     0xf867b010000	                           jbe 0x4007f21	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4007da6	            0x31ff	                            xor edi, edi	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007da8	      0xba05000000	                              mov edx, 5	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007dad	      0xbe00000000	                              mov esi, 0	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007db2	      0xe800000000	                          call 0x4007db7	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007db7	          0x4889c7	                            mov rdi, rax	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007dba	      0xe800000000	                          call 0x4007dbf	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007dbf	      0xe917fdffff	                           jmp 0x4007adb	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007dc4	         0xf1f4000	                         nop dword [rax]	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x4007dc8	      0x48837b0800	                  cmp qword [rbx + 8], 0	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007dcd	     0xf8574fdffff	                           jne 0x4007b47	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007dd3	      0xe997fdffff	                           jmp 0x4007b6f	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007dd8	     0xf1f84000000	                   nop dword [rax + rax]	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007de0	      0x48837d0800	                  cmp qword [rbp + 8], 0	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007de5	     0xf8565fdffff	                           jne 0x4007b50	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007deb	      0xe97ffdffff	                           jmp 0x4007b6f	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4007df0	      0x458d6c24f9	                     lea r13d, [r12 - 7]	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007df5	        0x4183fd01	                             cmp r13d, 1	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007df9	     0xf863bfcffff	                           jbe 0x4007a3a	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4007dff	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e04	          0x4889df	                            mov rdi, rbx	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e07	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4007e0f	      0xe800000000	                          call 0x4007e14	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e14	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e19	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e1c	          0x4989c5	                            mov r13, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e1f	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4007e27	      0xe800000000	                          call 0x4007e2c	      6964	eval.c	FUNCTION_124	CALL_1
0x4007e2c	        0x4183fc06	                             cmp r12d, 6	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e30	     0xf8750fbffff	                            ja 0x4007986	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e36	    0x42ff24e50000	                       jmp qword [r12*8]	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e3e	          0x4c39e8	                            cmp rax, r13	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e41	        0x410f9fc5	                               setg r13b	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e45	        0x450fb6ed	                        movzx r13d, r13b	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e49	      0xe938fbffff	                           jmp 0x4007986	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e4e	          0x4c39e8	                            cmp rax, r13	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e51	        0x410f9ec5	                              setle r13b	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e55	        0x450fb6ed	                        movzx r13d, r13b	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e59	      0xe928fbffff	                           jmp 0x4007986	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e5e	          0x4c39e8	                            cmp rax, r13	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e61	        0x410f9cc5	                               setl r13b	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e65	        0x450fb6ed	                        movzx r13d, r13b	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e69	      0xe918fbffff	                           jmp 0x4007986	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e6e	          0x4c39e8	                            cmp rax, r13	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e71	        0x410f95c5	                              setne r13b	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e75	        0x450fb6ed	                        movzx r13d, r13b	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e79	      0xe908fbffff	                           jmp 0x4007986	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e7e	          0x4c39e8	                            cmp rax, r13	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e81	        0x410f94c5	                               sete r13b	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e85	        0x450fb6ed	                        movzx r13d, r13b	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e89	      0xe9f8faffff	                           jmp 0x4007986	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e8e	          0x4c39e8	                            cmp rax, r13	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e91	        0x410f9dc5	                              setge r13b	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e95	        0x450fb6ed	                        movzx r13d, r13b	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e99	      0xe9e8faffff	                           jmp 0x4007986	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x4007e9e	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4007ea3	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x4007ea6	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      6964	eval.c	FUNCTION_124	CALL_1
0x4007eac	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4007eb4	      0xe800000000	                          call 0x4007eb9	      6964	eval.c	FUNCTION_124	CALL_1
0x4007eb9	        0x660fefc9	                         pxor xmm1, xmm1	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007ebd	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007ec3	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007ec8	      0xe986fdffff	                           jmp 0x4007c53	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x4007ecd	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4007ed2	          0x4889df	                            mov rdi, rbx	      6964	eval.c	FUNCTION_124	CALL_1
0x4007ed5	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4007edd	      0xe800000000	                          call 0x4007ee2	      6964	eval.c	FUNCTION_124	CALL_1
0x4007ee2	        0x660fefc0	                         pxor xmm0, xmm0	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007ee6	          0x8b5500	                    mov edx, dword [rbp]	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007ee9	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007eee	      0xe952fdffff	                           jmp 0x4007c45	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x4007ef3	      0xbaffffff7f	                     mov edx, 0x7fffffff	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007ef8	          0x4c89fe	                            mov rsi, r15	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007efb	          0x4c89f7	                            mov rdi, r14	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007efe	      0xe800000000	                          call 0x4007f03	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007f03	      0x448b442408	                mov r8d, dword [rsp + 8]	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007f08	      0xe991fbffff	                           jmp 0x4007a9e	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4007f0d	          0x4531ed	                          xor r13d, r13d	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007f10	        0x488b4508	                mov rax, qword [rbp + 8]	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007f14	        0x48394308	                cmp qword [rbx + 8], rax	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007f18	        0x410f94c5	                               sete r13b	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007f1c	      0xe951fcffff	                           jmp 0x4007b72	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4007f21	        0x488b7508	                mov rsi, qword [rbp + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f25	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f29	            0x31c9	                            xor ecx, ecx	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f2b	          0x4489c2	                            mov edx, r8d	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f2e	      0xe800000000	                          call 0x4007f33	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f33	        0x4183fc02	                             cmp r12d, 2	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4007f37	          0x4c63e8	                         movsxd r13, eax	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x4007f3a	     0xf8546faffff	                           jne 0x4007986	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4007f40	      0xe937fcffff	                           jmp 0x4007b7c	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x4007f45	      0xe800000000	                          call 0x4007f4a	      9391	eval.c	FUNCTION_181
make_expanded_name	DO,0:WHILE,0:FOR,0:ELSE,0:IF,5:SWITCH,0:CALL,10:functions,0	103
0x4009350	            0x4156	                                push r14	      6312	eval.c	FUNCTION_99
0x4009352	            0x4155	                                push r13	      6312	eval.c	FUNCTION_99
0x4009354	            0x4154	                                push r12	      6312	eval.c	FUNCTION_99
0x4009356	              0x55	                                push rbp	      6312	eval.c	FUNCTION_99
0x4009357	          0x4889cd	                            mov rbp, rcx	      6312	eval.c	FUNCTION_99
0x400935a	              0x53	                                push rbx	      6312	eval.c	FUNCTION_99
0x400935b	        0x4883ec20	                           sub rsp, 0x20	      6312	eval.c	FUNCTION_99
0x400935f	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      6312	eval.c	FUNCTION_99
0x4009368	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      6312	eval.c	FUNCTION_99
0x400936d	            0x31c9	                            xor ecx, ecx	      6312	eval.c	FUNCTION_99
0x400936f	          0x4885d2	                           test rdx, rdx	      6318	eval.c	FUNCTION_99	IF_1
0x4009372	      0x4889742408	                mov qword [rsp + 8], rsi	      6312	eval.c	FUNCTION_99
0x4009377	        0x48891424	                    mov qword [rsp], rdx	      6312	eval.c	FUNCTION_99
0x400937b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6316	eval.c	FUNCTION_99
0x4009384	     0xf8486000000	                            je 0x4009410	      6318	eval.c	FUNCTION_99	IF_1
0x400938a	          0x4885ed	                           test rbp, rbp	      6318	eval.c	FUNCTION_99	IF_1
0x400938d	     0xf847d000000	                            je 0x4009410	      6318	eval.c	FUNCTION_99	IF_1
0x4009393	          0xc60600	                       mov byte [rsi], 0	      6320	eval.c	FUNCTION_99
0x4009396	        0x488b0424	                    mov rax, qword [rsp]	      6321	eval.c	FUNCTION_99
0x400939a	          0x4989fe	                            mov r14, rdi	      6321	eval.c	FUNCTION_99
0x400939d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      6325	eval.c	FUNCTION_99	CALL_1
0x40093a2	            0x31d2	                            xor edx, edx	      6325	eval.c	FUNCTION_99	CALL_1
0x40093a4	          0xc60000	                       mov byte [rax], 0	      6321	eval.c	FUNCTION_99
0x40093a7	      0x488b442408	                mov rax, qword [rsp + 8]	      6325	eval.c	FUNCTION_99	CALL_1
0x40093ac	      0x440fb66d00	                  movzx r13d, byte [rbp]	      6322	eval.c	FUNCTION_99
0x40093b1	        0xc6450000	                       mov byte [rbp], 0	      6323	eval.c	FUNCTION_99
0x40093b5	        0x488d7801	                      lea rdi, [rax + 1]	      6325	eval.c	FUNCTION_99	CALL_1
0x40093b9	      0xe800000000	                          call 0x40093be	      6325	eval.c	FUNCTION_99	CALL_1
0x40093be	          0x4885c0	                           test rax, rax	      6326	eval.c	FUNCTION_99	IF_2
0x40093c1	          0x4989c4	                            mov r12, rax	      6325	eval.c	FUNCTION_99	CALL_1
0x40093c4	            0x7408	                            je 0x40093ce	      6326	eval.c	FUNCTION_99	IF_2
0x40093c6	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      6326	eval.c	FUNCTION_99	IF_2
0x40093cc	            0x744a	                            je 0x4009418	      6326	eval.c	FUNCTION_99	IF_2
0x40093ce	          0x4c89e7	                            mov rdi, r12	      6337	eval.c	FUNCTION_99	CALL_7
0x40093d1	            0x31db	                            xor ebx, ebx	      6341	eval.c	FUNCTION_99
0x40093d3	      0xe800000000	                          call 0x40093d8	      6337	eval.c	FUNCTION_99	CALL_7
0x40093d8	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x40093dd	        0x44886d00	                    mov byte [rbp], r13b	      6339	eval.c	FUNCTION_99
0x40093e1	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x40093e4	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x40093e8	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x40093eb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6357	eval.c	FUNCTION_99
0x40093f0	    0x644833142528	                xor rdx, qword fs:[0x28]	      6357	eval.c	FUNCTION_99
0x40093f9	          0x4889d8	                            mov rax, rbx	      6357	eval.c	FUNCTION_99
0x40093fc	     0xf85c3000000	                           jne 0x40094c5	      6357	eval.c	FUNCTION_99
0x4009402	        0x4883c420	                           add rsp, 0x20	      6357	eval.c	FUNCTION_99
0x4009406	              0x5b	                                 pop rbx	      6357	eval.c	FUNCTION_99
0x4009407	              0x5d	                                 pop rbp	      6357	eval.c	FUNCTION_99
0x4009408	            0x415c	                                 pop r12	      6357	eval.c	FUNCTION_99
0x400940a	            0x415d	                                 pop r13	      6357	eval.c	FUNCTION_99
0x400940c	            0x415e	                                 pop r14	      6357	eval.c	FUNCTION_99
0x400940e	              0xc3	                                     ret	      6357	eval.c	FUNCTION_99
0x400940f	              0x90	                                     nop	      6357	eval.c	FUNCTION_99
0x4009410	            0x31db	                            xor ebx, ebx	      6319	eval.c	FUNCTION_99	IF_1
0x4009412	            0xebd7	                           jmp 0x40093eb	      6319	eval.c	FUNCTION_99	IF_1
0x4009414	         0xf1f4000	                         nop dword [rax]	      6319	eval.c	FUNCTION_99	IF_1
0x4009418	          0x4889c7	                            mov rdi, rax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400941b	      0xe800000000	                          call 0x4009420	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009420	      0x488b542408	                mov rdx, qword [rsp + 8]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009425	          0x4889e9	                            mov rcx, rbp	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009428	        0x482b0c24	                    sub rcx, qword [rsp]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400942c	          0x4c29f2	                            sub rdx, r14	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400942f	        0x8d7c0a01	                lea edi, [rdx + rcx + 1]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009433	             0x1c7	                            add edi, eax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009435	      0xe800000000	                          call 0x400943a	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400943a	          0x4885c0	                           test rax, rax	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x400943d	          0x4889c3	                            mov rbx, rax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x4009440	            0x748c	                            je 0x40093ce	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x4009442	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_197	CALL_3
0x4009445	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x4009448	      0xe800000000	                          call 0x400944d	       110	string3.h	FUNCTION_197	CALL_3
0x400944d	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_201	CALL_3
0x4009450	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_201	CALL_3
0x4009453	      0xe800000000	                          call 0x4009458	       148	string3.h	FUNCTION_201	CALL_3
0x4009458	        0x488b0c24	                    mov rcx, qword [rsp]	       148	string3.h	FUNCTION_201	CALL_3
0x400945c	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_201	CALL_3
0x400945f	        0x488d7101	                      lea rsi, [rcx + 1]	       148	string3.h	FUNCTION_201	CALL_3
0x4009463	      0xe800000000	                          call 0x4009468	       148	string3.h	FUNCTION_201	CALL_3
0x4009468	          0x4c89e7	                            mov rdi, r12	      6337	eval.c	FUNCTION_99	CALL_7
0x400946b	      0xe800000000	                          call 0x4009470	      6337	eval.c	FUNCTION_99	CALL_7
0x4009470	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x4009475	        0x44886d00	                    mov byte [rbp], r13b	      6339	eval.c	FUNCTION_99
0x4009479	      0x488d742408	                      lea rsi, [rsp + 8]	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400947e	            0x31c9	                            xor ecx, ecx	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x4009480	          0x4889e2	                            mov rdx, rsp	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x4009483	          0x4889df	                            mov rdi, rbx	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x4009486	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x4009489	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x400948d	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x4009490	      0xe800000000	                          call 0x4009495	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x4009495	      0x488b742408	                mov rsi, qword [rsp + 8]	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x400949a	          0x4885f6	                           test rsi, rsi	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x400949d	     0xf8448ffffff	                            je 0x40093eb	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x40094a3	        0x488b1424	                    mov rdx, qword [rsp]	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40094a7	          0x4889df	                            mov rdi, rbx	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40094aa	          0x4889c1	                            mov rcx, rax	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40094ad	      0xe89efeffff	             call sym.make_expanded_name	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40094b2	          0x4889df	                            mov rdi, rbx	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x40094b5	          0x4889c5	                            mov rbp, rax	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x40094b8	          0x4889eb	                            mov rbx, rbp	      6352	eval.c	FUNCTION_99	IF_4	IF_5
0x40094bb	      0xe800000000	                          call 0x40094c0	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x40094c0	      0xe926ffffff	                           jmp 0x40093eb	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x40094c5	      0xe800000000	                          call 0x40094ca	      6357	eval.c	FUNCTION_99
eval_patch	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,7:functions,0	45
0x4009010	              0x55	                                push rbp	       648	eval.c	FUNCTION_12
0x4009011	              0x53	                                push rbx	       648	eval.c	FUNCTION_12
0x4009012	          0x4889f5	                            mov rbp, rsi	       648	eval.c	FUNCTION_12
0x4009015	          0x4889d3	                            mov rbx, rdx	       648	eval.c	FUNCTION_12
0x4009018	          0x4889fe	                            mov rsi, rdi	       651	eval.c	FUNCTION_12	CALL_1
0x400901b	      0xbaffffffff	                     mov edx, 0xffffffff	       651	eval.c	FUNCTION_12	CALL_1
0x4009020	        0x4883ec18	                           sub rsp, 0x18	       648	eval.c	FUNCTION_12
0x4009024	      0xbf11000000	                           mov edi, 0x11	       651	eval.c	FUNCTION_12	CALL_1
0x4009029	    0x64488b042528	                mov rax, qword fs:[0x28]	       648	eval.c	FUNCTION_12
0x4009032	      0x4889442408	                mov qword [rsp + 8], rax	       648	eval.c	FUNCTION_12
0x4009037	            0x31c0	                            xor eax, eax	       648	eval.c	FUNCTION_12
0x4009039	      0xe800000000	                          call 0x400903e	       651	eval.c	FUNCTION_12	CALL_1
0x400903e	      0xbaffffffff	                     mov edx, 0xffffffff	       652	eval.c	FUNCTION_12	CALL_2
0x4009043	          0x4889ee	                            mov rsi, rbp	       652	eval.c	FUNCTION_12	CALL_2
0x4009046	      0xbf14000000	                           mov edi, 0x14	       652	eval.c	FUNCTION_12	CALL_2
0x400904b	      0xe800000000	                          call 0x4009050	       652	eval.c	FUNCTION_12	CALL_2
0x4009050	      0xbaffffffff	                     mov edx, 0xffffffff	       653	eval.c	FUNCTION_12	CALL_3
0x4009055	          0x4889de	                            mov rsi, rbx	       653	eval.c	FUNCTION_12	CALL_3
0x4009058	      0xbf12000000	                           mov edi, 0x12	       653	eval.c	FUNCTION_12	CALL_3
0x400905d	      0xe800000000	                          call 0x4009062	       653	eval.c	FUNCTION_12	CALL_3
0x4009062	    0x488b3d000000	            mov rdi, qword [0x04009069] 	       654	eval.c	FUNCTION_12	CALL_4
0x4009069	      0x488d742404	                      lea rsi, [rsp + 4]	       654	eval.c	FUNCTION_12	CALL_4
0x400906e	            0x31c9	                            xor ecx, ecx	       654	eval.c	FUNCTION_12	CALL_4
0x4009070	            0x31d2	                            xor edx, edx	       654	eval.c	FUNCTION_12	CALL_4
0x4009072	      0xe800000000	                          call 0x4009077	       654	eval.c	FUNCTION_12	CALL_4
0x4009077	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400907c	      0xe800000000	                          call 0x4009081	      6473	eval.c	FUNCTION_109	CALL_1
0x4009081	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4009086	    0xc70500000000	               mov dword [0x04009090], 2	      6474	eval.c	FUNCTION_109
0x4009090	    0x48c705000000	               mov qword [0x0400909b], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400909b	      0xe800000000	                          call 0x40090a0	      6473	eval.c	FUNCTION_109	CALL_1
0x40090a0	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40090a5	    0xc70500000000	               mov dword [0x040090af], 2	      6474	eval.c	FUNCTION_109
0x40090af	    0x48c705000000	               mov qword [0x040090ba], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40090ba	      0xe800000000	                          call 0x40090bf	      6473	eval.c	FUNCTION_109	CALL_1
0x40090bf	      0x488b442408	                mov rax, qword [rsp + 8]	       658	eval.c	FUNCTION_12
0x40090c4	    0x644833042528	                xor rax, qword fs:[0x28]	       658	eval.c	FUNCTION_12
0x40090cd	    0xc70500000000	               mov dword [0x040090d7], 2	      6474	eval.c	FUNCTION_109
0x40090d7	    0x48c705000000	               mov qword [0x040090e2], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40090e2	            0x7507	                           jne 0x40090eb	       658	eval.c	FUNCTION_12
0x40090e4	        0x4883c418	                           add rsp, 0x18	       658	eval.c	FUNCTION_12
0x40090e8	              0x5b	                                 pop rbx	       658	eval.c	FUNCTION_12
0x40090e9	              0x5d	                                 pop rbp	       658	eval.c	FUNCTION_12
0x40090ea	              0xc3	                                     ret	       658	eval.c	FUNCTION_12
0x40090eb	      0xe800000000	            call sym.eval_to_string_skip	       658	eval.c	FUNCTION_12
pattern_match	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	38
0x40004c0	            0x4155	                                push r13	      3220	eval.c	FUNCTION_62
0x40004c2	            0x4154	                                push r12	      3220	eval.c	FUNCTION_62
0x40004c4	          0x4989f4	                            mov r12, rsi	      3220	eval.c	FUNCTION_62
0x40004c7	              0x55	                                push rbp	      3220	eval.c	FUNCTION_62
0x40004c8	              0x53	                                push rbx	      3220	eval.c	FUNCTION_62
0x40004c9	      0xbe03000000	                              mov esi, 3	      3228	eval.c	FUNCTION_62	CALL_1
0x40004ce	          0x4189d5	                           mov r13d, edx	      3220	eval.c	FUNCTION_62
0x40004d1	            0x31db	                            xor ebx, ebx	      3220	eval.c	FUNCTION_62
0x40004d3	    0x4881ecc80000	                           sub rsp, 0xc8	      3220	eval.c	FUNCTION_62
0x40004da	    0x488b2d000000	            mov rbp, qword [0x040004e1] 	      3226	eval.c	FUNCTION_62
0x40004e1	    0x48c705000000	               mov qword [0x040004ec], 0	      3227	eval.c	FUNCTION_62
0x40004ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      3220	eval.c	FUNCTION_62
0x40004f5	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3220	eval.c	FUNCTION_62
0x40004fd	            0x31c0	                            xor eax, eax	      3220	eval.c	FUNCTION_62
0x40004ff	      0xe800000000	                          call 0x4000504	      3228	eval.c	FUNCTION_62	CALL_1
0x4000504	          0x4885c0	                           test rax, rax	      3229	eval.c	FUNCTION_62	IF_1
0x4000507	        0x48890424	                    mov qword [rsp], rax	      3228	eval.c	FUNCTION_62	CALL_1
0x400050b	            0x7420	                            je 0x400052d	      3229	eval.c	FUNCTION_62	IF_1
0x400050d	          0x4889e7	                            mov rdi, rsp	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000510	            0x31d2	                            xor edx, edx	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000512	          0x4c89e6	                            mov rsi, r12	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000515	    0x4489ac24a800	            mov dword [rsp + 0xa8], r13d	      3231	eval.c	FUNCTION_62	IF_1
0x400051d	      0xe800000000	                          call 0x4000522	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000522	        0x488b3c24	                    mov rdi, qword [rsp]	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x4000526	            0x89c3	                            mov ebx, eax	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4000528	      0xe800000000	                          call 0x400052d	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x400052d	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3237	eval.c	FUNCTION_62
0x4000535	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3237	eval.c	FUNCTION_62
0x400053e	    0x48892d000000	            mov qword [0x04000545], rbp 	      3235	eval.c	FUNCTION_62
0x4000545	            0x89d8	                            mov eax, ebx	      3237	eval.c	FUNCTION_62
0x4000547	            0x750e	                           jne 0x4000557	      3237	eval.c	FUNCTION_62
0x4000549	    0x4881c4c80000	                           add rsp, 0xc8	      3237	eval.c	FUNCTION_62
0x4000550	              0x5b	                                 pop rbx	      3237	eval.c	FUNCTION_62
0x4000551	              0x5d	                                 pop rbp	      3237	eval.c	FUNCTION_62
0x4000552	            0x415c	                                 pop r12	      3237	eval.c	FUNCTION_62
0x4000554	            0x415d	                                 pop r13	      3237	eval.c	FUNCTION_62
0x4000556	              0xc3	                                     ret	      3237	eval.c	FUNCTION_62
0x4000557	      0xe800000000	                          call 0x400055c	      3237	eval.c	FUNCTION_62
get_user_input	DO,0:WHILE,0:FOR,0:ELSE,1:IF,10:SWITCH,0:CALL,17:functions,0	178
0x40050a0	            0x4157	                                push r15	      7909	eval.c	FUNCTION_151
0x40050a2	            0x4156	                                push r14	      7909	eval.c	FUNCTION_151
0x40050a4	          0x4189cf	                           mov r15d, ecx	      7909	eval.c	FUNCTION_151
0x40050a7	            0x4155	                                push r13	      7909	eval.c	FUNCTION_151
0x40050a9	            0x4154	                                push r12	      7909	eval.c	FUNCTION_151
0x40050ab	          0x4189d6	                           mov r14d, edx	      7909	eval.c	FUNCTION_151
0x40050ae	              0x55	                                push rbp	      7909	eval.c	FUNCTION_151
0x40050af	              0x53	                                push rbx	      7909	eval.c	FUNCTION_151
0x40050b0	          0x4889f5	                            mov rbp, rsi	      7909	eval.c	FUNCTION_151
0x40050b3	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40050b8	          0x4989fc	                            mov r12, rdi	      7909	eval.c	FUNCTION_151
0x40050bb	    0x4881ec980000	                           sub rsp, 0x98	      7909	eval.c	FUNCTION_151
0x40050c2	    0x64488b042528	                mov rax, qword fs:[0x28]	      7909	eval.c	FUNCTION_151
0x40050cb	    0x488984248800	             mov qword [rsp + 0x88], rax	      7909	eval.c	FUNCTION_151
0x40050d3	            0x31c0	                            xor eax, eax	      7909	eval.c	FUNCTION_151
0x40050d5	      0xe800000000	                          call 0x40050da	      7098	eval.c	FUNCTION_129	CALL_1
0x40050da	    0x448b2d000000	           mov r13d, dword [0x040050e1] 	      7914	eval.c	FUNCTION_151
0x40050e1	    0x48c745080000	                  mov qword [rbp + 8], 0	      7920	eval.c	FUNCTION_151
0x40050e9	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x40050ec	    0xc74500020000	                      mov dword [rbp], 2	      7919	eval.c	FUNCTION_151
0x40050f3	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      7916	eval.c	FUNCTION_151
0x40050fb	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7917	eval.c	FUNCTION_151
0x4005104	      0xe800000000	                          call 0x4005109	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005109	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x400510b	     0xf852f010000	                           jne 0x4005240	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005111	          0x4885db	                           test rbx, rbx	      7930	eval.c	FUNCTION_151	IF_2
0x4005114	    0xc70500000000	               mov dword [0x0400511e], 0	      7929	eval.c	FUNCTION_151
0x400511e	     0xf84e9000000	                            je 0x400520d	      7930	eval.c	FUNCTION_151	IF_2
0x4005124	      0xbe0a000000	                            mov esi, 0xa	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4005129	          0x4889df	                            mov rdi, rbx	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x400512c	      0xe800000000	                          call 0x4005131	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4005131	          0x4885c0	                           test rax, rax	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x4005134	      0x48895c2408	                mov qword [rsp + 8], rbx	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x4005139	            0x744e	                            je 0x4005189	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x400513b	         0xfb65001	               movzx edx, byte [rax + 1]	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x400513f	        0x488d4801	                      lea rcx, [rax + 1]	      7939	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005143	        0xc6400100	                   mov byte [rax + 1], 0	      7941	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005147	      0x4889442410	             mov qword [rsp + 0x10], rax	      7941	eval.c	FUNCTION_151	IF_2	ELSE_1
0x400514c	      0x48894c2408	                mov qword [rsp + 8], rcx	      7939	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005151	        0x8854241f	               mov byte [rsp + 0x1f], dl	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005155	      0xe800000000	                          call 0x400515a	      7942	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_5
0x400515a	      0xe800000000	                          call 0x400515f	      7943	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_6
0x400515f	    0x8b3500000000	            mov esi, dword [0x04005165] 	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x4005165	          0x4889df	                            mov rdi, rbx	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x4005168	      0xe800000000	                          call 0x400516d	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x400516d	    0xc70500000000	               mov dword [0x04005177], 0	      7945	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005177	      0xe800000000	                          call 0x400517c	      7946	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_8
0x400517c	       0xfb654241f	           movzx edx, byte [rsp + 0x1f] 	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005181	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005186	          0x885001	                  mov byte [rax + 1], dl	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x4005189	      0x418b742410	            mov esi, dword [r12 + 0x10] 	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x400518e	    0x8b0500000000	            mov eax, dword [0x04005194] 	      7949	eval.c	FUNCTION_151	IF_2
0x4005194	            0x85f6	                           test esi, esi	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x4005196	    0x890500000000	            mov dword [0x0400519c], eax 	      7949	eval.c	FUNCTION_151	IF_2
0x400519c	     0xf85ae000000	                           jne 0x4005250	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x40051a2	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051a4	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051a7	    0x8b1d00000000	            mov ebx, dword [0x040051ad] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x40051ad	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051b2	    0xc70500000000	               mov dword [0x040051bc], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x40051bc	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051c0	    0x8b1500000000	            mov edx, dword [0x040051c6] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051c6	            0x7505	                           jne 0x40051cd	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051c8	      0xbf40000000	                           mov edi, 0x40	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051cd	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051d2	      0xe800000000	                          call 0x40051d7	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40051d7	          0x4585f6	                         test r14d, r14d	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x40051da	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x40051de	    0x891d00000000	            mov dword [0x040051e4], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x40051e4	            0x7409	                            je 0x40051ef	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x40051e6	          0x4885c0	                           test rax, rax	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x40051e9	     0xf8441010000	                            je 0x4005330	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x40051ef	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x40051f4	      0xe800000000	                          call 0x40051f9	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x40051f9	    0xc70500000000	               mov dword [0x04005203], 0	      7996	eval.c	FUNCTION_151	IF_2
0x4005203	    0xc70500000000	               mov dword [0x0400520d], 0	      7997	eval.c	FUNCTION_151	IF_2
0x400520d	    0x44892d000000	           mov dword [0x04005214], r13d 	      7999	eval.c	FUNCTION_151
0x4005214	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      8000	eval.c	FUNCTION_151
0x400521c	    0x644833042528	                xor rax, qword fs:[0x28]	      8000	eval.c	FUNCTION_151
0x4005225	     0xf85a5010000	                           jne 0x40053d0	      8000	eval.c	FUNCTION_151
0x400522b	    0x4881c4980000	                           add rsp, 0x98	      8000	eval.c	FUNCTION_151
0x4005232	              0x5b	                                 pop rbx	      8000	eval.c	FUNCTION_151
0x4005233	              0x5d	                                 pop rbp	      8000	eval.c	FUNCTION_151
0x4005234	            0x415c	                                 pop r12	      8000	eval.c	FUNCTION_151
0x4005236	            0x415d	                                 pop r13	      8000	eval.c	FUNCTION_151
0x4005238	            0x415e	                                 pop r14	      8000	eval.c	FUNCTION_151
0x400523a	            0x415f	                                 pop r15	      8000	eval.c	FUNCTION_151
0x400523c	              0xc3	                                     ret	      8000	eval.c	FUNCTION_151
0x400523d	           0xf1f00	                         nop dword [rax]	      8000	eval.c	FUNCTION_151
0x4005240	      0xe800000000	                          call 0x4005245	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005245	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005247	            0x74cb	                            je 0x4005214	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005249	      0xe9c3feffff	                           jmp 0x4005111	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x400524e	            0x6690	                                     nop	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4005250	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4005255	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x400525a	      0xe800000000	                          call 0x400525f	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x400525f	          0x4885c0	                           test rax, rax	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x4005262	          0x4889c3	                            mov rbx, rax	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x4005265	            0x7459	                            je 0x40052c0	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x4005267	          0x4889c7	                            mov rdi, rax	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x400526a	      0xe800000000	                          call 0x400526f	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x400526f	          0x4585f6	                         test r14d, r14d	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4005272	            0x7451	                            je 0x40052c5	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4005274	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005277	    0x8b1d00000000	            mov ebx, dword [0x0400527d] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x400527d	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005282	    0xc70500000000	               mov dword [0x0400528c], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x400528c	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005290	    0x8b1500000000	            mov edx, dword [0x04005296] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005296	     0xf842cffffff	                            je 0x40051c8	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400529c	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052a1	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052a3	      0xe800000000	                          call 0x40052a8	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052a8	    0x891d00000000	            mov dword [0x040052ae], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x40052ae	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x40052b2	      0xe92fffffff	                           jmp 0x40051e6	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x40052b7	    0x660f1f840000	                    nop word [rax + rax]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x40052c0	          0x4585f6	                         test r14d, r14d	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40052c3	            0x755b	                           jne 0x4005320	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40052c5	      0x418b4c2420	            mov ecx, dword [r12 + 0x20] 	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40052ca	            0x85c9	                           test ecx, ecx	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40052cc	     0xf85a6000000	                           jne 0x4005378	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40052d2	          0x4885db	                           test rbx, rbx	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x40052d5	     0xf8414ffffff	                            je 0x40051ef	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x40052db	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052de	    0x8b1d00000000	            mov ebx, dword [0x040052e4] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x40052e4	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052e9	    0xc70500000000	               mov dword [0x040052f3], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x40052f3	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052f7	    0x8b1500000000	            mov edx, dword [0x040052fd] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40052fd	     0xf84c5feffff	                            je 0x40051c8	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005303	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4005308	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400530a	      0xe800000000	                          call 0x400530f	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400530f	    0x891d00000000	            mov dword [0x04005315], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4005315	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4005319	      0xe9d1feffff	                           jmp 0x40051ef	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x400531e	            0x6690	                                     nop	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4005320	        0x488b4508	                mov rax, qword [rbp + 8]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4005324	      0xe9bdfeffff	                           jmp 0x40051e6	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4005329	     0xf1f80000000	                         nop dword [rax]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4005330	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x4005335	            0x85d2	                           test edx, edx	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x4005337	     0xf84b2feffff	                            je 0x40051ef	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x400533d	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x4005342	            0x85c0	                           test eax, eax	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x4005344	     0xf84a5feffff	                            je 0x40051ef	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x400534a	      0x498d7c2420	                   lea rdi, [r12 + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x400534f	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7085	eval.c	FUNCTION_128	CALL_1
0x4005354	      0xe800000000	                          call 0x4005359	      7085	eval.c	FUNCTION_128	CALL_1
0x4005359	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x400535e	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4005361	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x4005365	      0xe800000000	                          call 0x400536a	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x400536a	        0x48894508	                mov qword [rbp + 8], rax	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x400536e	      0xe97cfeffff	                           jmp 0x40051ef	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4005373	       0xf1f440000	                   nop dword [rax + rax]	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x4005378	      0x498d7c2420	                   lea rdi, [r12 + 0x20]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x400537d	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x4005382	    0x48c745080000	                  mov qword [rbp + 8], 0	      7964	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x400538a	      0xe800000000	                          call 0x400538f	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x400538f	          0x4885c0	                           test rax, rax	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4005392	     0xf847cfeffff	                            je 0x4005214	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4005398	          0x4889c7	                            mov rdi, rax	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x400539b	      0x4889442410	             mov qword [rsp + 0x10], rax	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x40053a0	      0xe800000000	                          call 0x40053a5	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x40053a5	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053aa	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053af	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053b4	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053b9	            0x89c6	                            mov esi, eax	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053bb	          0x4c89cf	                             mov rdi, r9	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053be	      0xe800000000	                          call 0x40053c3	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053c3	            0x85c0	                           test eax, eax	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053c5	     0xf8449feffff	                            je 0x4005214	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053cb	      0xe902ffffff	                           jmp 0x40052d2	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x40053d0	      0xe800000000	                          call 0x40053d5	      8000	eval.c	FUNCTION_151
assert_error	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	28
0x4006d80	              0x55	                                push rbp	      8809	eval.c	FUNCTION_169
0x4006d81	              0x53	                                push rbx	      8809	eval.c	FUNCTION_169
0x4006d82	          0x4889fd	                            mov rbp, rdi	      8809	eval.c	FUNCTION_169
0x4006d85	        0x4883ec08	                              sub rsp, 8	      8809	eval.c	FUNCTION_169
0x4006d89	    0x833d00000000	               cmp dword [0x04006d90], 5	      8812	eval.c	FUNCTION_169	IF_1
0x4006d90	            0x744e	                            je 0x4006de0	      8812	eval.c	FUNCTION_169	IF_1
0x4006d92	      0xe800000000	                          call 0x4006d97	      8814	eval.c	FUNCTION_169	CALL_2
0x4006d97	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x4006d9c	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x4006d9f	      0xe800000000	                          call 0x4006da4	      6489	eval.c	FUNCTION_110	CALL_1
0x4006da4	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4006da7	    0xc70500000000	               mov dword [0x04006db1], 5	      6490	eval.c	FUNCTION_110
0x4006db1	    0x48891d000000	            mov qword [0x04006db8], rbx 	      6491	eval.c	FUNCTION_110
0x4006db8	            0x740b	                            je 0x4006dc5	      6492	eval.c	FUNCTION_110	IF_1
0x4006dba	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4006dbe	    0x488b1d000000	            mov rbx, qword [0x04006dc5] 	      6493	eval.c	FUNCTION_110	IF_1
0x4006dc5	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x4006dc9	          0x8b5500	                    mov edx, dword [rbp]	      8815	eval.c	FUNCTION_169	CALL_3
0x4006dcc	        0x4883c408	                              add rsp, 8	      8816	eval.c	FUNCTION_169
0x4006dd0	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x4006dd3	              0x5b	                                 pop rbx	      8816	eval.c	FUNCTION_169
0x4006dd4	              0x5d	                                 pop rbp	      8816	eval.c	FUNCTION_169
0x4006dd5	      0xe900000000	                           jmp 0x4006dda	      8815	eval.c	FUNCTION_169	CALL_3
0x4006dda	    0x660f1f440000	                    nop word [rax + rax]	      8815	eval.c	FUNCTION_169	CALL_3
0x4006de0	    0x488b1d000000	            mov rbx, qword [0x04006de7] 	      8812	eval.c	FUNCTION_169	IF_1
0x4006de7	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x4006dea	            0x75d9	                           jne 0x4006dc5	      8812	eval.c	FUNCTION_169	IF_1
0x4006dec	            0xeba4	                           jmp 0x4006d92	      8812	eval.c	FUNCTION_169	IF_1
find_var_in_ht	DO,0:WHILE,0:FOR,0:ELSE,0:IF,5:SWITCH,1:CALL,10:functions,0	80
0x40056b0	          0x803a00	                       cmp byte [rdx], 0	      7221	eval.c	FUNCTION_132	IF_1
0x40056b3	            0x751b	                           jne 0x40056d0	      7221	eval.c	FUNCTION_132	IF_1
0x40056b5	          0x83ee61	                           sub esi, 0x61	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40056b8	          0x83fe16	                           cmp esi, 0x16	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40056bb	     0xf87cf000000	                            ja 0x4005790	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40056c1	    0xff24f5000000	                       jmp qword [rsi*8]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40056c8	     0xf1f84000000	                   nop dword [rax + rax]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40056d0	            0x4154	                                push r12	      7218	eval.c	FUNCTION_132
0x40056d2	              0x55	                                push rbp	      7218	eval.c	FUNCTION_132
0x40056d3	          0x4889d6	                            mov rsi, rdx	      7238	eval.c	FUNCTION_132	CALL_4
0x40056d6	              0x53	                                push rbx	      7218	eval.c	FUNCTION_132
0x40056d7	          0x4189cc	                           mov r12d, ecx	      7218	eval.c	FUNCTION_132
0x40056da	          0x4889d3	                            mov rbx, rdx	      7218	eval.c	FUNCTION_132
0x40056dd	          0x4889fd	                            mov rbp, rdi	      7218	eval.c	FUNCTION_132
0x40056e0	      0xe800000000	                          call 0x40056e5	      7238	eval.c	FUNCTION_132	CALL_4
0x40056e5	        0x488b4008	                mov rax, qword [rax + 8]	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x40056e9	          0x4885c0	                           test rax, rax	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x40056ec	     0xf84a6000000	                            je 0x4005798	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x40056f2	    0x483d00000000	                              cmp rax, 0	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x40056f8	     0xf849a000000	                            je 0x4005798	      7239	eval.c	FUNCTION_132	IF_2	CALL_5
0x40056fe	        0x4883e811	                           sub rax, 0x11	      7256	eval.c	FUNCTION_132	CALL_10
0x4005702	              0x5b	                                 pop rbx	      7257	eval.c	FUNCTION_132
0x4005703	              0x5d	                                 pop rbp	      7257	eval.c	FUNCTION_132
0x4005704	            0x415c	                                 pop r12	      7257	eval.c	FUNCTION_132
0x4005706	              0xc3	                                     ret	      7257	eval.c	FUNCTION_132
0x4005707	    0x660f1f840000	                    nop word [rax + rax]	      7257	eval.c	FUNCTION_132
0x4005710	      0xb800000000	                              mov eax, 0	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005715	              0xc3	                                     ret	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005720	    0x488b05000000	            mov rax, qword [0x04005727] 	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005727	    0x480558050000	                          add rax, 0x558	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400572d	              0xc3	                                     ret	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400572e	            0x6690	                                     nop	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005730	      0xe900000000	                           jmp 0x4005735	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_3
0x4005735	           0xf1f00	                         nop dword [rax]	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_3
0x4005738	    0x488b05000000	            mov rax, qword [0x0400573f] 	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400573f	    0x480518170000	                         add rax, 0x1718	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005745	              0xc3	                                     ret	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005750	      0xb800000000	                              mov eax, 0	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005755	              0xc3	                                     ret	      7257	eval.c	FUNCTION_132
0x4005756	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7257	eval.c	FUNCTION_132
0x4005760	      0xe900000000	                           jmp 0x4005765	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4005765	           0xf1f00	                         nop dword [rax]	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4005768	    0x486315000000	         movsxd rdx, dword [0x0400576f] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x400576f	    0x488b05000000	            mov rax, qword [0x04005776] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4005776	      0x488b44d0f8	        mov rax, qword [rax + rdx*8 - 8]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x400577b	              0xc3	                                     ret	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x400577c	         0xf1f4000	                         nop dword [rax]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x4005780	    0x488b05000000	            mov rax, qword [0x04005787] 	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005787	    0x4805b8000000	                           add rax, 0xb8	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400578d	              0xc3	                                     ret	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400578e	            0x6690	                                     nop	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4005790	            0x31c0	                            xor eax, eax	      7235	eval.c	FUNCTION_132	IF_1
0x4005792	              0xc3	                                     ret	      7235	eval.c	FUNCTION_132	IF_1
0x4005793	       0xf1f440000	                   nop dword [rax + rax]	      7235	eval.c	FUNCTION_132	IF_1
0x4005798	    0x4881fd000000	                              cmp rbp, 0	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x400579f	            0x7505	                           jne 0x40057a6	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x40057a1	          0x4585e4	                         test r12d, r12d	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x40057a4	            0x7407	                            je 0x40057ad	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x40057a6	            0x31c0	                            xor eax, eax	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x40057a8	      0xe955ffffff	                           jmp 0x4005702	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x40057ad	            0x31f6	                            xor esi, esi	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057af	          0x4889df	                            mov rdi, rbx	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057b2	      0xe800000000	                          call 0x40057b7	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057b7	            0x85c0	                           test eax, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057b9	            0x74eb	                            je 0x40057a6	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057bb	      0xe800000000	                          call 0x40057c0	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057c0	            0x85c0	                           test eax, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057c2	            0x75e2	                           jne 0x40057a6	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_7
0x40057c4	          0x4889de	                            mov rsi, rbx	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x40057c7	      0xbf00000000	                              mov edi, 0	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x40057cc	      0xe800000000	                          call 0x40057d1	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_8
0x40057d1	        0x488b4008	                mov rax, qword [rax + 8]	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x40057d5	    0x483d00000000	                              cmp rax, 0	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x40057db	            0x74c9	                            je 0x40057a6	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x40057dd	          0x4885c0	                           test rax, rax	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x40057e0	     0xf8518ffffff	                           jne 0x40056fe	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_9
0x40057e6	            0x31c0	                            xor eax, eax	      7254	eval.c	FUNCTION_132	IF_2	IF_5
0x40057e8	      0xe915ffffff	                           jmp 0x4005702	      7254	eval.c	FUNCTION_132	IF_2	IF_5
tv_equal	DO,0:WHILE,0:FOR,0:ELSE,0:IF,4:SWITCH,1:CALL,7:functions,0	264
0x4003570	            0x4157	                                push r15	      4962	eval.c	FUNCTION_79
0x4003572	            0x4156	                                push r14	      4962	eval.c	FUNCTION_79
0x4003574	            0x4155	                                push r13	      4962	eval.c	FUNCTION_79
0x4003576	            0x4154	                                push r12	      4962	eval.c	FUNCTION_79
0x4003578	          0x4189d5	                           mov r13d, edx	      4962	eval.c	FUNCTION_79
0x400357b	              0x55	                                push rbp	      4962	eval.c	FUNCTION_79
0x400357c	              0x53	                                push rbx	      4962	eval.c	FUNCTION_79
0x400357d	          0x4889fd	                            mov rbp, rdi	      4962	eval.c	FUNCTION_79
0x4003580	          0x4989f4	                            mov r12, rsi	      4962	eval.c	FUNCTION_79
0x4003583	    0x4881eca80000	                           sub rsp, 0xa8	      4962	eval.c	FUNCTION_79
0x400358a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4962	eval.c	FUNCTION_79
0x4003593	    0x488984249800	             mov qword [rsp + 0x98], rax	      4962	eval.c	FUNCTION_79
0x400359b	            0x31c0	                            xor eax, eax	      4962	eval.c	FUNCTION_79
0x400359d	            0x85c9	                           test ecx, ecx	      4974	eval.c	FUNCTION_79	IF_1
0x400359f	    0x8b0500000000	            mov eax, dword [0x040035a5] 	      4974	eval.c	FUNCTION_79	IF_1
0x40035a5	            0x750f	                           jne 0x40035b6	      4974	eval.c	FUNCTION_79	IF_1
0x40035a7	    0xc70500000000	          mov dword [0x040035b1], 0x3e8 	      4975	eval.c	FUNCTION_79	IF_1
0x40035b1	      0xb8e8030000	                          mov eax, 0x3e8	      4975	eval.c	FUNCTION_79	IF_1
0x40035b6	    0x8b1500000000	            mov edx, dword [0x040035bc] 	      4976	eval.c	FUNCTION_79	IF_2
0x40035bc	            0x39c2	                            cmp edx, eax	      4976	eval.c	FUNCTION_79	IF_2
0x40035be	            0x7d48	                           jge 0x4003608	      4976	eval.c	FUNCTION_79	IF_2
0x40035c0	          0x8b5d00	                    mov ebx, dword [rbp]	      4984	eval.c	FUNCTION_79	IF_3
0x40035c3	          0x83fb03	                              cmp ebx, 3	      4984	eval.c	FUNCTION_79	IF_3
0x40035c6	            0x7458	                            je 0x4003620	      4984	eval.c	FUNCTION_79	IF_3
0x40035c8	          0x83fb04	                              cmp ebx, 4	      4985	eval.c	FUNCTION_79	IF_3
0x40035cb	            0x7473	                            je 0x4003640	      4985	eval.c	FUNCTION_79	IF_3
0x40035cd	        0x458b3424	                   mov r14d, dword [r12]	      4985	eval.c	FUNCTION_79	IF_3
0x40035d1	            0x31c0	                            xor eax, eax	      4996	eval.c	FUNCTION_79	IF_4
0x40035d3	          0x4439f3	                           cmp ebx, r14d	      4995	eval.c	FUNCTION_79	IF_4
0x40035d6	     0xf8484010000	                            je 0x4003760	      4995	eval.c	FUNCTION_79	IF_4
0x40035dc	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      5044	eval.c	FUNCTION_79
0x40035e4	    0x644833342528	                xor rsi, qword fs:[0x28]	      5044	eval.c	FUNCTION_79
0x40035ed	     0xf85a9030000	                           jne 0x400399c	      5044	eval.c	FUNCTION_79
0x40035f3	    0x4881c4a80000	                           add rsp, 0xa8	      5044	eval.c	FUNCTION_79
0x40035fa	              0x5b	                                 pop rbx	      5044	eval.c	FUNCTION_79
0x40035fb	              0x5d	                                 pop rbp	      5044	eval.c	FUNCTION_79
0x40035fc	            0x415c	                                 pop r12	      5044	eval.c	FUNCTION_79
0x40035fe	            0x415d	                                 pop r13	      5044	eval.c	FUNCTION_79
0x4003600	            0x415e	                                 pop r14	      5044	eval.c	FUNCTION_79
0x4003602	            0x415f	                                 pop r15	      5044	eval.c	FUNCTION_79
0x4003604	              0xc3	                                     ret	      5044	eval.c	FUNCTION_79
0x4003605	           0xf1f00	                         nop dword [rax]	      5044	eval.c	FUNCTION_79
0x4003608	          0x83e801	                              sub eax, 1	      4978	eval.c	FUNCTION_79	IF_2
0x400360b	    0x890500000000	            mov dword [0x04003611], eax 	      4978	eval.c	FUNCTION_79	IF_2
0x4003611	      0xb801000000	                              mov eax, 1	      4979	eval.c	FUNCTION_79	IF_2
0x4003616	            0xebc4	                           jmp 0x40035dc	      4979	eval.c	FUNCTION_79	IF_2
0x4003618	     0xf1f84000000	                   nop dword [rax + rax]	      4979	eval.c	FUNCTION_79	IF_2
0x4003620	        0x458b3424	                   mov r14d, dword [r12]	      4986	eval.c	FUNCTION_79	IF_3
0x4003624	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x4003628	     0xf84f2020000	                            je 0x4003920	      4986	eval.c	FUNCTION_79	IF_3
0x400362e	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x4003632	            0x742d	                            je 0x4003661	      4987	eval.c	FUNCTION_79	IF_3
0x4003634	            0x31c0	                            xor eax, eax	      5043	eval.c	FUNCTION_79
0x4003636	            0xeba4	                           jmp 0x40035dc	      5043	eval.c	FUNCTION_79
0x4003638	     0xf1f84000000	                   nop dword [rax + rax]	      5043	eval.c	FUNCTION_79
0x4003640	        0x488b4508	                mov rax, qword [rbp + 8]	      4985	eval.c	FUNCTION_79	IF_3
0x4003644	          0x4885c0	                           test rax, rax	      4985	eval.c	FUNCTION_79	IF_3
0x4003647	            0x7493	                            je 0x40035dc	      4985	eval.c	FUNCTION_79	IF_3
0x4003649	        0x458b3424	                   mov r14d, dword [r12]	      4986	eval.c	FUNCTION_79	IF_3
0x400364d	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x4003651	     0xf8428030000	                            je 0x400397f	      4986	eval.c	FUNCTION_79	IF_3
0x4003657	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x400365b	     0xf8570ffffff	                           jne 0x40035d1	      4987	eval.c	FUNCTION_79	IF_3
0x4003661	      0x498b442408	                mov rax, qword [r12 + 8]	      4987	eval.c	FUNCTION_79	IF_3
0x4003666	          0x4885c0	                           test rax, rax	      4987	eval.c	FUNCTION_79	IF_3
0x4003669	          0x4989c7	                            mov r15, rax	      4987	eval.c	FUNCTION_79	IF_3
0x400366c	     0xf84ce020000	                            je 0x4003940	      4987	eval.c	FUNCTION_79	IF_3
0x4003672	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4003675	          0x83fb03	                              cmp ebx, 3	      4912	eval.c	FUNCTION_78	CALL_1
0x4003678	    0x891500000000	            mov dword [0x0400367e], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400367e	     0xf841d030000	                            je 0x40039a1	      4912	eval.c	FUNCTION_78	CALL_1
0x4003684	        0x488b4508	                mov rax, qword [rbp + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x4003688	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x400368e	        0x488b7808	                mov rdi, qword [rax + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4003692	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x4003695	     0xf84dc010000	                            je 0x4003877	      4862	eval.c	FUNCTION_75	IF_1
0x400369b	          0x803f00	                       cmp byte [rdi], 0	      4914	eval.c	FUNCTION_78	IF_1
0x400369e	      0xb800000000	                              mov eax, 0	      4914	eval.c	FUNCTION_78	IF_1
0x40036a3	        0x480f44f8	                          cmove rdi, rax	      4914	eval.c	FUNCTION_78	IF_1
0x40036a7	        0x4183fe03	                             cmp r14d, 3	      4916	eval.c	FUNCTION_78	CALL_2
0x40036ab	     0xf845f020000	                            je 0x4003910	      4916	eval.c	FUNCTION_78	CALL_2
0x40036b1	        0x498b7708	                mov rsi, qword [r15 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x40036b5	          0x4885f6	                           test rsi, rsi	      4862	eval.c	FUNCTION_75	IF_1
0x40036b8	     0xf84a0010000	                            je 0x400385e	      4862	eval.c	FUNCTION_75	IF_1
0x40036be	          0x803e00	                       cmp byte [rsi], 0	      4917	eval.c	FUNCTION_78	IF_2
0x40036c1	     0xf84c1000000	                            je 0x4003788	      4917	eval.c	FUNCTION_78	IF_2
0x40036c7	          0x4885ff	                           test rdi, rdi	      4919	eval.c	FUNCTION_78	IF_3
0x40036ca	     0xf84ba000000	                            je 0x400378a	      4919	eval.c	FUNCTION_78	IF_3
0x40036d0	      0xe800000000	                          call 0x40036d5	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40036d5	            0x85c0	                           test eax, eax	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40036d7	            0x7577	                           jne 0x4003750	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40036d9	          0x83fb03	                              cmp ebx, 3	      4928	eval.c	FUNCTION_78
0x40036dc	     0xf8408020000	                            je 0x40038ea	      4928	eval.c	FUNCTION_78
0x40036e2	        0x488b4508	                mov rax, qword [rbp + 8]	      4928	eval.c	FUNCTION_78
0x40036e6	        0x4183fe03	                             cmp r14d, 3	      4929	eval.c	FUNCTION_78
0x40036ea	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4928	eval.c	FUNCTION_78
0x40036ee	     0xf8457020000	                            je 0x400394b	      4929	eval.c	FUNCTION_78
0x40036f4	          0x4885ff	                           test rdi, rdi	      4930	eval.c	FUNCTION_78	IF_6
0x40036f7	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      4929	eval.c	FUNCTION_78
0x40036fb	     0xf84f9010000	                            je 0x40038fa	      4930	eval.c	FUNCTION_78	IF_6
0x4003701	          0x4885f6	                           test rsi, rsi	      4930	eval.c	FUNCTION_78	IF_6
0x4003704	     0xf84f0010000	                            je 0x40038fa	      4930	eval.c	FUNCTION_78	IF_6
0x400370a	      0xb901000000	                              mov ecx, 1	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x400370f	          0x4489ea	                           mov edx, r13d	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003712	      0xe800000000	                          call 0x4003717	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003717	            0x85c0	                           test eax, eax	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003719	            0x7435	                            je 0x4003750	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x400371b	          0x8b5d00	                    mov ebx, dword [rbp]	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x400371e	        0x458b3424	                   mov r14d, dword [r12]	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4003722	          0x83fb03	                              cmp ebx, 3	      4939	eval.c	FUNCTION_78
0x4003725	     0xf843e020000	                            je 0x4003969	      4939	eval.c	FUNCTION_78
0x400372b	        0x488b4508	                mov rax, qword [rbp + 8]	      4939	eval.c	FUNCTION_78
0x400372f	        0x4183fe03	                             cmp r14d, 3	      4940	eval.c	FUNCTION_78
0x4003733	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      4939	eval.c	FUNCTION_78
0x4003736	     0xf8456020000	                            je 0x4003992	      4940	eval.c	FUNCTION_78
0x400373c	      0x498b442408	                mov rax, qword [r12 + 8]	      4940	eval.c	FUNCTION_78
0x4003741	          0x39501c	            cmp dword [rax + 0x1c], edx 	      4941	eval.c	FUNCTION_78	IF_9
0x4003744	     0xf8446010000	                            je 0x4003890	      4941	eval.c	FUNCTION_78	IF_9
0x400374a	    0x660f1f440000	                    nop word [rax + rax]	      4941	eval.c	FUNCTION_78	IF_9
0x4003750	            0x31c0	                            xor eax, eax	      4922	eval.c	FUNCTION_78	IF_3	IF_4
0x4003752	    0x832d00000000	               sub dword [0x04003759], 1	      5003	eval.c	FUNCTION_79	SWITCH_1
0x4003759	      0xe97efeffff	                           jmp 0x40035dc	      5004	eval.c	FUNCTION_79	SWITCH_1
0x400375e	            0x6690	                                     nop	      5004	eval.c	FUNCTION_79	SWITCH_1
0x4003760	          0x83fb0a	                            cmp ebx, 0xa	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4003763	     0xf87cbfeffff	                            ja 0x4003634	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4003769	    0xff24dd000000	                       jmp qword [rbx*8]	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4003770	      0x498b442408	                mov rax, qword [r12 + 8]	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4003775	        0x48394508	                cmp qword [rbp + 8], rax	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4003779	           0xf94c0	                                 sete al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x400377c	           0xfb6c0	                           movzx eax, al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x400377f	      0xe958feffff	                           jmp 0x40035dc	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4003784	         0xf1f4000	                         nop dword [rax]	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4003788	            0x31f6	                            xor esi, esi	      4917	eval.c	FUNCTION_78	IF_2
0x400378a	          0x4839f7	                            cmp rdi, rsi	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400378d	            0x75c1	                           jne 0x4003750	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400378f	      0xe945ffffff	                           jmp 0x40036d9	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x4003794	         0xf1f4000	                         nop dword [rax]	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x4003798	      0x498b742408	                mov rsi, qword [r12 + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x400379d	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40037a1	          0x83c201	                              add edx, 1	      5007	eval.c	FUNCTION_79	SWITCH_1
0x40037a4	    0x891500000000	            mov dword [0x040037aa], edx 	      5007	eval.c	FUNCTION_79	SWITCH_1
0x40037aa	      0xb901000000	                              mov ecx, 1	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40037af	          0x4489ea	                           mov edx, r13d	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40037b2	      0xe800000000	                          call 0x40037b7	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40037b7	    0x832d00000000	               sub dword [0x040037be], 1	      5009	eval.c	FUNCTION_79	SWITCH_1
0x40037be	      0xe919feffff	                           jmp 0x40035dc	      5010	eval.c	FUNCTION_79	SWITCH_1
0x40037c3	       0xf1f440000	                   nop dword [rax + rax]	      5010	eval.c	FUNCTION_79	SWITCH_1
0x40037c8	      0x498b742408	                mov rsi, qword [r12 + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037cd	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037d1	          0x83c201	                              add edx, 1	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40037d4	    0x891500000000	            mov dword [0x040037da], edx 	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40037da	      0xb901000000	                              mov ecx, 1	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037df	          0x4489ea	                           mov edx, r13d	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037e2	      0xe800000000	                          call 0x40037e7	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037e7	      0xe966ffffff	                           jmp 0x4003752	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037ec	         0xf1f4000	                         nop dword [rax]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40037f0	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x40037f3	          0x4889e6	                            mov rsi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x40037f6	      0xbd00000000	                              mov ebp, 0	      7087	eval.c	FUNCTION_128
0x40037fb	      0xe800000000	                          call 0x4003800	      7085	eval.c	FUNCTION_128	CALL_1
0x4003800	      0x488d742450	                   lea rsi, [rsp + 0x50]	      7085	eval.c	FUNCTION_128	CALL_1
0x4003805	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4003808	          0x4c89e7	                            mov rdi, r12	      7085	eval.c	FUNCTION_128	CALL_1
0x400380b	        0x480f44c5	                          cmove rax, rbp	      7087	eval.c	FUNCTION_128
0x400380f	          0x4889c3	                            mov rbx, rax	      7087	eval.c	FUNCTION_128
0x4003812	      0xe800000000	                          call 0x4003817	      7085	eval.c	FUNCTION_128	CALL_1
0x4003817	          0x4889ee	                            mov rsi, rbp	      7087	eval.c	FUNCTION_128
0x400381a	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400381d	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x4003821	          0x4585ed	                         test r13d, r13d	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003824	     0xf8525010000	                           jne 0x400394f	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400382a	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400382d	      0xe800000000	                          call 0x4003832	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003832	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003834	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003837	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400383a	      0xe99dfdffff	                           jmp 0x40035dc	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400383f	              0x90	                                     nop	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003840	      0xf20f104508	            movsd xmm0, qword [rbp + 8] 	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003845	            0x31c0	                            xor eax, eax	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003847	      0xba00000000	                              mov edx, 0	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400384c	    0x66410f2e4424	           ucomisd xmm0, qword [r12 + 8]	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003853	           0xf9bc0	                                setnp al	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003856	           0xf45c2	                         cmovne eax, edx	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4003859	      0xe97efdffff	                           jmp 0x40035dc	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400385e	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      4864	eval.c	FUNCTION_75
0x4003862	    0x488db0d80000	                   lea rsi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4003869	          0x4885f6	                           test rsi, rsi	      4917	eval.c	FUNCTION_78	IF_2
0x400386c	     0xf854cfeffff	                           jne 0x40036be	      4917	eval.c	FUNCTION_78	IF_2
0x4003872	      0xe913ffffff	                           jmp 0x400378a	      4917	eval.c	FUNCTION_78	IF_2
0x4003877	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      4864	eval.c	FUNCTION_75
0x400387b	    0x4881c7d80000	                           add rdi, 0xd8	      4864	eval.c	FUNCTION_75
0x4003882	          0x4885ff	                           test rdi, rdi	      4913	eval.c	FUNCTION_78	IF_1
0x4003885	     0xf8510feffff	                           jne 0x400369b	      4913	eval.c	FUNCTION_78	IF_1
0x400388b	      0xe917feffff	                           jmp 0x40036a7	      4913	eval.c	FUNCTION_78	IF_1
0x4003890	            0x85d2	                           test edx, edx	      4943	eval.c	FUNCTION_78	FOR_1
0x4003892	     0xf8edd000000	                           jle 0x4003975	      4943	eval.c	FUNCTION_78	FOR_1
0x4003898	        0x448d72ff	                     lea r14d, [rdx - 1]	      4943	eval.c	FUNCTION_78	FOR_1
0x400389c	            0x31db	                            xor ebx, ebx	      4943	eval.c	FUNCTION_78	FOR_1
0x400389e	        0x4983c601	                              add r14, 1	      4943	eval.c	FUNCTION_78	FOR_1
0x40038a2	        0x49c1e604	                              shl r14, 4	      4943	eval.c	FUNCTION_78	FOR_1
0x40038a6	            0xeb1a	                           jmp 0x40038c2	      4943	eval.c	FUNCTION_78	FOR_1
0x40038a8	     0xf1f84000000	                   nop dword [rax + rax]	      4943	eval.c	FUNCTION_78	FOR_1
0x40038b0	        0x4883c310	                           add rbx, 0x10	      4943	eval.c	FUNCTION_78	FOR_1
0x40038b4	          0x4939de	                            cmp r14, rbx	      4943	eval.c	FUNCTION_78	FOR_1
0x40038b7	     0xf84b8000000	                            je 0x4003975	      4943	eval.c	FUNCTION_78	FOR_1
0x40038bd	      0x498b442408	                mov rax, qword [r12 + 8]	      4943	eval.c	FUNCTION_78	FOR_1
0x40038c2	          0x4889de	                            mov rsi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038c5	        0x48037020	             add rsi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038c9	        0x488b4508	                mov rax, qword [rbp + 8]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038cd	          0x4889df	                            mov rdi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038d0	      0xb901000000	                              mov ecx, 1	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038d5	          0x4489ea	                           mov edx, r13d	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038d8	        0x48037820	             add rdi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038dc	      0xe800000000	                          call 0x40038e1	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038e1	            0x85c0	                           test eax, eax	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038e3	            0x75cb	                           jne 0x40038b0	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038e5	      0xe966feffff	                           jmp 0x4003750	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40038ea	            0x31ff	                            xor edi, edi	      4928	eval.c	FUNCTION_78
0x40038ec	            0x31f6	                            xor esi, esi	      4929	eval.c	FUNCTION_78
0x40038ee	        0x4183fe03	                             cmp r14d, 3	      4929	eval.c	FUNCTION_78
0x40038f2	            0x7406	                            je 0x40038fa	      4929	eval.c	FUNCTION_78
0x40038f4	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      4929	eval.c	FUNCTION_78
0x40038f8	            0x31ff	                            xor edi, edi	      4928	eval.c	FUNCTION_78
0x40038fa	          0x4839f7	                            cmp rdi, rsi	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40038fd	     0xf854dfeffff	                           jne 0x4003750	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x4003903	      0xe91afeffff	                           jmp 0x4003722	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x4003908	     0xf1f84000000	                   nop dword [rax + rax]	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x4003910	          0x4c89fe	                            mov rsi, r15	      4916	eval.c	FUNCTION_78	CALL_2
0x4003913	      0xe951ffffff	                           jmp 0x4003869	      4916	eval.c	FUNCTION_78	CALL_2
0x4003918	     0xf1f84000000	                   nop dword [rax + rax]	      4916	eval.c	FUNCTION_78	CALL_2
0x4003920	      0x498b442408	                mov rax, qword [r12 + 8]	      4916	eval.c	FUNCTION_78	CALL_2
0x4003925	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4003928	    0x891500000000	            mov dword [0x0400392e], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400392e	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x4003932	          0x4989c7	                            mov r15, rax	      4912	eval.c	FUNCTION_78	CALL_1
0x4003935	      0xe948ffffff	                           jmp 0x4003882	      4912	eval.c	FUNCTION_78	CALL_1
0x400393a	    0x660f1f440000	                    nop word [rax + rax]	      4912	eval.c	FUNCTION_78	CALL_1
0x4003940	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x4003946	      0xe986fcffff	                           jmp 0x40035d1	      4912	eval.c	FUNCTION_78	CALL_1
0x400394b	            0x31f6	                            xor esi, esi	      4929	eval.c	FUNCTION_78
0x400394d	            0xebab	                           jmp 0x40038fa	      4929	eval.c	FUNCTION_78
0x400394f	      0xbaffffff7f	                     mov edx, 0x7fffffff	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003954	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003957	      0xe800000000	                          call 0x400395c	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400395c	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400395e	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003961	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003964	      0xe973fcffff	                           jmp 0x40035dc	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4003969	            0x31d2	                            xor edx, edx	      4939	eval.c	FUNCTION_78
0x400396b	        0x4183fe03	                             cmp r14d, 3	      4940	eval.c	FUNCTION_78
0x400396f	     0xf85c7fdffff	                           jne 0x400373c	      4940	eval.c	FUNCTION_78
0x4003975	      0xb801000000	                              mov eax, 1	      4948	eval.c	FUNCTION_78
0x400397a	      0xe9d3fdffff	                           jmp 0x4003752	      4948	eval.c	FUNCTION_78
0x400397f	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4003982	      0x4d8b7c2408	                mov r15, qword [r12 + 8]	      4989	eval.c	FUNCTION_79	IF_3
0x4003987	    0x891500000000	            mov dword [0x0400398d], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400398d	      0xe9fcfcffff	                           jmp 0x400368e	      4989	eval.c	FUNCTION_79	IF_3
0x4003992	            0x85d2	                           test edx, edx	      4941	eval.c	FUNCTION_78	IF_9
0x4003994	     0xf85b6fdffff	                           jne 0x4003750	      4941	eval.c	FUNCTION_78	IF_9
0x400399a	            0xebd9	                           jmp 0x4003975	      4941	eval.c	FUNCTION_78	IF_9
0x400399c	      0xe800000000	                          call 0x40039a1	      5044	eval.c	FUNCTION_79
0x40039a1	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x40039a7	            0xeb85	                           jmp 0x400392e	      4912	eval.c	FUNCTION_78	CALL_1
get_var_tv	DO,0:WHILE,0:FOR,0:ELSE,1:IF,5:SWITCH,0:CALL,4:functions,0	58
0x4005b40	          0x4863f6	                         movsxd rsi, esi	      6654	eval.c	FUNCTION_116
0x4005b43	            0x4157	                                push r15	      6647	eval.c	FUNCTION_116
0x4005b45	            0x4156	                                push r14	      6647	eval.c	FUNCTION_116
0x4005b47	            0x4155	                                push r13	      6647	eval.c	FUNCTION_116
0x4005b49	            0x4154	                                push r12	      6647	eval.c	FUNCTION_116
0x4005b4b	          0x4989d4	                            mov r12, rdx	      6647	eval.c	FUNCTION_116
0x4005b4e	              0x55	                                push rbp	      6647	eval.c	FUNCTION_116
0x4005b4f	              0x53	                                push rbx	      6647	eval.c	FUNCTION_116
0x4005b50	        0x488d1c37	                    lea rbx, [rdi + rsi]	      6654	eval.c	FUNCTION_116
0x4005b54	          0x4489ca	                            mov edx, r9d	      6660	eval.c	FUNCTION_116	CALL_1
0x4005b57	            0x31f6	                            xor esi, esi	      6660	eval.c	FUNCTION_116	CALL_1
0x4005b59	          0x4889fd	                            mov rbp, rdi	      6647	eval.c	FUNCTION_116
0x4005b5c	        0x4883ec08	                              sub rsp, 8	      6647	eval.c	FUNCTION_116
0x4005b60	        0x440fb633	                  movzx r14d, byte [rbx]	      6654	eval.c	FUNCTION_116
0x4005b64	          0xc60300	                       mov byte [rbx], 0	      6655	eval.c	FUNCTION_116
0x4005b67	          0x4989cf	                            mov r15, rcx	      6647	eval.c	FUNCTION_116
0x4005b6a	          0x4589c5	                           mov r13d, r8d	      6647	eval.c	FUNCTION_116
0x4005b6d	      0xe800000000	                          call 0x4005b72	      6660	eval.c	FUNCTION_116	CALL_1
0x4005b72	          0x4885c0	                           test rax, rax	      6661	eval.c	FUNCTION_116	IF_1
0x4005b75	            0x7449	                            je 0x4005bc0	      6661	eval.c	FUNCTION_116	IF_1
0x4005b77	          0x4d85ff	                           test r15, r15	      6664	eval.c	FUNCTION_116	IF_1	IF_2
0x4005b7a	            0x7403	                            je 0x4005b7f	      6664	eval.c	FUNCTION_116	IF_1	IF_2
0x4005b7c	          0x498907	                    mov qword [r15], rax	      6665	eval.c	FUNCTION_116	IF_1	IF_2
0x4005b7f	          0x4d85e4	                           test r12, r12	      6674	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005b82	            0x742c	                            je 0x4005bb0	      6674	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005b84	          0x4889c7	                            mov rdi, rax	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005b87	          0x4c89e6	                            mov rsi, r12	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005b8a	      0xe800000000	                          call 0x4005b8f	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4005b8f	      0xb801000000	                              mov eax, 1	      6648	eval.c	FUNCTION_116
0x4005b94	          0x448833	                    mov byte [rbx], r14b	      6677	eval.c	FUNCTION_116
0x4005b97	        0x4883c408	                              add rsp, 8	      6680	eval.c	FUNCTION_116
0x4005b9b	              0x5b	                                 pop rbx	      6680	eval.c	FUNCTION_116
0x4005b9c	              0x5d	                                 pop rbp	      6680	eval.c	FUNCTION_116
0x4005b9d	            0x415c	                                 pop r12	      6680	eval.c	FUNCTION_116
0x4005b9f	            0x415d	                                 pop r13	      6680	eval.c	FUNCTION_116
0x4005ba1	            0x415e	                                 pop r14	      6680	eval.c	FUNCTION_116
0x4005ba3	            0x415f	                                 pop r15	      6680	eval.c	FUNCTION_116
0x4005ba5	              0xc3	                                     ret	      6680	eval.c	FUNCTION_116
0x4005ba6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6680	eval.c	FUNCTION_116
0x4005bb0	      0xb801000000	                              mov eax, 1	      6648	eval.c	FUNCTION_116
0x4005bb5	            0xebdd	                           jmp 0x4005b94	      6648	eval.c	FUNCTION_116
0x4005bb7	    0x660f1f840000	                    nop word [rax + rax]	      6648	eval.c	FUNCTION_116
0x4005bc0	          0x4d85e4	                           test r12, r12	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x4005bc3	            0x7405	                            je 0x4005bca	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x4005bc5	          0x4585ed	                         test r13d, r13d	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x4005bc8	            0x7506	                           jne 0x4005bd0	      6670	eval.c	FUNCTION_116	IF_3	IF_4
0x4005bca	            0x31c0	                            xor eax, eax	      6672	eval.c	FUNCTION_116	IF_3
0x4005bcc	            0xebc6	                           jmp 0x4005b94	      6672	eval.c	FUNCTION_116	IF_3
0x4005bce	            0x6690	                                     nop	      6672	eval.c	FUNCTION_116	IF_3
0x4005bd0	      0xba05000000	                              mov edx, 5	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005bd5	      0xbe00000000	                              mov esi, 0	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005bda	            0x31ff	                            xor edi, edi	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005bdc	      0xe800000000	                          call 0x4005be1	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005be1	          0x4889ee	                            mov rsi, rbp	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005be4	          0x4889c7	                            mov rdi, rax	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005be7	      0xe800000000	                          call 0x4005bec	      6671	eval.c	FUNCTION_116	IF_3	CALL_3
0x4005bec	            0x31c0	                            xor eax, eax	      6672	eval.c	FUNCTION_116	IF_3
0x4005bee	            0xeba4	                           jmp 0x4005b94	      6672	eval.c	FUNCTION_116	IF_3
write_viminfo_varlist	DO,0:WHILE,0:FOR,1:ELSE,0:IF,4:SWITCH,1:CALL,10:functions,0	108
0x40067e0	            0x4156	                                push r14	      8629	eval.c	FUNCTION_164
0x40067e2	            0x4155	                                push r13	      8629	eval.c	FUNCTION_164
0x40067e4	            0x4154	                                push r12	      8629	eval.c	FUNCTION_164
0x40067e6	              0x55	                                push rbp	      8629	eval.c	FUNCTION_164
0x40067e7	          0x4989fc	                            mov r12, rdi	      8629	eval.c	FUNCTION_164
0x40067ea	              0x53	                                push rbx	      8629	eval.c	FUNCTION_164
0x40067eb	      0xbf21000000	                           mov edi, 0x21	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x40067f0	        0x4883ec60	                           sub rsp, 0x60	      8629	eval.c	FUNCTION_164
0x40067f4	    0x64488b042528	                mov rax, qword fs:[0x28]	      8629	eval.c	FUNCTION_164
0x40067fd	      0x4889442458	             mov qword [rsp + 0x58], rax	      8629	eval.c	FUNCTION_164
0x4006802	            0x31c0	                            xor eax, eax	      8629	eval.c	FUNCTION_164
0x4006804	      0xe800000000	                          call 0x4006809	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x4006809	          0x4885c0	                           test rax, rax	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x400680c	            0x746c	                            je 0x400687a	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x400680e	            0x31ff	                            xor edi, edi	      8641	eval.c	FUNCTION_164	CALL_3
0x4006810	      0xba05000000	                              mov edx, 5	      8641	eval.c	FUNCTION_164	CALL_3
0x4006815	      0xbe00000000	                              mov esi, 0	      8641	eval.c	FUNCTION_164	CALL_3
0x400681a	      0xe800000000	                          call 0x400681f	      8641	eval.c	FUNCTION_164	CALL_3
0x400681f	          0x4c89e6	                            mov rsi, r12	      8641	eval.c	FUNCTION_164	CALL_3
0x4006822	          0x4889c7	                            mov rdi, rax	      8641	eval.c	FUNCTION_164	CALL_3
0x4006825	      0xe800000000	                          call 0x400682a	      8641	eval.c	FUNCTION_164	CALL_3
0x400682a	    0x488b05000000	            mov rax, qword [0x04006831] 	      8643	eval.c	FUNCTION_164
0x4006831	    0x488b2d000000	            mov rbp, qword [0x04006838] 	      8644	eval.c	FUNCTION_164	FOR_1
0x4006838	            0x85c0	                           test eax, eax	      8644	eval.c	FUNCTION_164	FOR_1
0x400683a	          0x4189c6	                           mov r14d, eax	      8643	eval.c	FUNCTION_164
0x400683d	            0x7e3b	                           jle 0x400687a	      8644	eval.c	FUNCTION_164	FOR_1
0x400683f	    0x41bd00000000	                             mov r13d, 0	      8644	eval.c	FUNCTION_164	FOR_1
0x4006845	           0xf1f00	                         nop dword [rax]	      8644	eval.c	FUNCTION_164	FOR_1
0x4006848	        0x488b5d08	                mov rbx, qword [rbp + 8]	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x400684c	    0x4881fb000000	                              cmp rbx, 0	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4006853	     0xf84d7000000	                            je 0x4006930	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4006859	          0x4885db	                           test rbx, rbx	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x400685c	     0xf84ce000000	                            je 0x4006930	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4006862	           0xfb603	                   movzx eax, byte [rbx]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006865	        0x4183ee01	                             sub r14d, 1	      8648	eval.c	FUNCTION_164	FOR_1	IF_2
0x4006869	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x400686c	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x400686f	            0x762f	                           jbe 0x40068a0	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006871	        0x4883c510	                           add rbp, 0x10	      8644	eval.c	FUNCTION_164	FOR_1
0x4006875	          0x4585f6	                         test r14d, r14d	      8644	eval.c	FUNCTION_164	FOR_1
0x4006878	            0x75ce	                           jne 0x4006848	      8644	eval.c	FUNCTION_164	FOR_1
0x400687a	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      8676	eval.c	FUNCTION_164
0x400687f	    0x644833042528	                xor rax, qword fs:[0x28]	      8676	eval.c	FUNCTION_164
0x4006888	     0xf85fd000000	                           jne 0x400698b	      8676	eval.c	FUNCTION_164
0x400688e	        0x4883c460	                           add rsp, 0x60	      8676	eval.c	FUNCTION_164
0x4006892	              0x5b	                                 pop rbx	      8676	eval.c	FUNCTION_164
0x4006893	              0x5d	                                 pop rbp	      8676	eval.c	FUNCTION_164
0x4006894	            0x415c	                                 pop r12	      8676	eval.c	FUNCTION_164
0x4006896	            0x415d	                                 pop r13	      8676	eval.c	FUNCTION_164
0x4006898	            0x415e	                                 pop r14	      8676	eval.c	FUNCTION_164
0x400689a	              0xc3	                                     ret	      8676	eval.c	FUNCTION_164
0x400689b	       0xf1f440000	                   nop dword [rax + rax]	      8676	eval.c	FUNCTION_164
0x40068a0	          0x4889df	                            mov rdi, rbx	      8676	eval.c	FUNCTION_164
0x40068a3	      0xe8b89cffff	             call sym.var_flavour.part.0	      8676	eval.c	FUNCTION_164
0x40068a8	          0x83f802	                              cmp eax, 2	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x40068ab	            0x75c4	                           jne 0x4006871	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x40068ad	        0x837bef0a	            cmp dword [rbx - 0x11], 0xa 	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068b1	            0x771d	                            ja 0x40068d0	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068b3	          0x8b43ef	             mov eax, dword [rbx - 0x11]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068b6	    0xff24c5000000	                       jmp qword [rax*8]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068bd	           0xf1f00	                         nop dword [rax]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068c0	    0x41bd00000000	                             mov r13d, 0	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40068d0	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068d3	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068d6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068db	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068e0	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068e3	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068e5	      0xe800000000	                          call 0x40068ea	        97	stdio2.h	FUNCTION_210	CALL_1
0x40068ea	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x40068ee	        0x488d7bef	                   lea rdi, [rbx - 0x11]	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x40068f2	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x40068f4	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x40068f6	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x40068f9	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x40068ff	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x4006904	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x4006909	      0xe800000000	                          call 0x400690e	      5742	eval.c	FUNCTION_88	CALL_1
0x400690e	          0x4885c0	                           test rax, rax	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006911	              0x5a	                                 pop rdx	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006912	              0x59	                                 pop rcx	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006913	            0x740b	                            je 0x4006920	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4006915	          0x4889c6	                            mov rsi, rax	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4006918	          0x4c89e7	                            mov rdi, r12	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x400691b	      0xe800000000	                          call 0x4006920	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4006920	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x4006925	      0xe800000000	                          call 0x400692a	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x400692a	      0xe942ffffff	                           jmp 0x4006871	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x400692f	              0x90	                                     nop	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_10
0x4006930	        0x4883c510	                           add rbp, 0x10	      8644	eval.c	FUNCTION_164	FOR_1
0x4006934	      0xe90fffffff	                           jmp 0x4006848	      8644	eval.c	FUNCTION_164	FOR_1
0x4006939	     0xf1f80000000	                         nop dword [rax]	      8644	eval.c	FUNCTION_164	FOR_1
0x4006940	    0x41bd00000000	                             mov r13d, 0	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006946	            0xeb88	                           jmp 0x40068d0	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006948	     0xf1f84000000	                   nop dword [rax + rax]	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006950	    0x41bd00000000	                             mov r13d, 0	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006956	      0xe975ffffff	                           jmp 0x40068d0	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400695b	       0xf1f440000	                   nop dword [rax + rax]	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006960	    0x41bd00000000	                             mov r13d, 0	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006966	      0xe965ffffff	                           jmp 0x40068d0	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400696b	       0xf1f440000	                   nop dword [rax + rax]	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006970	    0x41bd00000000	                             mov r13d, 0	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006976	      0xe955ffffff	                           jmp 0x40068d0	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400697b	       0xf1f440000	                   nop dword [rax + rax]	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006980	    0x41bd00000000	                             mov r13d, 0	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4006986	      0xe945ffffff	                           jmp 0x40068d0	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400698b	      0xe800000000	          call sym.store_session_globals	      8676	eval.c	FUNCTION_164
call_func_retlist	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,2:functions,0	26
0x40028f0	        0x4883ec28	                           sub rsp, 0x28	      1158	eval.c	FUNCTION_29
0x40028f4	    0x41b801000000	                              mov r8d, 1	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40028fa	          0x4989e1	                             mov r9, rsp	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40028fd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	eval.c	FUNCTION_29
0x4002906	      0x4889442418	             mov qword [rsp + 0x18], rax	      1158	eval.c	FUNCTION_29
0x400290b	            0x31c0	                            xor eax, eax	      1158	eval.c	FUNCTION_29
0x400290d	      0xe800000000	                          call 0x4002912	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002912	            0x85c0	                           test eax, eax	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002914	            0x742a	                            je 0x4002940	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x4002916	        0x833c2405	                      cmp dword [rsp], 5	      1165	eval.c	FUNCTION_29	IF_2
0x400291a	      0x488b442408	                mov rax, qword [rsp + 8]	      1171	eval.c	FUNCTION_29
0x400291f	            0x7527	                           jne 0x4002948	      1165	eval.c	FUNCTION_29	IF_2
0x4002921	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1172	eval.c	FUNCTION_29
0x4002926	    0x644833142528	                xor rdx, qword fs:[0x28]	      1172	eval.c	FUNCTION_29
0x400292f	            0x7523	                           jne 0x4002954	      1172	eval.c	FUNCTION_29
0x4002931	        0x4883c428	                           add rsp, 0x28	      1172	eval.c	FUNCTION_29
0x4002935	              0xc3	                                     ret	      1172	eval.c	FUNCTION_29
0x4002936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1172	eval.c	FUNCTION_29
0x4002940	            0x31c0	                            xor eax, eax	      1163	eval.c	FUNCTION_29	IF_1
0x4002942	            0xebdd	                           jmp 0x4002921	      1163	eval.c	FUNCTION_29	IF_1
0x4002944	         0xf1f4000	                         nop dword [rax]	      1163	eval.c	FUNCTION_29	IF_1
0x4002948	          0x4889e7	                            mov rdi, rsp	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x400294b	      0xe800000000	                          call 0x4002950	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x4002950	            0x31c0	                            xor eax, eax	      1168	eval.c	FUNCTION_29	IF_2
0x4002952	            0xebcd	                           jmp 0x4002921	      1168	eval.c	FUNCTION_29	IF_2
0x4002954	      0xe800000000	                          call 0x4002959	      1172	eval.c	FUNCTION_29
get_tv_string_buf_chk	DO,0:WHILE,0:FOR,0:ELSE,1:IF,3:SWITCH,1:CALL,19:functions,0	109
0x40033b0	          0x833f0a	                    cmp dword [rdi], 0xa	      7104	eval.c	FUNCTION_130	SWITCH_1
0x40033b3	     0xf878e010000	                            ja 0x4003547	      7104	eval.c	FUNCTION_130	SWITCH_1
0x40033b9	              0x55	                                push rbp	      7103	eval.c	FUNCTION_130
0x40033ba	              0x53	                                push rbx	      7103	eval.c	FUNCTION_130
0x40033bb	          0x4889f3	                            mov rbx, rsi	      7103	eval.c	FUNCTION_130
0x40033be	        0x4883ec08	                              sub rsp, 8	      7103	eval.c	FUNCTION_130
0x40033c2	            0x8b07	                    mov eax, dword [rdi]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x40033c4	    0xff24c5000000	                       jmp qword [rax*8]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x40033cb	       0xf1f440000	                   nop dword [rax + rax]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x40033d0	        0x488b4708	                mov rax, qword [rdi + 8]	      7135	eval.c	FUNCTION_130	SWITCH_1
0x40033d4	          0x4885c0	                           test rax, rax	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x40033d7	     0xf8460010000	                            je 0x400353d	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x40033dd	          0x8b5028	            mov edx, dword [rax + 0x28] 	      7140	eval.c	FUNCTION_130	SWITCH_1
0x40033e0	    0x41b800000000	                              mov r8d, 0	      7141	eval.c	FUNCTION_130	SWITCH_1
0x40033e6	            0x85d2	                           test edx, edx	      7141	eval.c	FUNCTION_130	SWITCH_1
0x40033e8	            0x7412	                            je 0x40033fc	      7141	eval.c	FUNCTION_130	SWITCH_1
0x40033ea	          0x83fa01	                              cmp edx, 1	      7142	eval.c	FUNCTION_130	SWITCH_1
0x40033ed	    0x41b800000000	                              mov r8d, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x40033f3	      0xba00000000	                              mov edx, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x40033f8	        0x4c0f47c2	                           cmova r8, rdx	      7142	eval.c	FUNCTION_130	SWITCH_1
0x40033fc	        0x48634810	         movsxd rcx, dword [rax + 0x10] 	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4003400	      0xba00000000	                              mov edx, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4003405	      0xbe41000000	                           mov esi, 0x41	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400340a	          0x4889df	                            mov rdi, rbx	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400340d	            0x31c0	                            xor eax, eax	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400340f	      0xe800000000	                          call 0x4003414	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x4003414	          0x4889d8	                            mov rax, rbx	      7155	eval.c	FUNCTION_130	SWITCH_1
0x4003417	            0xeb3e	                           jmp 0x4003457	      7155	eval.c	FUNCTION_130	SWITCH_1
0x4003419	     0xf1f80000000	                         nop dword [rax]	      7155	eval.c	FUNCTION_130	SWITCH_1
0x4003420	        0x488b6f08	                mov rbp, qword [rdi + 8]	      7162	eval.c	FUNCTION_130	SWITCH_1
0x4003424	      0xbeffffffff	                     mov esi, 0xffffffff	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4003429	          0x4889ef	                            mov rdi, rbp	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x400342c	      0xe800000000	                          call 0x4003431	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4003431	          0x4885ed	                           test rbp, rbp	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x4003434	          0x4989c0	                             mov r8, rax	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x4003437	     0xf84f3000000	                            je 0x4003530	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x400343d	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4003440	      0xba00000000	                              mov edx, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4003445	      0xbe41000000	                           mov esi, 0x41	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400344a	          0x4889df	                            mov rdi, rbx	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400344d	            0x31c0	                            xor eax, eax	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400344f	      0xe800000000	                          call 0x4003454	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4003454	          0x4889d8	                            mov rax, rbx	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x4003457	        0x4883c408	                              add rsp, 8	      7179	eval.c	FUNCTION_130
0x400345b	              0x5b	                                 pop rbx	      7179	eval.c	FUNCTION_130
0x400345c	              0x5d	                                 pop rbp	      7179	eval.c	FUNCTION_130
0x400345d	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
0x400345e	            0x6690	                                     nop	      7179	eval.c	FUNCTION_130
0x4003460	      0xba05000000	                              mov edx, 5	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4003465	      0xbe00000000	                              mov esi, 0	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400346a	            0x31ff	                            xor edi, edi	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400346c	      0xe800000000	                          call 0x4003471	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4003471	          0x4889c7	                            mov rdi, rax	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4003474	      0xe800000000	                          call 0x4003479	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x4003479	        0x4883c408	                              add rsp, 8	      7179	eval.c	FUNCTION_130
0x400347d	            0x31c0	                            xor eax, eax	      7178	eval.c	FUNCTION_130
0x400347f	              0x5b	                                 pop rbx	      7179	eval.c	FUNCTION_130
0x4003480	              0x5d	                                 pop rbp	      7179	eval.c	FUNCTION_130
0x4003481	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
0x4003482	    0x660f1f440000	                    nop word [rax + rax]	      7179	eval.c	FUNCTION_130
0x4003488	        0x488b4f08	                mov rcx, qword [rdi + 8]	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400348c	      0xba00000000	                              mov edx, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x4003491	          0x4889df	                            mov rdi, rbx	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4003494	      0xbe41000000	                           mov esi, 0x41	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4003499	            0x31c0	                            xor eax, eax	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400349b	      0xe800000000	                          call 0x40034a0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x40034a0	        0x4883c408	                              add rsp, 8	      7179	eval.c	FUNCTION_130
0x40034a4	          0x4889d8	                            mov rax, rbx	      7179	eval.c	FUNCTION_130
0x40034a7	              0x5b	                                 pop rbx	      7179	eval.c	FUNCTION_130
0x40034a8	              0x5d	                                 pop rbp	      7179	eval.c	FUNCTION_130
0x40034a9	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
0x40034aa	    0x660f1f440000	                    nop word [rax + rax]	      7179	eval.c	FUNCTION_130
0x40034b0	        0x488b4708	                mov rax, qword [rdi + 8]	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x40034b4	      0xba00000000	                              mov edx, 0	      7128	eval.c	FUNCTION_130	SWITCH_1
0x40034b9	          0x4885c0	                           test rax, rax	      7128	eval.c	FUNCTION_130	SWITCH_1
0x40034bc	        0x480f44c2	                          cmove rax, rdx	      7128	eval.c	FUNCTION_130	SWITCH_1
0x40034c0	            0xeb95	                           jmp 0x4003457	      7128	eval.c	FUNCTION_130	SWITCH_1
0x40034c2	    0x660f1f440000	                    nop word [rax + rax]	      7128	eval.c	FUNCTION_130	SWITCH_1
0x40034c8	      0xba05000000	                              mov edx, 5	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x40034cd	      0xbe00000000	                              mov esi, 0	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x40034d2	            0xeb96	                           jmp 0x400346a	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x40034d4	         0xf1f4000	                         nop dword [rax]	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x40034d8	      0xba05000000	                              mov edx, 5	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x40034dd	      0xbe00000000	                              mov esi, 0	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x40034e2	            0xeb86	                           jmp 0x400346a	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x40034e4	         0xf1f4000	                         nop dword [rax]	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x40034e8	      0xba05000000	                              mov edx, 5	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x40034ed	      0xbe00000000	                              mov esi, 0	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x40034f2	      0xe973ffffff	                           jmp 0x400346a	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x40034f7	    0x660f1f840000	                    nop word [rax + rax]	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x4003500	      0xba05000000	                              mov edx, 5	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4003505	      0xbe00000000	                              mov esi, 0	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400350a	      0xe95bffffff	                           jmp 0x400346a	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400350f	              0x90	                                     nop	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x4003510	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7130	eval.c	FUNCTION_130	SWITCH_1	CALL_11
0x4003514	      0xe8e7cbffff	           call sym.get_var_special_name	      7130	eval.c	FUNCTION_130	SWITCH_1	CALL_11
0x4003519	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x400351c	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x400351f	      0xe800000000	                          call 0x4003524	       110	string3.h	FUNCTION_197	CALL_3
0x4003524	          0x4889d8	                            mov rax, rbx	      7131	eval.c	FUNCTION_130	SWITCH_1
0x4003527	      0xe92bffffff	                           jmp 0x4003457	      7131	eval.c	FUNCTION_130	SWITCH_1
0x400352c	         0xf1f4000	                         nop dword [rax]	      7131	eval.c	FUNCTION_130	SWITCH_1
0x4003530	          0x4889c1	                            mov rcx, rax	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4003533	      0xba00000000	                              mov edx, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x4003538	      0xe954ffffff	                           jmp 0x4003491	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400353d	      0xb800000000	                              mov eax, 0	      7139	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x4003542	      0xe910ffffff	                           jmp 0x4003457	      7139	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x4003547	            0x31c0	                            xor eax, eax	      7178	eval.c	FUNCTION_130
0x4003549	              0xc3	                                     ret	      7179	eval.c	FUNCTION_130
find_name_end	DO,0:WHILE,0:FOR,3:ELSE,4:IF,17:SWITCH,0:CALL,6:functions,0	205
0x4001e30	            0x4157	                                push r15	      6215	eval.c	FUNCTION_98
0x4001e32	            0x4156	                                push r14	      6215	eval.c	FUNCTION_98
0x4001e34	            0x4155	                                push r13	      6215	eval.c	FUNCTION_98
0x4001e36	            0x4154	                                push r12	      6215	eval.c	FUNCTION_98
0x4001e38	              0x55	                                push rbp	      6215	eval.c	FUNCTION_98
0x4001e39	              0x53	                                push rbx	      6215	eval.c	FUNCTION_98
0x4001e3a	        0x4883ec18	                           sub rsp, 0x18	      6215	eval.c	FUNCTION_98
0x4001e3e	          0x4885f6	                           test rsi, rsi	      6221	eval.c	FUNCTION_98	IF_1
0x4001e41	            0x740e	                            je 0x4001e51	      6221	eval.c	FUNCTION_98	IF_1
0x4001e43	    0x48c706000000	                      mov qword [rsi], 0	      6223	eval.c	FUNCTION_98	IF_1
0x4001e4a	    0x48c702000000	                      mov qword [rdx], 0	      6224	eval.c	FUNCTION_98	IF_1
0x4001e51	          0xf6c102	                              test cl, 2	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e54	        0x440fb60f	                   movzx r9d, byte [rdi]	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e58	            0x743e	                            je 0x4001e98	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e5a	          0x4489c8	                            mov eax, r9d	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e5d	          0x4989ff	                            mov r15, rdi	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e60	          0x83e0df	                     and eax, 0xffffffdf	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e63	          0x83e841	                           sub eax, 0x41	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e66	            0x3c19	                            cmp al, 0x19	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e68	        0x410f96c0	                               setbe r8b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e6c	        0x4180f95f	                           cmp r9b, 0x5f	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e70	           0xf94c0	                                 sete al	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e73	          0x4409c0	                             or eax, r8d	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e76	        0x4180f97b	                           cmp r9b, 0x7b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e7a	        0x410f95c2	                              setne r10b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e7e	          0x4438d0	                            cmp al, r10b	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e81	            0x7315	                           jae 0x4001e98	      6228	eval.c	FUNCTION_98	IF_2	CALL_1
0x4001e83	        0x4883c418	                           add rsp, 0x18	      6291	eval.c	FUNCTION_98
0x4001e87	          0x4c89f8	                            mov rax, r15	      6291	eval.c	FUNCTION_98
0x4001e8a	              0x5b	                                 pop rbx	      6291	eval.c	FUNCTION_98
0x4001e8b	              0x5d	                                 pop rbp	      6291	eval.c	FUNCTION_98
0x4001e8c	            0x415c	                                 pop r12	      6291	eval.c	FUNCTION_98
0x4001e8e	            0x415d	                                 pop r13	      6291	eval.c	FUNCTION_98
0x4001e90	            0x415e	                                 pop r14	      6291	eval.c	FUNCTION_98
0x4001e92	            0x415f	                                 pop r15	      6291	eval.c	FUNCTION_98
0x4001e94	              0xc3	                                     ret	      6291	eval.c	FUNCTION_98
0x4001e95	           0xf1f00	                         nop dword [rax]	      6291	eval.c	FUNCTION_98
0x4001e98	          0x4584c9	                           test r9b, r9b	      6231	eval.c	FUNCTION_98	FOR_1
0x4001e9b	     0xf8463020000	                            je 0x4002104	      6231	eval.c	FUNCTION_98	FOR_1
0x4001ea1	          0x83e101	                              and ecx, 1	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ea4	      0x4889542408	                mov qword [rsp + 8], rdx	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ea9	          0x4989f5	                            mov r13, rsi	      6234	eval.c	FUNCTION_98	FOR_1
0x4001eac	          0x4989fe	                            mov r14, rdi	      6234	eval.c	FUNCTION_98	FOR_1
0x4001eaf	          0x4989ff	                            mov r15, rdi	      6231	eval.c	FUNCTION_98	FOR_1
0x4001eb2	            0x31ed	                            xor ebp, ebp	      6231	eval.c	FUNCTION_98	FOR_1
0x4001eb4	            0x31db	                            xor ebx, ebx	      6231	eval.c	FUNCTION_98	FOR_1
0x4001eb6	          0x4189cc	                           mov r12d, ecx	      6234	eval.c	FUNCTION_98	FOR_1
0x4001eb9	            0xeb11	                           jmp 0x4001ecc	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ebb	       0xf1f440000	                   nop dword [rax + rax]	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ec0	          0x4901c7	                            add r15, rax	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001ec3	        0x450fb60f	                   movzx r9d, byte [r15]	      6231	eval.c	FUNCTION_98	FOR_1
0x4001ec7	          0x4584c9	                           test r9b, r9b	      6231	eval.c	FUNCTION_98	FOR_1
0x4001eca	            0x74b7	                            je 0x4001e83	      6231	eval.c	FUNCTION_98	FOR_1
0x4001ecc	        0x410fb6f9	                          movzx edi, r9b	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001ed0	      0xe800000000	                          call 0x4001ed5	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001ed5	            0x85c0	                           test eax, eax	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001ed7	            0x7521	                           jne 0x4001efa	      6232	eval.c	FUNCTION_98	FOR_1	CALL_2
0x4001ed9	        0x4180f97b	                           cmp r9b, 0x7b	      6233	eval.c	FUNCTION_98	FOR_1
0x4001edd	     0xf845d010000	                            je 0x4002040	      6233	eval.c	FUNCTION_98	FOR_1
0x4001ee3	          0x4585e4	                         test r12d, r12d	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ee6	            0x740c	                            je 0x4001ef4	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ee8	        0x4180f95b	                           cmp r9b, 0x5b	      6234	eval.c	FUNCTION_98	FOR_1
0x4001eec	            0x740c	                            je 0x4001efa	      6234	eval.c	FUNCTION_98	FOR_1
0x4001eee	        0x4180f92e	                           cmp r9b, 0x2e	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ef2	            0x7406	                            je 0x4001efa	      6234	eval.c	FUNCTION_98	FOR_1
0x4001ef4	            0x89d8	                            mov eax, ebx	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001ef6	             0x9e8	                             or eax, ebp	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001ef8	            0x7489	                            je 0x4001e83	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001efa	        0x4180f927	                           cmp r9b, 0x27	      6238	eval.c	FUNCTION_98	FOR_1	IF_3
0x4001efe	     0xf8494000000	                            je 0x4001f98	      6238	eval.c	FUNCTION_98	FOR_1	IF_3
0x4001f04	        0x4180f922	                           cmp r9b, 0x22	      6246	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5
0x4001f08	     0xf84d2000000	                            je 0x4001fe0	      6246	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5
0x4001f0e	            0x89d8	                            mov eax, ebx	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001f10	             0x9e8	                             or eax, ebp	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001f12	            0x756c	                           jne 0x4001f80	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001f14	        0x4180f93a	                           cmp r9b, 0x3a	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001f18	     0xf84a2010000	                            je 0x40020c0	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4001f1e	        0x410fb607	                   movzx eax, byte [r15]	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f22	            0x3c5b	                            cmp al, 0x5b	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f24	            0x7466	                            je 0x4001f8c	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f26	            0x3c5d	                            cmp al, 0x5d	      6269	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001f28	     0xf8452010000	                            je 0x4002080	      6269	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4001f2e	            0x85ed	                           test ebp, ebp	      6273	eval.c	FUNCTION_98	FOR_1	IF_13
0x4001f30	            0x751e	                           jne 0x4001f50	      6273	eval.c	FUNCTION_98	FOR_1	IF_13
0x4001f32	        0x410fb607	                   movzx eax, byte [r15]	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001f36	            0x3c7b	                            cmp al, 0x7b	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001f38	     0xf8422010000	                            je 0x4002060	      6275	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4001f3e	            0x3c7d	                            cmp al, 0x7d	      6281	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001f40	     0xf844a010000	                            je 0x4002090	      6281	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6281	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4001f50	    0x8b1500000000	            mov edx, dword [0x04001f56] 	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f56	      0xb801000000	                              mov eax, 1	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f5b	            0x85d2	                           test edx, edx	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f5d	     0xf845dffffff	                            je 0x4001ec0	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f63	          0x4c89ff	                            mov rdi, r15	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f66	    0xff1500000000	                 call qword [0x04001f6c]	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f6c	            0x4898	                                    cdqe	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f6e	      0xe94dffffff	                           jmp 0x4001ec0	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f73	       0xf1f440000	                   nop dword [rax + rax]	      6236	eval.c	FUNCTION_98	FOR_1	CALL_3
0x4001f78	            0x84c0	                             test al, al	      6252	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	IF_7
0x4001f7a	     0xf8403ffffff	                            je 0x4001e83	      6252	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	IF_7
0x4001f80	            0x85db	                           test ebx, ebx	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4001f82	            0x75aa	                           jne 0x4001f2e	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4001f84	        0x410fb607	                   movzx eax, byte [r15]	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f88	            0x3c5b	                            cmp al, 0x5b	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f8a	            0x759a	                           jne 0x4001f26	      6267	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f8c	          0x83c501	                              add ebp, 1	      6268	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f8f	            0xebbf	                           jmp 0x4001f50	      6268	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f91	     0xf1f80000000	                         nop dword [rax]	      6268	eval.c	FUNCTION_98	FOR_1	IF_10	IF_11
0x4001f98	      0x410fb64701	               movzx eax, byte [r15 + 1]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001f9d	        0x498d5701	                      lea rdx, [r15 + 1]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fa1	          0x4989d7	                            mov r15, rdx	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fa4	            0x84c0	                             test al, al	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fa6	            0x7513	                           jne 0x4001fbb	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fa8	            0xebce	                           jmp 0x4001f78	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001faa	    0x660f1f440000	                    nop word [rax + rax]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fb0	          0x4901c7	                            add r15, rax	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fb3	        0x410fb607	                   movzx eax, byte [r15]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fb7	            0x84c0	                             test al, al	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fb9	            0x74bd	                            je 0x4001f78	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fbb	            0x3c27	                            cmp al, 0x27	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fbd	            0x74b9	                            je 0x4001f78	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fbf	    0x8b3500000000	            mov esi, dword [0x04001fc5] 	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fc5	      0xb801000000	                              mov eax, 1	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fca	            0x85f6	                           test esi, esi	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fcc	            0x74e2	                            je 0x4001fb0	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fce	          0x4c89ff	                            mov rdi, r15	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fd1	    0xff1500000000	                 call qword [0x04001fd7]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fd7	            0x4898	                                    cdqe	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fd9	            0xebd5	                           jmp 0x4001fb0	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fdb	       0xf1f440000	                   nop dword [rax + rax]	      6241	eval.c	FUNCTION_98	FOR_1	IF_3	FOR_2	CALL_4
0x4001fe0	      0x410fb64701	               movzx eax, byte [r15 + 1]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001fe5	        0x498d5701	                      lea rdx, [r15 + 1]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001fe9	          0x4989d7	                            mov r15, rdx	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001fec	            0x84c0	                             test al, al	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001fee	            0x7517	                           jne 0x4002007	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ff0	            0xeb86	                           jmp 0x4001f78	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ff2	    0x660f1f440000	                    nop word [rax + rax]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ff8	          0x4901c7	                            add r15, rax	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001ffb	        0x410fb607	                   movzx eax, byte [r15]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4001fff	            0x84c0	                             test al, al	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002001	     0xf8471ffffff	                            je 0x4001f78	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002007	            0x3c22	                            cmp al, 0x22	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002009	     0xf8469ffffff	                            je 0x4001f78	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x400200f	            0x3c5c	                            cmp al, 0x5c	      6250	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4002011	            0x741d	                            je 0x4002030	      6250	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4002013	    0x8b0d00000000	            mov ecx, dword [0x04002019] 	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002019	      0xb801000000	                              mov eax, 1	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x400201e	            0x85c9	                           test ecx, ecx	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002020	            0x74d6	                            je 0x4001ff8	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002022	          0x4c89ff	                            mov rdi, r15	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002025	    0xff1500000000	                 call qword [0x0400202b]	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x400202b	            0x4898	                                    cdqe	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x400202d	            0xebc9	                           jmp 0x4001ff8	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x400202f	              0x90	                                     nop	      6249	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	CALL_5
0x4002030	      0x41807f0101	                   cmp byte [r15 + 1], 1	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4002035	        0x4983dfff	             sbb r15, 0xffffffffffffffff	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4002039	            0xebd8	                           jmp 0x4002013	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x400203b	       0xf1f440000	                   nop dword [rax + rax]	      6251	eval.c	FUNCTION_98	FOR_1	ELSE_1	IF_5	FOR_3	IF_6
0x4002040	            0x89d8	                            mov eax, ebx	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4002042	             0x9e8	                             or eax, ebp	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x4002044	     0xf84d4feffff	                            je 0x4001f1e	      6255	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x400204a	            0x85db	                           test ebx, ebx	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x400204c	     0xf85dcfeffff	                           jne 0x4001f2e	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4002052	      0xe92dffffff	                           jmp 0x4001f84	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4002057	    0x660f1f840000	                    nop word [rax + rax]	      6265	eval.c	FUNCTION_98	FOR_1	IF_10
0x4002060	          0x83c301	                              add ebx, 1	      6277	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14
0x4002063	          0x4d85ed	                           test r13, r13	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4002066	     0xf84e4feffff	                            je 0x4001f50	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x400206c	      0x49837d0000	                      cmp qword [r13], 0	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4002071	     0xf85d9feffff	                           jne 0x4001f50	      6278	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4002077	        0x4d897d00	                    mov qword [r13], r15	      6279	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x400207b	      0xe9d0feffff	                           jmp 0x4001f50	      6279	eval.c	FUNCTION_98	FOR_1	IF_13	IF_14	IF_15
0x4002080	          0x83ed01	                              sub ebp, 1	      6270	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4002083	      0xe9c8feffff	                           jmp 0x4001f50	      6270	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4002088	     0xf1f84000000	                   nop dword [rax + rax]	      6270	eval.c	FUNCTION_98	FOR_1	IF_10	ELSE_3	IF_12
0x4002090	          0x83eb01	                              sub ebx, 1	      6283	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16
0x4002093	          0x4d85ed	                           test r13, r13	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x4002096	     0xf84b4feffff	                            je 0x4001f50	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x400209c	            0x85db	                           test ebx, ebx	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x400209e	     0xf85acfeffff	                           jne 0x4001f50	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020a4	      0x488b442408	                mov rax, qword [rsp + 8]	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020a9	        0x48833800	                      cmp qword [rax], 0	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020ad	     0xf859dfeffff	                           jne 0x4001f50	      6284	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020b3	          0x4c8938	                    mov qword [rax], r15	      6285	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020b6	            0x89eb	                            mov ebx, ebp	      6285	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020b8	      0xe993feffff	                           jmp 0x4001f50	      6285	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020bd	           0xf1f00	                         nop dword [rax]	      6285	eval.c	FUNCTION_98	FOR_1	IF_13	ELSE_4	IF_16	IF_17
0x40020c0	          0x4c89f8	                            mov rax, r15	      6259	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x40020c3	          0x4c29f0	                            sub rax, r14	      6259	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8
0x40020c6	          0x83f801	                              cmp eax, 1	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020c9	            0x741d	                            je 0x40020e8	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020cb	     0xf8e4dfeffff	                           jle 0x4001f1e	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x40020d1	      0x41807fff7d	                cmp byte [r15 - 1], 0x7d	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x40020d6	     0xf8442feffff	                            je 0x4001f1e	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x40020dc	      0xe9a2fdffff	                           jmp 0x4001e83	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x40020e1	     0xf1f80000000	                         nop dword [rax]	      6261	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9
0x40020e8	        0x410fb636	                   movzx esi, byte [r14]	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020ec	      0xbf00000000	                              mov edi, 0	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020f1	      0xe800000000	                          call 0x40020f6	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020f6	          0x4885c0	                           test rax, rax	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020f9	     0xf851ffeffff	                           jne 0x4001f1e	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x40020ff	      0xe97ffdffff	                           jmp 0x4001e83	      6260	eval.c	FUNCTION_98	FOR_1	ELSE_2	IF_8	IF_9	CALL_6
0x4002104	          0x4989ff	                            mov r15, rdi	      6231	eval.c	FUNCTION_98	FOR_1
0x4002107	      0xe977fdffff	                           jmp 0x4001e83	      6231	eval.c	FUNCTION_98	FOR_1
set_vim_var_char	DO,0:WHILE,0:FOR,0:ELSE,1:IF,1:SWITCH,0:CALL,1:functions,0	31
0x4002bd0	              0x53	                                push rbx	      6433	eval.c	FUNCTION_107
0x4002bd1	        0x4883ec20	                           sub rsp, 0x20	      6433	eval.c	FUNCTION_107
0x4002bd5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6433	eval.c	FUNCTION_107
0x4002bde	      0x4889442418	             mov qword [rsp + 0x18], rax	      6433	eval.c	FUNCTION_107
0x4002be3	            0x31c0	                            xor eax, eax	      6433	eval.c	FUNCTION_107
0x4002be5	    0x8b0500000000	            mov eax, dword [0x04002beb] 	      6437	eval.c	FUNCTION_107	IF_1
0x4002beb	            0x85c0	                           test eax, eax	      6437	eval.c	FUNCTION_107	IF_1
0x4002bed	            0x7549	                           jne 0x4002c38	      6437	eval.c	FUNCTION_107	IF_1
0x4002bef	        0x40883c24	                     mov byte [rsp], dil	      6442	eval.c	FUNCTION_107	ELSE_1
0x4002bf3	      0xc644240100	                   mov byte [rsp + 1], 0	      6443	eval.c	FUNCTION_107	ELSE_1
0x4002bf8	          0x4889e3	                            mov rbx, rsp	      6443	eval.c	FUNCTION_107	ELSE_1
0x4002bfb	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4002c00	      0xe800000000	                          call 0x4002c05	      6473	eval.c	FUNCTION_109	CALL_1
0x4002c05	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002c08	    0xc70500000000	               mov dword [0x04002c12], 2	      6474	eval.c	FUNCTION_109
0x4002c12	      0xe800000000	                          call 0x4002c17	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002c17	    0x488905000000	            mov qword [0x04002c1e], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4002c1e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6446	eval.c	FUNCTION_107
0x4002c23	    0x644833042528	                xor rax, qword fs:[0x28]	      6446	eval.c	FUNCTION_107
0x4002c2c	            0x751e	                           jne 0x4002c4c	      6446	eval.c	FUNCTION_107
0x4002c2e	        0x4883c420	                           add rsp, 0x20	      6446	eval.c	FUNCTION_107
0x4002c32	              0x5b	                                 pop rbx	      6446	eval.c	FUNCTION_107
0x4002c33	              0xc3	                                     ret	      6446	eval.c	FUNCTION_107
0x4002c34	         0xf1f4000	                         nop dword [rax]	      6446	eval.c	FUNCTION_107
0x4002c38	          0x4889e6	                            mov rsi, rsp	      6438	eval.c	FUNCTION_107	IF_1
0x4002c3b	          0x4889e3	                            mov rbx, rsp	      6438	eval.c	FUNCTION_107	IF_1
0x4002c3e	    0xff1500000000	                 call qword [0x04002c44]	      6438	eval.c	FUNCTION_107	IF_1
0x4002c44	            0x4898	                                    cdqe	      6438	eval.c	FUNCTION_107	IF_1
0x4002c46	        0xc6040400	                 mov byte [rsp + rax], 0	      6438	eval.c	FUNCTION_107	IF_1
0x4002c4a	            0xebaf	                           jmp 0x4002bfb	      6438	eval.c	FUNCTION_107	IF_1
0x4002c4c	      0xe800000000	                          call 0x4002c51	      6446	eval.c	FUNCTION_107
var_redir_str	DO,0:WHILE,0:FOR,0:ELSE,2:IF,3:SWITCH,0:CALL,4:functions,0	33
0x400a710	    0x48833d000000	               cmp qword [0x0400a718], 0	       519	eval.c	FUNCTION_7	IF_1
0x400a718	            0x746b	                            je 0x400a785	       519	eval.c	FUNCTION_7	IF_1
0x400a71a	              0x55	                                push rbp	       516	eval.c	FUNCTION_7
0x400a71b	              0x53	                                push rbx	       516	eval.c	FUNCTION_7
0x400a71c	          0x4889fd	                            mov rbp, rdi	       516	eval.c	FUNCTION_7
0x400a71f	            0x89f3	                            mov ebx, esi	       516	eval.c	FUNCTION_7
0x400a721	        0x4883ec08	                              sub rsp, 8	       516	eval.c	FUNCTION_7
0x400a725	          0x83feff	             cmp esi, 0xffffffffffffffff	       522	eval.c	FUNCTION_7	IF_2
0x400a728	            0x7426	                            je 0x400a750	       522	eval.c	FUNCTION_7	IF_2
0x400a72a	            0x89de	                            mov esi, ebx	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x400a72c	      0xbf00000000	                              mov edi, 0	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x400a731	      0xe800000000	                          call 0x400a736	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x400a736	          0x83f801	                              cmp eax, 1	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x400a739	            0x7425	                            je 0x400a760	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x400a73b	        0x4883c408	                              add rsp, 8	       534	eval.c	FUNCTION_7
0x400a73f	              0x5b	                                 pop rbx	       534	eval.c	FUNCTION_7
0x400a740	              0x5d	                                 pop rbp	       534	eval.c	FUNCTION_7
0x400a741	      0xe95afeffff	                  jmp sym.var_redir_stop	       533	eval.c	FUNCTION_7	CALL_4
0x400a746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       533	eval.c	FUNCTION_7	CALL_4
0x400a750	      0xe800000000	                          call 0x400a755	       523	eval.c	FUNCTION_7	CALL_1
0x400a755	            0x89c3	                            mov ebx, eax	       523	eval.c	FUNCTION_7	CALL_1
0x400a757	            0xebd1	                           jmp 0x400a72a	       523	eval.c	FUNCTION_7	CALL_1
0x400a759	     0xf1f80000000	                         nop dword [rax]	       523	eval.c	FUNCTION_7	CALL_1
0x400a760	    0x48633d000000	         movsxd rdi, dword [0x0400a767] 	        59	string3.h	FUNCTION_192	CALL_3
0x400a767	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_192	CALL_3
0x400a76a	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x400a76d	    0x48033d000000	             add rdi, qword [0x0400a774]	        59	string3.h	FUNCTION_192	CALL_3
0x400a774	      0xe800000000	                          call 0x400a779	        59	string3.h	FUNCTION_192	CALL_3
0x400a779	     0x11d00000000	             add dword [0x0400a77f], ebx	       530	eval.c	FUNCTION_7	ELSE_1	IF_3
0x400a77f	        0x4883c408	                              add rsp, 8	       534	eval.c	FUNCTION_7
0x400a783	              0x5b	                                 pop rbx	       534	eval.c	FUNCTION_7
0x400a784	              0x5d	                                 pop rbp	       534	eval.c	FUNCTION_7
0x400a785	            0xf3c3	                                     ret	       534	eval.c	FUNCTION_7
ex_lockvar	DO,0:WHILE,0:FOR,0:ELSE,1:IF,2:SWITCH,0:CALL,4:functions,0	39
0x400b640	              0x53	                                push rbx	      2730	eval.c	FUNCTION_53
0x400b641	      0xbaffffffff	                     mov edx, 0xffffffff	      2735	eval.c	FUNCTION_53	IF_1
0x400b646	          0x4889fb	                            mov rbx, rdi	      2730	eval.c	FUNCTION_53
0x400b649	        0x4883ec20	                           sub rsp, 0x20	      2730	eval.c	FUNCTION_53
0x400b64d	          0x488b37	                    mov rsi, qword [rdi]	      2731	eval.c	FUNCTION_53
0x400b650	    0x64488b042528	                mov rax, qword fs:[0x28]	      2730	eval.c	FUNCTION_53
0x400b659	      0x4889442418	             mov qword [rsp + 0x18], rax	      2730	eval.c	FUNCTION_53
0x400b65e	            0x31c0	                            xor eax, eax	      2730	eval.c	FUNCTION_53
0x400b660	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      2734	eval.c	FUNCTION_53	IF_1
0x400b663	      0x4889742410	             mov qword [rsp + 0x10], rsi	      2731	eval.c	FUNCTION_53
0x400b668	            0x85c0	                           test eax, eax	      2734	eval.c	FUNCTION_53	IF_1
0x400b66a	            0x7424	                            je 0x400b690	      2734	eval.c	FUNCTION_53	IF_1
0x400b66c	          0x4889df	                            mov rdi, rbx	      2742	eval.c	FUNCTION_53	CALL_4
0x400b66f	      0xe85cfbffff	                   call sym.ex_unletlock	      2742	eval.c	FUNCTION_53	CALL_4
0x400b674	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2743	eval.c	FUNCTION_53
0x400b679	    0x644833042528	                xor rax, qword fs:[0x28]	      2743	eval.c	FUNCTION_53
0x400b682	            0x7552	                           jne 0x400b6d6	      2743	eval.c	FUNCTION_53
0x400b684	        0x4883c420	                           add rsp, 0x20	      2743	eval.c	FUNCTION_53
0x400b688	              0x5b	                                 pop rbx	      2743	eval.c	FUNCTION_53
0x400b689	              0xc3	                                     ret	      2743	eval.c	FUNCTION_53
0x400b68a	    0x660f1f440000	                    nop word [rax + rax]	      2743	eval.c	FUNCTION_53
0x400b690	           0xfb63e	                   movzx edi, byte [rsi]	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400b693	      0xe800000000	                          call 0x400b698	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400b698	            0x85c0	                           test eax, eax	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400b69a	            0x7514	                           jne 0x400b6b0	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400b69c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x400b6a1	      0xba02000000	                              mov edx, 2	      2732	eval.c	FUNCTION_53
0x400b6a6	            0xebc4	                           jmp 0x400b66c	      2732	eval.c	FUNCTION_53
0x400b6a8	     0xf1f84000000	                   nop dword [rax + rax]	      2732	eval.c	FUNCTION_53
0x400b6b0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400b6b5	      0xe800000000	                          call 0x400b6ba	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400b6ba	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6bf	        0x8944240c	              mov dword [rsp + 0xc], eax	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x400b6c3	      0xe800000000	                          call 0x400b6c8	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6c8	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6cc	          0x4889c6	                            mov rsi, rax	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6cf	      0x4889442410	             mov qword [rsp + 0x10], rax	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6d4	            0xeb96	                           jmp 0x400b66c	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x400b6d6	      0xe800000000	                          call 0x400b6db	      2743	eval.c	FUNCTION_53
string2float	DO,0:WHILE,0:FOR,0:ELSE,0:IF,3:SWITCH,0:CALL,4:functions,0	54
0x4001b80	              0x55	                                push rbp	      5817	eval.c	FUNCTION_91
0x4001b81	              0x53	                                push rbx	      5817	eval.c	FUNCTION_91
0x4001b82	          0x4889f5	                            mov rbp, rsi	      5817	eval.c	FUNCTION_91
0x4001b85	      0xba03000000	                              mov edx, 3	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001b8a	      0xbe00000000	                              mov esi, 0	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001b8f	          0x4889fb	                            mov rbx, rdi	      5817	eval.c	FUNCTION_91
0x4001b92	        0x4883ec18	                           sub rsp, 0x18	      5817	eval.c	FUNCTION_91
0x4001b96	    0x64488b042528	                mov rax, qword fs:[0x28]	      5817	eval.c	FUNCTION_91
0x4001b9f	      0x4889442408	                mov qword [rsp + 8], rax	      5817	eval.c	FUNCTION_91
0x4001ba4	            0x31c0	                            xor eax, eax	      5817	eval.c	FUNCTION_91
0x4001ba6	        0x48893c24	                    mov qword [rsp], rdi	      5818	eval.c	FUNCTION_91
0x4001baa	      0xe800000000	                          call 0x4001baf	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001baf	            0x85c0	                           test eax, eax	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001bb1	            0x752d	                           jne 0x4001be0	      5822	eval.c	FUNCTION_91	IF_1	CALL_1
0x4001bb3	    0xf20f100d0000	         movsd xmm1, qword [0x04001bbb] 	      5824	eval.c	FUNCTION_91	IF_1
0x4001bbb	      0xb803000000	                              mov eax, 3	      5825	eval.c	FUNCTION_91	IF_1
0x4001bc0	      0xf20f114d00	                 movsd qword [rbp], xmm1	      5824	eval.c	FUNCTION_91	IF_1
0x4001bc5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5840	eval.c	FUNCTION_91
0x4001bca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5840	eval.c	FUNCTION_91
0x4001bd3	     0xf8581000000	                           jne 0x4001c5a	      5840	eval.c	FUNCTION_91
0x4001bd9	        0x4883c418	                           add rsp, 0x18	      5840	eval.c	FUNCTION_91
0x4001bdd	              0x5b	                                 pop rbx	      5840	eval.c	FUNCTION_91
0x4001bde	              0x5d	                                 pop rbp	      5840	eval.c	FUNCTION_91
0x4001bdf	              0xc3	                                     ret	      5840	eval.c	FUNCTION_91
0x4001be0	      0xba03000000	                              mov edx, 3	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001be5	      0xbe00000000	                              mov esi, 0	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001bea	          0x4889df	                            mov rdi, rbx	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001bed	      0xe800000000	                          call 0x4001bf2	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001bf2	            0x85c0	                           test eax, eax	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001bf4	            0x751a	                           jne 0x4001c10	      5827	eval.c	FUNCTION_91	IF_2	CALL_2
0x4001bf6	    0xf20f10150000	         movsd xmm2, qword [0x04001bfe] 	      5829	eval.c	FUNCTION_91	IF_2
0x4001bfe	      0xb804000000	                              mov eax, 4	      5830	eval.c	FUNCTION_91	IF_2
0x4001c03	      0xf20f115500	                 movsd qword [rbp], xmm2	      5829	eval.c	FUNCTION_91	IF_2
0x4001c08	            0xebbb	                           jmp 0x4001bc5	      5830	eval.c	FUNCTION_91	IF_2
0x4001c0a	    0x660f1f440000	                    nop word [rax + rax]	      5830	eval.c	FUNCTION_91	IF_2
0x4001c10	      0xba03000000	                              mov edx, 3	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c15	      0xbe00000000	                              mov esi, 0	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c1a	          0x4889df	                            mov rdi, rbx	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c1d	      0xe800000000	                          call 0x4001c22	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c22	            0x85c0	                           test eax, eax	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c24	            0x751a	                           jne 0x4001c40	      5832	eval.c	FUNCTION_91	IF_3	CALL_3
0x4001c26	    0xf20f101d0000	         movsd xmm3, qword [0x04001c2e] 	      5834	eval.c	FUNCTION_91	IF_3
0x4001c2e	      0xb803000000	                              mov eax, 3	      5835	eval.c	FUNCTION_91	IF_3
0x4001c33	      0xf20f115d00	                 movsd qword [rbp], xmm3	      5834	eval.c	FUNCTION_91	IF_3
0x4001c38	            0xeb8b	                           jmp 0x4001bc5	      5835	eval.c	FUNCTION_91	IF_3
0x4001c3a	    0x660f1f440000	                    nop word [rax + rax]	      5835	eval.c	FUNCTION_91	IF_3
0x4001c40	          0x4889e6	                            mov rsi, rsp	      5837	eval.c	FUNCTION_91	CALL_4
0x4001c43	          0x4889df	                            mov rdi, rbx	      5837	eval.c	FUNCTION_91	CALL_4
0x4001c46	      0xe800000000	                          call 0x4001c4b	      5837	eval.c	FUNCTION_91	CALL_4
0x4001c4b	          0x8b0424	                    mov eax, dword [rsp]	      5839	eval.c	FUNCTION_91
0x4001c4e	      0xf20f114500	                 movsd qword [rbp], xmm0	      5838	eval.c	FUNCTION_91
0x4001c53	            0x29d8	                            sub eax, ebx	      5839	eval.c	FUNCTION_91
0x4001c55	      0xe96bffffff	                           jmp 0x4001bc5	      5839	eval.c	FUNCTION_91
0x4001c5a	      0xe800000000	                          call 0x4001c5f	      5840	eval.c	FUNCTION_91
del_menutrans_vars	DO,0:WHILE,0:FOR,1:ELSE,0:IF,2:SWITCH,0:CALL,6:functions,0	45
0x4002fc0	            0x4154	                                push r12	      3070	eval.c	FUNCTION_59
0x4002fc2	              0x55	                                push rbp	      3070	eval.c	FUNCTION_59
0x4002fc3	      0xbf00000000	                              mov edi, 0	      3074	eval.c	FUNCTION_59	CALL_1
0x4002fc8	              0x53	                                push rbx	      3070	eval.c	FUNCTION_59
0x4002fc9	      0xe800000000	                          call 0x4002fce	      3074	eval.c	FUNCTION_59	CALL_1
0x4002fce	    0x488b05000000	            mov rax, qword [0x04002fd5] 	      3075	eval.c	FUNCTION_59
0x4002fd5	    0x488b1d000000	            mov rbx, qword [0x04002fdc] 	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fdc	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fde	            0x89c5	                            mov ebp, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fe0	            0x7e3f	                           jle 0x4003021	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fe2	    0x660f1f440000	                    nop word [rax + rax]	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fe8	    0x8b0500000000	            mov eax, dword [0x04002fee] 	      3076	eval.c	FUNCTION_59	FOR_1
0x4002fee	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4002ff0	            0x752f	                           jne 0x4003021	      3076	eval.c	FUNCTION_59	FOR_1
0x4002ff2	        0x488b7308	                mov rsi, qword [rbx + 8]	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4002ff6	    0x4881fe000000	                              cmp rsi, 0	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4002ffd	            0x7451	                            je 0x4003050	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4002fff	          0x4885f6	                           test rsi, rsi	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4003002	            0x744c	                            je 0x4003050	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4003004	      0xbf00000000	                              mov edi, 0	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003009	      0xb90a000000	                            mov ecx, 0xa	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x400300e	          0x83ed01	                              sub ebp, 1	      3080	eval.c	FUNCTION_59	FOR_1	IF_1
0x4003011	        0x4c8d66ef	                   lea r12, [rsi - 0x11]	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003015	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003017	            0x7417	                            je 0x4003030	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003019	        0x4883c310	                           add rbx, 0x10	      3076	eval.c	FUNCTION_59	FOR_1
0x400301d	            0x85ed	                           test ebp, ebp	      3076	eval.c	FUNCTION_59	FOR_1
0x400301f	            0x75c7	                           jne 0x4002fe8	      3076	eval.c	FUNCTION_59	FOR_1
0x4003021	              0x5b	                                 pop rbx	      3086	eval.c	FUNCTION_59
0x4003022	              0x5d	                                 pop rbp	      3086	eval.c	FUNCTION_59
0x4003023	            0x415c	                                 pop r12	      3086	eval.c	FUNCTION_59
0x4003025	      0xbf00000000	                              mov edi, 0	      3085	eval.c	FUNCTION_59	CALL_6
0x400302a	      0xe900000000	                           jmp 0x400302f	      3085	eval.c	FUNCTION_59	CALL_6
0x400302f	              0x90	                                     nop	      3085	eval.c	FUNCTION_59	CALL_6
0x4003030	          0x4889de	                            mov rsi, rbx	      7449	eval.c	FUNCTION_140	CALL_2
0x4003033	      0xbf00000000	                              mov edi, 0	      7449	eval.c	FUNCTION_140	CALL_2
0x4003038	      0xe800000000	                          call 0x400303d	      7449	eval.c	FUNCTION_140	CALL_2
0x400303d	          0x4c89e7	                            mov rdi, r12	      7450	eval.c	FUNCTION_140	CALL_3
0x4003040	      0xe800000000	                          call 0x4003045	      7450	eval.c	FUNCTION_140	CALL_3
0x4003045	          0x4c89e7	                            mov rdi, r12	      7451	eval.c	FUNCTION_140	CALL_4
0x4003048	      0xe800000000	                          call 0x400304d	      7451	eval.c	FUNCTION_140	CALL_4
0x400304d	            0xebca	                           jmp 0x4003019	      7451	eval.c	FUNCTION_140	CALL_4
0x400304f	              0x90	                                     nop	      7451	eval.c	FUNCTION_140	CALL_4
0x4003050	        0x4883c310	                           add rbx, 0x10	      3076	eval.c	FUNCTION_59	FOR_1
0x4003054	            0xeb92	                           jmp 0x4002fe8	      3076	eval.c	FUNCTION_59	FOR_1
find_var	DO,0:WHILE,0:FOR,0:ELSE,0:IF,3:SWITCH,0:CALL,3:functions,0	47
0x4005a00	            0x4154	                                push r12	      7190	eval.c	FUNCTION_131
0x4005a02	              0x55	                                push rbp	      7190	eval.c	FUNCTION_131
0x4005a03	          0x4889f5	                            mov rbp, rsi	      7190	eval.c	FUNCTION_131
0x4005a06	              0x53	                                push rbx	      7190	eval.c	FUNCTION_131
0x4005a07	          0x4989fc	                            mov r12, rdi	      7190	eval.c	FUNCTION_131
0x4005a0a	            0x89d3	                            mov ebx, edx	      7190	eval.c	FUNCTION_131
0x4005a0c	        0x4883ec10	                           sub rsp, 0x10	      7190	eval.c	FUNCTION_131
0x4005a10	          0x4889e6	                            mov rsi, rsp	      7195	eval.c	FUNCTION_131	CALL_1
0x4005a13	    0x64488b042528	                mov rax, qword fs:[0x28]	      7190	eval.c	FUNCTION_131
0x4005a1c	      0x4889442408	                mov qword [rsp + 8], rax	      7190	eval.c	FUNCTION_131
0x4005a21	            0x31c0	                            xor eax, eax	      7190	eval.c	FUNCTION_131
0x4005a23	      0xe800000000	                          call 0x4005a28	      7195	eval.c	FUNCTION_131	CALL_1
0x4005a28	          0x4885ed	                           test rbp, rbp	      7196	eval.c	FUNCTION_131	IF_1
0x4005a2b	            0x7404	                            je 0x4005a31	      7196	eval.c	FUNCTION_131	IF_1
0x4005a2d	        0x48894500	                    mov qword [rbp], rax	      7197	eval.c	FUNCTION_131	IF_1
0x4005a31	          0x4885c0	                           test rax, rax	      7198	eval.c	FUNCTION_131	IF_2
0x4005a34	            0x745a	                            je 0x4005a90	      7198	eval.c	FUNCTION_131	IF_2
0x4005a36	            0x85db	                           test ebx, ebx	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a38	      0x410fb63424	                   movzx esi, byte [r12]	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a3d	          0x4889c7	                            mov rdi, rax	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a40	           0xf95c3	                                setne bl	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a43	          0x4885ed	                           test rbp, rbp	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a46	           0xf95c2	                                setne dl	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a49	             0x9d3	                             or ebx, edx	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a4b	        0x488b1424	                    mov rdx, qword [rsp]	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a4f	           0xfb6db	                           movzx ebx, bl	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a52	            0x89d9	                            mov ecx, ebx	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a54	      0xe800000000	                          call 0x4005a59	      7200	eval.c	FUNCTION_131	CALL_2
0x4005a59	          0x4885c0	                           test rax, rax	      7201	eval.c	FUNCTION_131	IF_3
0x4005a5c	            0x7422	                            je 0x4005a80	      7201	eval.c	FUNCTION_131	IF_3
0x4005a5e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7206	eval.c	FUNCTION_131
0x4005a63	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7206	eval.c	FUNCTION_131
0x4005a6c	            0x7526	                           jne 0x4005a94	      7206	eval.c	FUNCTION_131
0x4005a6e	        0x4883c410	                           add rsp, 0x10	      7206	eval.c	FUNCTION_131
0x4005a72	              0x5b	                                 pop rbx	      7206	eval.c	FUNCTION_131
0x4005a73	              0x5d	                                 pop rbp	      7206	eval.c	FUNCTION_131
0x4005a74	            0x415c	                                 pop r12	      7206	eval.c	FUNCTION_131
0x4005a76	              0xc3	                                     ret	      7206	eval.c	FUNCTION_131
0x4005a77	    0x660f1f840000	                    nop word [rax + rax]	      7206	eval.c	FUNCTION_131
0x4005a80	            0x89de	                            mov esi, ebx	      7205	eval.c	FUNCTION_131	CALL_3
0x4005a82	          0x4c89e7	                            mov rdi, r12	      7205	eval.c	FUNCTION_131	CALL_3
0x4005a85	      0xe800000000	                          call 0x4005a8a	      7205	eval.c	FUNCTION_131	CALL_3
0x4005a8a	            0xebd2	                           jmp 0x4005a5e	      7205	eval.c	FUNCTION_131	CALL_3
0x4005a8c	         0xf1f4000	                         nop dword [rax]	      7205	eval.c	FUNCTION_131	CALL_3
0x4005a90	            0x31c0	                            xor eax, eax	      7199	eval.c	FUNCTION_131	IF_2
0x4005a92	            0xebca	                           jmp 0x4005a5e	      7199	eval.c	FUNCTION_131	IF_2
0x4005a94	      0xe800000000	                          call 0x4005a99	      7206	eval.c	FUNCTION_131
set_ref_in_item	DO,0:WHILE,0:FOR,4:ELSE,9:IF,22:SWITCH,0:CALL,15:functions,0	234
0x40010a0	            0x4157	                                push r15	      5357	eval.c	FUNCTION_85
0x40010a2	            0x4156	                                push r14	      5357	eval.c	FUNCTION_85
0x40010a4	            0x4155	                                push r13	      5357	eval.c	FUNCTION_85
0x40010a6	            0x4154	                                push r12	      5357	eval.c	FUNCTION_85
0x40010a8	          0x4989cc	                            mov r12, rcx	      5357	eval.c	FUNCTION_85
0x40010ab	              0x55	                                push rbp	      5357	eval.c	FUNCTION_85
0x40010ac	              0x53	                                push rbx	      5357	eval.c	FUNCTION_85
0x40010ad	          0x4889d5	                            mov rbp, rdx	      5357	eval.c	FUNCTION_85
0x40010b0	            0x89f3	                            mov ebx, esi	      5357	eval.c	FUNCTION_85
0x40010b2	        0x4883ec38	                           sub rsp, 0x38	      5357	eval.c	FUNCTION_85
0x40010b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      5357	eval.c	FUNCTION_85
0x40010bf	      0x4889442428	             mov qword [rsp + 0x28], rax	      5357	eval.c	FUNCTION_85
0x40010c4	            0x31c0	                            xor eax, eax	      5357	eval.c	FUNCTION_85
0x40010c6	            0x8b07	                    mov eax, dword [rdi]	      5360	eval.c	FUNCTION_85	IF_1
0x40010c8	          0x83f806	                              cmp eax, 6	      5360	eval.c	FUNCTION_85	IF_1
0x40010cb	            0x7463	                            je 0x4001130	      5360	eval.c	FUNCTION_85	IF_1
0x40010cd	          0x83f805	                              cmp eax, 5	      5386	eval.c	FUNCTION_85	ELSE_3	IF_5
0x40010d0	     0xf8412010000	                            je 0x40011e8	      5386	eval.c	FUNCTION_85	ELSE_3	IF_5
0x40010d6	          0x83f803	                              cmp eax, 3	      5413	eval.c	FUNCTION_85	ELSE_6	IF_9
0x40010d9	     0xf8401030000	                            je 0x40013e0	      5413	eval.c	FUNCTION_85	ELSE_6	IF_9
0x40010df	          0x83f804	                              cmp eax, 4	      5417	eval.c	FUNCTION_85	ELSE_7	IF_10
0x40010e2	     0xf8458020000	                            je 0x4001340	      5417	eval.c	FUNCTION_85	ELSE_7	IF_10
0x40010e8	          0x83f809	                              cmp eax, 9	      5443	eval.c	FUNCTION_85	ELSE_8	IF_13
0x40010eb	     0xf848f000000	                            je 0x4001180	      5443	eval.c	FUNCTION_85	ELSE_8	IF_13
0x40010f1	          0x4531ed	                          xor r13d, r13d	      5358	eval.c	FUNCTION_85
0x40010f4	          0x83f80a	                            cmp eax, 0xa	      5465	eval.c	FUNCTION_85	ELSE_9	IF_17
0x40010f7	     0xf8433010000	                            je 0x4001230	      5465	eval.c	FUNCTION_85	ELSE_9	IF_17
0x40010fd	           0xf1f00	                         nop dword [rax]	      5465	eval.c	FUNCTION_85	ELSE_9	IF_17
0x4001100	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5512	eval.c	FUNCTION_85
0x4001105	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5512	eval.c	FUNCTION_85
0x400110e	          0x4489e8	                           mov eax, r13d	      5512	eval.c	FUNCTION_85
0x4001111	     0xf8514030000	                           jne 0x400142b	      5512	eval.c	FUNCTION_85
0x4001117	        0x4883c438	                           add rsp, 0x38	      5512	eval.c	FUNCTION_85
0x400111b	              0x5b	                                 pop rbx	      5512	eval.c	FUNCTION_85
0x400111c	              0x5d	                                 pop rbp	      5512	eval.c	FUNCTION_85
0x400111d	            0x415c	                                 pop r12	      5512	eval.c	FUNCTION_85
0x400111f	            0x415d	                                 pop r13	      5512	eval.c	FUNCTION_85
0x4001121	            0x415e	                                 pop r14	      5512	eval.c	FUNCTION_85
0x4001123	            0x415f	                                 pop r15	      5512	eval.c	FUNCTION_85
0x4001125	              0xc3	                                     ret	      5512	eval.c	FUNCTION_85
0x4001126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5512	eval.c	FUNCTION_85
0x4001130	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      5362	eval.c	FUNCTION_85	IF_1
0x4001134	          0x4d85ed	                           test r13, r13	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4001137	     0xf849e000000	                            je 0x40011db	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x400113d	        0x41397508	                cmp dword [r13 + 8], esi	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4001141	     0xf8494000000	                            je 0x40011db	      5364	eval.c	FUNCTION_85	IF_1	IF_2
0x4001147	          0x4885d2	                           test rdx, rdx	      5368	eval.c	FUNCTION_85	IF_1	IF_2	IF_3
0x400114a	        0x41897508	                mov dword [r13 + 8], esi	      5367	eval.c	FUNCTION_85	IF_1	IF_2
0x400114e	     0xf84a1020000	                            je 0x40013f5	      5368	eval.c	FUNCTION_85	IF_1	IF_2	IF_3
0x4001154	      0xbf10000000	                           mov edi, 0x10	      5374	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	CALL_2
0x4001159	      0xe800000000	                          call 0x400115e	      5374	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	CALL_2
0x400115e	          0x4885c0	                           test rax, rax	      5375	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4001161	     0xf84a9020000	                            je 0x4001410	      5375	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4001167	        0x488b5500	                    mov rdx, qword [rbp]	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x400116b	        0x4983c510	                           add r13, 0x10	      5379	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x400116f	        0x48894500	                    mov qword [rbp], rax	      5381	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4001173	          0x4c8928	                    mov qword [rax], r13	      5379	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4001176	          0x4531ed	                          xor r13d, r13d	      5358	eval.c	FUNCTION_85
0x4001179	        0x48895008	                mov qword [rax + 8], rdx	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x400117d	            0xeb81	                           jmp 0x4001100	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x400117f	              0x90	                                     nop	      5380	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	ELSE_2
0x4001180	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      5445	eval.c	FUNCTION_85	ELSE_8	IF_13
0x4001184	          0x4d85ed	                           test r13, r13	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001187	            0x7452	                            je 0x40011db	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001189	        0x413b755c	            cmp esi, dword [r13 + 0x5c] 	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x400118d	            0x744c	                            je 0x40011db	      5448	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x400118f	        0x498b4560	            mov rax, qword [r13 + 0x60] 	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x4001193	        0x4189755c	             mov dword [r13 + 0x5c], esi	      5450	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14
0x4001197	          0x4885c0	                           test rax, rax	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x400119a	            0x7417	                            je 0x40011b3	      5451	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x400119c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5455	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15	CALL_9
0x40011a1	    0xc74424100a00	             mov dword [rsp + 0x10], 0xa	      5453	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x40011a9	      0x4889442418	             mov qword [rsp + 0x18], rax	      5454	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15
0x40011ae	      0xe800000000	                          call 0x40011b3	      5455	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_15	CALL_9
0x40011b3	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40011b7	          0x4885c0	                           test rax, rax	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40011ba	            0x741f	                            je 0x40011db	      5457	eval.c	FUNCTION_85	ELSE_8	IF_13	IF_14	IF_16
0x40011bc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x40011c1	          0x4c89e1	                            mov rcx, r12	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x40011c4	          0x4889ea	                            mov rdx, rbp	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x40011c7	            0x89de	                            mov esi, ebx	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x40011c9	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5504	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x40011d1	      0x4889442418	             mov qword [rsp + 0x18], rax	      5505	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x40011d6	      0xe800000000	                          call 0x40011db	      5506	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22	CALL_15
0x40011db	          0x4531ed	                          xor r13d, r13d	      5358	eval.c	FUNCTION_85
0x40011de	      0xe91dffffff	                           jmp 0x4001100	      5358	eval.c	FUNCTION_85
0x40011e3	       0xf1f440000	                   nop dword [rax + rax]	      5358	eval.c	FUNCTION_85
0x40011e8	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      5388	eval.c	FUNCTION_85	ELSE_3	IF_5
0x40011ec	          0x4d85ed	                           test r13, r13	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x40011ef	            0x74ea	                            je 0x40011db	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x40011f1	        0x413b7544	            cmp esi, dword [r13 + 0x44] 	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x40011f5	            0x74e4	                            je 0x40011db	      5390	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x40011f7	          0x4885c9	                           test rcx, rcx	      5394	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7
0x40011fa	        0x41897544	             mov dword [r13 + 0x44], esi	      5393	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6
0x40011fe	     0xf8417020000	                            je 0x400141b	      5394	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7
0x4001204	      0xbf10000000	                           mov edi, 0x10	      5400	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	CALL_4
0x4001209	      0xe800000000	                          call 0x400120e	      5400	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	CALL_4
0x400120e	          0x4885c0	                           test rax, rax	      5402	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4001211	     0xf84f9010000	                            je 0x4001410	      5402	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4001217	        0x498b1424	                    mov rdx, qword [r12]	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x400121b	          0x4c8928	                    mov qword [rax], r13	      5406	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x400121e	          0x4531ed	                          xor r13d, r13d	      5358	eval.c	FUNCTION_85
0x4001221	        0x49890424	                    mov qword [r12], rax	      5408	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4001225	        0x48895008	                mov qword [rax + 8], rdx	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4001229	      0xe9d2feffff	                           jmp 0x4001100	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x400122e	            0x6690	                                     nop	      5407	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	ELSE_4	ELSE_5
0x4001230	        0x4c8b7708	                mov r14, qword [rdi + 8]	      5467	eval.c	FUNCTION_85	ELSE_9	IF_17
0x4001234	          0x4d85f6	                           test r14, r14	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001237	            0x74a2	                            je 0x40011db	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001239	    0x413bb6b80400	           cmp esi, dword [r14 + 0x4b8] 	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001240	            0x7499	                            je 0x40011db	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001242	    0x498d86980400	                  lea rax, [r14 + 0x498]	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001249	        0x4d8d6e58	                   lea r13, [r14 + 0x58]	      5473	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x400124d	    0x4189b6b80400	            mov dword [r14 + 0x4b8], esi	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001254	      0x4889442408	                mov qword [rsp + 8], rax	      5475	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18
0x4001259	        0x4d8b7d00	                    mov r15, qword [r13]	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x400125d	          0x4d85ff	                           test r15, r15	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001260	            0x741f	                            je 0x4001281	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001262	    0x660f1f440000	                    nop word [rax + rax]	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001268	          0x498b3f	                    mov rdi, qword [r15]	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x400126b	          0x4c89e1	                            mov rcx, r12	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x400126e	          0x4889ea	                            mov rdx, rbp	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001271	            0x89de	                            mov esi, ebx	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001273	      0xe800000000	                          call 0x4001278	      5480	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	CALL_11
0x4001278	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      5479	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x400127c	          0x4d85ff	                           test r15, r15	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x400127f	            0x75e7	                           jne 0x4001268	      5478	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_3
0x4001281	    0x4d8bbd800000	            mov r15, qword [r13 + 0x80] 	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001288	          0x4d85ff	                           test r15, r15	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x400128b	            0x7434	                            je 0x40012c1	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x400128d	           0xf1f00	                         nop dword [rax]	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x4001290	        0x498b4708	                mov rax, qword [r15 + 8]	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001294	          0x4885c0	                           test rax, rax	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001297	            0x741f	                            je 0x40012b8	      5483	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x4001299	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x400129e	          0x4c89e1	                            mov rcx, r12	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x40012a1	          0x4889ea	                            mov rdx, rbp	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x40012a4	            0x89de	                            mov esi, ebx	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x40012a6	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5485	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x40012ae	      0x4889442418	             mov qword [rsp + 0x18], rax	      5486	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19
0x40012b3	      0xe800000000	                          call 0x40012b8	      5487	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4	IF_19	CALL_12
0x40012b8	        0x4d8b7f18	            mov r15, qword [r15 + 0x18] 	      5482	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x40012bc	          0x4d85ff	                           test r15, r15	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x40012bf	            0x75cf	                           jne 0x4001290	      5481	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	FOR_4
0x40012c1	    0x498b85980000	            mov rax, qword [r13 + 0x98] 	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x40012c8	          0x4885c0	                           test rax, rax	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x40012cb	            0x741f	                            je 0x40012ec	      5489	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x40012cd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012d2	          0x4c89e1	                            mov rcx, r12	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012d5	          0x4889ea	                            mov rdx, rbp	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012d8	            0x89de	                            mov esi, ebx	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012da	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5491	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x40012e2	      0x4889442418	             mov qword [rsp + 0x18], rax	      5492	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20
0x40012e7	      0xe800000000	                          call 0x40012ec	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012ec	    0x4981c5100100	                          add r13, 0x110	      5493	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2	IF_20	CALL_13
0x40012f3	      0x4c3b6c2408	                cmp r13, qword [rsp + 8]	      5476	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2
0x40012f8	     0xf855bffffff	                           jne 0x4001259	      5476	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	FOR_2
0x40012fe	    0x498b86880400	           mov rax, qword [r14 + 0x488] 	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x4001305	          0x4885c0	                           test rax, rax	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x4001308	            0x741f	                            je 0x4001329	      5496	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x400130a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x400130f	          0x4c89e1	                            mov rcx, r12	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x4001312	          0x4889ea	                            mov rdx, rbp	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x4001315	            0x89de	                            mov esi, ebx	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x4001317	    0xc74424100400	               mov dword [rsp + 0x10], 4	      5498	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x400131f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5499	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21
0x4001324	      0xe800000000	                          call 0x4001329	      5500	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_21	CALL_14
0x4001329	    0x498b86980400	           mov rax, qword [r14 + 0x498] 	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001330	          0x4885c0	                           test rax, rax	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001333	     0xf8583feffff	                           jne 0x40011bc	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001339	      0xe99dfeffff	                           jmp 0x40011db	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x400133e	            0x6690	                                     nop	      5502	eval.c	FUNCTION_85	ELSE_9	IF_17	IF_18	IF_22
0x4001340	        0x4c8b7f08	                mov r15, qword [rdi + 8]	      5419	eval.c	FUNCTION_85	ELSE_7	IF_10
0x4001344	          0x4531ed	                          xor r13d, r13d	      5358	eval.c	FUNCTION_85
0x4001347	          0x4d85ff	                           test r15, r15	      5424	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11
0x400134a	     0xf84b0fdffff	                            je 0x4001100	      5424	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11
0x4001350	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4001354	        0x498b7f08	                mov rdi, qword [r15 + 8]	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4001358	            0x89da	                            mov edx, ebx	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x400135a	      0xe800000000	                          call 0x400135f	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x400135f	          0x4189c5	                           mov r13d, eax	      5426	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	CALL_6
0x4001362	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001366	          0x4885c0	                           test rax, rax	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001369	            0x741f	                            je 0x400138a	      5428	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x400136b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001370	          0x4c89e1	                            mov rcx, r12	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001373	          0x4889ea	                            mov rdx, rbp	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001376	            0x89de	                            mov esi, ebx	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x4001378	    0xc74424100600	               mov dword [rsp + 0x10], 6	      5432	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001380	      0x4889442418	             mov qword [rsp + 0x18], rax	      5433	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12
0x4001385	      0xe800000000	                          call 0x400138a	      5434	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	IF_12	CALL_7
0x400138a	        0x418b471c	            mov eax, dword [r15 + 0x1c] 	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400138e	            0x85c0	                           test eax, eax	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001390	     0xf8e6afdffff	                           jle 0x4001100	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001396	          0x4531f6	                          xor r14d, r14d	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x4001399	            0xeb1d	                           jmp 0x40013b8	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x400139b	       0xf1f440000	                   nop dword [rax + rax]	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x40013a0	    0x41bd01000000	                             mov r13d, 1	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013a6	        0x418d4601	                      lea eax, [r14 + 1]	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013aa	        0x4983c601	                              add r14, 1	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013ae	        0x413b471c	            cmp eax, dword [r15 + 0x1c] 	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x40013b2	     0xf8d48fdffff	                           jge 0x4001100	      5437	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1
0x40013b8	          0x4585ed	                         test r13d, r13d	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013bb	            0x75e3	                           jne 0x40013a0	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013bd	          0x4c89f7	                            mov rdi, r14	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013c0	          0x4c89e1	                            mov rcx, r12	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013c3	          0x4889ea	                            mov rdx, rbp	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013c6	        0x48c1e704	                              shl rdi, 4	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013ca	        0x49037f20	             add rdi, qword [r15 + 0x20]	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013ce	            0x89de	                            mov esi, ebx	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013d0	          0x4531ed	                          xor r13d, r13d	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013d3	      0xe800000000	                          call 0x40013d8	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013d8	            0x85c0	                           test eax, eax	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013da	        0x410f95c5	                              setne r13b	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013de	            0xebc6	                           jmp 0x40013a6	      5438	eval.c	FUNCTION_85	ELSE_7	IF_10	IF_11	FOR_1	CALL_8
0x40013e0	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013e4	            0x89f2	                            mov edx, esi	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013e6	            0x31f6	                            xor esi, esi	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013e8	      0xe800000000	                          call 0x40013ed	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013ed	          0x4189c5	                           mov r13d, eax	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013f0	      0xe90bfdffff	                           jmp 0x4001100	      5415	eval.c	FUNCTION_85	ELSE_6	IF_9	CALL_5
0x40013f5	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x40013f9	          0x4889ca	                            mov rdx, rcx	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x40013fc	      0xe800000000	                          call 0x4001401	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4001401	          0x4189c5	                           mov r13d, eax	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4001404	      0xe9f7fcffff	                           jmp 0x4001100	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4001409	     0xf1f80000000	                         nop dword [rax]	      5370	eval.c	FUNCTION_85	IF_1	IF_2	IF_3	CALL_1
0x4001410	    0x41bd01000000	                             mov r13d, 1	      5376	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x4001416	      0xe9e5fcffff	                           jmp 0x4001100	      5376	eval.c	FUNCTION_85	IF_1	IF_2	ELSE_1	IF_4
0x400141b	          0x4c89ef	                            mov rdi, r13	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x400141e	      0xe800000000	                          call 0x4001423	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4001423	          0x4189c5	                           mov r13d, eax	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x4001426	      0xe9d5fcffff	                           jmp 0x4001100	      5396	eval.c	FUNCTION_85	ELSE_3	IF_5	IF_6	IF_7	CALL_3
0x400142b	      0xe800000000	                  call sym.set_ref_in_ht	      5512	eval.c	FUNCTION_85
assert_equalfile	DO,0:WHILE,0:FOR,1:ELSE,4:IF,8:SWITCH,0:CALL,18:functions,0	119
0x4006df0	            0x4155	                                push r13	      8838	eval.c	FUNCTION_171
0x4006df2	            0x4154	                                push r12	      8838	eval.c	FUNCTION_171
0x4006df4	              0x55	                                push rbp	      8838	eval.c	FUNCTION_171
0x4006df5	              0x53	                                push rbx	      8838	eval.c	FUNCTION_171
0x4006df6	          0x4889fb	                            mov rbx, rdi	      8838	eval.c	FUNCTION_171
0x4006df9	    0x4881ecc80000	                           sub rsp, 0xc8	      8838	eval.c	FUNCTION_171
0x4006e00	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8841	eval.c	FUNCTION_171	CALL_1
0x4006e05	    0x64488b042528	                mov rax, qword fs:[0x28]	      8838	eval.c	FUNCTION_171
0x4006e0e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      8838	eval.c	FUNCTION_171
0x4006e16	            0x31c0	                            xor eax, eax	      8838	eval.c	FUNCTION_171
0x4006e18	      0xe800000000	                          call 0x4006e1d	      8841	eval.c	FUNCTION_171	CALL_1
0x4006e1d	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8842	eval.c	FUNCTION_171	CALL_2
0x4006e21	      0x488d742470	                   lea rsi, [rsp + 0x70]	      8842	eval.c	FUNCTION_171	CALL_2
0x4006e26	          0x4889c5	                            mov rbp, rax	      8841	eval.c	FUNCTION_171	CALL_1
0x4006e29	      0xe800000000	                          call 0x4006e2e	      8842	eval.c	FUNCTION_171	CALL_2
0x4006e2e	          0x4885ed	                           test rbp, rbp	      8847	eval.c	FUNCTION_171	IF_1
0x4006e31	     0xf8411010000	                            je 0x4006f48	      8847	eval.c	FUNCTION_171	IF_1
0x4006e37	          0x4885c0	                           test rax, rax	      8847	eval.c	FUNCTION_171	IF_1
0x4006e3a	          0x4889c3	                            mov rbx, rax	      8847	eval.c	FUNCTION_171	IF_1
0x4006e3d	     0xf8405010000	                            je 0x4006f48	      8847	eval.c	FUNCTION_171	IF_1
0x4006e43	    0x488b05000000	            mov rax, qword [0x04006e4a] 	      8850	eval.c	FUNCTION_171
0x4006e4a	      0xbe00000000	                              mov esi, 0	      8851	eval.c	FUNCTION_171	CALL_3
0x4006e4f	          0x4889ef	                            mov rdi, rbp	      8851	eval.c	FUNCTION_171	CALL_3
0x4006e52	          0xc60000	                       mov byte [rax], 0	      8850	eval.c	FUNCTION_171
0x4006e55	      0xe800000000	                          call 0x4006e5a	      8851	eval.c	FUNCTION_171	CALL_3
0x4006e5a	          0x4885c0	                           test rax, rax	      8852	eval.c	FUNCTION_171	IF_2
0x4006e5d	          0x4989c4	                            mov r12, rax	      8851	eval.c	FUNCTION_171	CALL_3
0x4006e60	          0x4889e9	                            mov rcx, rbp	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4006e63	     0xf8472010000	                            je 0x4006fdb	      8852	eval.c	FUNCTION_171	IF_2
0x4006e69	      0xbe00000000	                              mov esi, 0	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006e6e	          0x4889df	                            mov rdi, rbx	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006e71	      0xe800000000	                          call 0x4006e76	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006e76	          0x4885c0	                           test rax, rax	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4006e79	          0x4989c5	                            mov r13, rax	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4006e7c	     0xf844e010000	                            je 0x4006fd0	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4006e82	            0x31ed	                            xor ebp, ebp	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4006e84	            0xeb1f	                           jmp 0x4006ea5	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4006e86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4006e90	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x4006e93	     0xf84d7000000	                            je 0x4006f70	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x4006e99	            0x39c3	                            cmp ebx, eax	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006e9b	     0xf850f010000	                           jne 0x4006fb0	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006ea1	        0x4883c501	                              add rbp, 1	      8890	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1
0x4006ea5	          0x4c89e7	                            mov rdi, r12	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4006ea8	      0xe800000000	                          call 0x4006ead	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4006ead	          0x4c89ef	                            mov rdi, r13	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x4006eb0	            0x89c3	                            mov ebx, eax	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4006eb2	      0xe800000000	                          call 0x4006eb7	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x4006eb7	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x4006eba	            0x75d4	                           jne 0x4006e90	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x4006ebc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x4006ebf	            0x7437	                            je 0x4006ef8	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x4006ec1	    0x488b05000000	            mov rax, qword [0x04006ec8] 	       110	string3.h	FUNCTION_197	CALL_3
0x4006ec8	    0x48b966697273	          movabs rcx, 0x6966207473726966	       110	string3.h	FUNCTION_197	CALL_3
0x4006ed2	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4006ed5	    0x48b96c652069	          movabs rcx, 0x687320736920656c	       110	string3.h	FUNCTION_197	CALL_3
0x4006edf	    0xc740106f7274	     mov dword [rax + 0x10], 0x6574726f 	       110	string3.h	FUNCTION_197	CALL_3
0x4006ee6	        0x48894808	                mov qword [rax + 8], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4006eea	      0xb972000000	                           mov ecx, 0x72	       110	string3.h	FUNCTION_197	CALL_3
0x4006eef	        0x66894814	               mov word [rax + 0x14], cx	       110	string3.h	FUNCTION_197	CALL_3
0x4006ef3	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4006ef8	          0x4c89e7	                            mov rdi, r12	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4006efb	      0xe800000000	                          call 0x4006f00	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4006f00	          0x4c89ef	                            mov rdi, r13	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x4006f03	      0xe800000000	                          call 0x4006f08	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x4006f08	    0x488b05000000	            mov rax, qword [0x04006f0f] 	      8896	eval.c	FUNCTION_171	IF_8
0x4006f0f	          0x803800	                       cmp byte [rax], 0	      8896	eval.c	FUNCTION_171	IF_8
0x4006f12	            0x7434	                            je 0x4006f48	      8896	eval.c	FUNCTION_171	IF_8
0x4006f14	          0x4889e7	                            mov rdi, rsp	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x4006f17	      0xe800000000	                          call 0x4006f1c	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x4006f1c	    0x488b35000000	            mov rsi, qword [0x04006f23] 	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4006f23	          0x4889e7	                            mov rdi, rsp	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4006f26	      0xe800000000	                          call 0x4006f2b	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4006f2b	          0x4889e7	                            mov rdi, rsp	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x4006f2e	      0xe800000000	                          call 0x4006f33	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x4006f33	          0x4889e7	                            mov rdi, rsp	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x4006f36	      0xe800000000	                          call 0x4006f3b	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x4006f3b	      0xb801000000	                              mov eax, 1	      8902	eval.c	FUNCTION_171	IF_8
0x4006f40	            0xeb08	                           jmp 0x4006f4a	      8902	eval.c	FUNCTION_171	IF_8
0x4006f42	    0x660f1f440000	                    nop word [rax + rax]	      8902	eval.c	FUNCTION_171	IF_8
0x4006f48	            0x31c0	                            xor eax, eax	      8848	eval.c	FUNCTION_171	IF_1
0x4006f4a	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      8905	eval.c	FUNCTION_171
0x4006f52	    0x644833142528	                xor rdx, qword fs:[0x28]	      8905	eval.c	FUNCTION_171
0x4006f5b	     0xf8597000000	                           jne 0x4006ff8	      8905	eval.c	FUNCTION_171
0x4006f61	    0x4881c4c80000	                           add rsp, 0xc8	      8905	eval.c	FUNCTION_171
0x4006f68	              0x5b	                                 pop rbx	      8905	eval.c	FUNCTION_171
0x4006f69	              0x5d	                                 pop rbp	      8905	eval.c	FUNCTION_171
0x4006f6a	            0x415c	                                 pop r12	      8905	eval.c	FUNCTION_171
0x4006f6c	            0x415d	                                 pop r13	      8905	eval.c	FUNCTION_171
0x4006f6e	              0xc3	                                     ret	      8905	eval.c	FUNCTION_171
0x4006f6f	              0x90	                                     nop	      8905	eval.c	FUNCTION_171
0x4006f70	    0x488b05000000	            mov rax, qword [0x04006f77] 	       110	string3.h	FUNCTION_197	CALL_3
0x4006f77	    0x48b97365636f	          movabs rcx, 0x6620646e6f636573	       110	string3.h	FUNCTION_197	CALL_3
0x4006f81	      0xba65720000	                         mov edx, 0x7265	       110	string3.h	FUNCTION_197	CALL_3
0x4006f86	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4006f89	    0x48b9696c6520	          movabs rcx, 0x7320736920656c69	       110	string3.h	FUNCTION_197	CALL_3
0x4006f93	    0xc74010686f72	     mov dword [rax + 0x10], 0x74726f68 	       110	string3.h	FUNCTION_197	CALL_3
0x4006f9a	        0x48894808	                mov qword [rax + 8], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4006f9e	        0x66895014	               mov word [rax + 0x14], dx	       110	string3.h	FUNCTION_197	CALL_3
0x4006fa2	        0xc6401600	                mov byte [rax + 0x16], 0	       110	string3.h	FUNCTION_197	CALL_3
0x4006fa6	      0xe94dffffff	                           jmp 0x4006ef8	       110	string3.h	FUNCTION_197	CALL_3
0x4006fab	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4006fb0	    0x488b3d000000	            mov rdi, qword [0x04006fb7] 	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fb7	          0x4889e9	                            mov rcx, rbp	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fba	      0xba00000000	                              mov edx, 0	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fbf	      0xbe01040000	                          mov esi, 0x401	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fc4	            0x31c0	                            xor eax, eax	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fc6	      0xe800000000	                          call 0x4006fcb	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4006fcb	      0xe928ffffff	                           jmp 0x4006ef8	      8888	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4006fd0	          0x4c89e7	                            mov rdi, r12	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x4006fd3	      0xe800000000	                          call 0x4006fd8	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x4006fd8	          0x4889d9	                            mov rcx, rbx	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006fdb	    0x488b3d000000	            mov rdi, qword [0x04006fe2] 	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006fe2	      0xba00000000	                              mov edx, 0	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006fe7	      0xbe01040000	                          mov esi, 0x401	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006fec	            0x31c0	                            xor eax, eax	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006fee	      0xe800000000	                          call 0x4006ff3	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006ff3	      0xe910ffffff	                           jmp 0x4006f08	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4006ff8	      0xe800000000	                          call 0x4006ffd	      8905	eval.c	FUNCTION_171
assert_bool	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,5:functions,0	60
0x4007610	              0x55	                                push rbp	      8971	eval.c	FUNCTION_174
0x4007611	              0x53	                                push rbx	      8971	eval.c	FUNCTION_174
0x4007612	            0x89f5	                            mov ebp, esi	      8971	eval.c	FUNCTION_174
0x4007614	          0x4889fb	                            mov rbx, rdi	      8971	eval.c	FUNCTION_174
0x4007617	        0x4883ec38	                           sub rsp, 0x38	      8971	eval.c	FUNCTION_174
0x400761b	    0x64488b042528	                mov rax, qword fs:[0x28]	      8971	eval.c	FUNCTION_174
0x4007624	      0x4889442428	             mov qword [rsp + 0x28], rax	      8971	eval.c	FUNCTION_174
0x4007629	            0x31c0	                            xor eax, eax	      8971	eval.c	FUNCTION_174
0x400762b	            0x8b07	                    mov eax, dword [rdi]	      8975	eval.c	FUNCTION_174	IF_1
0x400762d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      8972	eval.c	FUNCTION_174
0x4007635	          0x83f808	                              cmp eax, 8	      8975	eval.c	FUNCTION_174	IF_1
0x4007638	     0xf84a2000000	                            je 0x40076e0	      8975	eval.c	FUNCTION_174	IF_1
0x400763e	          0x83f801	                              cmp eax, 1	      8978	eval.c	FUNCTION_174	IF_2
0x4007641	            0x746d	                            je 0x40076b0	      8978	eval.c	FUNCTION_174	IF_2
0x4007643	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8982	eval.c	FUNCTION_174	IF_2	CALL_2
0x4007648	      0xe800000000	                          call 0x400764d	      8982	eval.c	FUNCTION_174	IF_2	CALL_2
0x400764d	            0x85ed	                           test ebp, ebp	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x400764f	      0xb800000000	                              mov eax, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007654	        0x488d7310	                   lea rsi, [rbx + 0x10]	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007658	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x400765d	      0xba00000000	                              mov edx, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007662	    0x41b904000000	                              mov r9d, 4	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007668	        0x480f45d0	                         cmovne rdx, rax	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x400766c	          0x4989d8	                             mov r8, rbx	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x400766f	            0x31c9	                            xor ecx, ecx	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007671	      0xe800000000	                          call 0x4007676	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4007676	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8986	eval.c	FUNCTION_174	IF_2	CALL_4
0x400767b	      0xe800000000	                          call 0x4007680	      8986	eval.c	FUNCTION_174	IF_2	CALL_4
0x4007680	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x4007685	      0xe800000000	                          call 0x400768a	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x400768a	      0xb801000000	                              mov eax, 1	      8988	eval.c	FUNCTION_174	IF_2
0x400768f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8991	eval.c	FUNCTION_174
0x4007694	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8991	eval.c	FUNCTION_174
0x400769d	            0x7556	                           jne 0x40076f5	      8991	eval.c	FUNCTION_174
0x400769f	        0x4883c438	                           add rsp, 0x38	      8991	eval.c	FUNCTION_174
0x40076a3	              0x5b	                                 pop rbx	      8991	eval.c	FUNCTION_174
0x40076a4	              0x5d	                                 pop rbp	      8991	eval.c	FUNCTION_174
0x40076a5	              0xc3	                                     ret	      8991	eval.c	FUNCTION_174
0x40076a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8991	eval.c	FUNCTION_174
0x40076b0	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076b5	      0xe800000000	                          call 0x40076ba	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076ba	          0x4885c0	                           test rax, rax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076bd	           0xf94c0	                                 sete al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076c0	           0xfb6c0	                           movzx eax, al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076c3	            0x39c5	                            cmp ebp, eax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076c5	     0xf8478ffffff	                            je 0x4007643	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40076cb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      8980	eval.c	FUNCTION_174	IF_2
0x40076cf	            0x85c0	                           test eax, eax	      8980	eval.c	FUNCTION_174	IF_2
0x40076d1	     0xf856cffffff	                           jne 0x4007643	      8980	eval.c	FUNCTION_174	IF_2
0x40076d7	            0x31c0	                            xor eax, eax	      8977	eval.c	FUNCTION_174	IF_1
0x40076d9	            0xebb4	                           jmp 0x400768f	      8977	eval.c	FUNCTION_174	IF_1
0x40076db	       0xf1f440000	                   nop dword [rax + rax]	      8977	eval.c	FUNCTION_174	IF_1
0x40076e0	            0x31c0	                            xor eax, eax	      8976	eval.c	FUNCTION_174	IF_1
0x40076e2	            0x85f6	                           test esi, esi	      8976	eval.c	FUNCTION_174	IF_1
0x40076e4	           0xf95c0	                                setne al	      8976	eval.c	FUNCTION_174	IF_1
0x40076e7	        0x48394708	                cmp qword [rdi + 8], rax	      8976	eval.c	FUNCTION_174	IF_1
0x40076eb	     0xf8552ffffff	                           jne 0x4007643	      8976	eval.c	FUNCTION_174	IF_1
0x40076f1	            0x31c0	                            xor eax, eax	      8977	eval.c	FUNCTION_174	IF_1
0x40076f3	            0xeb9a	                           jmp 0x400768f	      8977	eval.c	FUNCTION_174	IF_1
0x40076f5	      0xe800000000	                          call 0x40076fa	      8991	eval.c	FUNCTION_174
store_session_globals	DO,0:WHILE,0:FOR,2:ELSE,2:IF,9:SWITCH,0:CALL,12:functions,0	148
0x4006990	            0x4157	                                push r15	      8682	eval.c	FUNCTION_165
0x4006992	            0x4156	                                push r14	      8682	eval.c	FUNCTION_165
0x4006994	            0x4155	                                push r13	      8682	eval.c	FUNCTION_165
0x4006996	            0x4154	                                push r12	      8682	eval.c	FUNCTION_165
0x4006998	              0x55	                                push rbp	      8682	eval.c	FUNCTION_165
0x4006999	              0x53	                                push rbx	      8682	eval.c	FUNCTION_165
0x400699a	        0x4883ec08	                              sub rsp, 8	      8682	eval.c	FUNCTION_165
0x400699e	    0x488b05000000	            mov rax, qword [0x040069a5] 	      8688	eval.c	FUNCTION_165
0x40069a5	    0x488b2d000000	            mov rbp, qword [0x040069ac] 	      8689	eval.c	FUNCTION_165	FOR_1
0x40069ac	            0x85c0	                           test eax, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x40069ae	     0xf8e34010000	                           jle 0x4006ae8	      8689	eval.c	FUNCTION_165	FOR_1
0x40069b4	          0x4189c4	                           mov r12d, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x40069b7	          0x4989fd	                            mov r13, rdi	      8689	eval.c	FUNCTION_165	FOR_1
0x40069ba	    0x41be00000000	                             mov r14d, 0	      7087	eval.c	FUNCTION_128
0x40069c0	            0xeb1c	                           jmp 0x40069de	      7087	eval.c	FUNCTION_128
0x40069c2	    0x660f1f440000	                    nop word [rax + rax]	      7087	eval.c	FUNCTION_128
0x40069c8	          0x83f807	                              cmp eax, 7	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40069cb	     0xf842f010000	                            je 0x4006b00	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40069d1	        0x4883c510	                           add rbp, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x40069d5	          0x4585e4	                         test r12d, r12d	      8689	eval.c	FUNCTION_165	FOR_1
0x40069d8	     0xf840a010000	                            je 0x4006ae8	      8689	eval.c	FUNCTION_165	FOR_1
0x40069de	        0x488b5d08	                mov rbx, qword [rbp + 8]	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40069e2	    0x4881fb000000	                              cmp rbx, 0	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40069e9	     0xf8481010000	                            je 0x4006b70	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40069ef	          0x4885db	                           test rbx, rbx	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40069f2	     0xf8478010000	                            je 0x4006b70	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40069f8	          0x8b43ef	             mov eax, dword [rbx - 0x11]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40069fb	        0x4183ec01	                             sub r12d, 1	      8693	eval.c	FUNCTION_165	FOR_1	IF_1
0x40069ff	          0x8d50ff	                      lea edx, [rax - 1]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x4006a02	          0x83fa01	                              cmp edx, 1	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x4006a05	            0x77c1	                            ja 0x40069c8	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x4006a07	           0xfb603	                   movzx eax, byte [rbx]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006a0a	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006a0d	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006a10	            0x77bf	                            ja 0x40069d1	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006a12	          0x4889df	                            mov rdi, rbx	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006a15	        0x488d53ef	                   lea rdx, [rbx - 0x11]	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x4006a19	      0xe8429bffff	             call sym.var_flavour.part.0	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x4006a1e	          0x83f801	                              cmp eax, 1	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x4006a21	            0x75ae	                           jne 0x40069d1	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x4006a23	          0x4889d7	                            mov rdi, rdx	      7085	eval.c	FUNCTION_128	CALL_1
0x4006a26	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4006a2b	      0xe800000000	                          call 0x4006a30	      7085	eval.c	FUNCTION_128	CALL_1
0x4006a30	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4006a33	      0xbe00000000	                              mov esi, 0	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4006a38	        0x490f44c6	                          cmove rax, r14	      7087	eval.c	FUNCTION_128
0x4006a3c	          0x4889c7	                            mov rdi, rax	      7087	eval.c	FUNCTION_128
0x4006a3f	      0xe800000000	                          call 0x4006a44	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4006a44	          0x4885c0	                           test rax, rax	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x4006a47	          0x4989c7	                            mov r15, rax	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4006a4a	     0xf8498000000	                            je 0x4006ae8	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x4006a50	           0xfb600	                   movzx eax, byte [rax]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a53	          0x4c89fa	                            mov rdx, r15	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a56	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a58	            0x7519	                           jne 0x4006a73	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a5a	            0xeb29	                           jmp 0x4006a85	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a5c	         0xf1f4000	                         nop dword [rax]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a60	            0x3c0d	                             cmp al, 0xd	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006a62	     0xf8418010000	                            je 0x4006b80	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006a68	        0x4883c201	                              add rdx, 1	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a6c	           0xfb602	                   movzx eax, byte [rdx]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a6f	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a71	            0x7412	                            je 0x4006a85	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a73	            0x3c0a	                             cmp al, 0xa	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4006a75	            0x75e9	                           jne 0x4006a60	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4006a77	          0xc6026e	                    mov byte [rdx], 0x6e	      8707	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4006a7a	        0x4883c201	                              add rdx, 1	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a7e	           0xfb602	                   movzx eax, byte [rdx]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a81	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a83	            0x75ee	                           jne 0x4006a73	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4006a85	          0x4531c0	                            xor r8d, r8d	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006a88	        0x837bef02	               cmp dword [rbx - 0x11], 2	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006a8c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006a8f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006a94	          0x4d89f9	                             mov r9, r15	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006a97	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006a9c	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006a9f	        0x410f94c0	                                sete r8b	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006aa3	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006aa7	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006aa9	      0x478d440020	               lea r8d, [r8 + r8 + 0x20]	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006aae	            0x4150	                                 push r8	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006ab0	      0xe800000000	                          call 0x4006ab5	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006ab5	            0x85c0	                           test eax, eax	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006ab7	              0x5a	                                 pop rdx	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006ab8	              0x59	                                 pop rcx	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006ab9	     0xf88e1000000	                            js 0x4006ba0	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x4006abf	          0x4c89ef	                            mov rdi, r13	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006ac2	      0xe800000000	                          call 0x4006ac7	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006ac7	            0x85c0	                           test eax, eax	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006ac9	     0xf84d1000000	                            je 0x4006ba0	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x4006acf	          0x4c89ff	                            mov rdi, r15	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_9
0x4006ad2	        0x4883c510	                           add rbp, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x4006ad6	      0xe800000000	                          call 0x4006adb	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_9
0x4006adb	          0x4585e4	                         test r12d, r12d	      8689	eval.c	FUNCTION_165	FOR_1
0x4006ade	     0xf85fafeffff	                           jne 0x40069de	      8689	eval.c	FUNCTION_165	FOR_1
0x4006ae4	         0xf1f4000	                         nop dword [rax]	      8689	eval.c	FUNCTION_165	FOR_1
0x4006ae8	      0xb801000000	                              mov eax, 1	      8744	eval.c	FUNCTION_165
0x4006aed	        0x4883c408	                              add rsp, 8	      8745	eval.c	FUNCTION_165
0x4006af1	              0x5b	                                 pop rbx	      8745	eval.c	FUNCTION_165
0x4006af2	              0x5d	                                 pop rbp	      8745	eval.c	FUNCTION_165
0x4006af3	            0x415c	                                 pop r12	      8745	eval.c	FUNCTION_165
0x4006af5	            0x415d	                                 pop r13	      8745	eval.c	FUNCTION_165
0x4006af7	            0x415e	                                 pop r14	      8745	eval.c	FUNCTION_165
0x4006af9	            0x415f	                                 pop r15	      8745	eval.c	FUNCTION_165
0x4006afb	              0xc3	                                     ret	      8745	eval.c	FUNCTION_165
0x4006afc	         0xf1f4000	                         nop dword [rax]	      8745	eval.c	FUNCTION_165
0x4006b00	           0xfb603	                   movzx eax, byte [rbx]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b03	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b06	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b09	     0xf87c2feffff	                            ja 0x40069d1	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b0f	          0x4889df	                            mov rdi, rbx	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b12	      0xe8499affff	             call sym.var_flavour.part.0	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4006b17	          0x83f801	                              cmp eax, 1	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x4006b1a	     0xf85b1feffff	                           jne 0x40069d1	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_10
0x4006b20	        0x660fefc9	                         pxor xmm1, xmm1	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006b24	    0x41b820000000	                           mov r8d, 0x20	      8729	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x4006b2a	      0xf20f1043f7	             movsd xmm0, qword [rbx - 9]	      8728	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x4006b2f	        0x660f2ec8	                      ucomisd xmm1, xmm0	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006b33	            0x775b	                            ja 0x4006b90	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006b35	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b38	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b3d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b42	          0x4c89ef	                            mov rdi, r13	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b45	      0xb801000000	                              mov eax, 1	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b4a	      0xe800000000	                          call 0x4006b4f	        97	stdio2.h	FUNCTION_210	CALL_1
0x4006b4f	            0x85c0	                           test eax, eax	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_11
0x4006b51	            0x7810	                            js 0x4006b63	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_11
0x4006b53	          0x4c89ef	                            mov rdi, r13	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x4006b56	      0xe800000000	                          call 0x4006b5b	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x4006b5b	            0x85c0	                           test eax, eax	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x4006b5d	     0xf856efeffff	                           jne 0x40069d1	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_12
0x4006b63	            0x31c0	                            xor eax, eax	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4006b65	            0xeb86	                           jmp 0x4006aed	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4006b67	    0x660f1f840000	                    nop word [rax + rax]	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4006b70	        0x4883c510	                           add rbp, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x4006b74	      0xe965feffff	                           jmp 0x40069de	      8689	eval.c	FUNCTION_165	FOR_1
0x4006b79	     0xf1f80000000	                         nop dword [rax]	      8689	eval.c	FUNCTION_165	FOR_1
0x4006b80	          0xc60272	                    mov byte [rdx], 0x72	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006b83	      0xe9e0feffff	                           jmp 0x4006a68	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006b88	     0xf1f84000000	                   nop dword [rax + rax]	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4006b90	    0x660f57050000	        xorpd xmm0, xmmword [0x04006b98]	      8733	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006b98	    0x41b82d000000	                           mov r8d, 0x2d	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006b9e	            0xeb95	                           jmp 0x4006b35	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4006ba0	          0x4c89ff	                            mov rdi, r15	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_8
0x4006ba3	      0xe800000000	                          call 0x4006ba8	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_8
0x4006ba8	            0x31c0	                            xor eax, eax	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x4006baa	      0xe93effffff	                           jmp 0x4006aed	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
echo_string_core	DO,0:WHILE,0:FOR,1:ELSE,6:IF,17:SWITCH,1:CALL,28:functions,0	316
0x40039b0	            0x4157	                                push r15	      5549	eval.c	FUNCTION_87
0x40039b2	            0x4156	                                push r14	      5549	eval.c	FUNCTION_87
0x40039b4	            0x4155	                                push r13	      5549	eval.c	FUNCTION_87
0x40039b6	            0x4154	                                push r12	      5549	eval.c	FUNCTION_87
0x40039b8	          0x4989f4	                            mov r12, rsi	      5549	eval.c	FUNCTION_87
0x40039bb	              0x55	                                push rbp	      5549	eval.c	FUNCTION_87
0x40039bc	              0x53	                                push rbx	      5549	eval.c	FUNCTION_87
0x40039bd	          0x4889d3	                            mov rbx, rdx	      5549	eval.c	FUNCTION_87
0x40039c0	        0x4883ec58	                           sub rsp, 0x58	      5549	eval.c	FUNCTION_87
0x40039c4	    0x8b1500000000	            mov edx, dword [0x040039ca] 	      5553	eval.c	FUNCTION_87	IF_1
0x40039ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      5549	eval.c	FUNCTION_87
0x40039d3	      0x4889442448	             mov qword [rsp + 0x48], rax	      5549	eval.c	FUNCTION_87
0x40039d8	            0x31c0	                            xor eax, eax	      5549	eval.c	FUNCTION_87
0x40039da	          0x83fa63	                           cmp edx, 0x63	      5553	eval.c	FUNCTION_87	IF_1
0x40039dd	            0x7e41	                           jle 0x4003a20	      5553	eval.c	FUNCTION_87	IF_1
0x40039df	    0x448b0d000000	            mov r9d, dword [0x040039e6] 	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40039e6	          0x4585c9	                           test r9d, r9d	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40039e9	            0x745d	                            je 0x4003a48	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40039eb	    0x49c704240000	                      mov qword [r12], 0	      5563	eval.c	FUNCTION_87	IF_1
0x40039f3	      0xb800000000	                              mov eax, 0	      5564	eval.c	FUNCTION_87	IF_1
0x40039f8	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5725	eval.c	FUNCTION_87
0x40039fd	    0x644833342528	                xor rsi, qword fs:[0x28]	      5725	eval.c	FUNCTION_87
0x4003a06	     0xf85f1040000	                           jne 0x4003efd	      5725	eval.c	FUNCTION_87
0x4003a0c	        0x4883c458	                           add rsp, 0x58	      5725	eval.c	FUNCTION_87
0x4003a10	              0x5b	                                 pop rbx	      5725	eval.c	FUNCTION_87
0x4003a11	              0x5d	                                 pop rbp	      5725	eval.c	FUNCTION_87
0x4003a12	            0x415c	                                 pop r12	      5725	eval.c	FUNCTION_87
0x4003a14	            0x415d	                                 pop r13	      5725	eval.c	FUNCTION_87
0x4003a16	            0x415e	                                 pop r14	      5725	eval.c	FUNCTION_87
0x4003a18	            0x415f	                                 pop r15	      5725	eval.c	FUNCTION_87
0x4003a1a	              0xc3	                                     ret	      5725	eval.c	FUNCTION_87
0x4003a1b	       0xf1f440000	                   nop dword [rax + rax]	      5725	eval.c	FUNCTION_87
0x4003a20	          0x83c201	                              add edx, 1	      5566	eval.c	FUNCTION_87
0x4003a23	          0x833f0a	                    cmp dword [rdi], 0xa	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a26	          0x4889fd	                            mov rbp, rdi	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a29	    0x891500000000	            mov dword [0x04003a2f], edx 	      5566	eval.c	FUNCTION_87
0x4003a2f	     0xf87c4030000	                            ja 0x4003df9	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a35	            0x8b07	                    mov eax, dword [rdi]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a37	          0x4189cd	                           mov r13d, ecx	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a3a	    0xff24c5000000	                       jmp qword [rax*8]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a41	     0xf1f80000000	                         nop dword [rax]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4003a48	            0x31ff	                            xor edi, edi	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a4a	      0xba05000000	                              mov edx, 5	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a4f	      0xbe00000000	                              mov esi, 0	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a54	    0xc70500000000	               mov dword [0x04003a5e], 1	      5560	eval.c	FUNCTION_87	IF_1	IF_2
0x4003a5e	      0xe800000000	                          call 0x4003a63	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a63	          0x4889c7	                            mov rdi, rax	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a66	      0xe800000000	                          call 0x4003a6b	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a6b	      0xe97bffffff	                           jmp 0x40039eb	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4003a70	    0x48c706000000	                      mov qword [rsi], 0	      5717	eval.c	FUNCTION_87	SWITCH_1
0x4003a77	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003a7b	      0xe880c6ffff	           call sym.get_var_special_name	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003a80	    0x8b1500000000	            mov edx, dword [0x04003a86] 	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003a86	          0x4889c3	                            mov rbx, rax	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003a89	     0xf1f80000000	                         nop dword [rax]	      5718	eval.c	FUNCTION_87	SWITCH_1	CALL_28
0x4003a90	          0x8d4aff	                      lea ecx, [rdx - 1]	      5722	eval.c	FUNCTION_87	IF_17
0x4003a93	          0x4889d8	                            mov rax, rbx	      5724	eval.c	FUNCTION_87
0x4003a96	            0x85c9	                           test ecx, ecx	      5722	eval.c	FUNCTION_87	IF_17
0x4003a98	    0x890d00000000	            mov dword [0x04003a9e], ecx 	      5722	eval.c	FUNCTION_87	IF_17
0x4003a9e	     0xf8554ffffff	                           jne 0x40039f8	      5722	eval.c	FUNCTION_87	IF_17
0x4003aa4	    0xc70500000000	               mov dword [0x04003aae], 0	      5723	eval.c	FUNCTION_87	IF_17
0x4003aae	      0xe945ffffff	                           jmp 0x40039f8	      5723	eval.c	FUNCTION_87	IF_17
0x4003ab3	       0xf1f440000	                   nop dword [rax + rax]	      5723	eval.c	FUNCTION_87	IF_17
0x4003ab8	    0x48c706000000	                      mov qword [rsi], 0	      5710	eval.c	FUNCTION_87	SWITCH_1
0x4003abf	      0xba00000000	                              mov edx, 0	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ac4	      0xbe41000000	                           mov esi, 0x41	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ac9	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ace	      0xb801000000	                              mov eax, 1	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ad3	          0x4889df	                            mov rdi, rbx	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ad6	      0xe800000000	                          call 0x4003adb	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003adb	    0x8b1500000000	            mov edx, dword [0x04003ae1] 	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x4003ae1	            0xebad	                           jmp 0x4003a90	      5713	eval.c	FUNCTION_87	SWITCH_1
0x4003ae3	       0xf1f440000	                   nop dword [rax + rax]	      5713	eval.c	FUNCTION_87	SWITCH_1
0x4003ae8	        0x488b4708	                mov rax, qword [rdi + 8]	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003aec	          0x4885c0	                           test rax, rax	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003aef	     0xf842b030000	                            je 0x4003e20	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003af5	            0x85c9	                           test ecx, ecx	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003af7	        0x448b7008	               mov r14d, dword [rax + 8]	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003afb	            0x7409	                            je 0x4003b06	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003afd	          0x4439f1	                           cmp ecx, r14d	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003b00	     0xf84bf030000	                            je 0x4003ec5	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003b06	          0x4489ca	                            mov edx, r9d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b09	        0x44896808	               mov dword [rax + 8], r13d	      5683	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x4003b0d	          0x4489ee	                           mov esi, r13d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b10	          0x4889ef	                            mov rdi, rbp	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b13	      0x44894c2408	                mov dword [rsp + 8], r9d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b18	      0xe800000000	                          call 0x4003b1d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b1d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b22	          0x4889c3	                            mov rbx, rax	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b25	        0x49890424	                    mov qword [r12], rax	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4003b29	          0x4585c9	                           test r9d, r9d	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b2c	            0x74ad	                            je 0x4003adb	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b2e	        0x488b4508	                mov rax, qword [rbp + 8]	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b32	    0x8b1500000000	            mov edx, dword [0x04003b38] 	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b38	        0x44897008	               mov dword [rax + 8], r14d	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b3c	      0xe94fffffff	                           jmp 0x4003a90	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b41	     0xf1f80000000	                         nop dword [rax]	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4003b48	        0x488b4708	                mov rax, qword [rdi + 8]	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x4003b4c	          0x4885c0	                           test rax, rax	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x4003b4f	     0xf84cb020000	                            je 0x4003e20	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x4003b55	            0x85c9	                           test ecx, ecx	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003b57	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003b5b	            0x7409	                            je 0x4003b66	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003b5d	          0x4439f1	                           cmp ecx, r14d	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003b60	     0xf8447030000	                            je 0x4003ead	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003b66	          0x4489ca	                            mov edx, r9d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b69	        0x44896844	            mov dword [rax + 0x44], r13d	      5660	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x4003b6d	          0x4489ee	                           mov esi, r13d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b70	          0x4889ef	                            mov rdi, rbp	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b73	      0x44894c2408	                mov dword [rsp + 8], r9d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b78	      0xe800000000	                          call 0x4003b7d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b7d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003b82	          0x4889c3	                            mov rbx, rax	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b85	        0x49890424	                    mov qword [r12], rax	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4003b89	          0x4585c9	                           test r9d, r9d	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003b8c	     0xf8449ffffff	                            je 0x4003adb	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003b92	        0x488b4508	                mov rax, qword [rbp + 8]	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003b96	    0x8b1500000000	            mov edx, dword [0x04003b9c] 	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003b9c	        0x44897044	            mov dword [rax + 0x44], r14d	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003ba0	      0xe9ebfeffff	                           jmp 0x4003a90	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003ba5	           0xf1f00	                         nop dword [rax]	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4003ba8	        0x488b6f08	                mov rbp, qword [rdi + 8]	      5600	eval.c	FUNCTION_87	SWITCH_1
0x4003bac	          0x4885ed	                           test rbp, rbp	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003baf	     0xf847a020000	                            je 0x4003e2f	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003bb5	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4003bb9	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x4003bbc	     0xf841b030000	                            je 0x4003edd	      4862	eval.c	FUNCTION_75	IF_1
0x4003bc2	            0x31f6	                            xor esi, esi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003bc4	      0xe800000000	                          call 0x4003bc9	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003bc9	          0x4989c7	                            mov r15, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003bcc	      0x488d442430	                   lea rax, [rsp + 0x30]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003bd1	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003bd6	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003bdb	          0x4989c6	                            mov r14, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003bde	          0x4889c7	                            mov rdi, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003be1	      0x4889442408	                mov qword [rsp + 8], rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003be6	      0xe800000000	                          call 0x4003beb	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003beb	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003bf0	          0x4c89f7	                            mov rdi, r14	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003bf3	      0xe800000000	                          call 0x4003bf8	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003bf8	          0x4d85ff	                           test r15, r15	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003bfb	            0x7415	                            je 0x4003c12	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003bfd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003c02	          0x4c89fe	                            mov rsi, r15	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003c05	      0xe800000000	                          call 0x4003c0a	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003c0a	          0x4c89ff	                            mov rdi, r15	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003c0d	      0xe800000000	                          call 0x4003c12	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003c12	          0x8b7d1c	            mov edi, dword [rbp + 0x1c] 	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x4003c15	            0x85ff	                           test edi, edi	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x4003c17	     0xf8e82000000	                           jle 0x4003c9f	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x4003c1d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x4003c22	      0xbe00000000	                              mov esi, 0	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x4003c27	      0xe800000000	                          call 0x4003c2c	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x4003c2c	          0x8b751c	            mov esi, dword [rbp + 0x1c] 	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c2f	            0x85f6	                           test esi, esi	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c31	            0x7e5d	                           jle 0x4003c90	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c33	          0x4531ff	                          xor r15d, r15d	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c36	          0x4531f6	                          xor r14d, r14d	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c39	            0xeb1d	                           jmp 0x4003c58	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c3b	       0xf1f440000	                   nop dword [rax + rax]	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c40	          0x4585f6	                         test r14d, r14d	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x4003c43	            0x7e0f	                           jle 0x4003c54	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x4003c45	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003c4a	      0xbe00000000	                              mov esi, 0	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003c4f	      0xe800000000	                          call 0x4003c54	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003c54	        0x4983c710	                           add r15, 0x10	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4003c58	          0x4c89ff	                            mov rdi, r15	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c5b	        0x48037d20	             add rdi, qword [rbp + 0x20]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c5f	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c64	          0x4489e9	                           mov ecx, r13d	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c67	          0x4889da	                            mov rdx, rbx	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c6a	        0x4183c601	                             add r14d, 1	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c6e	      0xe800000000	                          call 0x4003c73	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c73	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c78	          0x4889c6	                            mov rsi, rax	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c7b	      0xe800000000	                          call 0x4003c80	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4003c80	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x4003c85	      0xe800000000	                          call 0x4003c8a	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x4003c8a	        0x4439751c	           cmp dword [rbp + 0x1c], r14d 	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c8e	            0x7fb0	                            jg 0x4003c40	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4003c90	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x4003c95	      0xbe00000000	                              mov esi, 0	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x4003c9a	      0xe800000000	                          call 0x4003c9f	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x4003c9f	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003ca4	            0x744d	                            je 0x4003cf3	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003ca6	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003cab	      0xbe00000000	                              mov esi, 0	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003cb0	          0x4c89ff	                            mov rdi, r15	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003cb3	      0xe800000000	                          call 0x4003cb8	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x4003cb8	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003cbc	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003cc1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003cc6	          0x4489e9	                           mov ecx, r13d	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003cc9	          0x4889da	                            mov rdx, rbx	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003ccc	    0xc74424200600	               mov dword [rsp + 0x20], 6	      5632	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003cd4	      0x4889442428	             mov qword [rsp + 0x28], rax	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x4003cd9	      0xe800000000	                          call 0x4003cde	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003cde	          0x4c89ff	                            mov rdi, r15	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003ce1	          0x4889c6	                            mov rsi, rax	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003ce4	      0xe800000000	                          call 0x4003ce9	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4003ce9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4003cee	      0xe800000000	                          call 0x4003cf3	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4003cf3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x4003cf8	      0xbe00000000	                              mov esi, 0	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x4003cfd	      0xe800000000	                          call 0x4003d02	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x4003d02	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4003d07	    0x8b1500000000	            mov edx, dword [0x04003d0d] 	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4003d0d	        0x49891c24	                    mov qword [r12], rbx	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4003d11	      0xe97afdffff	                           jmp 0x4003a90	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4003d16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4003d20	          0x4585c0	                           test r8d, r8d	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d23	     0xf84d7000000	                            je 0x4003e00	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d29	    0x48c706000000	                      mov qword [rsi], 0	      5588	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d30	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d34	      0xe957fdffff	                           jmp 0x4003a90	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d39	     0xf1f80000000	                         nop dword [rax]	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4003d40	          0x4585c0	                           test r8d, r8d	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d43	     0xf8447010000	                            je 0x4003e90	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d49	    0x448b84249000	            mov r8d, dword [rsp + 0x90] 	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d51	          0x4585c0	                           test r8d, r8d	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d54	     0xf8536010000	                           jne 0x4003e90	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d5a	    0x48c706000000	                      mov qword [rsi], 0	      5573	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d61	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5574	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4003d65	      0xb800000000	                              mov eax, 0	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003d6a	          0x4885db	                           test rbx, rbx	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003d6d	        0x480f44d8	                          cmove rbx, rax	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003d71	      0xe91afdffff	                           jmp 0x4003a90	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003d76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4003d80	    0x48c706000000	                      mov qword [rsi], 0	      5693	eval.c	FUNCTION_87	SWITCH_1
0x4003d87	          0x4889de	                            mov rsi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x4003d8a	      0xe800000000	                          call 0x4003d8f	      7085	eval.c	FUNCTION_128	CALL_1
0x4003d8f	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4003d92	          0x4889c3	                            mov rbx, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x4003d95	    0x8b1500000000	            mov edx, dword [0x04003d9b] 	      7085	eval.c	FUNCTION_128	CALL_1
0x4003d9b	     0xf85effcffff	                           jne 0x4003a90	      7087	eval.c	FUNCTION_128
0x4003da1	      0xbb00000000	                              mov ebx, 0	      7087	eval.c	FUNCTION_128
0x4003da6	      0xe9e5fcffff	                           jmp 0x4003a90	      7087	eval.c	FUNCTION_128
0x4003dab	       0xf1f440000	                   nop dword [rax + rax]	      7087	eval.c	FUNCTION_128
0x4003db0	    0x48c706000000	                      mov qword [rsi], 0	      5699	eval.c	FUNCTION_87	SWITCH_1
0x4003db7	          0x4889de	                            mov rsi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x4003dba	      0xe800000000	                          call 0x4003dbf	      7085	eval.c	FUNCTION_128	CALL_1
0x4003dbf	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4003dc2	          0x4889c3	                            mov rbx, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x4003dc5	      0xb800000000	                              mov eax, 0	      7087	eval.c	FUNCTION_128
0x4003dca	        0x480f44d8	                          cmove rbx, rax	      7087	eval.c	FUNCTION_128
0x4003dce	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x4003dd5	            0x85c0	                           test eax, eax	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x4003dd7	     0xf84fefcffff	                            je 0x4003adb	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x4003ddd	          0x4889df	                            mov rdi, rbx	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003de0	            0x31f6	                            xor esi, esi	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003de2	      0xe800000000	                          call 0x4003de7	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003de7	    0x8b1500000000	            mov edx, dword [0x04003ded] 	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003ded	          0x4889c3	                            mov rbx, rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003df0	        0x49890424	                    mov qword [r12], rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003df4	      0xe997fcffff	                           jmp 0x4003a90	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4003df9	            0x31db	                            xor ebx, ebx	      5551	eval.c	FUNCTION_87
0x4003dfb	      0xe990fcffff	                           jmp 0x4003a90	      5551	eval.c	FUNCTION_87
0x4003e00	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e04	      0xbe01000000	                              mov esi, 1	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e09	      0xe800000000	                          call 0x4003e0e	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e0e	    0x8b1500000000	            mov edx, dword [0x04003e14] 	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e14	          0x4889c3	                            mov rbx, rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e17	        0x49890424	                    mov qword [r12], rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e1b	      0xe970fcffff	                           jmp 0x4003a90	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4003e20	    0x49c704240000	                      mov qword [r12], 0	      5671	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003e28	            0x31db	                            xor ebx, ebx	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003e2a	      0xe961fcffff	                           jmp 0x4003a90	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4003e2f	            0x31f6	                            xor esi, esi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003e31	            0x31ff	                            xor edi, edi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003e33	      0xe800000000	                          call 0x4003e38	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003e38	          0x4889c3	                            mov rbx, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4003e3b	      0x488d442430	                   lea rax, [rsp + 0x30]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e40	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e45	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e4a	          0x4989c7	                            mov r15, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e4d	          0x4889c7	                            mov rdi, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e50	      0x4889442408	                mov qword [rsp + 8], rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e55	      0xe800000000	                          call 0x4003e5a	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4003e5a	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003e5f	          0x4c89ff	                            mov rdi, r15	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003e62	      0xe800000000	                          call 0x4003e67	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4003e67	          0x4885db	                           test rbx, rbx	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003e6a	     0xf8483feffff	                            je 0x4003cf3	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4003e70	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003e75	          0x4889de	                            mov rsi, rbx	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003e78	      0xe800000000	                          call 0x4003e7d	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4003e7d	          0x4889df	                            mov rdi, rbx	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003e80	      0xe800000000	                          call 0x4003e85	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003e85	      0xe969feffff	                           jmp 0x4003cf3	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003e8a	    0x660f1f440000	                    nop word [rax + rax]	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4003e90	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003e94	            0x31f6	                            xor esi, esi	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003e96	      0xe800000000	                          call 0x4003e9b	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003e9b	    0x8b1500000000	            mov edx, dword [0x04003ea1] 	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003ea1	          0x4889c3	                            mov rbx, rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003ea4	        0x49890424	                    mov qword [r12], rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003ea8	      0xe9e3fbffff	                           jmp 0x4003a90	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x4003ead	          0x8b483c	            mov ecx, dword [rax + 0x3c] 	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003eb0	            0x85c9	                           test ecx, ecx	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003eb2	            0x7e41	                           jle 0x4003ef5	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003eb4	    0x48c706000000	                      mov qword [rsi], 0	      5653	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003ebb	      0xbb00000000	                              mov ebx, 0	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003ec0	      0xe9cbfbffff	                           jmp 0x4003a90	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4003ec5	      0x4883781800	               cmp qword [rax + 0x18], 0	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003eca	            0x7421	                            je 0x4003eed	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003ecc	    0x48c706000000	                      mov qword [rsi], 0	      5677	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003ed3	      0xbb00000000	                              mov ebx, 0	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003ed8	      0xe9b3fbffff	                           jmp 0x4003a90	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4003edd	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      4864	eval.c	FUNCTION_75
0x4003ee1	    0x488db8d80000	                   lea rdi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4003ee8	      0xe9d5fcffff	                           jmp 0x4003bc2	      4864	eval.c	FUNCTION_75
0x4003eed	          0x4189ce	                           mov r14d, ecx	      4864	eval.c	FUNCTION_75
0x4003ef0	      0xe911fcffff	                           jmp 0x4003b06	      4864	eval.c	FUNCTION_75
0x4003ef5	          0x4589ee	                          mov r14d, r13d	      4864	eval.c	FUNCTION_75
0x4003ef8	      0xe969fcffff	                           jmp 0x4003b66	      4864	eval.c	FUNCTION_75
0x4003efd	      0xe800000000	                          call 0x4003f02	      5725	eval.c	FUNCTION_87
ex_echo	DO,0:WHILE,1:FOR,1:ELSE,4:IF,14:SWITCH,0:CALL,19:functions,0	193
0x400dbf0	            0x4155	                                push r13	      8009	eval.c	FUNCTION_152
0x400dbf2	            0x4154	                                push r12	      8009	eval.c	FUNCTION_152
0x400dbf4	          0x4989fc	                            mov r12, rdi	      8009	eval.c	FUNCTION_152
0x400dbf7	              0x55	                                push rbp	      8009	eval.c	FUNCTION_152
0x400dbf8	              0x53	                                push rbx	      8009	eval.c	FUNCTION_152
0x400dbf9	        0x4883ec78	                           sub rsp, 0x78	      8009	eval.c	FUNCTION_152
0x400dbfd	          0x488b1f	                    mov rbx, qword [rdi]	      8010	eval.c	FUNCTION_152
0x400dc00	    0x64488b042528	                mov rax, qword fs:[0x28]	      8009	eval.c	FUNCTION_152
0x400dc09	      0x4889442468	             mov qword [rsp + 0x68], rax	      8009	eval.c	FUNCTION_152
0x400dc0e	            0x31c0	                            xor eax, eax	      8009	eval.c	FUNCTION_152
0x400dc10	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      8018	eval.c	FUNCTION_152	IF_1
0x400dc13	        0x48891c24	                    mov qword [rsp], rbx	      8010	eval.c	FUNCTION_152
0x400dc17	            0x85c0	                           test eax, eax	      8018	eval.c	FUNCTION_152	IF_1
0x400dc19	            0x7407	                            je 0x400dc22	      8018	eval.c	FUNCTION_152	IF_1
0x400dc1b	    0x830500000000	               add dword [0x0400dc22], 1	      8019	eval.c	FUNCTION_152	IF_1
0x400dc22	           0xfb613	                   movzx edx, byte [rbx]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc25	            0x84d2	                             test dl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc27	        0x400f95c6	                               setne sil	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc2b	          0x80fa7c	                            cmp dl, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc2e	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc31	          0x4084ce	                            test sil, cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc34	     0xf8467020000	                            je 0x400dea1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc3a	          0x80fa0a	                             cmp dl, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc3d	     0xf845e020000	                            je 0x400dea1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc43	    0x8b1500000000	            mov edx, dword [0x0400dc49] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc49	            0x85d2	                           test edx, edx	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc4b	     0xf8550020000	                           jne 0x400dea1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc51	    0x41bd01000000	                             mov r13d, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc57	      0xbd01000000	                              mov ebp, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc5c	         0xf1f4000	                         nop dword [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dc60	            0x31d2	                            xor edx, edx	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc62	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc67	            0x85c0	                           test eax, eax	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc69	           0xf94c2	                                 sete dl	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc6c	          0x4889e7	                            mov rdi, rsp	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc6f	    0x892d00000000	            mov dword [0x0400dc75], ebp 	      8024	eval.c	FUNCTION_152	WHILE_1
0x400dc75	      0xe800000000	                          call 0x400dc7a	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc7a	            0x85c0	                           test eax, eax	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc7c	     0xf84af010000	                            je 0x400de31	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400dc82	      0x458b442430	            mov r8d, dword [r12 + 0x30] 	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400dc87	    0xc70500000000	               mov dword [0x0400dc91], 0	      8039	eval.c	FUNCTION_152	WHILE_1
0x400dc91	          0x4585c0	                           test r8d, r8d	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400dc94	     0xf85f3000000	                           jne 0x400dd8d	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400dc9a	          0x4585ed	                         test r13d, r13d	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400dc9d	     0xf846d010000	                            je 0x400de10	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400dca3	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400dca9	     0xf8411020000	                            je 0x400dec0	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400dcaf	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcb3	    0x8b0500000000	            mov eax, dword [0x0400dcb9] 	      5053	eval.c	FUNCTION_80
0x400dcb9	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcbc	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcbe	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcc4	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcc9	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcce	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x400dcd3	          0x8d4802	                      lea ecx, [rax + 2]	      5053	eval.c	FUNCTION_80
0x400dcd6	    0x890d00000000	            mov dword [0x0400dcdc], ecx 	      5053	eval.c	FUNCTION_80
0x400dcdc	      0xe800000000	                          call 0x400dce1	      5742	eval.c	FUNCTION_88	CALL_1
0x400dce1	          0x4885c0	                           test rax, rax	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400dce4	          0x4889c3	                            mov rbx, rax	      5742	eval.c	FUNCTION_88	CALL_1
0x400dce7	              0x5e	                                 pop rsi	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400dce8	              0x5f	                                 pop rdi	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400dce9	     0xf8491000000	                            je 0x400dd80	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400dcef	           0xfb600	                   movzx eax, byte [rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dcf2	            0x84c0	                             test al, al	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dcf4	            0x7538	                           jne 0x400dd2e	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dcf6	      0xe985000000	                           jmp 0x400dd80	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dcfb	       0xf1f440000	                   nop dword [rax + rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd00	          0x4889df	                            mov rdi, rbx	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd03	    0xff1500000000	                 call qword [0x0400dd09]	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd09	    0x8b1500000000	            mov edx, dword [0x0400dd0f] 	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400dd0f	          0x4c63e8	                         movsxd r13, eax	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd12	          0x4889df	                            mov rdi, rbx	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400dd15	          0x4489ee	                           mov esi, r13d	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400dd18	      0xe800000000	                          call 0x400dd1d	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400dd1d	      0x4a8d442bff	                lea rax, [rbx + r13 - 1]	      8081	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd22	        0x488d5801	                      lea rbx, [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd26	         0xfb64001	               movzx eax, byte [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd2a	            0x84c0	                             test al, al	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd2c	            0x7452	                            je 0x400dd80	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd2e	    0x8b1500000000	            mov edx, dword [0x0400dd34] 	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd34	            0x85d2	                           test edx, edx	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd36	            0x7548	                           jne 0x400dd80	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd38	          0x8d50f7	                      lea edx, [rax - 9]	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400dd3b	          0x80fa01	                               cmp dl, 1	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400dd3e	     0xf869c000000	                           jbe 0x400dde0	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400dd44	            0x3c0d	                             cmp al, 0xd	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400dd46	     0xf8494000000	                            je 0x400dde0	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400dd4c	    0x8b0d00000000	            mov ecx, dword [0x0400dd52] 	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd52	            0x85c9	                           test ecx, ecx	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd54	            0x75aa	                           jne 0x400dd00	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400dd56	    0x8b1500000000	            mov edx, dword [0x0400dd5c] 	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400dd5c	          0x4889df	                            mov rdi, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400dd5f	      0xbe01000000	                              mov esi, 1	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400dd64	      0xe800000000	                          call 0x400dd69	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400dd69	          0x4889d8	                            mov rax, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400dd6c	        0x488d5801	                      lea rbx, [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd70	         0xfb64001	               movzx eax, byte [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd74	            0x84c0	                             test al, al	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd76	            0x75b6	                           jne 0x400dd2e	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd78	     0xf1f84000000	                   nop dword [rax + rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400dd80	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400dd85	          0x4531ed	                          xor r13d, r13d	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400dd88	      0xe800000000	                          call 0x400dd8d	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400dd8d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400dd92	      0xe800000000	                          call 0x400dd97	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400dd97	        0x488b3c24	                    mov rdi, qword [rsp]	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400dd9b	      0xe800000000	                          call 0x400dda0	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400dda0	          0x4889c3	                            mov rbx, rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400dda3	        0x48890424	                    mov qword [rsp], rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400dda7	           0xfb600	                   movzx eax, byte [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddaa	            0x84c0	                             test al, al	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddac	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddaf	            0x3c7c	                            cmp al, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddb1	           0xf95c2	                                setne dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddb4	            0x84d1	                             test cl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddb6	     0xf84a8000000	                            je 0x400de64	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddbc	            0x3c0a	                             cmp al, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddbe	     0xf84a0000000	                            je 0x400de64	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddc4	    0x8b0500000000	            mov eax, dword [0x0400ddca] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddca	            0x85c0	                           test eax, eax	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddcc	     0xf8592000000	                           jne 0x400de64	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddd2	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ddd7	      0xe984feffff	                           jmp 0x400dc60	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dddc	         0xf1f4000	                         nop dword [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400dde0	            0x3c09	                               cmp al, 9	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400dde2	            0x7404	                            je 0x400dde8	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400dde4	            0x85ed	                           test ebp, ebp	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400dde6	            0x7518	                           jne 0x400de00	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400dde8	           0xfb63b	                   movzx edi, byte [rbx]	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ddeb	    0x8b3500000000	            mov esi, dword [0x0400ddf1] 	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ddf1	      0xe800000000	                          call 0x400ddf6	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ddf6	          0x4889d8	                            mov rax, rbx	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ddf9	      0xe924ffffff	                           jmp 0x400dd22	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ddfe	            0x6690	                                     nop	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400de00	      0xe800000000	                          call 0x400de05	      8068	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10	CALL_10
0x400de05	            0x31ed	                            xor ebp, ebp	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400de07	            0xebdf	                           jmp 0x400dde8	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400de09	     0xf1f80000000	                         nop dword [rax]	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400de10	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de16	     0xf8593feffff	                           jne 0x400dcaf	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de1c	    0x8b3500000000	            mov esi, dword [0x0400de22] 	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de22	      0xbf00000000	                              mov edi, 0	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de27	      0xe800000000	                          call 0x400de2c	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de2c	      0xe97efeffff	                           jmp 0x400dcaf	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400de31	      0xe800000000	                          call 0x400de36	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400de36	            0x85c0	                           test eax, eax	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400de38	            0x751c	                           jne 0x400de56	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400de3a	      0xbe00000000	                              mov esi, 0	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de3f	            0x31ff	                            xor edi, edi	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de41	      0xba05000000	                              mov edx, 5	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de46	      0xe800000000	                          call 0x400de4b	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de4b	          0x4889de	                            mov rsi, rbx	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de4e	          0x4889c7	                            mov rdi, rax	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de51	      0xe800000000	                          call 0x400de56	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de56	        0x488b1c24	                    mov rbx, qword [rsp]	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400de5a	    0xc70500000000	               mov dword [0x0400de64], 0	      8036	eval.c	FUNCTION_152	WHILE_1	IF_2
0x400de64	          0x4889df	                            mov rdi, rbx	      8093	eval.c	FUNCTION_152	CALL_17
0x400de67	      0xe800000000	                          call 0x400de6c	      8093	eval.c	FUNCTION_152	CALL_17
0x400de6c	      0x418b542430	            mov edx, dword [r12 + 0x30] 	      8095	eval.c	FUNCTION_152	IF_12
0x400de71	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400de76	            0x85d2	                           test edx, edx	      8095	eval.c	FUNCTION_152	IF_12
0x400de78	            0x753d	                           jne 0x400deb7	      8095	eval.c	FUNCTION_152	IF_12
0x400de7a	            0x85ed	                           test ebp, ebp	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400de7c	            0x7551	                           jne 0x400decf	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400de7e	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400de84	            0x7456	                            je 0x400dedc	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400de86	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8105	eval.c	FUNCTION_152
0x400de8b	    0x644833042528	                xor rax, qword fs:[0x28]	      8105	eval.c	FUNCTION_152
0x400de94	            0x754d	                           jne 0x400dee3	      8105	eval.c	FUNCTION_152
0x400de96	        0x4883c478	                           add rsp, 0x78	      8105	eval.c	FUNCTION_152
0x400de9a	              0x5b	                                 pop rbx	      8105	eval.c	FUNCTION_152
0x400de9b	              0x5d	                                 pop rbp	      8105	eval.c	FUNCTION_152
0x400de9c	            0x415c	                                 pop r12	      8105	eval.c	FUNCTION_152
0x400de9e	            0x415d	                                 pop r13	      8105	eval.c	FUNCTION_152
0x400dea0	              0xc3	                                     ret	      8105	eval.c	FUNCTION_152
0x400dea1	          0x4889df	                            mov rdi, rbx	      8093	eval.c	FUNCTION_152	CALL_17
0x400dea4	      0xe800000000	                          call 0x400dea9	      8093	eval.c	FUNCTION_152	CALL_17
0x400dea9	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400deae	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8095	eval.c	FUNCTION_152	IF_12
0x400deb3	            0x85c0	                           test eax, eax	      8095	eval.c	FUNCTION_152	IF_12
0x400deb5	            0x7418	                            je 0x400decf	      8095	eval.c	FUNCTION_152	IF_12
0x400deb7	    0x832d00000000	               sub dword [0x0400debe], 1	      8096	eval.c	FUNCTION_152	IF_12
0x400debe	            0xebc6	                           jmp 0x400de86	      8096	eval.c	FUNCTION_152	IF_12
0x400dec0	      0xe800000000	                          call 0x400dec5	      8053	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_5
0x400dec5	      0xe800000000	                          call 0x400deca	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400deca	      0xe9e0fdffff	                           jmp 0x400dcaf	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400decf	      0xe800000000	                          call 0x400ded4	      8101	eval.c	FUNCTION_152	ELSE_4	CALL_18
0x400ded4	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400deda	            0x75aa	                           jne 0x400de86	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400dedc	      0xe800000000	                          call 0x400dee1	      8103	eval.c	FUNCTION_152	ELSE_4	CALL_19
0x400dee1	            0xeba3	                           jmp 0x400de86	      8105	eval.c	FUNCTION_152
0x400dee3	      0xe800000000	                          call 0x400dee8	      8105	eval.c	FUNCTION_152
get_lval	DO,0:WHILE,1:FOR,1:ELSE,10:IF,54:SWITCH,0:CALL,74:functions,0	595
0x4009be0	            0x4157	                                push r15	      1892	eval.c	FUNCTION_44
0x4009be2	            0x4156	                                push r14	      1892	eval.c	FUNCTION_44
0x4009be4	          0x4189ce	                           mov r14d, ecx	      1892	eval.c	FUNCTION_44
0x4009be7	            0x4155	                                push r13	      1892	eval.c	FUNCTION_44
0x4009be9	            0x4154	                                push r12	      1892	eval.c	FUNCTION_44
0x4009beb	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_194	CALL_6
0x4009bee	              0x55	                                push rbp	      1892	eval.c	FUNCTION_44
0x4009bef	          0x4889fd	                            mov rbp, rdi	      1892	eval.c	FUNCTION_44
0x4009bf2	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_194	CALL_6
0x4009bf6	              0x53	                                push rbx	      1892	eval.c	FUNCTION_44
0x4009bf7	          0x4989d7	                            mov r15, rdx	      1892	eval.c	FUNCTION_44
0x4009bfa	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_194	CALL_6
0x4009bfe	    0x4881ec880000	                           sub rsp, 0x88	      1892	eval.c	FUNCTION_44
0x4009c05	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_194	CALL_6
0x4009c08	    0x64488b042528	                mov rax, qword fs:[0x28]	      1892	eval.c	FUNCTION_44
0x4009c11	      0x4889442478	             mov qword [rsp + 0x78], rax	      1892	eval.c	FUNCTION_44
0x4009c16	            0x31c0	                            xor eax, eax	      1892	eval.c	FUNCTION_44
0x4009c18	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_194	CALL_6
0x4009c1b	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4009c22	    0x48c742580000	               mov qword [rdx + 0x58], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4009c2a	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_194	CALL_6
0x4009c2d	          0x4585c0	                           test r8d, r8d	      1909	eval.c	FUNCTION_44	IF_1
0x4009c30	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_194	CALL_6
0x4009c33	     0xf8537040000	                           jne 0x400a070	      1909	eval.c	FUNCTION_44	IF_1
0x4009c39	    0x8b8c24c00000	            mov ecx, dword [rsp + 0xc0] 	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c40	          0x4489c8	                            mov eax, r9d	      1904	eval.c	FUNCTION_44
0x4009c43	          0x4989f4	                            mov r12, rsi	      1904	eval.c	FUNCTION_44
0x4009c46	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c4b	      0x488d742438	                   lea rsi, [rsp + 0x38]	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c50	          0x83e002	                              and eax, 2	      1904	eval.c	FUNCTION_44
0x4009c53	          0x4889ef	                            mov rdi, rbp	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c56	          0x4489cb	                            mov ebx, r9d	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c59	          0x890424	                    mov dword [rsp], eax	      1904	eval.c	FUNCTION_44
0x4009c5c	      0xe800000000	                          call 0x4009c61	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c61	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1918	eval.c	FUNCTION_44	IF_2
0x4009c66	          0x4889c1	                            mov rcx, rax	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c69	      0x4889442430	             mov qword [rsp + 0x30], rax	      1917	eval.c	FUNCTION_44	CALL_3
0x4009c6e	          0x4885f6	                           test rsi, rsi	      1918	eval.c	FUNCTION_44	IF_2
0x4009c71	     0xf8421060000	                            je 0x400a298	      1918	eval.c	FUNCTION_44	IF_2
0x4009c77	          0x4585f6	                         test r14d, r14d	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c7a	            0x740f	                            je 0x4009c8b	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c7c	           0xfb600	                   movzx eax, byte [rax]	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c7f	            0x3c20	                            cmp al, 0x20	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c81	            0x7408	                            je 0x4009c8b	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c83	            0x3c09	                               cmp al, 9	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c85	     0xf8585040000	                           jne 0x400a110	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x4009c8b	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009c90	          0x4889ef	                            mov rdi, rbp	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009c93	      0xe8b8f6ffff	             call sym.make_expanded_name	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009c98	          0x4885c0	                           test rax, rax	      1929	eval.c	FUNCTION_44	IF_2	IF_4
0x4009c9b	          0x4889c1	                            mov rcx, rax	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009c9e	        0x49894708	                mov qword [r15 + 8], rax	      1928	eval.c	FUNCTION_44	IF_2	CALL_8
0x4009ca2	     0xf8498060000	                            je 0x400a340	      1929	eval.c	FUNCTION_44	IF_2	IF_4
0x4009ca8	          0x49890f	                    mov qword [r15], rcx	      1941	eval.c	FUNCTION_44	IF_2
0x4009cab	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1941	eval.c	FUNCTION_44	IF_2
0x4009cb0	        0x440fb629	                  movzx r13d, byte [rcx]	      1947	eval.c	FUNCTION_44	IF_6
0x4009cb4	        0x4180fd5b	                          cmp r13b, 0x5b	      1947	eval.c	FUNCTION_44	IF_6
0x4009cb8	            0x7436	                            je 0x4009cf0	      1947	eval.c	FUNCTION_44	IF_6
0x4009cba	        0x4180fd2e	                          cmp r13b, 0x2e	      1947	eval.c	FUNCTION_44	IF_6
0x4009cbe	            0x7430	                            je 0x4009cf0	      1947	eval.c	FUNCTION_44	IF_6
0x4009cc0	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	      2222	eval.c	FUNCTION_44
0x4009cc5	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2222	eval.c	FUNCTION_44
0x4009cce	          0x4889c8	                            mov rax, rcx	      2222	eval.c	FUNCTION_44
0x4009cd1	     0xf8579080000	                           jne 0x400a550	      2222	eval.c	FUNCTION_44
0x4009cd7	    0x4881c4880000	                           add rsp, 0x88	      2222	eval.c	FUNCTION_44
0x4009cde	              0x5b	                                 pop rbx	      2222	eval.c	FUNCTION_44
0x4009cdf	              0x5d	                                 pop rbp	      2222	eval.c	FUNCTION_44
0x4009ce0	            0x415c	                                 pop r12	      2222	eval.c	FUNCTION_44
0x4009ce2	            0x415d	                                 pop r13	      2222	eval.c	FUNCTION_44
0x4009ce4	            0x415e	                                 pop r14	      2222	eval.c	FUNCTION_44
0x4009ce6	            0x415f	                                 pop r15	      2222	eval.c	FUNCTION_44
0x4009ce8	              0xc3	                                     ret	      2222	eval.c	FUNCTION_44
0x4009ce9	     0xf1f80000000	                         nop dword [rax]	      2222	eval.c	FUNCTION_44
0x4009cf0	        0x49833f00	                      cmp qword [r15], 0	      1947	eval.c	FUNCTION_44	IF_6
0x4009cf4	            0x74ca	                            je 0x4009cc0	      1947	eval.c	FUNCTION_44	IF_6
0x4009cf6	          0xc60100	                       mov byte [rcx], 0	      1951	eval.c	FUNCTION_44
0x4009cf9	            0x89da	                            mov edx, ebx	      1954	eval.c	FUNCTION_44	CALL_12
0x4009cfb	      0x488d442448	                   lea rax, [rsp + 0x48]	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d00	          0x498b3f	                    mov rdi, qword [r15]	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d03	          0x83e204	                              and edx, 4	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d06	      0xbe00000000	                              mov esi, 0	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d0b	          0x83e310	                           and ebx, 0x10	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d0e	        0x480f44f0	                          cmove rsi, rax	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d12	        0x895c2408	                mov dword [rsp + 8], ebx	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d16	      0xe800000000	                          call 0x4009d1b	      1954	eval.c	FUNCTION_44	CALL_12
0x4009d1b	          0x4885c0	                           test rax, rax	      1956	eval.c	FUNCTION_44	IF_7
0x4009d1e	            0x750b	                           jne 0x4009d2b	      1956	eval.c	FUNCTION_44	IF_7
0x4009d20	          0x8b3424	                    mov esi, dword [rsp]	      1956	eval.c	FUNCTION_44	IF_7
0x4009d23	            0x85f6	                           test esi, esi	      1956	eval.c	FUNCTION_44	IF_7
0x4009d25	     0xf8425040000	                            je 0x400a150	      1956	eval.c	FUNCTION_44	IF_7
0x4009d2b	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1958	eval.c	FUNCTION_44
0x4009d30	          0x4885c0	                           test rax, rax	      1959	eval.c	FUNCTION_44	IF_8
0x4009d33	          0x44882a	                    mov byte [rdx], r13b	      1958	eval.c	FUNCTION_44
0x4009d36	     0xf84a4010000	                            je 0x4009ee0	      1959	eval.c	FUNCTION_44	IF_8
0x4009d3c	        0x49894710	             mov qword [r15 + 0x10], rax	      1965	eval.c	FUNCTION_44
0x4009d40	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1966	eval.c	FUNCTION_44
0x4009d48	    0xc74424600000	               mov dword [rsp + 0x60], 0	      1967	eval.c	FUNCTION_44
0x4009d50	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d55	           0xfb607	                   movzx eax, byte [rdi]	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d58	            0x3c5b	                            cmp al, 0x5b	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d5a	     0xf8438010000	                            je 0x4009e98	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d60	            0x3c2e	                            cmp al, 0x2e	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d62	     0xf8588050000	                           jne 0x400a2f0	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d68	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d6c	        0x41833806	                       cmp dword [r8], 6	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d70	     0xf857a050000	                           jne 0x400a2f0	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009d76	      0x4983780800	                   cmp qword [r8 + 8], 0	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009d7b	     0xf842f050000	                            je 0x400a2b0	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009d81	        0x418b5728	            mov edx, dword [r15 + 0x28] 	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009d85	            0x85d2	                           test edx, edx	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009d87	     0xf8532010000	                           jne 0x4009ebf	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009d8d	        0x488d5f01	                      lea rbx, [rdi + 1]	      1988	eval.c	FUNCTION_44	WHILE_1	IF_13
0x4009d91	          0x4531ed	                          xor r13d, r13d	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009d94	            0x3c2e	                            cmp al, 0x2e	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x4009d96	          0x4889da	                            mov rdx, rbx	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x4009d99	     0xf8459010000	                            je 0x4009ef8	      1986	eval.c	FUNCTION_44	WHILE_1	IF_13
0x4009d9f	        0x4883c701	                              add rdi, 1	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x4009da3	      0xe800000000	                          call 0x4009da8	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x4009da8	      0x4889442430	             mov qword [rsp + 0x30], rax	      2002	eval.c	FUNCTION_44	WHILE_1	ELSE_2	CALL_22
0x4009dad	          0x80383a	                    cmp byte [rax], 0x3a	      2003	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x4009db0	     0xf845a020000	                            je 0x400a010	      2003	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x4009db6	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dbb	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dc0	      0xba01000000	                              mov edx, 1	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dc5	          0x4c89ee	                            mov rsi, r13	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dc8	      0xe800000000	                          call 0x4009dcd	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dcd	            0x85c0	                           test eax, eax	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dcf	     0xf840b010000	                            je 0x4009ee0	      2008	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_17	CALL_23
0x4009dd5	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      7098	eval.c	FUNCTION_129	CALL_1
0x4009dda	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4009ddf	      0xe800000000	                          call 0x4009de4	      7098	eval.c	FUNCTION_129	CALL_1
0x4009de4	          0x4885c0	                           test rax, rax	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x4009de7	     0xf8444050000	                            je 0x400a331	      2010	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_24
0x4009ded	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009df2	          0x80383a	                    cmp byte [rax], 0x3a	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009df5	     0xf845a070000	                            je 0x400a555	      2019	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x4009dfb	    0x41c747280000	               mov dword [r15 + 0x28], 0	      2058	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5
0x4009e03	            0x31db	                            xor ebx, ebx	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x4009e05	          0x80385d	                    cmp byte [rax], 0x5d	      2060	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x4009e08	     0xf8553050000	                           jne 0x400a361	      2060	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27
0x4009e0e	        0x4883c001	                              add rax, 1	      2070	eval.c	FUNCTION_44	WHILE_1	ELSE_2
0x4009e12	      0x4889442430	             mov qword [rsp + 0x30], rax	      2070	eval.c	FUNCTION_44	WHILE_1	ELSE_2
0x4009e17	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009e1b	          0x833806	                      cmp dword [rax], 6	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009e1e	     0xf841c040000	                            je 0x400a240	      2073	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009e24	            0x85db	                           test ebx, ebx	      2156	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x4009e26	     0xf846c020000	                            je 0x400a098	      2156	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x4009e2c	    0x49c747300000	               mov qword [r15 + 0x30], 0	      2157	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_43
0x4009e34	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2161	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_59
0x4009e39	      0xe800000000	                          call 0x4009e3e	      2161	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_59
0x4009e3e	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e42	    0x49c747480000	               mov qword [r15 + 0x48], 0	      2163	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e4a	        0x498b7730	            mov rsi, qword [r15 + 0x30] 	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x4009e4e	        0x488b7808	                mov rdi, qword [rax + 8]	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e52	        0x49897f20	             mov qword [r15 + 0x20], rdi	      2164	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e56	      0xe800000000	                          call 0x4009e5b	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x4009e5b	          0x4885c0	                           test rax, rax	      2166	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44
0x4009e5e	        0x49894718	             mov qword [r15 + 0x18], rax	      2165	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_60
0x4009e62	     0xf8428030000	                            je 0x400a190	      2166	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44
0x4009e68	        0x418b7f28	            mov edi, dword [r15 + 0x28] 	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e6c	            0x85ff	                           test edi, edi	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e6e	            0x740c	                            je 0x4009e7c	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e70	        0x418b7740	            mov esi, dword [r15 + 0x40] 	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e74	            0x85f6	                           test esi, esi	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e76	     0xf8464030000	                            je 0x400a1e0	      2188	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48
0x4009e7c	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e80	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009e85	        0x4883c010	                           add rax, 0x10	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e89	        0x49894710	             mov qword [r15 + 0x10], rax	      2216	eval.c	FUNCTION_44	WHILE_1	ELSE_9
0x4009e8d	           0xfb607	                   movzx eax, byte [rdi]	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009e90	            0x3c5b	                            cmp al, 0x5b	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009e92	     0xf85c8feffff	                           jne 0x4009d60	      1968	eval.c	FUNCTION_44	WHILE_1
0x4009e98	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009e9c	          0x418b10	                     mov edx, dword [r8]	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009e9f	          0x83fa05	                              cmp edx, 5	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009ea2	     0xf85f8030000	                           jne 0x400a2a0	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009ea8	      0x4983780800	                   cmp qword [r8 + 8], 0	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009ead	     0xf84fd030000	                            je 0x400a2b0	      1970	eval.c	FUNCTION_44	WHILE_1	IF_9
0x4009eb3	        0x418b4728	            mov eax, dword [r15 + 0x28] 	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009eb7	            0x85c0	                           test eax, eax	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009eb9	     0xf84e0feffff	                            je 0x4009d9f	      1978	eval.c	FUNCTION_44	WHILE_1	IF_11
0x4009ebf	        0x448b2c24	                   mov r13d, dword [rsp]	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4009ec3	      0xba05000000	                              mov edx, 5	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009ec8	      0xbe00000000	                              mov esi, 0	      1981	eval.c	FUNCTION_44	WHILE_1	IF_11	CALL_18
0x4009ecd	          0x4585ed	                         test r13d, r13d	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4009ed0	     0xf8460020000	                            je 0x400a136	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4009ed6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1980	eval.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4009ee0	            0x31c9	                            xor ecx, ecx	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x4009ee2	      0xe9d9fdffff	                           jmp 0x4009cc0	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x4009ee7	    0x660f1f840000	                    nop word [rax + rax]	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x4009ef0	        0x4183c501	                             add r13d, 1	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009ef4	        0x4883c201	                              add rdx, 1	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009ef8	           0xfb632	                   movzx esi, byte [rdx]	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009efb	            0x89f0	                            mov eax, esi	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009efd	          0x83e0df	                     and eax, 0xffffffdf	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f00	          0x83e841	                           sub eax, 0x41	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f03	            0x3c19	                            cmp al, 0x19	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f05	            0x76e9	                           jbe 0x4009ef0	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f07	        0x400fb6c6	                          movzx eax, sil	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f0b	          0x83e830	                           sub eax, 0x30	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f0e	          0x83f809	                              cmp eax, 9	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f11	            0x76dd	                           jbe 0x4009ef0	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f13	        0x4080fe5f	                           cmp sil, 0x5f	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f17	            0x74d7	                            je 0x4009ef0	      1989	eval.c	FUNCTION_44	WHILE_1	IF_13	FOR_1	CALL_19
0x4009f19	          0x4585ed	                         test r13d, r13d	      1991	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14
0x4009f1c	     0xf84b7050000	                            je 0x400a4d9	      1991	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14
0x4009f22	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1997	eval.c	FUNCTION_44	WHILE_1	IF_13
0x4009f27	    0x49c747200000	               mov qword [r15 + 0x20], 0	      2085	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009f2f	        0x498b7808	                 mov rdi, qword [r8 + 8]	      2086	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009f33	          0x4489ea	                           mov edx, r13d	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009f36	          0x4889de	                            mov rsi, rbx	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009f39	        0x49897f48	             mov qword [r15 + 0x48], rdi	      2086	eval.c	FUNCTION_44	WHILE_1	IF_29
0x4009f3d	      0xe800000000	                          call 0x4009f42	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009f42	          0x4d85e4	                           test r12, r12	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f45	        0x49894750	             mov qword [r15 + 0x50], rax	      2087	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_44
0x4009f49	     0xf8481000000	                            je 0x4009fd0	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f4f	        0x498b5748	            mov rdx, qword [r15 + 0x48] 	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f53	         0xfb65201	               movzx edx, byte [rdx + 1]	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f57	            0x84d2	                             test dl, dl	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f59	            0x7475	                            je 0x4009fd0	      2092	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f5b	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      2097	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f5f	     0xf8465030000	                            je 0x400a2ca	      2097	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f65	          0x4963d5	                        movsxd rdx, r13d	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f68	        0x488d0413	                    lea rax, [rbx + rdx]	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f6c	           0xfb608	                   movzx ecx, byte [rax]	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f6f	          0xc60000	                       mov byte [rax], 0	      2100	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f72	        0x498b4748	            mov rax, qword [r15 + 0x48] 	      2100	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f76	        0x80780102	                   cmp byte [rax + 1], 2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009f7a	        0x894c2410	             mov dword [rsp + 0x10], ecx	      2099	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_33
0x4009f7e	     0xf85d8050000	                           jne 0x400a55c	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009f84	      0x41833c2403	                      cmp dword [r12], 3	      2105	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f89	     0xf85e1020000	                           jne 0x400a270	      2105	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32
0x4009f8f	            0x31f6	                            xor esi, esi	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009f91	      0x49837f5000	               cmp qword [r15 + 0x50], 0	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009f96	          0x4889df	                            mov rdi, rbx	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009f99	        0x400f94c6	                                sete sil	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009f9d	      0xe800000000	                          call 0x4009fa2	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009fa2	            0x85c0	                           test eax, eax	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009fa4	     0xf84c6020000	                            je 0x400a270	      2106	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_45
0x4009faa	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009fae	     0xf842cffffff	                            je 0x4009ee0	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009fb4	      0xb801000000	                              mov eax, 1	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009fb9	          0x4963d5	                        movsxd rdx, r13d	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x4009fbc	       0xfb64c2410	           movzx ecx, byte [rsp + 0x10] 	      2109	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009fc1	          0x880c13	                mov byte [rbx + rdx], cl	      2109	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x4009fc4	            0x85c0	                           test eax, eax	      2110	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x4009fc6	     0xf8514ffffff	                           jne 0x4009ee0	      2110	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x4009fcc	        0x498b4750	            mov rax, qword [r15 + 0x50] 	      2110	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_35
0x4009fd0	          0x4885c0	                           test rax, rax	      2114	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36
0x4009fd3	     0xf845d040000	                            je 0x400a436	      2114	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36
0x4009fd9	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      2141	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x4009fde	          0x4585c9	                           test r9d, r9d	      2141	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x4009fe1	            0x7516	                           jne 0x4009ff9	      2141	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42
0x4009fe3	         0xfb67810	           movzx edi, byte [rax + 0x10] 	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009fe7	            0x31d2	                            xor edx, edx	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009fe9	          0x4889ee	                            mov rsi, rbp	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009fec	      0xe800000000	                          call 0x4009ff1	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009ff1	            0x85c0	                           test eax, eax	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009ff3	     0xf85d6040000	                           jne 0x400a4cf	      2142	eval.c	FUNCTION_44	WHILE_1	IF_29	ELSE_8	IF_42	CALL_55
0x4009ff9	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2148	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_57
0x4009ffe	      0xe800000000	                          call 0x400a003	      2148	eval.c	FUNCTION_44	WHILE_1	IF_29	CALL_57
0x400a003	        0x498b4750	            mov rax, qword [r15 + 0x50] 	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400a007	        0x49894710	             mov qword [r15 + 0x10], rax	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400a00b	      0xe940fdffff	                           jmp 0x4009d50	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400a010	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2149	eval.c	FUNCTION_44	WHILE_1	IF_29
0x400a015	      0xbb01000000	                              mov ebx, 1	      2004	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_16
0x400a01a	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x400a01e	          0x833a06	                      cmp dword [rdx], 6	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x400a021	     0xf847f040000	                            je 0x400a4a6	      2021	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20
0x400a027	          0x4d85e4	                           test r12, r12	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a02a	            0x7417	                            je 0x400a043	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a02c	      0x41833c2405	                      cmp dword [r12], 5	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a031	     0xf85d6030000	                           jne 0x400a40d	      2028	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a037	    0x49837c240800	                  cmp qword [r12 + 8], 0	      2029	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a03d	     0xf84ca030000	                            je 0x400a40d	      2029	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22
0x400a043	        0x488d7801	                      lea rdi, [rax + 1]	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x400a047	      0xe800000000	                          call 0x400a04c	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x400a04c	      0x4889442430	             mov qword [rsp + 0x30], rax	      2036	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	CALL_32
0x400a051	          0x80385d	                    cmp byte [rax], 0x5d	      2037	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x400a054	            0x756a	                           jne 0x400a0c0	      2037	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x400a056	    0x41c747400100	               mov dword [r15 + 0x40], 1	      2038	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_24
0x400a05e	    0x41c747280100	               mov dword [r15 + 0x28], 1	      2055	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x400a066	      0xe99afdffff	                           jmp 0x4009e05	      2055	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x400a06b	       0xf1f440000	                   nop dword [rax + rax]	      2055	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19
0x400a070	    0x8b8c24c00000	            mov ecx, dword [rsp + 0xc0] 	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a077	          0x48892a	                    mov qword [rdx], rbp	      1912	eval.c	FUNCTION_44	IF_1
0x400a07a	            0x31f6	                            xor esi, esi	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a07c	            0x31d2	                            xor edx, edx	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a07e	          0x4889ef	                            mov rdi, rbp	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a081	          0x83c901	                               or ecx, 1	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a084	      0xe800000000	                          call 0x400a089	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a089	          0x4889c1	                            mov rcx, rax	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a08c	      0xe92ffcffff	                           jmp 0x4009cc0	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a091	     0xf1f80000000	                         nop dword [rax]	      1913	eval.c	FUNCTION_44	IF_1	CALL_2
0x400a098	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a09d	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a0a2	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400a0aa	      0xe800000000	                          call 0x400a0af	      6964	eval.c	FUNCTION_124	CALL_1
0x400a0af	        0x49894730	             mov qword [r15 + 0x30], rax	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x400a0b3	      0xe97cfdffff	                           jmp 0x4009e34	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x400a0b8	     0xf1f84000000	                   nop dword [rax + rax]	      2160	eval.c	FUNCTION_44	WHILE_1	ELSE_9	CALL_58
0x400a0c0	      0x488d442460	                   lea rax, [rsp + 0x60]	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0c5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0ca	    0x41c747400000	               mov dword [r15 + 0x40], 0	      2041	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4
0x400a0d2	      0xba01000000	                              mov edx, 1	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0d7	          0x4889c6	                            mov rsi, rax	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0da	      0x4889442410	             mov qword [rsp + 0x10], rax	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0df	      0xe800000000	                          call 0x400a0e4	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0e4	            0x85c0	                           test eax, eax	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0e6	     0xf8445020000	                            je 0x400a331	      2042	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_25	CALL_33
0x400a0ec	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      7098	eval.c	FUNCTION_129	CALL_1
0x400a0f1	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400a0f6	      0xe800000000	                          call 0x400a0fb	      7098	eval.c	FUNCTION_129	CALL_1
0x400a0fb	          0x4885c0	                           test rax, rax	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400a0fe	     0xf8489020000	                            je 0x400a38d	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400a104	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400a109	      0xe950ffffff	                           jmp 0x400a05e	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400a10e	            0x6690	                                     nop	      2047	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_35
0x400a110	           0xfb6f8	                           movzx edi, al	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x400a113	      0xe800000000	                          call 0x400a118	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x400a118	            0x85c0	                           test eax, eax	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x400a11a	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a11f	            0x755f	                           jne 0x400a180	      1921	eval.c	FUNCTION_44	IF_2	IF_3	CALL_5
0x400a121	           0xfb601	                   movzx eax, byte [rcx]	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a124	            0x3c2e	                            cmp al, 0x2e	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a126	            0x7458	                            je 0x400a180	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a128	            0x3c5b	                            cmp al, 0x5b	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a12a	            0x7454	                            je 0x400a180	      1922	eval.c	FUNCTION_44	IF_2	IF_3
0x400a12c	      0xba05000000	                              mov edx, 5	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x400a131	      0xbe00000000	                              mov esi, 0	      1924	eval.c	FUNCTION_44	IF_2	IF_3	CALL_7
0x400a136	            0x31ff	                            xor edi, edi	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a138	      0xe800000000	                          call 0x400a13d	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a13d	          0x4889c7	                            mov rdi, rax	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a140	      0xe800000000	                          call 0x400a145	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a145	            0x31c9	                            xor ecx, ecx	      1976	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a147	      0xe974fbffff	                           jmp 0x4009cc0	      1976	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a14c	         0xf1f4000	                         nop dword [rax]	      1976	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a150	          0x498b1f	                    mov rbx, qword [r15]	      1957	eval.c	FUNCTION_44	CALL_14
0x400a153	      0xba05000000	                              mov edx, 5	      1957	eval.c	FUNCTION_44	CALL_14
0x400a158	      0xbe00000000	                              mov esi, 0	      1957	eval.c	FUNCTION_44	CALL_14
0x400a15d	            0x31ff	                            xor edi, edi	      1957	eval.c	FUNCTION_44	CALL_14
0x400a15f	      0xe800000000	                          call 0x400a164	      1957	eval.c	FUNCTION_44	CALL_14
0x400a164	          0x4889de	                            mov rsi, rbx	      1957	eval.c	FUNCTION_44	CALL_14
0x400a167	          0x4889c7	                            mov rdi, rax	      1957	eval.c	FUNCTION_44	CALL_14
0x400a16a	      0xe800000000	                          call 0x400a16f	      1957	eval.c	FUNCTION_44	CALL_14
0x400a16f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1958	eval.c	FUNCTION_44
0x400a174	            0x31c9	                            xor ecx, ecx	      1960	eval.c	FUNCTION_44	IF_8
0x400a176	          0x448828	                    mov byte [rax], r13b	      1958	eval.c	FUNCTION_44
0x400a179	      0xe942fbffff	                           jmp 0x4009cc0	      1958	eval.c	FUNCTION_44
0x400a17e	            0x6690	                                     nop	      1958	eval.c	FUNCTION_44
0x400a180	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1958	eval.c	FUNCTION_44
0x400a185	      0xe901fbffff	                           jmp 0x4009c8b	      1958	eval.c	FUNCTION_44
0x400a18a	    0x660f1f440000	                    nop word [rax + rax]	      1958	eval.c	FUNCTION_44
0x400a190	      0x49837f3000	               cmp qword [r15 + 0x30], 0	      2168	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x400a195	     0xf880d020000	                            js 0x400a3a8	      2168	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x400a19b	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2176	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_62
0x400a1a0	      0xe800000000	                          call 0x400a1a5	      2176	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_62
0x400a1a5	        0x448b0424	                    mov r8d, dword [rsp]	      2177	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	IF_47
0x400a1a9	          0x4585c0	                           test r8d, r8d	      2177	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	IF_47
0x400a1ac	     0xf852efdffff	                           jne 0x4009ee0	      2177	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	IF_47
0x400a1b2	        0x498b5f30	            mov rbx, qword [r15 + 0x30] 	      2178	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46	CALL_64
0x400a1b6	      0xba05000000	                              mov edx, 5	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1bb	      0xbe00000000	                              mov esi, 0	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1c0	            0x31ff	                            xor edi, edi	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1c2	      0xe800000000	                          call 0x400a1c7	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1c7	          0x4889de	                            mov rsi, rbx	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1ca	          0x4889c7	                            mov rdi, rax	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1cd	      0xe800000000	                          call 0x400a1d2	      2211	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	CALL_73
0x400a1d2	            0x31c9	                            xor ecx, ecx	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a1d4	      0xe9e7faffff	                           jmp 0x4009cc0	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a1d9	     0xf1f80000000	                         nop dword [rax]	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a1e0	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a1e5	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a1ea	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400a1f2	      0xe800000000	                          call 0x400a1f7	      6964	eval.c	FUNCTION_124	CALL_1
0x400a1f7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2192	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_66
0x400a1fc	        0x49894738	             mov qword [r15 + 0x38], rax	      2190	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_65
0x400a200	      0xe800000000	                          call 0x400a205	      2192	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_66
0x400a205	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x400a209	          0x4885f6	                           test rsi, rsi	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x400a20c	     0xf88d4010000	                            js 0x400a3e6	      2193	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49
0x400a212	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      2206	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_52
0x400a216	          0x4885c0	                           test rax, rax	      2206	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_52
0x400a219	     0xf88b1010000	                            js 0x400a3d0	      2206	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_52
0x400a21f	        0x498b5f38	            mov rbx, qword [r15 + 0x38] 	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a223	          0x4839c3	                            cmp rbx, rax	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a226	     0xf8d50fcffff	                           jge 0x4009e7c	      2208	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a22c	          0x8b1424	                    mov edx, dword [rsp]	      2210	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	IF_54
0x400a22f	            0x85d2	                           test edx, edx	      2210	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	IF_54
0x400a231	            0x7483	                            je 0x400a1b6	      2210	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53	IF_54
0x400a233	            0x31c9	                            xor ecx, ecx	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a235	      0xe986faffff	                           jmp 0x4009cc0	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a23a	    0x660f1f440000	                    nop word [rax + rax]	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a240	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      7098	eval.c	FUNCTION_129	CALL_1
0x400a245	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400a24a	      0xe800000000	                          call 0x400a24f	      7098	eval.c	FUNCTION_129	CALL_1
0x400a24f	          0x4885c0	                           test rax, rax	      2079	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x400a252	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400a255	     0xf84d6000000	                            je 0x400a331	      2079	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_30	IF_31
0x400a25b	    0x41bdffffffff	                    mov r13d, 0xffffffff	      1985	eval.c	FUNCTION_44	WHILE_1
0x400a261	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      1985	eval.c	FUNCTION_44	WHILE_1
0x400a265	      0xe9bdfcffff	                           jmp 0x4009f27	      1985	eval.c	FUNCTION_44	WHILE_1
0x400a26a	    0x660f1f440000	                    nop word [rax + rax]	      1985	eval.c	FUNCTION_44	WHILE_1
0x400a270	          0x4889df	                            mov rdi, rbx	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a273	      0xe800000000	                          call 0x400a278	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a278	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a27a	          0x4963d5	                        movsxd rdx, r13d	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a27d	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a280	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x400a284	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a287	     0xf852ffdffff	                           jne 0x4009fbc	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x400a28d	      0xe932fdffff	                           jmp 0x4009fc4	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x400a292	    0x660f1f440000	                    nop word [rax + rax]	      2108	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	IF_34
0x400a298	          0x49892f	                    mov qword [r15], rbp	      1944	eval.c	FUNCTION_44	ELSE_1
0x400a29b	      0xe910faffff	                           jmp 0x4009cb0	      1944	eval.c	FUNCTION_44	ELSE_1
0x400a2a0	          0x83fa06	                              cmp edx, 6	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a2a3	     0xf84cdfaffff	                            je 0x4009d76	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a2a9	     0xf1f80000000	                         nop dword [rax]	      1971	eval.c	FUNCTION_44	WHILE_1	IF_9
0x400a2b0	          0x8b0c24	                    mov ecx, dword [rsp]	      1974	eval.c	FUNCTION_44	WHILE_1	IF_9	IF_10
0x400a2b3	            0x85c9	                           test ecx, ecx	      1974	eval.c	FUNCTION_44	WHILE_1	IF_9	IF_10
0x400a2b5	     0xf8525fcffff	                           jne 0x4009ee0	      1974	eval.c	FUNCTION_44	WHILE_1	IF_9	IF_10
0x400a2bb	      0xba05000000	                              mov edx, 5	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a2c0	      0xbe00000000	                              mov esi, 0	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a2c5	      0xe96cfeffff	                           jmp 0x400a136	      1975	eval.c	FUNCTION_44	WHILE_1	IF_9	CALL_16
0x400a2ca	          0x80fa02	                               cmp dl, 2	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2cd	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2103	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	ELSE_6
0x400a2d5	     0xf84a9fcffff	                            je 0x4009f84	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2db	          0x4889df	                            mov rdi, rbx	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2de	      0xe800000000	                          call 0x400a2e3	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2e3	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2e5	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2e8	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2eb	      0xe9d4fcffff	                           jmp 0x4009fc4	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2f0	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a2f5	          0x4c89ef	                            mov rdi, r13	      2220	eval.c	FUNCTION_44	CALL_74
0x400a2f8	      0xe800000000	                          call 0x400a2fd	      2220	eval.c	FUNCTION_44	CALL_74
0x400a2fd	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2221	eval.c	FUNCTION_44
0x400a302	      0xe9b9f9ffff	                           jmp 0x4009cc0	      2221	eval.c	FUNCTION_44
0x400a307	        0x448b1424	                   mov r10d, dword [rsp]	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400a30b	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400a310	          0x4585d2	                         test r10d, r10d	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400a313	            0x751c	                           jne 0x400a331	      2126	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	IF_39
0x400a315	      0xbe00000000	                              mov esi, 0	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a31a	            0x31ff	                            xor edi, edi	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a31c	      0xba05000000	                              mov edx, 5	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a321	      0xe800000000	                          call 0x400a326	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a326	          0x4889de	                            mov rsi, rbx	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a329	          0x4889c7	                            mov rdi, rax	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a32c	      0xe800000000	                          call 0x400a331	      2127	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38	CALL_50
0x400a331	          0x4c89ef	                            mov rdi, r13	      2013	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_25
0x400a334	      0xe800000000	                          call 0x400a339	      2013	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18	CALL_25
0x400a339	            0x31c9	                            xor ecx, ecx	      2014	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18
0x400a33b	      0xe980f9ffff	                           jmp 0x4009cc0	      2014	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18
0x400a340	      0x4889442408	                mov qword [rsp + 8], rax	      2014	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3	IF_18
0x400a345	      0xe800000000	                          call 0x400a34a	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a34a	           0xb0424	                     or eax, dword [rsp]	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a34d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a352	     0xf84b0010000	                            je 0x400a508	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a358	        0x498b4f08	                mov rcx, qword [r15 + 8]	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a35c	      0xe947f9ffff	                           jmp 0x4009ca8	      1934	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_9
0x400a361	        0x448b1c24	                   mov r11d, dword [rsp]	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x400a365	      0x488d442460	                   lea rax, [rsp + 0x60]	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x400a36a	      0x4889442410	             mov qword [rsp + 0x10], rax	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x400a36f	          0x4585db	                         test r11d, r11d	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x400a372	            0x7519	                           jne 0x400a38d	      2062	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	IF_28
0x400a374	            0x31ff	                            xor edi, edi	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a376	      0xba05000000	                              mov edx, 5	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a37b	      0xbe00000000	                              mov esi, 0	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a380	      0xe800000000	                          call 0x400a385	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a385	          0x4889c7	                            mov rdi, rax	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a388	      0xe800000000	                          call 0x400a38d	      2063	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_5	IF_27	CALL_39
0x400a38d	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2050	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_36
0x400a392	      0xe800000000	                          call 0x400a397	      2050	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_36
0x400a397	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2051	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_37
0x400a39c	      0xe800000000	                          call 0x400a3a1	      2051	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26	CALL_37
0x400a3a1	            0x31c9	                            xor ecx, ecx	      2052	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26
0x400a3a3	      0xe918f9ffff	                           jmp 0x4009cc0	      2052	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	ELSE_4	IF_26
0x400a3a8	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x400a3ac	            0x31f6	                            xor esi, esi	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x400a3ae	    0x49c747300000	               mov qword [r15 + 0x30], 0	      2170	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45
0x400a3b6	      0xe800000000	                          call 0x400a3bb	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x400a3bb	          0x4885c0	                           test rax, rax	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400a3be	        0x49894718	             mov qword [r15 + 0x18], rax	      2171	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_44	IF_45	CALL_61
0x400a3c2	     0xf85a0faffff	                           jne 0x4009e68	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400a3c8	      0xe9cefdffff	                           jmp 0x400a19b	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400a3cd	           0xf1f00	                         nop dword [rax]	      2174	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_46
0x400a3d0	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400a3d4	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400a3d8	      0xe800000000	                          call 0x400a3dd	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400a3dd	        0x49894730	             mov qword [r15 + 0x30], rax	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400a3e1	      0xe939feffff	                           jmp 0x400a21f	      2207	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	CALL_71
0x400a3e6	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2195	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_67
0x400a3ea	      0xe800000000	                          call 0x400a3ef	      2195	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_67
0x400a3ef	          0x4885c0	                           test rax, rax	      2196	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50
0x400a3f2	     0xf8443010000	                            je 0x400a53b	      2196	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50
0x400a3f8	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400a3fc	          0x4889c6	                            mov rsi, rax	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400a3ff	      0xe800000000	                          call 0x400a404	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400a404	        0x49894738	             mov qword [r15 + 0x38], rax	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400a408	      0xe905feffff	                           jmp 0x400a212	      2202	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	CALL_70
0x400a40d	          0x8b1c24	                    mov ebx, dword [rsp]	      2031	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	IF_23
0x400a410	            0x85db	                           test ebx, ebx	      2031	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	IF_23
0x400a412	     0xf8519ffffff	                           jne 0x400a331	      2031	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	IF_23
0x400a418	            0x31ff	                            xor edi, edi	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a41a	      0xba05000000	                              mov edx, 5	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a41f	      0xbe00000000	                              mov esi, 0	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a424	      0xe800000000	                          call 0x400a429	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a429	          0x4889c7	                            mov rdi, rax	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a42c	      0xe800000000	                          call 0x400a431	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a431	      0xe9fbfeffff	                           jmp 0x400a331	      2032	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_22	CALL_30
0x400a436	    0x49817f480000	               cmp qword [r15 + 0x48], 0	      2117	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x400a43e	     0xf8437010000	                            je 0x400a57b	      2117	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x400a444	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a449	           0xfb600	                   movzx eax, byte [rax]	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a44c	            0x3c5b	                            cmp al, 0x5b	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a44e	           0xf94c2	                                 sete dl	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a451	            0x3c2e	                            cmp al, 0x2e	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a453	           0xf94c0	                                 sete al	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a456	             0x8c2	                               or dl, al	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a458	     0xf85a9feffff	                           jne 0x400a307	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a45e	          0x4585f6	                         test r14d, r14d	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a461	     0xf85a0feffff	                           jne 0x400a307	      2124	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_38
0x400a467	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	      2131	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_40
0x400a46b	     0xf8486000000	                            je 0x400a4f7	      2131	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_40
0x400a471	          0x4489ee	                           mov esi, r13d	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x400a474	          0x4889df	                            mov rdi, rbx	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x400a477	      0xe800000000	                          call 0x400a47c	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x400a47c	        0x49894758	             mov qword [r15 + 0x58], rax	      2134	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_53
0x400a480	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2135	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_54
0x400a485	          0x4c89ef	                            mov rdi, r13	      2135	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_54
0x400a488	      0xe800000000	                          call 0x400a48d	      2135	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_54
0x400a48d	      0x49837f5800	               cmp qword [r15 + 0x58], 0	      2136	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x400a492	     0xf855dfeffff	                           jne 0x400a2f5	      2136	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x400a498	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2137	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x400a4a1	      0xe94ffeffff	                           jmp 0x400a2f5	      2137	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_41
0x400a4a6	          0x8b2c24	                    mov ebp, dword [rsp]	      2023	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	IF_21
0x400a4a9	            0x85ed	                           test ebp, ebp	      2023	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	IF_21
0x400a4ab	     0xf8580feffff	                           jne 0x400a331	      2023	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	IF_21
0x400a4b1	            0x31ff	                            xor edi, edi	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4b3	      0xba05000000	                              mov edx, 5	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4b8	      0xbe00000000	                              mov esi, 0	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4bd	      0xe800000000	                          call 0x400a4c2	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4c2	          0x4889c7	                            mov rdi, rax	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4c5	      0xe800000000	                          call 0x400a4ca	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4ca	      0xe962feffff	                           jmp 0x400a331	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4cf	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4d4	      0xe958feffff	                           jmp 0x400a331	      2024	eval.c	FUNCTION_44	WHILE_1	ELSE_2	IF_19	IF_20	CALL_27
0x400a4d9	        0x448b2424	                   mov r12d, dword [rsp]	      1993	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	IF_15
0x400a4dd	      0xba05000000	                              mov edx, 5	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x400a4e2	      0xbe00000000	                              mov esi, 0	      1994	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	CALL_21
0x400a4e7	          0x4585e4	                         test r12d, r12d	      1993	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	IF_15
0x400a4ea	     0xf8446fcffff	                            je 0x400a136	      1993	eval.c	FUNCTION_44	WHILE_1	IF_13	IF_14	IF_15
0x400a4f0	            0x31c9	                            xor ecx, ecx	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a4f2	      0xe9c9f7ffff	                           jmp 0x4009cc0	      2212	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_53
0x400a4f7	          0x4889df	                            mov rdi, rbx	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x400a4fa	      0xe800000000	                          call 0x400a4ff	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x400a4ff	        0x49894758	             mov qword [r15 + 0x58], rax	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x400a503	      0xe978ffffff	                           jmp 0x400a480	      2132	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	CALL_52
0x400a508	      0xba05000000	                              mov edx, 5	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a50d	      0xbe00000000	                              mov esi, 0	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a512	            0x31ff	                            xor edi, edi	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a514	        0x48890c24	                    mov qword [rsp], rcx	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a518	    0xc70500000000	               mov dword [0x0400a522], 1	      1936	eval.c	FUNCTION_44	IF_2	IF_4	IF_5
0x400a522	      0xe800000000	                          call 0x400a527	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a527	          0x4889ee	                            mov rsi, rbp	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a52a	          0x4889c7	                            mov rdi, rax	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a52d	      0xe800000000	                          call 0x400a532	      1937	eval.c	FUNCTION_44	IF_2	IF_4	IF_5	CALL_11
0x400a532	        0x488b0c24	                    mov rcx, qword [rsp]	      1938	eval.c	FUNCTION_44	IF_2	IF_4	IF_5
0x400a536	      0xe985f7ffff	                           jmp 0x4009cc0	      1938	eval.c	FUNCTION_44	IF_2	IF_4	IF_5
0x400a53b	          0x8b0c24	                    mov ecx, dword [rsp]	      2198	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	IF_51
0x400a53e	            0x85c9	                           test ecx, ecx	      2198	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	IF_51
0x400a540	     0xf859af9ffff	                           jne 0x4009ee0	      2198	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	IF_51
0x400a546	        0x498b5f38	            mov rbx, qword [r15 + 0x38] 	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400a54a	      0xe967fcffff	                           jmp 0x400a1b6	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400a54f	              0x90	                                     nop	      2199	eval.c	FUNCTION_44	WHILE_1	ELSE_9	IF_48	IF_49	IF_50	CALL_69
0x400a550	      0xe800000000	                          call 0x400a555	      2222	eval.c	FUNCTION_44
0x400a555	            0x31db	                            xor ebx, ebx	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x400a557	      0xe9befaffff	                           jmp 0x400a01a	      2007	eval.c	FUNCTION_44	WHILE_1	ELSE_2	ELSE_3
0x400a55c	          0x4889df	                            mov rdi, rbx	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a55f	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a564	      0xe800000000	                          call 0x400a569	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a569	            0x85c0	                           test eax, eax	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a56b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a570	           0xf94c0	                                 sete al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a573	           0xfb6c0	                           movzx eax, al	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a576	      0xe941faffff	                           jmp 0x4009fbc	      2107	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_32	CALL_46
0x400a57b	      0xba05000000	                              mov edx, 5	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a580	      0xbe00000000	                              mov esi, 0	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a585	            0x31ff	                            xor edi, edi	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a587	      0xe800000000	                          call 0x400a58c	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a58c	          0x4889ee	                            mov rsi, rbp	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a58f	          0x4889c7	                            mov rdi, rax	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a592	      0xe800000000	                          call 0x400a597	      2119	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37	CALL_48
0x400a597	            0x31c9	                            xor ecx, ecx	      2120	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
0x400a599	      0xe922f7ffff	                           jmp 0x4009cc0	      2120	eval.c	FUNCTION_44	WHILE_1	IF_29	IF_36	IF_37
ex_execute	DO,0:WHILE,1:FOR,0:ELSE,2:IF,13:SWITCH,0:CALL,19:functions,0	159
0x400def0	            0x4154	                                push r12	      8125	eval.c	FUNCTION_154
0x400def2	              0x55	                                push rbp	      8125	eval.c	FUNCTION_154
0x400def3	          0x4989fc	                            mov r12, rdi	      8125	eval.c	FUNCTION_154
0x400def6	              0x53	                                push rbx	      8125	eval.c	FUNCTION_154
0x400def7	      0xba50000000	                           mov edx, 0x50	      8134	eval.c	FUNCTION_154	CALL_1
0x400defc	      0xbe01000000	                              mov esi, 1	      8134	eval.c	FUNCTION_154	CALL_1
0x400df01	        0x4883ec40	                           sub rsp, 0x40	      8125	eval.c	FUNCTION_154
0x400df05	    0x64488b042528	                mov rax, qword fs:[0x28]	      8125	eval.c	FUNCTION_154
0x400df0e	      0x4889442438	             mov qword [rsp + 0x38], rax	      8125	eval.c	FUNCTION_154
0x400df13	            0x31c0	                            xor eax, eax	      8125	eval.c	FUNCTION_154
0x400df15	          0x488b07	                    mov rax, qword [rdi]	      8126	eval.c	FUNCTION_154
0x400df18	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8134	eval.c	FUNCTION_154	CALL_1
0x400df1d	      0x4889442408	                mov qword [rsp + 8], rax	      8126	eval.c	FUNCTION_154
0x400df22	      0xe800000000	                          call 0x400df27	      8134	eval.c	FUNCTION_154	CALL_1
0x400df27	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8136	eval.c	FUNCTION_154	IF_1
0x400df2c	            0x85c0	                           test eax, eax	      8136	eval.c	FUNCTION_154	IF_1
0x400df2e	            0x7407	                            je 0x400df37	      8136	eval.c	FUNCTION_154	IF_1
0x400df30	    0x830500000000	               add dword [0x0400df37], 1	      8137	eval.c	FUNCTION_154	IF_1
0x400df37	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df3c	           0xfb613	                   movzx edx, byte [rbx]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df3f	          0x80fa7c	                            cmp dl, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df42	        0x400f95c6	                               setne sil	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df46	            0x84d2	                             test dl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df48	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df4b	          0x4084ce	                            test sil, cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df4e	     0xf845c010000	                            je 0x400e0b0	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df54	          0x80fa0a	                             cmp dl, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df57	     0xf859a000000	                           jne 0x400dff7	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df5d	      0xe94e010000	                           jmp 0x400e0b0	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df62	    0x660f1f440000	                    nop word [rax + rax]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df68	          0x4889c7	                            mov rdi, rax	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df6b	      0xe800000000	                          call 0x400df70	      8138	eval.c	FUNCTION_154	WHILE_1
0x400df70	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df75	          0x8d7002	                      lea esi, [rax + 2]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df78	            0x89c3	                            mov ebx, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df7a	      0xe800000000	                          call 0x400df7f	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df7f	            0x85c0	                           test eax, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df81	     0xf84d1000000	                            je 0x400e058	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400df87	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df8c	            0x85d2	                           test edx, edx	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df8e	            0x7415	                            je 0x400dfa5	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df90	          0x8d4201	                      lea eax, [rdx + 1]	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df93	        0x89442420	             mov dword [rsp + 0x20], eax	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df97	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400df9c	        0xc6041020	              mov byte [rax + rdx], 0x20	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400dfa0	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400dfa5	      0x4803542430	             add rdx, qword [rsp + 0x30]	       110	string3.h	FUNCTION_197	CALL_3
0x400dfaa	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x400dfad	          0x4889d7	                            mov rdi, rdx	       110	string3.h	FUNCTION_197	CALL_3
0x400dfb0	      0xe800000000	                          call 0x400dfb5	       110	string3.h	FUNCTION_197	CALL_3
0x400dfb5	         0x15c2420	             add dword [rsp + 0x20], ebx	      8167	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400dfb9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8170	eval.c	FUNCTION_154	WHILE_1	CALL_11
0x400dfbe	      0xe800000000	                          call 0x400dfc3	      8170	eval.c	FUNCTION_154	WHILE_1	CALL_11
0x400dfc3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400dfc8	      0xe800000000	                          call 0x400dfcd	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400dfcd	          0x4889c3	                            mov rbx, rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400dfd0	      0x4889442408	                mov qword [rsp + 8], rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400dfd5	           0xfb600	                   movzx eax, byte [rax]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfd8	            0x84c0	                             test al, al	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfda	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfdd	            0x3c7c	                            cmp al, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfdf	           0xf95c2	                                setne dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfe2	            0x84d1	                             test cl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfe4	     0xf84c6000000	                            je 0x400e0b0	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfea	            0x3c0a	                             cmp al, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dfec	     0xf84be000000	                            je 0x400e0b0	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dff2	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8138	eval.c	FUNCTION_154	WHILE_1
0x400dff7	            0x31d2	                            xor edx, edx	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400dff9	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400dffe	            0x85c0	                           test eax, eax	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e000	      0x488d7c2408	                      lea rdi, [rsp + 8]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e005	           0xf94c2	                                 sete dl	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e008	      0xe800000000	                          call 0x400e00d	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e00d	            0x85c0	                           test eax, eax	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e00f	     0xf84eb000000	                            je 0x400e100	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400e015	      0x418b5c2430	            mov ebx, dword [r12 + 0x30] 	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400e01a	            0x85db	                           test ebx, ebx	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400e01c	            0x759b	                           jne 0x400dfb9	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400e01e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7085	eval.c	FUNCTION_128	CALL_1
0x400e023	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400e028	      0xe800000000	                          call 0x400e02d	      7085	eval.c	FUNCTION_128	CALL_1
0x400e02d	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400e030	          0x4889c5	                            mov rbp, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x400e033	     0xf852fffffff	                           jne 0x400df68	      7087	eval.c	FUNCTION_128
0x400e039	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400e03e	      0xbe02000000	                              mov esi, 2	      7087	eval.c	FUNCTION_128
0x400e043	      0xbd00000000	                              mov ebp, 0	      7087	eval.c	FUNCTION_128
0x400e048	      0xe800000000	                          call 0x400e04d	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400e04d	            0x85c0	                           test eax, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400e04f	     0xf8532ffffff	                           jne 0x400df87	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400e055	           0xf1f00	                         nop dword [rax]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400e058	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400e05d	      0xe800000000	                          call 0x400e062	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400e062	    0x660f1f440000	                    nop word [rax + rax]	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400e068	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8202	eval.c	FUNCTION_154	CALL_18
0x400e06d	      0xe800000000	                          call 0x400e072	      8202	eval.c	FUNCTION_154	CALL_18
0x400e072	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8204	eval.c	FUNCTION_154	IF_13
0x400e077	            0x85c0	                           test eax, eax	      8204	eval.c	FUNCTION_154	IF_13
0x400e079	            0x7407	                            je 0x400e082	      8204	eval.c	FUNCTION_154	IF_13
0x400e07b	    0x832d00000000	               sub dword [0x0400e082], 1	      8205	eval.c	FUNCTION_154	IF_13
0x400e082	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8207	eval.c	FUNCTION_154	CALL_19
0x400e087	      0xe800000000	                          call 0x400e08c	      8207	eval.c	FUNCTION_154	CALL_19
0x400e08c	      0x4989442408	                mov qword [r12 + 8], rax	      8207	eval.c	FUNCTION_154	CALL_19
0x400e091	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      8208	eval.c	FUNCTION_154
0x400e096	    0x644833042528	                xor rax, qword fs:[0x28]	      8208	eval.c	FUNCTION_154
0x400e09f	     0xf85d8000000	                           jne 0x400e17d	      8208	eval.c	FUNCTION_154
0x400e0a5	        0x4883c440	                           add rsp, 0x40	      8208	eval.c	FUNCTION_154
0x400e0a9	              0x5b	                                 pop rbx	      8208	eval.c	FUNCTION_154
0x400e0aa	              0x5d	                                 pop rbp	      8208	eval.c	FUNCTION_154
0x400e0ab	            0x415c	                                 pop r12	      8208	eval.c	FUNCTION_154
0x400e0ad	              0xc3	                                     ret	      8208	eval.c	FUNCTION_154
0x400e0ae	            0x6690	                                     nop	      8208	eval.c	FUNCTION_154
0x400e0b0	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      8174	eval.c	FUNCTION_154	IF_7
0x400e0b6	            0x74b0	                            je 0x400e068	      8174	eval.c	FUNCTION_154	IF_7
0x400e0b8	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400e0bd	            0x89c2	                            mov edx, eax	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400e0bf	          0x83e2fd	                     and edx, 0xfffffffd	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400e0c2	          0x83c280	             add edx, 0xffffffffffffff80	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400e0c5	            0x7467	                            je 0x400e12e	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400e0c7	      0x3d82000000	                           cmp eax, 0x82	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400e0cc	            0x746c	                            je 0x400e13a	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400e0ce	      0x3d80000000	                           cmp eax, 0x80	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400e0d3	            0x747f	                            je 0x400e154	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400e0d5	      0x3d8e000000	                           cmp eax, 0x8e	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400e0da	            0x758c	                           jne 0x400e068	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400e0dc	    0x498b9424a000	            mov rdx, qword [r12 + 0xa0] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e0e4	    0x498bb4249800	            mov rsi, qword [r12 + 0x98] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e0ec	      0xb903000000	                              mov ecx, 3	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e0f1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e0f6	      0xe800000000	                          call 0x400e0fb	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e0fb	      0xe968ffffff	                           jmp 0x400e068	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400e100	      0xe800000000	                          call 0x400e105	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400e105	            0x85c0	                           test eax, eax	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400e107	     0xf855bffffff	                           jne 0x400e068	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400e10d	            0x31ff	                            xor edi, edi	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e10f	      0xba05000000	                              mov edx, 5	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e114	      0xbe00000000	                              mov esi, 0	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e119	      0xe800000000	                          call 0x400e11e	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e11e	          0x4889de	                            mov rsi, rbx	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e121	          0x4889c7	                            mov rdi, rax	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e124	      0xe800000000	                          call 0x400e129	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e129	      0xe93affffff	                           jmp 0x400e068	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400e12e	      0xe800000000	                          call 0x400e133	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400e133	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400e138	            0xeb8d	                           jmp 0x400e0c7	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400e13a	    0x8b3500000000	            mov esi, dword [0x0400e140] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400e140	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400e145	      0xe800000000	                          call 0x400e14a	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400e14a	      0xe800000000	                          call 0x400e14f	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400e14f	      0xe914ffffff	                           jmp 0x400e068	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400e154	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400e159	    0x8b1d00000000	            mov ebx, dword [0x0400e15f] 	      8192	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400e15f	      0xe800000000	                          call 0x400e164	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400e164	    0x8b1500000000	            mov edx, dword [0x0400e16a] 	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400e16a	            0x85d2	                           test edx, edx	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400e16c	     0xf85f6feffff	                           jne 0x400e068	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400e172	    0x891d00000000	            mov dword [0x0400e178], ebx 	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400e178	      0xe9ebfeffff	                           jmp 0x400e068	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400e17d	      0xe800000000	                          call 0x400e182	      8208	eval.c	FUNCTION_154
set_vcount	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,0:functions,0	7
0x40022a0	            0x85d2	                           test edx, edx	      6458	eval.c	FUNCTION_108	IF_1
0x40022a2	            0x740e	                            je 0x40022b2	      6458	eval.c	FUNCTION_108	IF_1
0x40022a4	    0x488b05000000	            mov rax, qword [0x040022ab] 	      6459	eval.c	FUNCTION_108	IF_1
0x40022ab	    0x488905000000	            mov qword [0x040022b2], rax 	      6459	eval.c	FUNCTION_108	IF_1
0x40022b2	    0x48893d000000	            mov qword [0x040022b9], rdi 	      6460	eval.c	FUNCTION_108
0x40022b9	    0x488935000000	            mov qword [0x040022c0], rsi 	      6461	eval.c	FUNCTION_108
0x40022c0	              0xc3	                                     ret	      6461	eval.c	FUNCTION_108
set_ref_in_list	DO,0:WHILE,0:FOR,2:ELSE,0:IF,2:SWITCH,0:CALL,2:functions,0	58
0x40018d0	            0x4155	                                push r13	      5314	eval.c	FUNCTION_84
0x40018d2	            0x4154	                                push r12	      5314	eval.c	FUNCTION_84
0x40018d4	          0x4531ed	                          xor r13d, r13d	      5316	eval.c	FUNCTION_84
0x40018d7	              0x55	                                push rbp	      5314	eval.c	FUNCTION_84
0x40018d8	              0x53	                                push rbx	      5314	eval.c	FUNCTION_84
0x40018d9	          0x4189f4	                           mov r12d, esi	      5314	eval.c	FUNCTION_84
0x40018dc	          0x4889fb	                            mov rbx, rdi	      5314	eval.c	FUNCTION_84
0x40018df	          0x4889d5	                            mov rbp, rdx	      5314	eval.c	FUNCTION_84
0x40018e2	        0x4883ec18	                           sub rsp, 0x18	      5314	eval.c	FUNCTION_84
0x40018e6	    0x64488b042528	                mov rax, qword fs:[0x28]	      5314	eval.c	FUNCTION_84
0x40018ef	      0x4889442408	                mov qword [rsp + 8], rax	      5314	eval.c	FUNCTION_84
0x40018f4	            0x31c0	                            xor eax, eax	      5314	eval.c	FUNCTION_84
0x40018f6	          0x4585ed	                         test r13d, r13d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x40018f9	    0x48c704240000	                      mov qword [rsp], 0	      5318	eval.c	FUNCTION_84
0x4001901	            0x755a	                           jne 0x400195d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001903	       0xf1f440000	                   nop dword [rax + rax]	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001908	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400190b	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400190e	            0x750c	                           jne 0x400191c	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001910	            0xeb2d	                           jmp 0x400193f	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001912	    0x660f1f440000	                    nop word [rax + rax]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001918	            0x85c0	                           test eax, eax	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400191a	            0x751a	                           jne 0x4001936	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x400191c	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001920	          0x4889e1	                            mov rcx, rsp	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001923	          0x4889ea	                            mov rdx, rbp	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001926	          0x4489e6	                           mov esi, r12d	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001929	      0xe800000000	                          call 0x400192e	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400192e	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001931	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001934	            0x75e2	                           jne 0x4001918	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001936	          0x4531ed	                          xor r13d, r13d	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001939	            0x85c0	                           test eax, eax	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400193b	        0x410f95c5	                              setne r13b	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x400193f	        0x488b3c24	                    mov rdi, qword [rsp]	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001943	          0x4885ff	                           test rdi, rdi	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001946	            0x7424	                            je 0x400196c	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001948	        0x488b4708	                mov rax, qword [rdi + 8]	      5337	eval.c	FUNCTION_84	FOR_1
0x400194c	          0x488b1f	                    mov rbx, qword [rdi]	      5335	eval.c	FUNCTION_84	FOR_1
0x400194f	        0x48890424	                    mov qword [rsp], rax	      5337	eval.c	FUNCTION_84	FOR_1
0x4001953	      0xe800000000	                          call 0x4001958	      5338	eval.c	FUNCTION_84	FOR_1	CALL_2
0x4001958	          0x4585ed	                         test r13d, r13d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x400195b	            0x74ab	                            je 0x4001908	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x400195d	        0x488b3c24	                    mov rdi, qword [rsp]	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001961	    0x41bd01000000	                             mov r13d, 1	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001967	          0x4885ff	                           test rdi, rdi	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x400196a	            0x75dc	                           jne 0x4001948	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x400196c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5342	eval.c	FUNCTION_84
0x4001971	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5342	eval.c	FUNCTION_84
0x400197a	          0x4489e8	                           mov eax, r13d	      5342	eval.c	FUNCTION_84
0x400197d	            0x750b	                           jne 0x400198a	      5342	eval.c	FUNCTION_84
0x400197f	        0x4883c418	                           add rsp, 0x18	      5342	eval.c	FUNCTION_84
0x4001983	              0x5b	                                 pop rbx	      5342	eval.c	FUNCTION_84
0x4001984	              0x5d	                                 pop rbp	      5342	eval.c	FUNCTION_84
0x4001985	            0x415c	                                 pop r12	      5342	eval.c	FUNCTION_84
0x4001987	            0x415d	                                 pop r13	      5342	eval.c	FUNCTION_84
0x4001989	              0xc3	                                     ret	      5342	eval.c	FUNCTION_84
0x400198a	      0xe800000000	                          call 0x400198f	      5342	eval.c	FUNCTION_84
set_var_lval	DO,0:WHILE,0:FOR,2:ELSE,9:IF,20:SWITCH,0:CALL,27:functions,0	280
0x4005fb0	            0x4157	                                push r15	      2246	eval.c	FUNCTION_46
0x4005fb2	            0x4156	                                push r14	      2246	eval.c	FUNCTION_46
0x4005fb4	            0x4155	                                push r13	      2246	eval.c	FUNCTION_46
0x4005fb6	            0x4154	                                push r12	      2246	eval.c	FUNCTION_46
0x4005fb8	          0x4d89c4	                             mov r12, r8	      2246	eval.c	FUNCTION_46
0x4005fbb	              0x55	                                push rbp	      2246	eval.c	FUNCTION_46
0x4005fbc	              0x53	                                push rbx	      2246	eval.c	FUNCTION_46
0x4005fbd	            0x89cd	                            mov ebp, ecx	      2246	eval.c	FUNCTION_46
0x4005fbf	          0x4889fb	                            mov rbx, rdi	      2246	eval.c	FUNCTION_46
0x4005fc2	        0x4883ec48	                           sub rsp, 0x48	      2246	eval.c	FUNCTION_46
0x4005fc6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	eval.c	FUNCTION_46
0x4005fcf	      0x4889442438	             mov qword [rsp + 0x38], rax	      2246	eval.c	FUNCTION_46
0x4005fd4	            0x31c0	                            xor eax, eax	      2246	eval.c	FUNCTION_46
0x4005fd6	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2251	eval.c	FUNCTION_46	IF_1
0x4005fda	      0x4889542408	                mov qword [rsp + 8], rdx	      2246	eval.c	FUNCTION_46
0x4005fdf	          0x4885c0	                           test rax, rax	      2251	eval.c	FUNCTION_46	IF_1
0x4005fe2	     0xf8428020000	                            je 0x4006210	      2251	eval.c	FUNCTION_46	IF_1
0x4005fe8	      0x48837f5800	               cmp qword [rdi + 0x58], 0	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4005fed	          0x488b37	                    mov rsi, qword [rdi]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4005ff0	     0xf84da020000	                            je 0x40062d0	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4005ff6	        0x488b4008	                mov rax, qword [rax + 8]	      2279	eval.c	FUNCTION_46	ELSE_2	IF_5
0x4005ffa	           0xfbe38	                   movsx edi, byte [rax]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4005ffd	            0x31d2	                            xor edx, edx	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4005fff	      0xe800000000	                          call 0x4006004	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4006004	            0x85c0	                           test eax, eax	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4006006	     0xf8584000000	                           jne 0x4006090	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x400600c	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x400600f	            0x85f6	                           test esi, esi	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4006011	     0xf84a1000000	                            je 0x40060b8	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4006017	      0x488b442408	                mov rax, qword [rsp + 8]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400601c	        0x4c8b7b18	            mov r15, qword [rbx + 0x18] 	      2283	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4006020	        0x4c637330	         movsxd r14, dword [rbx + 0x30] 	      2284	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4006024	        0x488b4008	                mov rax, qword [rax + 8]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006028	          0x4d85ff	                           test r15, r15	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400602b	          0x488b28	                    mov rbp, qword [rax]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400602e	     0xf8438010000	                            je 0x400616c	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006034	          0x4885ed	                           test rbp, rbp	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006037	     0xf842f010000	                            je 0x400616c	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400603d	          0x4531ed	                          xor r13d, r13d	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006040	            0xeb3b	                           jmp 0x400607d	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006042	    0x660f1f440000	                    nop word [rax + rax]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006048	        0x488b6d00	                    mov rbp, qword [rbp]	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400604c	          0x4885ed	                           test rbp, rbp	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400604f	     0xf840b010000	                            je 0x4006160	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4006055	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4006058	            0x85c9	                           test ecx, ecx	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400605a	            0x7511	                           jne 0x400606d	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400605c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4006060	        0x4b8d142e	                    lea rdx, [r14 + r13]	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4006064	          0x4839c2	                            cmp rdx, rax	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4006067	     0xf84db020000	                            je 0x4006348	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400606d	          0x4d8b3f	                    mov r15, qword [r15]	      2296	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006070	        0x4983c501	                              add r13, 1	      2296	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006074	          0x4d85ff	                           test r15, r15	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4006077	     0xf84e3000000	                            je 0x4006160	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400607d	      0x410fbe7f14	           movsx edi, byte [r15 + 0x14] 	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4006082	          0x488b33	                    mov rsi, qword [rbx]	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4006085	            0x31d2	                            xor edx, edx	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4006087	      0xe800000000	                          call 0x400608c	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x400608c	            0x85c0	                           test eax, eax	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x400608e	            0x74b8	                            je 0x4006048	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4006090	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2378	eval.c	FUNCTION_46
0x4006095	    0x644833042528	                xor rax, qword fs:[0x28]	      2378	eval.c	FUNCTION_46
0x400609e	     0xf8547030000	                           jne 0x40063eb	      2378	eval.c	FUNCTION_46
0x40060a4	        0x4883c448	                           add rsp, 0x48	      2378	eval.c	FUNCTION_46
0x40060a8	              0x5b	                                 pop rbx	      2378	eval.c	FUNCTION_46
0x40060a9	              0x5d	                                 pop rbp	      2378	eval.c	FUNCTION_46
0x40060aa	            0x415c	                                 pop r12	      2378	eval.c	FUNCTION_46
0x40060ac	            0x415d	                                 pop r13	      2378	eval.c	FUNCTION_46
0x40060ae	            0x415e	                                 pop r14	      2378	eval.c	FUNCTION_46
0x40060b0	            0x415f	                                 pop r15	      2378	eval.c	FUNCTION_46
0x40060b2	              0xc3	                                     ret	      2378	eval.c	FUNCTION_46
0x40060b3	       0xf1f440000	                   nop dword [rax + rax]	      2378	eval.c	FUNCTION_46
0x40060b8	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x40060bc	          0x4885ff	                           test rdi, rdi	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x40060bf	     0xf845b020000	                            je 0x4006320	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x40060c5	          0x4d85e4	                           test r12, r12	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060c8	            0x7426	                            je 0x40060f0	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060ca	      0x41803c243d	                    cmp byte [r12], 0x3d	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060cf	            0x741f	                            je 0x40060f0	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060d1	            0x31ff	                            xor edi, edi	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060d3	      0xba05000000	                              mov edx, 5	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060d8	      0xbe00000000	                              mov esi, 0	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060dd	      0xe800000000	                          call 0x40060e2	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060e2	          0x4c89e6	                            mov rsi, r12	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060e5	          0x4889c7	                            mov rdi, rax	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060e8	      0xe800000000	                          call 0x40060ed	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40060ed	            0xeba1	                           jmp 0x4006090	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060ef	              0x90	                                     nop	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40060f0	      0xe800000000	                          call 0x40060f5	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x40060f5	          0x4885c0	                           test rax, rax	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x40060f8	      0x4889442418	             mov qword [rsp + 0x18], rax	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x40060fd	            0x7491	                            je 0x4006090	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x40060ff	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4006103	          0x4889c6	                            mov rsi, rax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4006106	        0x488b7a08	                mov rdi, qword [rdx + 8]	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x400610a	      0xe800000000	                          call 0x400610f	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x400610f	            0x85c0	                           test eax, eax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4006111	     0xf8449020000	                            je 0x4006360	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4006117	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x400611c	        0x48897310	             mov qword [rbx + 0x10], rsi	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4006120	            0x85ed	                           test ebp, ebp	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x4006122	     0xf85e8010000	                           jne 0x4006310	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x4006128	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x400612d	          0x488b01	                    mov rax, qword [rcx]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4006130	        0x488b5108	                mov rdx, qword [rcx + 8]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4006134	          0x488906	                    mov qword [rsi], rax	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4006137	        0x48895608	                mov qword [rsi + 8], rdx	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x400613b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x400613f	        0xc6400400	                   mov byte [rax + 4], 0	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4006143	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400614a	    0x48c741080000	                  mov qword [rcx + 8], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4006152	      0xe939ffffff	                           jmp 0x4006090	        90	string3.h	FUNCTION_194	CALL_6
0x4006157	    0x660f1f840000	                    nop word [rax + rax]	        90	string3.h	FUNCTION_194	CALL_6
0x4006160	      0x488b442408	                mov rax, qword [rsp + 8]	        90	string3.h	FUNCTION_194	CALL_6
0x4006165	        0x488b4008	                mov rax, qword [rax + 8]	        90	string3.h	FUNCTION_194	CALL_6
0x4006169	          0x488b28	                    mov rbp, qword [rax]	        90	string3.h	FUNCTION_194	CALL_6
0x400616c	          0x4885ed	                           test rbp, rbp	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400616f	     0xf84fb000000	                            je 0x4006270	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006175	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006179	            0xeb4c	                           jmp 0x40061c7	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400617b	       0xf1f440000	                   nop dword [rax + rax]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006180	        0x488d7510	                   lea rsi, [rbp + 0x10]	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4006184	        0x4883c710	                           add rdi, 0x10	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4006188	          0x4c89e2	                            mov rdx, r12	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x400618b	      0xe850dfffff	                          call sym.tv_op	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4006190	        0x488b6d00	                    mov rbp, qword [rbp]	      2312	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006194	          0x4885ed	                           test rbp, rbp	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4006197	     0xf84d3000000	                            je 0x4006270	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x400619d	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061a0	            0x85d2	                           test edx, edx	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061a2	            0x750e	                           jne 0x40061b2	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061a4	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061a8	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061ac	     0xf84fe000000	                            je 0x40062b0	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40061b2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40061b6	          0x488b38	                    mov rdi, qword [rax]	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40061b9	          0x4885ff	                           test rdi, rdi	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40061bc	            0x7432	                            je 0x40061f0	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40061be	      0x4883433001	               add qword [rbx + 0x30], 1	      2325	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x40061c3	        0x48897b18	             mov qword [rbx + 0x18], rdi	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x40061c7	          0x4d85e4	                           test r12, r12	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40061ca	            0x7407	                            je 0x40061d3	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40061cc	      0x41803c243d	                    cmp byte [r12], 0x3d	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40061d1	            0x75ad	                           jne 0x4006180	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40061d3	        0x4883c710	                           add rdi, 0x10	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x40061d7	      0xe800000000	                          call 0x40061dc	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x40061dc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061e0	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061e4	        0x488d7010	                   lea rsi, [rax + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061e8	      0xe800000000	                          call 0x40061ed	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061ed	            0xeba1	                           jmp 0x4006190	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061ef	              0x90	                                     nop	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40061f0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40061f4	            0x31f6	                            xor esi, esi	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40061f6	      0xe800000000	                          call 0x40061fb	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40061fb	            0x85c0	                           test eax, eax	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40061fd	            0x7471	                            je 0x4006270	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40061ff	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4006203	          0x488b38	                    mov rdi, qword [rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4006206	            0xebb6	                           jmp 0x40061be	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4006208	     0xf1f84000000	                   nop dword [rax + rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4006210	          0x4d85c0	                             test r8, r8	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x4006213	        0x440fb636	                  movzx r14d, byte [rsi]	      2253	eval.c	FUNCTION_46	IF_1
0x4006217	          0x4989f5	                            mov r13, rsi	      2253	eval.c	FUNCTION_46	IF_1
0x400621a	          0xc60600	                       mov byte [rsi], 0	      2254	eval.c	FUNCTION_46	IF_1
0x400621d	     0xf84bd000000	                            je 0x40062e0	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x4006223	        0x4180383d	                     cmp byte [r8], 0x3d	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x4006227	     0xf84b3000000	                            je 0x40062e0	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x400622d	          0x488b2f	                    mov rbp, qword [rdi]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006230	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2260	eval.c	FUNCTION_46	IF_1	IF_2
0x4006239	          0x4889ef	                            mov rdi, rbp	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400623c	      0xe800000000	                          call 0x4006241	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006241	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006246	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400624b	          0x4531c9	                            xor r9d, r9d	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400624e	    0x41b801000000	                              mov r8d, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006254	            0x89c6	                            mov esi, eax	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006256	          0x4889ef	                            mov rdi, rbp	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006259	      0xe800000000	                          call 0x400625e	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x400625e	          0x83f801	                              cmp eax, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006261	     0xf841a010000	                            je 0x4006381	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x4006267	        0x45887500	                    mov byte [r13], r14b	      2275	eval.c	FUNCTION_46	IF_1
0x400626b	      0xe920feffff	                           jmp 0x4006090	      2275	eval.c	FUNCTION_46	IF_1
0x4006270	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006273	            0x85c0	                           test eax, eax	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006275	     0xf847d000000	                            je 0x40062f8	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400627b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400627f	          0x4885c0	                           test rax, rax	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006282	     0xf8408feffff	                            je 0x4006090	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006288	        0x48833800	                      cmp qword [rax], 0	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400628c	     0xf84fefdffff	                            je 0x4006090	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006292	            0x31ff	                            xor edi, edi	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006294	      0xba05000000	                              mov edx, 5	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006299	      0xbe00000000	                              mov esi, 0	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400629e	      0xe800000000	                          call 0x40062a3	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40062a3	          0x4889c7	                            mov rdi, rax	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40062a6	      0xe800000000	                          call 0x40062ab	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40062ab	      0xe9e0fdffff	                           jmp 0x4006090	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40062b0	            0x31ff	                            xor edi, edi	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062b2	      0xba05000000	                              mov edx, 5	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062b7	      0xbe00000000	                              mov esi, 0	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062bc	      0xe800000000	                          call 0x40062c1	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062c1	          0x4889c7	                            mov rdi, rax	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062c4	      0xe800000000	                          call 0x40062c9	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062c9	      0xe9c2fdffff	                           jmp 0x4006090	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062ce	            0x6690	                                     nop	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x40062d0	         0xfbe7804	               movsx edi, byte [rax + 4]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40062d4	      0xe924fdffff	                           jmp 0x4005ffd	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40062d9	     0xf1f80000000	                         nop dword [rax]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x40062e0	      0x488b742408	                mov rsi, qword [rsp + 8]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062e5	          0x488b3b	                    mov rdi, qword [rbx]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062e8	            0x89ea	                            mov edx, ebp	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062ea	      0xe800000000	                          call 0x40062ef	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062ef	      0xe973ffffff	                           jmp 0x4006267	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062f4	         0xf1f4000	                         nop dword [rax]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062f8	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40062fc	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006300	     0xf848afdffff	                            je 0x4006090	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006306	      0xe987ffffff	                           jmp 0x4006292	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400630b	       0xf1f440000	                   nop dword [rax + rax]	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4006310	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4006315	      0xe800000000	                          call 0x400631a	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x400631a	      0xe971fdffff	                           jmp 0x4006090	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x400631f	              0x90	                                     nop	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4006320	          0x4d85e4	                           test r12, r12	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4006323	            0x744a	                            je 0x400636f	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4006325	      0x41803c243d	                    cmp byte [r12], 0x3d	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x400632a	            0x7443	                            je 0x400636f	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x400632c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4006330	      0x488b742408	                mov rsi, qword [rsp + 8]	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4006335	          0x4c89e2	                            mov rdx, r12	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4006338	      0xe8a3ddffff	                          call sym.tv_op	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x400633d	      0xe94efdffff	                           jmp 0x4006090	      2361	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4006342	    0x660f1f440000	                    nop word [rax + rax]	      2361	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4006348	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400634d	        0x488b5108	                mov rdx, qword [rcx + 8]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006351	          0x488b2a	                    mov rbp, qword [rdx]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006354	          0x4885ed	                           test rbp, rbp	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006357	     0xf8518feffff	                           jne 0x4006175	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400635d	            0xeb9d	                           jmp 0x40062fc	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400635f	              0x90	                                     nop	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4006360	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x4006365	      0xe800000000	                          call 0x400636a	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x400636a	      0xe921fdffff	                           jmp 0x4006090	      2354	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18
0x400636f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4006373	      0xe800000000	                          call 0x4006378	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4006378	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x400637c	      0xe99ffdffff	                           jmp 0x4006120	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4006381	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4006386	          0x4885c0	                           test rax, rax	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4006389	            0x7438	                            je 0x40063c3	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x400638b	         0xfb67810	           movzx edi, byte [rax + 0x10] 	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400638f	          0x488b33	                    mov rsi, qword [rbx]	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4006392	            0x31d2	                            xor edx, edx	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4006394	      0xe800000000	                          call 0x4006399	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4006399	            0x85c0	                           test eax, eax	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400639b	            0x740f	                            je 0x40063ac	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400639d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x40063a2	      0xe800000000	                          call 0x40063a7	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x40063a7	      0xe9bbfeffff	                           jmp 0x4006267	      2256	eval.c	FUNCTION_46	IF_1	IF_2
0x40063ac	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063b1	          0x488b33	                    mov rsi, qword [rbx]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063b4	            0x31d2	                            xor edx, edx	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063b6	         0xfbe7804	               movsx edi, byte [rax + 4]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063ba	      0xe800000000	                          call 0x40063bf	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063bf	            0x85c0	                           test eax, eax	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063c1	            0x75da	                           jne 0x400639d	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x40063c3	      0x488b742408	                mov rsi, qword [rsp + 8]	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063c8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063cd	          0x4c89e2	                            mov rdx, r12	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063d0	      0xe80bddffff	                          call sym.tv_op	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063d5	          0x83f801	                              cmp eax, 1	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063d8	            0x75c3	                           jne 0x400639d	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40063da	          0x488b3b	                    mov rdi, qword [rbx]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40063dd	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40063e2	            0x31d2	                            xor edx, edx	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40063e4	      0xe800000000	                          call 0x40063e9	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40063e9	            0xebb2	                           jmp 0x400639d	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40063eb	      0xe800000000	                      call sym.setwinvar	      2378	eval.c	FUNCTION_46
var_exists	DO,0:WHILE,0:FOR,0:ELSE,0:IF,5:SWITCH,0:CALL,5:functions,0	56
0x400e210	              0x55	                                push rbp	      9412	eval.c	FUNCTION_183
0x400e211	              0x53	                                push rbx	      9412	eval.c	FUNCTION_183
0x400e212	          0x4889fd	                            mov rbp, rdi	      9420	eval.c	FUNCTION_183
0x400e215	      0xba01000000	                              mov edx, 1	      9421	eval.c	FUNCTION_183	CALL_1
0x400e21a	            0x31db	                            xor ebx, ebx	      9417	eval.c	FUNCTION_183
0x400e21c	        0x4883ec48	                           sub rsp, 0x48	      9412	eval.c	FUNCTION_183
0x400e220	      0x48897c2408	                mov qword [rsp + 8], rdi	      9412	eval.c	FUNCTION_183
0x400e225	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9421	eval.c	FUNCTION_183	CALL_1
0x400e22a	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9421	eval.c	FUNCTION_183	CALL_1
0x400e22f	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      9412	eval.c	FUNCTION_183
0x400e238	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      9412	eval.c	FUNCTION_183
0x400e23d	            0x31c9	                            xor ecx, ecx	      9412	eval.c	FUNCTION_183
0x400e23f	      0xe800000000	                          call 0x400e244	      9421	eval.c	FUNCTION_183	CALL_1
0x400e244	            0x85c0	                           test eax, eax	      9422	eval.c	FUNCTION_183	IF_1
0x400e246	            0x7e2d	                           jle 0x400e275	      9422	eval.c	FUNCTION_183	IF_1
0x400e248	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9424	eval.c	FUNCTION_183	IF_1	IF_2
0x400e24d	      0x488d542420	                   lea rdx, [rsp + 0x20]	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e252	    0x41b901000000	                              mov r9d, 1	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e258	            0x89c6	                            mov esi, eax	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e25a	          0x4885ff	                           test rdi, rdi	      9420	eval.c	FUNCTION_183
0x400e25d	        0x480f44fd	                          cmove rdi, rbp	      9420	eval.c	FUNCTION_183
0x400e261	          0x4531c0	                            xor r8d, r8d	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e264	            0x31c9	                            xor ecx, ecx	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e266	            0x31db	                            xor ebx, ebx	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e268	      0xe800000000	                          call 0x400e26d	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e26d	          0x83f801	                              cmp eax, 1	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e270	           0xf94c3	                                 sete bl	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x400e273	            0x743b	                            je 0x400e2b0	      9427	eval.c	FUNCTION_183	IF_1	IF_3
0x400e275	      0x488b442408	                mov rax, qword [rsp + 8]	      9435	eval.c	FUNCTION_183	IF_5
0x400e27a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9438	eval.c	FUNCTION_183	CALL_5
0x400e27f	          0x803800	                       cmp byte [rax], 0	      9436	eval.c	FUNCTION_183	IF_5
0x400e282	      0xb800000000	                              mov eax, 0	      9436	eval.c	FUNCTION_183	IF_5
0x400e287	           0xf45d8	                         cmovne ebx, eax	      9436	eval.c	FUNCTION_183	IF_5
0x400e28a	      0xe800000000	                          call 0x400e28f	      9438	eval.c	FUNCTION_183	CALL_5
0x400e28f	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      9440	eval.c	FUNCTION_183
0x400e294	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9440	eval.c	FUNCTION_183
0x400e29d	            0x89d8	                            mov eax, ebx	      9440	eval.c	FUNCTION_183
0x400e29f	            0x753b	                           jne 0x400e2dc	      9440	eval.c	FUNCTION_183
0x400e2a1	        0x4883c448	                           add rsp, 0x48	      9440	eval.c	FUNCTION_183
0x400e2a5	              0x5b	                                 pop rbx	      9440	eval.c	FUNCTION_183
0x400e2a6	              0x5d	                                 pop rbp	      9440	eval.c	FUNCTION_183
0x400e2a7	              0xc3	                                     ret	      9440	eval.c	FUNCTION_183
0x400e2a8	     0xf1f84000000	                   nop dword [rax + rax]	      9440	eval.c	FUNCTION_183
0x400e2b0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2b5	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2ba	            0x31c9	                            xor ecx, ecx	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2bc	      0xba01000000	                              mov edx, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2c1	            0x31db	                            xor ebx, ebx	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2c3	      0xe800000000	                          call 0x400e2c8	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2c8	          0x83f801	                              cmp eax, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2cb	           0xf94c3	                                 sete bl	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x400e2ce	            0x75a5	                           jne 0x400e275	      9431	eval.c	FUNCTION_183	IF_1	IF_3	IF_4
0x400e2d0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x400e2d5	      0xe800000000	                          call 0x400e2da	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x400e2da	            0xeb99	                           jmp 0x400e275	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x400e2dc	      0xe800000000	                          call 0x400e2e1	      9440	eval.c	FUNCTION_183
set_var	DO,0:WHILE,0:FOR,0:ELSE,6:IF,17:SWITCH,0:CALL,29:functions,0	197
0x4005c30	            0x4156	                                push r14	      7525	eval.c	FUNCTION_143
0x4005c32	            0x4155	                                push r13	      7525	eval.c	FUNCTION_143
0x4005c34	          0x4189d5	                           mov r13d, edx	      7525	eval.c	FUNCTION_143
0x4005c37	            0x4154	                                push r12	      7525	eval.c	FUNCTION_143
0x4005c39	              0x55	                                push rbp	      7525	eval.c	FUNCTION_143
0x4005c3a	          0x4989f4	                            mov r12, rsi	      7525	eval.c	FUNCTION_143
0x4005c3d	              0x53	                                push rbx	      7525	eval.c	FUNCTION_143
0x4005c3e	          0x4889fb	                            mov rbx, rdi	      7525	eval.c	FUNCTION_143
0x4005c41	        0x4883ec20	                           sub rsp, 0x20	      7525	eval.c	FUNCTION_143
0x4005c45	      0x488d742410	                   lea rsi, [rsp + 0x10]	      7530	eval.c	FUNCTION_143	CALL_1
0x4005c4a	    0x64488b042528	                mov rax, qword fs:[0x28]	      7525	eval.c	FUNCTION_143
0x4005c53	      0x4889442418	             mov qword [rsp + 0x18], rax	      7525	eval.c	FUNCTION_143
0x4005c58	            0x31c0	                            xor eax, eax	      7525	eval.c	FUNCTION_143
0x4005c5a	      0xe800000000	                          call 0x4005c5f	      7530	eval.c	FUNCTION_143	CALL_1
0x4005c5f	          0x4885c0	                           test rax, rax	      7531	eval.c	FUNCTION_143	IF_1
0x4005c62	            0x740a	                            je 0x4005c6e	      7531	eval.c	FUNCTION_143	IF_1
0x4005c64	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7531	eval.c	FUNCTION_143	IF_1
0x4005c69	          0x803a00	                       cmp byte [rdx], 0	      7531	eval.c	FUNCTION_143	IF_1
0x4005c6c	            0x7542	                           jne 0x4005cb0	      7531	eval.c	FUNCTION_143	IF_1
0x4005c6e	      0xbe00000000	                              mov esi, 0	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c73	            0x31ff	                            xor edi, edi	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c75	      0xba05000000	                              mov edx, 5	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c7a	      0xe800000000	                          call 0x4005c7f	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c7f	          0x4889de	                            mov rsi, rbx	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c82	          0x4889c7	                            mov rdi, rax	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c85	      0xe800000000	                          call 0x4005c8a	      7597	eval.c	FUNCTION_143	ELSE_5	IF_13	CALL_20
0x4005c8a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7626	eval.c	FUNCTION_143
0x4005c8f	    0x644833042528	                xor rax, qword fs:[0x28]	      7626	eval.c	FUNCTION_143
0x4005c98	     0xf855f020000	                           jne 0x4005efd	      7626	eval.c	FUNCTION_143
0x4005c9e	        0x4883c420	                           add rsp, 0x20	      7626	eval.c	FUNCTION_143
0x4005ca2	              0x5b	                                 pop rbx	      7626	eval.c	FUNCTION_143
0x4005ca3	              0x5d	                                 pop rbp	      7626	eval.c	FUNCTION_143
0x4005ca4	            0x415c	                                 pop r12	      7626	eval.c	FUNCTION_143
0x4005ca6	            0x415d	                                 pop r13	      7626	eval.c	FUNCTION_143
0x4005ca8	            0x415e	                                 pop r14	      7626	eval.c	FUNCTION_143
0x4005caa	              0xc3	                                     ret	      7626	eval.c	FUNCTION_143
0x4005cab	       0xf1f440000	                   nop dword [rax + rax]	      7626	eval.c	FUNCTION_143
0x4005cb0	            0x31f6	                            xor esi, esi	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cb2	      0xb901000000	                              mov ecx, 1	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cb7	          0x4889c7	                            mov rdi, rax	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cba	          0x4889c5	                            mov rbp, rax	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cbd	      0xe800000000	                          call 0x4005cc2	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cc2	          0x4885c0	                           test rax, rax	      7539	eval.c	FUNCTION_143	IF_2
0x4005cc5	          0x4989c6	                            mov r14, rax	      7536	eval.c	FUNCTION_143	CALL_4
0x4005cc8	     0xf84b2000000	                            je 0x4005d80	      7539	eval.c	FUNCTION_143	IF_2
0x4005cce	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x4005cd2	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x4005cd5	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x4005cd8	            0x767e	                           jbe 0x4005d58	      7542	eval.c	FUNCTION_143	IF_3
0x4005cda	      0x410fb67e10	           movzx edi, byte [r14 + 0x10] 	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005cdf	            0x31d2	                            xor edx, edx	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005ce1	          0x4889de	                            mov rsi, rbx	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005ce4	      0xe800000000	                          call 0x4005ce9	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005ce9	            0x85c0	                           test eax, eax	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005ceb	            0x759d	                           jne 0x4005c8a	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005ced	      0x410fbe7e04	               movsx edi, byte [r14 + 4]	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005cf2	            0x31d2	                            xor edx, edx	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005cf4	          0x4889de	                            mov rsi, rbx	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005cf7	      0xe800000000	                          call 0x4005cfc	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005cfc	            0x85c0	                           test eax, eax	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005cfe	            0x758a	                           jne 0x4005c8a	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4005d00	    0x4881fd000000	                              cmp rbp, 0	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x4005d07	     0xf8403010000	                            je 0x4005e10	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x4005d0d	          0x4c89f7	                            mov rdi, r14	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4005d10	      0xe800000000	                          call 0x4005d15	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4005d15	          0x4585ed	                         test r13d, r13d	      7618	eval.c	FUNCTION_143	IF_17
0x4005d18	            0x7556	                           jne 0x4005d70	      7618	eval.c	FUNCTION_143	IF_17
0x4005d1a	        0x418b0424	                    mov eax, dword [r12]	      7618	eval.c	FUNCTION_143	IF_17
0x4005d1e	          0x83f801	                              cmp eax, 1	      7618	eval.c	FUNCTION_143	IF_17
0x4005d21	            0x744d	                            je 0x4005d70	      7618	eval.c	FUNCTION_143	IF_17
0x4005d23	          0x83f807	                              cmp eax, 7	      7618	eval.c	FUNCTION_143	IF_17
0x4005d26	            0x7448	                            je 0x4005d70	      7618	eval.c	FUNCTION_143	IF_17
0x4005d28	        0x498b0424	                    mov rax, qword [r12]	      7622	eval.c	FUNCTION_143	ELSE_6
0x4005d2c	      0x498b542408	                mov rdx, qword [r12 + 8]	      7622	eval.c	FUNCTION_143	ELSE_6
0x4005d31	          0x498906	                    mov qword [r14], rax	      7622	eval.c	FUNCTION_143	ELSE_6
0x4005d34	        0x49895608	                mov qword [r14 + 8], rdx	      7622	eval.c	FUNCTION_143	ELSE_6
0x4005d38	      0x41c6460400	                   mov byte [r14 + 4], 0	      7623	eval.c	FUNCTION_143	ELSE_6
0x4005d3d	    0x49c704240000	                      mov qword [r12], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4005d45	    0x49c744240800	                  mov qword [r12 + 8], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4005d4e	      0xe937ffffff	                           jmp 0x4005c8a	        90	string3.h	FUNCTION_194	CALL_6
0x4005d53	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_194	CALL_6
0x4005d58	            0x31f6	                            xor esi, esi	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d5a	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d5d	      0xe800000000	                          call 0x4005d62	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d62	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d64	     0xf8520ffffff	                           jne 0x4005c8a	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d6a	      0xe96bffffff	                           jmp 0x4005cda	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d6f	              0x90	                                     nop	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005d70	          0x4c89f6	                            mov rsi, r14	      7619	eval.c	FUNCTION_143	CALL_28
0x4005d73	          0x4c89e7	                            mov rdi, r12	      7619	eval.c	FUNCTION_143	CALL_28
0x4005d76	      0xe800000000	                          call 0x4005d7b	      7619	eval.c	FUNCTION_143	CALL_28
0x4005d7b	      0xe90affffff	                           jmp 0x4005c8a	      7619	eval.c	FUNCTION_143	CALL_28
0x4005d80	      0xbe01000000	                              mov esi, 1	      7540	eval.c	FUNCTION_143	CALL_5
0x4005d85	          0x4889df	                            mov rdi, rbx	      7540	eval.c	FUNCTION_143	CALL_5
0x4005d88	      0xe800000000	                          call 0x4005d8d	      7540	eval.c	FUNCTION_143	CALL_5
0x4005d8d	          0x4989c6	                            mov r14, rax	      7540	eval.c	FUNCTION_143	CALL_5
0x4005d90	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x4005d94	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x4005d97	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x4005d9a	     0xf8679010000	                           jbe 0x4005f19	      7542	eval.c	FUNCTION_143	IF_3
0x4005da0	          0x4d85f6	                           test r14, r14	      7546	eval.c	FUNCTION_143	IF_4
0x4005da3	     0xf8531ffffff	                           jne 0x4005cda	      7546	eval.c	FUNCTION_143	IF_4
0x4005da9	    0x4881fd000000	                              cmp rbp, 0	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x4005db0	     0xf84b8feffff	                            je 0x4005c6e	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x4005db6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005dbb	      0xe800000000	                          call 0x4005dc0	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005dc0	            0x85c0	                           test eax, eax	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005dc2	     0xf84c2feffff	                            je 0x4005c8a	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4005dc8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4005dcd	      0xe800000000	                          call 0x4005dd2	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4005dd2	          0x8d7818	                   lea edi, [rax + 0x18]	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x4005dd5	      0xe800000000	                          call 0x4005dda	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x4005dda	          0x4885c0	                           test rax, rax	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x4005ddd	          0x4989c6	                            mov r14, rax	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x4005de0	     0xf84a4feffff	                            je 0x4005c8a	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x4005de6	        0x488d5011	                   lea rdx, [rax + 0x11]	      7609	eval.c	FUNCTION_143	ELSE_5	CALL_24
0x4005dea	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       110	string3.h	FUNCTION_197	CALL_3
0x4005def	          0x4889d7	                            mov rdi, rdx	       110	string3.h	FUNCTION_197	CALL_3
0x4005df2	      0xe800000000	                          call 0x4005df7	       110	string3.h	FUNCTION_197	CALL_3
0x4005df7	          0x4889ef	                            mov rdi, rbp	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x4005dfa	          0x4889c6	                            mov rsi, rax	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x4005dfd	      0xe800000000	                          call 0x4005e02	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x4005e02	            0x85c0	                           test eax, eax	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x4005e04	            0x7430	                            je 0x4005e36	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x4005e06	      0x41c6461010	            mov byte [r14 + 0x10], 0x10 	      7615	eval.c	FUNCTION_143	ELSE_5
0x4005e0b	      0xe905ffffff	                           jmp 0x4005d15	      7615	eval.c	FUNCTION_143	ELSE_5
0x4005e10	          0x418b06	                    mov eax, dword [r14]	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x4005e13	          0x83f802	                              cmp eax, 2	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x4005e16	            0x742b	                            je 0x4005e43	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x4005e18	          0x83f801	                              cmp eax, 1	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x4005e1b	            0x7466	                            je 0x4005e83	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x4005e1d	        0x413b0424	                    cmp eax, dword [r12]	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005e21	     0xf84e6feffff	                            je 0x4005d0d	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005e27	      0xbf00000000	                              mov edi, 0	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005e2c	      0xe800000000	                          call 0x4005e31	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005e31	      0xe9d7feffff	                           jmp 0x4005d0d	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x4005e36	          0x4c89f7	                            mov rdi, r14	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x4005e39	      0xe800000000	                          call 0x4005e3e	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x4005e3e	      0xe947feffff	                           jmp 0x4005c8a	      7613	eval.c	FUNCTION_143	ELSE_5	IF_16
0x4005e43	        0x498b7e08	                mov rdi, qword [r14 + 8]	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x4005e47	      0xe800000000	                          call 0x4005e4c	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x4005e4c	          0x4585ed	                         test r13d, r13d	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005e4f	            0x750b	                           jne 0x4005e5c	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005e51	      0x41833c2402	                      cmp dword [r12], 2	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005e56	     0xf84a6000000	                            je 0x4005f02	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4005e5c	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4005e61	          0x4c89e7	                            mov rdi, r12	      7085	eval.c	FUNCTION_128	CALL_1
0x4005e64	      0xe800000000	                          call 0x4005e69	      7085	eval.c	FUNCTION_128	CALL_1
0x4005e69	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x4005e6e	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4005e71	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x4005e75	      0xe800000000	                          call 0x4005e7a	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005e7a	        0x49894608	                mov qword [r14 + 8], rax	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005e7e	      0xe907feffff	                           jmp 0x4005c8a	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4005e83	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      6964	eval.c	FUNCTION_124	CALL_1
0x4005e88	          0x4c89e7	                            mov rdi, r12	      6964	eval.c	FUNCTION_124	CALL_1
0x4005e8b	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      6962	eval.c	FUNCTION_124
0x4005e93	      0xe800000000	                          call 0x4005e98	      6964	eval.c	FUNCTION_124	CALL_1
0x4005e98	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005e9d	        0x49894608	                mov qword [r14 + 8], rax	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x4005ea1	      0xbe00000000	                              mov esi, 0	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005ea6	          0x4889c3	                            mov rbx, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x4005ea9	          0x4889ef	                            mov rdi, rbp	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005eac	      0xe800000000	                          call 0x4005eb1	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005eb1	            0x85c0	                           test eax, eax	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005eb3	            0x7516	                           jne 0x4005ecb	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4005eb5	        0x4883fb01	                              cmp rbx, 1	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005eb9	            0x19ff	                            sbb edi, edi	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005ebb	          0x83e710	                           and edi, 0x10	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005ebe	          0x83c72f	                           add edi, 0x2f	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005ec1	      0xe800000000	                          call 0x4005ec6	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005ec6	      0xe9bffdffff	                           jmp 0x4005c8a	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x4005ecb	      0xbe00000000	                              mov esi, 0	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x4005ed0	          0x4889ef	                            mov rdi, rbp	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x4005ed3	      0xe800000000	                          call 0x4005ed8	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x4005ed8	            0x85c0	                           test eax, eax	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x4005eda	     0xf85aafdffff	                           jne 0x4005c8a	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x4005ee0	            0x31c0	                            xor eax, eax	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x4005ee2	          0x4885db	                           test rbx, rbx	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x4005ee5	      0xbf23000000	                           mov edi, 0x23	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x4005eea	           0xf94c0	                                 sete al	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x4005eed	    0x890500000000	            mov dword [0x04005ef3], eax 	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x4005ef3	      0xe800000000	                          call 0x4005ef8	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x4005ef8	      0xe98dfdffff	                           jmp 0x4005c8a	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x4005efd	      0xe800000000	                          call 0x4005f02	      7626	eval.c	FUNCTION_143
0x4005f02	      0x498b442408	                mov rax, qword [r12 + 8]	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4005f07	        0x49894608	                mov qword [r14 + 8], rax	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4005f0b	    0x49c744240800	                  mov qword [r12 + 8], 0	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4005f14	      0xe971fdffff	                           jmp 0x4005c8a	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4005f19	            0x31f6	                            xor esi, esi	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f1b	          0x4d85f6	                           test r14, r14	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f1e	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f21	        0x400f94c6	                                sete sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f25	      0xe800000000	                          call 0x4005f2a	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f2a	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f2c	     0xf8558fdffff	                           jne 0x4005c8a	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4005f32	      0xe969feffff	                           jmp 0x4005da0	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
typval_tostring	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,3:functions,0	34
0x400e190	        0x4883ec68	                           sub rsp, 0x68	      9396	eval.c	FUNCTION_182
0x400e194	    0x64488b042528	                mov rax, qword fs:[0x28]	      9396	eval.c	FUNCTION_182
0x400e19d	      0x4889442458	             mov qword [rsp + 0x58], rax	      9396	eval.c	FUNCTION_182
0x400e1a2	            0x31c0	                            xor eax, eax	      9396	eval.c	FUNCTION_182
0x400e1a4	          0x4885ff	                           test rdi, rdi	      9401	eval.c	FUNCTION_182	IF_1
0x400e1a7	            0x7447	                            je 0x400e1f0	      9401	eval.c	FUNCTION_182	IF_1
0x400e1a9	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1ad	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1af	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1b2	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1b4	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1ba	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1bf	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1c4	      0xe800000000	                          call 0x400e1c9	      5759	eval.c	FUNCTION_89	CALL_1
0x400e1c9	          0x4885c0	                           test rax, rax	      9405	eval.c	FUNCTION_182	IF_2
0x400e1cc	              0x5a	                                 pop rdx	      9405	eval.c	FUNCTION_182	IF_2
0x400e1cd	              0x59	                                 pop rcx	      9405	eval.c	FUNCTION_182	IF_2
0x400e1ce	            0x7408	                            je 0x400e1d8	      9405	eval.c	FUNCTION_182	IF_2
0x400e1d0	    0x48837c240800	                  cmp qword [rsp + 8], 0	      9405	eval.c	FUNCTION_182	IF_2
0x400e1d6	            0x7428	                            je 0x400e200	      9405	eval.c	FUNCTION_182	IF_2
0x400e1d8	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      9408	eval.c	FUNCTION_182
0x400e1dd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9408	eval.c	FUNCTION_182
0x400e1e6	            0x7522	                           jne 0x400e20a	      9408	eval.c	FUNCTION_182
0x400e1e8	        0x4883c468	                           add rsp, 0x68	      9408	eval.c	FUNCTION_182
0x400e1ec	              0xc3	                                     ret	      9408	eval.c	FUNCTION_182
0x400e1ed	           0xf1f00	                         nop dword [rax]	      9408	eval.c	FUNCTION_182
0x400e1f0	      0xbf00000000	                              mov edi, 0	      9402	eval.c	FUNCTION_182	CALL_1
0x400e1f5	      0xe800000000	                          call 0x400e1fa	      9402	eval.c	FUNCTION_182	CALL_1
0x400e1fa	            0xebdc	                           jmp 0x400e1d8	      9402	eval.c	FUNCTION_182	CALL_1
0x400e1fc	         0xf1f4000	                         nop dword [rax]	      9402	eval.c	FUNCTION_182	CALL_1
0x400e200	          0x4889c7	                            mov rdi, rax	      9406	eval.c	FUNCTION_182	CALL_3
0x400e203	      0xe800000000	                          call 0x400e208	      9406	eval.c	FUNCTION_182	CALL_3
0x400e208	            0xebce	                           jmp 0x400e1d8	      9406	eval.c	FUNCTION_182	CALL_3
0x400e20a	      0xe800000000	                          call 0x400e20f	      9408	eval.c	FUNCTION_182
eval_charconvert	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,9:functions,0	64
0x4008d00	            0x4154	                                push r12	       583	eval.c	FUNCTION_9
0x4008d02	              0x55	                                push rbp	       583	eval.c	FUNCTION_9
0x4008d03	          0x4989f4	                            mov r12, rsi	       583	eval.c	FUNCTION_9
0x4008d06	              0x53	                                push rbx	       583	eval.c	FUNCTION_9
0x4008d07	          0x4889fe	                            mov rsi, rdi	       586	eval.c	FUNCTION_9	CALL_1
0x4008d0a	          0x4889d5	                            mov rbp, rdx	       583	eval.c	FUNCTION_9
0x4008d0d	      0xbf0f000000	                            mov edi, 0xf	       586	eval.c	FUNCTION_9	CALL_1
0x4008d12	      0xbaffffffff	                     mov edx, 0xffffffff	       586	eval.c	FUNCTION_9	CALL_1
0x4008d17	          0x4889cb	                            mov rbx, rcx	       583	eval.c	FUNCTION_9
0x4008d1a	        0x4883ec10	                           sub rsp, 0x10	       583	eval.c	FUNCTION_9
0x4008d1e	    0x64488b042528	                mov rax, qword fs:[0x28]	       583	eval.c	FUNCTION_9
0x4008d27	      0x4889442408	                mov qword [rsp + 8], rax	       583	eval.c	FUNCTION_9
0x4008d2c	            0x31c0	                            xor eax, eax	       583	eval.c	FUNCTION_9
0x4008d2e	    0xc74424040000	                  mov dword [rsp + 4], 0	       584	eval.c	FUNCTION_9
0x4008d36	      0xe800000000	                          call 0x4008d3b	       586	eval.c	FUNCTION_9	CALL_1
0x4008d3b	      0xbaffffffff	                     mov edx, 0xffffffff	       587	eval.c	FUNCTION_9	CALL_2
0x4008d40	          0x4c89e6	                            mov rsi, r12	       587	eval.c	FUNCTION_9	CALL_2
0x4008d43	      0xbf10000000	                           mov edi, 0x10	       587	eval.c	FUNCTION_9	CALL_2
0x4008d48	      0xe800000000	                          call 0x4008d4d	       587	eval.c	FUNCTION_9	CALL_2
0x4008d4d	      0xbaffffffff	                     mov edx, 0xffffffff	       588	eval.c	FUNCTION_9	CALL_3
0x4008d52	          0x4889ee	                            mov rsi, rbp	       588	eval.c	FUNCTION_9	CALL_3
0x4008d55	      0xbf11000000	                           mov edi, 0x11	       588	eval.c	FUNCTION_9	CALL_3
0x4008d5a	      0xe800000000	                          call 0x4008d5f	       588	eval.c	FUNCTION_9	CALL_3
0x4008d5f	      0xbaffffffff	                     mov edx, 0xffffffff	       589	eval.c	FUNCTION_9	CALL_4
0x4008d64	          0x4889de	                            mov rsi, rbx	       589	eval.c	FUNCTION_9	CALL_4
0x4008d67	      0xbf12000000	                           mov edi, 0x12	       589	eval.c	FUNCTION_9	CALL_4
0x4008d6c	      0xe800000000	                          call 0x4008d71	       589	eval.c	FUNCTION_9	CALL_4
0x4008d71	    0x488b3d000000	            mov rdi, qword [0x04008d78] 	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d78	      0x488d742404	                      lea rsi, [rsp + 4]	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d7d	            0x31c9	                            xor ecx, ecx	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d7f	            0x31d2	                            xor edx, edx	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d81	      0xe800000000	                          call 0x4008d86	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d86	            0x85c0	                           test eax, eax	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d88	            0x7408	                            je 0x4008d92	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x4008d8a	    0xc74424040100	                  mov dword [rsp + 4], 1	       591	eval.c	FUNCTION_9	IF_1
0x4008d92	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008d97	      0xe800000000	                          call 0x4008d9c	      6473	eval.c	FUNCTION_109	CALL_1
0x4008d9c	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008da1	    0xc70500000000	               mov dword [0x04008dab], 2	      6474	eval.c	FUNCTION_109
0x4008dab	    0x48c705000000	               mov qword [0x04008db6], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008db6	      0xe800000000	                          call 0x4008dbb	      6473	eval.c	FUNCTION_109	CALL_1
0x4008dbb	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008dc0	    0xc70500000000	               mov dword [0x04008dca], 2	      6474	eval.c	FUNCTION_109
0x4008dca	    0x48c705000000	               mov qword [0x04008dd5], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008dd5	      0xe800000000	                          call 0x4008dda	      6473	eval.c	FUNCTION_109	CALL_1
0x4008dda	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008ddf	    0xc70500000000	               mov dword [0x04008de9], 2	      6474	eval.c	FUNCTION_109
0x4008de9	    0x48c705000000	               mov qword [0x04008df4], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008df4	      0xe800000000	                          call 0x4008df9	      6473	eval.c	FUNCTION_109	CALL_1
0x4008df9	        0x8b542404	                mov edx, dword [rsp + 4]	       598	eval.c	FUNCTION_9	IF_2
0x4008dfd	            0x31c0	                            xor eax, eax	       598	eval.c	FUNCTION_9	IF_2
0x4008dff	    0xc70500000000	               mov dword [0x04008e09], 2	      6474	eval.c	FUNCTION_109
0x4008e09	    0x48c705000000	               mov qword [0x04008e14], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008e14	            0x85d2	                           test edx, edx	       598	eval.c	FUNCTION_9	IF_2
0x4008e16	           0xf94c0	                                 sete al	       598	eval.c	FUNCTION_9	IF_2
0x4008e19	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       600	eval.c	FUNCTION_9
0x4008e1e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       600	eval.c	FUNCTION_9
0x4008e27	            0x7509	                           jne 0x4008e32	       600	eval.c	FUNCTION_9
0x4008e29	        0x4883c410	                           add rsp, 0x10	       600	eval.c	FUNCTION_9
0x4008e2d	              0x5b	                                 pop rbx	       600	eval.c	FUNCTION_9
0x4008e2e	              0x5d	                                 pop rbp	       600	eval.c	FUNCTION_9
0x4008e2f	            0x415c	                                 pop r12	       600	eval.c	FUNCTION_9
0x4008e31	              0xc3	                                     ret	       600	eval.c	FUNCTION_9
0x4008e32	      0xe800000000	                          call 0x4008e37	       600	eval.c	FUNCTION_9
modify_fname	DO,0:WHILE,5:FOR,3:ELSE,9:IF,54:SWITCH,0:CALL,58:functions,0	550
0x400e5b0	            0x4157	                                push r15	      9703	eval.c	FUNCTION_187
0x400e5b2	            0x4156	                                push r14	      9703	eval.c	FUNCTION_187
0x400e5b4	          0x4d89c6	                             mov r14, r8	      9703	eval.c	FUNCTION_187
0x400e5b7	            0x4155	                                push r13	      9703	eval.c	FUNCTION_187
0x400e5b9	            0x4154	                                push r12	      9703	eval.c	FUNCTION_187
0x400e5bb	          0x4989fd	                            mov r13, rdi	      9703	eval.c	FUNCTION_187
0x400e5be	              0x55	                                push rbp	      9703	eval.c	FUNCTION_187
0x400e5bf	              0x53	                                push rbx	      9703	eval.c	FUNCTION_187
0x400e5c0	          0x4989f4	                            mov r12, rsi	      9703	eval.c	FUNCTION_187
0x400e5c3	          0x4889d5	                            mov rbp, rdx	      9703	eval.c	FUNCTION_187
0x400e5c6	    0x4881ec481000	                         sub rsp, 0x1048	      9703	eval.c	FUNCTION_187
0x400e5cd	    0x64488b042528	                mov rax, qword fs:[0x28]	      9703	eval.c	FUNCTION_187
0x400e5d6	    0x488984243810	          mov qword [rsp + 0x1038], rax 	      9703	eval.c	FUNCTION_187
0x400e5de	            0x31c0	                            xor eax, eax	      9703	eval.c	FUNCTION_187
0x400e5e0	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      9703	eval.c	FUNCTION_187
0x400e5e5	    0xc70424000000	                      mov dword [rsp], 0	      9709	eval.c	FUNCTION_187
0x400e5ec	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9704	eval.c	FUNCTION_187
0x400e5f4	        0x49631424	                 movsxd rdx, dword [r12]	      9717	eval.c	FUNCTION_187	IF_1
0x400e5f8	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9717	eval.c	FUNCTION_187	IF_1
0x400e5fe	          0x4889d0	                            mov rax, rdx	      9717	eval.c	FUNCTION_187	IF_1
0x400e601	        0x4080fe3a	                           cmp sil, 0x3a	      9717	eval.c	FUNCTION_187	IF_1
0x400e605	     0xf8587000000	                           jne 0x400e692	      9717	eval.c	FUNCTION_187	IF_1
0x400e60b	      0xe980050000	                           jmp 0x400eb90	      9717	eval.c	FUNCTION_187	IF_1
0x400e610	        0x4183ff7e	                          cmp r15d, 0x7e	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e614	            0x740a	                            je 0x400e620	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e616	        0x4183ff38	                          cmp r15d, 0x38	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e61a	     0xf85cd000000	                           jne 0x400e6ed	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e620	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x400e623	        0x4183ff38	                          cmp r15d, 0x38	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x400e627	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x400e62b	     0xf84af000000	                            je 0x400e6e0	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x400e631	          0x8b0424	                    mov eax, dword [rsp]	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e634	            0x85c0	                           test eax, eax	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e636	     0xf84e4010000	                            je 0x400e820	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e63c	        0x4c8b4d00	                     mov r9, qword [rbp]	      9823	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x400e640	            0x31db	                            xor ebx, ebx	      9813	eval.c	FUNCTION_187	WHILE_1
0x400e642	          0x4d85c9	                             test r9, r9	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x400e645	            0x7437	                            je 0x400e67e	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x400e647	        0x4183ff2e	                          cmp r15d, 0x2e	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x400e64b	     0xf84df010000	                            je 0x400e830	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x400e651	      0x488d542430	                   lea rdx, [rsp + 0x30]	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e656	            0x31ff	                            xor edi, edi	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e658	    0x41b801000000	                              mov r8d, 1	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e65e	      0xb900100000	                         mov ecx, 0x1000	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e663	          0x4c89ce	                             mov rsi, r9	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e666	      0xe800000000	                          call 0x400e66b	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x400e66b	      0x807c24307e	            cmp byte [rsp + 0x30], 0x7e 	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x400e670	     0xf8472020000	                            je 0x400e8e8	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x400e676	          0x4889df	                            mov rdi, rbx	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400e679	      0xe800000000	                          call 0x400e67e	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400e67e	        0x49631424	                 movsxd rdx, dword [r12]	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400e682	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400e688	          0x4889d0	                            mov rax, rdx	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x400e68b	    0xc70424000000	                      mov dword [rsp], 0	      9825	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x400e692	        0x4080fe3a	                           cmp sil, 0x3a	      9802	eval.c	FUNCTION_187	WHILE_1
0x400e696	      0x498d4c1502	                lea rcx, [r13 + rdx + 2]	      9802	eval.c	FUNCTION_187	WHILE_1
0x400e69b	            0x7550	                           jne 0x400e6ed	      9802	eval.c	FUNCTION_187	WHILE_1
0x400e69d	      0x440fb679ff	              movzx r15d, byte [rcx - 1]	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e6a2	        0x4183ff2e	                          cmp r15d, 0x2e	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e6a6	     0xf8564ffffff	                           jne 0x400e610	      9803	eval.c	FUNCTION_187	WHILE_1
0x400e6ac	          0x8b1424	                    mov edx, dword [rsp]	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e6af	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x400e6b2	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x400e6b6	            0x85d2	                           test edx, edx	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e6b8	            0x7582	                           jne 0x400e63c	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x400e6ba	        0x488b7d00	                    mov rdi, qword [rbp]	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400e6be	          0x803f7e	                    cmp byte [rdi], 0x7e	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400e6c1	     0xf84b9040000	                            je 0x400eb80	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x400e6c7	            0x31f6	                            xor esi, esi	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6c9	      0xe800000000	                          call 0x400e6ce	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6ce	          0x4989c1	                             mov r9, rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6d1	          0x4889c3	                            mov rbx, rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6d4	      0xe969ffffff	                           jmp 0x400e642	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6d9	     0xf1f80000000	                         nop dword [rax]	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6e0	           0xfb631	                   movzx esi, byte [rcx]	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6e3	        0x4883c102	                              add rcx, 2	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x400e6e7	        0x4080fe3a	                           cmp sil, 0x3a	      9802	eval.c	FUNCTION_187	WHILE_1
0x400e6eb	            0x74b0	                            je 0x400e69d	      9802	eval.c	FUNCTION_187	WHILE_1
0x400e6ed	        0x488b7d00	                    mov rdi, qword [rbp]	      9863	eval.c	FUNCTION_187	CALL_29
0x400e6f1	      0xe800000000	                          call 0x400e6f6	      9863	eval.c	FUNCTION_187	CALL_29
0x400e6f6	        0x488b7d00	                    mov rdi, qword [rbp]	      9864	eval.c	FUNCTION_187	CALL_30
0x400e6fa	          0x4989c7	                            mov r15, rax	      9863	eval.c	FUNCTION_187	CALL_29
0x400e6fd	      0xe800000000	                          call 0x400e702	      9864	eval.c	FUNCTION_187	CALL_30
0x400e702	          0x418906	                    mov dword [r14], eax	      9864	eval.c	FUNCTION_187	CALL_30
0x400e705	           0xf1f00	                         nop dword [rax]	      9864	eval.c	FUNCTION_187	CALL_30
0x400e708	        0x49630c24	                 movsxd rcx, dword [r12]	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e70c	    0x41807c0d003a	              cmp byte [r13 + rcx], 0x3a	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e712	          0x4889c8	                            mov rax, rcx	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e715	     0xf85d5000000	                           jne 0x400e7f0	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e71b	    0x410fb64c0d01	        movzx ecx, byte [r13 + rcx + 1] 	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e721	          0x80f968	                            cmp cl, 0x68	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e724	     0xf85f2010000	                           jne 0x400e91c	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e72a	        0x488b7d00	                    mov rdi, qword [rbp]	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400e72e	          0x83c002	                              add eax, 2	      9871	eval.c	FUNCTION_187	WHILE_2
0x400e731	      0x834c240c02	                 or dword [rsp + 0xc], 2	      9870	eval.c	FUNCTION_187	WHILE_2
0x400e736	        0x41890424	                    mov dword [r12], eax	      9871	eval.c	FUNCTION_187	WHILE_2
0x400e73a	      0xe800000000	                          call 0x400e73f	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400e73f	          0x4939c7	                            cmp r15, rax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e742	          0x4889c3	                            mov rbx, rax	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x400e745	            0x7711	                            ja 0x400e758	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e747	            0xeb51	                           jmp 0x400e79a	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e749	     0xf1f80000000	                         nop dword [rax]	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e750	          0x4901c7	                            add r15, rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e753	          0x4c39fb	                            cmp rbx, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e756	            0x7342	                           jae 0x400e79a	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e758	          0x4c89fe	                            mov rsi, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e75b	          0x4889df	                            mov rdi, rbx	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e75e	      0xe800000000	                          call 0x400e763	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e763	            0x85c0	                           test eax, eax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e765	     0xf841d010000	                            je 0x400e888	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e76b	    0x8b3500000000	            mov esi, dword [0x0400e771] 	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e771	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e778	            0x85f6	                           test esi, esi	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e77a	            0x74d4	                            je 0x400e750	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e77c	        0x498d3407	                    lea rsi, [r15 + rax]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e780	        0x488b7d00	                    mov rdi, qword [rbp]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e784	    0xff1500000000	                 call qword [0x0400e78a]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e78a	          0x83c001	                              add eax, 1	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e78d	            0x4898	                                    cdqe	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e78f	          0x48f7d8	                                 neg rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e792	          0x4901c7	                            add r15, rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x400e795	          0x4c39fb	                            cmp rbx, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e798	            0x72be	                            jb 0x400e758	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x400e79a	          0x4c89f8	                            mov rax, r15	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e79d	        0x482b4500	                    sub rax, qword [rbp]	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e7a1	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e7a3	          0x418906	                    mov dword [r14], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e7a6	     0xf855cffffff	                           jne 0x400e708	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e7ac	      0xbf00000000	                              mov edi, 0	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400e7b1	      0xe800000000	                          call 0x400e7b6	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400e7b6	          0x4885c0	                           test rax, rax	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400e7b9	          0x4989c7	                            mov r15, rax	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x400e7bc	     0xf84ee040000	                            je 0x400ecb0	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x400e7c2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400e7c7	          0x488b3b	                    mov rdi, qword [rbx]	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400e7ca	      0xe800000000	                          call 0x400e7cf	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x400e7cf	        0x4c897d00	                    mov qword [rbp], r15	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e7d3	          0x4c893b	                    mov qword [rbx], r15	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e7d6	    0x41c706010000	                      mov dword [r14], 1	      9888	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e7dd	        0x49630c24	                 movsxd rcx, dword [r12]	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e7e1	    0x41807c0d003a	              cmp byte [r13 + rcx], 0x3a	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e7e7	          0x4889c8	                            mov rax, rcx	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e7ea	     0xf842bffffff	                            je 0x400e71b	      9868	eval.c	FUNCTION_187	WHILE_2
0x400e7f0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10080	eval.c	FUNCTION_187	IF_51
0x400e7f4	    0x488b94243810	          mov rdx, qword [rsp + 0x1038] 	     10084	eval.c	FUNCTION_187
0x400e7fc	    0x644833142528	                xor rdx, qword fs:[0x28]	     10084	eval.c	FUNCTION_187
0x400e805	     0xf853c060000	                           jne 0x400ee47	     10084	eval.c	FUNCTION_187
0x400e80b	    0x4881c4481000	                         add rsp, 0x1048	     10084	eval.c	FUNCTION_187
0x400e812	              0x5b	                                 pop rbx	     10084	eval.c	FUNCTION_187
0x400e813	              0x5d	                                 pop rbp	     10084	eval.c	FUNCTION_187
0x400e814	            0x415c	                                 pop r12	     10084	eval.c	FUNCTION_187
0x400e816	            0x415d	                                 pop r13	     10084	eval.c	FUNCTION_187
0x400e818	            0x415e	                                 pop r14	     10084	eval.c	FUNCTION_187
0x400e81a	            0x415f	                                 pop r15	     10084	eval.c	FUNCTION_187
0x400e81c	              0xc3	                                     ret	     10084	eval.c	FUNCTION_187
0x400e81d	           0xf1f00	                         nop dword [rax]	     10084	eval.c	FUNCTION_187
0x400e820	        0x488b7d00	                    mov rdi, qword [rbp]	     10084	eval.c	FUNCTION_187
0x400e824	      0xe99efeffff	                           jmp 0x400e6c7	     10084	eval.c	FUNCTION_187
0x400e829	     0xf1f80000000	                         nop dword [rax]	     10084	eval.c	FUNCTION_187
0x400e830	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400e835	      0xbe00100000	                         mov esi, 0x1000	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400e83a	        0x4c890c24	                     mov qword [rsp], r9	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400e83e	      0xe800000000	                          call 0x400e843	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x400e843	        0x4c8b0c24	                     mov r9, qword [rsp]	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400e847	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400e84c	          0x4c89cf	                             mov rdi, r9	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400e84f	      0xe800000000	                          call 0x400e854	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x400e854	          0x4885c0	                           test rax, rax	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400e857	     0xf8419feffff	                            je 0x400e676	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400e85d	          0x4885db	                           test rbx, rbx	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e860	        0x48894500	                    mov qword [rbp], rax	      9835	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x400e864	     0xf840cfeffff	                            je 0x400e676	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e86a	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400e86f	          0x498b3f	                    mov rdi, qword [r15]	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400e872	      0xe800000000	                          call 0x400e877	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x400e877	          0x49891f	                    mov qword [r15], rbx	      9839	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e87a	            0x31db	                            xor ebx, ebx	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e87c	      0xe9f5fdffff	                           jmp 0x400e676	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e881	     0xf1f80000000	                         nop dword [rax]	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x400e888	          0x4c89f8	                            mov rax, r15	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e88b	        0x482b4500	                    sub rax, qword [rbp]	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e88f	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e891	          0x418906	                    mov dword [r14], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x400e894	            0x750d	                           jne 0x400e8a3	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e896	      0xe911ffffff	                           jmp 0x400e7ac	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e89b	       0xf1f440000	                   nop dword [rax + rax]	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x400e8a0	          0x4901c7	                            add r15, rax	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8a3	          0x4c39fb	                            cmp rbx, r15	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8a6	     0xf835cfeffff	                           jae 0x400e708	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8ac	          0x4c89fe	                            mov rsi, r15	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8af	          0x4889df	                            mov rdi, rbx	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8b2	      0xe800000000	                          call 0x400e8b7	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8b7	            0x85c0	                           test eax, eax	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8b9	     0xf8549feffff	                           jne 0x400e708	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x400e8bf	    0x8b0d00000000	            mov ecx, dword [0x0400e8c5] 	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8c5	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8cc	            0x85c9	                           test ecx, ecx	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8ce	            0x74d0	                            je 0x400e8a0	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8d0	        0x498d3407	                    lea rsi, [r15 + rax]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8d4	        0x488b7d00	                    mov rdi, qword [rbp]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8d8	    0xff1500000000	                 call qword [0x0400e8de]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8de	          0x83c001	                              add eax, 1	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8e1	            0x4898	                                    cdqe	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8e3	          0x48f7d8	                                 neg rax	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8e6	            0xebb8	                           jmp 0x400e8a0	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x400e8e8	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400e8ed	      0xe800000000	                          call 0x400e8f2	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400e8f2	          0x4885c0	                           test rax, rax	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e8f5	          0x4989c7	                            mov r15, rax	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x400e8f8	     0xf8478fdffff	                            je 0x400e676	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e8fe	        0x48894500	                    mov qword [rbp], rax	      9853	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e902	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400e907	          0x488b38	                    mov rdi, qword [rax]	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400e90a	      0xe800000000	                          call 0x400e90f	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x400e90f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e914	          0x4c8938	                    mov qword [rax], r15	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e917	      0xe95afdffff	                           jmp 0x400e676	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x400e91c	          0x80f938	                            cmp cl, 0x38	      9898	eval.c	FUNCTION_187	IF_24
0x400e91f	     0xf84c3030000	                            je 0x400ece8	      9898	eval.c	FUNCTION_187	IF_24
0x400e925	          0x80f974	                            cmp cl, 0x74	      9953	eval.c	FUNCTION_187	IF_33
0x400e928	     0xf848c030000	                            je 0x400ecba	      9953	eval.c	FUNCTION_187	IF_33
0x400e92e	        0x49630424	                 movsxd rax, dword [r12]	      9962	eval.c	FUNCTION_187	WHILE_5
0x400e932	    0x410fb64c0501	        movzx ecx, byte [r13 + rax + 1] 	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e938	          0x80f972	                            cmp cl, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e93b	            0x740b	                            je 0x400e948	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e93d	          0x80f965	                            cmp cl, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e940	            0x7572	                           jne 0x400e9b4	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e942	    0x660f1f440000	                    nop word [rax + rax]	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e948	          0x80f965	                            cmp cl, 0x65	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400e94b	        0x488b7500	                    mov rsi, qword [rbp]	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400e94f	     0xf84eb010000	                            je 0x400eb40	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400e955	          0x496306	                 movsxd rax, dword [r14]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x400e958	      0x488d4406ff	                lea rax, [rsi + rax - 1]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x400e95d	          0x4939c7	                            cmp r15, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400e960	            0x7320	                           jae 0x400e982	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400e962	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e965	            0x7512	                           jne 0x400e979	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e967	      0xe9fc010000	                           jmp 0x400eb68	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e96c	         0xf1f4000	                         nop dword [rax]	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e970	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e973	     0xf84a7010000	                            je 0x400eb20	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x400e979	        0x4883e801	                              sub rax, 1	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400e97d	          0x4939c7	                            cmp r15, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400e980	            0x75ee	                           jne 0x400e970	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x400e982	          0x80f965	                            cmp cl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400e985	     0xf84c7010000	                            je 0x400eb52	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400e98b	        0x418b0424	                    mov eax, dword [r12]	     10000	eval.c	FUNCTION_187	WHILE_5
0x400e98f	          0x83c002	                              add eax, 2	     10000	eval.c	FUNCTION_187	WHILE_5
0x400e992	        0x41890424	                    mov dword [r12], eax	     10000	eval.c	FUNCTION_187	WHILE_5
0x400e996	            0x4898	                                    cdqe	      9962	eval.c	FUNCTION_187	WHILE_5
0x400e998	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x400e99e	     0xf854cfeffff	                           jne 0x400e7f0	      9962	eval.c	FUNCTION_187	WHILE_5
0x400e9a4	    0x410fb64c0501	        movzx ecx, byte [r13 + rax + 1] 	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e9aa	          0x80f965	                            cmp cl, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e9ad	            0x7499	                            je 0x400e948	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e9af	          0x80f972	                            cmp cl, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e9b2	            0x7494	                            je 0x400e948	      9963	eval.c	FUNCTION_187	WHILE_5
0x400e9b4	          0x80f973	                            cmp cl, 0x73	     10006	eval.c	FUNCTION_187	IF_42
0x400e9b7	     0xf846b020000	                            je 0x400ec28	     10006	eval.c	FUNCTION_187	IF_42
0x400e9bd	          0x80f967	                            cmp cl, 0x67	     10007	eval.c	FUNCTION_187	IF_42
0x400e9c0	     0xf85ce000000	                           jne 0x400ea94	     10007	eval.c	FUNCTION_187	IF_42
0x400e9c6	      0x498d440502	                lea rax, [r13 + rax + 2]	     10007	eval.c	FUNCTION_187	IF_42
0x400e9cb	          0x803873	                    cmp byte [rax], 0x73	     10007	eval.c	FUNCTION_187	IF_42
0x400e9ce	     0xf85c0000000	                           jne 0x400ea94	     10007	eval.c	FUNCTION_187	IF_42
0x400e9d4	        0x4883c001	                              add rax, 1	     10021	eval.c	FUNCTION_187	IF_42	IF_43
0x400e9d8	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10020	eval.c	FUNCTION_187	IF_42	IF_43
0x400e9e1	           0xfb618	                   movzx ebx, byte [rax]	     10024	eval.c	FUNCTION_187	IF_42
0x400e9e4	        0x488d4801	                      lea rcx, [rax + 1]	     10024	eval.c	FUNCTION_187	IF_42
0x400e9e8	            0x85db	                           test ebx, ebx	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x400e9ea	     0xf84a4000000	                            je 0x400ea94	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x400e9f0	            0x89de	                            mov esi, ebx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400e9f2	          0x4889cf	                            mov rdi, rcx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400e9f5	      0x48894c2418	             mov qword [rsp + 0x18], rcx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400e9fa	      0xe800000000	                          call 0x400e9ff	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400e9ff	          0x4885c0	                           test rax, rax	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x400ea02	          0x4989c7	                            mov r15, rax	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x400ea05	     0xf8489000000	                            je 0x400ea94	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x400ea0b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea10	          0x4889c6	                            mov rsi, rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea13	          0x4829ce	                            sub rsi, rcx	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea16	          0x4889cf	                            mov rdi, rcx	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea19	      0xe800000000	                          call 0x400ea1e	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea1e	          0x4885c0	                           test rax, rax	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400ea21	      0x4889442418	             mov qword [rsp + 0x18], rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x400ea26	            0x746c	                            je 0x400ea94	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400ea28	        0x498d5701	                      lea rdx, [r15 + 1]	     10034	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x400ea2c	            0x89de	                            mov esi, ebx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400ea2e	          0x4889d7	                            mov rdi, rdx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400ea31	      0x4889542420	             mov qword [rsp + 0x20], rdx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400ea36	      0xe800000000	                          call 0x400ea3b	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400ea3b	          0x4885c0	                           test rax, rax	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x400ea3e	          0x4989c7	                            mov r15, rax	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x400ea41	            0x7447	                            je 0x400ea8a	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x400ea43	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea48	          0x4889c6	                            mov rsi, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea4b	          0x4829d6	                            sub rsi, rdx	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea4e	          0x4889d7	                            mov rdi, rdx	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea51	      0xe800000000	                          call 0x400ea56	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea56	          0x418b36	                    mov esi, dword [r14]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400ea59	        0x488b7d00	                    mov rdi, qword [rbp]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400ea5d	          0x4889c3	                            mov rbx, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x400ea60	      0xe800000000	                          call 0x400ea65	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400ea65	          0x4885db	                           test rbx, rbx	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ea68	      0x4889442420	             mov qword [rsp + 0x20], rax	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x400ea6d	            0x7409	                            je 0x400ea78	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ea6f	          0x4885c0	                           test rax, rax	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ea72	     0xf85c3010000	                           jne 0x400ec3b	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ea78	          0x4889df	                            mov rdi, rbx	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400ea7b	      0xe800000000	                          call 0x400ea80	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400ea80	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400ea85	      0xe800000000	                          call 0x400ea8a	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400ea8a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ea8f	      0xe800000000	                          call 0x400ea94	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ea94	        0x49631424	                 movsxd rdx, dword [r12]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ea98	    0x410fb6441500	             movzx eax, byte [r13 + rdx]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ea9e	            0x3c3a	                            cmp al, 0x3a	     10066	eval.c	FUNCTION_187	IF_51
0x400eaa0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10066	eval.c	FUNCTION_187	IF_51
0x400eaa4	     0xf854afdffff	                           jne 0x400e7f4	     10066	eval.c	FUNCTION_187	IF_51
0x400eaaa	    0x41807c150153	         cmp byte [r13 + rdx + 1], 0x53 	     10066	eval.c	FUNCTION_187	IF_51
0x400eab0	     0xf853efdffff	                           jne 0x400e7f4	     10066	eval.c	FUNCTION_187	IF_51
0x400eab6	          0x496306	                 movsxd rax, dword [r14]	     10069	eval.c	FUNCTION_187	IF_51
0x400eab9	        0x488b7d00	                    mov rdi, qword [rbp]	     10069	eval.c	FUNCTION_187	IF_51
0x400eabd	          0x4801f8	                            add rax, rdi	     10069	eval.c	FUNCTION_187	IF_51
0x400eac0	        0x440fb628	                  movzx r13d, byte [rax]	     10069	eval.c	FUNCTION_187	IF_51
0x400eac4	          0x4584ed	                         test r13b, r13b	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x400eac7	     0xf8461030000	                            je 0x400ee2e	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x400eacd	          0xc60000	                       mov byte [rax], 0	     10071	eval.c	FUNCTION_187	IF_51	IF_52
0x400ead0	        0x488b7d00	                    mov rdi, qword [rbp]	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ead4	            0x31d2	                            xor edx, edx	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ead6	            0x31f6	                            xor esi, esi	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ead8	      0xe800000000	                          call 0x400eadd	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400eadd	          0x4889c3	                            mov rbx, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400eae0	          0x496306	                 movsxd rax, dword [r14]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400eae3	        0x488b5500	                    mov rdx, qword [rbp]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400eae7	        0x44882c02	              mov byte [rdx + rax], r13b	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x400eaeb	          0x4885db	                           test rbx, rbx	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x400eaee	     0xf84bc010000	                            je 0x400ecb0	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x400eaf4	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400eaf9	          0x498b3f	                    mov rdi, qword [r15]	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400eafc	      0xe800000000	                          call 0x400eb01	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x400eb01	        0x48895d00	                    mov qword [rbp], rbx	     10078	eval.c	FUNCTION_187	IF_51
0x400eb05	          0x4889df	                            mov rdi, rbx	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400eb08	          0x49891f	                    mov qword [r15], rbx	     10078	eval.c	FUNCTION_187	IF_51
0x400eb0b	      0xe800000000	                          call 0x400eb10	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400eb10	          0x418906	                    mov dword [r14], eax	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x400eb13	      0x4183042402	                      add dword [r12], 2	     10080	eval.c	FUNCTION_187	IF_51
0x400eb18	      0xe9d3fcffff	                           jmp 0x400e7f0	     10080	eval.c	FUNCTION_187	IF_51
0x400eb1d	           0xf1f00	                         nop dword [rax]	     10080	eval.c	FUNCTION_187	IF_51
0x400eb20	          0x80f965	                            cmp cl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400eb23	            0x7448	                            je 0x400eb6d	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400eb25	          0x4939c7	                            cmp r15, rax	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb28	     0xf835dfeffff	                           jae 0x400e98b	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb2e	        0x482b4500	                    sub rax, qword [rbp]	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb32	          0x418906	                    mov dword [r14], eax	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb35	      0xe951feffff	                           jmp 0x400e98b	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb3a	    0x660f1f440000	                    nop word [rax + rax]	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x400eb40	          0x4939f7	                            cmp r15, rsi	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400eb43	        0x488d46fe	                      lea rax, [rsi - 2]	      9970	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400eb47	     0xf8210feffff	                            jb 0x400e95d	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400eb4d	      0xe903feffff	                           jmp 0x400e955	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x400eb52	        0x4c3b7d00	                    cmp r15, qword [rbp]	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400eb56	     0xf822ffeffff	                            jb 0x400e98b	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400eb5c	    0x41c706000000	                      mov dword [r14], 0	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400eb63	      0xe923feffff	                           jmp 0x400e98b	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x400eb68	          0x80f965	                            cmp cl, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400eb6b	            0x75c1	                           jne 0x400eb2e	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x400eb6d	        0x4883c001	                              add rax, 1	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400eb71	          0x4829c6	                            sub rsi, rax	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400eb74	          0x410136	                    add dword [r14], esi	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400eb77	        0x48894500	                    mov qword [rbp], rax	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400eb7b	      0xe90bfeffff	                           jmp 0x400e98b	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x400eb80	      0xe800000000	                          call 0x400eb85	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400eb85	          0x4989c1	                             mov r9, rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400eb88	          0x4889c3	                            mov rbx, rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400eb8b	      0xe9b2faffff	                           jmp 0x400e642	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x400eb90	    0x41807c150170	         cmp byte [r13 + rdx + 1], 0x70 	      9717	eval.c	FUNCTION_187	IF_1
0x400eb96	     0xf85f6faffff	                           jne 0x400e692	      9717	eval.c	FUNCTION_187	IF_1
0x400eb9c	        0x488b5d00	                    mov rbx, qword [rbp]	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400eba0	          0x83c002	                              add eax, 2	      9722	eval.c	FUNCTION_187	IF_1
0x400eba3	      0x834c240c01	                 or dword [rsp + 0xc], 1	      9721	eval.c	FUNCTION_187	IF_1
0x400eba8	        0x41890424	                    mov dword [r12], eax	      9722	eval.c	FUNCTION_187	IF_1
0x400ebac	           0xfb63b	                   movzx edi, byte [rbx]	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400ebaf	        0x4080ff7e	                           cmp dil, 0x7e	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400ebb3	     0xf8440020000	                            je 0x400edf9	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x400ebb9	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebbc	            0x7515	                           jne 0x400ebd3	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebbe	      0xe97c020000	                           jmp 0x400ee3f	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebc3	       0xf1f440000	                   nop dword [rax + rax]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebc8	          0x4801c3	                            add rbx, rax	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebcb	           0xfb63b	                   movzx edi, byte [rbx]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebce	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebd1	            0x7438	                            je 0x400ec0b	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebd3	      0xe800000000	                          call 0x400ebd8	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400ebd8	            0x85c0	                           test eax, eax	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400ebda	            0x740a	                            je 0x400ebe6	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x400ebdc	        0x807b012e	                cmp byte [rbx + 1], 0x2e	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ebe0	     0xf842a010000	                            je 0x400ed10	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ebe6	    0x8b3d00000000	            mov edi, dword [0x0400ebec] 	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebec	      0xb801000000	                              mov eax, 1	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebf1	            0x85ff	                           test edi, edi	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebf3	            0x74d3	                            je 0x400ebc8	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebf5	          0x4889df	                            mov rdi, rbx	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebf8	    0xff1500000000	                 call qword [0x0400ebfe]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ebfe	            0x4898	                                    cdqe	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec00	          0x4801c3	                            add rbx, rax	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec03	           0xfb63b	                   movzx edi, byte [rbx]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec06	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec09	            0x75c8	                           jne 0x400ebd3	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec0b	        0x488b7d00	                    mov rdi, qword [rbp]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ec0f	      0xe800000000	                          call 0x400ec14	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec14	            0x85c0	                           test eax, eax	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec16	     0xf858d010000	                           jne 0x400eda9	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec1c	           0xfb603	                   movzx eax, byte [rbx]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec1f	      0xe92d010000	                           jmp 0x400ed51	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec24	         0xf1f4000	                         nop dword [rax]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ec28	      0x498d440502	                lea rax, [r13 + rax + 2]	     10017	eval.c	FUNCTION_187	IF_42
0x400ec2d	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10016	eval.c	FUNCTION_187	IF_42
0x400ec36	      0xe9a6fdffff	                           jmp 0x400e9e1	     10016	eval.c	FUNCTION_187	IF_42
0x400ec3b	        0x498d4701	                      lea rax, [r15 + 1]	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ec3f	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec44	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec49	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec4e	            0x31c9	                            xor ecx, ecx	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec50	          0x4889da	                            mov rdx, rbx	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec53	          0x4c29e8	                            sub rax, r13	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ec56	        0x41890424	                    mov dword [r12], eax	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x400ec5a	      0xe800000000	                          call 0x400ec5f	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec5f	          0x4885c0	                           test rax, rax	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400ec62	          0x4989c7	                            mov r15, rax	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x400ec65	     0xf840dfeffff	                            je 0x400ea78	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400ec6b	        0x48894500	                    mov qword [rbp], rax	     10047	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400ec6f	          0x4889c7	                            mov rdi, rax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400ec72	      0xe800000000	                          call 0x400ec77	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400ec77	          0x418906	                    mov dword [r14], eax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x400ec7a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400ec7f	          0x488b38	                    mov rdi, qword [rax]	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400ec82	      0xe800000000	                          call 0x400ec87	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x400ec87	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400ec8c	          0x4889df	                            mov rdi, rbx	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400ec8f	          0x4c8938	                    mov qword [rax], r15	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x400ec92	      0xe800000000	                          call 0x400ec97	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x400ec97	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400ec9c	      0xe800000000	                          call 0x400eca1	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x400eca1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400eca6	      0xe800000000	                          call 0x400ecab	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ecab	      0xe944f9ffff	                           jmp 0x400e5f4	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x400ecb0	      0xb8ffffffff	                     mov eax, 0xffffffff	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ecb5	      0xe93afbffff	                           jmp 0x400e7f4	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ecba	          0x83c002	                              add eax, 2	      9955	eval.c	FUNCTION_187	IF_33
0x400ecbd	        0x41890424	                    mov dword [r12], eax	      9955	eval.c	FUNCTION_187	IF_33
0x400ecc1	          0x4c89f8	                            mov rax, r15	      9956	eval.c	FUNCTION_187	IF_33
0x400ecc4	        0x482b4500	                    sub rax, qword [rbp]	      9956	eval.c	FUNCTION_187	IF_33
0x400ecc8	          0x412906	                    sub dword [r14], eax	      9956	eval.c	FUNCTION_187	IF_33
0x400eccb	        0x4c897d00	                    mov qword [rbp], r15	      9957	eval.c	FUNCTION_187	IF_33
0x400eccf	        0x49630424	                 movsxd rax, dword [r12]	      9957	eval.c	FUNCTION_187	IF_33
0x400ecd3	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x400ecd9	     0xf8453fcffff	                            je 0x400e932	      9962	eval.c	FUNCTION_187	WHILE_5
0x400ecdf	      0xe90cfbffff	                           jmp 0x400e7f0	      9962	eval.c	FUNCTION_187	WHILE_5
0x400ece4	         0xf1f4000	                         nop dword [rax]	      9962	eval.c	FUNCTION_187	WHILE_5
0x400ece8	          0x83c002	                              add eax, 2	      9900	eval.c	FUNCTION_187	IF_24
0x400eceb	          0x4863c8	                         movsxd rcx, eax	      9953	eval.c	FUNCTION_187	IF_33
0x400ecee	        0x41890424	                    mov dword [r12], eax	      9900	eval.c	FUNCTION_187	IF_24
0x400ecf2	    0x41807c0d003a	              cmp byte [r13 + rcx], 0x3a	      9953	eval.c	FUNCTION_187	IF_33
0x400ecf8	     0xf85f2faffff	                           jne 0x400e7f0	      9953	eval.c	FUNCTION_187	IF_33
0x400ecfe	    0x410fb64c0d01	        movzx ecx, byte [r13 + rcx + 1] 	      9953	eval.c	FUNCTION_187	IF_33
0x400ed04	      0xe91cfcffff	                           jmp 0x400e925	      9953	eval.c	FUNCTION_187	IF_33
0x400ed09	     0xf1f80000000	                         nop dword [rax]	      9953	eval.c	FUNCTION_187	IF_33
0x400ed10	         0xfb64302	               movzx eax, byte [rbx + 2]	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ed14	            0x84c0	                             test al, al	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ed16	            0x742e	                            je 0x400ed46	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ed18	           0xfb6f8	                           movzx edi, al	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400ed1b	      0xe800000000	                          call 0x400ed20	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400ed20	            0x85c0	                           test eax, eax	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400ed22	            0x7522	                           jne 0x400ed46	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x400ed24	        0x807b022e	                cmp byte [rbx + 2], 0x2e	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ed28	     0xf85b8feffff	                           jne 0x400ebe6	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x400ed2e	         0xfb64303	               movzx eax, byte [rbx + 3]	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed32	            0x84c0	                             test al, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed34	            0x7410	                            je 0x400ed46	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed36	           0xfb6f8	                           movzx edi, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed39	      0xe800000000	                          call 0x400ed3e	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed3e	            0x85c0	                           test eax, eax	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed40	     0xf84a0feffff	                            je 0x400ebe6	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x400ed46	           0xfb603	                   movzx eax, byte [rbx]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ed49	            0x84c0	                             test al, al	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ed4b	     0xf84bafeffff	                            je 0x400ec0b	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x400ed51	        0x488b7d00	                    mov rdi, qword [rbp]	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed55	            0x31f6	                            xor esi, esi	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed57	            0x84c0	                             test al, al	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed59	        0x400f95c6	                               setne sil	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed5d	      0xe800000000	                          call 0x400ed62	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed62	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400ed67	        0x48894500	                    mov qword [rbp], rax	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x400ed6b	          0x488b3b	                    mov rdi, qword [rbx]	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400ed6e	      0xe800000000	                          call 0x400ed73	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x400ed73	        0x488b4500	                    mov rax, qword [rbp]	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x400ed77	          0x488903	                    mov qword [rbx], rax	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x400ed7a	        0x488b7d00	                    mov rdi, qword [rbp]	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400ed7e	          0x4885ff	                           test rdi, rdi	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400ed81	     0xf8429ffffff	                            je 0x400ecb0	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x400ed87	      0xe800000000	                          call 0x400ed8c	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed8c	            0x85c0	                           test eax, eax	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed8e	            0x7526	                           jne 0x400edb6	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed90	        0x49631424	                 movsxd rdx, dword [r12]	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed94	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed9a	          0x4889d0	                            mov rax, rdx	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400ed9d	    0xc70424010000	                      mov dword [rsp], 1	      9719	eval.c	FUNCTION_187	IF_1
0x400eda4	      0xe9e9f8ffff	                           jmp 0x400e692	      9719	eval.c	FUNCTION_187	IF_1
0x400eda9	        0x488b7d00	                    mov rdi, qword [rbp]	      9719	eval.c	FUNCTION_187	IF_1
0x400edad	      0xe800000000	                          call 0x400edb2	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400edb2	            0x85c0	                           test eax, eax	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400edb4	            0x74da	                            je 0x400ed90	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x400edb6	        0x488b5d00	                    mov rbx, qword [rbp]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edba	          0x4889df	                            mov rdi, rbx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edbd	      0xe800000000	                          call 0x400edc2	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edc2	          0x8d7002	                      lea esi, [rax + 2]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edc5	          0x4889df	                            mov rdi, rbx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edc8	      0xe800000000	                          call 0x400edcd	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edcd	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400edd2	        0x48894500	                    mov qword [rbp], rax	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x400edd6	          0x488b3b	                    mov rdi, qword [rbx]	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400edd9	      0xe800000000	                          call 0x400edde	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x400edde	        0x488b4500	                    mov rax, qword [rbp]	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x400ede2	          0x488903	                    mov qword [rbx], rax	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x400ede5	        0x488b7d00	                    mov rdi, qword [rbp]	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400ede9	          0x4885ff	                           test rdi, rdi	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400edec	     0xf84befeffff	                            je 0x400ecb0	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x400edf2	      0xe800000000	                          call 0x400edf7	      9795	eval.c	FUNCTION_187	IF_1	IF_10	CALL_19
0x400edf7	            0xeb97	                           jmp 0x400ed90	      9795	eval.c	FUNCTION_187	IF_1	IF_10	CALL_19
0x400edf9	          0x4889df	                            mov rdi, rbx	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x400edfc	      0xe800000000	                          call 0x400ee01	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x400ee01	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400ee06	        0x48894500	                    mov qword [rbp], rax	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x400ee0a	          0x488b3b	                    mov rdi, qword [rbx]	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400ee0d	      0xe800000000	                          call 0x400ee12	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x400ee12	        0x488b4500	                    mov rax, qword [rbp]	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x400ee16	          0x488903	                    mov qword [rbx], rax	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x400ee19	        0x488b5d00	                    mov rbx, qword [rbp]	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ee1d	          0x4885db	                           test rbx, rbx	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ee20	     0xf848afeffff	                            je 0x400ecb0	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ee26	           0xfb63b	                   movzx edi, byte [rbx]	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ee29	      0xe98bfdffff	                           jmp 0x400ebb9	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x400ee2e	            0x31d2	                            xor edx, edx	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ee30	            0x31f6	                            xor esi, esi	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ee32	      0xe800000000	                          call 0x400ee37	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ee37	          0x4889c3	                            mov rbx, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ee3a	      0xe9acfcffff	                           jmp 0x400eaeb	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x400ee3f	          0x4889df	                            mov rdi, rbx	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ee42	      0xe9c8fdffff	                           jmp 0x400ec0f	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x400ee47	      0xe800000000	                          call 0x400ee4c	     10084	eval.c	FUNCTION_187
last_set_msg	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,8:functions,0	28
0x4006bb0	            0x85ff	                           test edi, edi	      8757	eval.c	FUNCTION_166	IF_1
0x4006bb2	            0x7504	                           jne 0x4006bb8	      8757	eval.c	FUNCTION_166	IF_1
0x4006bb4	              0xc3	                                     ret	      8769	eval.c	FUNCTION_166
0x4006bb5	           0xf1f00	                         nop dword [rax]	      8769	eval.c	FUNCTION_166
0x4006bb8	              0x53	                                push rbx	      8754	eval.c	FUNCTION_166
0x4006bb9	      0xe800000000	                          call 0x4006bbe	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006bbe	            0x31ff	                            xor edi, edi	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006bc0	          0x4889c6	                            mov rsi, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006bc3	      0xe800000000	                          call 0x4006bc8	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006bc8	          0x4885c0	                           test rax, rax	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x4006bcb	          0x4889c3	                            mov rbx, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x4006bce	            0x7438	                            je 0x4006c08	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x4006bd0	      0xe800000000	                          call 0x4006bd5	      8762	eval.c	FUNCTION_166	IF_1	IF_2	CALL_3
0x4006bd5	      0xba05000000	                              mov edx, 5	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006bda	      0xbe00000000	                              mov esi, 0	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006bdf	            0x31ff	                            xor edi, edi	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006be1	      0xe800000000	                          call 0x4006be6	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006be6	          0x4889c7	                            mov rdi, rax	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006be9	      0xe800000000	                          call 0x4006bee	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x4006bee	          0x4889df	                            mov rdi, rbx	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x4006bf1	      0xe800000000	                          call 0x4006bf6	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x4006bf6	          0x4889df	                            mov rdi, rbx	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x4006bf9	      0xe800000000	                          call 0x4006bfe	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x4006bfe	              0x5b	                                 pop rbx	      8769	eval.c	FUNCTION_166
0x4006bff	      0xe900000000	                           jmp 0x4006c04	      8766	eval.c	FUNCTION_166	IF_1	IF_2	CALL_8
0x4006c04	         0xf1f4000	                         nop dword [rax]	      8766	eval.c	FUNCTION_166	IF_1	IF_2	CALL_8
0x4006c08	              0x5b	                                 pop rbx	      8769	eval.c	FUNCTION_166
0x4006c09	              0xc3	                                     ret	      8769	eval.c	FUNCTION_166
assert_fails	DO,0:WHILE,0:FOR,0:ELSE,1:IF,3:SWITCH,0:CALL,14:functions,0	78
0x40077d0	            0x4154	                                push r12	      9060	eval.c	FUNCTION_178
0x40077d2	              0x55	                                push rbp	      9060	eval.c	FUNCTION_178
0x40077d3	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40077d8	              0x53	                                push rbx	      9060	eval.c	FUNCTION_178
0x40077d9	          0x4889fb	                            mov rbx, rdi	      9060	eval.c	FUNCTION_178
0x40077dc	        0x4883ec70	                           sub rsp, 0x70	      9060	eval.c	FUNCTION_178
0x40077e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      9060	eval.c	FUNCTION_178
0x40077e9	      0x4889442468	             mov qword [rsp + 0x68], rax	      9060	eval.c	FUNCTION_178
0x40077ee	            0x31c0	                            xor eax, eax	      9060	eval.c	FUNCTION_178
0x40077f0	      0xe800000000	                          call 0x40077f5	      7098	eval.c	FUNCTION_129	CALL_1
0x40077f5	          0x4889c7	                            mov rdi, rax	      9068	eval.c	FUNCTION_178	CALL_2
0x40077f8	          0x4889c5	                            mov rbp, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x40077fb	    0xc70500000000	               mov dword [0x04007805], 0	      9065	eval.c	FUNCTION_178
0x4007805	    0xc70500000000	               mov dword [0x0400780f], 1	      9066	eval.c	FUNCTION_178
0x400780f	    0xc70500000000	               mov dword [0x04007819], 1	      9067	eval.c	FUNCTION_178
0x4007819	      0xe800000000	                          call 0x400781e	      9068	eval.c	FUNCTION_178	CALL_2
0x400781e	    0x8b1500000000	            mov edx, dword [0x04007824] 	      9069	eval.c	FUNCTION_178	IF_1
0x4007824	            0x85d2	                           test edx, edx	      9069	eval.c	FUNCTION_178	IF_1
0x4007826	     0xf84cc000000	                            je 0x40078f8	      9069	eval.c	FUNCTION_178	IF_1
0x400782c	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x400782f	            0x31ed	                            xor ebp, ebp	      9063	eval.c	FUNCTION_178
0x4007831	            0x85c0	                           test eax, eax	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4007833	            0x756b	                           jne 0x40078a0	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4007835	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400783a	    0xc70500000000	               mov dword [0x04007844], 0	      9095	eval.c	FUNCTION_178
0x4007844	    0xc70500000000	               mov dword [0x0400784e], 0	      9096	eval.c	FUNCTION_178
0x400784e	    0xc70500000000	               mov dword [0x04007858], 0	      9097	eval.c	FUNCTION_178
0x4007858	    0xc70500000000	               mov dword [0x04007862], 0	      9098	eval.c	FUNCTION_178
0x4007862	      0xe800000000	                          call 0x4007867	      6473	eval.c	FUNCTION_109	CALL_1
0x4007867	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      9101	eval.c	FUNCTION_178
0x400786c	    0x644833142528	                xor rdx, qword fs:[0x28]	      9101	eval.c	FUNCTION_178
0x4007875	    0xc70500000000	               mov dword [0x0400787f], 2	      6474	eval.c	FUNCTION_109
0x400787f	    0x48c705000000	               mov qword [0x0400788a], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400788a	            0x89e8	                            mov eax, ebp	      9101	eval.c	FUNCTION_178
0x400788c	     0xf85a0000000	                           jne 0x4007932	      9101	eval.c	FUNCTION_178
0x4007892	        0x4883c470	                           add rsp, 0x70	      9101	eval.c	FUNCTION_178
0x4007896	              0x5b	                                 pop rbx	      9101	eval.c	FUNCTION_178
0x4007897	              0x5d	                                 pop rbp	      9101	eval.c	FUNCTION_178
0x4007898	            0x415c	                                 pop r12	      9101	eval.c	FUNCTION_178
0x400789a	              0xc3	                                     ret	      9101	eval.c	FUNCTION_178
0x400789b	       0xf1f440000	                   nop dword [rax + rax]	      9101	eval.c	FUNCTION_178
0x40078a0	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40078a4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40078a9	          0x4c89e7	                            mov rdi, r12	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40078ac	      0xe800000000	                          call 0x40078b1	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40078b1	          0x4885c0	                           test rax, rax	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x40078b4	            0x7418	                            je 0x40078ce	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x40078b6	    0x488b3d000000	            mov rdi, qword [0x040078bd] 	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40078bd	          0x4889c6	                            mov rsi, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40078c0	      0xe800000000	                          call 0x40078c5	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40078c5	          0x4885c0	                           test rax, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40078c8	     0xf8567ffffff	                           jne 0x4007835	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40078ce	          0x4889e7	                            mov rdi, rsp	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x40078d1	      0xe800000000	                          call 0x40078d6	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x40078d6	        0x488d7320	                   lea rsi, [rbx + 0x20]	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078da	    0x41b904000000	                              mov r9d, 4	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078e0	    0x41b800000000	                              mov r8d, 0	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078e6	          0x4c89e1	                            mov rcx, r12	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078e9	            0x31d2	                            xor edx, edx	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078eb	          0x4889e7	                            mov rdi, rsp	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078ee	      0xe800000000	                          call 0x40078f3	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078f3	            0xeb23	                           jmp 0x4007918	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078f5	           0xf1f00	                         nop dword [rax]	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40078f8	          0x4889e7	                            mov rdi, rsp	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x40078fb	      0xe800000000	                          call 0x4007900	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x4007900	      0xbe00000000	                              mov esi, 0	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4007905	          0x4889e7	                            mov rdi, rsp	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4007908	      0xe800000000	                          call 0x400790d	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x400790d	          0x4889ee	                            mov rsi, rbp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4007910	          0x4889e7	                            mov rdi, rsp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4007913	      0xe800000000	                          call 0x4007918	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4007918	          0x4889e7	                            mov rdi, rsp	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x400791b	      0xbd01000000	                              mov ebp, 1	      9091	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x4007920	      0xe800000000	                          call 0x4007925	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x4007925	          0x4889e7	                            mov rdi, rsp	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4007928	      0xe800000000	                          call 0x400792d	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x400792d	      0xe903ffffff	                           jmp 0x4007835	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4007932	      0xe800000000	                          call 0x4007937	      9101	eval.c	FUNCTION_178
eval_printexpr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,2:SWITCH,0:CALL,6:functions,0	48
0x4008e40	              0x55	                                push rbp	       606	eval.c	FUNCTION_10
0x4008e41	              0x53	                                push rbx	       606	eval.c	FUNCTION_10
0x4008e42	          0x4889f5	                            mov rbp, rsi	       606	eval.c	FUNCTION_10
0x4008e45	      0xbaffffffff	                     mov edx, 0xffffffff	       609	eval.c	FUNCTION_10	CALL_1
0x4008e4a	          0x4889fe	                            mov rsi, rdi	       609	eval.c	FUNCTION_10	CALL_1
0x4008e4d	          0x4889fb	                            mov rbx, rdi	       606	eval.c	FUNCTION_10
0x4008e50	        0x4883ec18	                           sub rsp, 0x18	       606	eval.c	FUNCTION_10
0x4008e54	      0xbf11000000	                           mov edi, 0x11	       609	eval.c	FUNCTION_10	CALL_1
0x4008e59	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	eval.c	FUNCTION_10
0x4008e62	      0x4889442408	                mov qword [rsp + 8], rax	       606	eval.c	FUNCTION_10
0x4008e67	            0x31c0	                            xor eax, eax	       606	eval.c	FUNCTION_10
0x4008e69	    0xc74424040000	                  mov dword [rsp + 4], 0	       607	eval.c	FUNCTION_10
0x4008e71	      0xe800000000	                          call 0x4008e76	       609	eval.c	FUNCTION_10	CALL_1
0x4008e76	      0xbaffffffff	                     mov edx, 0xffffffff	       610	eval.c	FUNCTION_10	CALL_2
0x4008e7b	          0x4889ee	                            mov rsi, rbp	       610	eval.c	FUNCTION_10	CALL_2
0x4008e7e	      0xbf15000000	                           mov edi, 0x15	       610	eval.c	FUNCTION_10	CALL_2
0x4008e83	      0xe800000000	                          call 0x4008e88	       610	eval.c	FUNCTION_10	CALL_2
0x4008e88	    0x488b3d000000	            mov rdi, qword [0x04008e8f] 	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e8f	      0x488d742404	                      lea rsi, [rsp + 4]	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e94	            0x31c9	                            xor ecx, ecx	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e96	            0x31d2	                            xor edx, edx	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e98	      0xe800000000	                          call 0x4008e9d	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e9d	            0x85c0	                           test eax, eax	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008e9f	            0x7408	                            je 0x4008ea9	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x4008ea1	    0xc74424040100	                  mov dword [rsp + 4], 1	       612	eval.c	FUNCTION_10	IF_1
0x4008ea9	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008eae	      0xe800000000	                          call 0x4008eb3	      6473	eval.c	FUNCTION_109	CALL_1
0x4008eb3	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008eb8	    0xc70500000000	               mov dword [0x04008ec2], 2	      6474	eval.c	FUNCTION_109
0x4008ec2	    0x48c705000000	               mov qword [0x04008ecd], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008ecd	      0xe800000000	                          call 0x4008ed2	      6473	eval.c	FUNCTION_109	CALL_1
0x4008ed2	        0x8b542404	                mov edx, dword [rsp + 4]	       616	eval.c	FUNCTION_10	IF_2
0x4008ed6	    0xc70500000000	               mov dword [0x04008ee0], 2	      6474	eval.c	FUNCTION_109
0x4008ee0	      0xb801000000	                              mov eax, 1	       621	eval.c	FUNCTION_10
0x4008ee5	    0x48c705000000	               mov qword [0x04008ef0], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008ef0	            0x85d2	                           test edx, edx	       616	eval.c	FUNCTION_10	IF_2
0x4008ef2	            0x740a	                            je 0x4008efe	       616	eval.c	FUNCTION_10	IF_2
0x4008ef4	          0x4889df	                            mov rdi, rbx	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x4008ef7	      0xe800000000	                          call 0x4008efc	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x4008efc	            0x31c0	                            xor eax, eax	       619	eval.c	FUNCTION_10	IF_2
0x4008efe	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       622	eval.c	FUNCTION_10
0x4008f03	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       622	eval.c	FUNCTION_10
0x4008f0c	            0x7507	                           jne 0x4008f15	       622	eval.c	FUNCTION_10
0x4008f0e	        0x4883c418	                           add rsp, 0x18	       622	eval.c	FUNCTION_10
0x4008f12	              0x5b	                                 pop rbx	       622	eval.c	FUNCTION_10
0x4008f13	              0x5d	                                 pop rbp	       622	eval.c	FUNCTION_10
0x4008f14	              0xc3	                                     ret	       622	eval.c	FUNCTION_10
0x4008f15	      0xe800000000	                          call 0x4008f1a	       622	eval.c	FUNCTION_10
string_quote	DO,0:WHILE,0:FOR,2:ELSE,1:IF,7:SWITCH,0:CALL,5:functions,0	131
0x4001990	            0x4154	                                push r12	      5769	eval.c	FUNCTION_90
0x4001992	              0x55	                                push rbp	      5769	eval.c	FUNCTION_90
0x4001993	          0x4189f4	                           mov r12d, esi	      5769	eval.c	FUNCTION_90
0x4001996	              0x53	                                push rbx	      5769	eval.c	FUNCTION_90
0x4001997	          0x4889fd	                            mov rbp, rdi	      5769	eval.c	FUNCTION_90
0x400199a	        0x4883ec20	                           sub rsp, 0x20	      5769	eval.c	FUNCTION_90
0x400199e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5769	eval.c	FUNCTION_90
0x40019a7	      0x4889442418	             mov qword [rsp + 0x18], rax	      5769	eval.c	FUNCTION_90
0x40019ac	            0x31c0	                            xor eax, eax	      5769	eval.c	FUNCTION_90
0x40019ae	          0x83fe01	                              cmp esi, 1	      5773	eval.c	FUNCTION_90
0x40019b1	            0x19db	                            sbb ebx, ebx	      5773	eval.c	FUNCTION_90
0x40019b3	          0x83e3f6	                     and ebx, 0xfffffff6	      5773	eval.c	FUNCTION_90
0x40019b6	          0x83c30d	                            add ebx, 0xd	      5773	eval.c	FUNCTION_90
0x40019b9	          0x4885ff	                           test rdi, rdi	      5774	eval.c	FUNCTION_90	IF_1
0x40019bc	            0x7462	                            je 0x4001a20	      5774	eval.c	FUNCTION_90	IF_1
0x40019be	      0xe800000000	                          call 0x40019c3	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40019c3	             0x1c3	                            add ebx, eax	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40019c5	         0xfb64500	                   movzx eax, byte [rbp]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019c9	      0x48896c2408	                mov qword [rsp + 8], rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019ce	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019d0	            0x744e	                            je 0x4001a20	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019d2	          0x4889ef	                            mov rdi, rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019d5	            0xeb1d	                           jmp 0x40019f4	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019d7	    0x660f1f840000	                    nop word [rax + rax]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019e0	      0x4803442408	                add rax, qword [rsp + 8]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019e5	          0x4889c7	                            mov rdi, rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019e8	      0x4889442408	                mov qword [rsp + 8], rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019ed	           0xfb600	                   movzx eax, byte [rax]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019f0	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019f2	            0x742c	                            je 0x4001a20	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019f4	            0x3c27	                            cmp al, 0x27	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40019f6	    0x8b0d00000000	            mov ecx, dword [0x040019fc] 	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40019fc	           0xf94c0	                                 sete al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40019ff	           0xfb6c0	                           movzx eax, al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x4001a02	             0x1c3	                            add ebx, eax	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x4001a04	            0x85c9	                           test ecx, ecx	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a06	      0xb801000000	                              mov eax, 1	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a0b	            0x74d3	                            je 0x40019e0	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a0d	    0xff1500000000	                 call qword [0x04001a13]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a13	            0x4898	                                    cdqe	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a15	            0xebc9	                           jmp 0x40019e0	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a17	    0x660f1f840000	                    nop word [rax + rax]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4001a20	            0x89df	                            mov edi, ebx	      5781	eval.c	FUNCTION_90	CALL_3
0x4001a22	      0xe800000000	                          call 0x4001a27	      5781	eval.c	FUNCTION_90	CALL_3
0x4001a27	          0x4885c0	                           test rax, rax	      5782	eval.c	FUNCTION_90	IF_3
0x4001a2a	          0x4889c3	                            mov rbx, rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4001a2d	      0x4889442410	             mov qword [rsp + 0x10], rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4001a32	     0xf84f1000000	                            je 0x4001b29	      5782	eval.c	FUNCTION_90	IF_3
0x4001a38	          0x4585e4	                         test r12d, r12d	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x4001a3b	     0xf858f000000	                           jne 0x4001ad0	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x4001a41	        0x488d4001	                      lea rax, [rax + 1]	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4001a45	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001a48	      0x4889442410	             mov qword [rsp + 0x10], rax	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4001a4d	          0xc60327	                    mov byte [rbx], 0x27	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4001a50	     0xf840a010000	                            je 0x4001b60	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001a56	      0x48896c2408	                mov qword [rsp + 8], rbp	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a5b	            0xeb29	                           jmp 0x4001a86	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a5d	           0xf1f00	                         nop dword [rax]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a60	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a65	        0x488d4a01	                      lea rcx, [rdx + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a69	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a6e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a73	        0x488d7101	                      lea rsi, [rcx + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a77	      0x4889742408	                mov qword [rsp + 8], rsi	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a7c	           0xfb609	                   movzx ecx, byte [rcx]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a7f	            0x880a	                      mov byte [rdx], cl	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a81	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a86	         0xfb65500	                   movzx edx, byte [rbp]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a8a	            0x84d2	                             test dl, dl	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a8c	     0xf84b6000000	                            je 0x4001b48	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4001a92	          0x80fa27	                            cmp dl, 0x27	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001a95	            0x7421	                            je 0x4001ab8	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001a97	    0x8b0500000000	            mov eax, dword [0x04001a9d] 	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a9d	            0x85c0	                           test eax, eax	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001a9f	            0x74bf	                            je 0x4001a60	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001aa1	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001aa6	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001aab	      0xe800000000	                          call 0x4001ab0	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001ab0	            0xebcf	                           jmp 0x4001a81	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001ab2	    0x660f1f440000	                    nop word [rax + rax]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4001ab8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001abd	        0x488d4201	                      lea rax, [rdx + 1]	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001ac1	      0x4889442410	             mov qword [rsp + 0x10], rax	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001ac6	          0xc60227	                    mov byte [rdx], 0x27	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001ac9	            0xebcc	                           jmp 0x4001a97	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001acb	       0xf1f440000	                   nop dword [rax + rax]	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x4001ad0	    0x48b866756e63	          movabs rax, 0x6e6f6974636e7566	       110	string3.h	FUNCTION_197	CALL_3
0x4001ada	      0xba28270000	                         mov edx, 0x2728	       110	string3.h	FUNCTION_197	CALL_3
0x4001adf	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001ae2	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_197	CALL_3
0x4001ae5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x4001aea	        0x66895308	                  mov word [rbx + 8], dx	       110	string3.h	FUNCTION_197	CALL_3
0x4001aee	        0xc6430a00	                 mov byte [rbx + 0xa], 0	       110	string3.h	FUNCTION_197	CALL_3
0x4001af2	        0x488d500a	                    lea rdx, [rax + 0xa]	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x4001af6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x4001afb	     0xf8555ffffff	                           jne 0x4001a56	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x4001b01	        0x488d500b	                    lea rdx, [rax + 0xb]	      5798	eval.c	FUNCTION_90	IF_3
0x4001b05	        0xc6400a27	              mov byte [rax + 0xa], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x4001b09	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4001b0e	            0x6690	                                     nop	      5798	eval.c	FUNCTION_90	IF_3
0x4001b10	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b15	        0x488d5001	                      lea rdx, [rax + 1]	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b19	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b1e	          0xc60029	                    mov byte [rax], 0x29	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b21	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5801	eval.c	FUNCTION_90	IF_3
0x4001b26	          0xc60000	                       mov byte [rax], 0	      5801	eval.c	FUNCTION_90	IF_3
0x4001b29	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5804	eval.c	FUNCTION_90
0x4001b2e	    0x644833342528	                xor rsi, qword fs:[0x28]	      5804	eval.c	FUNCTION_90
0x4001b37	          0x4889d8	                            mov rax, rbx	      5804	eval.c	FUNCTION_90
0x4001b3a	            0x753f	                           jne 0x4001b7b	      5804	eval.c	FUNCTION_90
0x4001b3c	        0x4883c420	                           add rsp, 0x20	      5804	eval.c	FUNCTION_90
0x4001b40	              0x5b	                                 pop rbx	      5804	eval.c	FUNCTION_90
0x4001b41	              0x5d	                                 pop rbp	      5804	eval.c	FUNCTION_90
0x4001b42	            0x415c	                                 pop r12	      5804	eval.c	FUNCTION_90
0x4001b44	              0xc3	                                     ret	      5804	eval.c	FUNCTION_90
0x4001b45	           0xf1f00	                         nop dword [rax]	      5804	eval.c	FUNCTION_90
0x4001b48	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x4001b4d	          0x4585e4	                         test r12d, r12d	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b50	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x4001b54	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4001b59	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x4001b5c	            0x75b2	                           jne 0x4001b10	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b5e	            0xebc1	                           jmp 0x4001b21	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x4001b60	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x4001b65	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x4001b69	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4001b6e	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x4001b71	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5801	eval.c	FUNCTION_90	IF_3
0x4001b76	          0xc60000	                       mov byte [rax], 0	      5801	eval.c	FUNCTION_90	IF_3
0x4001b79	            0xebae	                           jmp 0x4001b29	      5801	eval.c	FUNCTION_90	IF_3
0x4001b7b	      0xe800000000	                   call sym.string2float	      5804	eval.c	FUNCTION_90
list_one_var_a	DO,0:WHILE,0:FOR,0:ELSE,4:IF,9:SWITCH,0:CALL,13:functions,0	70
0x40001f0	            0x4156	                                push r14	      7477	eval.c	FUNCTION_142
0x40001f2	            0x4155	                                push r13	      7477	eval.c	FUNCTION_142
0x40001f4	          0x4989fe	                            mov r14, rdi	      7477	eval.c	FUNCTION_142
0x40001f7	            0x4154	                                push r12	      7477	eval.c	FUNCTION_142
0x40001f9	              0x55	                                push rbp	      7477	eval.c	FUNCTION_142
0x40001fa	          0x4989cc	                            mov r12, rcx	      7477	eval.c	FUNCTION_142
0x40001fd	              0x53	                                push rbx	      7477	eval.c	FUNCTION_142
0x40001fe	          0x4889f5	                            mov rbp, rsi	      7477	eval.c	FUNCTION_142
0x4000201	            0x89d3	                            mov ebx, edx	      7477	eval.c	FUNCTION_142
0x4000203	          0x4d89c5	                             mov r13, r8	      7477	eval.c	FUNCTION_142
0x4000206	      0xe800000000	                          call 0x400020b	      7479	eval.c	FUNCTION_142	CALL_1
0x400020b	          0x4c89f7	                            mov rdi, r14	      7480	eval.c	FUNCTION_142	CALL_2
0x400020e	      0xe800000000	                          call 0x4000213	      7480	eval.c	FUNCTION_142	CALL_2
0x4000213	          0x4885ed	                           test rbp, rbp	      7481	eval.c	FUNCTION_142	IF_1
0x4000216	            0x7408	                            je 0x4000220	      7481	eval.c	FUNCTION_142	IF_1
0x4000218	          0x4889ef	                            mov rdi, rbp	      7482	eval.c	FUNCTION_142	CALL_3
0x400021b	      0xe800000000	                          call 0x4000220	      7482	eval.c	FUNCTION_142	CALL_3
0x4000220	      0xbf20000000	                           mov edi, 0x20	      7483	eval.c	FUNCTION_142	CALL_4
0x4000225	      0xe800000000	                          call 0x400022a	      7483	eval.c	FUNCTION_142	CALL_4
0x400022a	      0xbf16000000	                           mov edi, 0x16	      7484	eval.c	FUNCTION_142	CALL_5
0x400022f	      0xe800000000	                          call 0x4000234	      7484	eval.c	FUNCTION_142	CALL_5
0x4000234	          0x83fb01	                              cmp ebx, 1	      7485	eval.c	FUNCTION_142	IF_2
0x4000237	            0x7467	                            je 0x40002a0	      7485	eval.c	FUNCTION_142	IF_2
0x4000239	          0x8d43fd	                      lea eax, [rbx - 3]	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x400023c	          0x83f801	                              cmp eax, 1	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x400023f	            0x766f	                           jbe 0x40002b0	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4000241	          0x83fb05	                              cmp ebx, 5	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x4000244	     0xf8486000000	                            je 0x40002d0	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x400024a	          0x83fb06	                              cmp ebx, 6	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x400024d	            0x7431	                            je 0x4000280	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x400024f	      0xbf20000000	                           mov edi, 0x20	      7502	eval.c	FUNCTION_142	CALL_10
0x4000254	      0xe800000000	                          call 0x4000259	      7502	eval.c	FUNCTION_142	CALL_10
0x4000259	          0x4c89e7	                            mov rdi, r12	      7504	eval.c	FUNCTION_142	CALL_11
0x400025c	      0xe800000000	                          call 0x4000261	      7504	eval.c	FUNCTION_142	CALL_11
0x4000261	        0x418b4500	                    mov eax, dword [r13]	      7508	eval.c	FUNCTION_142	IF_9
0x4000265	            0x85c0	                           test eax, eax	      7508	eval.c	FUNCTION_142	IF_9
0x4000267	            0x740d	                            je 0x4000276	      7508	eval.c	FUNCTION_142	IF_9
0x4000269	      0xe800000000	                          call 0x400026e	      7510	eval.c	FUNCTION_142	IF_9	CALL_13
0x400026e	    0x41c745000000	                      mov dword [r13], 0	      7511	eval.c	FUNCTION_142	IF_9
0x4000276	              0x5b	                                 pop rbx	      7513	eval.c	FUNCTION_142
0x4000277	              0x5d	                                 pop rbp	      7513	eval.c	FUNCTION_142
0x4000278	            0x415c	                                 pop r12	      7513	eval.c	FUNCTION_142
0x400027a	            0x415d	                                 pop r13	      7513	eval.c	FUNCTION_142
0x400027c	            0x415e	                                 pop r14	      7513	eval.c	FUNCTION_142
0x400027e	              0xc3	                                     ret	      7513	eval.c	FUNCTION_142
0x400027f	              0x90	                                     nop	      7513	eval.c	FUNCTION_142
0x4000280	      0xbf7b000000	                           mov edi, 0x7b	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4000285	      0xe800000000	                          call 0x400028a	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x400028a	      0x41803c247b	                    cmp byte [r12], 0x7b	      7498	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x400028f	            0x75c8	                           jne 0x4000259	      7498	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4000291	        0x4983c401	                              add r12, 1	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4000295	            0xebc2	                           jmp 0x4000259	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4000297	    0x660f1f840000	                    nop word [rax + rax]	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x40002a0	      0xbf23000000	                           mov edi, 0x23	      7486	eval.c	FUNCTION_142	CALL_6
0x40002a5	      0xe800000000	                          call 0x40002aa	      7486	eval.c	FUNCTION_142	CALL_6
0x40002aa	            0xebad	                           jmp 0x4000259	      7486	eval.c	FUNCTION_142	CALL_6
0x40002ac	         0xf1f4000	                         nop dword [rax]	      7486	eval.c	FUNCTION_142	CALL_6
0x40002b0	      0xbf2a000000	                           mov edi, 0x2a	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x40002b5	      0xe800000000	                          call 0x40002ba	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x40002ba	          0x4c89e7	                            mov rdi, r12	      7504	eval.c	FUNCTION_142	CALL_11
0x40002bd	      0xe800000000	                          call 0x40002c2	      7504	eval.c	FUNCTION_142	CALL_11
0x40002c2	      0xbf00000000	                              mov edi, 0	      7507	eval.c	FUNCTION_142	CALL_12
0x40002c7	      0xe800000000	                          call 0x40002cc	      7507	eval.c	FUNCTION_142	CALL_12
0x40002cc	            0xeb93	                           jmp 0x4000261	      7507	eval.c	FUNCTION_142	CALL_12
0x40002ce	            0x6690	                                     nop	      7507	eval.c	FUNCTION_142	CALL_12
0x40002d0	      0xbf5b000000	                           mov edi, 0x5b	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x40002d5	      0xe800000000	                          call 0x40002da	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x40002da	      0x41803c245b	                    cmp byte [r12], 0x5b	      7492	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x40002df	     0xf8574ffffff	                           jne 0x4000259	      7492	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x40002e5	            0xebaa	                           jmp 0x4000291	      7492	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
copy_tv	DO,0:WHILE,0:FOR,0:ELSE,4:IF,7:SWITCH,1:CALL,3:functions,0	80
0x4004e20	            0x8b07	                    mov eax, dword [rdi]	      7750	eval.c	FUNCTION_149
0x4004e22	        0xc6460400	                   mov byte [rsi + 4], 0	      7751	eval.c	FUNCTION_149
0x4004e26	            0x8906	                    mov dword [rsi], eax	      7750	eval.c	FUNCTION_149
0x4004e28	          0x833f0a	                    cmp dword [rdi], 0xa	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004e2b	     0xf878b000000	                            ja 0x4004ebc	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004e31	            0x8b07	                    mov eax, dword [rdi]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004e33	    0xff24c5000000	                       jmp qword [rax*8]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004e3a	    0x660f1f440000	                    nop word [rax + rax]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4004e40	        0x488b4708	                mov rax, qword [rdi + 8]	      7765	eval.c	FUNCTION_149	SWITCH_1
0x4004e44	          0x4885c0	                           test rax, rax	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4004e47	        0x48894608	                mov qword [rsi + 8], rax	      7765	eval.c	FUNCTION_149	SWITCH_1
0x4004e4b	            0x746f	                            je 0x4004ebc	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4004e4d	        0x83405801	               add dword [rax + 0x58], 1	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4004e51	              0xc3	                                     ret	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4004e52	    0x660f1f440000	                    nop word [rax + rax]	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4004e58	        0x488b4708	                mov rax, qword [rdi + 8]	      7772	eval.c	FUNCTION_149	SWITCH_1
0x4004e5c	          0x4885c0	                           test rax, rax	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4004e5f	        0x48894608	                mov qword [rsi + 8], rax	      7772	eval.c	FUNCTION_149	SWITCH_1
0x4004e63	            0x7457	                            je 0x4004ebc	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4004e65	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4004e6c	              0xc3	                                     ret	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4004e6d	           0xf1f00	                         nop dword [rax]	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4004e70	      0xbf00000000	                              mov edi, 0	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4004e75	      0xe900000000	                           jmp 0x4004e7a	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4004e7a	    0x660f1f440000	                    nop word [rax + rax]	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4004e80	        0x488b4708	                mov rax, qword [rdi + 8]	      7756	eval.c	FUNCTION_149	SWITCH_1
0x4004e84	        0x48894608	                mov qword [rsi + 8], rax	      7756	eval.c	FUNCTION_149	SWITCH_1
0x4004e88	              0xc3	                                     ret	      7757	eval.c	FUNCTION_149	SWITCH_1
0x4004e89	     0xf1f80000000	                         nop dword [rax]	      7757	eval.c	FUNCTION_149	SWITCH_1
0x4004e90	        0x488b4708	                mov rax, qword [rdi + 8]	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004e94	          0x4885c0	                           test rax, rax	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004e97	            0x747f	                            je 0x4004f18	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4004e99	              0x55	                                push rbp	      7749	eval.c	FUNCTION_149
0x4004e9a	              0x53	                                push rbx	      7749	eval.c	FUNCTION_149
0x4004e9b	          0x4889f5	                            mov rbp, rsi	      7749	eval.c	FUNCTION_149
0x4004e9e	          0x4889fb	                            mov rbx, rdi	      7749	eval.c	FUNCTION_149
0x4004ea1	          0x4889c7	                            mov rdi, rax	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4004ea4	        0x4883ec08	                              sub rsp, 8	      7749	eval.c	FUNCTION_149
0x4004ea8	      0xe800000000	                          call 0x4004ead	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4004ead	        0x48894508	                mov qword [rbp + 8], rax	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4004eb1	          0x833b03	                      cmp dword [rbx], 3	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x4004eb4	            0x7472	                            je 0x4004f28	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x4004eb6	        0x4883c408	                              add rsp, 8	      7819	eval.c	FUNCTION_149
0x4004eba	              0x5b	                                 pop rbx	      7819	eval.c	FUNCTION_149
0x4004ebb	              0x5d	                                 pop rbp	      7819	eval.c	FUNCTION_149
0x4004ebc	            0xf3c3	                                     ret	      7819	eval.c	FUNCTION_149
0x4004ebe	            0x6690	                                     nop	      7819	eval.c	FUNCTION_149
0x4004ec0	        0x488b4708	                mov rax, qword [rdi + 8]	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4004ec4	          0x4885c0	                           test rax, rax	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4004ec7	            0x744f	                            je 0x4004f18	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4004ec9	        0x48894608	                mov qword [rsi + 8], rax	      7793	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004ecd	          0x830001	                      add dword [rax], 1	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004ed0	              0xc3	                                     ret	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004ed1	     0xf1f80000000	                         nop dword [rax]	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4004ed8	        0x488b4708	                mov rax, qword [rdi + 8]	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004edc	          0x4885c0	                           test rax, rax	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004edf	            0x7437	                            je 0x4004f18	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004ee1	        0x48894608	                mov qword [rsi + 8], rax	      7811	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4004ee5	        0x83400401	                  add dword [rax + 4], 1	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4004ee9	              0xc3	                                     ret	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4004eea	    0x660f1f440000	                    nop word [rax + rax]	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4004ef0	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7760	eval.c	FUNCTION_149	SWITCH_1
0x4004ef5	      0xf20f114608	             movsd qword [rsi + 8], xmm0	      7760	eval.c	FUNCTION_149	SWITCH_1
0x4004efa	              0xc3	                                     ret	      7761	eval.c	FUNCTION_149	SWITCH_1
0x4004efb	       0xf1f440000	                   nop dword [rax + rax]	      7761	eval.c	FUNCTION_149	SWITCH_1
0x4004f00	        0x488b4708	                mov rax, qword [rdi + 8]	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004f04	          0x4885c0	                           test rax, rax	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004f07	            0x740f	                            je 0x4004f18	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4004f09	        0x48894608	                mov qword [rsi + 8], rax	      7802	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004f0d	        0x83403801	               add dword [rax + 0x38], 1	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004f11	              0xc3	                                     ret	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4004f18	    0x48c746080000	                  mov qword [rsi + 8], 0	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004f20	              0xc3	                                     ret	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004f21	     0xf1f80000000	                         nop dword [rax]	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4004f28	        0x4883c408	                              add rsp, 8	      7819	eval.c	FUNCTION_149
0x4004f2c	          0x4889c7	                            mov rdi, rax	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
0x4004f2f	              0x5b	                                 pop rbx	      7819	eval.c	FUNCTION_149
0x4004f30	              0x5d	                                 pop rbp	      7819	eval.c	FUNCTION_149
0x4004f31	      0xe900000000	                           jmp 0x4004f36	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
eval3	DO,0:WHILE,1:FOR,0:ELSE,0:IF,9:SWITCH,0:CALL,7:functions,0	104
0x4008260	            0x4157	                                push r15	      3434	eval.c	FUNCTION_66
0x4008262	            0x4156	                                push r14	      3434	eval.c	FUNCTION_66
0x4008264	          0x4189d6	                           mov r14d, edx	      3434	eval.c	FUNCTION_66
0x4008267	            0x4155	                                push r13	      3434	eval.c	FUNCTION_66
0x4008269	            0x4154	                                push r12	      3434	eval.c	FUNCTION_66
0x400826b	          0x4989f5	                            mov r13, rsi	      3434	eval.c	FUNCTION_66
0x400826e	              0x55	                                push rbp	      3434	eval.c	FUNCTION_66
0x400826f	              0x53	                                push rbx	      3434	eval.c	FUNCTION_66
0x4008270	          0x4889fd	                            mov rbp, rdi	      3434	eval.c	FUNCTION_66
0x4008273	        0x4883ec48	                           sub rsp, 0x48	      3434	eval.c	FUNCTION_66
0x4008277	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	eval.c	FUNCTION_66
0x4008280	      0x4889442438	             mov qword [rsp + 0x38], rax	      3434	eval.c	FUNCTION_66
0x4008285	            0x31c0	                            xor eax, eax	      3434	eval.c	FUNCTION_66
0x4008287	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3438	eval.c	FUNCTION_66
0x400828f	      0xe87c550000	                          call sym.eval5	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008294	            0x85c0	                           test eax, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008296	     0xf8424010000	                            je 0x40083c0	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400829c	          0x4489f2	                           mov edx, r14d	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400829f	          0x4c89ee	                            mov rsi, r13	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x40082a2	          0x4889ef	                            mov rdi, rbp	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x40082a5	      0xe8a6fcffff	                  call sym.eval4.part.13	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x40082aa	            0x85c0	                           test eax, eax	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x40082ac	     0xf840e010000	                            je 0x40083c0	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x40082b2	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x40082ba	    0x41bc01000000	                             mov r12d, 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x40082c0	        0x488b7d00	                    mov rdi, qword [rbp]	      3451	eval.c	FUNCTION_66	WHILE_1
0x40082c4	          0x803f26	                    cmp byte [rdi], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x40082c7	     0xf85b7000000	                           jne 0x4008384	      3451	eval.c	FUNCTION_66	WHILE_1
0x40082cd	        0x807f0126	                cmp byte [rdi + 1], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x40082d1	     0xf85ad000000	                           jne 0x4008384	      3451	eval.c	FUNCTION_66	WHILE_1
0x40082d7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082db	          0x4585f6	                         test r14d, r14d	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082de	           0xf95c3	                                setne bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082e1	            0x85c9	                           test ecx, ecx	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082e3	            0x743d	                            je 0x4008322	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082e5	            0x84db	                             test bl, bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082e7	            0x7439	                            je 0x4008322	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x40082e9	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x40082ee	          0x4c89ef	                            mov rdi, r13	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x40082f1	      0xe800000000	                          call 0x40082f6	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x40082f6	          0x4c89ef	                            mov rdi, r13	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x40082f9	          0x4885c0	                           test rax, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x40082fc	      0xb800000000	                              mov eax, 0	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x4008301	        0x4c0f44e0	                          cmove r12, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x4008305	      0xe800000000	                          call 0x400830a	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x400830a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400830e	            0x85d2	                           test edx, edx	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x4008310	     0xf85aa000000	                           jne 0x40083c0	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x4008316	        0x488b7d00	                    mov rdi, qword [rbp]	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400831a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3460	eval.c	FUNCTION_66	WHILE_1	IF_2
0x4008322	        0x4883c702	                              add rdi, 2	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x4008326	          0x4421e3	                           and ebx, r12d	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x4008329	      0xe800000000	                          call 0x400832e	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400832e	        0x440fb6fb	                          movzx r15d, bl	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x4008332	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008337	        0x48894500	                    mov qword [rbp], rax	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400833b	          0x4489fa	                           mov edx, r15d	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400833e	          0x4889ef	                            mov rdi, rbp	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008341	      0xe8ca540000	                          call sym.eval5	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008346	            0x85c0	                           test eax, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008348	            0x7476	                            je 0x40083c0	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400834a	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400834f	          0x4489fa	                           mov edx, r15d	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008352	          0x4889ef	                            mov rdi, rbp	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x4008355	      0xe8f6fbffff	                  call sym.eval4.part.13	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400835a	            0x85c0	                           test eax, eax	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400835c	            0x7462	                            je 0x40083c0	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400835e	            0x84db	                             test bl, bl	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x4008360	            0x752e	                           jne 0x4008390	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x4008362	          0x4585f6	                         test r14d, r14d	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x4008365	     0xf8455ffffff	                            je 0x40082c0	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400836b	        0x4d896508	                mov qword [r13 + 8], r12	      3484	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400836f	        0x488b7d00	                    mov rdi, qword [rbp]	      3451	eval.c	FUNCTION_66	WHILE_1
0x4008373	    0x41c745000100	                      mov dword [r13], 1	      3483	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400837b	          0x803f26	                    cmp byte [rdi], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x400837e	     0xf8449ffffff	                            je 0x40082cd	      3451	eval.c	FUNCTION_66	WHILE_1
0x4008384	      0xb801000000	                              mov eax, 1	      3488	eval.c	FUNCTION_66
0x4008389	            0xeb37	                           jmp 0x40083c2	      3488	eval.c	FUNCTION_66
0x400838b	       0xf1f440000	                   nop dword [rax + rax]	      3488	eval.c	FUNCTION_66
0x4008390	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x4008395	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x400839a	          0x4531e4	                          xor r12d, r12d	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x400839d	      0xe800000000	                          call 0x40083a2	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x40083a2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x40083a7	          0x4885c0	                           test rax, rax	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x40083aa	        0x410f95c4	                              setne r12b	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x40083ae	      0xe800000000	                          call 0x40083b3	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x40083b3	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40083b7	            0x85c0	                           test eax, eax	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40083b9	            0x74b0	                            je 0x400836b	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40083bb	       0xf1f440000	                   nop dword [rax + rax]	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x40083c0	            0x31c0	                            xor eax, eax	      3444	eval.c	FUNCTION_66	IF_1
0x40083c2	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3489	eval.c	FUNCTION_66
0x40083c7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3489	eval.c	FUNCTION_66
0x40083d0	            0x750f	                           jne 0x40083e1	      3489	eval.c	FUNCTION_66
0x40083d2	        0x4883c448	                           add rsp, 0x48	      3489	eval.c	FUNCTION_66
0x40083d6	              0x5b	                                 pop rbx	      3489	eval.c	FUNCTION_66
0x40083d7	              0x5d	                                 pop rbp	      3489	eval.c	FUNCTION_66
0x40083d8	            0x415c	                                 pop r12	      3489	eval.c	FUNCTION_66
0x40083da	            0x415d	                                 pop r13	      3489	eval.c	FUNCTION_66
0x40083dc	            0x415e	                                 pop r14	      3489	eval.c	FUNCTION_66
0x40083de	            0x415f	                                 pop r15	      3489	eval.c	FUNCTION_66
0x40083e0	              0xc3	                                     ret	      3489	eval.c	FUNCTION_66
0x40083e1	      0xe800000000	                          call 0x40083e6	      3489	eval.c	FUNCTION_66
assert_report	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,5:functions,0	28
0x4007160	              0x53	                                push rbx	      8995	eval.c	FUNCTION_175
0x4007161	          0x4889fb	                            mov rbx, rdi	      8995	eval.c	FUNCTION_175
0x4007164	        0x4883ec20	                           sub rsp, 0x20	      8995	eval.c	FUNCTION_175
0x4007168	          0x4889e7	                            mov rdi, rsp	      8998	eval.c	FUNCTION_175	CALL_1
0x400716b	    0x64488b042528	                mov rax, qword fs:[0x28]	      8995	eval.c	FUNCTION_175
0x4007174	      0x4889442418	             mov qword [rsp + 0x18], rax	      8995	eval.c	FUNCTION_175
0x4007179	            0x31c0	                            xor eax, eax	      8995	eval.c	FUNCTION_175
0x400717b	      0xe800000000	                          call 0x4007180	      8998	eval.c	FUNCTION_175	CALL_1
0x4007180	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4007185	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x4007188	      0xe800000000	                          call 0x400718d	      7085	eval.c	FUNCTION_128	CALL_1
0x400718d	      0xbe00000000	                              mov esi, 0	      7087	eval.c	FUNCTION_128
0x4007192	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4007195	          0x4889e7	                            mov rdi, rsp	      8999	eval.c	FUNCTION_175	CALL_3
0x4007198	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x400719c	      0xe800000000	                          call 0x40071a1	      8999	eval.c	FUNCTION_175	CALL_3
0x40071a1	          0x4889e7	                            mov rdi, rsp	      9000	eval.c	FUNCTION_175	CALL_4
0x40071a4	      0xe800000000	                          call 0x40071a9	      9000	eval.c	FUNCTION_175	CALL_4
0x40071a9	          0x4889e7	                            mov rdi, rsp	      9001	eval.c	FUNCTION_175	CALL_5
0x40071ac	      0xe800000000	                          call 0x40071b1	      9001	eval.c	FUNCTION_175	CALL_5
0x40071b1	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      9003	eval.c	FUNCTION_175
0x40071b6	    0x644833142528	                xor rdx, qword fs:[0x28]	      9003	eval.c	FUNCTION_175
0x40071bf	            0x750b	                           jne 0x40071cc	      9003	eval.c	FUNCTION_175
0x40071c1	        0x4883c420	                           add rsp, 0x20	      9003	eval.c	FUNCTION_175
0x40071c5	      0xb801000000	                              mov eax, 1	      9003	eval.c	FUNCTION_175
0x40071ca	              0x5b	                                 pop rbx	      9003	eval.c	FUNCTION_175
0x40071cb	              0xc3	                                     ret	      9003	eval.c	FUNCTION_175
0x40071cc	      0xe800000000	                          call 0x40071d1	      9003	eval.c	FUNCTION_175
eval_expr_typval	DO,0:WHILE,0:FOR,0:ELSE,2:IF,9:SWITCH,0:CALL,10:functions,0	103
0x4008670	            0x4154	                                push r12	       697	eval.c	FUNCTION_14
0x4008672	              0x55	                                push rbp	       697	eval.c	FUNCTION_14
0x4008673	          0x4889cd	                            mov rbp, rcx	       697	eval.c	FUNCTION_14
0x4008676	              0x53	                                push rbx	       697	eval.c	FUNCTION_14
0x4008677	        0x4883ec70	                           sub rsp, 0x70	       697	eval.c	FUNCTION_14
0x400867b	    0x64488b042528	                mov rax, qword fs:[0x28]	       697	eval.c	FUNCTION_14
0x4008684	      0x4889442468	             mov qword [rsp + 0x68], rax	       697	eval.c	FUNCTION_14
0x4008689	            0x31c0	                            xor eax, eax	       697	eval.c	FUNCTION_14
0x400868b	            0x8b07	                    mov eax, dword [rdi]	       702	eval.c	FUNCTION_14	IF_1
0x400868d	          0x83f803	                              cmp eax, 3	       702	eval.c	FUNCTION_14	IF_1
0x4008690	     0xf840a010000	                            je 0x40087a0	       702	eval.c	FUNCTION_14	IF_1
0x4008696	          0x83f804	                              cmp eax, 4	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4008699	     0xf8491000000	                            je 0x4008730	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x400869f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x40086a4	      0xe800000000	                          call 0x40086a9	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x40086a9	          0x4885c0	                           test rax, rax	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x40086ac	      0x4889442418	             mov qword [rsp + 0x18], rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x40086b1	            0x7455	                            je 0x4008708	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x40086b3	          0x4889c7	                            mov rdi, rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x40086b6	      0xe800000000	                          call 0x40086bb	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x40086bb	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086c0	      0xba01000000	                              mov edx, 1	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086c5	          0x4889ee	                            mov rsi, rbp	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086c8	      0x4889442418	             mov qword [rsp + 0x18], rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x40086cd	      0xe800000000	                          call 0x40086d2	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086d2	            0x85c0	                           test eax, eax	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086d4	            0x7432	                            je 0x4008708	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x40086d6	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x40086db	      0xb801000000	                              mov eax, 1	       736	eval.c	FUNCTION_14
0x40086e0	          0x803b00	                       cmp byte [rbx], 0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x40086e3	            0x7425	                            je 0x400870a	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x40086e5	      0xbe00000000	                              mov esi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086ea	            0x31ff	                            xor edi, edi	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086ec	      0xba05000000	                              mov edx, 5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086f1	      0xe800000000	                          call 0x40086f6	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086f6	          0x4889de	                            mov rsi, rbx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086f9	          0x4889c7	                            mov rdi, rax	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40086fc	      0xe800000000	                          call 0x4008701	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4008701	     0xf1f80000000	                         nop dword [rax]	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4008708	            0x31c0	                            xor eax, eax	       733	eval.c	FUNCTION_14	ELSE_2	IF_9
0x400870a	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       737	eval.c	FUNCTION_14
0x400870f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       737	eval.c	FUNCTION_14
0x4008718	     0xf85d9000000	                           jne 0x40087f7	       737	eval.c	FUNCTION_14
0x400871e	        0x4883c470	                           add rsp, 0x70	       737	eval.c	FUNCTION_14
0x4008722	              0x5b	                                 pop rbx	       737	eval.c	FUNCTION_14
0x4008723	              0x5d	                                 pop rbp	       737	eval.c	FUNCTION_14
0x4008724	            0x415c	                                 pop r12	       737	eval.c	FUNCTION_14
0x4008726	              0xc3	                                     ret	       737	eval.c	FUNCTION_14
0x4008727	    0x660f1f840000	                    nop word [rax + rax]	       737	eval.c	FUNCTION_14
0x4008730	        0x4c8b6708	                mov r12, qword [rdi + 8]	       713	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4008734	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4008739	          0x4885db	                           test rbx, rbx	      4862	eval.c	FUNCTION_75	IF_1
0x400873c	     0xf8496000000	                            je 0x40087d8	      4862	eval.c	FUNCTION_75	IF_1
0x4008742	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4008747	          0x803b00	                       cmp byte [rbx], 0	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x400874a	            0x74bc	                            je 0x4008708	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x400874c	          0x4889df	                            mov rdi, rbx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400874f	        0x8954240c	              mov dword [rsp + 0xc], edx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008753	        0x48893424	                    mov qword [rsp], rsi	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008757	      0xe800000000	                          call 0x400875c	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400875c	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400875e	            0x4154	                                push r12	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008760	            0x6a01	                                  push 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008762	          0x4531c9	                            xor r9d, r9d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008765	          0x4889df	                            mov rdi, rbx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008768	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400876d	              0x51	                                push rcx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400876e	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008770	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008772	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008777	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400877b	          0x4989f0	                             mov r8, rsi	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400877e	            0x89c6	                            mov esi, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008780	            0x89d1	                            mov ecx, edx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008782	          0x4889ea	                            mov rdx, rbp	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4008785	      0xe800000000	                          call 0x400878a	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x400878a	        0x4883c430	                           add rsp, 0x30	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x400878e	            0x85c0	                           test eax, eax	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4008790	           0xf95c0	                                setne al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4008793	           0xfb6c0	                           movzx eax, al	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x4008796	      0xe96fffffff	                           jmp 0x400870a	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x400879b	       0xf1f440000	                   nop dword [rax + rax]	       706	eval.c	FUNCTION_14	IF_1	IF_2
0x40087a0	        0x488b5f08	                mov rbx, qword [rdi + 8]	       704	eval.c	FUNCTION_14	IF_1
0x40087a4	          0x4885db	                           test rbx, rbx	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x40087a7	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       704	eval.c	FUNCTION_14	IF_1
0x40087ac	     0xf8456ffffff	                            je 0x4008708	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x40087b2	          0x803b00	                       cmp byte [rbx], 0	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x40087b5	     0xf844dffffff	                            je 0x4008708	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x40087bb	          0x4889df	                            mov rdi, rbx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087be	        0x8954240c	              mov dword [rsp + 0xc], edx	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087c2	        0x48893424	                    mov qword [rsp], rsi	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087c6	      0xe800000000	                          call 0x40087cb	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087cb	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087cd	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087cf	            0xeb8f	                           jmp 0x4008760	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087d1	     0xf1f80000000	                         nop dword [rax]	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x40087d8	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4864	eval.c	FUNCTION_75
0x40087dd	    0x488d98d80000	                   lea rbx, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x40087e4	          0x4885db	                           test rbx, rbx	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40087e7	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x40087ec	     0xf8416ffffff	                            je 0x4008708	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40087f2	      0xe950ffffff	                           jmp 0x4008747	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40087f7	      0xe800000000	                          call 0x40087fc	       737	eval.c	FUNCTION_14
prepare_assert_error	DO,0:WHILE,0:FOR,0:ELSE,0:IF,4:SWITCH,0:CALL,6:functions,0	56
0x4006c80	              0x53	                                push rbx	      8785	eval.c	FUNCTION_168
0x4006c81	      0xbe01000000	                              mov esi, 1	      8788	eval.c	FUNCTION_168	CALL_1
0x4006c86	      0xba64000000	                           mov edx, 0x64	      8788	eval.c	FUNCTION_168	CALL_1
0x4006c8b	          0x4889fb	                            mov rbx, rdi	      8785	eval.c	FUNCTION_168
0x4006c8e	        0x4883ec50	                           sub rsp, 0x50	      8785	eval.c	FUNCTION_168
0x4006c92	    0x64488b042528	                mov rax, qword fs:[0x28]	      8785	eval.c	FUNCTION_168
0x4006c9b	      0x4889442448	             mov qword [rsp + 0x48], rax	      8785	eval.c	FUNCTION_168
0x4006ca0	            0x31c0	                            xor eax, eax	      8785	eval.c	FUNCTION_168
0x4006ca2	      0xe800000000	                          call 0x4006ca7	      8788	eval.c	FUNCTION_168	CALL_1
0x4006ca7	    0x488b35000000	            mov rsi, qword [0x04006cae] 	      8789	eval.c	FUNCTION_168	IF_1
0x4006cae	          0x4885f6	                           test rsi, rsi	      8789	eval.c	FUNCTION_168	IF_1
0x4006cb1	     0xf8491000000	                            je 0x4006d48	      8789	eval.c	FUNCTION_168	IF_1
0x4006cb7	          0x4889df	                            mov rdi, rbx	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x4006cba	      0xe800000000	                          call 0x4006cbf	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x4006cbf	    0x48833d000000	               cmp qword [0x04006cc7], 0	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x4006cc7	            0x7e6f	                           jle 0x4006d38	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x4006cc9	      0xbe00000000	                              mov esi, 0	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4006cce	          0x4889df	                            mov rdi, rbx	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4006cd1	      0xe800000000	                          call 0x4006cd6	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4006cd6	    0x4c8b05000000	              mov r8, qword [0x04006cdd]	      8795	eval.c	FUNCTION_168	IF_3
0x4006cdd	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x4006ce0	            0x7e56	                           jle 0x4006d38	      8795	eval.c	FUNCTION_168	IF_3
0x4006ce2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006ce7	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006cec	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006cf1	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006cf4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006cf6	      0xe800000000	                          call 0x4006cfb	        33	stdio2.h	FUNCTION_206	CALL_2
0x4006cfb	          0x4889e6	                            mov rsi, rsp	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x4006cfe	          0x4889df	                            mov rdi, rbx	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x4006d01	      0xe800000000	                          call 0x4006d06	      8798	eval.c	FUNCTION_168	IF_3	CALL_5
0x4006d06	    0x48833d000000	               cmp qword [0x04006d0e], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006d0e	            0x7450	                            je 0x4006d60	      8800	eval.c	FUNCTION_168	IF_4
0x4006d10	      0xbe00000000	                              mov esi, 0	      8801	eval.c	FUNCTION_168	CALL_6
0x4006d15	          0x4889df	                            mov rdi, rbx	      8801	eval.c	FUNCTION_168	CALL_6
0x4006d18	      0xe800000000	                          call 0x4006d1d	      8801	eval.c	FUNCTION_168	CALL_6
0x4006d1d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      8802	eval.c	FUNCTION_168
0x4006d22	    0x644833042528	                xor rax, qword fs:[0x28]	      8802	eval.c	FUNCTION_168
0x4006d2b	            0x753f	                           jne 0x4006d6c	      8802	eval.c	FUNCTION_168
0x4006d2d	        0x4883c450	                           add rsp, 0x50	      8802	eval.c	FUNCTION_168
0x4006d31	              0x5b	                                 pop rbx	      8802	eval.c	FUNCTION_168
0x4006d32	              0xc3	                                     ret	      8802	eval.c	FUNCTION_168
0x4006d33	       0xf1f440000	                   nop dword [rax + rax]	      8802	eval.c	FUNCTION_168
0x4006d38	    0x48833d000000	               cmp qword [0x04006d40], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006d40	            0x75ce	                           jne 0x4006d10	      8800	eval.c	FUNCTION_168	IF_4
0x4006d42	            0xebd9	                           jmp 0x4006d1d	      8800	eval.c	FUNCTION_168	IF_4
0x4006d44	         0xf1f4000	                         nop dword [rax]	      8800	eval.c	FUNCTION_168	IF_4
0x4006d48	    0x4c8b05000000	              mov r8, qword [0x04006d4f]	      8795	eval.c	FUNCTION_168	IF_3
0x4006d4f	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x4006d52	            0x7f8e	                            jg 0x4006ce2	      8795	eval.c	FUNCTION_168	IF_3
0x4006d54	            0xebc7	                           jmp 0x4006d1d	      8795	eval.c	FUNCTION_168	IF_3
0x4006d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8795	eval.c	FUNCTION_168	IF_3
0x4006d60	    0x48833d000000	               cmp qword [0x04006d68], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4006d68	            0x7fa6	                            jg 0x4006d10	      8800	eval.c	FUNCTION_168	IF_4
0x4006d6a	            0xebb1	                           jmp 0x4006d1d	      8800	eval.c	FUNCTION_168	IF_4
0x4006d6c	      0xe800000000	                          call 0x4006d71	      8802	eval.c	FUNCTION_168
eval_init	DO,0:WHILE,0:FOR,1:ELSE,2:IF,5:SWITCH,0:CALL,34:functions,0	122
0x4002d10	              0x55	                                push rbp	       286	eval.c	FUNCTION_3
0x4002d11	              0x53	                                push rbx	       286	eval.c	FUNCTION_3
0x4002d12	      0xbf00000000	                              mov edi, 0	      7373	eval.c	FUNCTION_136	CALL_1
0x4002d17	      0xbb00000000	                              mov ebx, 0	      7373	eval.c	FUNCTION_136	CALL_1
0x4002d1c	        0x4883ec08	                              sub rsp, 8	       286	eval.c	FUNCTION_3
0x4002d20	      0xe800000000	                          call 0x4002d25	      7373	eval.c	FUNCTION_136	CALL_1
0x4002d25	      0xbf00000000	                              mov edi, 0	      7373	eval.c	FUNCTION_136	CALL_1
0x4002d2a	    0xc60500000000	                mov byte [0x04002d31], 0	      7374	eval.c	FUNCTION_136
0x4002d31	    0xc60500000000	                mov byte [0x04002d38], 2	      7375	eval.c	FUNCTION_136
0x4002d38	    0xc70500000000	        mov dword [0x04002d42], 0x1869f 	      7376	eval.c	FUNCTION_136
0x4002d42	    0xc70500000000	               mov dword [0x04002d4c], 0	      7377	eval.c	FUNCTION_136
0x4002d4c	    0x48c705000000	               mov qword [0x04002d57], 0	      7378	eval.c	FUNCTION_136
0x4002d57	    0xc70500000000	               mov dword [0x04002d61], 6	      7379	eval.c	FUNCTION_136
0x4002d61	    0xc60500000000	                mov byte [0x04002d68], 2	      7380	eval.c	FUNCTION_136
0x4002d68	    0xc60500000000	                mov byte [0x04002d6f], 5	      7381	eval.c	FUNCTION_136
0x4002d6f	    0xc60500000000	                mov byte [0x04002d76], 0	      7382	eval.c	FUNCTION_136
0x4002d76	      0xe800000000	                          call 0x4002d7b	      7373	eval.c	FUNCTION_136	CALL_1
0x4002d7b	      0xbf00000000	                              mov edi, 0	       293	eval.c	FUNCTION_3	CALL_3
0x4002d80	    0xc60500000000	                mov byte [0x04002d87], 1	      7375	eval.c	FUNCTION_136
0x4002d87	    0xc70500000000	        mov dword [0x04002d91], 0x1869f 	      7376	eval.c	FUNCTION_136
0x4002d91	    0xc70500000000	               mov dword [0x04002d9b], 0	      7377	eval.c	FUNCTION_136
0x4002d9b	    0x48c705000000	               mov qword [0x04002da6], 0	      7378	eval.c	FUNCTION_136
0x4002da6	    0xc70500000000	               mov dword [0x04002db0], 6	      7379	eval.c	FUNCTION_136
0x4002db0	    0xc60500000000	                mov byte [0x04002db7], 2	      7380	eval.c	FUNCTION_136
0x4002db7	    0xc60500000000	                mov byte [0x04002dbe], 5	      7381	eval.c	FUNCTION_136
0x4002dbe	    0xc60500000000	                mov byte [0x04002dc5], 0	      7382	eval.c	FUNCTION_136
0x4002dc5	    0xc60500000000	                mov byte [0x04002dcc], 2	       292	eval.c	FUNCTION_3
0x4002dcc	      0xe800000000	                          call 0x4002dd1	       293	eval.c	FUNCTION_3	CALL_3
0x4002dd1	      0xe800000000	                          call 0x4002dd6	       294	eval.c	FUNCTION_3	CALL_4
0x4002dd6	            0xeb24	                           jmp 0x4002dfc	       294	eval.c	FUNCTION_3	CALL_4
0x4002dd8	     0xf1f84000000	                   nop dword [rax + rax]	       294	eval.c	FUNCTION_3	CALL_4
0x4002de0	          0x8b53ef	             mov edx, dword [rbx - 0x11]	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002de3	        0xc643ff05	                   mov byte [rbx - 1], 5	       306	eval.c	FUNCTION_3	FOR_1	IF_2
0x4002de7	            0x85d2	                           test edx, edx	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002de9	            0x7559	                           jne 0x4002e44	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002deb	            0xa801	                              test al, 1	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4002ded	            0x756a	                           jne 0x4002e59	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4002def	        0x4883c338	                           add rbx, 0x38	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4002df3	    0x4881fb000000	                              cmp rbx, 0	       296	eval.c	FUNCTION_3	FOR_1
0x4002dfa	            0x7477	                            je 0x4002e73	       296	eval.c	FUNCTION_3	FOR_1
0x4002dfc	        0x488b6be7	             mov rbp, qword [rbx - 0x19]	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4002e00	          0x4889ef	                            mov rdi, rbp	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4002e03	      0xe800000000	                          call 0x4002e08	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4002e08	        0x4883f810	                           cmp rax, 0x10	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4002e0c	     0xf8786010000	                            ja 0x4002f98	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4002e12	      0xba11000000	                           mov edx, 0x11	       110	string3.h	FUNCTION_197	CALL_3
0x4002e17	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x4002e1a	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4002e1d	      0xe800000000	                          call 0x4002e22	       110	string3.h	FUNCTION_197	CALL_3
0x4002e22	         0xfb64317	           movzx eax, byte [rbx + 0x17] 	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x4002e26	            0xa802	                              test al, 2	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x4002e28	            0x75b6	                           jne 0x4002de0	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x4002e2a	            0x89c2	                            mov edx, eax	       307	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e2c	          0x83e204	                              and edx, 4	       307	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e2f	          0x80fa01	                               cmp dl, 1	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e32	            0x19d2	                            sbb edx, edx	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e34	          0x83e2fe	                     and edx, 0xfffffffe	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e37	          0x83c206	                              add edx, 6	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e3a	          0x8853ff	                  mov byte [rbx - 1], dl	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4002e3d	          0x8b53ef	             mov edx, dword [rbx - 0x11]	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002e40	            0x85d2	                           test edx, edx	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002e42	            0x74a7	                            je 0x4002deb	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4002e44	          0x4889de	                            mov rsi, rbx	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4002e47	      0xbf00000000	                              mov edi, 0	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4002e4c	      0xe800000000	                          call 0x4002e51	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4002e51	         0xfb64317	           movzx eax, byte [rbx + 0x17] 	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4002e55	            0xa801	                              test al, 1	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4002e57	            0x7496	                            je 0x4002def	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4002e59	          0x4889de	                            mov rsi, rbx	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4002e5c	      0xbf00000000	                              mov edi, 0	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4002e61	        0x4883c338	                           add rbx, 0x38	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4002e65	      0xe800000000	                          call 0x4002e6a	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x4002e6a	    0x4881fb000000	                              cmp rbx, 0	       296	eval.c	FUNCTION_3	FOR_1
0x4002e71	            0x7589	                           jne 0x4002dfc	       296	eval.c	FUNCTION_3	FOR_1
0x4002e73	      0xbf02000000	                              mov edi, 2	       323	eval.c	FUNCTION_3	CALL_14
0x4002e78	    0x48c705000000	          mov qword [0x04002e83], 0x320 	       319	eval.c	FUNCTION_3
0x4002e83	    0x48c705000000	               mov qword [0x04002e8e], 1	      6385	eval.c	FUNCTION_102
0x4002e8e	    0x48c705000000	               mov qword [0x04002e99], 1	      6385	eval.c	FUNCTION_102
0x4002e99	      0xe800000000	                          call 0x4002e9e	       323	eval.c	FUNCTION_3	CALL_14
0x4002e9e	      0xbf3c000000	                           mov edi, 0x3c	       323	eval.c	FUNCTION_3	CALL_14
0x4002ea3	          0x4889c6	                            mov rsi, rax	       323	eval.c	FUNCTION_3	CALL_14
0x4002ea6	      0xe800000000	                          call 0x4002eab	       323	eval.c	FUNCTION_3	CALL_14
0x4002eab	      0xe800000000	                          call 0x4002eb0	       324	eval.c	FUNCTION_3	CALL_16
0x4002eb0	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x4002eb5	          0x4889c3	                            mov rbx, rax	       324	eval.c	FUNCTION_3	CALL_16
0x4002eb8	      0xe800000000	                          call 0x4002ebd	      6489	eval.c	FUNCTION_110	CALL_1
0x4002ebd	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4002ec0	    0xc70500000000	               mov dword [0x04002eca], 5	      6490	eval.c	FUNCTION_110
0x4002eca	    0x48891d000000	            mov qword [0x04002ed1], rbx 	      6491	eval.c	FUNCTION_110
0x4002ed1	            0x7404	                            je 0x4002ed7	      6492	eval.c	FUNCTION_110	IF_1
0x4002ed3	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4002ed7	      0xbf02000000	                              mov edi, 2	       325	eval.c	FUNCTION_3	CALL_18
0x4002edc	      0xe800000000	                          call 0x4002ee1	       325	eval.c	FUNCTION_3	CALL_18
0x4002ee1	      0xbf56000000	                           mov edi, 0x56	       325	eval.c	FUNCTION_3	CALL_18
0x4002ee6	          0x4889c6	                            mov rsi, rax	       325	eval.c	FUNCTION_3	CALL_18
0x4002ee9	      0xe800000000	                          call 0x4002eee	       325	eval.c	FUNCTION_3	CALL_18
0x4002eee	    0x48c705000000	               mov qword [0x04002ef9], 0	      6385	eval.c	FUNCTION_102
0x4002ef9	    0x48c705000000	               mov qword [0x04002f04], 1	      6385	eval.c	FUNCTION_102
0x4002f04	            0x31ff	                            xor edi, edi	       343	eval.c	FUNCTION_3	CALL_33
0x4002f06	    0x48c705000000	               mov qword [0x04002f11], 2	      6385	eval.c	FUNCTION_102
0x4002f11	    0x48c705000000	               mov qword [0x04002f1c], 3	      6385	eval.c	FUNCTION_102
0x4002f1c	    0x48c705000000	               mov qword [0x04002f27], 0	      6385	eval.c	FUNCTION_102
0x4002f27	    0x48c705000000	               mov qword [0x04002f32], 1	      6385	eval.c	FUNCTION_102
0x4002f32	    0x48c705000000	               mov qword [0x04002f3d], 2	      6385	eval.c	FUNCTION_102
0x4002f3d	    0x48c705000000	               mov qword [0x04002f48], 3	      6385	eval.c	FUNCTION_102
0x4002f48	    0x48c705000000	               mov qword [0x04002f53], 4	      6385	eval.c	FUNCTION_102
0x4002f53	    0x48c705000000	               mov qword [0x04002f5e], 5	      6385	eval.c	FUNCTION_102
0x4002f5e	    0x48c705000000	               mov qword [0x04002f69], 6	      6385	eval.c	FUNCTION_102
0x4002f69	    0x48c705000000	               mov qword [0x04002f74], 7	      6385	eval.c	FUNCTION_102
0x4002f74	    0x48c705000000	               mov qword [0x04002f7f], 8	      6385	eval.c	FUNCTION_102
0x4002f7f	    0x48c705000000	               mov qword [0x04002f8a], 9	      6385	eval.c	FUNCTION_102
0x4002f8a	        0x4883c408	                              add rsp, 8	       351	eval.c	FUNCTION_3
0x4002f8e	              0x5b	                                 pop rbx	       351	eval.c	FUNCTION_3
0x4002f8f	              0x5d	                                 pop rbp	       351	eval.c	FUNCTION_3
0x4002f90	      0xe9cbfbffff	                     jmp sym.set_reg_var	       343	eval.c	FUNCTION_3	CALL_33
0x4002f95	           0xf1f00	                         nop dword [rax]	       343	eval.c	FUNCTION_3	CALL_33
0x4002f98	      0xbf00000000	                              mov edi, 0	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x4002f9d	      0xe800000000	                          call 0x4002fa2	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x4002fa2	      0xbf01000000	                              mov edi, 1	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4002fa7	      0xe800000000	                          call 0x4002fac	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4002fac	        0x488b6be7	             mov rbp, qword [rbx - 0x19]	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4002fb0	      0xe95dfeffff	                           jmp 0x4002e12	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
next_for_item	DO,0:WHILE,0:FOR,0:ELSE,1:IF,1:SWITCH,0:CALL,1:functions,0	23
0x400b180	        0x488b4f08	                mov rcx, qword [rdi + 8]	      2570	eval.c	FUNCTION_49
0x400b184	          0x4885c9	                           test rcx, rcx	      2571	eval.c	FUNCTION_49	IF_1
0x400b187	            0x743f	                            je 0x400b1c8	      2571	eval.c	FUNCTION_49	IF_1
0x400b189	          0x4889fa	                            mov rdx, rdi	      2571	eval.c	FUNCTION_49	IF_1
0x400b18c	        0x4883ec08	                              sub rsp, 8	      2565	eval.c	FUNCTION_49
0x400b190	          0x4889f7	                            mov rdi, rsi	      2565	eval.c	FUNCTION_49
0x400b193	          0x4889d0	                            mov rax, rdx	      2565	eval.c	FUNCTION_49
0x400b196	          0x488b11	                    mov rdx, qword [rcx]	      2575	eval.c	FUNCTION_49	ELSE_1
0x400b199	        0x488d7110	                   lea rsi, [rcx + 0x10]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b19d	        0x448b4004	                mov r8d, dword [rax + 4]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1a1	            0x8b08	                    mov ecx, dword [rax]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1a3	          0x4531c9	                            xor r9d, r9d	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1a6	        0x48895008	                mov qword [rax + 8], rdx	      2575	eval.c	FUNCTION_49	ELSE_1
0x400b1aa	      0xba01000000	                              mov edx, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1af	      0xe8ecfdffff	                    call sym.ex_let_vars	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1b4	          0x83f801	                              cmp eax, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1b7	           0xf94c0	                                 sete al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1ba	        0x4883c408	                              add rsp, 8	      2580	eval.c	FUNCTION_49
0x400b1be	           0xfb6c0	                           movzx eax, al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x400b1c1	              0xc3	                                     ret	      2580	eval.c	FUNCTION_49
0x400b1c2	    0x660f1f440000	                    nop word [rax + rax]	      2580	eval.c	FUNCTION_49
0x400b1c8	            0x31c0	                            xor eax, eax	      2580	eval.c	FUNCTION_49
0x400b1ca	              0xc3	                                     ret	      2580	eval.c	FUNCTION_49
eval_for_line	DO,0:WHILE,0:FOR,0:ELSE,2:IF,9:SWITCH,0:CALL,13:functions,0	122
0x4009a10	            0x4156	                                push r14	      2500	eval.c	FUNCTION_48
0x4009a12	            0x4155	                                push r13	      2500	eval.c	FUNCTION_48
0x4009a14	          0x4989d6	                            mov r14, rdx	      2500	eval.c	FUNCTION_48
0x4009a17	            0x4154	                                push r12	      2500	eval.c	FUNCTION_48
0x4009a19	              0x55	                                push rbp	      2500	eval.c	FUNCTION_48
0x4009a1a	          0x4889fd	                            mov rbp, rdi	      2500	eval.c	FUNCTION_48
0x4009a1d	              0x53	                                push rbx	      2500	eval.c	FUNCTION_48
0x4009a1e	      0xbf20000000	                           mov edi, 0x20	      2508	eval.c	FUNCTION_48	CALL_1
0x4009a23	          0x4989f4	                            mov r12, rsi	      2500	eval.c	FUNCTION_48
0x4009a26	          0x4189cd	                           mov r13d, ecx	      2500	eval.c	FUNCTION_48
0x4009a29	        0x4883ec20	                           sub rsp, 0x20	      2500	eval.c	FUNCTION_48
0x4009a2d	    0xc70601000000	                      mov dword [rsi], 1	      2506	eval.c	FUNCTION_48
0x4009a33	    0x64488b042528	                mov rax, qword fs:[0x28]	      2500	eval.c	FUNCTION_48
0x4009a3c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2500	eval.c	FUNCTION_48
0x4009a41	            0x31c0	                            xor eax, eax	      2500	eval.c	FUNCTION_48
0x4009a43	      0xe800000000	                          call 0x4009a48	      2508	eval.c	FUNCTION_48	CALL_1
0x4009a48	          0x4885c0	                           test rax, rax	      2509	eval.c	FUNCTION_48	IF_1
0x4009a4b	     0xf8447010000	                            je 0x4009b98	      2509	eval.c	FUNCTION_48	IF_1
0x4009a51	        0x807d005b	                    cmp byte [rbp], 0x5b	      1421	eval.c	FUNCTION_33	IF_1
0x4009a55	          0x4889c3	                            mov rbx, rax	      1421	eval.c	FUNCTION_33	IF_1
0x4009a58	            0x7466	                            je 0x4009ac0	      1421	eval.c	FUNCTION_33	IF_1
0x4009a5a	          0x4889ef	                            mov rdi, rbp	      1457	eval.c	FUNCTION_33	CALL_10
0x4009a5d	      0xe8ae86ffff	                   call sym.skip_var_one	      1457	eval.c	FUNCTION_33	CALL_10
0x4009a62	          0x4889c7	                            mov rdi, rax	      1457	eval.c	FUNCTION_33	CALL_10
0x4009a65	          0x4885ff	                           test rdi, rdi	      2513	eval.c	FUNCTION_48	IF_2
0x4009a68	          0x4889d8	                            mov rax, rbx	      2513	eval.c	FUNCTION_48	IF_2
0x4009a6b	            0x742c	                            je 0x4009a99	      2513	eval.c	FUNCTION_48	IF_2
0x4009a6d	      0xe800000000	                          call 0x4009a72	      2516	eval.c	FUNCTION_48	CALL_3
0x4009a72	          0x803869	                    cmp byte [rax], 0x69	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009a75	            0x7506	                           jne 0x4009a7d	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009a77	        0x8078016e	                cmp byte [rax + 1], 0x6e	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009a7b	            0x745b	                            je 0x4009ad8	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009a7d	      0xba05000000	                              mov edx, 5	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a82	      0xbe00000000	                              mov esi, 0	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a87	            0x31ff	                            xor edi, edi	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a89	      0xe800000000	                          call 0x4009a8e	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a8e	          0x4889c7	                            mov rdi, rax	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a91	      0xe800000000	                          call 0x4009a96	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x4009a96	          0x4889d8	                            mov rax, rbx	      2520	eval.c	FUNCTION_48	IF_3
0x4009a99	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2555	eval.c	FUNCTION_48
0x4009a9e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2555	eval.c	FUNCTION_48
0x4009aa7	     0xf8526010000	                           jne 0x4009bd3	      2555	eval.c	FUNCTION_48
0x4009aad	        0x4883c420	                           add rsp, 0x20	      2555	eval.c	FUNCTION_48
0x4009ab1	              0x5b	                                 pop rbx	      2555	eval.c	FUNCTION_48
0x4009ab2	              0x5d	                                 pop rbp	      2555	eval.c	FUNCTION_48
0x4009ab3	            0x415c	                                 pop r12	      2555	eval.c	FUNCTION_48
0x4009ab5	            0x415d	                                 pop r13	      2555	eval.c	FUNCTION_48
0x4009ab7	            0x415e	                                 pop r14	      2555	eval.c	FUNCTION_48
0x4009ab9	              0xc3	                                     ret	      2555	eval.c	FUNCTION_48
0x4009aba	    0x660f1f440000	                    nop word [rax + rax]	      2555	eval.c	FUNCTION_48
0x4009ac0	        0x488d7004	                      lea rsi, [rax + 4]	      2512	eval.c	FUNCTION_48	CALL_2
0x4009ac4	          0x4889ef	                            mov rdi, rbp	      2512	eval.c	FUNCTION_48	CALL_2
0x4009ac7	          0x4889c2	                            mov rdx, rax	      2512	eval.c	FUNCTION_48	CALL_2
0x4009aca	      0xe88186ffff	           call sym.skip_var_list.part.4	      2512	eval.c	FUNCTION_48	CALL_2
0x4009acf	          0x4889c7	                            mov rdi, rax	      2512	eval.c	FUNCTION_48	CALL_2
0x4009ad2	            0xeb91	                           jmp 0x4009a65	      2512	eval.c	FUNCTION_48	CALL_2
0x4009ad4	         0xf1f4000	                         nop dword [rax]	      2512	eval.c	FUNCTION_48	CALL_2
0x4009ad8	         0xfb65002	               movzx edx, byte [rax + 2]	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009adc	          0x80fa20	                            cmp dl, 0x20	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009adf	            0x7405	                            je 0x4009ae6	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009ae1	          0x80fa09	                               cmp dl, 9	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009ae4	            0x7597	                           jne 0x4009a7d	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x4009ae6	          0x4585ed	                         test r13d, r13d	      2523	eval.c	FUNCTION_48	IF_4
0x4009ae9	            0x7435	                            je 0x4009b20	      2523	eval.c	FUNCTION_48	IF_4
0x4009aeb	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009aef	    0x830500000000	               add dword [0x04009af6], 1	      2524	eval.c	FUNCTION_48	IF_4
0x4009af6	      0xe800000000	                          call 0x4009afb	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009afb	            0x31c9	                            xor ecx, ecx	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009afd	          0x4c89f2	                            mov rdx, r14	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b00	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b03	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b06	      0xe800000000	                          call 0x4009b0b	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b0b	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b0e	            0x7478	                            je 0x4009b88	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b10	    0x832d00000000	               sub dword [0x04009b17], 1	      2552	eval.c	FUNCTION_48	IF_9
0x4009b17	          0x4889d8	                            mov rax, rbx	      2552	eval.c	FUNCTION_48	IF_9
0x4009b1a	      0xe97affffff	                           jmp 0x4009a99	      2552	eval.c	FUNCTION_48	IF_9
0x4009b1f	              0x90	                                     nop	      2552	eval.c	FUNCTION_48	IF_9
0x4009b20	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b24	      0xe800000000	                          call 0x4009b29	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b29	      0xb901000000	                              mov ecx, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b2e	          0x4c89f2	                            mov rdx, r14	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b31	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b34	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b37	      0xe800000000	                          call 0x4009b3c	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b3c	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b3f	            0x740f	                            je 0x4009b50	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b41	          0x4889d8	                            mov rax, rbx	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b44	      0xe950ffffff	                           jmp 0x4009a99	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b49	     0xf1f80000000	                         nop dword [rax]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x4009b50	        0x833c2405	                      cmp dword [rsp], 5	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x4009b54	    0x41c704240000	                      mov dword [r12], 0	      2527	eval.c	FUNCTION_48	IF_5
0x4009b5c	            0x7441	                            je 0x4009b9f	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x4009b5e	      0xba05000000	                              mov edx, 5	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b63	      0xbe00000000	                              mov esi, 0	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b68	            0x31ff	                            xor edi, edi	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b6a	      0xe800000000	                          call 0x4009b6f	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b6f	          0x4889c7	                            mov rdi, rax	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b72	      0xe800000000	                          call 0x4009b77	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x4009b77	          0x4889e7	                            mov rdi, rsp	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4009b7a	      0xe800000000	                          call 0x4009b7f	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4009b7f	            0xebc0	                           jmp 0x4009b41	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4009b81	     0xf1f80000000	                         nop dword [rax]	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x4009b88	    0x41c704240000	                      mov dword [r12], 0	      2527	eval.c	FUNCTION_48	IF_5
0x4009b90	      0xe97bffffff	                           jmp 0x4009b10	      2527	eval.c	FUNCTION_48	IF_5
0x4009b95	           0xf1f00	                         nop dword [rax]	      2527	eval.c	FUNCTION_48	IF_5
0x4009b98	            0x31c0	                            xor eax, eax	      2510	eval.c	FUNCTION_48	IF_1
0x4009b9a	      0xe9fafeffff	                           jmp 0x4009a99	      2510	eval.c	FUNCTION_48	IF_1
0x4009b9f	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      2530	eval.c	FUNCTION_48	IF_5	IF_6
0x4009ba4	          0x4885ed	                           test rbp, rbp	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x4009ba7	            0x741d	                            je 0x4009bc6	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x4009ba9	        0x488d7308	                      lea rsi, [rbx + 8]	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4009bad	        0x48896b18	             mov qword [rbx + 0x18], rbp	      2545	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4009bb1	          0x4889ef	                            mov rdi, rbp	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4009bb4	      0xe800000000	                          call 0x4009bb9	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x4009bb9	        0x488b4500	                    mov rax, qword [rbp]	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4009bbd	        0x48894308	                mov qword [rbx + 8], rax	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4009bc1	      0xe97bffffff	                           jmp 0x4009b41	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x4009bc6	          0x4889e7	                            mov rdi, rsp	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4009bc9	      0xe800000000	                          call 0x4009bce	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4009bce	      0xe96effffff	                           jmp 0x4009b41	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x4009bd3	      0xe800000000	                          call 0x4009bd8	      2555	eval.c	FUNCTION_48
eval_spell_expr	DO,0:WHILE,0:FOR,0:ELSE,1:IF,4:SWITCH,0:CALL,5:functions,0	62
0x4008a70	            0x4156	                                push r14	       943	eval.c	FUNCTION_23
0x4008a72	            0x4155	                                push r13	       943	eval.c	FUNCTION_23
0x4008a74	              0x55	                                push rbp	       943	eval.c	FUNCTION_23
0x4008a75	              0x53	                                push rbx	       943	eval.c	FUNCTION_23
0x4008a76	          0x4889fd	                            mov rbp, rdi	       943	eval.c	FUNCTION_23
0x4008a79	          0x4889f7	                            mov rdi, rsi	       947	eval.c	FUNCTION_23	CALL_1
0x4008a7c	        0x4883ec38	                           sub rsp, 0x38	       943	eval.c	FUNCTION_23
0x4008a80	    0x64488b042528	                mov rax, qword fs:[0x28]	       943	eval.c	FUNCTION_23
0x4008a89	      0x4889442428	             mov qword [rsp + 0x28], rax	       943	eval.c	FUNCTION_23
0x4008a8e	            0x31c0	                            xor eax, eax	       943	eval.c	FUNCTION_23
0x4008a90	      0xe800000000	                          call 0x4008a95	       947	eval.c	FUNCTION_23	CALL_1
0x4008a95	    0x8b1d00000000	            mov ebx, dword [0x04008a9b] 	       911	eval.c	FUNCTION_21	IF_1
0x4008a9b	      0x4889442408	                mov qword [rsp + 8], rax	       947	eval.c	FUNCTION_23	CALL_1
0x4008aa0	    0x4c8b2d000000	            mov r13, qword [0x04008aa7] 	       910	eval.c	FUNCTION_21
0x4008aa7	    0x4c8b35000000	            mov r14, qword [0x04008aae] 	       910	eval.c	FUNCTION_21
0x4008aae	            0x85db	                           test ebx, ebx	       911	eval.c	FUNCTION_21	IF_1
0x4008ab0	     0xf849a000000	                            je 0x4008b50	       911	eval.c	FUNCTION_21	IF_1
0x4008ab6	    0x48833d000000	               cmp qword [0x04008abe], 0	       953	eval.c	FUNCTION_23	IF_1
0x4008abe	    0xc70500000000	               mov dword [0x04008ac8], 2	       951	eval.c	FUNCTION_23
0x4008ac8	    0x48892d000000	            mov qword [0x04008acf], rbp 	       952	eval.c	FUNCTION_23
0x4008acf	            0x7507	                           jne 0x4008ad8	       953	eval.c	FUNCTION_23	IF_1
0x4008ad1	    0x830500000000	               add dword [0x04008ad8], 1	       954	eval.c	FUNCTION_23	IF_1
0x4008ad8	      0x488d742410	                   lea rsi, [rsp + 0x10]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008add	      0x488d7c2408	                      lea rdi, [rsp + 8]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008ae2	      0xba01000000	                              mov edx, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008ae7	            0x31ed	                            xor ebp, ebp	       946	eval.c	FUNCTION_23
0x4008ae9	      0xe800000000	                          call 0x4008aee	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008aee	          0x83f801	                              cmp eax, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008af1	            0x750c	                           jne 0x4008aff	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x4008af3	      0x837c241005	               cmp dword [rsp + 0x10], 5	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x4008af8	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       961	eval.c	FUNCTION_23	IF_2	ELSE_1
0x4008afd	            0x7569	                           jne 0x4008b68	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x4008aff	    0x48833d000000	               cmp qword [0x04008b07], 0	       964	eval.c	FUNCTION_23	IF_4
0x4008b07	            0x7507	                           jne 0x4008b10	       964	eval.c	FUNCTION_23	IF_4
0x4008b09	    0x832d00000000	               sub dword [0x04008b10], 1	       965	eval.c	FUNCTION_23	IF_4
0x4008b10	            0x85db	                           test ebx, ebx	       925	eval.c	FUNCTION_22	IF_1
0x4008b12	    0x4c892d000000	            mov qword [0x04008b19], r13 	       924	eval.c	FUNCTION_22
0x4008b19	    0x4c8935000000	            mov qword [0x04008b20], r14 	       924	eval.c	FUNCTION_22
0x4008b20	            0x750a	                           jne 0x4008b2c	       925	eval.c	FUNCTION_22	IF_1
0x4008b22	      0xbf22000000	                           mov edi, 0x22	       925	eval.c	FUNCTION_22	IF_1
0x4008b27	      0xe8d47bffff	          call sym.restore_vimvar.part.2	       925	eval.c	FUNCTION_22	IF_1
0x4008b2c	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       969	eval.c	FUNCTION_23
0x4008b31	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       969	eval.c	FUNCTION_23
0x4008b3a	          0x4889e8	                            mov rax, rbp	       969	eval.c	FUNCTION_23
0x4008b3d	            0x7537	                           jne 0x4008b76	       969	eval.c	FUNCTION_23
0x4008b3f	        0x4883c438	                           add rsp, 0x38	       969	eval.c	FUNCTION_23
0x4008b43	              0x5b	                                 pop rbx	       969	eval.c	FUNCTION_23
0x4008b44	              0x5d	                                 pop rbp	       969	eval.c	FUNCTION_23
0x4008b45	            0x415d	                                 pop r13	       969	eval.c	FUNCTION_23
0x4008b47	            0x415e	                                 pop r14	       969	eval.c	FUNCTION_23
0x4008b49	              0xc3	                                     ret	       969	eval.c	FUNCTION_23
0x4008b4a	    0x660f1f440000	                    nop word [rax + rax]	       969	eval.c	FUNCTION_23
0x4008b50	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x4008b55	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x4008b5a	      0xe800000000	                          call 0x4008b5f	       912	eval.c	FUNCTION_21	CALL_1
0x4008b5f	      0xe952ffffff	                           jmp 0x4008ab6	       912	eval.c	FUNCTION_21	CALL_1
0x4008b64	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x4008b68	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x4008b6d	            0x31ed	                            xor ebp, ebp	       946	eval.c	FUNCTION_23
0x4008b6f	      0xe800000000	                          call 0x4008b74	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x4008b74	            0xeb89	                           jmp 0x4008aff	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x4008b76	      0xe800000000	                          call 0x4008b7b	       969	eval.c	FUNCTION_23
set_context_for_expression	DO,0:WHILE,4:FOR,1:ELSE,12:IF,18:SWITCH,0:CALL,6:functions,0	205
0x4000800	    0x81fadb000000	                           cmp edx, 0xdb	      2610	eval.c	FUNCTION_51	IF_1
0x4000806	            0x4156	                                push r14	      2605	eval.c	FUNCTION_51
0x4000808	            0x4155	                                push r13	      2605	eval.c	FUNCTION_51
0x400080a	          0x4989fd	                            mov r13, rdi	      2605	eval.c	FUNCTION_51
0x400080d	            0x4154	                                push r12	      2605	eval.c	FUNCTION_51
0x400080f	              0x55	                                push rbp	      2605	eval.c	FUNCTION_51
0x4000810	            0x89d5	                            mov ebp, edx	      2605	eval.c	FUNCTION_51
0x4000812	              0x53	                                push rbx	      2605	eval.c	FUNCTION_51
0x4000813	          0x4889f3	                            mov rbx, rsi	      2605	eval.c	FUNCTION_51
0x4000816	     0xf8456020000	                            je 0x4000a72	      2610	eval.c	FUNCTION_51	IF_1
0x400081c	            0x31c0	                            xor eax, eax	      2628	eval.c	FUNCTION_51	ELSE_1
0x400081e	          0x83fa32	                           cmp edx, 0x32	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000821	      0xbe00000000	                              mov esi, 0	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000826	           0xf95c0	                                setne al	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000829	        0x8d440012	            lea eax, [rax + rax + 0x12] 	      2628	eval.c	FUNCTION_51	ELSE_1
0x400082d	            0x8907	                    mov dword [rdi], eax	      2627	eval.c	FUNCTION_51	ELSE_1
0x400082f	          0x4889df	                            mov rdi, rbx	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000832	      0xe800000000	                          call 0x4000837	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000837	          0x4531e4	                          xor r12d, r12d	      2627	eval.c	FUNCTION_51	ELSE_1
0x400083a	            0xeb11	                           jmp 0x400084d	      2627	eval.c	FUNCTION_51	ELSE_1
0x400083c	         0xf1f4000	                         nop dword [rax]	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000840	      0xbe00000000	                              mov esi, 0	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000845	          0x4889df	                            mov rdi, rbx	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000848	      0xe800000000	                          call 0x400084d	      2627	eval.c	FUNCTION_51	ELSE_1
0x400084d	          0x4885c0	                           test rax, rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000850	        0x49894508	                mov qword [r13 + 8], rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000854	     0xf84f5010000	                            je 0x4000a4f	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x400085a	        0x440fb630	                  movzx r14d, byte [rax]	      2632	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x400085e	        0x4183fe26	                          cmp r14d, 0x26	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x4000862	            0x747c	                            je 0x40008e0	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x4000864	        0x4183fe24	                          cmp r14d, 0x24	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000868	     0xf84b2000000	                            je 0x4000920	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x400086e	        0x4183fe3d	                          cmp r14d, 0x3d	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000872	     0xf8420010000	                            je 0x4000998	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000878	        0x4183fe23	                          cmp r14d, 0x23	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x400087c	     0xf842e010000	                            je 0x40009b0	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000882	        0x4183fe3c	                          cmp r14d, 0x3c	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000886	          0x4889c7	                            mov rdi, rax	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000889	     0xf8489010000	                            je 0x4000a18	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x400088f	    0x81fddb000000	                           cmp ebp, 0xdb	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x4000895	     0xf8595000000	                           jne 0x4000930	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x400089b	          0x4585e4	                         test r12d, r12d	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x400089e	     0xf858c000000	                           jne 0x4000930	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x40008a4	    0x41c745001400	                   mov dword [r13], 0x14	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x40008ac	          0x4889fb	                            mov rbx, rdi	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x40008af	          0x4531e4	                          xor r12d, r12d	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x40008b2	    0x660f1f440000	                    nop word [rax + rax]	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x40008b8	          0x803b00	                       cmp byte [rbx], 0	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x40008bb	            0x7483	                            je 0x4000840	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x40008bd	           0xf1f00	                         nop dword [rax]	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x40008c0	         0xfb65301	               movzx edx, byte [rbx + 1]	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x40008c4	        0x4883c301	                              add rbx, 1	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008c8	            0x85d2	                           test edx, edx	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008ca	     0xf8470ffffff	                            je 0x4000840	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008d0	          0x83fa20	                           cmp edx, 0x20	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008d3	            0x74eb	                            je 0x40008c0	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008d5	          0x83fa09	                              cmp edx, 9	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008d8	            0x74e6	                            je 0x40008c0	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008da	      0xe961ffffff	                           jmp 0x4000840	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008df	              0x90	                                     nop	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x40008e0	         0xfb65001	               movzx edx, byte [rax + 1]	      2635	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x40008e4	          0x83fa26	                           cmp edx, 0x26	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40008e7	     0xf8433010000	                            je 0x4000a20	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x40008ed	          0x83fa20	                           cmp edx, 0x20	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x40008f0	     0xf844a010000	                            je 0x4000a40	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x40008f6	          0x83fa6c	                           cmp edx, 0x6c	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x40008f9	    0x41c745000400	                      mov dword [r13], 4	      2644	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000901	            0x7408	                            je 0x400090b	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000903	          0x83fa67	                           cmp edx, 0x67	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000906	          0x4889c3	                            mov rbx, rax	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000909	            0x75ad	                           jne 0x40008b8	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400090b	        0x8078023a	                cmp byte [rax + 2], 0x3a	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400090f	          0x4889c3	                            mov rbx, rax	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000912	            0x75a4	                           jne 0x40008b8	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000914	        0x4883c302	                              add rbx, 2	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000918	        0x49895d08	                mov qword [r13 + 8], rbx	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400091c	            0xeb9a	                           jmp 0x40008b8	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x400091e	            0x6690	                                     nop	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000920	    0x41c745001a00	                   mov dword [r13], 0x1a	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000928	          0x4889c3	                            mov rbx, rax	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x400092b	            0xeb8b	                           jmp 0x40008b8	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x400092d	           0xf1f00	                         nop dword [rax]	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000930	        0x4183fe22	                          cmp r14d, 0x22	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x4000934	            0x743d	                            je 0x4000973	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x4000936	        0x4183fe27	                          cmp r14d, 0x27	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x400093a	     0xf84a1000000	                            je 0x40009e1	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000940	        0x4183fe7c	                          cmp r14d, 0x7c	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x4000944	     0xf8412010000	                            je 0x4000a5c	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x400094a	    0x41c745001400	                   mov dword [r13], 0x14	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000952	          0x4889fb	                            mov rbx, rdi	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000955	      0xe95effffff	                           jmp 0x40008b8	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x400095a	    0x660f1f440000	                    nop word [rax + rax]	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000960	        0x807f0200	                   cmp byte [rdi + 2], 0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000964	            0x740a	                            je 0x4000970	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000966	        0x488d5f02	                      lea rbx, [rdi + 2]	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x400096a	        0x49895d08	                mov qword [r13 + 8], rbx	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x400096e	            0x6690	                                     nop	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000970	          0x4889df	                            mov rdi, rbx	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000973	        0x488d5f01	                      lea rbx, [rdi + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000977	        0x49895d08	                mov qword [r13 + 8], rbx	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x400097b	         0xfb64701	               movzx eax, byte [rdi + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x400097f	          0x83f822	                           cmp eax, 0x22	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000982	     0xf847f000000	                            je 0x4000a07	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000988	            0x85c0	                           test eax, eax	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x400098a	            0x747b	                            je 0x4000a07	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x400098c	          0x83f85c	                           cmp eax, 0x5c	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x400098f	            0x75df	                           jne 0x4000970	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000991	            0xebcd	                           jmp 0x4000960	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000993	       0xf1f440000	                   nop dword [rax + rax]	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000998	    0x41c745001400	                   mov dword [r13], 0x14	      2658	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x40009a0	          0x4889c3	                            mov rbx, rax	      2658	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x40009a3	    0x41bc01000000	                             mov r12d, 1	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x40009a9	      0xe90affffff	                           jmp 0x40008b8	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x40009ae	            0x6690	                                     nop	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x40009b0	        0x418b5500	                    mov edx, dword [r13]	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x40009b4	          0x83fa14	                           cmp edx, 0x14	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x40009b7	     0xf8492000000	                            je 0x4000a4f	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x40009bd	          0x83fa12	                           cmp edx, 0x12	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x40009c0	          0x4889c7	                            mov rdi, rax	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x40009c3	     0xf85c6feffff	                           jne 0x400088f	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x40009c9	      0xbe28000000	                           mov esi, 0x28	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009ce	      0xe800000000	                          call 0x40009d3	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009d3	          0x4885c0	                           test rax, rax	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009d6	            0x7477	                            je 0x4000a4f	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009d8	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009dc	      0xe9aefeffff	                           jmp 0x400088f	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009e1	        0x4883c701	                              add rdi, 1	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009e5	            0xeb0e	                           jmp 0x40009f5	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009e7	    0x660f1f840000	                    nop word [rax + rax]	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x40009f0	          0x83f827	                           cmp eax, 0x27	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40009f3	            0x7412	                            je 0x4000a07	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40009f5	        0x49897d08	                mov qword [r13 + 8], rdi	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40009f9	           0xfb607	                   movzx eax, byte [rdi]	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40009fc	          0x4889fb	                            mov rbx, rdi	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x40009ff	        0x4883c701	                              add rdi, 1	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000a03	            0x85c0	                           test eax, eax	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000a05	            0x75e9	                           jne 0x40009f0	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000a07	    0x41c745000000	                      mov dword [r13], 0	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a0f	      0xe9a4feffff	                           jmp 0x40008b8	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a14	         0xf1f4000	                         nop dword [rax]	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a18	        0x418b5500	                    mov edx, dword [r13]	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a1c	            0xeb9f	                           jmp 0x40009bd	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a1e	            0x6690	                                     nop	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000a20	        0x488d5801	                      lea rbx, [rax + 1]	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a24	    0x81fddb000000	                           cmp ebp, 0xdb	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a2a	        0x49895d08	                mov qword [r13 + 8], rbx	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a2e	            0x7518	                           jne 0x4000a48	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a30	            0x31c0	                            xor eax, eax	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a32	          0x4585e4	                         test r12d, r12d	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a35	            0x7511	                           jne 0x4000a48	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a37	        0x41894500	                    mov dword [r13], eax	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a3b	      0xe978feffff	                           jmp 0x40008b8	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a40	          0x4889c3	                            mov rbx, rax	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a43	      0xe97cfeffff	                           jmp 0x40008c4	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a48	      0xb814000000	                           mov eax, 0x14	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a4d	            0xebe8	                           jmp 0x4000a37	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000a4f	        0x49895d08	                mov qword [r13 + 8], rbx	      2711	eval.c	FUNCTION_51
0x4000a53	              0x5b	                                 pop rbx	      2712	eval.c	FUNCTION_51
0x4000a54	              0x5d	                                 pop rbp	      2712	eval.c	FUNCTION_51
0x4000a55	            0x415c	                                 pop r12	      2712	eval.c	FUNCTION_51
0x4000a57	            0x415d	                                 pop r13	      2712	eval.c	FUNCTION_51
0x4000a59	            0x415e	                                 pop r14	      2712	eval.c	FUNCTION_51
0x4000a5b	              0xc3	                                     ret	      2712	eval.c	FUNCTION_51
0x4000a5c	        0x807f017c	                cmp byte [rdi + 1], 0x7c	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000a60	            0x747f	                            je 0x4000ae1	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000a62	    0x41c745000100	                      mov dword [r13], 1	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000a6a	          0x4889fb	                            mov rbx, rdi	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000a6d	      0xe946feffff	                           jmp 0x40008b8	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000a72	    0xc7070f000000	                    mov dword [rdi], 0xf	      2612	eval.c	FUNCTION_51	IF_1
0x4000a78	      0xbe00000000	                              mov esi, 0	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000a7d	          0x4889df	                            mov rdi, rbx	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000a80	      0xe800000000	                          call 0x4000a85	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000a85	          0x4885c0	                           test rax, rax	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000a88	     0xf85a9fdffff	                           jne 0x4000837	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000a8e	          0x4889df	                            mov rdi, rbx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000a91	      0xe800000000	                          call 0x4000a96	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000a96	          0x4801d8	                            add rax, rbx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000a99	          0x4889c5	                            mov rbp, rax	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000a9c	            0x7316	                           jae 0x4000ab4	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000a9e	            0xebb3	                           jmp 0x4000a53	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000aa0	          0x4801c5	                            add rbp, rax	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000aa3	         0xfb64500	                   movzx eax, byte [rbp]	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000aa7	            0x3c20	                            cmp al, 0x20	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000aa9	            0x74a8	                            je 0x4000a53	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000aab	            0x3c09	                               cmp al, 9	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000aad	            0x74a4	                            je 0x4000a53	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000aaf	          0x4839eb	                            cmp rbx, rbp	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000ab2	            0x779f	                            ja 0x4000a53	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000ab4	    0x8b1500000000	            mov edx, dword [0x04000aba] 	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000aba	        0x49896d08	                mov qword [r13 + 8], rbp	      2618	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1
0x4000abe	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2618	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1
0x4000ac5	            0x85d2	                           test edx, edx	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ac7	            0x74d7	                            je 0x4000aa0	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ac9	      0x488d740500	                    lea rsi, [rbp + rax]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ace	          0x4889df	                            mov rdi, rbx	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ad1	    0xff1500000000	                 call qword [0x04000ad7]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ad7	          0x83c001	                              add eax, 1	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ada	            0x4898	                                    cdqe	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000adc	          0x48f7d8	                                 neg rax	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000adf	            0xebbf	                           jmp 0x4000aa0	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000ae1	        0x4883c701	                              add rdi, 1	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000ae5	    0x41c745001400	                   mov dword [r13], 0x14	      2694	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000aed	        0x49897d08	                mov qword [r13 + 8], rdi	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000af1	          0x4889fb	                            mov rbx, rdi	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000af4	      0xe9bffdffff	                           jmp 0x40008b8	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
skip_var_one	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,1:functions,0	18
0x4002110	           0xfb617	                   movzx edx, byte [rdi]	      1467	eval.c	FUNCTION_34	IF_1
0x4002113	          0x4889f8	                            mov rax, rdi	      1466	eval.c	FUNCTION_34
0x4002116	          0x80fa40	                            cmp dl, 0x40	      1467	eval.c	FUNCTION_34	IF_1
0x4002119	            0x7425	                            je 0x4002140	      1467	eval.c	FUNCTION_34	IF_1
0x400211b	          0x83e2fd	                     and edx, 0xfffffffd	      1469	eval.c	FUNCTION_34	CALL_1
0x400211e	            0x31ff	                            xor edi, edi	      1469	eval.c	FUNCTION_34	CALL_1
0x4002120	          0x80fa24	                            cmp dl, 0x24	      1469	eval.c	FUNCTION_34	CALL_1
0x4002123	        0x400f94c7	                                sete dil	      1469	eval.c	FUNCTION_34	CALL_1
0x4002127	          0x4801c7	                            add rdi, rax	      1469	eval.c	FUNCTION_34	CALL_1
0x400212a	      0xb903000000	                              mov ecx, 3	      1469	eval.c	FUNCTION_34	CALL_1
0x400212f	            0x31d2	                            xor edx, edx	      1469	eval.c	FUNCTION_34	CALL_1
0x4002131	            0x31f6	                            xor esi, esi	      1469	eval.c	FUNCTION_34	CALL_1
0x4002133	      0xe9f8fcffff	                   jmp sym.find_name_end	      1469	eval.c	FUNCTION_34	CALL_1
0x4002138	     0xf1f84000000	                   nop dword [rax + rax]	      1469	eval.c	FUNCTION_34	CALL_1
0x4002140	        0x807f0100	                   cmp byte [rdi + 1], 0	      1467	eval.c	FUNCTION_34	IF_1
0x4002144	            0x74e4	                            je 0x400212a	      1467	eval.c	FUNCTION_34	IF_1
0x4002146	        0x4883c002	                              add rax, 2	      1468	eval.c	FUNCTION_34	IF_1
0x400214a	              0xc3	                                     ret	      1471	eval.c	FUNCTION_34
var_redir_start	DO,0:WHILE,0:FOR,0:ELSE,2:IF,7:SWITCH,0:CALL,18:functions,0	122
0x400a790	            0x4154	                                push r12	       439	eval.c	FUNCTION_6
0x400a792	              0x55	                                push rbp	       439	eval.c	FUNCTION_6
0x400a793	            0x89f5	                            mov ebp, esi	       439	eval.c	FUNCTION_6
0x400a795	              0x53	                                push rbx	       439	eval.c	FUNCTION_6
0x400a796	        0x4883ec20	                           sub rsp, 0x20	       439	eval.c	FUNCTION_6
0x400a79a	           0xfb617	                   movzx edx, byte [rdi]	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x400a79d	    0x64488b042528	                mov rax, qword fs:[0x28]	       439	eval.c	FUNCTION_6
0x400a7a6	      0x4889442418	             mov qword [rsp + 0x18], rax	       439	eval.c	FUNCTION_6
0x400a7ab	            0x31c0	                            xor eax, eax	       439	eval.c	FUNCTION_6
0x400a7ad	            0x89d0	                            mov eax, edx	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7af	          0x83e0df	                     and eax, 0xffffffdf	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7b2	          0x83e841	                           sub eax, 0x41	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7b5	            0x3c19	                            cmp al, 0x19	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7b7	            0x7647	                           jbe 0x400a800	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7b9	          0x80fa5f	                            cmp dl, 0x5f	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7bc	            0x7442	                            je 0x400a800	      6376	eval.c	FUNCTION_101	CALL_1
0x400a7be	      0xba05000000	                              mov edx, 5	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7c3	      0xbe00000000	                              mov esi, 0	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7c8	            0x31ff	                            xor edi, edi	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7ca	      0xe800000000	                          call 0x400a7cf	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7cf	            0x31db	                            xor ebx, ebx	       448	eval.c	FUNCTION_6	IF_1
0x400a7d1	          0x4889c7	                            mov rdi, rax	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7d4	      0xe800000000	                          call 0x400a7d9	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x400a7d9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       503	eval.c	FUNCTION_6
0x400a7de	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       503	eval.c	FUNCTION_6
0x400a7e7	            0x89d8	                            mov eax, ebx	       503	eval.c	FUNCTION_6
0x400a7e9	     0xf859b010000	                           jne 0x400a98a	       503	eval.c	FUNCTION_6
0x400a7ef	        0x4883c420	                           add rsp, 0x20	       503	eval.c	FUNCTION_6
0x400a7f3	              0x5b	                                 pop rbx	       503	eval.c	FUNCTION_6
0x400a7f4	              0x5d	                                 pop rbp	       503	eval.c	FUNCTION_6
0x400a7f5	            0x415c	                                 pop r12	       503	eval.c	FUNCTION_6
0x400a7f7	              0xc3	                                     ret	       503	eval.c	FUNCTION_6
0x400a7f8	     0xf1f84000000	                   nop dword [rax + rax]	       503	eval.c	FUNCTION_6
0x400a800	      0xe800000000	                          call 0x400a805	       452	eval.c	FUNCTION_6	CALL_4
0x400a805	            0x31db	                            xor ebx, ebx	       454	eval.c	FUNCTION_6	IF_2
0x400a807	          0x4885c0	                           test rax, rax	       453	eval.c	FUNCTION_6	IF_2
0x400a80a	    0x488905000000	            mov qword [0x0400a811], rax 	       452	eval.c	FUNCTION_6	CALL_4
0x400a811	            0x74c6	                            je 0x400a7d9	       453	eval.c	FUNCTION_6	IF_2
0x400a813	      0xbf60000000	                           mov edi, 0x60	       456	eval.c	FUNCTION_6	CALL_5
0x400a818	      0xe800000000	                          call 0x400a81d	       456	eval.c	FUNCTION_6	CALL_5
0x400a81d	          0x4885c0	                           test rax, rax	       457	eval.c	FUNCTION_6	IF_3
0x400a820	    0x488905000000	            mov qword [0x0400a827], rax 	       456	eval.c	FUNCTION_6	CALL_5
0x400a827	     0xf8453010000	                            je 0x400a980	       457	eval.c	FUNCTION_6	IF_3
0x400a82d	      0xbaf4010000	                          mov edx, 0x1f4	       464	eval.c	FUNCTION_6	CALL_7
0x400a832	      0xbe01000000	                              mov esi, 1	       464	eval.c	FUNCTION_6	CALL_7
0x400a837	      0xbf00000000	                              mov edi, 0	       464	eval.c	FUNCTION_6	CALL_7
0x400a83c	      0xe800000000	                          call 0x400a841	       464	eval.c	FUNCTION_6	CALL_7
0x400a841	        0x4883ec08	                              sub rsp, 8	       467	eval.c	FUNCTION_6	CALL_8
0x400a845	    0x488b15000000	            mov rdx, qword [0x0400a84c] 	       467	eval.c	FUNCTION_6	CALL_8
0x400a84c	    0x488b3d000000	            mov rdi, qword [0x0400a853] 	       467	eval.c	FUNCTION_6	CALL_8
0x400a853	            0x6a02	                                  push 2	       467	eval.c	FUNCTION_6	CALL_8
0x400a855	            0x31c9	                            xor ecx, ecx	       467	eval.c	FUNCTION_6	CALL_8
0x400a857	          0x4531c9	                            xor r9d, r9d	       467	eval.c	FUNCTION_6	CALL_8
0x400a85a	          0x4531c0	                            xor r8d, r8d	       467	eval.c	FUNCTION_6	CALL_8
0x400a85d	            0x31f6	                            xor esi, esi	       467	eval.c	FUNCTION_6	CALL_8
0x400a85f	      0xe800000000	                          call 0x400a864	       467	eval.c	FUNCTION_6	CALL_8
0x400a864	          0x4885c0	                           test rax, rax	       469	eval.c	FUNCTION_6	IF_4
0x400a867	    0x488905000000	            mov qword [0x0400a86e], rax 	       467	eval.c	FUNCTION_6	CALL_8
0x400a86e	    0x488b1d000000	            mov rbx, qword [0x0400a875] 	       467	eval.c	FUNCTION_6	CALL_8
0x400a875	              0x5a	                                 pop rdx	       469	eval.c	FUNCTION_6	IF_4
0x400a876	              0x59	                                 pop rcx	       469	eval.c	FUNCTION_6	IF_4
0x400a877	     0xf8493000000	                            je 0x400a910	       469	eval.c	FUNCTION_6	IF_4
0x400a87d	        0x48833b00	                      cmp qword [rbx], 0	       469	eval.c	FUNCTION_6	IF_4
0x400a881	     0xf8489000000	                            je 0x400a910	       469	eval.c	FUNCTION_6	IF_4
0x400a887	          0x803800	                       cmp byte [rax], 0	       469	eval.c	FUNCTION_6	IF_4
0x400a88a	     0xf8580000000	                           jne 0x400a910	       469	eval.c	FUNCTION_6	IF_4
0x400a890	            0x85ed	                           test ebp, ebp	       488	eval.c	FUNCTION_6	IF_6
0x400a892	    0x448b25000000	           mov r12d, dword [0x0400a899] 	       484	eval.c	FUNCTION_6
0x400a899	    0xc70424020000	                      mov dword [rsp], 2	       486	eval.c	FUNCTION_6
0x400a8a0	    0xc70500000000	               mov dword [0x0400a8aa], 0	       485	eval.c	FUNCTION_6
0x400a8aa	    0x48c744240800	                  mov qword [rsp + 8], 0	       487	eval.c	FUNCTION_6
0x400a8b3	    0x41b800000000	                              mov r8d, 0	       489	eval.c	FUNCTION_6	CALL_15
0x400a8b9	            0x7506	                           jne 0x400a8c1	       488	eval.c	FUNCTION_6	IF_6
0x400a8bb	    0x41b800000000	                              mov r8d, 0	       491	eval.c	FUNCTION_6	CALL_16
0x400a8c1	          0x4889c6	                            mov rsi, rax	       491	eval.c	FUNCTION_6	CALL_16
0x400a8c4	      0xb901000000	                              mov ecx, 1	       491	eval.c	FUNCTION_6	CALL_16
0x400a8c9	          0x4889e2	                            mov rdx, rsp	       491	eval.c	FUNCTION_6	CALL_16
0x400a8cc	          0x4889df	                            mov rdi, rbx	       491	eval.c	FUNCTION_6	CALL_16
0x400a8cf	      0xe8dcb6ffff	                   call sym.set_var_lval	       491	eval.c	FUNCTION_6	CALL_16
0x400a8d4	    0x488b1d000000	            mov rbx, qword [0x0400a8db] 	       492	eval.c	FUNCTION_6	CALL_17
0x400a8db	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x400a8df	      0xe800000000	                          call 0x400a8e4	      2230	eval.c	FUNCTION_45	CALL_1
0x400a8e4	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400a8e8	      0xe800000000	                          call 0x400a8ed	      2231	eval.c	FUNCTION_45	CALL_2
0x400a8ed	    0x8b0500000000	            mov eax, dword [0x0400a8f3] 	       493	eval.c	FUNCTION_6
0x400a8f3	          0x4109c4	                            or r12d, eax	       494	eval.c	FUNCTION_6
0x400a8f6	            0x85c0	                           test eax, eax	       495	eval.c	FUNCTION_6	IF_7
0x400a8f8	    0x448925000000	           mov dword [0x0400a8ff], r12d 	       494	eval.c	FUNCTION_6
0x400a8ff	            0x754b	                           jne 0x400a94c	       495	eval.c	FUNCTION_6	IF_7
0x400a901	      0xbb01000000	                              mov ebx, 1	       502	eval.c	FUNCTION_6
0x400a906	      0xe9cefeffff	                           jmp 0x400a7d9	       502	eval.c	FUNCTION_6
0x400a90b	       0xf1f440000	                   nop dword [rax + rax]	       502	eval.c	FUNCTION_6
0x400a910	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x400a914	      0xe800000000	                          call 0x400a919	      2230	eval.c	FUNCTION_45	CALL_1
0x400a919	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400a91d	      0xe800000000	                          call 0x400a922	      2231	eval.c	FUNCTION_45	CALL_2
0x400a922	    0x488b05000000	            mov rax, qword [0x0400a929] 	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x400a929	      0xba05000000	                              mov edx, 5	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a92e	          0x4885c0	                           test rax, rax	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x400a931	            0x7405	                            je 0x400a938	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x400a933	          0x803800	                       cmp byte [rax], 0	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x400a936	            0x7530	                           jne 0x400a968	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x400a938	            0x31ff	                            xor edi, edi	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x400a93a	      0xbe00000000	                              mov esi, 0	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x400a93f	      0xe800000000	                          call 0x400a944	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x400a944	          0x4889c7	                            mov rdi, rax	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x400a947	      0xe800000000	                          call 0x400a94c	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x400a94c	    0x48c705000000	               mov qword [0x0400a957], 0	       477	eval.c	FUNCTION_6	IF_4
0x400a957	            0x31db	                            xor ebx, ebx	       479	eval.c	FUNCTION_6	IF_4
0x400a959	      0xe800000000	                          call 0x400a95e	       478	eval.c	FUNCTION_6	IF_4	CALL_14
0x400a95e	      0xe976feffff	                           jmp 0x400a7d9	       479	eval.c	FUNCTION_6	IF_4
0x400a963	       0xf1f440000	                   nop dword [rax + rax]	       479	eval.c	FUNCTION_6	IF_4
0x400a968	            0x31ff	                            xor edi, edi	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a96a	      0xbe00000000	                              mov esi, 0	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a96f	      0xe800000000	                          call 0x400a974	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a974	          0x4889c7	                            mov rdi, rax	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a977	      0xe800000000	                          call 0x400a97c	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a97c	            0xebce	                           jmp 0x400a94c	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a97e	            0x6690	                                     nop	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x400a980	      0xe800000000	                          call 0x400a985	       459	eval.c	FUNCTION_6	IF_3	CALL_6
0x400a985	      0xe94ffeffff	                           jmp 0x400a7d9	       460	eval.c	FUNCTION_6	IF_3
0x400a98a	      0xe800000000	                          call 0x400a98f	       503	eval.c	FUNCTION_6
tv_op	DO,0:WHILE,0:FOR,0:ELSE,6:IF,12:SWITCH,1:CALL,13:functions,0	165
0x40040e0	            0x4155	                                push r13	      2386	eval.c	FUNCTION_47
0x40040e2	            0x4154	                                push r12	      2386	eval.c	FUNCTION_47
0x40040e4	              0x55	                                push rbp	      2386	eval.c	FUNCTION_47
0x40040e5	              0x53	                                push rbx	      2386	eval.c	FUNCTION_47
0x40040e6	          0x4889d3	                            mov rbx, rdx	      2386	eval.c	FUNCTION_47
0x40040e9	        0x4883ec78	                           sub rsp, 0x78	      2386	eval.c	FUNCTION_47
0x40040ed	    0x64488b042528	                mov rax, qword fs:[0x28]	      2386	eval.c	FUNCTION_47
0x40040f6	      0x4889442468	             mov qword [rsp + 0x68], rax	      2386	eval.c	FUNCTION_47
0x40040fb	            0x31c0	                            xor eax, eax	      2386	eval.c	FUNCTION_47
0x40040fd	            0x8b06	                    mov eax, dword [rsi]	      2392	eval.c	FUNCTION_47	IF_1
0x40040ff	          0x8d50fa	                      lea edx, [rax - 6]	      2393	eval.c	FUNCTION_47	IF_1
0x4004102	          0x83e2fd	                     and edx, 0xfffffffd	      2393	eval.c	FUNCTION_47	IF_1
0x4004105	     0xf8495000000	                            je 0x40041a0	      2393	eval.c	FUNCTION_47	IF_1
0x400410b	          0x83f803	                              cmp eax, 3	      2393	eval.c	FUNCTION_47	IF_1
0x400410e	     0xf848c000000	                            je 0x40041a0	      2393	eval.c	FUNCTION_47	IF_1
0x4004114	            0x8b17	                    mov edx, dword [rdi]	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004116	          0x4989fc	                            mov r12, rdi	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004119	          0x4889f5	                            mov rbp, rsi	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400411c	          0x83fa05	                              cmp edx, 5	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400411f	            0x746f	                            je 0x4004190	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004121	     0xf86b9000000	                           jbe 0x40041e0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004127	          0x83fa07	                              cmp edx, 7	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400412a	            0x7574	                           jne 0x40041a0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400412c	           0xfb613	                   movzx edx, byte [rbx]	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x400412f	          0x80fa2e	                            cmp dl, 0x2e	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004132	            0x746c	                            je 0x40041a0	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004134	          0x83f807	                              cmp eax, 7	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004137	     0xf8453010000	                            je 0x4004290	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x400413d	          0x83f801	                              cmp eax, 1	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004140	     0xf844a010000	                            je 0x4004290	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004146	          0x83f802	                              cmp eax, 2	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004149	            0x7555	                           jne 0x40041a0	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x400414b	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4004150	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x4004153	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x400415b	      0xe800000000	                          call 0x4004160	      6964	eval.c	FUNCTION_124	CALL_1
0x4004160	        0x660fefc0	                         pxor xmm0, xmm0	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4004164	           0xfb613	                   movzx edx, byte [rbx]	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4004167	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x400416c	          0x80fa2b	                            cmp dl, 0x2b	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x400416f	     0xf8493010000	                            je 0x4004308	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4004175	    0xf2410f104c24	            movsd xmm1, qword [r12 + 8] 	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x400417c	      0xbb01000000	                              mov ebx, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004181	        0xf20f5cc8	                        subsd xmm1, xmm0	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004185	    0xf2410f114c24	             movsd qword [r12 + 8], xmm1	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x400418c	            0xeb30	                           jmp 0x40041be	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x400418e	            0x6690	                                     nop	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004190	          0x803b2b	                    cmp byte [rbx], 0x2b	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004193	            0x750b	                           jne 0x40041a0	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004195	          0x83f805	                              cmp eax, 5	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004198	     0xf84c2000000	                            je 0x4004260	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x400419e	            0x6690	                                     nop	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x40041a0	      0xba05000000	                              mov edx, 5	      2484	eval.c	FUNCTION_47	CALL_13
0x40041a5	      0xbe00000000	                              mov esi, 0	      2484	eval.c	FUNCTION_47	CALL_13
0x40041aa	            0x31ff	                            xor edi, edi	      2484	eval.c	FUNCTION_47	CALL_13
0x40041ac	      0xe800000000	                          call 0x40041b1	      2484	eval.c	FUNCTION_47	CALL_13
0x40041b1	          0x4889de	                            mov rsi, rbx	      2484	eval.c	FUNCTION_47	CALL_13
0x40041b4	          0x4889c7	                            mov rdi, rax	      2484	eval.c	FUNCTION_47	CALL_13
0x40041b7	            0x31db	                            xor ebx, ebx	      2485	eval.c	FUNCTION_47
0x40041b9	      0xe800000000	                          call 0x40041be	      2484	eval.c	FUNCTION_47	CALL_13
0x40041be	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2486	eval.c	FUNCTION_47
0x40041c3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2486	eval.c	FUNCTION_47
0x40041cc	            0x89d8	                            mov eax, ebx	      2486	eval.c	FUNCTION_47
0x40041ce	     0xf85aa010000	                           jne 0x400437e	      2486	eval.c	FUNCTION_47
0x40041d4	        0x4883c478	                           add rsp, 0x78	      2486	eval.c	FUNCTION_47
0x40041d8	              0x5b	                                 pop rbx	      2486	eval.c	FUNCTION_47
0x40041d9	              0x5d	                                 pop rbp	      2486	eval.c	FUNCTION_47
0x40041da	            0x415c	                                 pop r12	      2486	eval.c	FUNCTION_47
0x40041dc	            0x415d	                                 pop r13	      2486	eval.c	FUNCTION_47
0x40041de	              0xc3	                                     ret	      2486	eval.c	FUNCTION_47
0x40041df	              0x90	                                     nop	      2486	eval.c	FUNCTION_47
0x40041e0	          0x83ea01	                              sub edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40041e3	          0x83fa01	                              cmp edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40041e6	            0x77b8	                            ja 0x40041a0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40041e8	          0x83f805	                              cmp eax, 5	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x40041eb	            0x74b3	                            je 0x40041a0	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x40041ed	           0xfb60b	                   movzx ecx, byte [rbx]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x40041f0	          0x8d51d5	                   lea edx, [rcx - 0x2b]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x40041f3	    0x81e2fd000000	                           and edx, 0xfd	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x40041f9	     0xf84a9000000	                            je 0x40042a8	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x40041ff	          0x83f807	                              cmp eax, 7	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4004202	            0x749c	                            je 0x40041a0	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4004204	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4004209	    0x41bd00000000	                             mov r13d, 0	      7087	eval.c	FUNCTION_128
0x400420f	      0xe800000000	                          call 0x4004214	      7085	eval.c	FUNCTION_128	CALL_1
0x4004214	      0x488d742420	                   lea rsi, [rsp + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x4004219	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400421c	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x400421f	        0x490f44c5	                          cmove rax, r13	      7087	eval.c	FUNCTION_128
0x4004223	          0x4889c3	                            mov rbx, rax	      7087	eval.c	FUNCTION_128
0x4004226	      0xe800000000	                          call 0x400422b	      7085	eval.c	FUNCTION_128	CALL_1
0x400422b	          0x4c89ee	                            mov rsi, r13	      7087	eval.c	FUNCTION_128
0x400422e	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4004231	          0x4889df	                            mov rdi, rbx	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4004234	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x4004238	      0xe800000000	                          call 0x400423d	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x400423d	          0x4c89e7	                            mov rdi, r12	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4004240	          0x4889c3	                            mov rbx, rax	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4004243	      0xe800000000	                          call 0x4004248	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4004248	      0x49895c2408	                mov qword [r12 + 8], rbx	      2457	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x400424d	    0x41c704240200	                      mov dword [r12], 2	      2456	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x4004255	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400425a	      0xe95fffffff	                           jmp 0x40041be	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400425f	              0x90	                                     nop	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004260	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4004264	          0x4885ff	                           test rdi, rdi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4004267	     0xf8407010000	                            je 0x4004374	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x400426d	        0x488b7608	                mov rsi, qword [rsi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4004271	      0xbb01000000	                              mov ebx, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004276	          0x4885f6	                           test rsi, rsi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4004279	     0xf843fffffff	                            je 0x40041be	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x400427f	            0x31d2	                            xor edx, edx	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x4004281	      0xe800000000	                          call 0x4004286	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x4004286	      0xe933ffffff	                           jmp 0x40041be	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x400428b	       0xf1f440000	                   nop dword [rax + rax]	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x4004290	          0x83f807	                              cmp eax, 7	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4004293	     0xf85b2feffff	                           jne 0x400414b	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x4004299	      0xf20f104508	            movsd xmm0, qword [rbp + 8] 	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x400429e	      0xe9c9feffff	                           jmp 0x400416c	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40042a3	       0xf1f440000	                   nop dword [rax + rax]	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40042a8	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x40042ad	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x40042b5	      0xe800000000	                          call 0x40042ba	      6964	eval.c	FUNCTION_124	CALL_1
0x40042ba	        0x837d0007	                      cmp dword [rbp], 7	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x40042be	          0x4989c5	                            mov r13, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x40042c1	            0x745d	                            je 0x4004320	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x40042c3	          0x803b2b	                    cmp byte [rbx], 0x2b	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x40042c6	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x40042cb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x40042d3	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x40042d6	     0xf8484000000	                            je 0x4004360	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x40042dc	      0xe800000000	                          call 0x40042e1	      6964	eval.c	FUNCTION_124	CALL_1
0x40042e1	          0x4929c5	                            sub r13, rax	      2441	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_5
0x40042e4	          0x4c89e7	                            mov rdi, r12	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x40042e7	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40042ec	      0xe800000000	                          call 0x40042f1	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x40042f1	    0x41c704240100	                      mov dword [r12], 1	      2443	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x40042f9	      0x4d896c2408	                mov qword [r12 + 8], r13	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x40042fe	      0xe9bbfeffff	                           jmp 0x40041be	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4004303	       0xf1f440000	                   nop dword [rax + rax]	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4004308	    0xf2410f584424	             addsd xmm0, qword [r12 + 8]	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x400430f	      0xbb01000000	                              mov ebx, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004314	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x400431b	      0xe99efeffff	                           jmp 0x40041be	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4004320	          0x803b2b	                    cmp byte [rbx], 0x2b	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4004323	        0x660fefc0	                         pxor xmm0, xmm0	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4004327	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400432c	            0x743f	                            je 0x400436d	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x400432e	      0xf20f5c4508	             subsd xmm0, qword [rbp + 8]	      2430	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	ELSE_1
0x4004333	          0x4c89e7	                            mov rdi, r12	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4004336	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x400433c	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004341	      0xe800000000	                          call 0x4004346	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4004346	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400434c	    0x41c704240700	                      mov dword [r12], 7	      2432	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4004354	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400435b	      0xe95efeffff	                           jmp 0x40041be	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4004360	      0xe800000000	                          call 0x4004365	      6964	eval.c	FUNCTION_124	CALL_1
0x4004365	          0x4901c5	                            add r13, rax	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4004368	      0xe977ffffff	                           jmp 0x40042e4	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x400436d	      0xf20f584508	             addsd xmm0, qword [rbp + 8]	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4004372	            0xebbf	                           jmp 0x4004333	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4004374	      0xbb01000000	                              mov ebx, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004379	      0xe940feffff	                           jmp 0x40041be	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400437e	      0xe800000000	                          call 0x4004383	      2486	eval.c	FUNCTION_47
find_win_by_nr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,3:SWITCH,0:CALL,1:functions,1	39
0x4005400	              0x53	                                push rbx	      8217	eval.c	FUNCTION_155
0x4005401	          0x4889f3	                            mov rbx, rsi	      8217	eval.c	FUNCTION_155
0x4005404	            0x31f6	                            xor esi, esi	      8221	eval.c	FUNCTION_155	CALL_1
0x4005406	      0xe800000000	                          call 0x400540b	      8221	eval.c	FUNCTION_155	CALL_1
0x400540b	            0x85c0	                           test eax, eax	      8223	eval.c	FUNCTION_155	IF_1
0x400540d	            0x785a	                            js 0x4005469	      8223	eval.c	FUNCTION_155	IF_1
0x400540f	            0x743f	                            je 0x4005450	      8225	eval.c	FUNCTION_155	IF_2
0x4005411	          0x4885db	                           test rbx, rbx	      8228	eval.c	FUNCTION_155
0x4005414	            0x89c2	                            mov edx, eax	      8228	eval.c	FUNCTION_155
0x4005416	            0x7448	                            je 0x4005460	      8228	eval.c	FUNCTION_155
0x4005418	    0x483b1d000000	            cmp rbx, qword [0x0400541f] 	      8228	eval.c	FUNCTION_155
0x400541f	            0x743f	                            je 0x4005460	      8228	eval.c	FUNCTION_155
0x4005421	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      8228	eval.c	FUNCTION_155
0x4005425	          0x4885c0	                           test rax, rax	      8228	eval.c	FUNCTION_155
0x4005428	            0x7513	                           jne 0x400543d	      8228	eval.c	FUNCTION_155
0x400542a	            0xeb3d	                           jmp 0x4005469	      8228	eval.c	FUNCTION_155
0x400542c	         0xf1f4000	                         nop dword [rax]	      8228	eval.c	FUNCTION_155
0x4005430	            0x3910	                    cmp dword [rax], edx	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4005432	            0x7418	                            je 0x400544c	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4005434	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8228	eval.c	FUNCTION_155
0x4005438	          0x4885c0	                           test rax, rax	      8228	eval.c	FUNCTION_155
0x400543b	            0x740f	                            je 0x400544c	      8228	eval.c	FUNCTION_155
0x400543d	    0x81fae7030000	                          cmp edx, 0x3e7	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4005443	            0x7feb	                            jg 0x4005430	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4005445	          0x83ea01	                              sub edx, 1	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4005448	            0x85d2	                           test edx, edx	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x400544a	            0x7fe8	                            jg 0x4005434	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x400544c	              0x5b	                                 pop rbx	      8241	eval.c	FUNCTION_155
0x400544d	              0xc3	                                     ret	      8241	eval.c	FUNCTION_155
0x400544e	            0x6690	                                     nop	      8241	eval.c	FUNCTION_155
0x4005450	    0x488b05000000	            mov rax, qword [0x04005457] 	      8226	eval.c	FUNCTION_155	IF_2
0x4005457	              0x5b	                                 pop rbx	      8241	eval.c	FUNCTION_155
0x4005458	              0xc3	                                     ret	      8241	eval.c	FUNCTION_155
0x4005459	     0xf1f80000000	                         nop dword [rax]	      8241	eval.c	FUNCTION_155
0x4005460	    0x488b05000000	            mov rax, qword [0x04005467] 	      8228	eval.c	FUNCTION_155
0x4005467	            0xebbc	                           jmp 0x4005425	      8228	eval.c	FUNCTION_155
0x4005469	            0x31c0	                            xor eax, eax	      8224	eval.c	FUNCTION_155	IF_1
0x400546b	              0x5b	                                 pop rbx	      8241	eval.c	FUNCTION_155
0x400546c	              0xc3	                                     ret	      8241	eval.c	FUNCTION_155
do_unlet	DO,0:WHILE,0:FOR,0:ELSE,2:IF,9:SWITCH,0:CALL,15:functions,0	129
0x40057f0	            0x4156	                                push r14	      2870	eval.c	FUNCTION_56
0x40057f2	            0x4155	                                push r13	      2870	eval.c	FUNCTION_56
0x40057f4	            0x4154	                                push r12	      2870	eval.c	FUNCTION_56
0x40057f6	              0x55	                                push rbp	      2870	eval.c	FUNCTION_56
0x40057f7	            0x89f5	                            mov ebp, esi	      2870	eval.c	FUNCTION_56
0x40057f9	              0x53	                                push rbx	      2870	eval.c	FUNCTION_56
0x40057fa	          0x4889fb	                            mov rbx, rdi	      2870	eval.c	FUNCTION_56
0x40057fd	        0x4883ec20	                           sub rsp, 0x20	      2870	eval.c	FUNCTION_56
0x4005801	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2877	eval.c	FUNCTION_56	CALL_1
0x4005806	    0x64488b042528	                mov rax, qword fs:[0x28]	      2870	eval.c	FUNCTION_56
0x400580f	      0x4889442418	             mov qword [rsp + 0x18], rax	      2870	eval.c	FUNCTION_56
0x4005814	            0x31c0	                            xor eax, eax	      2870	eval.c	FUNCTION_56
0x4005816	      0xe800000000	                          call 0x400581b	      2877	eval.c	FUNCTION_56	CALL_1
0x400581b	          0x4885c0	                           test rax, rax	      2878	eval.c	FUNCTION_56	IF_1
0x400581e	      0x4889442408	                mov qword [rsp + 8], rax	      2877	eval.c	FUNCTION_56	CALL_1
0x4005823	            0x740a	                            je 0x400582f	      2878	eval.c	FUNCTION_56	IF_1
0x4005825	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2878	eval.c	FUNCTION_56	IF_1
0x400582a	          0x803a00	                       cmp byte [rdx], 0	      2878	eval.c	FUNCTION_56	IF_1
0x400582d	            0x7551	                           jne 0x4005880	      2878	eval.c	FUNCTION_56	IF_1
0x400582f	            0x85ed	                           test ebp, ebp	      2913	eval.c	FUNCTION_56	IF_9
0x4005831	      0xb801000000	                              mov eax, 1	      2914	eval.c	FUNCTION_56	IF_9
0x4005836	            0x7428	                            je 0x4005860	      2913	eval.c	FUNCTION_56	IF_9
0x4005838	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2917	eval.c	FUNCTION_56
0x400583d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2917	eval.c	FUNCTION_56
0x4005846	     0xf85a8010000	                           jne 0x40059f4	      2917	eval.c	FUNCTION_56
0x400584c	        0x4883c420	                           add rsp, 0x20	      2917	eval.c	FUNCTION_56
0x4005850	              0x5b	                                 pop rbx	      2917	eval.c	FUNCTION_56
0x4005851	              0x5d	                                 pop rbp	      2917	eval.c	FUNCTION_56
0x4005852	            0x415c	                                 pop r12	      2917	eval.c	FUNCTION_56
0x4005854	            0x415d	                                 pop r13	      2917	eval.c	FUNCTION_56
0x4005856	            0x415e	                                 pop r14	      2917	eval.c	FUNCTION_56
0x4005858	              0xc3	                                     ret	      2917	eval.c	FUNCTION_56
0x4005859	     0xf1f80000000	                         nop dword [rax]	      2917	eval.c	FUNCTION_56
0x4005860	      0xbe00000000	                              mov esi, 0	      2915	eval.c	FUNCTION_56	CALL_15
0x4005865	            0x31ff	                            xor edi, edi	      2915	eval.c	FUNCTION_56	CALL_15
0x4005867	      0xba05000000	                              mov edx, 5	      2915	eval.c	FUNCTION_56	CALL_15
0x400586c	      0xe800000000	                          call 0x4005871	      2915	eval.c	FUNCTION_56	CALL_15
0x4005871	          0x4889de	                            mov rsi, rbx	      2915	eval.c	FUNCTION_56	CALL_15
0x4005874	          0x4889c7	                            mov rdi, rax	      2915	eval.c	FUNCTION_56	CALL_15
0x4005877	      0xe800000000	                          call 0x400587c	      2915	eval.c	FUNCTION_56	CALL_15
0x400587c	            0x31c0	                            xor eax, eax	      2916	eval.c	FUNCTION_56
0x400587e	            0xebb8	                           jmp 0x4005838	      2916	eval.c	FUNCTION_56
0x4005880	          0x4889c7	                            mov rdi, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x4005883	      0xe800000000	                          call 0x4005888	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x4005888	          0x4885c0	                           test rax, rax	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x400588b	          0x4989c5	                            mov r13, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x400588e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4005893	     0xf84a7000000	                            je 0x4005940	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x4005899	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x400589e	      0xe800000000	                          call 0x40058a3	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x40058a3	        0x4c8b6008	                mov r12, qword [rax + 8]	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40058a7	          0x4989c6	                            mov r14, rax	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x40058aa	          0x4d85e4	                           test r12, r12	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40058ad	     0xf84cd000000	                            je 0x4005980	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40058b3	    0x4981fc000000	                              cmp r12, 0	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40058ba	     0xf84c0000000	                            je 0x4005980	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40058c0	    0x4981fc000000	                              cmp r12, 0	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40058c7	     0xf8462ffffff	                            je 0x400582f	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40058cd	          0x4d85e4	                           test r12, r12	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40058d0	     0xf8459ffffff	                            je 0x400582f	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40058d6	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40058dc	        0x40f6c704	                             test dil, 4	      7655	eval.c	FUNCTION_145	IF_1
0x40058e0	     0xf85d2000000	                           jne 0x40059b8	      7655	eval.c	FUNCTION_145	IF_1
0x40058e6	            0x31d2	                            xor edx, edx	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40058e8	          0x4889de	                            mov rsi, rbx	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40058eb	      0xe800000000	                          call 0x40058f0	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40058f0	            0x85c0	                           test eax, eax	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40058f2	            0x7588	                           jne 0x400587c	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40058f4	      0x410fbe7d00	                   movsx edi, byte [r13]	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40058f9	            0x31d2	                            xor edx, edx	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40058fb	          0x4889de	                            mov rsi, rbx	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40058fe	      0xe800000000	                          call 0x4005903	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x4005903	            0x85c0	                           test eax, eax	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x4005905	     0xf8571ffffff	                           jne 0x400587c	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x400590b	        0x498b5e08	                mov rbx, qword [r14 + 8]	      7447	eval.c	FUNCTION_140	CALL_1
0x400590f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7449	eval.c	FUNCTION_140	CALL_2
0x4005914	          0x4c89f6	                            mov rsi, r14	      7449	eval.c	FUNCTION_140	CALL_2
0x4005917	        0x4883eb11	                           sub rbx, 0x11	      7450	eval.c	FUNCTION_140	CALL_3
0x400591b	      0xe800000000	                          call 0x4005920	      7449	eval.c	FUNCTION_140	CALL_2
0x4005920	          0x4889df	                            mov rdi, rbx	      7450	eval.c	FUNCTION_140	CALL_3
0x4005923	      0xe800000000	                          call 0x4005928	      7450	eval.c	FUNCTION_140	CALL_3
0x4005928	          0x4889df	                            mov rdi, rbx	      7451	eval.c	FUNCTION_140	CALL_4
0x400592b	      0xe800000000	                          call 0x4005930	      7451	eval.c	FUNCTION_140	CALL_4
0x4005930	      0xb801000000	                              mov eax, 1	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x4005935	      0xe9fefeffff	                           jmp 0x4005838	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x400593a	    0x660f1f440000	                    nop word [rax + rax]	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x4005940	    0x4881ff000000	                              cmp rdi, 0	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4005947	     0xf848b000000	                            je 0x40059d8	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400594d	    0x4881ff000000	                              cmp rdi, 0	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x4005954	            0x7452	                            je 0x40059a8	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x4005956	           0xfb633	                   movzx esi, byte [rbx]	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4005959	            0x31c9	                            xor ecx, ecx	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x400595b	      0xba00000000	                              mov edx, 0	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4005960	      0xe800000000	                          call 0x4005965	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4005965	          0x4885c0	                           test rax, rax	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x4005968	            0x7479	                            je 0x40059e3	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x400596a	        0x4c8b6808	                mov r13, qword [rax + 8]	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x400596e	          0x4d85ed	                           test r13, r13	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005971	            0x7470	                            je 0x40059e3	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005973	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005978	      0xe91cffffff	                           jmp 0x4005899	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x400597d	           0xf1f00	                         nop dword [rax]	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4005980	      0x488d742408	                      lea rsi, [rsp + 8]	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005985	          0x4889df	                            mov rdi, rbx	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005988	      0xe800000000	                          call 0x400598d	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x400598d	          0x4885c0	                           test rax, rax	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005990	          0x4989c6	                            mov r14, rax	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x4005993	     0xf8496feffff	                            je 0x400582f	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x4005999	        0x4c8b6008	                mov r12, qword [rax + 8]	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x400599d	      0xe91effffff	                           jmp 0x40058c0	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40059a2	    0x660f1f440000	                    nop word [rax + rax]	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40059a8	    0x41bd00000000	                             mov r13d, 0	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059ae	      0xe9e6feffff	                           jmp 0x4005899	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059b3	       0xf1f440000	                   nop dword [rax + rax]	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059b8	            0x31f6	                            xor esi, esi	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059ba	          0x4889df	                            mov rdi, rbx	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059bd	      0xe89eadffff	         call sym.var_check_fixed.part.7	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40059c2	            0x85c0	                           test eax, eax	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40059c4	     0xf85b2feffff	                           jne 0x400587c	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40059ca	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40059d0	      0xe911ffffff	                           jmp 0x40058e6	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40059d5	           0xf1f00	                         nop dword [rax]	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40059d8	    0x41bd00000000	                             mov r13d, 0	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40059de	      0xe9b6feffff	                           jmp 0x4005899	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40059e3	      0xbf00000000	                              mov edi, 0	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x40059e8	      0xe800000000	                          call 0x40059ed	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x40059ed	            0x31c0	                            xor eax, eax	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x40059ef	      0xe944feffff	                           jmp 0x4005838	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x40059f4	      0xe800000000	                          call 0x40059f9	      2917	eval.c	FUNCTION_56
set_ref_in_ht	DO,0:WHILE,0:FOR,2:ELSE,0:IF,3:SWITCH,0:CALL,4:functions,0	73
0x4001430	            0x4156	                                push r14	      5267	eval.c	FUNCTION_83
0x4001432	            0x4155	                                push r13	      5267	eval.c	FUNCTION_83
0x4001434	          0x4531f6	                          xor r14d, r14d	      5269	eval.c	FUNCTION_83
0x4001437	            0x4154	                                push r12	      5267	eval.c	FUNCTION_83
0x4001439	              0x55	                                push rbp	      5267	eval.c	FUNCTION_83
0x400143a	          0x4189f5	                           mov r13d, esi	      5267	eval.c	FUNCTION_83
0x400143d	              0x53	                                push rbx	      5267	eval.c	FUNCTION_83
0x400143e	          0x4989d4	                            mov r12, rdx	      5267	eval.c	FUNCTION_83
0x4001441	          0x4889fb	                            mov rbx, rdi	      5267	eval.c	FUNCTION_83
0x4001444	        0x4883ec10	                           sub rsp, 0x10	      5267	eval.c	FUNCTION_83
0x4001448	    0x64488b042528	                mov rax, qword fs:[0x28]	      5267	eval.c	FUNCTION_83
0x4001451	      0x4889442408	                mov qword [rsp + 8], rax	      5267	eval.c	FUNCTION_83
0x4001456	            0x31c0	                            xor eax, eax	      5267	eval.c	FUNCTION_83
0x4001458	          0x4585f6	                         test r14d, r14d	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x400145b	    0x48c704240000	                      mov qword [rsp], 0	      5272	eval.c	FUNCTION_83
0x4001463	            0x7569	                           jne 0x40014ce	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001465	           0xf1f00	                         nop dword [rax]	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001468	        0x488b4308	                mov rax, qword [rbx + 8]	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x400146c	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001470	            0x85c0	                           test eax, eax	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001472	            0x89c5	                            mov ebp, eax	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001474	            0x7e3a	                           jle 0x40014b0	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001480	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001484	    0x4881ff000000	                              cmp rdi, 0	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400148b	     0xf848f000000	                            je 0x4001520	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001491	          0x4885ff	                           test rdi, rdi	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001494	     0xf8486000000	                            je 0x4001520	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400149a	          0x83ed01	                              sub ebp, 1	      5287	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2
0x400149d	          0x4585f6	                         test r14d, r14d	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40014a0	            0x745e	                            je 0x4001500	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40014a2	    0x41be01000000	                             mov r14d, 1	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x40014a8	        0x4883c310	                           add rbx, 0x10	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40014ac	            0x85ed	                           test ebp, ebp	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40014ae	            0x75d0	                           jne 0x4001480	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x40014b0	        0x488b3c24	                    mov rdi, qword [rsp]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014b4	          0x4885ff	                           test rdi, rdi	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014b7	            0x7424	                            je 0x40014dd	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014b9	        0x488b4708	                mov rax, qword [rdi + 8]	      5299	eval.c	FUNCTION_83	FOR_1
0x40014bd	          0x488b1f	                    mov rbx, qword [rdi]	      5297	eval.c	FUNCTION_83	FOR_1
0x40014c0	        0x48890424	                    mov qword [rsp], rax	      5299	eval.c	FUNCTION_83	FOR_1
0x40014c4	      0xe800000000	                          call 0x40014c9	      5300	eval.c	FUNCTION_83	FOR_1	CALL_4
0x40014c9	          0x4585f6	                         test r14d, r14d	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x40014cc	            0x749a	                            je 0x4001468	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x40014ce	        0x488b3c24	                    mov rdi, qword [rsp]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014d2	    0x41be01000000	                             mov r14d, 1	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014d8	          0x4885ff	                           test rdi, rdi	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014db	            0x75dc	                           jne 0x40014b9	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x40014dd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5304	eval.c	FUNCTION_83
0x40014e2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5304	eval.c	FUNCTION_83
0x40014eb	          0x4489f0	                           mov eax, r14d	      5304	eval.c	FUNCTION_83
0x40014ee	            0x7539	                           jne 0x4001529	      5304	eval.c	FUNCTION_83
0x40014f0	        0x4883c410	                           add rsp, 0x10	      5304	eval.c	FUNCTION_83
0x40014f4	              0x5b	                                 pop rbx	      5304	eval.c	FUNCTION_83
0x40014f5	              0x5d	                                 pop rbp	      5304	eval.c	FUNCTION_83
0x40014f6	            0x415c	                                 pop r12	      5304	eval.c	FUNCTION_83
0x40014f8	            0x415d	                                 pop r13	      5304	eval.c	FUNCTION_83
0x40014fa	            0x415e	                                 pop r14	      5304	eval.c	FUNCTION_83
0x40014fc	              0xc3	                                     ret	      5304	eval.c	FUNCTION_83
0x40014fd	           0xf1f00	                         nop dword [rax]	      5304	eval.c	FUNCTION_83
0x4001500	        0x4883ef11	                           sub rdi, 0x11	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001504	          0x4c89e1	                            mov rcx, r12	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001507	          0x4889e2	                            mov rdx, rsp	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400150a	          0x4489ee	                           mov esi, r13d	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400150d	          0x4531f6	                          xor r14d, r14d	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001510	      0xe800000000	                          call 0x4001515	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001515	            0x85c0	                           test eax, eax	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001517	        0x410f95c6	                              setne r14b	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400151b	            0xeb8b	                           jmp 0x40014a8	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x400151d	           0xf1f00	                         nop dword [rax]	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001520	        0x4883c310	                           add rbx, 0x10	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001524	      0xe957ffffff	                           jmp 0x4001480	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001529	      0xe800000000	                          call 0x400152e	      5304	eval.c	FUNCTION_83
var2fpos	DO,0:WHILE,0:FOR,0:ELSE,3:IF,18:SWITCH,0:CALL,13:functions,0	173
0x40044f0	              0x55	                                push rbp	      5905	eval.c	FUNCTION_93
0x40044f1	              0x53	                                push rbx	      5905	eval.c	FUNCTION_93
0x40044f2	        0x4883ec18	                           sub rsp, 0x18	      5905	eval.c	FUNCTION_93
0x40044f6	    0x64488b042528	                mov rax, qword fs:[0x28]	      5905	eval.c	FUNCTION_93
0x40044ff	      0x4889442408	                mov qword [rsp + 8], rax	      5905	eval.c	FUNCTION_93
0x4004504	            0x31c0	                            xor eax, eax	      5905	eval.c	FUNCTION_93
0x4004506	          0x833f05	                      cmp dword [rdi], 5	      5911	eval.c	FUNCTION_93	IF_1
0x4004509	     0xf8481000000	                            je 0x4004590	      5911	eval.c	FUNCTION_93	IF_1
0x400450f	            0x89f3	                            mov ebx, esi	      5911	eval.c	FUNCTION_93	IF_1
0x4004511	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4004516	          0x4889d5	                            mov rbp, rdx	      7098	eval.c	FUNCTION_129	CALL_1
0x4004519	      0xe800000000	                          call 0x400451e	      7098	eval.c	FUNCTION_129	CALL_1
0x400451e	          0x4885c0	                           test rax, rax	      5956	eval.c	FUNCTION_93	IF_8
0x4004521	     0xf84a9000000	                            je 0x40045d0	      5956	eval.c	FUNCTION_93	IF_8
0x4004527	           0xfb630	                   movzx esi, byte [rax]	      5958	eval.c	FUNCTION_93	IF_9
0x400452a	        0x4080fe2e	                           cmp sil, 0x2e	      5958	eval.c	FUNCTION_93	IF_9
0x400452e	     0xf84d5000000	                            je 0x4004609	      5958	eval.c	FUNCTION_93	IF_9
0x4004534	        0x4080fe76	                           cmp sil, 0x76	      5960	eval.c	FUNCTION_93	IF_10
0x4004538	     0xf84b2000000	                            je 0x40045f0	      5960	eval.c	FUNCTION_93	IF_10
0x400453e	        0x4080fe27	                           cmp sil, 0x27	      5966	eval.c	FUNCTION_93	IF_12
0x4004542	     0xf8418020000	                            je 0x4004760	      5966	eval.c	FUNCTION_93	IF_12
0x4004548	    0xc70500000000	               mov dword [0x04004552], 0	      5975	eval.c	FUNCTION_93
0x4004552	           0xfb610	                   movzx edx, byte [rax]	      5978	eval.c	FUNCTION_93	IF_14
0x4004555	          0x80fa77	                            cmp dl, 0x77	      5978	eval.c	FUNCTION_93	IF_14
0x4004558	     0xf8472010000	                            je 0x40046d0	      5978	eval.c	FUNCTION_93	IF_14
0x400455e	          0x80fa24	                            cmp dl, 0x24	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4004561	            0x756d	                           jne 0x40045d0	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4004563	            0x85db	                           test ebx, ebx	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4004565	     0xf84c5010000	                            je 0x4004730	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x400456b	    0x488b05000000	            mov rax, qword [0x04004572] 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4004572	          0x488b00	                    mov rax, qword [rax]	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4004575	    0xc70500000000	               mov dword [0x0400457f], 0	      6002	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x400457f	    0x488905000000	            mov qword [0x04004586], rax 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4004586	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400458b	            0xeb45	                           jmp 0x40045d2	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400458d	           0xf1f00	                         nop dword [rax]	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4004590	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5918	eval.c	FUNCTION_93	IF_1
0x4004594	    0xc74424040000	                  mov dword [rsp + 4], 0	      5915	eval.c	FUNCTION_93	IF_1
0x400459c	          0x4885db	                           test rbx, rbx	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x400459f	            0x742f	                            je 0x40045d0	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x40045a1	      0x488d542404	                      lea rdx, [rsp + 4]	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40045a6	            0x31f6	                            xor esi, esi	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40045a8	          0x4889df	                            mov rdi, rbx	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40045ab	      0xe800000000	                          call 0x40045b0	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40045b0	        0x8b7c2404	                mov edi, dword [rsp + 4]	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045b4	    0x488905000000	            mov qword [0x040045bb], rax 	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40045bb	            0x85ff	                           test edi, edi	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045bd	            0x7511	                           jne 0x40045d0	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045bf	          0x4885c0	                           test rax, rax	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045c2	            0x7e0c	                           jle 0x40045d0	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045c4	    0x488b15000000	            mov rdx, qword [0x040045cb] 	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045cb	          0x483b02	                    cmp rax, qword [rdx]	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045ce	            0x7e50	                           jle 0x4004620	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40045d0	            0x31c0	                            xor eax, eax	      5957	eval.c	FUNCTION_93	IF_8
0x40045d2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6012	eval.c	FUNCTION_93
0x40045d7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6012	eval.c	FUNCTION_93
0x40045e0	     0xf850e020000	                           jne 0x40047f4	      6012	eval.c	FUNCTION_93
0x40045e6	        0x4883c418	                           add rsp, 0x18	      6012	eval.c	FUNCTION_93
0x40045ea	              0x5b	                                 pop rbx	      6012	eval.c	FUNCTION_93
0x40045eb	              0x5d	                                 pop rbp	      6012	eval.c	FUNCTION_93
0x40045ec	              0xc3	                                     ret	      6012	eval.c	FUNCTION_93
0x40045ed	           0xf1f00	                         nop dword [rax]	      6012	eval.c	FUNCTION_93
0x40045f0	        0x80780100	                   cmp byte [rax + 1], 0	      5960	eval.c	FUNCTION_93	IF_10
0x40045f4	     0xf854effffff	                           jne 0x4004548	      5960	eval.c	FUNCTION_93	IF_10
0x40045fa	    0x8b1500000000	            mov edx, dword [0x04004600] 	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4004600	      0xb800000000	                              mov eax, 0	      5963	eval.c	FUNCTION_93	IF_10	IF_11
0x4004605	            0x85d2	                           test edx, edx	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4004607	            0x75c9	                           jne 0x40045d2	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4004609	    0x488b05000000	            mov rax, qword [0x04004610] 	      5959	eval.c	FUNCTION_93	IF_9
0x4004610	        0x4883c038	                           add rax, 0x38	      5959	eval.c	FUNCTION_93	IF_9
0x4004614	            0xebbc	                           jmp 0x40045d2	      5959	eval.c	FUNCTION_93	IF_9
0x4004616	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5959	eval.c	FUNCTION_93	IF_9
0x4004620	      0x488d542404	                      lea rdx, [rsp + 4]	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4004625	      0xbe01000000	                              mov esi, 1	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400462a	          0x4889df	                            mov rdi, rbx	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400462d	      0xe800000000	                          call 0x4004632	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4004632	        0x8b742404	                mov esi, dword [rsp + 4]	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4004636	    0x890500000000	            mov dword [0x0400463c], eax 	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400463c	            0x85f6	                           test esi, esi	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x400463e	            0x7590	                           jne 0x40045d0	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4004640	    0x488b3d000000	            mov rdi, qword [0x04004647] 	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4004647	      0xe800000000	                          call 0x400464c	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400464c	          0x4889c7	                            mov rdi, rax	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400464f	      0xe800000000	                          call 0x4004654	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4004654	      0xbe01000000	                              mov esi, 1	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4004659	          0x4889df	                            mov rdi, rbx	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x400465c	          0x4889c5	                            mov rbp, rax	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400465f	      0xe800000000	                          call 0x4004664	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4004664	          0x4885c0	                           test rax, rax	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4004667	            0x740a	                            je 0x4004673	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4004669	        0x83781002	               cmp dword [rax + 0x10], 2	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x400466d	     0xf841f010000	                            je 0x4004792	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4004673	    0x8b1500000000	            mov edx, dword [0x04004679] 	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4004679	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x400467b	     0xf844fffffff	                            je 0x40045d0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4004681	          0x83c501	                              add ebp, 1	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4004684	            0x39ea	                            cmp edx, ebp	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4004686	     0xf8f44ffffff	                            jg 0x40045d0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x400468c	          0x83ea01	                              sub edx, 1	      5943	eval.c	FUNCTION_93	IF_1
0x400468f	      0xbe02000000	                              mov esi, 2	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4004694	          0x4889df	                            mov rdi, rbx	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x4004697	    0x891500000000	            mov dword [0x0400469d], edx 	      5943	eval.c	FUNCTION_93	IF_1
0x400469d	      0x488d542404	                      lea rdx, [rsp + 4]	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40046a2	      0xe800000000	                          call 0x40046a7	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40046a7	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40046ab	    0x890500000000	            mov dword [0x040046b1], eax 	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40046b1	      0xb800000000	                              mov eax, 0	      5952	eval.c	FUNCTION_93	IF_1
0x40046b6	            0x85c9	                           test ecx, ecx	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40046b8	     0xf8414ffffff	                            je 0x40045d2	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40046be	    0xc70500000000	               mov dword [0x040046c8], 0	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40046c8	      0xe905ffffff	                           jmp 0x40045d2	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40046cd	           0xf1f00	                         nop dword [rax]	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40046d0	            0x85db	                           test ebx, ebx	      5978	eval.c	FUNCTION_93	IF_14
0x40046d2	     0xf84f8feffff	                            je 0x40045d0	      5978	eval.c	FUNCTION_93	IF_14
0x40046d8	    0xc70500000000	               mov dword [0x040046e2], 0	      5980	eval.c	FUNCTION_93	IF_14
0x40046e2	         0xfb64001	               movzx eax, byte [rax + 1]	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x40046e6	            0x3c30	                            cmp al, 0x30	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x40046e8	     0xf84da000000	                            je 0x40047c8	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x40046ee	            0x3c24	                            cmp al, 0x24	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x40046f0	     0xf85dafeffff	                           jne 0x40045d0	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x40046f6	      0xe800000000	                          call 0x40046fb	      5991	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16	CALL_11
0x40046fb	    0x488b05000000	            mov rax, qword [0x04004702] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004702	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004709	        0x488d42ff	                      lea rax, [rdx - 1]	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x400470d	          0x4885d2	                           test rdx, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004710	      0xba00000000	                              mov edx, 0	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004715	        0x480f4ec2	                         cmovle rax, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004719	    0x488905000000	            mov qword [0x04004720], rax 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004720	      0xb800000000	                              mov eax, 0	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004725	      0xe9a8feffff	                           jmp 0x40045d2	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x400472a	    0x660f1f440000	                    nop word [rax + rax]	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4004730	    0x488b05000000	            mov rax, qword [0x04004737] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4004737	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x400473b	    0x488905000000	            mov qword [0x04004742], rax 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4004742	      0xe800000000	                          call 0x4004747	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4004747	          0x4889c7	                            mov rdi, rax	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x400474a	      0xe800000000	                          call 0x400474f	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x400474f	    0x890500000000	            mov dword [0x04004755], eax 	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4004755	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400475a	      0xe973feffff	                           jmp 0x40045d2	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400475f	              0x90	                                     nop	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4004760	         0xfb67001	               movzx esi, byte [rax + 1]	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4004764	    0x488b3d000000	            mov rdi, qword [0x0400476b] 	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x400476b	            0x31d2	                            xor edx, edx	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x400476d	          0x4889e9	                            mov rcx, rbp	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4004770	      0xe800000000	                          call 0x4004775	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4004775	        0x488d50ff	                      lea rdx, [rax - 1]	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4004779	        0x4883fafd	             cmp rdx, 0xfffffffffffffffd	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x400477d	     0xf874dfeffff	                            ja 0x40045d0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4004783	        0x48833800	                      cmp qword [rax], 0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4004787	     0xf8f45feffff	                            jg 0x40045d2	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x400478d	      0xe93efeffff	                           jmp 0x40045d0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4004792	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x4004796	          0x4885c0	                           test rax, rax	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x4004799	     0xf84d4feffff	                            je 0x4004673	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x400479f	          0x803824	                    cmp byte [rax], 0x24	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40047a2	     0xf85cbfeffff	                           jne 0x4004673	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40047a8	        0x80780100	                   cmp byte [rax + 1], 0	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40047ac	     0xf85c1feffff	                           jne 0x4004673	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40047b2	          0x8d5501	                      lea edx, [rbp + 1]	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x40047b5	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40047b7	    0x891500000000	            mov dword [0x040047bd], edx 	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x40047bd	     0xf85c9feffff	                           jne 0x400468c	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40047c3	      0xe908feffff	                           jmp 0x40045d0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40047c8	      0xe800000000	                          call 0x40047cd	      5983	eval.c	FUNCTION_93	IF_14	IF_15	CALL_10
0x40047cd	    0x488b15000000	            mov rdx, qword [0x040047d4] 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40047d4	      0xb801000000	                              mov eax, 1	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40047d9	      0x48837a7800	               cmp qword [rdx + 0x78], 0	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40047de	      0x480f4f4278	           cmovg rax, qword [rdx + 0x78]	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40047e3	    0x488905000000	            mov qword [0x040047ea], rax 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40047ea	      0xb800000000	                              mov eax, 0	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x40047ef	      0xe9defdffff	                           jmp 0x40045d2	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x40047f4	      0xe800000000	                          call 0x40047f9	      6012	eval.c	FUNCTION_93
eval_foldexpr	DO,0:WHILE,0:FOR,0:ELSE,3:IF,6:SWITCH,0:CALL,5:functions,0	86
0x40098b0	            0x4155	                                push r13	      1183	eval.c	FUNCTION_30
0x40098b2	            0x4154	                                push r12	      1183	eval.c	FUNCTION_30
0x40098b4	          0x4989fd	                            mov r13, rdi	      1183	eval.c	FUNCTION_30
0x40098b7	              0x55	                                push rbp	      1183	eval.c	FUNCTION_30
0x40098b8	              0x53	                                push rbx	      1183	eval.c	FUNCTION_30
0x40098b9	          0x4989f4	                            mov r12, rsi	      1183	eval.c	FUNCTION_30
0x40098bc	      0xbf00000000	                              mov edi, 0	      1187	eval.c	FUNCTION_30	CALL_1
0x40098c1	      0xbe04000000	                              mov esi, 4	      1187	eval.c	FUNCTION_30	CALL_1
0x40098c6	        0x4883ec38	                           sub rsp, 0x38	      1183	eval.c	FUNCTION_30
0x40098ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1183	eval.c	FUNCTION_30
0x40098d3	      0x4889442428	             mov qword [rsp + 0x28], rax	      1183	eval.c	FUNCTION_30
0x40098d8	            0x31c0	                            xor eax, eax	      1183	eval.c	FUNCTION_30
0x40098da	      0xe800000000	                          call 0x40098df	      1187	eval.c	FUNCTION_30	CALL_1
0x40098df	    0x830500000000	               add dword [0x040098e6], 1	      1190	eval.c	FUNCTION_30
0x40098e6	            0x85c0	                           test eax, eax	      1191	eval.c	FUNCTION_30	IF_1
0x40098e8	            0x89c3	                            mov ebx, eax	      1187	eval.c	FUNCTION_30	CALL_1
0x40098ea	     0xf8498000000	                            je 0x4009988	      1191	eval.c	FUNCTION_30	IF_1
0x40098f0	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40098f5	    0x830500000000	               add dword [0x040098fc], 1	      1192	eval.c	FUNCTION_30	IF_1
0x40098fc	    0x830500000000	               add dword [0x04009903], 1	      1193	eval.c	FUNCTION_30
0x4009903	            0x31d2	                            xor edx, edx	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009905	    0x41c704240000	                      mov dword [r12], 0	      1194	eval.c	FUNCTION_30
0x400990d	      0xb901000000	                              mov ecx, 1	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009912	          0x4889ee	                            mov rsi, rbp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009915	          0x4c89ef	                            mov rdi, r13	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009918	      0xe800000000	                          call 0x400991d	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x400991d	            0x85c0	                           test eax, eax	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x400991f	     0xf849b000000	                            je 0x40099c0	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009925	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4009929	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x400992d	          0x83fa01	                              cmp edx, 1	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4009930	            0x740b	                            je 0x400993d	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4009932	            0x31c0	                            xor eax, eax	      1200	eval.c	FUNCTION_30	ELSE_1	IF_3
0x4009934	          0x83fa02	                              cmp edx, 2	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x4009937	     0xf8493000000	                            je 0x40099d0	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x400993d	          0x4889ef	                            mov rdi, rbp	      1213	eval.c	FUNCTION_30	ELSE_1	CALL_5
0x4009940	        0x8944240c	              mov dword [rsp + 0xc], eax	      1213	eval.c	FUNCTION_30	ELSE_1	CALL_5
0x4009944	      0xe800000000	                          call 0x4009949	      1213	eval.c	FUNCTION_30	ELSE_1	CALL_5
0x4009949	    0x832d00000000	               sub dword [0x04009950], 1	      1215	eval.c	FUNCTION_30
0x4009950	            0x85db	                           test ebx, ebx	      1216	eval.c	FUNCTION_30	IF_6
0x4009952	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1216	eval.c	FUNCTION_30	IF_6
0x4009956	            0x7407	                            je 0x400995f	      1216	eval.c	FUNCTION_30	IF_6
0x4009958	    0x832d00000000	               sub dword [0x0400995f], 1	      1217	eval.c	FUNCTION_30	IF_6
0x400995f	    0x832d00000000	               sub dword [0x04009966], 1	      1218	eval.c	FUNCTION_30
0x4009966	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1221	eval.c	FUNCTION_30
0x400996b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1221	eval.c	FUNCTION_30
0x4009974	     0xf858c000000	                           jne 0x4009a06	      1221	eval.c	FUNCTION_30
0x400997a	        0x4883c438	                           add rsp, 0x38	      1221	eval.c	FUNCTION_30
0x400997e	              0x5b	                                 pop rbx	      1221	eval.c	FUNCTION_30
0x400997f	              0x5d	                                 pop rbp	      1221	eval.c	FUNCTION_30
0x4009980	            0x415c	                                 pop r12	      1221	eval.c	FUNCTION_30
0x4009982	            0x415d	                                 pop r13	      1221	eval.c	FUNCTION_30
0x4009984	              0xc3	                                     ret	      1221	eval.c	FUNCTION_30
0x4009985	           0xf1f00	                         nop dword [rax]	      1221	eval.c	FUNCTION_30
0x4009988	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x400998d	    0x830500000000	               add dword [0x04009994], 1	      1193	eval.c	FUNCTION_30
0x4009994	            0x31d2	                            xor edx, edx	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x4009996	    0x41c704240000	                      mov dword [r12], 0	      1194	eval.c	FUNCTION_30
0x400999e	      0xb901000000	                              mov ecx, 1	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099a3	          0x4c89ef	                            mov rdi, r13	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099a6	          0x4889ee	                            mov rsi, rbp	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099a9	      0xe800000000	                          call 0x40099ae	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099ae	            0x85c0	                           test eax, eax	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099b0	     0xf856fffffff	                           jne 0x4009925	      1195	eval.c	FUNCTION_30	IF_2	CALL_2
0x40099b6	    0x832d00000000	               sub dword [0x040099bd], 1	      1215	eval.c	FUNCTION_30
0x40099bd	            0xeba0	                           jmp 0x400995f	      1215	eval.c	FUNCTION_30
0x40099bf	              0x90	                                     nop	      1215	eval.c	FUNCTION_30
0x40099c0	    0x832d00000000	               sub dword [0x040099c7], 1	      1215	eval.c	FUNCTION_30
0x40099c7	            0xeb8f	                           jmp 0x4009958	      1215	eval.c	FUNCTION_30
0x40099c9	     0xf1f80000000	                         nop dword [rax]	      1215	eval.c	FUNCTION_30
0x40099d0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x40099d5	          0x4885ff	                           test rdi, rdi	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x40099d8	     0xf845fffffff	                            je 0x400993d	      1202	eval.c	FUNCTION_30	ELSE_1	ELSE_2	IF_4
0x40099de	           0xfb607	                   movzx eax, byte [rdi]	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099e1	          0x8d50d0	                   lea edx, [rax - 0x30]	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099e4	          0x80fa09	                               cmp dl, 9	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099e7	            0x760c	                           jbe 0x40099f5	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099e9	            0x3c2d	                            cmp al, 0x2d	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099eb	            0x7408	                            je 0x40099f5	      1209	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5	CALL_3
0x40099ed	        0x4883c701	                              add rdi, 1	      1210	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5
0x40099f1	        0x41890424	                    mov dword [r12], eax	      1210	eval.c	FUNCTION_30	ELSE_1	ELSE_3	IF_5
0x40099f5	      0xba0a000000	                            mov edx, 0xa	       285	stdlib.h	FUNCTION_204	CALL_2
0x40099fa	            0x31f6	                            xor esi, esi	       285	stdlib.h	FUNCTION_204	CALL_2
0x40099fc	      0xe800000000	                          call 0x4009a01	       285	stdlib.h	FUNCTION_204	CALL_2
0x4009a01	      0xe937ffffff	                           jmp 0x400993d	       285	stdlib.h	FUNCTION_204	CALL_2
0x4009a06	      0xe800000000	                          call 0x4009a0b	      1221	eval.c	FUNCTION_30
call_func_retnr	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	26
0x4003220	              0x53	                                push rbx	      1105	eval.c	FUNCTION_27
0x4003221	    0x41b801000000	                              mov r8d, 1	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003227	        0x4883ec20	                           sub rsp, 0x20	      1105	eval.c	FUNCTION_27
0x400322b	          0x4989e1	                             mov r9, rsp	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x400322e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	eval.c	FUNCTION_27
0x4003237	      0x4889442418	             mov qword [rsp + 0x18], rax	      1105	eval.c	FUNCTION_27
0x400323c	            0x31c0	                            xor eax, eax	      1105	eval.c	FUNCTION_27
0x400323e	      0xe800000000	                          call 0x4003243	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003243	            0x85c0	                           test eax, eax	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003245	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x400324c	            0x7418	                            je 0x4003266	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x400324e	            0x31f6	                            xor esi, esi	      1113	eval.c	FUNCTION_27	CALL_2
0x4003250	          0x4889e7	                            mov rdi, rsp	      1113	eval.c	FUNCTION_27	CALL_2
0x4003253	      0xe800000000	                          call 0x4003258	      1113	eval.c	FUNCTION_27	CALL_2
0x4003258	          0x4889e7	                            mov rdi, rsp	      1114	eval.c	FUNCTION_27	CALL_3
0x400325b	          0x4889c3	                            mov rbx, rax	      1113	eval.c	FUNCTION_27	CALL_2
0x400325e	      0xe800000000	                          call 0x4003263	      1114	eval.c	FUNCTION_27	CALL_3
0x4003263	          0x4889da	                            mov rdx, rbx	      1115	eval.c	FUNCTION_27
0x4003266	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1116	eval.c	FUNCTION_27
0x400326b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1116	eval.c	FUNCTION_27
0x4003274	          0x4889d0	                            mov rax, rdx	      1116	eval.c	FUNCTION_27
0x4003277	            0x7506	                           jne 0x400327f	      1116	eval.c	FUNCTION_27
0x4003279	        0x4883c420	                           add rsp, 0x20	      1116	eval.c	FUNCTION_27
0x400327d	              0x5b	                                 pop rbx	      1116	eval.c	FUNCTION_27
0x400327e	              0xc3	                                     ret	      1116	eval.c	FUNCTION_27
0x400327f	      0xe800000000	                          call 0x4003284	      1116	eval.c	FUNCTION_27
ex_echohl	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,1:functions,0	6
0x40053e0	        0x4883ec08	                              sub rsp, 8	      8112	eval.c	FUNCTION_153
0x40053e4	          0x488b3f	                    mov rdi, qword [rdi]	      8113	eval.c	FUNCTION_153	CALL_1
0x40053e7	      0xe800000000	                          call 0x40053ec	      8113	eval.c	FUNCTION_153	CALL_1
0x40053ec	    0x890500000000	            mov dword [0x040053f2], eax 	      8113	eval.c	FUNCTION_153	CALL_1
0x40053f2	        0x4883c408	                              add rsp, 8	      8114	eval.c	FUNCTION_153
0x40053f6	              0xc3	                                     ret	      8114	eval.c	FUNCTION_153
v_throwpoint	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,0:functions,0	8
0x40022f0	          0x4885ff	                           test rdi, rdi	      6554	eval.c	FUNCTION_114	IF_1
0x40022f3	            0x750b	                           jne 0x4002300	      6554	eval.c	FUNCTION_114	IF_1
0x40022f5	    0x488b05000000	            mov rax, qword [0x040022fc] 	      6555	eval.c	FUNCTION_114	IF_1
0x40022fc	              0xc3	                                     ret	      6555	eval.c	FUNCTION_114	IF_1
0x40022fd	           0xf1f00	                         nop dword [rax]	      6555	eval.c	FUNCTION_114	IF_1
0x4002300	    0x48893d000000	            mov qword [0x04002307], rdi 	      6557	eval.c	FUNCTION_114
0x4002307	            0x31c0	                            xor eax, eax	      6558	eval.c	FUNCTION_114
0x4002309	              0xc3	                                     ret	      6559	eval.c	FUNCTION_114
eval_to_bool	DO,0:WHILE,0:FOR,0:ELSE,1:IF,4:SWITCH,0:CALL,3:functions,0	45
0x4008c50	              0x53	                                push rbx	       672	eval.c	FUNCTION_13
0x4008c51	          0x4889f3	                            mov rbx, rsi	       672	eval.c	FUNCTION_13
0x4008c54	        0x4883ec20	                           sub rsp, 0x20	       672	eval.c	FUNCTION_13
0x4008c58	    0x64488b042528	                mov rax, qword fs:[0x28]	       672	eval.c	FUNCTION_13
0x4008c61	      0x4889442418	             mov qword [rsp + 0x18], rax	       672	eval.c	FUNCTION_13
0x4008c66	            0x31c0	                            xor eax, eax	       672	eval.c	FUNCTION_13
0x4008c68	            0x85c9	                           test ecx, ecx	       676	eval.c	FUNCTION_13	IF_1
0x4008c6a	            0x7444	                            je 0x4008cb0	       676	eval.c	FUNCTION_13	IF_1
0x4008c6c	            0x31c9	                            xor ecx, ecx	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008c6e	          0x4889e6	                            mov rsi, rsp	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008c71	    0x830500000000	               add dword [0x04008c78], 1	       677	eval.c	FUNCTION_13	IF_1
0x4008c78	      0xe800000000	                          call 0x4008c7d	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008c7d	            0x85c0	                           test eax, eax	       682	eval.c	FUNCTION_13	ELSE_1
0x4008c7f	           0xf94c0	                                 sete al	       682	eval.c	FUNCTION_13	ELSE_1
0x4008c82	           0xfb6c0	                           movzx eax, al	       682	eval.c	FUNCTION_13	ELSE_1
0x4008c85	            0x8903	                    mov dword [rbx], eax	       682	eval.c	FUNCTION_13	ELSE_1
0x4008c87	    0x832d00000000	               sub dword [0x04008c8e], 1	       690	eval.c	FUNCTION_13	IF_4
0x4008c8e	            0x31c0	                            xor eax, eax	       690	eval.c	FUNCTION_13	IF_4
0x4008c90	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       693	eval.c	FUNCTION_13
0x4008c95	    0x644833342528	                xor rsi, qword fs:[0x28]	       693	eval.c	FUNCTION_13
0x4008c9e	            0x7558	                           jne 0x4008cf8	       693	eval.c	FUNCTION_13
0x4008ca0	        0x4883c420	                           add rsp, 0x20	       693	eval.c	FUNCTION_13
0x4008ca4	              0x5b	                                 pop rbx	       693	eval.c	FUNCTION_13
0x4008ca5	              0xc3	                                     ret	       693	eval.c	FUNCTION_13
0x4008ca6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       693	eval.c	FUNCTION_13
0x4008cb0	      0xb901000000	                              mov ecx, 1	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008cb5	          0x4889e6	                            mov rsi, rsp	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008cb8	      0xe800000000	                          call 0x4008cbd	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008cbd	            0x85c0	                           test eax, eax	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008cbf	            0x742f	                            je 0x4008cf0	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x4008cc1	          0x4889de	                            mov rsi, rbx	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4008cc4	    0xc70300000000	                      mov dword [rbx], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x4008cca	          0x4889e7	                            mov rdi, rsp	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4008ccd	      0xe800000000	                          call 0x4008cd2	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4008cd2	          0x4889e7	                            mov rdi, rsp	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008cd5	          0x4889c3	                            mov rbx, rax	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4008cd8	      0xe800000000	                          call 0x4008cdd	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008cdd	            0x31c0	                            xor eax, eax	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008cdf	          0x4885db	                           test rbx, rbx	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008ce2	           0xf95c0	                                setne al	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008ce5	            0xeba9	                           jmp 0x4008c90	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008ce7	    0x660f1f840000	                    nop word [rax + rax]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x4008cf0	    0xc70301000000	                      mov dword [rbx], 1	       679	eval.c	FUNCTION_13	IF_2
0x4008cf6	            0xeb98	                           jmp 0x4008c90	       679	eval.c	FUNCTION_13	IF_2
0x4008cf8	      0xe800000000	                          call 0x4008cfd	       693	eval.c	FUNCTION_13
assert_match_common	DO,0:WHILE,0:FOR,0:ELSE,1:IF,2:SWITCH,0:CALL,9:functions,0	65
0x4007520	            0x4155	                                push r13	      8909	eval.c	FUNCTION_172
0x4007522	            0x4154	                                push r12	      8909	eval.c	FUNCTION_172
0x4007524	          0x4189f5	                           mov r13d, esi	      8909	eval.c	FUNCTION_172
0x4007527	              0x55	                                push rbp	      8909	eval.c	FUNCTION_172
0x4007528	              0x53	                                push rbx	      8909	eval.c	FUNCTION_172
0x4007529	          0x4889fb	                            mov rbx, rdi	      8909	eval.c	FUNCTION_172
0x400752c	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      8914	eval.c	FUNCTION_172	CALL_2
0x4007530	    0x4881ecc80000	                           sub rsp, 0xc8	      8909	eval.c	FUNCTION_172
0x4007537	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8913	eval.c	FUNCTION_172	CALL_1
0x400753c	    0x64488b042528	                mov rax, qword fs:[0x28]	      8909	eval.c	FUNCTION_172
0x4007545	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      8909	eval.c	FUNCTION_172
0x400754d	            0x31c0	                            xor eax, eax	      8909	eval.c	FUNCTION_172
0x400754f	      0xe800000000	                          call 0x4007554	      8913	eval.c	FUNCTION_172	CALL_1
0x4007554	      0x488d742470	                   lea rsi, [rsp + 0x70]	      8914	eval.c	FUNCTION_172	CALL_2
0x4007559	          0x4889c5	                            mov rbp, rax	      8913	eval.c	FUNCTION_172	CALL_1
0x400755c	          0x4c89e7	                            mov rdi, r12	      8914	eval.c	FUNCTION_172	CALL_2
0x400755f	      0xe800000000	                          call 0x4007564	      8914	eval.c	FUNCTION_172	CALL_2
0x4007564	          0x4885ed	                           test rbp, rbp	      8916	eval.c	FUNCTION_172	IF_1
0x4007567	            0x747f	                            je 0x40075e8	      8916	eval.c	FUNCTION_172	IF_1
0x4007569	          0x4885c0	                           test rax, rax	      8916	eval.c	FUNCTION_172	IF_1
0x400756c	            0x747a	                            je 0x40075e8	      8916	eval.c	FUNCTION_172	IF_1
0x400756e	            0x31d2	                            xor edx, edx	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007570	          0x4889c6	                            mov rsi, rax	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007573	          0x4889ef	                            mov rdi, rbp	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007576	      0xe8458fffff	                  call sym.pattern_match	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x400757b	            0x31c9	                            xor ecx, ecx	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x400757d	        0x4183fd02	                             cmp r13d, 2	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007581	           0xf94c1	                                 sete cl	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007584	            0x31d2	                            xor edx, edx	      8927	eval.c	FUNCTION_172
0x4007586	            0x39c8	                            cmp eax, ecx	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4007588	            0x7434	                            je 0x40075be	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x400758a	          0x4889e7	                            mov rdi, rsp	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x400758d	      0xe800000000	                          call 0x4007592	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x4007592	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4007596	            0x31d2	                            xor edx, edx	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4007598	          0x4589e9	                           mov r9d, r13d	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x400759b	          0x4d89e0	                             mov r8, r12	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x400759e	          0x4889d9	                            mov rcx, rbx	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x40075a1	          0x4889e7	                            mov rdi, rsp	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x40075a4	      0xe800000000	                          call 0x40075a9	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x40075a9	          0x4889e7	                            mov rdi, rsp	      8923	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_8
0x40075ac	      0xe800000000	                          call 0x40075b1	      8923	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_8
0x40075b1	          0x4889e7	                            mov rdi, rsp	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x40075b4	      0xe800000000	                          call 0x40075b9	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x40075b9	      0xba01000000	                              mov edx, 1	      8925	eval.c	FUNCTION_172	ELSE_1	IF_2
0x40075be	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      8928	eval.c	FUNCTION_172
0x40075c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8928	eval.c	FUNCTION_172
0x40075cf	            0x89d0	                            mov eax, edx	      8928	eval.c	FUNCTION_172
0x40075d1	            0x7532	                           jne 0x4007605	      8928	eval.c	FUNCTION_172
0x40075d3	    0x4881c4c80000	                           add rsp, 0xc8	      8928	eval.c	FUNCTION_172
0x40075da	              0x5b	                                 pop rbx	      8928	eval.c	FUNCTION_172
0x40075db	              0x5d	                                 pop rbp	      8928	eval.c	FUNCTION_172
0x40075dc	            0x415c	                                 pop r12	      8928	eval.c	FUNCTION_172
0x40075de	            0x415d	                                 pop r13	      8928	eval.c	FUNCTION_172
0x40075e0	              0xc3	                                     ret	      8928	eval.c	FUNCTION_172
0x40075e1	     0xf1f80000000	                         nop dword [rax]	      8928	eval.c	FUNCTION_172
0x40075e8	      0xba05000000	                              mov edx, 5	      8917	eval.c	FUNCTION_172	CALL_4
0x40075ed	      0xbe00000000	                              mov esi, 0	      8917	eval.c	FUNCTION_172	CALL_4
0x40075f2	            0x31ff	                            xor edi, edi	      8917	eval.c	FUNCTION_172	CALL_4
0x40075f4	      0xe800000000	                          call 0x40075f9	      8917	eval.c	FUNCTION_172	CALL_4
0x40075f9	          0x4889c7	                            mov rdi, rax	      8917	eval.c	FUNCTION_172	CALL_4
0x40075fc	      0xe800000000	                          call 0x4007601	      8917	eval.c	FUNCTION_172	CALL_4
0x4007601	            0x31d2	                            xor edx, edx	      8927	eval.c	FUNCTION_172
0x4007603	            0xebb9	                           jmp 0x40075be	      8927	eval.c	FUNCTION_172
0x4007605	      0xe800000000	                          call 0x400760a	      8928	eval.c	FUNCTION_172
assert_inrange	DO,0:WHILE,0:FOR,0:ELSE,1:IF,3:SWITCH,0:CALL,11:functions,0	81
0x4007000	            0x4154	                                push r12	      8932	eval.c	FUNCTION_173
0x4007002	              0x55	                                push rbp	      8932	eval.c	FUNCTION_173
0x4007003	              0x53	                                push rbx	      8932	eval.c	FUNCTION_173
0x4007004	          0x4889fb	                            mov rbx, rdi	      8932	eval.c	FUNCTION_173
0x4007007	    0x4881ec600100	                          sub rsp, 0x160	      8932	eval.c	FUNCTION_173
0x400700e	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8935	eval.c	FUNCTION_173	CALL_1
0x4007013	    0xc74424140000	               mov dword [rsp + 0x14], 0	      8934	eval.c	FUNCTION_173
0x400701b	    0x64488b042528	                mov rax, qword fs:[0x28]	      8932	eval.c	FUNCTION_173
0x4007024	    0x488984245801	            mov qword [rsp + 0x158], rax	      8932	eval.c	FUNCTION_173
0x400702c	            0x31c0	                            xor eax, eax	      8932	eval.c	FUNCTION_173
0x400702e	      0xe800000000	                          call 0x4007033	      8935	eval.c	FUNCTION_173	CALL_1
0x4007033	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8936	eval.c	FUNCTION_173	CALL_2
0x4007037	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8936	eval.c	FUNCTION_173	CALL_2
0x400703c	          0x4889c5	                            mov rbp, rax	      8935	eval.c	FUNCTION_173	CALL_1
0x400703f	      0xe800000000	                          call 0x4007044	      8936	eval.c	FUNCTION_173	CALL_2
0x4007044	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      8937	eval.c	FUNCTION_173	CALL_3
0x4007048	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8937	eval.c	FUNCTION_173	CALL_3
0x400704d	          0x4989c4	                            mov r12, rax	      8936	eval.c	FUNCTION_173	CALL_2
0x4007050	      0xe800000000	                          call 0x4007055	      8937	eval.c	FUNCTION_173	CALL_3
0x4007055	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      8942	eval.c	FUNCTION_173	IF_1
0x4007059	            0x85d2	                           test edx, edx	      8942	eval.c	FUNCTION_173	IF_1
0x400705b	     0xf859f000000	                           jne 0x4007100	      8942	eval.c	FUNCTION_173	IF_1
0x4007061	          0x4839c5	                            cmp rbp, rax	      8944	eval.c	FUNCTION_173	IF_2
0x4007064	            0x7f2a	                            jg 0x4007090	      8944	eval.c	FUNCTION_173	IF_2
0x4007066	          0x4939c4	                            cmp r12, rax	      8944	eval.c	FUNCTION_173	IF_2
0x4007069	            0x7c25	                            jl 0x4007090	      8944	eval.c	FUNCTION_173	IF_2
0x400706b	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	      8963	eval.c	FUNCTION_173
0x4007073	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	eval.c	FUNCTION_173
0x400707c	            0x89d0	                            mov eax, edx	      8963	eval.c	FUNCTION_173
0x400707e	     0xf85cb000000	                           jne 0x400714f	      8963	eval.c	FUNCTION_173
0x4007084	    0x4881c4600100	                          add rsp, 0x160	      8963	eval.c	FUNCTION_173
0x400708b	              0x5b	                                 pop rbx	      8963	eval.c	FUNCTION_173
0x400708c	              0x5d	                                 pop rbp	      8963	eval.c	FUNCTION_173
0x400708d	            0x415c	                                 pop r12	      8963	eval.c	FUNCTION_173
0x400708f	              0xc3	                                     ret	      8963	eval.c	FUNCTION_173
0x4007090	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x4007095	      0x4889442408	                mov qword [rsp + 8], rax	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x400709a	      0xe800000000	                          call 0x400709f	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x400709f	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x40070a2	      0x488b442408	                mov rax, qword [rsp + 8]	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x40070a7	            0x85c9	                           test ecx, ecx	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x40070a9	            0x7565	                           jne 0x4007110	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x40070ab	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070b3	          0x4989c1	                             mov r9, rax	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070b6	      0xbec8000000	                           mov esi, 0xc8	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070bb	          0x4d89e0	                             mov r8, r12	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070be	          0x4889e9	                            mov rcx, rbp	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070c1	      0xba00000000	                              mov edx, 0	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070c6	            0x31c0	                            xor eax, eax	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070c8	      0xe800000000	                          call 0x40070cd	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x40070cd	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40070d5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40070da	      0xe800000000	                          call 0x40070df	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x40070df	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x40070e4	      0xe800000000	                          call 0x40070e9	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x40070e9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x40070ee	      0xe800000000	                          call 0x40070f3	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x40070f3	      0xba01000000	                              mov edx, 1	      8960	eval.c	FUNCTION_173	IF_2
0x40070f8	      0xe96effffff	                           jmp 0x400706b	      8960	eval.c	FUNCTION_173	IF_2
0x40070fd	           0xf1f00	                         nop dword [rax]	      8960	eval.c	FUNCTION_173	IF_2
0x4007100	            0x31d2	                            xor edx, edx	      8943	eval.c	FUNCTION_173	IF_1
0x4007102	      0xe964ffffff	                           jmp 0x400706b	      8943	eval.c	FUNCTION_173	IF_1
0x4007107	    0x660f1f840000	                    nop word [rax + rax]	      8943	eval.c	FUNCTION_173	IF_1
0x4007110	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x4007114	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      5759	eval.c	FUNCTION_89	CALL_1
0x4007118	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x400711e	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4007120	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x4007123	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x4007125	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5759	eval.c	FUNCTION_89	CALL_1
0x400712a	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5759	eval.c	FUNCTION_89	CALL_1
0x400712f	      0xe800000000	                          call 0x4007134	      5759	eval.c	FUNCTION_89	CALL_1
0x4007134	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4007139	          0x4889c6	                            mov rsi, rax	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x400713c	      0xe800000000	                          call 0x4007141	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x4007141	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x4007146	      0xe800000000	                          call 0x400714b	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x400714b	              0x58	                                 pop rax	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x400714c	              0x5a	                                 pop rdx	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x400714d	            0xeb90	                           jmp 0x40070df	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x400714f	      0xe800000000	                          call 0x4007154	      8963	eval.c	FUNCTION_173
get_vim_var_str	DO,0:WHILE,0:FOR,0:ELSE,0:IF,0:SWITCH,0:CALL,1:functions,0	13
0x40044a0	          0x4863ff	                         movsxd rdi, edi	      6405	eval.c	FUNCTION_104	CALL_1
0x40044a3	        0x4883ec08	                              sub rsp, 8	      6404	eval.c	FUNCTION_104
0x40044a7	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40044ac	    0x488d04fd0000	                        lea rax, [rdi*8]	      6405	eval.c	FUNCTION_104	CALL_1
0x40044b4	        0x48c1e706	                              shl rdi, 6	      6405	eval.c	FUNCTION_104	CALL_1
0x40044b8	          0x4829c7	                            sub rdi, rax	      6405	eval.c	FUNCTION_104	CALL_1
0x40044bb	    0x4881c7000000	                              add rdi, 0	      6405	eval.c	FUNCTION_104	CALL_1
0x40044c2	      0xe800000000	                          call 0x40044c7	      7085	eval.c	FUNCTION_128	CALL_1
0x40044c7	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x40044cc	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40044cf	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x40044d3	        0x4883c408	                              add rsp, 8	      6406	eval.c	FUNCTION_104
0x40044d7	              0xc3	                                     ret	      6406	eval.c	FUNCTION_104
partial_free	DO,0:WHILE,0:FOR,1:ELSE,1:IF,1:SWITCH,0:CALL,7:functions,0	40
0x4002960	            0x4154	                                push r12	      4869	eval.c	FUNCTION_76
0x4002962	              0x55	                                push rbp	      4869	eval.c	FUNCTION_76
0x4002963	            0x31ed	                            xor ebp, ebp	      4869	eval.c	FUNCTION_76
0x4002965	              0x53	                                push rbx	      4869	eval.c	FUNCTION_76
0x4002966	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x4002969	            0x31db	                            xor ebx, ebx	      4872	eval.c	FUNCTION_76	FOR_1
0x400296b	          0x4989fc	                            mov r12, rdi	      4869	eval.c	FUNCTION_76
0x400296e	            0x85c0	                           test eax, eax	      4872	eval.c	FUNCTION_76	FOR_1
0x4002970	            0x7e21	                           jle 0x4002993	      4872	eval.c	FUNCTION_76	FOR_1
0x4002972	    0x660f1f440000	                    nop word [rax + rax]	      4872	eval.c	FUNCTION_76	FOR_1
0x4002978	          0x4889ef	                            mov rdi, rbp	      4873	eval.c	FUNCTION_76	CALL_1
0x400297b	      0x49037c2420	             add rdi, qword [r12 + 0x20]	      4873	eval.c	FUNCTION_76	CALL_1
0x4002980	          0x83c301	                              add ebx, 1	      4872	eval.c	FUNCTION_76	FOR_1
0x4002983	        0x4883c510	                           add rbp, 0x10	      4872	eval.c	FUNCTION_76	FOR_1
0x4002987	      0xe800000000	                          call 0x400298c	      4873	eval.c	FUNCTION_76	CALL_1
0x400298c	      0x41395c241c	            cmp dword [r12 + 0x1c], ebx 	      4872	eval.c	FUNCTION_76	FOR_1
0x4002991	            0x7fe5	                            jg 0x4002978	      4872	eval.c	FUNCTION_76	FOR_1
0x4002993	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      4874	eval.c	FUNCTION_76	CALL_2
0x4002998	      0xe800000000	                          call 0x400299d	      4874	eval.c	FUNCTION_76	CALL_2
0x400299d	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      4875	eval.c	FUNCTION_76	CALL_3
0x40029a2	      0xe800000000	                          call 0x40029a7	      4875	eval.c	FUNCTION_76	CALL_3
0x40029a7	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      4876	eval.c	FUNCTION_76	IF_1
0x40029ac	          0x4885ff	                           test rdi, rdi	      4876	eval.c	FUNCTION_76	IF_1
0x40029af	            0x741f	                            je 0x40029d0	      4876	eval.c	FUNCTION_76	IF_1
0x40029b1	      0xe800000000	                          call 0x40029b6	      4878	eval.c	FUNCTION_76	IF_1	CALL_4
0x40029b6	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x40029bb	      0xe800000000	                          call 0x40029c0	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x40029c0	              0x5b	                                 pop rbx	      4884	eval.c	FUNCTION_76
0x40029c1	          0x4c89e7	                            mov rdi, r12	      4883	eval.c	FUNCTION_76	CALL_7
0x40029c4	              0x5d	                                 pop rbp	      4884	eval.c	FUNCTION_76
0x40029c5	            0x415c	                                 pop r12	      4884	eval.c	FUNCTION_76
0x40029c7	      0xe900000000	                           jmp 0x40029cc	      4883	eval.c	FUNCTION_76	CALL_7
0x40029cc	         0xf1f4000	                         nop dword [rax]	      4883	eval.c	FUNCTION_76	CALL_7
0x40029d0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4882	eval.c	FUNCTION_76	CALL_6
0x40029d5	      0xe800000000	                          call 0x40029da	      4882	eval.c	FUNCTION_76	CALL_6
0x40029da	              0x5b	                                 pop rbx	      4884	eval.c	FUNCTION_76
0x40029db	          0x4c89e7	                            mov rdi, r12	      4883	eval.c	FUNCTION_76	CALL_7
0x40029de	              0x5d	                                 pop rbp	      4884	eval.c	FUNCTION_76
0x40029df	            0x415c	                                 pop r12	      4884	eval.c	FUNCTION_76
0x40029e1	      0xe900000000	                           jmp 0x40029e6	      4883	eval.c	FUNCTION_76	CALL_7
eval_expr_to_bool	DO,0:WHILE,0:FOR,0:ELSE,0:IF,1:SWITCH,0:CALL,3:functions,0	31
0x4008800	              0x53	                                push rbx	       745	eval.c	FUNCTION_15
0x4008801	            0x31d2	                            xor edx, edx	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4008803	          0x4889f3	                            mov rbx, rsi	       745	eval.c	FUNCTION_15
0x4008806	            0x31f6	                            xor esi, esi	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4008808	        0x4883ec20	                           sub rsp, 0x20	       745	eval.c	FUNCTION_15
0x400880c	          0x4889e1	                            mov rcx, rsp	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x400880f	    0x64488b042528	                mov rax, qword fs:[0x28]	       745	eval.c	FUNCTION_15
0x4008818	      0x4889442418	             mov qword [rsp + 0x18], rax	       745	eval.c	FUNCTION_15
0x400881d	            0x31c0	                            xor eax, eax	       745	eval.c	FUNCTION_15
0x400881f	      0xe84cfeffff	               call sym.eval_expr_typval	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4008824	            0x85c0	                           test eax, eax	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4008826	            0x7520	                           jne 0x4008848	       749	eval.c	FUNCTION_15	IF_1	CALL_1
0x4008828	    0xc70301000000	                      mov dword [rbx], 1	       751	eval.c	FUNCTION_15	IF_1
0x400882e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       757	eval.c	FUNCTION_15
0x4008833	    0x644833142528	                xor rdx, qword fs:[0x28]	       757	eval.c	FUNCTION_15
0x400883c	            0x7529	                           jne 0x4008867	       757	eval.c	FUNCTION_15
0x400883e	        0x4883c420	                           add rsp, 0x20	       757	eval.c	FUNCTION_15
0x4008842	              0x5b	                                 pop rbx	       757	eval.c	FUNCTION_15
0x4008843	              0xc3	                                     ret	       757	eval.c	FUNCTION_15
0x4008844	         0xf1f4000	                         nop dword [rax]	       757	eval.c	FUNCTION_15
0x4008848	          0x4889de	                            mov rsi, rbx	       754	eval.c	FUNCTION_15	CALL_2
0x400884b	          0x4889e7	                            mov rdi, rsp	       754	eval.c	FUNCTION_15	CALL_2
0x400884e	            0x31db	                            xor ebx, ebx	       754	eval.c	FUNCTION_15	CALL_2
0x4008850	      0xe800000000	                          call 0x4008855	       754	eval.c	FUNCTION_15	CALL_2
0x4008855	          0x4885c0	                           test rax, rax	       754	eval.c	FUNCTION_15	CALL_2
0x4008858	          0x4889e7	                            mov rdi, rsp	       755	eval.c	FUNCTION_15	CALL_3
0x400885b	           0xf95c3	                                setne bl	       754	eval.c	FUNCTION_15	CALL_2
0x400885e	      0xe800000000	                          call 0x4008863	       755	eval.c	FUNCTION_15	CALL_3
0x4008863	            0x89d8	                            mov eax, ebx	       756	eval.c	FUNCTION_15
0x4008865	            0xebc7	                           jmp 0x400882e	       756	eval.c	FUNCTION_15
0x4008867	      0xe800000000	                          call 0x400886c	       757	eval.c	FUNCTION_15
get_name_len	DO,0:WHILE,0:FOR,0:ELSE,0:IF,6:SWITCH,0:CALL,10:functions,0	107
0x40094d0	            0x4157	                                push r15	      6144	eval.c	FUNCTION_97
0x40094d2	            0x4156	                                push r14	      6144	eval.c	FUNCTION_97
0x40094d4	          0x4189d6	                           mov r14d, edx	      6144	eval.c	FUNCTION_97
0x40094d7	            0x4155	                                push r13	      6144	eval.c	FUNCTION_97
0x40094d9	            0x4154	                                push r12	      6144	eval.c	FUNCTION_97
0x40094db	          0x4189cd	                           mov r13d, ecx	      6144	eval.c	FUNCTION_97
0x40094de	              0x55	                                push rbp	      6144	eval.c	FUNCTION_97
0x40094df	              0x53	                                push rbx	      6144	eval.c	FUNCTION_97
0x40094e0	          0x4889fb	                            mov rbx, rdi	      6144	eval.c	FUNCTION_97
0x40094e3	          0x4989f4	                            mov r12, rsi	      6144	eval.c	FUNCTION_97
0x40094e6	        0x4883ec28	                           sub rsp, 0x28	      6144	eval.c	FUNCTION_97
0x40094ea	    0x48c706000000	                      mov qword [rsi], 0	      6150	eval.c	FUNCTION_97
0x40094f1	          0x488b3f	                    mov rdi, qword [rdi]	      6152	eval.c	FUNCTION_97	IF_1
0x40094f4	    0x64488b042528	                mov rax, qword fs:[0x28]	      6144	eval.c	FUNCTION_97
0x40094fd	      0x4889442418	             mov qword [rsp + 0x18], rax	      6144	eval.c	FUNCTION_97
0x4009502	            0x31c0	                            xor eax, eax	      6144	eval.c	FUNCTION_97
0x4009504	          0x803f80	                    cmp byte [rdi], 0x80	      6152	eval.c	FUNCTION_97	IF_1
0x4009507	     0xf84a3000000	                            je 0x40095b0	      6152	eval.c	FUNCTION_97	IF_1
0x400950d	      0xe800000000	                          call 0x4009512	      6159	eval.c	FUNCTION_97	CALL_2
0x4009512	          0x4863e8	                         movsxd rbp, eax	      6159	eval.c	FUNCTION_97	CALL_2
0x4009515	            0x85ed	                           test ebp, ebp	      6160	eval.c	FUNCTION_97	IF_2
0x4009517	     0xf8edb000000	                           jle 0x40095f8	      6160	eval.c	FUNCTION_97	IF_2
0x400951d	          0x4863fd	                         movsxd rdi, ebp	      6163	eval.c	FUNCTION_97	IF_2
0x4009520	          0x48033b	                    add rdi, qword [rbx]	      6163	eval.c	FUNCTION_97	IF_2
0x4009523	            0x31c9	                            xor ecx, ecx	      6169	eval.c	FUNCTION_97	CALL_3
0x4009525	          0x48893b	                    mov qword [rbx], rdi	      6163	eval.c	FUNCTION_97	IF_2
0x4009528	      0x488d742408	                      lea rsi, [rsp + 8]	      6169	eval.c	FUNCTION_97	CALL_3
0x400952d	      0x488d542410	                   lea rdx, [rsp + 0x10]	      6169	eval.c	FUNCTION_97	CALL_3
0x4009532	      0xe800000000	                          call 0x4009537	      6169	eval.c	FUNCTION_97	CALL_3
0x4009537	      0x488b742408	                mov rsi, qword [rsp + 8]	      6171	eval.c	FUNCTION_97	IF_3
0x400953c	          0x4989c7	                            mov r15, rax	      6169	eval.c	FUNCTION_97	CALL_3
0x400953f	          0x4885f6	                           test rsi, rsi	      6171	eval.c	FUNCTION_97	IF_3
0x4009542	     0xf84c0000000	                            je 0x4009608	      6171	eval.c	FUNCTION_97	IF_3
0x4009548	          0x4585f6	                         test r14d, r14d	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x400954b	     0xf848f000000	                            je 0x40095e0	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x4009551	          0x488b3b	                    mov rdi, qword [rbx]	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4009554	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4009559	          0x4889c1	                            mov rcx, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400955c	          0x4829ef	                            sub rdi, rbp	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400955f	      0xe8ecfdffff	             call sym.make_expanded_name	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x4009564	          0x4885c0	                           test rax, rax	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x4009567	          0x4889c5	                            mov rbp, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400956a	     0xf84e0000000	                            je 0x4009650	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x4009570	          0x4c89ff	                            mov rdi, r15	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x4009573	        0x49890424	                    mov qword [r12], rax	      6189	eval.c	FUNCTION_97	IF_3
0x4009577	      0xe800000000	                          call 0x400957c	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x400957c	          0x4889ef	                            mov rdi, rbp	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400957f	          0x488903	                    mov qword [rbx], rax	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x4009582	      0xe800000000	                          call 0x4009587	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x4009587	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6199	eval.c	FUNCTION_97
0x400958c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6199	eval.c	FUNCTION_97
0x4009595	     0xf85bf000000	                           jne 0x400965a	      6199	eval.c	FUNCTION_97
0x400959b	        0x4883c428	                           add rsp, 0x28	      6199	eval.c	FUNCTION_97
0x400959f	              0x5b	                                 pop rbx	      6199	eval.c	FUNCTION_97
0x40095a0	              0x5d	                                 pop rbp	      6199	eval.c	FUNCTION_97
0x40095a1	            0x415c	                                 pop r12	      6199	eval.c	FUNCTION_97
0x40095a3	            0x415d	                                 pop r13	      6199	eval.c	FUNCTION_97
0x40095a5	            0x415e	                                 pop r14	      6199	eval.c	FUNCTION_97
0x40095a7	            0x415f	                                 pop r15	      6199	eval.c	FUNCTION_97
0x40095a9	              0xc3	                                     ret	      6199	eval.c	FUNCTION_97
0x40095aa	    0x660f1f440000	                    nop word [rax + rax]	      6199	eval.c	FUNCTION_97
0x40095b0	        0x807f01fd	                cmp byte [rdi + 1], 0xfd	      6152	eval.c	FUNCTION_97	IF_1
0x40095b4	     0xf8553ffffff	                           jne 0x400950d	      6152	eval.c	FUNCTION_97	IF_1
0x40095ba	        0x807f0252	                cmp byte [rdi + 2], 0x52	      6153	eval.c	FUNCTION_97	IF_1
0x40095be	     0xf8549ffffff	                           jne 0x400950d	      6153	eval.c	FUNCTION_97	IF_1
0x40095c4	        0x4883c703	                              add rdi, 3	      6156	eval.c	FUNCTION_97	IF_1
0x40095c8	          0x48893b	                    mov qword [rbx], rdi	      6156	eval.c	FUNCTION_97	IF_1
0x40095cb	          0x4889df	                            mov rdi, rbx	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40095ce	      0xe800000000	                          call 0x40095d3	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40095d3	          0x83c003	                              add eax, 3	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40095d6	            0xebaf	                           jmp 0x4009587	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40095d8	     0xf1f84000000	                   nop dword [rax + rax]	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x40095e0	          0x482b03	                    sub rax, qword [rbx]	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x40095e3	          0x4c89ff	                            mov rdi, r15	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40095e6	             0x1c5	                            add ebp, eax	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x40095e8	      0xe800000000	                          call 0x40095ed	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40095ed	          0x488903	                    mov qword [rbx], rax	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x40095f0	            0x89e8	                            mov eax, ebp	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40095f2	            0xeb93	                           jmp 0x4009587	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40095f4	         0xf1f4000	                         nop dword [rax]	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40095f8	          0x488b3b	                    mov rdi, qword [rbx]	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x40095fb	      0xb902000000	                              mov ecx, 2	      6169	eval.c	FUNCTION_97	CALL_3
0x4009600	      0xe923ffffff	                           jmp 0x4009528	      6169	eval.c	FUNCTION_97	CALL_3
0x4009605	           0xf1f00	                         nop dword [rax]	      6169	eval.c	FUNCTION_97	CALL_3
0x4009608	          0x4889df	                            mov rdi, rbx	      6194	eval.c	FUNCTION_97	CALL_8
0x400960b	      0xe800000000	                          call 0x4009610	      6194	eval.c	FUNCTION_97	CALL_8
0x4009610	      0x448d640500	                   lea r12d, [rbp + rax]	      6195	eval.c	FUNCTION_97	IF_6
0x4009615	             0x1c5	                            add ebp, eax	      6195	eval.c	FUNCTION_97	IF_6
0x4009617	            0x752f	                           jne 0x4009648	      6195	eval.c	FUNCTION_97	IF_6
0x4009619	          0x4585ed	                         test r13d, r13d	      6195	eval.c	FUNCTION_97	IF_6
0x400961c	            0x742a	                            je 0x4009648	      6195	eval.c	FUNCTION_97	IF_6
0x400961e	          0x488b1b	                    mov rbx, qword [rbx]	      6196	eval.c	FUNCTION_97	CALL_10
0x4009621	      0xba05000000	                              mov edx, 5	      6196	eval.c	FUNCTION_97	CALL_10
0x4009626	      0xbe00000000	                              mov esi, 0	      6196	eval.c	FUNCTION_97	CALL_10
0x400962b	            0x31ff	                            xor edi, edi	      6196	eval.c	FUNCTION_97	CALL_10
0x400962d	      0xe800000000	                          call 0x4009632	      6196	eval.c	FUNCTION_97	CALL_10
0x4009632	          0x4889de	                            mov rsi, rbx	      6196	eval.c	FUNCTION_97	CALL_10
0x4009635	          0x4889c7	                            mov rdi, rax	      6196	eval.c	FUNCTION_97	CALL_10
0x4009638	      0xe800000000	                          call 0x400963d	      6196	eval.c	FUNCTION_97	CALL_10
0x400963d	          0x4489e0	                           mov eax, r12d	      6196	eval.c	FUNCTION_97	CALL_10
0x4009640	      0xe942ffffff	                           jmp 0x4009587	      6196	eval.c	FUNCTION_97	CALL_10
0x4009645	           0xf1f00	                         nop dword [rax]	      6196	eval.c	FUNCTION_97	CALL_10
0x4009648	          0x4489e0	                           mov eax, r12d	      6194	eval.c	FUNCTION_97	CALL_8
0x400964b	      0xe937ffffff	                           jmp 0x4009587	      6194	eval.c	FUNCTION_97	CALL_8
0x4009650	      0xb8ffffffff	                     mov eax, 0xffffffff	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x4009655	      0xe92dffffff	                           jmp 0x4009587	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x400965a	      0xe800000000	                          call 0x400965f	      6199	eval.c	FUNCTION_97
setwinvar	DO,0:WHILE,0:FOR,0:ELSE,2:IF,8:SWITCH,0:CALL,17:functions,0	123
0x40063f0	            0x4156	                                push r14	      8361	eval.c	FUNCTION_158
0x40063f2	            0x4155	                                push r13	      8361	eval.c	FUNCTION_158
0x40063f4	            0x4154	                                push r12	      8361	eval.c	FUNCTION_158
0x40063f6	              0x55	                                push rbp	      8361	eval.c	FUNCTION_158
0x40063f7	          0x4889fd	                            mov rbp, rdi	      8361	eval.c	FUNCTION_158
0x40063fa	              0x53	                                push rbx	      8361	eval.c	FUNCTION_158
0x40063fb	          0x4863da	                         movsxd rbx, edx	      8361	eval.c	FUNCTION_158
0x40063fe	        0x4883ec70	                           sub rsp, 0x70	      8361	eval.c	FUNCTION_158
0x4006402	    0x64488b042528	                mov rax, qword fs:[0x28]	      8361	eval.c	FUNCTION_158
0x400640b	      0x4889442468	             mov qword [rsp + 0x68], rax	      8361	eval.c	FUNCTION_158
0x4006410	            0x31c0	                            xor eax, eax	      8361	eval.c	FUNCTION_158
0x4006412	      0xe800000000	                          call 0x4006417	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006417	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006419	            0x7425	                            je 0x4006440	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x400641b	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8415	eval.c	FUNCTION_158
0x4006420	    0x644833042528	                xor rax, qword fs:[0x28]	      8415	eval.c	FUNCTION_158
0x4006429	     0xf8596010000	                           jne 0x40065c5	      8415	eval.c	FUNCTION_158
0x400642f	        0x4883c470	                           add rsp, 0x70	      8415	eval.c	FUNCTION_158
0x4006433	              0x5b	                                 pop rbx	      8415	eval.c	FUNCTION_158
0x4006434	              0x5d	                                 pop rbp	      8415	eval.c	FUNCTION_158
0x4006435	            0x415c	                                 pop r12	      8415	eval.c	FUNCTION_158
0x4006437	            0x415d	                                 pop r13	      8415	eval.c	FUNCTION_158
0x4006439	            0x415e	                                 pop r14	      8415	eval.c	FUNCTION_158
0x400643b	              0xc3	                                     ret	      8415	eval.c	FUNCTION_158
0x400643c	         0xf1f4000	                         nop dword [rax]	      8415	eval.c	FUNCTION_158
0x4006440	      0xe800000000	                          call 0x4006445	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006445	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006447	            0x75d2	                           jne 0x400641b	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006449	          0x83fb01	                              cmp ebx, 1	      8374	eval.c	FUNCTION_158	IF_2
0x400644c	    0x4c8b25000000	            mov r12, qword [0x04006453] 	      8377	eval.c	FUNCTION_158	ELSE_1
0x4006453	     0xf84e7000000	                            je 0x4006540	      8374	eval.c	FUNCTION_158	IF_2
0x4006459	        0x48c1e304	                              shl rbx, 4	      8378	eval.c	FUNCTION_158	CALL_5
0x400645d	          0x4c89e6	                            mov rsi, r12	      8378	eval.c	FUNCTION_158	CALL_5
0x4006460	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8378	eval.c	FUNCTION_158	CALL_5
0x4006465	      0xe800000000	                          call 0x400646a	      8378	eval.c	FUNCTION_158	CALL_5
0x400646a	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x400646f	          0x4989c6	                            mov r14, rax	      8378	eval.c	FUNCTION_158	CALL_5
0x4006472	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4006477	      0x488d5c1d20	            lea rbx, [rbp + rbx + 0x20] 	      8380	eval.c	FUNCTION_158
0x400647c	      0xe800000000	                          call 0x4006481	      7098	eval.c	FUNCTION_129	CALL_1
0x4006481	          0x4d85f6	                           test r14, r14	      8382	eval.c	FUNCTION_158	IF_3
0x4006484	          0x4989c5	                            mov r13, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4006487	           0xf95c2	                                setne dl	      8382	eval.c	FUNCTION_158	IF_3
0x400648a	          0x4885c0	                           test rax, rax	      8382	eval.c	FUNCTION_158	IF_3
0x400648d	           0xf95c0	                                setne al	      8382	eval.c	FUNCTION_158	IF_3
0x4006490	            0x84c2	                             test dl, al	      8382	eval.c	FUNCTION_158	IF_3
0x4006492	            0x7487	                            je 0x400641b	      8382	eval.c	FUNCTION_158	IF_3
0x4006494	          0x4885db	                           test rbx, rbx	      8382	eval.c	FUNCTION_158	IF_3
0x4006497	            0x7482	                            je 0x400641b	      8382	eval.c	FUNCTION_158	IF_3
0x4006499	    0x4c3b25000000	            cmp r12, qword [0x040064a0] 	      8384	eval.c	FUNCTION_158	IF_3
0x40064a0	     0xf840a010000	                            je 0x40065b0	      8384	eval.c	FUNCTION_158	IF_3
0x40064a6	      0x488d742418	                   lea rsi, [rsp + 0x18]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064b0	    0x41b801000000	                              mov r8d, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064b6	          0x4c89e1	                            mov rcx, r12	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064b9	          0x4c89f2	                            mov rdx, r14	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064bc	      0xe800000000	                          call 0x40064c1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064c1	          0x83f801	                              cmp eax, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064c4	            0x741a	                            je 0x40064e0	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x40064c6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064cb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064d0	      0xba01000000	                              mov edx, 1	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064d5	      0xe800000000	                          call 0x40064da	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064da	      0xe93cffffff	                           jmp 0x400641b	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064df	              0x90	                                     nop	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064e0	    0x41bc01000000	                             mov r12d, 1	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x40064e6	      0x41807d0026	                    cmp byte [r13], 0x26	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x40064eb	            0x7473	                            je 0x4006560	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x40064ed	          0x4c89ef	                            mov rdi, r13	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x40064f0	      0xe800000000	                          call 0x40064f5	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x40064f5	          0x8d7803	                      lea edi, [rax + 3]	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x40064f8	      0xe800000000	                          call 0x40064fd	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x40064fd	          0x4885c0	                           test rax, rax	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4006500	          0x4889c5	                            mov rbp, rax	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006503	            0x742d	                            je 0x4006532	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4006505	      0xb8773a0000	                         mov eax, 0x3a77	       110	string3.h	FUNCTION_197	CALL_3
0x400650a	        0x488d7d02	                      lea rdi, [rbp + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x400650e	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_197	CALL_3
0x4006511	        0x66894500	                      mov word [rbp], ax	       110	string3.h	FUNCTION_197	CALL_3
0x4006515	      0xe800000000	                          call 0x400651a	       110	string3.h	FUNCTION_197	CALL_3
0x400651a	          0x4889ef	                            mov rdi, rbp	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x400651d	      0xba01000000	                              mov edx, 1	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006522	          0x4889de	                            mov rsi, rbx	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006525	      0xe800000000	                          call 0x400652a	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x400652a	          0x4889ef	                            mov rdi, rbp	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x400652d	      0xe800000000	                          call 0x4006532	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x4006532	          0x4585e4	                         test r12d, r12d	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006535	     0xf84e0feffff	                            je 0x400641b	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x400653b	            0xeb89	                           jmp 0x40064c6	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x400653d	           0xf1f00	                         nop dword [rax]	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006540	            0x31f6	                            xor esi, esi	      8375	eval.c	FUNCTION_158	CALL_4
0x4006542	          0x4889ef	                            mov rdi, rbp	      8375	eval.c	FUNCTION_158	CALL_4
0x4006545	      0xe800000000	                          call 0x400654a	      8375	eval.c	FUNCTION_158	CALL_4
0x400654a	            0x89c7	                            mov edi, eax	      8375	eval.c	FUNCTION_158	CALL_4
0x400654c	      0xe800000000	                          call 0x4006551	      8375	eval.c	FUNCTION_158	CALL_4
0x4006551	          0x4989c4	                            mov r12, rax	      8375	eval.c	FUNCTION_158	CALL_4
0x4006554	      0xe900ffffff	                           jmp 0x4006459	      8375	eval.c	FUNCTION_158	CALL_4
0x4006559	     0xf1f80000000	                         nop dword [rax]	      8375	eval.c	FUNCTION_158	CALL_4
0x4006560	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006565	          0x4889df	                            mov rdi, rbx	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006568	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      8392	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4006570	      0xe800000000	                          call 0x4006575	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006575	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x400657a	          0x4889df	                            mov rdi, rbx	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x400657d	          0x4889c5	                            mov rbp, rax	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006580	      0xe800000000	                          call 0x4006585	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4006585	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006589	            0x85d2	                           test edx, edx	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x400658b	            0x75a5	                           jne 0x4006532	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x400658d	          0x4885c0	                           test rax, rax	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006590	            0x74a0	                            je 0x4006532	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006592	        0x498d7d01	                      lea rdi, [r13 + 1]	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006596	      0xb904000000	                              mov ecx, 4	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x400659b	          0x4889c2	                            mov rdx, rax	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x400659e	          0x4889ee	                            mov rsi, rbp	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x40065a1	      0xe800000000	                          call 0x40065a6	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x40065a6	            0xeb8a	                           jmp 0x4006532	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x40065a8	     0xf1f84000000	                   nop dword [rax + rax]	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x40065b0	    0x4c3b35000000	            cmp r14, qword [0x040065b7] 	      8384	eval.c	FUNCTION_158	IF_3
0x40065b7	     0xf85e9feffff	                           jne 0x40064a6	      8384	eval.c	FUNCTION_158	IF_3
0x40065bd	          0x4531e4	                          xor r12d, r12d	      8384	eval.c	FUNCTION_158	IF_3
0x40065c0	      0xe921ffffff	                           jmp 0x40064e6	      8384	eval.c	FUNCTION_158	IF_3
0x40065c5	      0xe800000000	                          call 0x40065ca	      8415	eval.c	FUNCTION_158
filter_map	DO,0:WHILE,0:FOR,2:ELSE,3:IF,14:SWITCH,0:CALL,26:functions,0	257
0x400ee50	            0x4157	                                push r15	     10232	eval.c	FUNCTION_190
0x400ee52	            0x4156	                                push r14	     10232	eval.c	FUNCTION_190
0x400ee54	            0x4155	                                push r13	     10232	eval.c	FUNCTION_190
0x400ee56	            0x4154	                                push r12	     10232	eval.c	FUNCTION_190
0x400ee58	    0x41bc00000000	                             mov r12d, 0	     10244	eval.c	FUNCTION_190
0x400ee5e	              0x55	                                push rbp	     10232	eval.c	FUNCTION_190
0x400ee5f	              0x53	                                push rbx	     10232	eval.c	FUNCTION_190
0x400ee60	      0xbd00000000	                              mov ebp, 0	     10244	eval.c	FUNCTION_190
0x400ee65	          0x4989fd	                            mov r13, rdi	     10232	eval.c	FUNCTION_190
0x400ee68	            0x89d3	                            mov ebx, edx	     10232	eval.c	FUNCTION_190
0x400ee6a	        0x4883ec68	                           sub rsp, 0x68	     10232	eval.c	FUNCTION_190
0x400ee6e	    0x64488b042528	                mov rax, qword fs:[0x28]	     10232	eval.c	FUNCTION_190
0x400ee77	      0x4889442458	             mov qword [rsp + 0x58], rax	     10232	eval.c	FUNCTION_190
0x400ee7c	            0x31c0	                            xor eax, eax	     10232	eval.c	FUNCTION_190
0x400ee7e	            0x85d2	                           test edx, edx	     10244	eval.c	FUNCTION_190
0x400ee80	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x400ee85	      0x4889742408	                mov qword [rsp + 8], rsi	     10232	eval.c	FUNCTION_190
0x400ee8a	        0x480f45e8	                         cmovne rbp, rax	     10244	eval.c	FUNCTION_190
0x400ee8e	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x400ee93	        0x490f45c4	                         cmovne rax, r12	     10244	eval.c	FUNCTION_190
0x400ee97	        0x48890424	                    mov qword [rsp], rax	     10244	eval.c	FUNCTION_190
0x400ee9b	            0x8b07	                    mov eax, dword [rdi]	     10250	eval.c	FUNCTION_190	IF_1
0x400ee9d	          0x83f805	                              cmp eax, 5	     10250	eval.c	FUNCTION_190	IF_1
0x400eea0	     0xf843a030000	                            je 0x400f1e0	     10250	eval.c	FUNCTION_190	IF_1
0x400eea6	          0x83f806	                              cmp eax, 6	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x400eea9	            0x7445	                            je 0x400eef0	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x400eeab	      0xbe00000000	                              mov esi, 0	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eeb0	            0x31ff	                            xor edi, edi	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eeb2	      0xba05000000	                              mov edx, 5	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eeb7	      0xe800000000	                          call 0x400eebc	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eebc	          0x4889ee	                            mov rsi, rbp	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eebf	          0x4889c7	                            mov rdi, rax	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eec2	      0xe800000000	                          call 0x400eec7	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x400eec7	      0x488b442458	            mov rax, qword [rsp + 0x58] 	     10343	eval.c	FUNCTION_190
0x400eecc	    0x644833042528	                xor rax, qword fs:[0x28]	     10343	eval.c	FUNCTION_190
0x400eed5	     0xf85be030000	                           jne 0x400f299	     10343	eval.c	FUNCTION_190
0x400eedb	        0x4883c468	                           add rsp, 0x68	     10343	eval.c	FUNCTION_190
0x400eedf	              0x5b	                                 pop rbx	     10343	eval.c	FUNCTION_190
0x400eee0	              0x5d	                                 pop rbp	     10343	eval.c	FUNCTION_190
0x400eee1	            0x415c	                                 pop r12	     10343	eval.c	FUNCTION_190
0x400eee3	            0x415d	                                 pop r13	     10343	eval.c	FUNCTION_190
0x400eee5	            0x415e	                                 pop r14	     10343	eval.c	FUNCTION_190
0x400eee7	            0x415f	                                 pop r15	     10343	eval.c	FUNCTION_190
0x400eee9	              0xc3	                                     ret	     10343	eval.c	FUNCTION_190
0x400eeea	    0x660f1f440000	                    nop word [rax + rax]	     10343	eval.c	FUNCTION_190
0x400eef0	        0x4c8b7f08	                mov r15, qword [rdi + 8]	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400eef4	          0x4d85ff	                           test r15, r15	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400eef7	            0x74ce	                            je 0x400eec7	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x400eef9	            0x85d2	                           test edx, edx	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400eefb	    0x48c744241000	               mov qword [rsp + 0x10], 0	     10235	eval.c	FUNCTION_190
0x400ef04	     0xf8456030000	                            je 0x400f260	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400ef0a	        0x458b5510	           mov r10d, dword [r13 + 0x10] 	     10272	eval.c	FUNCTION_190	IF_5
0x400ef0e	          0x4585d2	                         test r10d, r10d	     10272	eval.c	FUNCTION_190	IF_5
0x400ef11	     0xf84af020000	                            je 0x400f1c6	     10272	eval.c	FUNCTION_190	IF_5
0x400ef17	    0x488b05000000	            mov rax, qword [0x0400ef1e] 	       910	eval.c	FUNCTION_21
0x400ef1e	    0x448b0d000000	            mov r9d, dword [0x0400ef25] 	       911	eval.c	FUNCTION_21	IF_1
0x400ef25	      0x4889442420	             mov qword [rsp + 0x20], rax	       910	eval.c	FUNCTION_21
0x400ef2a	    0x488b05000000	            mov rax, qword [0x0400ef31] 	       910	eval.c	FUNCTION_21
0x400ef31	          0x4585c9	                           test r9d, r9d	       911	eval.c	FUNCTION_21	IF_1
0x400ef34	      0x4889442428	             mov qword [rsp + 0x28], rax	       910	eval.c	FUNCTION_21
0x400ef39	     0xf8409030000	                            je 0x400f248	       911	eval.c	FUNCTION_21	IF_1
0x400ef3f	    0x8b0500000000	            mov eax, dword [0x0400ef45] 	     10278	eval.c	FUNCTION_190	IF_5
0x400ef45	    0x448b05000000	            mov r8d, dword [0x0400ef4c] 	       911	eval.c	FUNCTION_21	IF_1
0x400ef4c	    0xc70500000000	               mov dword [0x0400ef56], 0	     10279	eval.c	FUNCTION_190	IF_5
0x400ef56	        0x8944241c	             mov dword [rsp + 0x1c], eax	     10278	eval.c	FUNCTION_190	IF_5
0x400ef5a	    0x488b05000000	            mov rax, qword [0x0400ef61] 	       910	eval.c	FUNCTION_21
0x400ef61	          0x4585c0	                           test r8d, r8d	       911	eval.c	FUNCTION_21	IF_1
0x400ef64	      0x4889442430	             mov qword [rsp + 0x30], rax	       910	eval.c	FUNCTION_21
0x400ef69	    0x488b05000000	            mov rax, qword [0x0400ef70] 	       910	eval.c	FUNCTION_21
0x400ef70	      0x4889442438	             mov qword [rsp + 0x38], rax	       910	eval.c	FUNCTION_21
0x400ef75	     0xf84b5020000	                            je 0x400f230	       911	eval.c	FUNCTION_21	IF_1
0x400ef7b	      0x41837d0006	                      cmp dword [r13], 6	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x400ef80	        0x4d8d7510	                   lea r14, [r13 + 0x10]	     10268	eval.c	FUNCTION_190
0x400ef84	     0xf84ae000000	                            je 0x400f038	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x400ef8a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400ef8f	            0x31ed	                            xor ebp, ebp	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400ef91	    0xc70500000000	               mov dword [0x0400ef9b], 1	     10319	eval.c	FUNCTION_190	IF_5	ELSE_3
0x400ef9b	          0x4c8b38	                    mov r15, qword [rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400ef9e	          0x4d85ff	                           test r15, r15	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efa1	     0xf84c9010000	                            je 0x400f170	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efa7	        0x4c8b2424	                    mov r12, qword [rsp]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efab	        0x4c892c24	                    mov qword [rsp], r13	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efaf	            0xeb17	                           jmp 0x400efc8	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efb1	     0xf1f80000000	                         nop dword [rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efb8	        0x4883c501	                              add rbp, 1	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efbc	          0x4d85ed	                           test r13, r13	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efbf	     0xf845b020000	                            je 0x400f220	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efc5	          0x4d89ef	                            mov r15, r13	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400efc8	            0x85db	                           test ebx, ebx	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efca	            0x741a	                            je 0x400efe6	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efcc	      0x410fbe7f14	           movsx edi, byte [r15 + 0x14] 	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efd1	      0xba01000000	                              mov edx, 1	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efd6	          0x4c89e6	                            mov rsi, r12	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efd9	      0xe800000000	                          call 0x400efde	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efde	            0x85c0	                           test eax, eax	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efe0	     0xf853a020000	                           jne 0x400f220	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x400efe6	        0x498d7f10	                   lea rdi, [r15 + 0x10]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400efea	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400efef	            0x89da	                            mov edx, ebx	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400eff1	          0x4c89f6	                            mov rsi, r14	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400eff4	          0x4d8b2f	                    mov r13, qword [r15]	     10325	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400eff7	    0x48892d000000	            mov qword [0x0400effe], rbp 	     10326	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x400effe	      0xe86d98ffff	                 call sym.filter_map_one	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400f003	            0x85c0	                           test eax, eax	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400f005	     0xf8415020000	                            je 0x400f220	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x400f00b	    0x8b1500000000	            mov edx, dword [0x0400f011] 	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x400f011	            0x85d2	                           test edx, edx	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x400f013	     0xf8507020000	                           jne 0x400f220	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x400f019	            0x85db	                           test ebx, ebx	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400f01b	            0x759b	                           jne 0x400efb8	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400f01d	        0x8b442454	            mov eax, dword [rsp + 0x54] 	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400f021	            0x85c0	                           test eax, eax	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400f023	            0x7493	                            je 0x400efb8	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x400f025	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400f02a	          0x4c89fe	                            mov rsi, r15	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400f02d	      0xe800000000	                          call 0x400f032	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400f032	            0xeb84	                           jmp 0x400efb8	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400f034	         0xf1f4000	                         nop dword [rax]	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x400f038	        0x498d4710	                   lea rax, [r15 + 0x10]	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x400f03c	    0xc70500000000	               mov dword [0x0400f046], 2	     10284	eval.c	FUNCTION_190	IF_5	IF_6
0x400f046	          0x4889c7	                            mov rdi, rax	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x400f049	      0x4889442440	             mov qword [rsp + 0x40], rax	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x400f04e	      0xe800000000	                          call 0x400f053	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x400f053	        0x498b4718	            mov rax, qword [r15 + 0x18] 	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x400f057	        0x498b6f30	            mov rbp, qword [r15 + 0x30] 	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f05b	            0x85c0	                           test eax, eax	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f05d	        0x89442410	             mov dword [rsp + 0x10], eax	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x400f061	     0xf8ef6000000	                           jle 0x400f15d	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f067	      0x4c896c2448	             mov qword [rsp + 0x48], r13	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f06c	         0xf1f4000	                         nop dword [rax]	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f070	        0x4c8b6d08	                mov r13, qword [rbp + 8]	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400f074	    0x4981fd000000	                              cmp r13, 0	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400f07b	     0xf84ef010000	                            je 0x400f270	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400f081	          0x4d85ed	                           test r13, r13	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400f084	     0xf84e6010000	                            je 0x400f270	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x400f08a	      0x836c241001	               sub dword [rsp + 0x10], 1	     10295	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7
0x400f08f	            0x85db	                           test ebx, ebx	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400f091	            0x7438	                            je 0x400f0cb	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400f093	        0x4c8b2424	                    mov r12, qword [rsp]	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400f097	      0x410fbe7df3	             movsx edi, byte [r13 - 0xd]	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400f09c	      0xba01000000	                              mov edx, 1	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400f0a1	          0x4c89e6	                            mov rsi, r12	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400f0a4	      0xe800000000	                          call 0x400f0a9	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x400f0a9	            0x85c0	                           test eax, eax	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400f0ab	     0xf85a7000000	                           jne 0x400f158	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x400f0b1	      0x410fb67dff	               movzx edi, byte [r13 - 1]	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0b6	      0xba01000000	                              mov edx, 1	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0bb	          0x4c89e6	                            mov rsi, r12	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0be	      0xe800000000	                          call 0x400f0c3	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0c3	            0x85c0	                           test eax, eax	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0c5	     0xf858d000000	                           jne 0x400f158	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x400f0cb	          0x4c89ef	                            mov rdi, r13	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400f0ce	        0x4d8d65ef	                   lea r12, [r13 - 0x11]	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400f0d2	      0xe800000000	                          call 0x400f0d7	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400f0d7	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0dc	            0x89da	                            mov edx, ebx	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0de	          0x4c89f6	                            mov rsi, r14	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0e1	          0x4c89e7	                            mov rdi, r12	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0e4	    0x488905000000	            mov qword [0x0400f0eb], rax 	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x400f0eb	      0xe88097ffff	                 call sym.filter_map_one	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0f0	      0xbf00000000	                              mov edi, 0	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x400f0f5	        0x89442418	             mov dword [rsp + 0x18], eax	     10302	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_15
0x400f0f9	      0xe800000000	                          call 0x400f0fe	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x400f0fe	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f102	            0x85c0	                           test eax, eax	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f104	            0x7452	                            je 0x400f158	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f106	    0x8b3d00000000	            mov edi, dword [0x0400f10c] 	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f10c	            0x85ff	                           test edi, edi	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f10e	            0x7548	                           jne 0x400f158	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x400f110	            0x85db	                           test ebx, ebx	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400f112	            0x7534	                           jne 0x400f148	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400f114	        0x8b742454	            mov esi, dword [rsp + 0x54] 	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400f118	            0x85f6	                           test esi, esi	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400f11a	            0x742c	                            je 0x400f148	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x400f11c	      0x410fb67dff	               movzx edi, byte [r13 - 1]	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400f121	        0x40f6c704	                             test dil, 4	      7655	eval.c	FUNCTION_145	IF_1
0x400f125	     0xf854e010000	                           jne 0x400f279	      7655	eval.c	FUNCTION_145	IF_1
0x400f12b	        0x488b3424	                    mov rsi, qword [rsp]	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400f12f	      0xba01000000	                              mov edx, 1	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400f134	      0xe800000000	                          call 0x400f139	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400f139	            0x85c0	                           test eax, eax	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400f13b	            0x751b	                           jne 0x400f158	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x400f13d	          0x4c89e6	                            mov rsi, r12	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400f140	          0x4c89ff	                            mov rdi, r15	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400f143	      0xe800000000	                          call 0x400f148	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x400f148	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f14c	        0x4883c510	                           add rbp, 0x10	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f150	            0x85c9	                           test ecx, ecx	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f152	     0xf8518ffffff	                           jne 0x400f070	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f158	      0x4c8b6c2448	            mov r13, qword [rsp + 0x48] 	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f15d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400f162	      0xe800000000	                          call 0x400f167	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400f167	    0x660f1f840000	                    nop word [rax + rax]	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x400f170	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       924	eval.c	FUNCTION_22
0x400f175	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       924	eval.c	FUNCTION_22
0x400f17a	            0x85d2	                           test edx, edx	       925	eval.c	FUNCTION_22	IF_1
0x400f17c	    0x488915000000	            mov qword [0x0400f183], rdx 	       924	eval.c	FUNCTION_22
0x400f183	    0x488935000000	            mov qword [0x0400f18a], rsi 	       924	eval.c	FUNCTION_22
0x400f18a	            0x750a	                           jne 0x400f196	       925	eval.c	FUNCTION_22	IF_1
0x400f18c	      0xbf23000000	                           mov edi, 0x23	       925	eval.c	FUNCTION_22	IF_1
0x400f191	      0xe86a15ffff	          call sym.restore_vimvar.part.2	       925	eval.c	FUNCTION_22	IF_1
0x400f196	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       924	eval.c	FUNCTION_22
0x400f19b	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       924	eval.c	FUNCTION_22
0x400f1a0	            0x85d2	                           test edx, edx	       925	eval.c	FUNCTION_22	IF_1
0x400f1a2	    0x488915000000	            mov qword [0x0400f1a9], rdx 	       924	eval.c	FUNCTION_22
0x400f1a9	    0x488935000000	            mov qword [0x0400f1b0], rsi 	       924	eval.c	FUNCTION_22
0x400f1b0	            0x750a	                           jne 0x400f1bc	       925	eval.c	FUNCTION_22	IF_1
0x400f1b2	      0xbf22000000	                           mov edi, 0x22	       925	eval.c	FUNCTION_22	IF_1
0x400f1b7	      0xe84415ffff	          call sym.restore_vimvar.part.2	       925	eval.c	FUNCTION_22	IF_1
0x400f1bc	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	     10339	eval.c	FUNCTION_190	IF_5
0x400f1c0	     0x90500000000	              or dword [0x0400f1c6], eax	     10339	eval.c	FUNCTION_190	IF_5
0x400f1c6	      0x488b742408	                mov rsi, qword [rsp + 8]	     10342	eval.c	FUNCTION_190	CALL_26
0x400f1cb	          0x4c89ef	                            mov rdi, r13	     10342	eval.c	FUNCTION_190	CALL_26
0x400f1ce	      0xe800000000	                          call 0x400f1d3	     10342	eval.c	FUNCTION_190	CALL_26
0x400f1d3	      0xe9effcffff	                           jmp 0x400eec7	     10342	eval.c	FUNCTION_190	CALL_26
0x400f1d8	     0xf1f84000000	                   nop dword [rax + rax]	     10342	eval.c	FUNCTION_190	CALL_26
0x400f1e0	        0x488b4708	                mov rax, qword [rdi + 8]	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400f1e4	          0x4885c0	                           test rax, rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400f1e7	      0x4889442410	             mov qword [rsp + 0x10], rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400f1ec	     0xf84d5fcffff	                            je 0x400eec7	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x400f1f2	          0x4531ff	                          xor r15d, r15d	     10239	eval.c	FUNCTION_190
0x400f1f5	            0x85d2	                           test edx, edx	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400f1f7	     0xf850dfdffff	                           jne 0x400ef0a	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400f1fd	         0xfbe7848	           movsx edi, byte [rax + 0x48] 	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x400f201	        0x488b3424	                    mov rsi, qword [rsp]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f205	      0xba01000000	                              mov edx, 1	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f20a	      0xe800000000	                          call 0x400f20f	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f20f	            0x85c0	                           test eax, eax	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f211	     0xf85b0fcffff	                           jne 0x400eec7	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f217	      0xe9eefcffff	                           jmp 0x400ef0a	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f21c	         0xf1f4000	                         nop dword [rax]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f220	        0x4c8b2c24	                    mov r13, qword [rsp]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f224	      0xe947ffffff	                           jmp 0x400f170	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f229	     0xf1f80000000	                         nop dword [rax]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f230	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400f235	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400f23a	      0xe800000000	                          call 0x400f23f	       912	eval.c	FUNCTION_21	CALL_1
0x400f23f	      0xe937fdffff	                           jmp 0x400ef7b	       912	eval.c	FUNCTION_21	CALL_1
0x400f244	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x400f248	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400f24d	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400f252	      0xe800000000	                          call 0x400f257	       912	eval.c	FUNCTION_21	CALL_1
0x400f257	      0xe9e3fcffff	                           jmp 0x400ef3f	       912	eval.c	FUNCTION_21	CALL_1
0x400f25c	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x400f260	        0x410fbe3f	                   movsx edi, byte [r15]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f264	            0xeb9b	                           jmp 0x400f201	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f266	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x400f270	        0x4883c510	                           add rbp, 0x10	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f274	      0xe9f7fdffff	                           jmp 0x400f070	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f279	        0x488b3c24	                    mov rdi, qword [rsp]	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f27d	      0xbe01000000	                              mov esi, 1	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f282	      0xe8d914ffff	         call sym.var_check_fixed.part.7	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x400f287	            0x85c0	                           test eax, eax	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400f289	     0xf85c9feffff	                           jne 0x400f158	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400f28f	      0x410fb67dff	               movzx edi, byte [r13 - 1]	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400f294	      0xe992feffff	                           jmp 0x400f12b	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x400f299	      0xe800000000	                  call section_end..text	     10343	eval.c	FUNCTION_190
