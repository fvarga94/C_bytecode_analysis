trans_characters	ELSE,1:FOR,0:IF,3:WHILE,1:DO,0:CALL,5:functions,0:SWITCH,0	66
0x4000a48	            0x4157	                                push r15	       319	charset.c	FUNCTION_3
0x4000a4a	            0x4156	                                push r14	       319	charset.c	FUNCTION_3
0x4000a4c	            0x4155	                                push r13	       319	charset.c	FUNCTION_3
0x4000a4e	            0x4154	                                push r12	       319	charset.c	FUNCTION_3
0x4000a50	              0x55	                                push rbp	       319	charset.c	FUNCTION_3
0x4000a51	              0x53	                                push rbx	       319	charset.c	FUNCTION_3
0x4000a52	        0x4883ec08	                              sub rsp, 8	       319	charset.c	FUNCTION_3
0x4000a56	          0x4889fd	                            mov rbp, rdi	       319	charset.c	FUNCTION_3
0x4000a59	      0xb800000000	                              mov eax, 0	       325	charset.c	FUNCTION_3	CALL_1
0x4000a5e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       325	charset.c	FUNCTION_3	CALL_1
0x4000a65	            0xf2ae	              repne scasb al, byte [rdi]	       325	charset.c	FUNCTION_3	CALL_1
0x4000a67	          0x48f7d1	                                 not rcx	       325	charset.c	FUNCTION_3	CALL_1
0x4000a6a	        0x4883e901	                              sub rcx, 1	       325	charset.c	FUNCTION_3	CALL_1
0x4000a6e	          0x4189cd	                           mov r13d, ecx	       325	charset.c	FUNCTION_3	CALL_1
0x4000a71	            0x29ce	                            sub esi, ecx	       326	charset.c	FUNCTION_3
0x4000a73	          0x4189f7	                           mov r15d, esi	       326	charset.c	FUNCTION_3
0x4000a76	        0x807d0000	                       cmp byte [rbp], 0	       327	charset.c	FUNCTION_3	WHILE_1
0x4000a7a	     0xf848d000000	                            je 0x4000b0d	       327	charset.c	FUNCTION_3	WHILE_1
0x4000a80	    0x833d00000000	               cmp dword [0x04000a87], 0	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a87	            0x7416	                            je 0x4000a9f	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a89	          0x4889ef	                            mov rdi, rbp	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a8c	    0xff1500000000	                 call qword [0x04000a92]	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a92	          0x4189c4	                           mov r12d, eax	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a95	          0x83f801	                              cmp eax, 1	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a98	            0x7e05	                           jle 0x4000a9f	       331	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a9a	          0x4129c5	                           sub r13d, eax	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a9d	            0xeb5e	                           jmp 0x4000afd	       332	charset.c	FUNCTION_3	WHILE_1	IF_1
0x4000a9f	         0xfb67d00	                   movzx edi, byte [rbp]	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000aa3	      0xe800000000	                          call 0x4000aa8	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000aa8	          0x4989c6	                            mov r14, rax	       336	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_2
0x4000aab	      0xb800000000	                              mov eax, 0	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000ab0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000ab7	          0x4c89f7	                            mov rdi, r14	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000aba	            0xf2ae	              repne scasb al, byte [rdi]	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000abc	          0x4889c8	                            mov rax, rcx	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000abf	          0x48f7d0	                                 not rax	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000ac2	        0x488d58ff	                      lea rbx, [rax - 1]	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000ac6	          0x4189dc	                           mov r12d, ebx	       337	charset.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_3
0x4000ac9	          0x83fb01	                              cmp ebx, 1	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000acc	            0x7e1d	                           jle 0x4000aeb	       338	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000ace	          0x8d43ff	                      lea eax, [rbx - 1]	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000ad1	          0x4129c7	                           sub r15d, eax	       340	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2
0x4000ad4	          0x4585ff	                         test r15d, r15d	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x4000ad7	            0x7e34	                           jle 0x4000b0d	       341	charset.c	FUNCTION_3	WHILE_1	ELSE_1	IF_2	IF_3
0x4000ad9	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_67	CALL_3
0x4000adc	        0x488d7501	                      lea rsi, [rbp + 1]	        59	string3.h	FUNCTION_67	CALL_3
0x4000ae0	          0x4863fb	                         movsxd rdi, ebx	        59	string3.h	FUNCTION_67	CALL_3
0x4000ae3	          0x4801ef	                            add rdi, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x4000ae6	      0xe800000000	                          call 0x4000aeb	        59	string3.h	FUNCTION_67	CALL_3
0x4000aeb	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_67	CALL_3
0x4000aee	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_67	CALL_3
0x4000af1	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x4000af4	      0xe800000000	                          call 0x4000af9	        59	string3.h	FUNCTION_67	CALL_3
0x4000af9	        0x4183ed01	                             sub r13d, 1	       346	charset.c	FUNCTION_3	WHILE_1	ELSE_1
0x4000afd	          0x4d63e4	                        movsxd r12, r12d	       348	charset.c	FUNCTION_3	WHILE_1
0x4000b00	          0x4c01e5	                            add rbp, r12	       348	charset.c	FUNCTION_3	WHILE_1
0x4000b03	        0x807d0000	                       cmp byte [rbp], 0	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b07	     0xf8573ffffff	                           jne 0x4000a80	       327	charset.c	FUNCTION_3	WHILE_1
0x4000b0d	        0x4883c408	                              add rsp, 8	       350	charset.c	FUNCTION_3
0x4000b11	              0x5b	                                 pop rbx	       350	charset.c	FUNCTION_3
0x4000b12	              0x5d	                                 pop rbp	       350	charset.c	FUNCTION_3
0x4000b13	            0x415c	                                 pop r12	       350	charset.c	FUNCTION_3
0x4000b15	            0x415d	                                 pop r13	       350	charset.c	FUNCTION_3
0x4000b17	            0x415e	                                 pop r14	       350	charset.c	FUNCTION_3
0x4000b19	            0x415f	                                 pop r15	       350	charset.c	FUNCTION_3
0x4000b1b	              0xc3	                                     ret	       350	charset.c	FUNCTION_3
win_lbr_chartabsize	ELSE,3:FOR,1:IF,24:WHILE,0:DO,0:CALL,22:functions,0:SWITCH,0	323
0x4000de0	            0x4157	                                push r15	      1047	charset.c	FUNCTION_32
0x4000de2	            0x4156	                                push r14	      1047	charset.c	FUNCTION_32
0x4000de4	            0x4155	                                push r13	      1047	charset.c	FUNCTION_32
0x4000de6	            0x4154	                                push r12	      1047	charset.c	FUNCTION_32
0x4000de8	              0x55	                                push rbp	      1047	charset.c	FUNCTION_32
0x4000de9	              0x53	                                push rbx	      1047	charset.c	FUNCTION_32
0x4000dea	        0x4883ec28	                           sub rsp, 0x28	      1047	charset.c	FUNCTION_32
0x4000dee	          0x4889fb	                            mov rbx, rdi	      1047	charset.c	FUNCTION_32
0x4000df1	      0x4889742408	                mov qword [rsp + 8], rsi	      1047	charset.c	FUNCTION_32
0x4000df6	          0x4989d4	                            mov r12, rdx	      1047	charset.c	FUNCTION_32
0x4000df9	          0x4189cd	                           mov r13d, ecx	      1047	charset.c	FUNCTION_32
0x4000dfc	          0x4d89c6	                             mov r14, r8	      1047	charset.c	FUNCTION_32
0x4000dff	        0x440fb63a	                  movzx r15d, byte [rdx]	      1062	charset.c	FUNCTION_32
0x4000e03	    0x83bf30020000	              cmp dword [rdi + 0x230], 0	      1068	charset.c	FUNCTION_32	IF_1
0x4000e0a	            0x7570	                           jne 0x4000e7c	      1068	charset.c	FUNCTION_32	IF_1
0x4000e0c	    0x83bfb4010000	              cmp dword [rdi + 0x1b4], 0	      1068	charset.c	FUNCTION_32	IF_1
0x4000e13	            0x7567	                           jne 0x4000e7c	      1068	charset.c	FUNCTION_32	IF_1
0x4000e15	    0x488b05000000	            mov rax, qword [0x04000e1c] 	      1068	charset.c	FUNCTION_32	IF_1
0x4000e1c	          0x803800	                       cmp byte [rax], 0	      1068	charset.c	FUNCTION_32	IF_1
0x4000e1f	            0x755b	                           jne 0x4000e7c	      1068	charset.c	FUNCTION_32	IF_1
0x4000e21	    0x83bf94020000	              cmp dword [rdi + 0x294], 0	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4000e28	            0x7413	                            je 0x4000e3d	      1072	charset.c	FUNCTION_32	IF_1	IF_2
0x4000e2a	          0x4c89c1	                             mov rcx, r8	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4000e2d	          0x4489ea	                           mov edx, r13d	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4000e30	          0x4c89e6	                            mov rsi, r12	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4000e33	      0xe807ffffff	          call sym.win_nolbr_chartabsize	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4000e38	      0xe956040000	                           jmp 0x4001293	      1073	charset.c	FUNCTION_32	IF_1	CALL_1
0x4000e3d	        0x4180ff09	                             cmp r15b, 9	      1075	charset.c	FUNCTION_32	IF_1
0x4000e41	            0x752c	                           jne 0x4000e6f	      1075	charset.c	FUNCTION_32	IF_1
0x4000e43	    0x83bf34020000	              cmp dword [rdi + 0x234], 0	      1075	charset.c	FUNCTION_32	IF_1
0x4000e4a	            0x7409	                            je 0x4000e55	      1075	charset.c	FUNCTION_32	IF_1
0x4000e4c	    0x833d00000000	               cmp dword [0x04000e53], 0	      1075	charset.c	FUNCTION_32	IF_1
0x4000e53	            0x741a	                            je 0x4000e6f	      1075	charset.c	FUNCTION_32	IF_1
0x4000e55	        0x488b4308	                mov rax, qword [rbx + 8]	      1075	charset.c	FUNCTION_32	IF_1
0x4000e59	    0x488ba8a81500	          mov rbp, qword [rax + 0x15a8] 	      1075	charset.c	FUNCTION_32	IF_1
0x4000e60	          0x4489e8	                           mov eax, r13d	      1075	charset.c	FUNCTION_32	IF_1
0x4000e63	              0x99	                                     cdq	      1075	charset.c	FUNCTION_32	IF_1
0x4000e64	            0xf7fd	                                idiv ebp	      1075	charset.c	FUNCTION_32	IF_1
0x4000e66	            0x89e8	                            mov eax, ebp	      1075	charset.c	FUNCTION_32	IF_1
0x4000e68	            0x29d0	                            sub eax, edx	      1075	charset.c	FUNCTION_32	IF_1
0x4000e6a	      0xe924040000	                           jmp 0x4001293	      1075	charset.c	FUNCTION_32	IF_1
0x4000e6f	          0x4c89e7	                            mov rdi, r12	      1075	charset.c	FUNCTION_32	IF_1
0x4000e72	      0xe800000000	                          call 0x4000e77	      1075	charset.c	FUNCTION_32	IF_1
0x4000e77	      0xe917040000	                           jmp 0x4001293	      1075	charset.c	FUNCTION_32	IF_1
0x4000e7c	          0x4489ea	                           mov edx, r13d	      1082	charset.c	FUNCTION_32	CALL_2
0x4000e7f	          0x4c89e6	                            mov rsi, r12	      1082	charset.c	FUNCTION_32	CALL_2
0x4000e82	          0x4889df	                            mov rdi, rbx	      1082	charset.c	FUNCTION_32	CALL_2
0x4000e85	      0xe888f7ffff	                call sym.win_chartabsize	      1082	charset.c	FUNCTION_32	CALL_2
0x4000e8a	            0x89c5	                            mov ebp, eax	      1082	charset.c	FUNCTION_32	CALL_2
0x4000e8c	      0x410fb60c24	                   movzx ecx, byte [r12]	      1083	charset.c	FUNCTION_32
0x4000e91	          0x8d50ff	                      lea edx, [rax - 1]	      1085	charset.c	FUNCTION_32	IF_3
0x4000e94	        0x4180ff09	                             cmp r15b, 9	      1085	charset.c	FUNCTION_32	IF_3
0x4000e98	      0xb800000000	                              mov eax, 0	      1085	charset.c	FUNCTION_32	IF_3
0x4000e9d	           0xf44c2	                          cmove eax, edx	      1085	charset.c	FUNCTION_32	IF_3
0x4000ea0	          0x4189c7	                           mov r15d, eax	      1085	charset.c	FUNCTION_32	IF_3
0x4000ea3	    0x83bb30020000	              cmp dword [rbx + 0x230], 0	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4000eaa	     0xf841d010000	                            je 0x4000fcd	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4000eb0	          0x4863c1	                         movsxd rax, ecx	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4000eb3	    0x80b800000000	                       cmp byte [rax], 0	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4000eba	     0xf840d010000	                            je 0x4000fcd	      1092	charset.c	FUNCTION_32	IF_4	CALL_3
0x4000ec0	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4000ec6	    0x80b800000000	                       cmp byte [rax], 0	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4000ecd	     0xf85fa000000	                           jne 0x4000fcd	      1093	charset.c	FUNCTION_32	IF_4	CALL_4
0x4000ed3	    0x83bb94020000	              cmp dword [rbx + 0x294], 0	      1094	charset.c	FUNCTION_32	IF_4
0x4000eda	     0xf84ed000000	                            je 0x4000fcd	      1094	charset.c	FUNCTION_32	IF_4
0x4000ee0	    0x83bbac000000	               cmp dword [rbx + 0xac], 0	      1095	charset.c	FUNCTION_32	IF_4
0x4000ee7	     0xf84e0000000	                            je 0x4000fcd	      1095	charset.c	FUNCTION_32	IF_4
0x4000eed	          0x4889df	                            mov rdi, rbx	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4000ef0	      0xe800000000	                          call 0x4000ef5	      1101	charset.c	FUNCTION_32	IF_4	CALL_5
0x4000ef5	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      1103	charset.c	FUNCTION_32	IF_4
0x4000efb	            0x29c7	                            sub edi, eax	      1103	charset.c	FUNCTION_32	IF_4
0x4000efd	        0x897c2410	             mov dword [rsp + 0x10], edi	      1103	charset.c	FUNCTION_32	IF_4
0x4000f01	          0x4429ff	                           sub edi, r15d	      1103	charset.c	FUNCTION_32	IF_4
0x4000f04	        0x897c241c	             mov dword [rsp + 0x1c], edi	      1103	charset.c	FUNCTION_32	IF_4
0x4000f08	          0x4139fd	                           cmp r13d, edi	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4000f0b	            0x7c2e	                            jl 0x4000f3b	      1104	charset.c	FUNCTION_32	IF_4	IF_5
0x4000f0d	          0x4889df	                            mov rdi, rbx	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4000f10	      0xe800000000	                          call 0x4000f15	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4000f15	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4000f19	          0x8d0c07	                    lea ecx, [rdi + rax]	      1107	charset.c	FUNCTION_32	IF_4	IF_5	CALL_6
0x4000f1c	        0x897c241c	             mov dword [rsp + 0x1c], edi	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4000f20	            0x85c9	                           test ecx, ecx	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f22	            0x7e17	                           jle 0x4000f3b	      1108	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f24	          0x4489e8	                           mov eax, r13d	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f27	            0x29f8	                            sub eax, edi	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f29	              0x99	                                     cdq	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f2a	            0xf7f9	                                idiv ecx	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f2c	          0x83c001	                              add eax, 1	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f2f	           0xfafc1	                           imul eax, ecx	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f32	          0x4429f8	                           sub eax, r15d	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f35	             0x1f8	                            add eax, edi	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f37	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1109	charset.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4000f3b	      0x44896c2418	            mov dword [rsp + 0x18], r13d	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4000f40	            0xeb05	                           jmp 0x4000f47	      1106	charset.c	FUNCTION_32	IF_4	IF_5
0x4000f42	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f47	      0xb801000000	                              mov eax, 1	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f4c	    0x833d00000000	               cmp dword [0x04000f53], 0	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f53	            0x7409	                            je 0x4000f5e	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f55	          0x4c89e7	                            mov rdi, r12	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f58	    0xff1500000000	                 call qword [0x04000f5e]	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f5e	            0x4898	                                    cdqe	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f60	          0x4c01e0	                            add rax, r12	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f63	      0x4889442410	             mov qword [rsp + 0x10], rax	      1115	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_7
0x4000f68	           0xfb600	                   movzx eax, byte [rax]	      1116	charset.c	FUNCTION_32	IF_4	FOR_1
0x4000f6b	            0x85c0	                           test eax, eax	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4000f6d	     0xf84a1000000	                            je 0x4001014	      1117	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7
0x4000f73	            0x4898	                                    cdqe	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4000f75	    0x80b800000000	                       cmp byte [rax], 0	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4000f7c	            0x7519	                           jne 0x4000f97	      1118	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_8
0x4000f7e	      0x44396c2418	           cmp dword [rsp + 0x18], r13d 	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4000f83	            0x7412	                            je 0x4000f97	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4000f85	      0x410fb60424	                   movzx eax, byte [r12]	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4000f8a	    0x80b800000000	                       cmp byte [rax], 0	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4000f91	     0xf8585000000	                           jne 0x400101c	      1120	charset.c	FUNCTION_32	IF_4	FOR_1	IF_7	CALL_10
0x4000f97	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000f9c	          0x4489e2	                           mov edx, r12d	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000f9f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000fa4	          0x4889df	                            mov rdi, rbx	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000fa7	      0xe866f6ffff	                call sym.win_chartabsize	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000fac	          0x4489e6	                           mov esi, r12d	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000faf	             0x1c6	                            add esi, eax	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000fb1	        0x89742418	             mov dword [rsp + 0x18], esi	      1123	charset.c	FUNCTION_32	IF_4	FOR_1	CALL_11
0x4000fb5	        0x3974241c	            cmp dword [rsp + 0x1c], esi 	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fb9	            0x7f87	                            jg 0x4000f42	      1124	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fbb	        0x8b6c241c	            mov ebp, dword [rsp + 0x1c] 	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fbf	          0x4429ed	                           sub ebp, r13d	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fc2	          0x4401fd	                           add ebp, r15d	      1126	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fc5	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x4000fcb	            0xeb65	                           jmp 0x4001032	      1128	charset.c	FUNCTION_32	IF_4	FOR_1	IF_8
0x4000fcd	    0x833d00000000	               cmp dword [0x04000fd4], 0	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fd4	            0x744e	                            je 0x4001024	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fd6	          0x83fd02	                              cmp ebp, 2	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fd9	            0x7549	                           jne 0x4001024	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fdb	          0x4863c9	                         movsxd rcx, ecx	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fde	    0x80b900000000	                       cmp byte [rcx], 1	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fe5	            0x7e45	                           jle 0x400102c	      1133	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_12
0x4000fe7	    0x83bb94020000	              cmp dword [rbx + 0x294], 0	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4000fee	     0xf846a020000	                            je 0x400125e	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4000ff4	          0x4489ee	                           mov esi, r13d	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4000ff7	          0x4889df	                            mov rdi, rbx	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4000ffa	      0xe800000000	                          call 0x4000fff	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4000fff	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x4001005	            0x85c0	                           test eax, eax	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001007	            0x7429	                            je 0x4001032	      1134	charset.c	FUNCTION_32	ELSE_1	IF_9	CALL_13
0x4001009	          0x83c501	                              add ebp, 1	      1136	charset.c	FUNCTION_32	ELSE_1	IF_9
0x400100c	    0x41bf01000000	                             mov r15d, 1	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001012	            0xeb1e	                           jmp 0x4001032	      1137	charset.c	FUNCTION_32	ELSE_1	IF_9
0x4001014	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x400101a	            0xeb16	                           jmp 0x4001032	      1056	charset.c	FUNCTION_32
0x400101c	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x4001022	            0xeb0e	                           jmp 0x4001032	      1056	charset.c	FUNCTION_32
0x4001024	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x400102a	            0xeb06	                           jmp 0x4001032	      1056	charset.c	FUNCTION_32
0x400102c	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x4001032	    0x488b05000000	            mov rax, qword [0x04001039] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001039	          0x803800	                       cmp byte [rax], 0	      1147	charset.c	FUNCTION_32	IF_10
0x400103c	            0x7513	                           jne 0x4001051	      1147	charset.c	FUNCTION_32	IF_10
0x400103e	    0x41bc00000000	                             mov r12d, 0	      1146	charset.c	FUNCTION_32
0x4001044	    0x83bbb4010000	              cmp dword [rbx + 0x1b4], 0	      1147	charset.c	FUNCTION_32	IF_10
0x400104b	     0xf84fa010000	                            je 0x400124b	      1147	charset.c	FUNCTION_32	IF_10
0x4001051	    0x83bb94020000	              cmp dword [rbx + 0x294], 0	      1147	charset.c	FUNCTION_32	IF_10
0x4001058	     0xf84d9010000	                            je 0x4001237	      1147	charset.c	FUNCTION_32	IF_10
0x400105e	          0x4585ed	                         test r13d, r13d	      1147	charset.c	FUNCTION_32	IF_10
0x4001061	     0xf84d0010000	                            je 0x4001237	      1147	charset.c	FUNCTION_32	IF_10
0x4001067	          0x4889df	                            mov rdi, rbx	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x400106a	      0xe800000000	                          call 0x400106f	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x400106f	        0x89442418	             mov dword [rsp + 0x18], eax	      1150	charset.c	FUNCTION_32	IF_10	CALL_14
0x4001073	          0x4401f8	                           add eax, r15d	      1153	charset.c	FUNCTION_32	IF_10
0x4001076	          0x4101c5	                           add r13d, eax	      1153	charset.c	FUNCTION_32	IF_10
0x4001079	    0x448ba3ac0000	           mov r12d, dword [rbx + 0xac] 	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001080	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1149	charset.c	FUNCTION_32	IF_10
0x4001088	          0x4539e5	                          cmp r13d, r12d	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x400108b	     0xf8cd0000000	                            jl 0x4001161	      1154	charset.c	FUNCTION_32	IF_10	IF_11
0x4001091	          0x4529e5	                          sub r13d, r12d	      1156	charset.c	FUNCTION_32	IF_10	IF_11
0x4001094	          0x4889df	                            mov rdi, rbx	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x4001097	      0xe800000000	                          call 0x400109c	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x400109c	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x40010a0	            0x29c7	                            sub edi, eax	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x40010a2	          0x4129fc	                           sub r12d, edi	      1157	charset.c	FUNCTION_32	IF_10	IF_11	CALL_15
0x40010a5	          0x4585e4	                         test r12d, r12d	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010a8	       0xf9f44241c	                  setg byte [rsp + 0x1c]	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010ad	       0xfb644241c	           movzx eax, byte [rsp + 0x1c] 	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010b2	          0x4539e5	                          cmp r13d, r12d	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010b5	     0xf8cbb010000	                            jl 0x4001276	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010bb	            0x84c0	                             test al, al	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010bd	     0xf84b3010000	                            je 0x4001276	      1158	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010c3	          0x4489e8	                           mov eax, r13d	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010c6	              0x99	                                     cdq	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010c7	          0x41f7fc	                               idiv r12d	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010ca	          0x4189d5	                           mov r13d, edx	      1159	charset.c	FUNCTION_32	IF_10	IF_11	IF_12
0x40010cd	    0x488b3d000000	            mov rdi, qword [0x040010d4] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x40010d4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1149	charset.c	FUNCTION_32	IF_10
0x40010dc	          0x803f00	                       cmp byte [rdi], 0	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x40010df	            0x743f	                            je 0x4001120	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x40010e1	    0x833d00000000	               cmp dword [0x040010e8], 0	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010e8	            0x740b	                            je 0x40010f5	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010ea	      0xe800000000	                          call 0x40010ef	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010ef	        0x89442410	             mov dword [rsp + 0x10], eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010f3	            0xeb1b	                           jmp 0x4001110	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010f5	      0xb800000000	                              mov eax, 0	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x40010fa	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001101	            0xf2ae	              repne scasb al, byte [rdi]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001103	          0x4889c8	                            mov rax, rcx	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001106	          0x48f7d0	                                 not rax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001109	          0x8d40ff	                      lea eax, [rax - 1]	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x400110c	        0x89442410	             mov dword [rsp + 0x10], eax	      1162	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	CALL_16
0x4001110	          0x4489e8	                           mov eax, r13d	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001113	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001117	            0x29c8	                            sub eax, ecx	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001119	          0x4439e9	                           cmp ecx, r13d	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x400111c	        0x440f4ee8	                        cmovle r13d, eax	      1164	charset.c	FUNCTION_32	IF_10	IF_11	IF_13	IF_14
0x4001120	          0x4539e5	                          cmp r13d, r12d	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001123	            0x7c13	                            jl 0x4001138	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001125	      0x807c241c00	                cmp byte [rsp + 0x1c], 0	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x400112a	            0x740c	                            je 0x4001138	      1166	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x400112c	          0x4489e8	                           mov eax, r13d	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x400112f	              0x99	                                     cdq	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001130	          0x41f7fc	                               idiv r12d	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001133	          0x4189d5	                           mov r13d, edx	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001136	            0xeb1d	                           jmp 0x4001155	      1167	charset.c	FUNCTION_32	IF_10	IF_11	IF_15
0x4001138	          0x4585ed	                         test r13d, r13d	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400113b	            0x7e18	                           jle 0x4001155	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400113d	      0x807c241c00	                cmp byte [rsp + 0x1c], 0	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001142	            0x7411	                            je 0x4001155	      1168	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001144	          0x4889df	                            mov rdi, rbx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001147	      0xe800000000	                          call 0x400114c	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x400114c	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001150	            0x29c1	                            sub ecx, eax	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001152	          0x4101cd	                           add r13d, ecx	      1169	charset.c	FUNCTION_32	IF_10	IF_11	ELSE_2	IF_16
0x4001155	          0x4889df	                            mov rdi, rbx	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001158	      0xe800000000	                          call 0x400115d	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x400115d	        0x29442418	             sub dword [rsp + 0x18], eax	      1171	charset.c	FUNCTION_32	IF_10	IF_11	CALL_18
0x4001161	          0x4585ed	                         test r13d, r13d	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001164	            0x741b	                            je 0x4001181	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001166	      0x418d442d00	                    lea eax, [r13 + rbp]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400116b	         0x3442410	             add eax, dword [rsp + 0x10]	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400116f	    0x41bc00000000	                             mov r12d, 0	      1146	charset.c	FUNCTION_32
0x4001175	    0x3b83ac000000	            cmp eax, dword [rbx + 0xac] 	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x400117b	     0xf8eca000000	                           jle 0x400124b	      1173	charset.c	FUNCTION_32	IF_10	IF_17
0x4001181	    0x488b3d000000	            mov rdi, qword [0x04001188] 	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001188	    0x41bc00000000	                             mov r12d, 0	      1175	charset.c	FUNCTION_32	IF_10	IF_17
0x400118e	          0x803f00	                       cmp byte [rdi], 0	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001191	            0x747a	                            je 0x400120d	      1176	charset.c	FUNCTION_32	IF_10	IF_17	IF_18
0x4001193	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x4001199	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x400119d	            0x89f0	                            mov eax, esi	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x400119f	             0x1e8	                            add eax, ebp	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011a1	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011a6	          0x4401c8	                            add eax, r9d	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011a9	            0x39c8	                            cmp eax, ecx	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011ab	            0x7e58	                           jle 0x4001205	      1178	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011ad	            0x89ca	                            mov edx, ecx	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011af	            0x29f2	                            sub edx, esi	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011b1	          0x4429ca	                            sub edx, r9d	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011b4	          0x4189d2	                           mov r10d, edx	      1181	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011b7	      0xb800000000	                              mov eax, 0	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011bc	          0x4585ed	                         test r13d, r13d	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011bf	            0x740b	                            je 0x40011cc	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011c1	            0x89f0	                            mov eax, esi	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011c3	          0x4401e8	                           add eax, r13d	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011c6	            0x89ce	                            mov esi, ecx	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011c8	            0x29c6	                            sub esi, eax	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011ca	            0x89f0	                            mov eax, esi	      1182	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19
0x40011cc	          0x4585d2	                         test r10d, r10d	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40011cf	        0x440f44d1	                         cmove r10d, ecx	      1184	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_20
0x40011d3	            0x89e9	                            mov ecx, ebp	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011d5	            0x29c1	                            sub ecx, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011d7	            0x89c8	                            mov eax, ecx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011d9	              0x99	                                     cdq	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011da	          0x41f7fa	                               idiv r10d	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011dd	        0x89542410	             mov dword [rsp + 0x10], edx	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011e1	          0x4189c4	                           mov r12d, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011e4	      0xe800000000	                          call 0x40011e9	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011e9	        0x440fafe0	                          imul r12d, eax	      1185	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_19
0x40011ed	      0x837c241000	               cmp dword [rsp + 0x10], 0	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x40011f2	            0x7419	                            je 0x400120d	      1186	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	IF_21
0x40011f4	    0x488b3d000000	            mov rdi, qword [0x040011fb] 	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x40011fb	      0xe800000000	                          call 0x4001200	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001200	          0x4101c4	                           add r12d, eax	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001203	            0xeb08	                           jmp 0x400120d	      1188	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	IF_19	CALL_20
0x4001205	      0xe800000000	                          call 0x400120a	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x400120a	          0x4189c4	                           mov r12d, eax	      1191	charset.c	FUNCTION_32	IF_10	IF_17	IF_18	CALL_21
0x400120d	    0x83bbb4010000	              cmp dword [rbx + 0x1b4], 0	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4001214	            0x7410	                            je 0x4001226	      1193	charset.c	FUNCTION_32	IF_10	IF_17	IF_22
0x4001216	      0x488b742408	                mov rsi, qword [rsp + 8]	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400121b	          0x4889df	                            mov rdi, rbx	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x400121e	      0xe800000000	                          call 0x4001223	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4001223	          0x4101c4	                           add r12d, eax	      1194	charset.c	FUNCTION_32	IF_10	IF_17	CALL_22
0x4001226	          0x4401e5	                           add ebp, r12d	      1196	charset.c	FUNCTION_32	IF_10	IF_17
0x4001229	          0x4585ed	                         test r13d, r13d	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x400122c	      0xb800000000	                              mov eax, 0	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001231	        0x440f45e0	                        cmovne r12d, eax	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001235	            0xeb14	                           jmp 0x400124b	      1198	charset.c	FUNCTION_32	IF_10	IF_17	IF_23
0x4001237	    0x41bc00000000	                             mov r12d, 0	      1146	charset.c	FUNCTION_32
0x400123d	            0xeb0c	                           jmp 0x400124b	      1146	charset.c	FUNCTION_32
0x400123f	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x4001245	    0x41bc00000000	                             mov r12d, 0	      1146	charset.c	FUNCTION_32
0x400124b	          0x4d85f6	                           test r14, r14	      1201	charset.c	FUNCTION_32	IF_24
0x400124e	            0x740a	                            je 0x400125a	      1201	charset.c	FUNCTION_32	IF_24
0x4001250	          0x4501fc	                          add r12d, r15d	      1202	charset.c	FUNCTION_32	IF_24
0x4001253	          0x458926	                   mov dword [r14], r12d	      1202	charset.c	FUNCTION_32	IF_24
0x4001256	            0x89e8	                            mov eax, ebp	      1203	charset.c	FUNCTION_32
0x4001258	            0xeb39	                           jmp 0x4001293	      1203	charset.c	FUNCTION_32
0x400125a	            0x89e8	                            mov eax, ebp	      1203	charset.c	FUNCTION_32
0x400125c	            0xeb35	                           jmp 0x4001293	      1203	charset.c	FUNCTION_32
0x400125e	    0x488b05000000	            mov rax, qword [0x04001265] 	      1147	charset.c	FUNCTION_32	IF_10
0x4001265	    0x41bf00000000	                             mov r15d, 0	      1056	charset.c	FUNCTION_32
0x400126b	          0x803800	                       cmp byte [rax], 0	      1147	charset.c	FUNCTION_32	IF_10
0x400126e	     0xf84cafdffff	                            je 0x400103e	      1147	charset.c	FUNCTION_32	IF_10
0x4001274	            0xebc9	                           jmp 0x400123f	      1147	charset.c	FUNCTION_32	IF_10
0x4001276	    0x488b3d000000	            mov rdi, qword [0x0400127d] 	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x400127d	          0x803f00	                       cmp byte [rdi], 0	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001280	     0xf855bfeffff	                           jne 0x40010e1	      1160	charset.c	FUNCTION_32	IF_10	IF_11	IF_13
0x4001286	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1149	charset.c	FUNCTION_32	IF_10
0x400128e	      0xe9a5feffff	                           jmp 0x4001138	      1149	charset.c	FUNCTION_32	IF_10
0x4001293	        0x4883c428	                           add rsp, 0x28	      1205	charset.c	FUNCTION_32
0x4001297	              0x5b	                                 pop rbx	      1205	charset.c	FUNCTION_32
0x4001298	              0x5d	                                 pop rbp	      1205	charset.c	FUNCTION_32
0x4001299	            0x415c	                                 pop r12	      1205	charset.c	FUNCTION_32
0x400129b	            0x415d	                                 pop r13	      1205	charset.c	FUNCTION_32
0x400129d	            0x415e	                                 pop r14	      1205	charset.c	FUNCTION_32
0x400129f	            0x415f	                                 pop r15	      1205	charset.c	FUNCTION_32
0x40012a1	              0xc3	                                     ret	      1205	charset.c	FUNCTION_32
getwhitecols_curline	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	6
0x4001ae8	        0x4883ec08	                              sub rsp, 8	      1544	charset.c	FUNCTION_40
0x4001aec	      0xe800000000	                          call 0x4001af1	      1545	charset.c	FUNCTION_40	CALL_2
0x4001af1	          0x4889c7	                            mov rdi, rax	      1545	charset.c	FUNCTION_40	CALL_2
0x4001af4	      0xe800000000	                          call 0x4001af9	      1545	charset.c	FUNCTION_40	CALL_2
0x4001af9	        0x4883c408	                              add rsp, 8	      1546	charset.c	FUNCTION_40
0x4001afd	              0xc3	                                     ret	      1546	charset.c	FUNCTION_40
transstr	ELSE,6:FOR,0:IF,7:WHILE,2:DO,0:CALL,13:functions,0:SWITCH,0	122
0x4000b1c	            0x4157	                                push r15	       360	charset.c	FUNCTION_4
0x4000b1e	            0x4156	                                push r14	       360	charset.c	FUNCTION_4
0x4000b20	            0x4155	                                push r13	       360	charset.c	FUNCTION_4
0x4000b22	            0x4154	                                push r12	       360	charset.c	FUNCTION_4
0x4000b24	              0x55	                                push rbp	       360	charset.c	FUNCTION_4
0x4000b25	              0x53	                                push rbx	       360	charset.c	FUNCTION_4
0x4000b26	        0x4883ec28	                           sub rsp, 0x28	       360	charset.c	FUNCTION_4
0x4000b2a	          0x4889fb	                            mov rbx, rdi	       360	charset.c	FUNCTION_4
0x4000b2d	    0x64488b042528	                mov rax, qword fs:[0x28]	       360	charset.c	FUNCTION_4
0x4000b36	      0x4889442418	             mov qword [rsp + 0x18], rax	       360	charset.c	FUNCTION_4
0x4000b3b	            0x31c0	                            xor eax, eax	       360	charset.c	FUNCTION_4
0x4000b3d	    0x833d00000000	               cmp dword [0x04000b44], 0	       369	charset.c	FUNCTION_4	IF_1
0x4000b44	     0xf8581000000	                           jne 0x4000bcb	       369	charset.c	FUNCTION_4	IF_1
0x4000b4a	      0xe9a0000000	                           jmp 0x4000bef	       369	charset.c	FUNCTION_4	IF_1
0x4000b4f	          0x4889ef	                            mov rdi, rbp	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b52	    0xff1500000000	                 call qword [0x04000b58]	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b58	          0x4189c4	                           mov r12d, eax	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b5b	          0x83f801	                              cmp eax, 1	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b5e	            0x7e49	                           jle 0x4000ba9	       377	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b60	          0x4889ef	                            mov rdi, rbp	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b63	    0xff1500000000	                 call qword [0x04000b69]	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b69	          0x4189c6	                           mov r14d, eax	       379	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b6c	          0x4963c4	                        movsxd rax, r12d	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b6f	          0x4801c5	                            add rbp, rax	       380	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x4000b72	          0x4489f7	                           mov edi, r14d	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000b75	      0xe800000000	                          call 0x4000b7a	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000b7a	            0x85c0	                           test eax, eax	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000b7c	            0x7405	                            je 0x4000b83	       381	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3	CALL_1
0x4000b7e	          0x4501e5	                          add r13d, r12d	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000b81	            0xeb54	                           jmp 0x4000bd7	       382	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x4000b83	          0x4489f6	                           mov esi, r14d	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000b86	          0x4c89ff	                            mov rdi, r15	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000b89	      0xe800000000	                          call 0x4000b8e	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000b8e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000b95	          0x4c89ff	                            mov rdi, r15	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000b98	      0xb800000000	                              mov eax, 0	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000b9d	            0xf2ae	              repne scasb al, byte [rdi]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000b9f	          0x48f7d1	                                 not rcx	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000ba2	      0x458d6c0dff	               lea r13d, [r13 + rcx - 1]	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000ba7	            0xeb2e	                           jmp 0x4000bd7	       386	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_3
0x4000ba9	        0x4c8d6501	                      lea r12, [rbp + 1]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bad	         0xfb67d00	                   movzx edi, byte [rbp]	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bb1	      0xe800000000	                          call 0x4000bb6	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bb6	            0x85c0	                           test eax, eax	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000bb8	            0x7e08	                           jle 0x4000bc2	       392	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000bba	          0x4101c5	                           add r13d, eax	       393	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	IF_4
0x4000bbd	          0x4c89e5	                            mov rbp, r12	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bc0	            0xeb15	                           jmp 0x4000bd7	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bc2	        0x4183c504	                             add r13d, 4	       395	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	ELSE_3
0x4000bc6	          0x4c89e5	                            mov rbp, r12	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bc9	            0xeb0c	                           jmp 0x4000bd7	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bcb	          0x4889fd	                            mov rbp, rdi	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bce	    0x41bd00000000	                             mov r13d, 0	       391	charset.c	FUNCTION_4	IF_1	WHILE_1	ELSE_2	CALL_4
0x4000bd4	          0x4989e7	                            mov r15, rsp	       385	charset.c	FUNCTION_4	IF_1	WHILE_1	IF_2	ELSE_1	CALL_2
0x4000bd7	        0x807d0000	                       cmp byte [rbp], 0	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000bdb	     0xf856effffff	                           jne 0x4000b4f	       375	charset.c	FUNCTION_4	IF_1	WHILE_1
0x4000be1	        0x418d7d01	                      lea edi, [r13 + 1]	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000be5	      0xe800000000	                          call 0x4000bea	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000bea	          0x4989c4	                            mov r12, rax	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000bed	            0xeb10	                           jmp 0x4000bff	       398	charset.c	FUNCTION_4	IF_1	CALL_5
0x4000bef	      0xe800000000	                          call 0x4000bf4	       402	charset.c	FUNCTION_4	CALL_7
0x4000bf4	          0x8d7801	                      lea edi, [rax + 1]	       402	charset.c	FUNCTION_4	CALL_7
0x4000bf7	      0xe800000000	                          call 0x4000bfc	       402	charset.c	FUNCTION_4	CALL_7
0x4000bfc	          0x4989c4	                            mov r12, rax	       402	charset.c	FUNCTION_4	CALL_7
0x4000bff	          0x4d85e4	                           test r12, r12	       403	charset.c	FUNCTION_4	IF_5
0x4000c02	     0xf849c000000	                            je 0x4000ca4	       403	charset.c	FUNCTION_4	IF_5
0x4000c08	      0x41c6042400	                       mov byte [r12], 0	       405	charset.c	FUNCTION_4	IF_5
0x4000c0d	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c14	      0xe982000000	                           jmp 0x4000c9b	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000c19	    0x833d00000000	               cmp dword [0x04000c20], 0	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c20	            0x745f	                            je 0x4000c81	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c22	          0x4889df	                            mov rdi, rbx	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c25	    0xff1500000000	                 call qword [0x04000c2b]	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c2b	            0x89c5	                            mov ebp, eax	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c2d	          0x83f801	                              cmp eax, 1	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c30	            0x7e4f	                           jle 0x4000c81	       410	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c32	          0x4889df	                            mov rdi, rbx	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c35	    0xff1500000000	                 call qword [0x04000c3b]	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c3b	          0x4189c6	                           mov r14d, eax	       412	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c3e	            0x89c7	                            mov edi, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000c40	      0xe800000000	                          call 0x4000c45	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000c45	            0x85c0	                           test eax, eax	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000c47	            0x7410	                            je 0x4000c59	       413	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	IF_7	CALL_8
0x4000c49	          0x4863d5	                         movsxd rdx, ebp	       156	string3.h	FUNCTION_77	CALL_3
0x4000c4c	          0x4889de	                            mov rsi, rbx	       156	string3.h	FUNCTION_77	CALL_3
0x4000c4f	          0x4c89e7	                            mov rdi, r12	       156	string3.h	FUNCTION_77	CALL_3
0x4000c52	      0xe800000000	                          call 0x4000c57	       156	string3.h	FUNCTION_77	CALL_3
0x4000c57	            0xeb20	                           jmp 0x4000c79	       156	string3.h	FUNCTION_77	CALL_3
0x4000c59	      0xb800000000	                              mov eax, 0	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c5e	          0x4c89e9	                            mov rcx, r13	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c61	          0x4c89e7	                            mov rdi, r12	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c64	            0xf2ae	              repne scasb al, byte [rdi]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c66	          0x4889c8	                            mov rax, rcx	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c69	          0x48f7d0	                                 not rax	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c6c	      0x498d7c04ff	                lea rdi, [r12 + rax - 1]	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c71	          0x4489f6	                           mov esi, r14d	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c74	      0xe800000000	                          call 0x4000c79	       416	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6	CALL_11
0x4000c79	          0x4863ed	                         movsxd rbp, ebp	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c7c	          0x4801eb	                            add rbx, rbp	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c7f	            0xeb1a	                           jmp 0x4000c9b	       417	charset.c	FUNCTION_4	IF_5	WHILE_2	IF_6
0x4000c81	        0x488d6b01	                      lea rbp, [rbx + 1]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000c85	           0xfb63b	                   movzx edi, byte [rbx]	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000c88	      0xe800000000	                          call 0x4000c8d	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000c8d	          0x4889c6	                            mov rsi, rax	       148	string3.h	FUNCTION_76	CALL_3
0x4000c90	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_76	CALL_3
0x4000c93	      0xe800000000	                          call 0x4000c98	       148	string3.h	FUNCTION_76	CALL_3
0x4000c98	          0x4889eb	                            mov rbx, rbp	       421	charset.c	FUNCTION_4	IF_5	WHILE_2	CALL_13
0x4000c9b	          0x803b00	                       cmp byte [rbx], 0	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000c9e	     0xf8575ffffff	                           jne 0x4000c19	       407	charset.c	FUNCTION_4	IF_5	WHILE_2
0x4000ca4	          0x4c89e0	                            mov rax, r12	       425	charset.c	FUNCTION_4
0x4000ca7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       425	charset.c	FUNCTION_4
0x4000cac	    0x644833142528	                xor rdx, qword fs:[0x28]	       425	charset.c	FUNCTION_4
0x4000cb5	            0x7405	                            je 0x4000cbc	       425	charset.c	FUNCTION_4
0x4000cb7	      0xe800000000	                          call 0x4000cbc	       425	charset.c	FUNCTION_4
0x4000cbc	        0x4883c428	                           add rsp, 0x28	       425	charset.c	FUNCTION_4
0x4000cc0	              0x5b	                                 pop rbx	       425	charset.c	FUNCTION_4
0x4000cc1	              0x5d	                                 pop rbp	       425	charset.c	FUNCTION_4
0x4000cc2	            0x415c	                                 pop r12	       425	charset.c	FUNCTION_4
0x4000cc4	            0x415d	                                 pop r13	       425	charset.c	FUNCTION_4
0x4000cc6	            0x415e	                                 pop r14	       425	charset.c	FUNCTION_4
0x4000cc8	            0x415f	                                 pop r15	       425	charset.c	FUNCTION_4
0x4000cca	              0xc3	                                     ret	       425	charset.c	FUNCTION_4
char2cells	ELSE,0:FOR,0:IF,5:WHILE,0:DO,0:CALL,4:functions,0:SWITCH,0	37
0x4000564	        0x4883ec08	                              sub rsp, 8	       733	charset.c	FUNCTION_12
0x4000568	            0x85ff	                           test edi, edi	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x400056a	            0x791f	                           jns 0x400058b	       734	charset.c	FUNCTION_12	IF_1	CALL_1
0x400056c	    0x81ff80000000	                           cmp edi, 0x80	       735	charset.c	FUNCTION_12	CALL_3
0x4000572	            0x7408	                            je 0x400057c	       735	charset.c	FUNCTION_12	CALL_3
0x4000574	            0xf7df	                                 neg edi	       735	charset.c	FUNCTION_12	CALL_3
0x4000576	        0x400fb6ff	                          movzx edi, dil	       735	charset.c	FUNCTION_12	CALL_3
0x400057a	            0xeb05	                           jmp 0x4000581	       735	charset.c	FUNCTION_12	CALL_3
0x400057c	      0xbffe000000	                           mov edi, 0xfe	       735	charset.c	FUNCTION_12	CALL_3
0x4000581	      0xe800000000	                          call 0x4000586	       735	charset.c	FUNCTION_12	CALL_3
0x4000586	          0x83c002	                              add eax, 2	       735	charset.c	FUNCTION_12	CALL_3
0x4000589	            0xeb56	                           jmp 0x40005e1	       735	charset.c	FUNCTION_12	CALL_3
0x400058b	          0x83ff7f	                           cmp edi, 0x7f	       737	charset.c	FUNCTION_12	IF_2
0x400058e	            0x7e43	                           jle 0x40005d3	       737	charset.c	FUNCTION_12	IF_2
0x4000590	    0x833d00000000	               cmp dword [0x04000597], 0	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x4000597	            0x7407	                            je 0x40005a0	       740	charset.c	FUNCTION_12	IF_2	IF_3
0x4000599	      0xe800000000	                          call 0x400059e	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x400059e	            0xeb41	                           jmp 0x40005e1	       741	charset.c	FUNCTION_12	IF_2	CALL_4
0x40005a0	    0x8b1500000000	            mov edx, dword [0x040005a6] 	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40005a6	    0x81ffff000000	                           cmp edi, 0xff	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40005ac	            0x7e25	                           jle 0x40005d3	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40005ae	            0x85d2	                           test edx, edx	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40005b0	            0x7421	                            je 0x40005d3	       744	charset.c	FUNCTION_12	IF_2	IF_4
0x40005b2	      0xb802000000	                              mov eax, 2	       748	charset.c	FUNCTION_12	IF_2	IF_4
0x40005b7	    0x81facc260000	                         cmp edx, 0x26cc	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005bd	            0x7522	                           jne 0x40005e1	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005bf	          0xc1ef08	                              shr edi, 8	       746	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005c2	    0x81ff8e000000	                           cmp edi, 0x8e	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005c8	           0xf95c0	                                setne al	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005cb	           0xfb6c0	                           movzx eax, al	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005ce	          0x83c001	                              add eax, 1	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005d1	            0xeb0e	                           jmp 0x40005e1	       747	charset.c	FUNCTION_12	IF_2	IF_4	IF_5
0x40005d3	        0x400fb6ff	                          movzx edi, dil	       752	charset.c	FUNCTION_12
0x40005d7	     0xfb687000000	                   movzx eax, byte [rdi]	       752	charset.c	FUNCTION_12
0x40005de	          0x83e007	                              and eax, 7	       752	charset.c	FUNCTION_12
0x40005e1	        0x4883c408	                              add rsp, 8	       753	charset.c	FUNCTION_12
0x40005e5	              0xc3	                                     ret	       753	charset.c	FUNCTION_12
vim_iswordc_buf	ELSE,0:FOR,0:IF,3:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	33
0x400073c	        0x4883ec08	                              sub rsp, 8	       901	charset.c	FUNCTION_23
0x4000740	    0x81ffff000000	                           cmp edi, 0xff	       902	charset.c	FUNCTION_23	IF_1
0x4000746	            0x7e3a	                           jle 0x4000782	       902	charset.c	FUNCTION_23	IF_1
0x4000748	    0x833d00000000	               cmp dword [0x0400074f], 0	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x400074f	            0x7417	                            je 0x4000768	       905	charset.c	FUNCTION_23	IF_1	IF_2
0x4000751	        0x400fb6f7	                          movzx esi, dil	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000755	          0xc1ef08	                              shr edi, 8	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000758	      0xe800000000	                          call 0x400075d	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400075d	          0x83f801	                              cmp eax, 1	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000760	           0xf9fc0	                                 setg al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000763	           0xfb6c0	                           movzx eax, al	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000766	            0xeb3c	                           jmp 0x40007a4	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x4000768	    0x8b0500000000	            mov eax, dword [0x0400076e] 	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x400076e	            0x85c0	                           test eax, eax	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x4000770	            0x7432	                            je 0x40007a4	       907	charset.c	FUNCTION_23	IF_1	IF_3
0x4000772	      0xe800000000	                          call 0x4000777	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x4000777	          0x83f801	                              cmp eax, 1	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x400077a	           0xf9fc0	                                 setg al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x400077d	           0xfb6c0	                           movzx eax, al	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x4000780	            0xeb22	                           jmp 0x40007a4	       908	charset.c	FUNCTION_23	IF_1	CALL_2
0x4000782	      0xb800000000	                              mov eax, 0	       912	charset.c	FUNCTION_23
0x4000787	            0x85ff	                           test edi, edi	       912	charset.c	FUNCTION_23
0x4000789	            0x7e19	                           jle 0x40007a4	       912	charset.c	FUNCTION_23
0x400078b	            0x89f8	                            mov eax, edi	       912	charset.c	FUNCTION_23
0x400078d	          0xc1e803	                              shr eax, 3	       912	charset.c	FUNCTION_23
0x4000790	            0x89c0	                            mov eax, eax	       912	charset.c	FUNCTION_23
0x4000792	     0xfb68406a009	    movzx eax, byte [rsi + rax + 0x9a0] 	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400079a	            0x89f9	                            mov ecx, edi	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400079c	          0x83e107	                              and ecx, 7	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x400079f	            0xd3f8	                             sar eax, cl	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x40007a1	          0x83e001	                              and eax, 1	       906	charset.c	FUNCTION_23	IF_1	CALL_1
0x40007a4	        0x4883c408	                              add rsp, 8	       913	charset.c	FUNCTION_23
0x40007a8	              0xc3	                                     ret	       913	charset.c	FUNCTION_23
skiptodigit	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	15
0x4001b69	          0x4889f8	                            mov rax, rdi	      1613	charset.c	FUNCTION_46
0x4001b6c	           0xfb617	                   movzx edx, byte [rdi]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b6f	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b72	          0x80f909	                               cmp cl, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b75	            0x7617	                           jbe 0x4001b8e	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b77	            0x84d2	                             test dl, dl	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b79	            0x7413	                            je 0x4001b8e	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b7b	        0x4883c001	                              add rax, 1	      1617	charset.c	FUNCTION_46	WHILE_1
0x4001b7f	           0xfb610	                   movzx edx, byte [rax]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b82	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b85	          0x80f909	                               cmp cl, 9	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b88	            0x7604	                           jbe 0x4001b8e	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b8a	            0x84d2	                             test dl, dl	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b8c	            0x75ed	                           jne 0x4001b7b	      1616	charset.c	FUNCTION_46	WHILE_1	CALL_1
0x4001b8e	            0xf3c3	                                     ret	      1619	charset.c	FUNCTION_46
skipbin	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	11
0x4001b1d	          0x4889f8	                            mov rax, rdi	      1573	charset.c	FUNCTION_43
0x4001b20	           0xfb617	                   movzx edx, byte [rdi]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b23	          0x83ea30	                           sub edx, 0x30	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b26	          0x83fa01	                              cmp edx, 1	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b29	            0x770f	                            ja 0x4001b3a	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b2b	        0x4883c001	                              add rax, 1	      1577	charset.c	FUNCTION_43	WHILE_1
0x4001b2f	           0xfb610	                   movzx edx, byte [rax]	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b32	          0x83ea30	                           sub edx, 0x30	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b35	          0x83fa01	                              cmp edx, 1	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b38	            0x76f1	                           jbe 0x4001b2b	      1576	charset.c	FUNCTION_43	WHILE_1	CALL_1
0x4001b3a	            0xf3c3	                                     ret	      1579	charset.c	FUNCTION_43
buf_init_chartab	ELSE,18:FOR,3:IF,31:WHILE,7:DO,0:CALL,18:functions,0:SWITCH,0	393
0x4001eb8	            0x4157	                                push r15	        80	charset.c	FUNCTION_2
0x4001eba	            0x4156	                                push r14	        80	charset.c	FUNCTION_2
0x4001ebc	            0x4155	                                push r13	        80	charset.c	FUNCTION_2
0x4001ebe	            0x4154	                                push r12	        80	charset.c	FUNCTION_2
0x4001ec0	              0x55	                                push rbp	        80	charset.c	FUNCTION_2
0x4001ec1	              0x53	                                push rbx	        80	charset.c	FUNCTION_2
0x4001ec2	        0x4883ec18	                           sub rsp, 0x18	        80	charset.c	FUNCTION_2
0x4001ec6	          0x4989fc	                            mov r12, rdi	        80	charset.c	FUNCTION_2
0x4001ec9	    0x64488b042528	                mov rax, qword fs:[0x28]	        80	charset.c	FUNCTION_2
0x4001ed2	      0x4889442408	                mov qword [rsp + 8], rax	        80	charset.c	FUNCTION_2
0x4001ed7	            0x31c0	                            xor eax, eax	        80	charset.c	FUNCTION_2
0x4001ed9	            0x85f6	                           test esi, esi	        88	charset.c	FUNCTION_2	IF_1
0x4001edb	     0xf8438010000	                            je 0x4002019	        88	charset.c	FUNCTION_2	IF_1
0x4001ee1	    0x8b0500000000	            mov eax, dword [0x04001ee7] 	        88	charset.c	FUNCTION_2	IF_1
0x4001ee7	          0x83e004	                              and eax, 4	        88	charset.c	FUNCTION_2	IF_1
0x4001eea	          0x83f801	                              cmp eax, 1	        88	charset.c	FUNCTION_2	IF_1
0x4001eed	            0x19c9	                            sbb ecx, ecx	        88	charset.c	FUNCTION_2	IF_1
0x4001eef	          0x83e1fe	                     and ecx, 0xfffffffe	        88	charset.c	FUNCTION_2	IF_1
0x4001ef2	          0x83c104	                              add ecx, 4	        88	charset.c	FUNCTION_2	IF_1
0x4001ef5	      0xba00000000	                              mov edx, 0	        88	charset.c	FUNCTION_2	IF_1
0x4001efa	      0xb800000000	                              mov eax, 0	        88	charset.c	FUNCTION_2	IF_1
0x4001eff	            0x880a	                      mov byte [rdx], cl	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4001f01	        0x4883c201	                              add rdx, 1	       100	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4001f05	          0x4839c2	                            cmp rdx, rax	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4001f08	            0x75f5	                           jne 0x4001eff	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4001f0a	      0xba00000000	                              mov edx, 0	        99	charset.c	FUNCTION_2	IF_1	WHILE_1
0x4001f0f	          0xc60011	                    mov byte [rax], 0x11	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x4001f12	        0x4883c001	                              add rax, 1	       106	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x4001f16	          0x4839c2	                            cmp rdx, rax	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x4001f19	            0x75f4	                           jne 0x4001f0f	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x4001f1b	      0xbf7f000000	                           mov edi, 0x7f	       104	charset.c	FUNCTION_2	IF_1	WHILE_2	WHILE_3
0x4001f20	    0x833d00000000	               cmp dword [0x04001f27], 0	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x4001f27	     0xf8409050000	                            je 0x4002436	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x4001f2d	      0xb800000000	                              mov eax, 0	       108	charset.c	FUNCTION_2	IF_1	IF_2
0x4001f32	          0xc60211	                    mov byte [rdx], 0x11	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f35	        0x4883c201	                              add rdx, 1	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f39	          0x4839c2	                            cmp rdx, rax	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f3c	            0x75f4	                           jne 0x4001f32	       110	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f3e	      0xbfe1000000	                           mov edi, 0xe1	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f43	      0xe9ee040000	                           jmp 0x4002436	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f48	            0x89d0	                            mov eax, edx	       111	charset.c	FUNCTION_2	IF_1	IF_2	WHILE_4
0x4001f4a	    0x81fa9f000000	                           cmp edx, 0x9f	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f50	            0x7e13	                           jle 0x4001f65	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f52	          0x4584db	                         test r11b, r11b	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f55	            0x740e	                            je 0x4001f65	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f57	          0x4189f8	                            mov r8d, edi	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f5a	            0x4898	                                    cdqe	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f5c	    0xc68000000000	                    mov byte [rax], 0x11	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f63	            0xeb45	                           jmp 0x4001faa	       119	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4001f65	      0x3d8e000000	                           cmp eax, 0x8e	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f6a	            0x7513	                           jne 0x4001f7f	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f6c	          0x4584d2	                         test r10b, r10b	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f6f	            0x740e	                            je 0x4001f7f	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f71	          0x4189f8	                            mov r8d, edi	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f74	            0x4898	                                    cdqe	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f76	    0xc68000000000	                    mov byte [rax], 0x11	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f7d	            0xeb2b	                           jmp 0x4001faa	       122	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4001f7f	          0x4585c9	                           test r9d, r9d	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4001f82	            0x741b	                            je 0x4001f9f	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4001f84	          0x4c63c0	                          movsxd r8, eax	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4001f87	    0x4180b8000000	                        cmp byte [r8], 2	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4001f8f	            0x750e	                           jne 0x4001f9f	       124	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5	CALL_1
0x4001f91	          0x4189f8	                            mov r8d, edi	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4001f94	            0x4898	                                    cdqe	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4001f96	    0xc68000000000	                    mov byte [rax], 0x12	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4001f9d	            0xeb0b	                           jmp 0x4001faa	       125	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_2	IF_5
0x4001f9f	          0x4189f8	                            mov r8d, edi	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4001fa2	            0x4898	                                    cdqe	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4001fa4	    0x888800000000	                      mov byte [rax], cl	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4001faa	          0x83c201	                              add edx, 1	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4001fad	          0x83c701	                              add edi, 1	       129	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_3
0x4001fb0	    0x4181f8ff0000	                           cmp r8d, 0xff	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x4001fb7	            0x7e8f	                           jle 0x4001f48	       114	charset.c	FUNCTION_2	IF_1	WHILE_5
0x4001fb9	    0x8b3d00000000	            mov edi, dword [0x04001fbf] 	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4001fbf	    0x81ffcc260000	                         cmp edi, 0x26cc	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fc5	        0x410f94c1	                                sete r9b	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fc9	    0x833d00000000	               cmp dword [0x04001fd0], 0	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fd0	        0x410f95c0	                               setne r8b	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fd4	      0xba00000000	                              mov edx, 0	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fd9	      0xb900000000	                              mov ecx, 0	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fde	      0xb801000000	                              mov eax, 1	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fe3	            0x85ff	                           test edi, edi	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4001fe5	            0x7411	                            je 0x4001ff8	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4001fe7	          0x803901	                       cmp byte [rcx], 1	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4001fea	            0x7f18	                            jg 0x4002004	       135	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6	CALL_2
0x4001fec	      0x3d8e000000	                           cmp eax, 0x8e	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001ff1	            0x7505	                           jne 0x4001ff8	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001ff3	          0x4584c9	                           test r9b, r9b	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001ff6	            0x750c	                           jne 0x4002004	       136	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001ff8	      0x3d9f000000	                           cmp eax, 0x9f	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001ffd	            0x7e08	                           jle 0x4002007	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4001fff	          0x4584c0	                           test r8b, r8b	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002002	            0x7403	                            je 0x4002007	       137	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002004	          0x800a40	                     or byte [rdx], 0x40	       138	charset.c	FUNCTION_2	IF_1	FOR_1	IF_6
0x4002007	          0x83c001	                              add eax, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400200a	        0x4883c201	                              add rdx, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x400200e	        0x4883c101	                              add rcx, 1	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4002012	      0x3d00010000	                          cmp eax, 0x100	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4002017	            0x75ca	                           jne 0x4001fe3	       134	charset.c	FUNCTION_2	IF_1	FOR_1
0x4002019	    0x49c78424a009	              mov qword [r12 + 0x9a0], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4002025	    0x49c78424a809	              mov qword [r12 + 0x9a8], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4002031	    0x49c78424b009	              mov qword [r12 + 0x9b0], 0	        90	string3.h	FUNCTION_69	CALL_6
0x400203d	    0x49c78424b809	              mov qword [r12 + 0x9b8], 0	        90	string3.h	FUNCTION_69	CALL_6
0x4002049	    0x833d00000000	               cmp dword [0x04002050], 0	       147	charset.c	FUNCTION_2	IF_7
0x4002050	            0x7437	                            je 0x4002089	       147	charset.c	FUNCTION_2	IF_7
0x4002052	      0xb800000000	                              mov eax, 0	       147	charset.c	FUNCTION_2	IF_7
0x4002057	      0xbf01000000	                              mov edi, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400205c	    0x80b800000000	                       cmp byte [rax], 2	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4002063	            0x7518	                           jne 0x400207d	       151	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8	CALL_4
0x4002065	            0x89c2	                            mov edx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4002067	          0xc1ea03	                              shr edx, 3	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400206a	            0x89d2	                            mov edx, edx	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400206c	            0x89c1	                            mov ecx, eax	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400206e	          0x83e107	                              and ecx, 7	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4002071	            0x89fb	                            mov ebx, edi	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4002073	            0xd3e3	                             shl ebx, cl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4002075	    0x41089c14a009	         or byte [r12 + rdx + 0x9a0], bl	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x400207d	        0x4883c001	                              add rax, 1	       152	charset.c	FUNCTION_2	IF_7	FOR_2	IF_8
0x4002081	    0x483d00010000	                          cmp rax, 0x100	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4002087	            0x75d3	                           jne 0x400205c	       148	charset.c	FUNCTION_2	IF_7	FOR_2
0x4002089	    0x4183bc242015	             cmp dword [r12 + 0x1520], 0	       160	charset.c	FUNCTION_2	IF_9
0x4002092	            0x7409	                            je 0x400209d	       160	charset.c	FUNCTION_2	IF_9
0x4002094	    0x41808c24a509	             or byte [r12 + 0x9a5], 0x20	       161	charset.c	FUNCTION_2	IF_9
0x400209d	          0x83fe01	                              cmp esi, 1	       168	charset.c	FUNCTION_2	FOR_3
0x40020a0	            0x19ed	                            sbb ebp, ebp	       168	charset.c	FUNCTION_2	FOR_3
0x40020a2	          0x83e503	                              and ebp, 3	       168	charset.c	FUNCTION_2	FOR_3
0x40020a5	            0x85ed	                           test ebp, ebp	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x40020a7	            0x7510	                           jne 0x40020b9	       170	charset.c	FUNCTION_2	FOR_3	IF_10
0x40020a9	    0x488b05000000	            mov rax, qword [0x040020b0] 	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x40020b0	        0x48890424	                    mov qword [rsp], rax	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x40020b4	      0xe9f5020000	                           jmp 0x40023ae	       171	charset.c	FUNCTION_2	FOR_3	IF_10
0x40020b9	          0x83fd01	                              cmp ebp, 1	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x40020bc	            0x7510	                           jne 0x40020ce	       172	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x40020be	    0x488b05000000	            mov rax, qword [0x040020c5] 	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x40020c5	        0x48890424	                    mov qword [rsp], rax	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x40020c9	      0xe9e0020000	                           jmp 0x40023ae	       173	charset.c	FUNCTION_2	FOR_3	ELSE_4	IF_11
0x40020ce	          0x83fd02	                              cmp ebp, 2	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x40020d1	            0x7510	                           jne 0x40020e3	       174	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x40020d3	    0x488b05000000	            mov rax, qword [0x040020da] 	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x40020da	        0x48890424	                    mov qword [rsp], rax	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x40020de	      0xe9cb020000	                           jmp 0x40023ae	       175	charset.c	FUNCTION_2	FOR_3	ELSE_5	IF_12
0x40020e3	    0x498b8424b814	          mov rax, qword [r12 + 0x14b8] 	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x40020eb	        0x48890424	                    mov qword [rsp], rax	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x40020ef	      0xe9ba020000	                           jmp 0x40023ae	       177	charset.c	FUNCTION_2	FOR_3	ELSE_6
0x40020f4	    0x41be00000000	                             mov r14d, 0	       181	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40020fa	          0x80fa5e	                            cmp dl, 0x5e	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40020fd	            0x7514	                           jne 0x4002113	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x40020ff	        0x80780100	                   cmp byte [rax + 1], 0	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4002103	            0x7429	                            je 0x400212e	       183	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4002105	        0x4883c001	                              add rax, 1	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4002109	        0x48890424	                    mov qword [rsp], rax	       186	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x400210d	    0x41be01000000	                             mov r14d, 1	       185	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_13
0x4002113	        0x488b0424	                    mov rax, qword [rsp]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4002117	           0xfb610	                   movzx edx, byte [rax]	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x400211a	          0x83ea30	                           sub edx, 0x30	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x400211d	          0x83fa09	                              cmp edx, 9	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4002120	            0x7712	                            ja 0x4002134	       188	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_14	CALL_5
0x4002122	          0x4889e7	                            mov rdi, rsp	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x4002125	      0xe800000000	                          call 0x400212a	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x400212a	            0x89c3	                            mov ebx, eax	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x400212c	            0xeb26	                           jmp 0x4002154	       189	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_6
0x400212e	    0x41be00000000	                             mov r14d, 0	       181	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4002134	    0x833d00000000	               cmp dword [0x0400213b], 0	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x400213b	            0x740c	                            je 0x4002149	       192	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x400213d	          0x4889e7	                            mov rdi, rsp	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002140	      0xe800000000	                          call 0x4002145	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002145	            0x89c3	                            mov ebx, eax	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002147	            0xeb0b	                           jmp 0x4002154	       193	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_7	IF_15
0x4002149	        0x488d5001	                      lea rdx, [rax + 1]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x400214d	        0x48891424	                    mov qword [rsp], rdx	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x4002151	           0xfb618	                   movzx ebx, byte [rax]	       196	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8
0x4002154	        0x488b0424	                    mov rax, qword [rsp]	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002158	          0x80382d	                    cmp byte [rax], 0x2d	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400215b	     0xf85b3020000	                           jne 0x4002414	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002161	        0x80780100	                   cmp byte [rax + 1], 0	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002165	     0xf84a9020000	                            je 0x4002414	       198	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400216b	        0x488d5001	                      lea rdx, [rax + 1]	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x400216f	        0x48891424	                    mov qword [rsp], rdx	       200	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16
0x4002173	         0xfb65001	               movzx edx, byte [rax + 1]	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x4002177	          0x83ea30	                           sub edx, 0x30	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400217a	          0x83fa09	                              cmp edx, 9	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400217d	            0x770d	                            ja 0x400218c	       201	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	IF_17	CALL_8
0x400217f	          0x4889e7	                            mov rdi, rsp	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4002182	      0xe800000000	                          call 0x4002187	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x4002187	          0x4189c5	                           mov r13d, eax	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x400218a	            0xeb23	                           jmp 0x40021af	       202	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	CALL_9
0x400218c	    0x833d00000000	               cmp dword [0x04002193], 0	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002193	            0x740d	                            je 0x40021a2	       205	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002195	          0x4889e7	                            mov rdi, rsp	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x4002198	      0xe800000000	                          call 0x400219d	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x400219d	          0x4189c5	                           mov r13d, eax	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x40021a0	            0xeb0d	                           jmp 0x40021af	       206	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_9	IF_18
0x40021a2	        0x488d5002	                      lea rdx, [rax + 2]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x40021a6	        0x48891424	                    mov qword [rsp], rdx	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x40021aa	      0x440fb66801	              movzx r13d, byte [rax + 1]	       209	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_8	IF_16	ELSE_10
0x40021af	          0x8d43ff	                      lea eax, [rbx - 1]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021b2	      0x3dfe000000	                           cmp eax, 0xfe	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021b7	     0xf871d020000	                            ja 0x40023da	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021bd	          0x4439eb	                           cmp ebx, r13d	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021c0	           0xf9fc2	                                 setg dl	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021c3	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021c7	           0xf95c0	                                setne al	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021ca	            0x84c2	                             test dl, al	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021cc	     0xf850f020000	                           jne 0x40023e1	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021d2	    0x4181fdff0000	                          cmp r13d, 0xff	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021d9	     0xf8f02020000	                            jg 0x40023e1	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021df	        0x488b0424	                    mov rax, qword [rsp]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021e3	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021e6	            0x84c0	                             test al, al	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021e8	            0x7408	                            je 0x40021f2	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021ea	            0x3c2c	                            cmp al, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021ec	     0xf85f6010000	                           jne 0x40023e8	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40021f2	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40021f6	            0x7514	                           jne 0x400220c	       215	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20
0x40021f8	          0x83fb40	                           cmp ebx, 0x40	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x40021fb	     0xf841f020000	                            je 0x4002420	       223	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002201	          0x4189dd	                           mov r13d, ebx	       230	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	ELSE_11
0x4002204	    0x41bf00000000	                             mov r15d, 0	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400220a	            0xeb0f	                           jmp 0x400221b	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400220c	          0x4439eb	                           cmp ebx, r13d	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400220f	     0xf8f7f010000	                            jg 0x4002394	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002215	    0x41bf00000000	                             mov r15d, 0	       182	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400221b	          0x4585ff	                         test r15d, r15d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x400221e	            0x743d	                            je 0x400225d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002220	            0x89df	                            mov edi, ebx	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002222	      0xe800000000	                          call 0x4002227	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002227	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002229	            0x7532	                           jne 0x400225d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x400222b	            0x89df	                            mov edi, ebx	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x400222d	      0xe800000000	                          call 0x4002232	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002232	            0x85c0	                           test eax, eax	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002234	            0x7527	                           jne 0x400225d	       237	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_12
0x4002236	    0x833d00000000	               cmp dword [0x0400223d], 0	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400223d	     0xf8445010000	                            je 0x4002388	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002243	            0x89df	                            mov edi, ebx	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002245	      0xe800000000	                          call 0x400224a	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400224a	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400224c	            0x750f	                           jne 0x400225d	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400224e	            0x89df	                            mov edi, ebx	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002250	      0xe800000000	                          call 0x4002255	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002255	            0x85c0	                           test eax, eax	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x4002257	     0xf842b010000	                            je 0x4002388	       239	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	CALL_14
0x400225d	            0x85ed	                           test ebp, ebp	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x400225f	            0x7523	                           jne 0x4002284	       243	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23
0x4002261	          0x4585f6	                         test r14d, r14d	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002264	            0x740f	                            je 0x4002275	       245	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002266	          0x4863c3	                         movsxd rax, ebx	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002269	    0x80a000000000	                    and byte [rax], 0xdf	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002270	      0xe913010000	                           jmp 0x4002388	       246	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	IF_24
0x4002275	          0x4863c3	                         movsxd rax, ebx	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4002278	    0x808800000000	                     or byte [rax], 0x20	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x400227f	      0xe904010000	                           jmp 0x4002388	       248	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	IF_23	ELSE_12
0x4002284	          0x83fd01	                              cmp ebp, 1	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x4002287	     0xf859a000000	                           jne 0x4002327	       250	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25
0x400228d	          0x8d43e0	                   lea eax, [rbx - 0x20]	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002290	          0x83f85e	                           cmp eax, 0x5e	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002293	            0x7727	                            ja 0x40022bc	       252	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x4002295	    0x833d00000000	               cmp dword [0x0400229c], 0	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x400229c	     0xf84e6000000	                            je 0x4002388	       257	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26
0x40022a2	            0x89df	                            mov edi, ebx	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022a4	      0xe800000000	                          call 0x40022a9	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022a9	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022ab	            0x750f	                           jne 0x40022bc	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022ad	            0x89df	                            mov edi, ebx	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022af	      0xe800000000	                          call 0x40022b4	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022b4	            0x85c0	                           test eax, eax	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022b6	     0xf84cc000000	                            je 0x4002388	       258	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_16
0x40022bc	    0x833d00000000	               cmp dword [0x040022c3], 0	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40022c3	            0x7410	                            je 0x40022d5	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40022c5	          0x4863c3	                         movsxd rax, ebx	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40022c8	    0x80b800000000	                       cmp byte [rax], 2	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40022cf	     0xf84b3000000	                            je 0x4002388	       264	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	CALL_17
0x40022d5	          0x4585f6	                         test r14d, r14d	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022d8	            0x7432	                            je 0x400230c	       268	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022da	          0x4863c3	                         movsxd rax, ebx	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022dd	     0xfb680000000	                   movzx eax, byte [rax]	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022e4	          0x83e0f8	                     and eax, 0xfffffff8	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022e7	            0x89c1	                            mov ecx, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022e9	    0x8b1500000000	            mov edx, dword [0x040022ef] 	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022ef	          0x83e204	                              and edx, 4	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022f2	          0x83fa01	                              cmp edx, 1	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022f5	            0x19c0	                            sbb eax, eax	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022f7	          0x83e0fe	                     and eax, 0xfffffffe	       270	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022fa	          0x4863d3	                         movsxd rdx, ebx	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x40022fd	        0x8d440804	                lea eax, [rax + rcx + 4]	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4002301	          0x83e0ef	                     and eax, 0xffffffef	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x4002304	    0x888200000000	                      mov byte [rdx], al	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400230a	            0xeb7c	                           jmp 0x4002388	       272	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	IF_27
0x400230c	          0x4863d3	                         movsxd rdx, ebx	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400230f	     0xfb682000000	                   movzx eax, byte [rdx]	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002316	          0x83e0f8	                     and eax, 0xfffffff8	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002319	          0x83c001	                              add eax, 1	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400231c	          0x83c810	                            or eax, 0x10	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x400231f	    0x888200000000	                      mov byte [rdx], al	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002325	            0xeb61	                           jmp 0x4002388	       277	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_12	ELSE_13	IF_25	IF_26	ELSE_14
0x4002327	          0x83fd02	                              cmp ebp, 2	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x400232a	            0x751d	                           jne 0x4002349	       281	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28
0x400232c	          0x4585f6	                         test r14d, r14d	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400232f	            0x740c	                            je 0x400233d	       283	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x4002331	          0x4863c3	                         movsxd rax, ebx	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x4002334	    0x80a000000000	                    and byte [rax], 0xbf	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400233b	            0xeb4b	                           jmp 0x4002388	       284	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	IF_29
0x400233d	          0x4863c3	                         movsxd rax, ebx	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x4002340	    0x808800000000	                     or byte [rax], 0x40	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x4002347	            0xeb3f	                           jmp 0x4002388	       286	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_15	IF_28	ELSE_16
0x4002349	          0x4585f6	                         test r14d, r14d	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400234c	            0x741f	                            je 0x400236d	       290	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400234e	            0x89d8	                            mov eax, ebx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002350	          0xc1e803	                              shr eax, 3	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002353	            0x89c0	                            mov eax, eax	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002355	            0x89d9	                            mov ecx, ebx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002357	          0x83e107	                              and ecx, 7	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400235a	      0xba01000000	                              mov edx, 1	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400235f	            0xd3e2	                             shl edx, cl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002361	            0xf7d2	                                 not edx	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x4002363	    0x41209404a009	        and byte [r12 + rax + 0x9a0], dl	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400236b	            0xeb1b	                           jmp 0x4002388	       291	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	IF_30
0x400236d	            0x89d8	                            mov eax, ebx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400236f	          0xc1e803	                              shr eax, 3	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002372	            0x89c0	                            mov eax, eax	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002374	            0x89d9	                            mov ecx, ebx	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002376	          0x83e107	                              and ecx, 7	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002379	      0xba01000000	                              mov edx, 1	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x400237e	            0xd3e2	                             shl edx, cl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002380	    0x41089404a009	         or byte [r12 + rax + 0x9a0], dl	       293	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7	IF_22	ELSE_17	ELSE_18
0x4002388	          0x83c301	                              add ebx, 1	       296	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400238b	          0x4439eb	                           cmp ebx, r13d	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x400238e	     0xf8e87feffff	                           jle 0x400221b	       232	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	ELSE_11	WHILE_7
0x4002394	        0x488b3c24	                    mov rdi, qword [rsp]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x4002398	           0xfb61f	                   movzx ebx, byte [rdi]	       299	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x400239b	      0xe800000000	                          call 0x40023a0	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x40023a0	        0x48890424	                    mov qword [rsp], rax	       300	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	CALL_18
0x40023a4	          0x80fb2c	                            cmp bl, 0x2c	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023a7	            0x7505	                           jne 0x40023ae	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023a9	          0x803800	                       cmp byte [rax], 0	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023ac	            0x7441	                            je 0x40023ef	       301	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023ae	        0x488b0424	                    mov rax, qword [rsp]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40023b2	           0xfb610	                   movzx edx, byte [rax]	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40023b5	            0x84d2	                             test dl, dl	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40023b7	     0xf8537fdffff	                           jne 0x40020f4	       179	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6
0x40023bd	          0x83c501	                              add ebp, 1	       168	charset.c	FUNCTION_2	FOR_3
0x40023c0	          0x83fd03	                              cmp ebp, 3	       168	charset.c	FUNCTION_2	FOR_3
0x40023c3	     0xf8edcfcffff	                           jle 0x40020a5	       168	charset.c	FUNCTION_2	FOR_3
0x40023c9	    0xc70500000000	               mov dword [0x040023d3], 1	       306	charset.c	FUNCTION_2
0x40023d3	      0xb801000000	                              mov eax, 1	       307	charset.c	FUNCTION_2
0x40023d8	            0xeb28	                           jmp 0x4002402	       307	charset.c	FUNCTION_2
0x40023da	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023df	            0xeb21	                           jmp 0x4002402	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023e1	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023e6	            0xeb1a	                           jmp 0x4002402	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023e8	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023ed	            0xeb13	                           jmp 0x4002402	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023ef	      0xb800000000	                              mov eax, 0	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023f4	            0xeb0c	                           jmp 0x4002402	       303	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_31
0x40023f6	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023fb	            0xeb05	                           jmp 0x4002402	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x40023fd	      0xb800000000	                              mov eax, 0	       213	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002402	      0x488b742408	                mov rsi, qword [rsp + 8]	       308	charset.c	FUNCTION_2
0x4002407	    0x644833342528	                xor rsi, qword fs:[0x28]	       308	charset.c	FUNCTION_2
0x4002410	            0x7468	                            je 0x400247a	       308	charset.c	FUNCTION_2
0x4002412	            0xeb61	                           jmp 0x4002475	       308	charset.c	FUNCTION_2
0x4002414	          0x8d43ff	                      lea eax, [rbx - 1]	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002417	      0x3dfe000000	                           cmp eax, 0xfe	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400241c	            0x763f	                           jbe 0x400245d	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400241e	            0xebd6	                           jmp 0x40023f6	       211	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002420	    0x41bf01000000	                             mov r15d, 1	       225	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002426	    0x41bdff000000	                          mov r13d, 0xff	       227	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x400242c	      0xbb01000000	                              mov ebx, 1	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002431	      0xe9e5fdffff	                           jmp 0x400221b	       226	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_20	IF_21
0x4002436	    0x833d00000000	               cmp dword [0x0400243d], 0	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x400243d	        0x410f95c3	                              setne r11b	       118	charset.c	FUNCTION_2	IF_1	WHILE_5	IF_3
0x4002441	    0x448b0d000000	            mov r9d, dword [0x04002448] 	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002448	    0x4181f9cc2600	                         cmp r9d, 0x26cc	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400244f	        0x410f94c2	                               sete r10b	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002453	            0x89fa	                            mov edx, edi	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002455	          0x83c701	                              add edi, 1	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x4002458	      0xe9ebfaffff	                           jmp 0x4001f48	       121	charset.c	FUNCTION_2	IF_1	WHILE_5	ELSE_1	IF_4
0x400245d	        0x488b0424	                    mov rax, qword [rsp]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002461	           0xfb600	                   movzx eax, byte [rax]	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002464	            0x84c0	                             test al, al	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002466	     0xf848cfdffff	                            je 0x40021f8	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400246c	            0x3c2c	                            cmp al, 0x2c	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x400246e	            0x758d	                           jne 0x40023fd	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002470	      0xe983fdffff	                           jmp 0x40021f8	       212	charset.c	FUNCTION_2	FOR_3	ELSE_6	WHILE_6	IF_19
0x4002475	      0xe800000000	                          call 0x400247a	       308	charset.c	FUNCTION_2
0x400247a	        0x4883c418	                           add rsp, 0x18	       308	charset.c	FUNCTION_2
0x400247e	              0x5b	                                 pop rbx	       308	charset.c	FUNCTION_2
0x400247f	              0x5d	                                 pop rbp	       308	charset.c	FUNCTION_2
0x4002480	            0x415c	                                 pop r12	       308	charset.c	FUNCTION_2
0x4002482	            0x415d	                                 pop r13	       308	charset.c	FUNCTION_2
0x4002484	            0x415e	                                 pop r14	       308	charset.c	FUNCTION_2
0x4002486	            0x415f	                                 pop r15	       308	charset.c	FUNCTION_2
0x4002488	              0xc3	                                     ret	       308	charset.c	FUNCTION_2
linetabsize_col	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	21
0x40013fb	              0x55	                                push rbp	       854	charset.c	FUNCTION_19
0x40013fc	              0x53	                                push rbx	       854	charset.c	FUNCTION_19
0x40013fd	        0x4883ec18	                           sub rsp, 0x18	       854	charset.c	FUNCTION_19
0x4001401	            0x89fb	                            mov ebx, edi	       854	charset.c	FUNCTION_19
0x4001403	          0x4889f5	                            mov rbp, rsi	       854	charset.c	FUNCTION_19
0x4001406	      0x4889742408	                mov qword [rsp + 8], rsi	       854	charset.c	FUNCTION_19
0x400140b	          0x803e00	                       cmp byte [rsi], 0	       858	charset.c	FUNCTION_19	WHILE_1
0x400140e	            0x741b	                            je 0x400142b	       858	charset.c	FUNCTION_19	WHILE_1
0x4001410	            0x89da	                            mov edx, ebx	       859	charset.c	FUNCTION_19	CALL_1
0x4001412	      0x488d742408	                      lea rsi, [rsp + 8]	       859	charset.c	FUNCTION_19	CALL_1
0x4001417	          0x4889ef	                            mov rdi, rbp	       859	charset.c	FUNCTION_19	CALL_1
0x400141a	      0xe800000000	                          call 0x400141f	       859	charset.c	FUNCTION_19	CALL_1
0x400141f	             0x1c3	                            add ebx, eax	       859	charset.c	FUNCTION_19	CALL_1
0x4001421	      0x488b442408	                mov rax, qword [rsp + 8]	       858	charset.c	FUNCTION_19	WHILE_1
0x4001426	          0x803800	                       cmp byte [rax], 0	       858	charset.c	FUNCTION_19	WHILE_1
0x4001429	            0x75e5	                           jne 0x4001410	       858	charset.c	FUNCTION_19	WHILE_1
0x400142b	            0x89d8	                            mov eax, ebx	       861	charset.c	FUNCTION_19
0x400142d	        0x4883c418	                           add rsp, 0x18	       861	charset.c	FUNCTION_19
0x4001431	              0x5b	                                 pop rbx	       861	charset.c	FUNCTION_19
0x4001432	              0x5d	                                 pop rbp	       861	charset.c	FUNCTION_19
0x4001433	              0xc3	                                     ret	       861	charset.c	FUNCTION_19
getvcol	ELSE,6:FOR,2:IF,16:WHILE,0:DO,0:CALL,9:functions,0:SWITCH,0	232
0x400144a	            0x4157	                                push r15	      1278	charset.c	FUNCTION_35
0x400144c	            0x4156	                                push r14	      1278	charset.c	FUNCTION_35
0x400144e	            0x4155	                                push r13	      1278	charset.c	FUNCTION_35
0x4001450	            0x4154	                                push r12	      1278	charset.c	FUNCTION_35
0x4001452	              0x55	                                push rbp	      1278	charset.c	FUNCTION_35
0x4001453	              0x53	                                push rbx	      1278	charset.c	FUNCTION_35
0x4001454	        0x4883ec48	                           sub rsp, 0x48	      1278	charset.c	FUNCTION_35
0x4001458	          0x4989fe	                            mov r14, rdi	      1278	charset.c	FUNCTION_35
0x400145b	          0x4889f5	                            mov rbp, rsi	      1278	charset.c	FUNCTION_35
0x400145e	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1278	charset.c	FUNCTION_35
0x4001463	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1278	charset.c	FUNCTION_35
0x4001468	      0x48894c2408	                mov qword [rsp + 8], rcx	      1278	charset.c	FUNCTION_35
0x400146d	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1278	charset.c	FUNCTION_35
0x4001472	    0x64488b142528	                mov rdx, qword fs:[0x28]	      1278	charset.c	FUNCTION_35
0x400147b	      0x4889542438	             mov qword [rsp + 0x38], rdx	      1278	charset.c	FUNCTION_35
0x4001480	            0x31d2	                            xor edx, edx	      1278	charset.c	FUNCTION_35
0x4001482	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1285	charset.c	FUNCTION_35
0x4001486	    0x488b9fa81500	          mov rbx, qword [rdi + 0x15a8] 	      1285	charset.c	FUNCTION_35
0x400148d	          0x488b36	                    mov rsi, qword [rsi]	      1289	charset.c	FUNCTION_35	CALL_1
0x4001490	      0xe800000000	                          call 0x4001495	      1289	charset.c	FUNCTION_35	CALL_1
0x4001495	          0x4989c7	                            mov r15, rax	      1289	charset.c	FUNCTION_35	CALL_1
0x4001498	    0x41bd00000000	                             mov r13d, 0	      1291	charset.c	FUNCTION_35	IF_1
0x400149e	    0x817d08ffffff	        cmp dword [rbp + 8], 0x7fffffff 	      1290	charset.c	FUNCTION_35	IF_1
0x40014a5	            0x7433	                            je 0x40014da	      1290	charset.c	FUNCTION_35	IF_1
0x40014a7	        0x41803f00	                       cmp byte [r15], 0	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40014ab	            0x7507	                           jne 0x40014b4	      1296	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40014ad	    0xc74508000000	                  mov dword [rbp + 8], 0	      1297	charset.c	FUNCTION_35	ELSE_1	IF_2
0x40014b4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1298	charset.c	FUNCTION_35	ELSE_1
0x40014b9	        0x4c636808	            movsxd r13, dword [rax + 8] 	      1298	charset.c	FUNCTION_35	ELSE_1
0x40014bd	          0x4d01fd	                            add r13, r15	      1298	charset.c	FUNCTION_35	ELSE_1
0x40014c0	    0x833d00000000	               cmp dword [0x040014c7], 0	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014c7	            0x7411	                            je 0x40014da	      1300	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014c9	          0x4c89ee	                            mov rsi, r13	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014cc	          0x4c89ff	                            mov rdi, r15	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014cf	    0xff1500000000	                 call qword [0x040014d5]	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014d5	            0x4898	                                    cdqe	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014d7	          0x4929c5	                            sub r13, rax	      1302	charset.c	FUNCTION_35	ELSE_1	IF_3
0x40014da	    0x4183be340200	              cmp dword [r14 + 0x234], 0	      1312	charset.c	FUNCTION_35	IF_4
0x40014e2	            0x740d	                            je 0x40014f1	      1312	charset.c	FUNCTION_35	IF_4
0x40014e4	    0x833d00000000	               cmp dword [0x040014eb], 0	      1312	charset.c	FUNCTION_35	IF_4
0x40014eb	     0xf843b010000	                            je 0x400162c	      1312	charset.c	FUNCTION_35	IF_4
0x40014f1	    0x4183be300200	              cmp dword [r14 + 0x230], 0	      1314	charset.c	FUNCTION_35	IF_4
0x40014f9	     0xf8537010000	                           jne 0x4001636	      1314	charset.c	FUNCTION_35	IF_4
0x40014ff	    0x488b05000000	            mov rax, qword [0x04001506] 	      1314	charset.c	FUNCTION_35	IF_4
0x4001506	          0x803800	                       cmp byte [rax], 0	      1314	charset.c	FUNCTION_35	IF_4
0x4001509	     0xf8531010000	                           jne 0x4001640	      1314	charset.c	FUNCTION_35	IF_4
0x400150f	    0x4183beb40100	              cmp dword [r14 + 0x1b4], 0	      1314	charset.c	FUNCTION_35	IF_4
0x4001517	     0xf852d010000	                           jne 0x400164a	      1314	charset.c	FUNCTION_35	IF_4
0x400151d	    0xc74424340000	               mov dword [rsp + 0x34], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001525	        0x410fb607	                   movzx eax, byte [r15]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x4001529	            0x85c0	                           test eax, eax	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400152b	     0xf8471010000	                            je 0x40016a2	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001531	        0x895c242c	             mov dword [rsp + 0x2c], ebx	      1285	charset.c	FUNCTION_35
0x4001535	          0x4c89fb	                            mov rbx, r15	      1285	charset.c	FUNCTION_35
0x4001538	      0xbd00000000	                              mov ebp, 0	      1285	charset.c	FUNCTION_35
0x400153d	          0x83f809	                              cmp eax, 9	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001540	            0x7514	                           jne 0x4001556	      1334	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001542	            0x89e8	                            mov eax, ebp	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001544	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001548	              0x99	                                     cdq	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001549	            0xf7f9	                                idiv ecx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400154b	          0x4189cc	                           mov r12d, ecx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x400154e	          0x4129d4	                           sub r12d, edx	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001551	      0xe991000000	                           jmp 0x40015e7	      1335	charset.c	FUNCTION_35	IF_4	FOR_1	IF_6
0x4001556	    0x833d00000000	               cmp dword [0x0400155d], 0	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x400155d	            0x7463	                            je 0x40015c2	      1339	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7
0x400155f	    0x833d00000000	               cmp dword [0x04001566], 0	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x4001566	            0x7412	                            je 0x400157a	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x4001568	          0x83f87f	                           cmp eax, 0x7f	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x400156b	            0x7e0d	                           jle 0x400157a	      1343	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	IF_8
0x400156d	          0x4889df	                            mov rdi, rbx	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001570	      0xe800000000	                          call 0x4001575	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001575	          0x4189c4	                           mov r12d, eax	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x4001578	            0xeb0e	                           jmp 0x4001588	      1344	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	CALL_2
0x400157a	            0x4898	                                    cdqe	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x400157c	    0x440fb6a00000	                  movzx r12d, byte [rax]	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4001584	        0x4183e407	                             and r12d, 7	      1346	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3
0x4001588	        0x4183fc02	                             cmp r12d, 2	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400158c	            0x7559	                           jne 0x40015e7	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400158e	    0x4183be940200	              cmp dword [r14 + 0x294], 0	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001596	            0x744f	                            je 0x40015e7	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x4001598	           0xfb603	                   movzx eax, byte [rbx]	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x400159b	    0x80b800000000	                       cmp byte [rax], 1	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40015a2	            0x7e43	                           jle 0x40015e7	      1351	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_3
0x40015a4	            0x89ee	                            mov esi, ebp	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40015a6	          0x4c89f7	                            mov rdi, r14	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40015a9	      0xe800000000	                          call 0x40015ae	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40015ae	            0x85c0	                           test eax, eax	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40015b0	            0x7435	                            je 0x40015e7	      1352	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9	CALL_4
0x40015b2	    0xc74424340100	               mov dword [rsp + 0x34], 1	      1355	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40015ba	    0x41bc03000000	                             mov r12d, 3	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40015c0	            0xeb25	                           jmp 0x40015e7	      1354	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40015c2	            0x4898	                                    cdqe	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40015c4	    0x440fb6a00000	                  movzx r12d, byte [rax]	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40015cc	        0x4183e407	                             and r12d, 7	      1360	charset.c	FUNCTION_35	IF_4	FOR_1	ELSE_2	ELSE_4
0x40015d0	          0x4d85ed	                           test r13, r13	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015d3	     0xf84c8010000	                            je 0x40017a1	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015d9	          0x4939dd	                            cmp r13, rbx	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015dc	     0xf87bf010000	                            ja 0x40017a1	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015e2	      0xe9d9000000	                           jmp 0x40016c0	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015e7	          0x4d85ed	                           test r13, r13	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015ea	            0x7409	                            je 0x40015f5	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015ec	          0x4939dd	                            cmp r13, rbx	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015ef	     0xf86cb000000	                           jbe 0x40016c0	      1363	charset.c	FUNCTION_35	IF_4	FOR_1	IF_10
0x40015f5	          0x4401e5	                           add ebp, r12d	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x40015f8	      0xb801000000	                              mov eax, 1	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40015fd	    0x833d00000000	               cmp dword [0x04001604], 0	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4001604	            0x7409	                            je 0x400160f	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4001606	          0x4889df	                            mov rdi, rbx	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4001609	    0xff1500000000	                 call qword [0x0400160f]	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x400160f	            0x4898	                                    cdqe	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4001611	          0x4801c3	                            add rbx, rax	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x4001614	    0xc74424340000	               mov dword [rsp + 0x34], 0	      1324	charset.c	FUNCTION_35	IF_4	FOR_1
0x400161c	           0xfb603	                   movzx eax, byte [rbx]	      1326	charset.c	FUNCTION_35	IF_4	FOR_1
0x400161f	            0x85c0	                           test eax, eax	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001621	     0xf8516ffffff	                           jne 0x400153d	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001627	      0xe986000000	                           jmp 0x40016b2	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400162c	          0x4c89fb	                            mov rbx, r15	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400162f	      0xbd00000000	                              mov ebp, 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001634	            0xeb1c	                           jmp 0x4001652	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001636	          0x4c89fb	                            mov rbx, r15	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001639	      0xbd00000000	                              mov ebp, 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400163e	            0xeb12	                           jmp 0x4001652	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001640	          0x4c89fb	                            mov rbx, r15	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001643	      0xbd00000000	                              mov ebp, 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001648	            0xeb08	                           jmp 0x4001652	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400164a	          0x4c89fb	                            mov rbx, r15	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x400164d	      0xbd00000000	                              mov ebp, 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x4001652	    0xc74424340000	               mov dword [rsp + 0x34], 0	      1375	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x400165a	      0x4c8d442434	                    lea r8, [rsp + 0x34]	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400165f	            0x89e9	                            mov ecx, ebp	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4001661	          0x4889da	                            mov rdx, rbx	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4001664	          0x4c89fe	                            mov rsi, r15	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4001667	          0x4c89f7	                            mov rdi, r14	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400166a	      0xe800000000	                          call 0x400166f	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x400166f	          0x4189c4	                           mov r12d, eax	      1376	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_6
0x4001672	          0x803b00	                       cmp byte [rbx], 0	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4001675	            0x7443	                            je 0x40016ba	      1378	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x4001677	          0x4d85ed	                           test r13, r13	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400167a	            0x7405	                            je 0x4001681	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400167c	          0x4c39eb	                            cmp rbx, r13	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x400167f	            0x733f	                           jae 0x40016c0	      1384	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_12
0x4001681	          0x4401e5	                           add ebp, r12d	      1387	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x4001684	      0xb801000000	                              mov eax, 1	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001689	    0x833d00000000	               cmp dword [0x04001690], 0	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001690	            0x7409	                            je 0x400169b	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001692	          0x4889df	                            mov rdi, rbx	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x4001695	    0xff1500000000	                 call qword [0x0400169b]	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400169b	            0x4898	                                    cdqe	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x400169d	          0x4801c3	                            add rbx, rax	      1388	charset.c	FUNCTION_35	ELSE_5	FOR_2	CALL_7
0x40016a0	            0xebb0	                           jmp 0x4001652	      1389	charset.c	FUNCTION_35	ELSE_5	FOR_2
0x40016a2	          0x4c89fb	                            mov rbx, r15	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016a5	    0x41bc01000000	                             mov r12d, 1	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016ab	      0xbd00000000	                              mov ebp, 0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016b0	            0xeb0e	                           jmp 0x40016c0	      1328	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016b2	    0x41bc01000000	                             mov r12d, 1	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016b8	            0xeb06	                           jmp 0x40016c0	      1330	charset.c	FUNCTION_35	IF_4	FOR_1	IF_5
0x40016ba	    0x41bc01000000	                             mov r12d, 1	      1380	charset.c	FUNCTION_35	ELSE_5	FOR_2	IF_11
0x40016c0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1391	charset.c	FUNCTION_35	IF_13
0x40016c5	          0x4885c9	                           test rcx, rcx	      1391	charset.c	FUNCTION_35	IF_13
0x40016c8	            0x7408	                            je 0x40016d2	      1391	charset.c	FUNCTION_35	IF_13
0x40016ca	            0x89e8	                            mov eax, ebp	      1392	charset.c	FUNCTION_35	IF_13
0x40016cc	         0x3442434	             add eax, dword [rsp + 0x34]	      1392	charset.c	FUNCTION_35	IF_13
0x40016d0	            0x8901	                    mov dword [rcx], eax	      1392	charset.c	FUNCTION_35	IF_13
0x40016d2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1393	charset.c	FUNCTION_35	IF_14
0x40016d7	          0x4885f6	                           test rsi, rsi	      1393	charset.c	FUNCTION_35	IF_14
0x40016da	            0x7407	                            je 0x40016e3	      1393	charset.c	FUNCTION_35	IF_14
0x40016dc	      0x418d442cff	                lea eax, [r12 + rbp - 1]	      1394	charset.c	FUNCTION_35	IF_14
0x40016e1	            0x8906	                    mov dword [rsi], eax	      1394	charset.c	FUNCTION_35	IF_14
0x40016e3	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1395	charset.c	FUNCTION_35	IF_15
0x40016e9	     0xf84bf000000	                            je 0x40017ae	      1395	charset.c	FUNCTION_35	IF_15
0x40016ef	          0x803b09	                       cmp byte [rbx], 9	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40016f2	     0xf859c000000	                           jne 0x4001794	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x40016f8	    0xf60500000000	               test byte [0x040016ff], 1	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x40016ff	     0xf848f000000	                            je 0x4001794	      1398	charset.c	FUNCTION_35	IF_15	IF_16
0x4001705	    0x4183be340200	              cmp dword [r14 + 0x234], 0	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x400170d	     0xf8581000000	                           jne 0x4001794	      1399	charset.c	FUNCTION_35	IF_15	IF_16
0x4001713	      0xe800000000	                          call 0x4001718	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x4001718	            0x85c0	                           test eax, eax	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x400171a	            0x7578	                           jne 0x4001794	      1400	charset.c	FUNCTION_35	IF_15	IF_16	CALL_8
0x400171c	    0x833d00000000	               cmp dword [0x04001723], 0	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001723	            0x7461	                            je 0x4001786	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001725	    0x488b05000000	            mov rax, qword [0x0400172c] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400172c	          0x803865	                    cmp byte [rax], 0x65	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x400172f	            0x7463	                            je 0x4001794	      1401	charset.c	FUNCTION_35	IF_15	IF_16
0x4001731	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001736	          0x488b10	                    mov rdx, qword [rax]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001739	    0x488b05000000	            mov rax, qword [0x04001740] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001740	          0x4839c2	                            cmp rdx, rax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001743	            0x7407	                            je 0x400174c	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x4001745	          0x4839c2	                            cmp rdx, rax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001748	            0x7d3c	                           jge 0x4001786	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400174a	            0xeb48	                           jmp 0x4001794	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400174c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001751	          0x8b5008	                mov edx, dword [rax + 8]	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001754	    0x8b0500000000	            mov eax, dword [0x0400175a] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400175a	            0x39c2	                            cmp edx, eax	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x400175c	            0x7406	                            je 0x4001764	      1397	charset.c	FUNCTION_35	IF_15	IF_16
0x400175e	            0x39c2	                            cmp edx, eax	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001760	            0x7d12	                           jge 0x4001774	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001762	            0xeb30	                           jmp 0x4001794	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001764	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001769	    0x8b1500000000	            mov edx, dword [0x0400176f] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x400176f	          0x39500c	              cmp dword [rax + 0xc], edx	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001772	            0x7c20	                            jl 0x4001794	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001774	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001779	    0x488b15000000	            mov rdx, qword [0x04001780] 	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001780	        0x48395008	                cmp qword [rax + 8], rdx	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001784	            0x740e	                            je 0x4001794	      1402	charset.c	FUNCTION_35	IF_15	IF_16	CALL_9
0x4001786	      0x418d442cff	                lea eax, [r12 + rbp - 1]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x400178b	      0x488b542408	                mov rdx, qword [rsp + 8]	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001790	            0x8902	                    mov dword [rdx], eax	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001792	            0xeb1a	                           jmp 0x40017ae	      1404	charset.c	FUNCTION_35	IF_15	IF_16
0x4001794	         0x36c2434	             add ebp, dword [rsp + 0x34]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x4001798	      0x488b442408	                mov rax, qword [rsp + 8]	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x400179d	            0x8928	                    mov dword [rax], ebp	      1406	charset.c	FUNCTION_35	IF_15	ELSE_6
0x400179f	            0xeb0d	                           jmp 0x40017ae	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017a1	          0x4401e5	                           add ebp, r12d	      1366	charset.c	FUNCTION_35	IF_4	FOR_1
0x40017a4	      0xb801000000	                              mov eax, 1	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40017a9	      0xe961feffff	                           jmp 0x400160f	      1367	charset.c	FUNCTION_35	IF_4	FOR_1	CALL_5
0x40017ae	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017b3	    0x644833042528	                xor rax, qword fs:[0x28]	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017bc	            0x7405	                            je 0x40017c3	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017be	      0xe800000000	                          call 0x40017c3	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017c3	        0x4883c448	                           add rsp, 0x48	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017c7	              0x5b	                                 pop rbx	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017c8	              0x5d	                                 pop rbp	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017c9	            0x415c	                                 pop r12	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017cb	            0x415d	                                 pop r13	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017cd	            0x415e	                                 pop r14	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017cf	            0x415f	                                 pop r15	      1408	charset.c	FUNCTION_35	ELSE_6
0x40017d1	              0xc3	                                     ret	      1408	charset.c	FUNCTION_35	ELSE_6
hex2nr	ELSE,0:FOR,0:IF,2:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	11
0x40024cb	          0x8d479f	                   lea eax, [rdi - 0x61]	      2020	charset.c	FUNCTION_60	IF_1
0x40024ce	          0x83f805	                              cmp eax, 5	      2020	charset.c	FUNCTION_60	IF_1
0x40024d1	            0x7704	                            ja 0x40024d7	      2020	charset.c	FUNCTION_60	IF_1
0x40024d3	          0x8d47a9	                   lea eax, [rdi - 0x57]	      2021	charset.c	FUNCTION_60	IF_1
0x40024d6	              0xc3	                                     ret	      2021	charset.c	FUNCTION_60	IF_1
0x40024d7	          0x8d57bf	                   lea edx, [rdi - 0x41]	      2022	charset.c	FUNCTION_60	IF_2
0x40024da	          0x8d47c9	                   lea eax, [rdi - 0x37]	      2023	charset.c	FUNCTION_60	IF_2
0x40024dd	          0x83ef30	                           sub edi, 0x30	      2023	charset.c	FUNCTION_60	IF_2
0x40024e0	          0x83fa05	                              cmp edx, 5	      2023	charset.c	FUNCTION_60	IF_2
0x40024e3	           0xf47c7	                          cmova eax, edi	      2023	charset.c	FUNCTION_60	IF_2
0x40024e6	              0xc3	                                     ret	      2025	charset.c	FUNCTION_60
win_linetabsize	ELSE,0:FOR,1:IF,0:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	46
0x40012a2	            0x4157	                                push r15	       868	charset.c	FUNCTION_20
0x40012a4	            0x4156	                                push r14	       868	charset.c	FUNCTION_20
0x40012a6	            0x4155	                                push r13	       868	charset.c	FUNCTION_20
0x40012a8	            0x4154	                                push r12	       868	charset.c	FUNCTION_20
0x40012aa	              0x55	                                push rbp	       868	charset.c	FUNCTION_20
0x40012ab	              0x53	                                push rbx	       868	charset.c	FUNCTION_20
0x40012ac	        0x4883ec08	                              sub rsp, 8	       868	charset.c	FUNCTION_20
0x40012b0	          0x4989ff	                            mov r15, rdi	       868	charset.c	FUNCTION_20
0x40012b3	          0x4989f4	                            mov r12, rsi	       868	charset.c	FUNCTION_20
0x40012b6	          0x4189d5	                           mov r13d, edx	       868	charset.c	FUNCTION_20
0x40012b9	          0x4889f3	                            mov rbx, rsi	       872	charset.c	FUNCTION_20	FOR_1
0x40012bc	      0xbd00000000	                              mov ebp, 0	       872	charset.c	FUNCTION_20	FOR_1
0x40012c1	          0x4c63f2	                         movsxd r14, edx	       872	charset.c	FUNCTION_20	FOR_1
0x40012c4	          0x4901f6	                            add r14, rsi	       872	charset.c	FUNCTION_20	FOR_1
0x40012c7	          0x803e00	                       cmp byte [rsi], 0	       872	charset.c	FUNCTION_20	FOR_1
0x40012ca	            0x753b	                           jne 0x4001307	       872	charset.c	FUNCTION_20	FOR_1
0x40012cc	            0xeb47	                           jmp 0x4001315	       872	charset.c	FUNCTION_20	FOR_1
0x40012ce	    0x41b800000000	                              mov r8d, 0	       874	charset.c	FUNCTION_20	CALL_2
0x40012d4	            0x89e9	                            mov ecx, ebp	       874	charset.c	FUNCTION_20	CALL_2
0x40012d6	          0x4889da	                            mov rdx, rbx	       874	charset.c	FUNCTION_20	CALL_2
0x40012d9	          0x4c89e6	                            mov rsi, r12	       874	charset.c	FUNCTION_20	CALL_2
0x40012dc	          0x4c89ff	                            mov rdi, r15	       874	charset.c	FUNCTION_20	CALL_2
0x40012df	      0xe800000000	                          call 0x40012e4	       874	charset.c	FUNCTION_20	CALL_2
0x40012e4	             0x1c5	                            add ebp, eax	       874	charset.c	FUNCTION_20	CALL_2
0x40012e6	      0xb801000000	                              mov eax, 1	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012eb	    0x833d00000000	               cmp dword [0x040012f2], 0	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012f2	            0x7409	                            je 0x40012fd	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012f4	          0x4889df	                            mov rdi, rbx	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012f7	    0xff1500000000	                 call qword [0x040012fd]	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012fd	            0x4898	                                    cdqe	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x40012ff	          0x4801c3	                            add rbx, rax	       873	charset.c	FUNCTION_20	FOR_1	CALL_1
0x4001302	          0x803b00	                       cmp byte [rbx], 0	       872	charset.c	FUNCTION_20	FOR_1
0x4001305	            0x740e	                            je 0x4001315	       872	charset.c	FUNCTION_20	FOR_1
0x4001307	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	       872	charset.c	FUNCTION_20	FOR_1
0x400130e	            0x74be	                            je 0x40012ce	       872	charset.c	FUNCTION_20	FOR_1
0x4001310	          0x4c39f3	                            cmp rbx, r14	       872	charset.c	FUNCTION_20	FOR_1
0x4001313	            0x72b9	                            jb 0x40012ce	       872	charset.c	FUNCTION_20	FOR_1
0x4001315	            0x89e8	                            mov eax, ebp	       876	charset.c	FUNCTION_20
0x4001317	        0x4883c408	                              add rsp, 8	       876	charset.c	FUNCTION_20
0x400131b	              0x5b	                                 pop rbx	       876	charset.c	FUNCTION_20
0x400131c	              0x5d	                                 pop rbp	       876	charset.c	FUNCTION_20
0x400131d	            0x415c	                                 pop r12	       876	charset.c	FUNCTION_20
0x400131f	            0x415d	                                 pop r13	       876	charset.c	FUNCTION_20
0x4001321	            0x415e	                                 pop r14	       876	charset.c	FUNCTION_20
0x4001323	            0x415f	                                 pop r15	       876	charset.c	FUNCTION_20
0x4001325	              0xc3	                                     ret	       876	charset.c	FUNCTION_20
vim_strnsize	ELSE,1:FOR,0:IF,1:WHILE,1:DO,0:CALL,2:functions,0:SWITCH,0	38
0x4000650	            0x4155	                                push r13	       787	charset.c	FUNCTION_15
0x4000652	            0x4154	                                push r12	       787	charset.c	FUNCTION_15
0x4000654	              0x55	                                push rbp	       787	charset.c	FUNCTION_15
0x4000655	              0x53	                                push rbx	       787	charset.c	FUNCTION_15
0x4000656	        0x4883ec08	                              sub rsp, 8	       787	charset.c	FUNCTION_15
0x400065a	          0x4889fd	                            mov rbp, rdi	       787	charset.c	FUNCTION_15
0x400065d	            0x89f3	                            mov ebx, esi	       787	charset.c	FUNCTION_15
0x400065f	    0x41bc00000000	                             mov r12d, 0	       788	charset.c	FUNCTION_15
0x4000665	            0xeb3f	                           jmp 0x40006a6	       790	charset.c	FUNCTION_15	WHILE_1
0x4000667	    0x833d00000000	               cmp dword [0x0400066e], 0	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400066e	            0x7426	                            je 0x4000696	       793	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000670	          0x4889ef	                            mov rdi, rbp	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000673	    0xff1500000000	                 call qword [0x04000679]	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000679	          0x4189c5	                           mov r13d, eax	       795	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400067c	          0x4889ef	                            mov rdi, rbp	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x400067f	      0xe800000000	                          call 0x4000684	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000684	          0x4101c4	                           add r12d, eax	       797	charset.c	FUNCTION_15	WHILE_1	IF_1	CALL_1
0x4000687	          0x4963c5	                        movsxd rax, r13d	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400068a	          0x4801c5	                            add rbp, rax	       798	charset.c	FUNCTION_15	WHILE_1	IF_1
0x400068d	        0x4183ed01	                             sub r13d, 1	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000691	          0x4429eb	                           sub ebx, r13d	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000694	            0xeb10	                           jmp 0x40006a6	       799	charset.c	FUNCTION_15	WHILE_1	IF_1
0x4000696	        0x4883c501	                              add rbp, 1	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x400069a	        0x400fb6ff	                          movzx edi, dil	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x400069e	      0xe800000000	                          call 0x40006a3	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40006a3	          0x4101c4	                           add r12d, eax	       803	charset.c	FUNCTION_15	WHILE_1	CALL_2
0x40006a6	         0xfb67d00	                   movzx edi, byte [rbp]	       790	charset.c	FUNCTION_15	WHILE_1
0x40006aa	          0x4084ff	                           test dil, dil	       790	charset.c	FUNCTION_15	WHILE_1
0x40006ad	            0x7405	                            je 0x40006b4	       790	charset.c	FUNCTION_15	WHILE_1
0x40006af	          0x83eb01	                              sub ebx, 1	       790	charset.c	FUNCTION_15	WHILE_1
0x40006b2	            0x79b3	                           jns 0x4000667	       790	charset.c	FUNCTION_15	WHILE_1
0x40006b4	          0x4489e0	                           mov eax, r12d	       806	charset.c	FUNCTION_15
0x40006b7	        0x4883c408	                              add rsp, 8	       806	charset.c	FUNCTION_15
0x40006bb	              0x5b	                                 pop rbx	       806	charset.c	FUNCTION_15
0x40006bc	              0x5d	                                 pop rbp	       806	charset.c	FUNCTION_15
0x40006bd	            0x415c	                                 pop r12	       806	charset.c	FUNCTION_15
0x40006bf	            0x415d	                                 pop r13	       806	charset.c	FUNCTION_15
0x40006c1	              0xc3	                                     ret	       806	charset.c	FUNCTION_15
vim_isblankline	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	12
0x40024a3	      0xe800000000	                          call 0x40024a8	      1837	charset.c	FUNCTION_58	CALL_1
0x40024a8	           0xfb608	                   movzx ecx, byte [rax]	      1838	charset.c	FUNCTION_58
0x40024ab	      0xb801000000	                              mov eax, 1	      1838	charset.c	FUNCTION_58
0x40024b0	          0x80f90d	                             cmp cl, 0xd	      1838	charset.c	FUNCTION_58
0x40024b3	            0x770f	                            ja 0x40024c4	      1838	charset.c	FUNCTION_58
0x40024b5	      0xb801240000	                         mov eax, 0x2401	      1838	charset.c	FUNCTION_58
0x40024ba	          0x48d3e8	                             shr rax, cl	      1838	charset.c	FUNCTION_58
0x40024bd	        0x4883f001	                              xor rax, 1	      1838	charset.c	FUNCTION_58
0x40024c1	          0x83e001	                              and eax, 1	      1838	charset.c	FUNCTION_58
0x40024c4	          0x83f001	                              xor eax, 1	      1838	charset.c	FUNCTION_58
0x40024c7	           0xfb6c0	                           movzx eax, al	      1838	charset.c	FUNCTION_58
0x40024ca	              0xc3	                                     ret	      1839	charset.c	FUNCTION_58
vim_isfilec_or_wc	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	27
0x4000829	              0x53	                                push rbx	       954	charset.c	FUNCTION_27
0x400082a	        0x4883ec10	                           sub rsp, 0x10	       954	charset.c	FUNCTION_27
0x400082e	            0x89fb	                            mov ebx, edi	       954	charset.c	FUNCTION_27
0x4000830	    0x64488b042528	                mov rax, qword fs:[0x28]	       954	charset.c	FUNCTION_27
0x4000839	      0x4889442408	                mov qword [rsp + 8], rax	       954	charset.c	FUNCTION_27
0x400083e	            0x31c0	                            xor eax, eax	       954	charset.c	FUNCTION_27
0x4000840	        0x40883c24	                     mov byte [rsp], dil	       957	charset.c	FUNCTION_27
0x4000844	      0xc644240100	                   mov byte [rsp + 1], 0	       958	charset.c	FUNCTION_27
0x4000849	      0xe800000000	                          call 0x400084e	       959	charset.c	FUNCTION_27	CALL_2
0x400084e	          0x83fb5d	                           cmp ebx, 0x5d	       959	charset.c	FUNCTION_27	CALL_2
0x4000851	            0x7416	                            je 0x4000869	       959	charset.c	FUNCTION_27	CALL_2
0x4000853	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x4000855	            0x7512	                           jne 0x4000869	       959	charset.c	FUNCTION_27	CALL_2
0x4000857	          0x4889e7	                            mov rdi, rsp	       959	charset.c	FUNCTION_27	CALL_2
0x400085a	      0xe800000000	                          call 0x400085f	       959	charset.c	FUNCTION_27	CALL_2
0x400085f	            0x85c0	                           test eax, eax	       959	charset.c	FUNCTION_27	CALL_2
0x4000861	           0xf95c0	                                setne al	       959	charset.c	FUNCTION_27	CALL_2
0x4000864	           0xfb6c0	                           movzx eax, al	       959	charset.c	FUNCTION_27	CALL_2
0x4000867	            0xeb05	                           jmp 0x400086e	       959	charset.c	FUNCTION_27	CALL_2
0x4000869	      0xb801000000	                              mov eax, 1	       959	charset.c	FUNCTION_27	CALL_2
0x400086e	      0x488b542408	                mov rdx, qword [rsp + 8]	       960	charset.c	FUNCTION_27
0x4000873	    0x644833142528	                xor rdx, qword fs:[0x28]	       960	charset.c	FUNCTION_27
0x400087c	            0x7405	                            je 0x4000883	       960	charset.c	FUNCTION_27
0x400087e	      0xe800000000	                          call 0x4000883	       960	charset.c	FUNCTION_27
0x4000883	        0x4883c410	                           add rsp, 0x10	       960	charset.c	FUNCTION_27
0x4000887	              0x5b	                                 pop rbx	       960	charset.c	FUNCTION_27
0x4000888	              0xc3	                                     ret	       960	charset.c	FUNCTION_27
vim_iswordp	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	5
0x40007ec	        0x4883ec08	                              sub rsp, 8	       920	charset.c	FUNCTION_24
0x40007f0	    0x488b35000000	            mov rsi, qword [0x040007f7] 	       921	charset.c	FUNCTION_24	CALL_1
0x40007f7	      0xe800000000	                          call 0x40007fc	       921	charset.c	FUNCTION_24	CALL_1
0x40007fc	        0x4883c408	                              add rsp, 8	       922	charset.c	FUNCTION_24
0x4000800	              0xc3	                                     ret	       922	charset.c	FUNCTION_24
ptr2cells	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	13
0x40005e6	    0x833d00000000	               cmp dword [0x040005ed], 0	       764	charset.c	FUNCTION_13	IF_1
0x40005ed	            0x7410	                            je 0x40005ff	       764	charset.c	FUNCTION_13	IF_1
0x40005ef	          0x803f00	                       cmp byte [rdi], 0	       764	charset.c	FUNCTION_13	IF_1
0x40005f2	            0x790b	                           jns 0x40005ff	       764	charset.c	FUNCTION_13	IF_1
0x40005f4	        0x4883ec08	                              sub rsp, 8	       761	charset.c	FUNCTION_13
0x40005f8	      0xe800000000	                          call 0x40005fd	       765	charset.c	FUNCTION_13	CALL_1
0x40005fd	            0xeb0e	                           jmp 0x400060d	       765	charset.c	FUNCTION_13	CALL_1
0x40005ff	           0xfb607	                   movzx eax, byte [rdi]	       768	charset.c	FUNCTION_13
0x4000602	     0xfb680000000	                   movzx eax, byte [rax]	       768	charset.c	FUNCTION_13
0x4000609	          0x83e007	                              and eax, 7	       768	charset.c	FUNCTION_13
0x400060c	              0xc3	                                     ret	       768	charset.c	FUNCTION_13
0x400060d	        0x4883c408	                              add rsp, 8	       769	charset.c	FUNCTION_13
0x4000611	              0xc3	                                     ret	       769	charset.c	FUNCTION_13
chartabsize	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	19
0x40006d5	        0x4883ec08	                              sub rsp, 8	       827	charset.c	FUNCTION_16
0x40006d9	          0x803f09	                       cmp byte [rdi], 9	       828	charset.c	FUNCTION_16
0x40006dc	            0x7532	                           jne 0x4000710	       828	charset.c	FUNCTION_16
0x40006de	    0x488b05000000	            mov rax, qword [0x040006e5] 	       828	charset.c	FUNCTION_16
0x40006e5	    0x83b834020000	              cmp dword [rax + 0x234], 0	       828	charset.c	FUNCTION_16
0x40006ec	            0x7409	                            je 0x40006f7	       828	charset.c	FUNCTION_16
0x40006ee	    0x833d00000000	               cmp dword [0x040006f5], 0	       828	charset.c	FUNCTION_16
0x40006f5	            0x7419	                            je 0x4000710	       828	charset.c	FUNCTION_16
0x40006f7	    0x488b05000000	            mov rax, qword [0x040006fe] 	       828	charset.c	FUNCTION_16
0x40006fe	    0x488b88a81500	          mov rcx, qword [rax + 0x15a8] 	       828	charset.c	FUNCTION_16
0x4000705	            0x89f0	                            mov eax, esi	       828	charset.c	FUNCTION_16
0x4000707	              0x99	                                     cdq	       828	charset.c	FUNCTION_16
0x4000708	            0xf7f9	                                idiv ecx	       828	charset.c	FUNCTION_16
0x400070a	            0x89c8	                            mov eax, ecx	       828	charset.c	FUNCTION_16
0x400070c	            0x29d0	                            sub eax, edx	       828	charset.c	FUNCTION_16
0x400070e	            0xeb05	                           jmp 0x4000715	       828	charset.c	FUNCTION_16
0x4000710	      0xe800000000	                          call 0x4000715	       828	charset.c	FUNCTION_16
0x4000715	        0x4883c408	                              add rsp, 8	       829	charset.c	FUNCTION_16
0x4000719	              0xc3	                                     ret	       829	charset.c	FUNCTION_16
vim_isdigit	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	5
0x4001b90	          0x83ef30	                           sub edi, 0x30	      1643	charset.c	FUNCTION_48
0x4001b93	          0x83ff09	                              cmp edi, 9	      1643	charset.c	FUNCTION_48
0x4001b96	           0xf96c0	                                setbe al	      1643	charset.c	FUNCTION_48
0x4001b99	           0xfb6c0	                           movzx eax, al	      1643	charset.c	FUNCTION_48
0x4001b9c	              0xc3	                                     ret	      1644	charset.c	FUNCTION_48
in_win_border	ELSE,0:FOR,0:IF,4:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	42
0x4000ccb	            0x4155	                                push r13	      1245	charset.c	FUNCTION_34
0x4000ccd	            0x4154	                                push r12	      1245	charset.c	FUNCTION_34
0x4000ccf	              0x55	                                push rbp	      1245	charset.c	FUNCTION_34
0x4000cd0	              0x53	                                push rbx	      1245	charset.c	FUNCTION_34
0x4000cd1	        0x4883ec08	                              sub rsp, 8	      1245	charset.c	FUNCTION_34
0x4000cd5	    0x8b9fac000000	            mov ebx, dword [rdi + 0xac] 	      1249	charset.c	FUNCTION_34	IF_1
0x4000cdb	            0x85db	                           test ebx, ebx	      1249	charset.c	FUNCTION_34	IF_1
0x4000cdd	            0x7453	                            je 0x4000d32	      1249	charset.c	FUNCTION_34	IF_1
0x4000cdf	          0x4189f4	                           mov r12d, esi	      1249	charset.c	FUNCTION_34	IF_1
0x4000ce2	          0x4889fd	                            mov rbp, rdi	      1249	charset.c	FUNCTION_34	IF_1
0x4000ce5	      0xe800000000	                          call 0x4000cea	      1251	charset.c	FUNCTION_34	CALL_1
0x4000cea	            0x29c3	                            sub ebx, eax	      1251	charset.c	FUNCTION_34	CALL_1
0x4000cec	          0x4189dd	                           mov r13d, ebx	      1251	charset.c	FUNCTION_34	CALL_1
0x4000cef	          0x8d43ff	                      lea eax, [rbx - 1]	      1252	charset.c	FUNCTION_34	IF_2
0x4000cf2	      0xbb00000000	                              mov ebx, 0	      1253	charset.c	FUNCTION_34	IF_2
0x4000cf7	          0x4439e0	                           cmp eax, r12d	      1252	charset.c	FUNCTION_34	IF_2
0x4000cfa	            0x7f36	                            jg 0x4000d32	      1252	charset.c	FUNCTION_34	IF_2
0x4000cfc	      0xbb01000000	                              mov ebx, 1	      1255	charset.c	FUNCTION_34	IF_3
0x4000d01	          0x4439e0	                           cmp eax, r12d	      1254	charset.c	FUNCTION_34	IF_3
0x4000d04	            0x742c	                            je 0x4000d32	      1254	charset.c	FUNCTION_34	IF_3
0x4000d06	          0x4889ef	                            mov rdi, rbp	      1256	charset.c	FUNCTION_34	CALL_2
0x4000d09	      0xe800000000	                          call 0x4000d0e	      1256	charset.c	FUNCTION_34	CALL_2
0x4000d0e	      0x418d4c0500	                    lea ecx, [r13 + rax]	      1256	charset.c	FUNCTION_34	CALL_2
0x4000d13	            0x85c9	                           test ecx, ecx	      1257	charset.c	FUNCTION_34	IF_4
0x4000d15	            0x7e16	                           jle 0x4000d2d	      1257	charset.c	FUNCTION_34	IF_4
0x4000d17	          0x4489e0	                           mov eax, r12d	      1259	charset.c	FUNCTION_34
0x4000d1a	          0x4429e8	                           sub eax, r13d	      1259	charset.c	FUNCTION_34
0x4000d1d	              0x99	                                     cdq	      1259	charset.c	FUNCTION_34
0x4000d1e	            0xf7f9	                                idiv ecx	      1259	charset.c	FUNCTION_34
0x4000d20	          0x83e901	                              sub ecx, 1	      1259	charset.c	FUNCTION_34
0x4000d23	            0x39ca	                            cmp edx, ecx	      1259	charset.c	FUNCTION_34
0x4000d25	           0xf94c3	                                 sete bl	      1259	charset.c	FUNCTION_34
0x4000d28	           0xfb6db	                           movzx ebx, bl	      1259	charset.c	FUNCTION_34
0x4000d2b	            0xeb05	                           jmp 0x4000d32	      1259	charset.c	FUNCTION_34
0x4000d2d	      0xbb00000000	                              mov ebx, 0	      1258	charset.c	FUNCTION_34	IF_4
0x4000d32	            0x89d8	                            mov eax, ebx	      1260	charset.c	FUNCTION_34
0x4000d34	        0x4883c408	                              add rsp, 8	      1260	charset.c	FUNCTION_34
0x4000d38	              0x5b	                                 pop rbx	      1260	charset.c	FUNCTION_34
0x4000d39	              0x5d	                                 pop rbp	      1260	charset.c	FUNCTION_34
0x4000d3a	            0x415c	                                 pop r12	      1260	charset.c	FUNCTION_34
0x4000d3c	            0x415d	                                 pop r13	      1260	charset.c	FUNCTION_34
0x4000d3e	              0xc3	                                     ret	      1260	charset.c	FUNCTION_34
vim_iswordp_buf	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	14
0x40007be	              0x53	                                push rbx	       926	charset.c	FUNCTION_25
0x40007bf	          0x4889f3	                            mov rbx, rsi	       926	charset.c	FUNCTION_25
0x40007c2	           0xfb607	                   movzx eax, byte [rdi]	       927	charset.c	FUNCTION_25
0x40007c5	    0x833d00000000	               cmp dword [0x040007cc], 0	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x40007cc	            0x7412	                            je 0x40007e0	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x40007ce	          0x4863d0	                         movsxd rdx, eax	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x40007d1	    0x80ba00000000	                       cmp byte [rdx], 1	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x40007d8	            0x7e06	                           jle 0x40007e0	       930	charset.c	FUNCTION_25	IF_1	CALL_1
0x40007da	    0xff1500000000	                 call qword [0x040007e0]	       931	charset.c	FUNCTION_25	IF_1
0x40007e0	          0x4889de	                            mov rsi, rbx	       933	charset.c	FUNCTION_25	CALL_2
0x40007e3	            0x89c7	                            mov edi, eax	       933	charset.c	FUNCTION_25	CALL_2
0x40007e5	      0xe800000000	                          call 0x40007ea	       933	charset.c	FUNCTION_25	CALL_2
0x40007ea	              0x5b	                                 pop rbx	       934	charset.c	FUNCTION_25
0x40007eb	              0xc3	                                     ret	       934	charset.c	FUNCTION_25
skiptowhite_esc	ELSE,0:FOR,0:IF,1:WHILE,1:DO,0:CALL,0:functions,0:SWITCH,0	23
0x4001e38	          0x4889f8	                            mov rax, rdi	      1800	charset.c	FUNCTION_56
0x4001e3b	           0xfb617	                   movzx edx, byte [rdi]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e3e	          0xf6c2df	                           test dl, 0xdf	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e41	            0x7434	                            je 0x4001e77	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e43	          0x80fa09	                               cmp dl, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e46	            0x742f	                            je 0x4001e77	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e48	          0x80fa5c	                            cmp dl, 0x5c	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e4b	            0x7408	                            je 0x4001e55	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e4d	          0x4889c1	                            mov rcx, rax	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e50	          0x80fa16	                            cmp dl, 0x16	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e53	            0x750a	                           jne 0x4001e5f	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e55	        0x80780100	                   cmp byte [rax + 1], 0	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e59	            0x7418	                            je 0x4001e73	      1803	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e5b	        0x488d4801	                      lea rcx, [rax + 1]	      1804	charset.c	FUNCTION_56	WHILE_1	IF_1
0x4001e5f	        0x488d4101	                      lea rax, [rcx + 1]	      1805	charset.c	FUNCTION_56	WHILE_1
0x4001e63	         0xfb65101	               movzx edx, byte [rcx + 1]	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e67	          0xf6c2df	                           test dl, 0xdf	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e6a	            0x740b	                            je 0x4001e77	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e6c	          0x80fa09	                               cmp dl, 9	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e6f	            0x75d7	                           jne 0x4001e48	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e71	            0xf3c3	                                     ret	      1801	charset.c	FUNCTION_56	WHILE_1
0x4001e73	        0x4883c001	                              add rax, 1	      1805	charset.c	FUNCTION_56	WHILE_1
0x4001e77	            0xf3c3	                                     ret	      1808	charset.c	FUNCTION_56
win_nolbr_chartabsize	ELSE,0:FOR,0:IF,3:WHILE,0:DO,0:CALL,3:functions,0:SWITCH,0	50
0x4000d3f	            0x4155	                                push r13	      1219	charset.c	FUNCTION_33
0x4000d41	            0x4154	                                push r12	      1219	charset.c	FUNCTION_33
0x4000d43	              0x55	                                push rbp	      1219	charset.c	FUNCTION_33
0x4000d44	              0x53	                                push rbx	      1219	charset.c	FUNCTION_33
0x4000d45	        0x4883ec08	                              sub rsp, 8	      1219	charset.c	FUNCTION_33
0x4000d49	          0x803e09	                       cmp byte [rsi], 9	      1222	charset.c	FUNCTION_33	IF_1
0x4000d4c	            0x7528	                           jne 0x4000d76	      1222	charset.c	FUNCTION_33	IF_1
0x4000d4e	    0x83bf34020000	              cmp dword [rdi + 0x234], 0	      1222	charset.c	FUNCTION_33	IF_1
0x4000d55	            0x7409	                            je 0x4000d60	      1222	charset.c	FUNCTION_33	IF_1
0x4000d57	    0x833d00000000	               cmp dword [0x04000d5e], 0	      1222	charset.c	FUNCTION_33	IF_1
0x4000d5e	            0x7416	                            je 0x4000d76	      1222	charset.c	FUNCTION_33	IF_1
0x4000d60	        0x488b4708	                mov rax, qword [rdi + 8]	      1224	charset.c	FUNCTION_33	IF_1
0x4000d64	    0x4c8b80a81500	           mov r8, qword [rax + 0x15a8] 	      1224	charset.c	FUNCTION_33	IF_1
0x4000d6b	            0x89d0	                            mov eax, edx	      1225	charset.c	FUNCTION_33	IF_1
0x4000d6d	              0x99	                                     cdq	      1225	charset.c	FUNCTION_33	IF_1
0x4000d6e	          0x41f7f8	                                idiv r8d	      1225	charset.c	FUNCTION_33	IF_1
0x4000d71	          0x4129d0	                            sub r8d, edx	      1225	charset.c	FUNCTION_33	IF_1
0x4000d74	            0xeb5c	                           jmp 0x4000dd2	      1225	charset.c	FUNCTION_33	IF_1
0x4000d76	          0x4989cc	                            mov r12, rcx	      1225	charset.c	FUNCTION_33	IF_1
0x4000d79	            0x89d5	                            mov ebp, edx	      1225	charset.c	FUNCTION_33	IF_1
0x4000d7b	          0x4889f3	                            mov rbx, rsi	      1225	charset.c	FUNCTION_33	IF_1
0x4000d7e	          0x4989fd	                            mov r13, rdi	      1225	charset.c	FUNCTION_33	IF_1
0x4000d81	          0x4889f7	                            mov rdi, rsi	      1227	charset.c	FUNCTION_33	CALL_1
0x4000d84	      0xe800000000	                          call 0x4000d89	      1227	charset.c	FUNCTION_33	CALL_1
0x4000d89	          0x4189c0	                            mov r8d, eax	      1236	charset.c	FUNCTION_33
0x4000d8c	          0x83f802	                              cmp eax, 2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000d8f	            0x7541	                           jne 0x4000dd2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000d91	           0xfb603	                   movzx eax, byte [rbx]	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000d94	    0x41b802000000	                              mov r8d, 2	      1236	charset.c	FUNCTION_33
0x4000d9a	    0x80b800000000	                       cmp byte [rax], 1	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000da1	            0x7e2f	                           jle 0x4000dd2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000da3	            0x89ee	                            mov esi, ebp	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000da5	          0x4c89ef	                            mov rdi, r13	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000da8	      0xe800000000	                          call 0x4000dad	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000dad	    0x41b802000000	                              mov r8d, 2	      1236	charset.c	FUNCTION_33
0x4000db3	            0x85c0	                           test eax, eax	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000db5	            0x741b	                            je 0x4000dd2	      1230	charset.c	FUNCTION_33	IF_2	CALL_3
0x4000db7	          0x4d85e4	                           test r12, r12	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x4000dba	            0x7410	                            je 0x4000dcc	      1232	charset.c	FUNCTION_33	IF_2	IF_3
0x4000dbc	    0x41c704240100	                      mov dword [r12], 1	      1233	charset.c	FUNCTION_33	IF_2	IF_3
0x4000dc4	    0x41b803000000	                              mov r8d, 3	      1234	charset.c	FUNCTION_33	IF_2
0x4000dca	            0xeb06	                           jmp 0x4000dd2	      1234	charset.c	FUNCTION_33	IF_2
0x4000dcc	    0x41b803000000	                              mov r8d, 3	      1234	charset.c	FUNCTION_33	IF_2
0x4000dd2	          0x4489c0	                            mov eax, r8d	      1237	charset.c	FUNCTION_33
0x4000dd5	        0x4883c408	                              add rsp, 8	      1237	charset.c	FUNCTION_33
0x4000dd9	              0x5b	                                 pop rbx	      1237	charset.c	FUNCTION_33
0x4000dda	              0x5d	                                 pop rbp	      1237	charset.c	FUNCTION_33
0x4000ddb	            0x415c	                                 pop r12	      1237	charset.c	FUNCTION_33
0x4000ddd	            0x415d	                                 pop r13	      1237	charset.c	FUNCTION_33
0x4000ddf	              0xc3	                                     ret	      1237	charset.c	FUNCTION_33
transchar	ELSE,1:FOR,0:IF,2:WHILE,0:DO,0:CALL,5:functions,0:SWITCH,0	60
0x400093d	              0x55	                                push rbp	       555	charset.c	FUNCTION_6
0x400093e	              0x53	                                push rbx	       555	charset.c	FUNCTION_6
0x400093f	        0x4883ec08	                              sub rsp, 8	       555	charset.c	FUNCTION_6
0x4000943	            0x89fd	                            mov ebp, edi	       555	charset.c	FUNCTION_6
0x4000945	      0xbb00000000	                              mov ebx, 0	       558	charset.c	FUNCTION_6
0x400094a	            0x85ff	                           test edi, edi	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x400094c	            0x7925	                           jns 0x4000973	       559	charset.c	FUNCTION_6	IF_1	CALL_1
0x400094e	    0xc60500000000	            mov byte [0x04000955], 0x7e 	       561	charset.c	FUNCTION_6	IF_1
0x4000955	    0xc60500000000	            mov byte [0x0400095c], 0x40 	       562	charset.c	FUNCTION_6	IF_1
0x400095c	    0x81ff80000000	                           cmp edi, 0x80	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000962	     0xf8487000000	                            je 0x40009ef	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000968	            0xf7dd	                                 neg ebp	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x400096a	        0x400fb6ed	                          movzx ebp, bpl	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x400096e	      0xbb02000000	                              mov ebx, 2	       563	charset.c	FUNCTION_6	IF_1
0x4000973	    0x833d00000000	               cmp dword [0x0400097a], 0	       567	charset.c	FUNCTION_6	IF_2
0x400097a	            0x7528	                           jne 0x40009a4	       567	charset.c	FUNCTION_6	IF_2
0x400097c	          0x8d45e0	                   lea eax, [rbp - 0x20]	       567	charset.c	FUNCTION_6	IF_2
0x400097f	          0x83f85e	                           cmp eax, 0x5e	       567	charset.c	FUNCTION_6	IF_2
0x4000982	            0x763f	                           jbe 0x40009c3	       567	charset.c	FUNCTION_6	IF_2
0x4000984	    0x833d00000000	               cmp dword [0x0400098b], 0	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x400098b	            0x7417	                            je 0x40009a4	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x400098d	            0xeb0a	                           jmp 0x4000999	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x400098f	      0xbb02000000	                              mov ebx, 2	       563	charset.c	FUNCTION_6	IF_1
0x4000994	      0xbdfe000000	                           mov ebp, 0xfe	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000999	            0x89ef	                            mov edi, ebp	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x400099b	      0xe800000000	                          call 0x40009a0	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x40009a0	            0x85c0	                           test eax, eax	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x40009a2	            0x751f	                           jne 0x40009c3	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x40009a4	    0x81fdff000000	                           cmp ebp, 0xff	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009aa	            0x7f30	                            jg 0x40009dc	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009ac	            0xeb0a	                           jmp 0x40009b8	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009ae	      0xbb02000000	                              mov ebx, 2	       563	charset.c	FUNCTION_6	IF_1
0x40009b3	      0xbdfe000000	                           mov ebp, 0xfe	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x40009b8	            0x89ef	                            mov edi, ebp	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009ba	      0xe800000000	                          call 0x40009bf	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009bf	            0x85c0	                           test eax, eax	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009c1	            0x7419	                            je 0x40009dc	       576	charset.c	FUNCTION_6	IF_2	CALL_4
0x40009c3	          0x4863c3	                         movsxd rax, ebx	       579	charset.c	FUNCTION_6	IF_2
0x40009c6	    0x4088a8000000	                     mov byte [rax], bpl	       579	charset.c	FUNCTION_6	IF_2
0x40009cd	          0x83c301	                              add ebx, 1	       580	charset.c	FUNCTION_6	IF_2
0x40009d0	          0x4863db	                         movsxd rbx, ebx	       580	charset.c	FUNCTION_6	IF_2
0x40009d3	    0xc68300000000	                       mov byte [rbx], 0	       580	charset.c	FUNCTION_6	IF_2
0x40009da	            0xeb31	                           jmp 0x4000a0d	       580	charset.c	FUNCTION_6	IF_2
0x40009dc	          0x4863fb	                         movsxd rdi, ebx	       583	charset.c	FUNCTION_6	CALL_5
0x40009df	    0x4881c7000000	                              add rdi, 0	       583	charset.c	FUNCTION_6	CALL_5
0x40009e6	            0x89ee	                            mov esi, ebp	       583	charset.c	FUNCTION_6	CALL_5
0x40009e8	      0xe800000000	                          call 0x40009ed	       583	charset.c	FUNCTION_6	CALL_5
0x40009ed	            0xeb1e	                           jmp 0x4000a0d	       584	charset.c	FUNCTION_6
0x40009ef	    0x833d00000000	               cmp dword [0x040009f6], 0	       567	charset.c	FUNCTION_6	IF_2
0x40009f6	            0x75b6	                           jne 0x40009ae	       567	charset.c	FUNCTION_6	IF_2
0x40009f8	    0x833d00000000	               cmp dword [0x040009ff], 0	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x40009ff	            0x758e	                           jne 0x400098f	       574	charset.c	FUNCTION_6	IF_2	CALL_3
0x4000a01	      0xbb02000000	                              mov ebx, 2	       563	charset.c	FUNCTION_6	IF_1
0x4000a06	      0xbdfe000000	                           mov ebp, 0xfe	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000a0b	            0xebab	                           jmp 0x40009b8	       564	charset.c	FUNCTION_6	IF_1	CALL_2
0x4000a0d	      0xb800000000	                              mov eax, 0	       585	charset.c	FUNCTION_6
0x4000a12	        0x4883c408	                              add rsp, 8	       585	charset.c	FUNCTION_6
0x4000a16	              0x5b	                                 pop rbx	       585	charset.c	FUNCTION_6
0x4000a17	              0x5d	                                 pop rbp	       585	charset.c	FUNCTION_6
0x4000a18	              0xc3	                                     ret	       585	charset.c	FUNCTION_6
vim_isupper	ELSE,0:FOR,0:IF,6:WHILE,0:DO,0:CALL,3:functions,0:SWITCH,0	35
0x4001c73	      0xb800000000	                              mov eax, 0	      1711	charset.c	FUNCTION_52	IF_1
0x4001c78	          0x83ff40	                           cmp edi, 0x40	      1710	charset.c	FUNCTION_52	IF_1
0x4001c7b	            0x7e68	                           jle 0x4001ce5	      1710	charset.c	FUNCTION_52	IF_1
0x4001c7d	              0x53	                                push rbx	      1709	charset.c	FUNCTION_52
0x4001c7e	            0x89fb	                            mov ebx, edi	      1709	charset.c	FUNCTION_52
0x4001c80	          0x83ff7f	                           cmp edi, 0x7f	      1712	charset.c	FUNCTION_52	IF_2
0x4001c83	            0x7e49	                           jle 0x4001cce	      1712	charset.c	FUNCTION_52	IF_2
0x4001c85	    0x833d00000000	               cmp dword [0x04001c8c], 0	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x4001c8c	            0x7407	                            je 0x4001c95	      1714	charset.c	FUNCTION_52	IF_2	IF_3
0x4001c8e	      0xe800000000	                          call 0x4001c93	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4001c93	            0xeb4f	                           jmp 0x4001ce4	      1715	charset.c	FUNCTION_52	IF_2	CALL_1
0x4001c95	    0x81ffff000000	                           cmp edi, 0xff	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x4001c9b	            0x7e11	                           jle 0x4001cae	      1716	charset.c	FUNCTION_52	IF_2	IF_4
0x4001c9d	    0x8b0500000000	            mov eax, dword [0x04001ca3] 	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4001ca3	            0x85c0	                           test eax, eax	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4001ca5	            0x743d	                            je 0x4001ce4	      1719	charset.c	FUNCTION_52	IF_2	IF_4	IF_5
0x4001ca7	      0xe800000000	                          call 0x4001cac	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4001cac	            0xeb36	                           jmp 0x4001ce4	      1720	charset.c	FUNCTION_52	IF_2	IF_4	CALL_2
0x4001cae	    0x833d00000000	               cmp dword [0x04001cb5], 0	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cb5	            0x7417	                            je 0x4001cce	      1725	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cb7	          0x4863ff	                         movsxd rdi, edi	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cba	     0xfb687000000	                   movzx eax, byte [rdi]	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cc1	          0x83e055	                           and eax, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cc4	            0x3c55	                            cmp al, 0x55	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cc6	           0xf94c0	                                 sete al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cc9	           0xfb6c0	                           movzx eax, al	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001ccc	            0xeb16	                           jmp 0x4001ce4	      1726	charset.c	FUNCTION_52	IF_2	IF_6
0x4001cce	      0xe800000000	                          call 0x4001cd3	      1728	charset.c	FUNCTION_52	CALL_3
0x4001cd3	          0x4863fb	                         movsxd rdi, ebx	      1728	charset.c	FUNCTION_52	CALL_3
0x4001cd6	          0x488b00	                    mov rax, qword [rax]	      1728	charset.c	FUNCTION_52	CALL_3
0x4001cd9	         0xfb70478	           movzx eax, word [rax + rdi*2]	      1728	charset.c	FUNCTION_52	CALL_3
0x4001cdd	        0x66250001	                           and ax, 0x100	      1728	charset.c	FUNCTION_52	CALL_3
0x4001ce1	           0xfb7c0	                           movzx eax, ax	      1728	charset.c	FUNCTION_52	CALL_3
0x4001ce4	              0x5b	                                 pop rbx	      1729	charset.c	FUNCTION_52
0x4001ce5	            0xf3c3	                                     ret	      1729	charset.c	FUNCTION_52
skipwhite	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	13
0x4001ab7	          0x4889f8	                            mov rax, rdi	      1530	charset.c	ELSE_3	ELSE_4	FUNCTION_39
0x4001aba	           0xfb617	                   movzx edx, byte [rdi]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001abd	          0x80fa20	                            cmp dl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ac0	            0x7405	                            je 0x4001ac7	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ac2	          0x80fa09	                               cmp dl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ac5	            0x7511	                           jne 0x4001ad8	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ac7	        0x4883c001	                              add rax, 1	      1534	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1
0x4001acb	           0xfb610	                   movzx edx, byte [rax]	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ace	          0x80fa20	                            cmp dl, 0x20	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ad1	            0x74f4	                            je 0x4001ac7	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ad3	          0x80fa09	                               cmp dl, 9	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ad6	            0x74ef	                            je 0x4001ac7	      1533	charset.c	ELSE_3	ELSE_4	FUNCTION_39	WHILE_1	CALL_1
0x4001ad8	            0xf3c3	                                     ret	      1536	charset.c	ELSE_3	ELSE_4	FUNCTION_39
vim_isxdigit	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	10
0x4001b9d	          0x8d57d0	                   lea edx, [rdi - 0x30]	      1656	charset.c	FUNCTION_49
0x4001ba0	      0xb801000000	                              mov eax, 1	      1656	charset.c	FUNCTION_49
0x4001ba5	          0x83fa09	                              cmp edx, 9	      1656	charset.c	FUNCTION_49
0x4001ba8	            0x760f	                           jbe 0x4001bb9	      1656	charset.c	FUNCTION_49
0x4001baa	          0x83e7df	                     and edi, 0xffffffdf	      1656	charset.c	FUNCTION_49
0x4001bad	          0x83ef41	                           sub edi, 0x41	      1656	charset.c	FUNCTION_49
0x4001bb0	          0x83ff05	                              cmp edi, 5	      1656	charset.c	FUNCTION_49
0x4001bb3	           0xf96c0	                                setbe al	      1656	charset.c	FUNCTION_49
0x4001bb6	           0xfb6c0	                           movzx eax, al	      1656	charset.c	FUNCTION_49
0x4001bb9	            0xf3c3	                                     ret	      1657	charset.c	FUNCTION_49
vim_isfilec	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	11
0x4000801	      0xb801000000	                              mov eax, 1	       943	charset.c	FUNCTION_26
0x4000806	    0x81ffff000000	                           cmp edi, 0xff	       943	charset.c	FUNCTION_26
0x400080c	            0x7f19	                            jg 0x4000827	       943	charset.c	FUNCTION_26
0x400080e	      0xb800000000	                              mov eax, 0	       943	charset.c	FUNCTION_26
0x4000813	            0x85ff	                           test edi, edi	       943	charset.c	FUNCTION_26
0x4000815	            0x7e10	                           jle 0x4000827	       943	charset.c	FUNCTION_26
0x4000817	          0x4863ff	                         movsxd rdi, edi	       943	charset.c	FUNCTION_26
0x400081a	     0xfb687000000	                   movzx eax, byte [rdi]	       943	charset.c	FUNCTION_26
0x4000821	          0xc0e806	                               shr al, 6	       943	charset.c	FUNCTION_26
0x4000824	          0x83e001	                              and eax, 1	       943	charset.c	FUNCTION_26
0x4000827	            0xf3c3	                                     ret	       944	charset.c	FUNCTION_26
backslash_halve	ELSE,0:FOR,1:IF,1:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	27
0x40028fb	          0x803f00	                       cmp byte [rdi], 0	      2080	charset.c	FUNCTION_63	FOR_1
0x40028fe	            0x744a	                            je 0x400294a	      2080	charset.c	FUNCTION_63	FOR_1
0x4002900	              0x55	                                push rbp	      2079	charset.c	FUNCTION_63
0x4002901	              0x53	                                push rbx	      2079	charset.c	FUNCTION_63
0x4002902	        0x4883ec08	                              sub rsp, 8	      2079	charset.c	FUNCTION_63
0x4002906	          0x4889fb	                            mov rbx, rdi	      2079	charset.c	FUNCTION_63
0x4002909	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4002910	          0x4889df	                            mov rdi, rbx	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4002913	      0xe800000000	                          call 0x4002918	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4002918	            0x85c0	                           test eax, eax	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x400291a	            0x741f	                            je 0x400293b	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x400291c	        0x488d7301	                      lea rsi, [rbx + 1]	      2081	charset.c	FUNCTION_63	FOR_1	IF_1	CALL_1
0x4002920	      0xb800000000	                              mov eax, 0	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4002925	          0x4889e9	                            mov rcx, rbp	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4002928	          0x4889f7	                            mov rdi, rsi	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400292b	            0xf2ae	              repne scasb al, byte [rdi]	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x400292d	          0x4889ca	                            mov rdx, rcx	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4002930	          0x48f7d2	                                 not rdx	      2082	charset.c	FUNCTION_63	FOR_1	IF_1
0x4002933	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x4002936	      0xe800000000	                          call 0x400293b	        59	string3.h	FUNCTION_67	CALL_3
0x400293b	        0x4883c301	                              add rbx, 1	      2080	charset.c	FUNCTION_63	FOR_1
0x400293f	          0x803b00	                       cmp byte [rbx], 0	      2080	charset.c	FUNCTION_63	FOR_1
0x4002942	            0x75cc	                           jne 0x4002910	      2080	charset.c	FUNCTION_63	FOR_1
0x4002944	        0x4883c408	                              add rsp, 8	      2083	charset.c	FUNCTION_63
0x4002948	              0x5b	                                 pop rbx	      2083	charset.c	FUNCTION_63
0x4002949	              0x5d	                                 pop rbp	      2083	charset.c	FUNCTION_63
0x400294a	            0xf3c3	                                     ret	      2083	charset.c	FUNCTION_63
vim_islower	ELSE,0:FOR,0:IF,6:WHILE,0:DO,0:CALL,3:functions,0:SWITCH,0	31
0x4001c0f	      0xb800000000	                              mov eax, 0	      1687	charset.c	FUNCTION_51	IF_1
0x4001c14	          0x83ff40	                           cmp edi, 0x40	      1686	charset.c	FUNCTION_51	IF_1
0x4001c17	            0x7e58	                           jle 0x4001c71	      1686	charset.c	FUNCTION_51	IF_1
0x4001c19	              0x53	                                push rbx	      1685	charset.c	FUNCTION_51
0x4001c1a	            0x89fb	                            mov ebx, edi	      1685	charset.c	FUNCTION_51
0x4001c1c	          0x83ff7f	                           cmp edi, 0x7f	      1688	charset.c	FUNCTION_51	IF_2
0x4001c1f	            0x7e39	                           jle 0x4001c5a	      1688	charset.c	FUNCTION_51	IF_2
0x4001c21	    0x8b0500000000	            mov eax, dword [0x04001c27] 	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4001c27	            0x85c0	                           test eax, eax	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4001c29	            0x7407	                            je 0x4001c32	      1690	charset.c	FUNCTION_51	IF_2	IF_3
0x4001c2b	      0xe800000000	                          call 0x4001c30	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4001c30	            0xeb3e	                           jmp 0x4001c70	      1691	charset.c	FUNCTION_51	IF_2	CALL_1
0x4001c32	    0x81ffff000000	                           cmp edi, 0xff	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x4001c38	            0x7f36	                            jg 0x4001c70	      1692	charset.c	FUNCTION_51	IF_2	IF_4
0x4001c3a	    0x833d00000000	               cmp dword [0x04001c41], 0	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c41	            0x7417	                            je 0x4001c5a	      1701	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c43	          0x4863ff	                         movsxd rdi, edi	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c46	     0xfb687000000	                   movzx eax, byte [rdi]	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c4d	          0x83e06c	                           and eax, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c50	            0x3c6c	                            cmp al, 0x6c	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c52	           0xf94c0	                                 sete al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c55	           0xfb6c0	                           movzx eax, al	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c58	            0xeb16	                           jmp 0x4001c70	      1702	charset.c	FUNCTION_51	IF_2	IF_6
0x4001c5a	      0xe800000000	                          call 0x4001c5f	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c5f	          0x4863fb	                         movsxd rdi, ebx	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c62	          0x488b00	                    mov rax, qword [rax]	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c65	         0xfb70478	           movzx eax, word [rax + rdi*2]	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c69	        0x66250002	                           and ax, 0x200	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c6d	           0xfb7c0	                           movzx eax, ax	      1704	charset.c	FUNCTION_51	CALL_3
0x4001c70	              0x5b	                                 pop rbx	      1705	charset.c	FUNCTION_51
0x4001c71	            0xf3c3	                                     ret	      1705	charset.c	FUNCTION_51
init_chartab	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	6
0x4002489	        0x4883ec08	                              sub rsp, 8	        72	charset.c	FUNCTION_1
0x400248d	      0xbe01000000	                              mov esi, 1	        73	charset.c	FUNCTION_1	CALL_1
0x4002492	    0x488b3d000000	            mov rdi, qword [0x04002499] 	        73	charset.c	FUNCTION_1	CALL_1
0x4002499	      0xe800000000	                          call 0x400249e	        73	charset.c	FUNCTION_1	CALL_1
0x400249e	        0x4883c408	                              add rsp, 8	        74	charset.c	FUNCTION_1
0x40024a2	              0xc3	                                     ret	        74	charset.c	FUNCTION_1
getvcol_nolist	ELSE,1:FOR,0:IF,1:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	30
0x4001902	              0x53	                                push rbx	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001903	        0x4883ec10	                           sub rsp, 0x10	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001907	          0x4889fe	                            mov rsi, rdi	      1415	charset.c	ELSE_6	FUNCTION_36
0x400190a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001913	      0x4889442408	                mov qword [rsp + 8], rax	      1415	charset.c	ELSE_6	FUNCTION_36
0x4001918	            0x31c0	                            xor eax, eax	      1415	charset.c	ELSE_6	FUNCTION_36
0x400191a	    0x488b3d000000	            mov rdi, qword [0x04001921] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4001921	    0x8b9f34020000	           mov ebx, dword [rdi + 0x234] 	      1416	charset.c	ELSE_6	FUNCTION_36
0x4001927	    0xc78734020000	              mov dword [rdi + 0x234], 0	      1419	charset.c	ELSE_6	FUNCTION_36
0x4001931	        0x837e0c00	                cmp dword [rsi + 0xc], 0	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4001935	            0x7417	                            je 0x400194e	      1421	charset.c	ELSE_6	FUNCTION_36	IF_1
0x4001937	    0x41b800000000	                              mov r8d, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400193d	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001942	      0xba00000000	                              mov edx, 0	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x4001947	      0xe800000000	                          call 0x400194c	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400194c	            0xeb15	                           jmp 0x4001963	      1422	charset.c	ELSE_6	FUNCTION_36	CALL_1
0x400194e	    0x41b800000000	                              mov r8d, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4001954	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4001959	      0xba00000000	                              mov edx, 0	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x400195e	      0xe800000000	                          call 0x4001963	      1425	charset.c	ELSE_6	FUNCTION_36	CALL_2
0x4001963	    0x488b05000000	            mov rax, qword [0x0400196a] 	      1426	charset.c	ELSE_6	FUNCTION_36
0x400196a	    0x899834020000	            mov dword [rax + 0x234], ebx	      1426	charset.c	ELSE_6	FUNCTION_36
0x4001970	        0x8b442404	                mov eax, dword [rsp + 4]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001974	      0x488b542408	                mov rdx, qword [rsp + 8]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001979	    0x644833142528	                xor rdx, qword fs:[0x28]	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001982	            0x7405	                            je 0x4001989	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001984	      0xe800000000	                          call 0x4001989	      1428	charset.c	ELSE_6	FUNCTION_36
0x4001989	        0x4883c410	                           add rsp, 0x10	      1428	charset.c	ELSE_6	FUNCTION_36
0x400198d	              0x5b	                                 pop rbx	      1428	charset.c	ELSE_6	FUNCTION_36
0x400198e	              0xc3	                                     ret	      1428	charset.c	ELSE_6	FUNCTION_36
win_chartabsize	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	19
0x4000612	        0x4883ec08	                              sub rsp, 8	       834	charset.c	FUNCTION_17
0x4000616	          0x803e09	                       cmp byte [rsi], 9	       835	charset.c	FUNCTION_17
0x4000619	            0x7528	                           jne 0x4000643	       835	charset.c	FUNCTION_17
0x400061b	    0x83bf34020000	              cmp dword [rdi + 0x234], 0	       835	charset.c	FUNCTION_17
0x4000622	            0x7409	                            je 0x400062d	       835	charset.c	FUNCTION_17
0x4000624	    0x833d00000000	               cmp dword [0x0400062b], 0	       835	charset.c	FUNCTION_17
0x400062b	            0x7416	                            je 0x4000643	       835	charset.c	FUNCTION_17
0x400062d	        0x488b4708	                mov rax, qword [rdi + 8]	       835	charset.c	FUNCTION_17
0x4000631	    0x488b88a81500	          mov rcx, qword [rax + 0x15a8] 	       835	charset.c	FUNCTION_17
0x4000638	            0x89d0	                            mov eax, edx	       835	charset.c	FUNCTION_17
0x400063a	              0x99	                                     cdq	       835	charset.c	FUNCTION_17
0x400063b	            0xf7f9	                                idiv ecx	       835	charset.c	FUNCTION_17
0x400063d	            0x89c8	                            mov eax, ecx	       835	charset.c	FUNCTION_17
0x400063f	            0x29d0	                            sub eax, edx	       835	charset.c	FUNCTION_17
0x4000641	            0xeb08	                           jmp 0x400064b	       835	charset.c	FUNCTION_17
0x4000643	          0x4889f7	                            mov rdi, rsi	       835	charset.c	FUNCTION_17
0x4000646	      0xe800000000	                          call 0x400064b	       835	charset.c	FUNCTION_17
0x400064b	        0x4883c408	                              add rsp, 8	       836	charset.c	FUNCTION_17
0x400064f	              0xc3	                                     ret	       836	charset.c	FUNCTION_17
linetabsize	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	6
0x4001434	        0x4883ec08	                              sub rsp, 8	       845	charset.c	FUNCTION_18
0x4001438	          0x4889fe	                            mov rsi, rdi	       845	charset.c	FUNCTION_18
0x400143b	      0xbf00000000	                              mov edi, 0	       846	charset.c	FUNCTION_18	CALL_1
0x4001440	      0xe800000000	                          call 0x4001445	       846	charset.c	FUNCTION_18	CALL_1
0x4001445	        0x4883c408	                              add rsp, 8	       847	charset.c	FUNCTION_18
0x4001449	              0xc3	                                     ret	       847	charset.c	FUNCTION_18
vim_isprintc_strict	ELSE,0:FOR,0:IF,2:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	28
0x40008d2	    0x833d00000000	               cmp dword [0x040008d9], 0	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008d9	            0x7419	                            je 0x40008f4	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008db	    0x81ffff000000	                           cmp edi, 0xff	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008e1	            0x7f11	                            jg 0x40008f4	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008e3	          0x4863d7	                         movsxd rdx, edi	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008e6	      0xb800000000	                              mov eax, 0	       986	charset.c	FUNCTION_29	IF_1
0x40008eb	    0x80ba00000000	                       cmp byte [rdx], 1	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008f2	            0x7f47	                            jg 0x400093b	       985	charset.c	FUNCTION_29	IF_1	CALL_1
0x40008f4	    0x833d00000000	               cmp dword [0x040008fb], 0	       987	charset.c	FUNCTION_29	IF_2
0x40008fb	            0x7413	                            je 0x4000910	       987	charset.c	FUNCTION_29	IF_2
0x40008fd	    0x81ffff000000	                           cmp edi, 0xff	       987	charset.c	FUNCTION_29	IF_2
0x4000903	            0x7e0b	                           jle 0x4000910	       987	charset.c	FUNCTION_29	IF_2
0x4000905	        0x4883ec08	                              sub rsp, 8	       983	charset.c	FUNCTION_29
0x4000909	      0xe800000000	                          call 0x400090e	       988	charset.c	FUNCTION_29	CALL_2
0x400090e	            0xeb27	                           jmp 0x4000937	       988	charset.c	FUNCTION_29	CALL_2
0x4000910	      0xb801000000	                              mov eax, 1	       990	charset.c	FUNCTION_29
0x4000915	    0x81ffff000000	                           cmp edi, 0xff	       990	charset.c	FUNCTION_29
0x400091b	            0x7f1e	                            jg 0x400093b	       990	charset.c	FUNCTION_29
0x400091d	      0xb800000000	                              mov eax, 0	       990	charset.c	FUNCTION_29
0x4000922	            0x85ff	                           test edi, edi	       990	charset.c	FUNCTION_29
0x4000924	            0x7e15	                           jle 0x400093b	       990	charset.c	FUNCTION_29
0x4000926	          0x4863ff	                         movsxd rdi, edi	       990	charset.c	FUNCTION_29
0x4000929	     0xfb687000000	                   movzx eax, byte [rdi]	       986	charset.c	FUNCTION_29	IF_1
0x4000930	          0xc0e804	                               shr al, 4	       986	charset.c	FUNCTION_29	IF_1
0x4000933	          0x83e001	                              and eax, 1	       986	charset.c	FUNCTION_29	IF_1
0x4000936	              0xc3	                                     ret	       986	charset.c	FUNCTION_29	IF_1
0x4000937	        0x4883c408	                              add rsp, 8	       991	charset.c	FUNCTION_29
0x400093b	            0xf3c3	                                     ret	       991	charset.c	FUNCTION_29
vim_iswordc	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	5
0x40007a9	        0x4883ec08	                              sub rsp, 8	       895	charset.c	FUNCTION_22
0x40007ad	    0x488b35000000	            mov rsi, qword [0x040007b4] 	       896	charset.c	FUNCTION_22	CALL_1
0x40007b4	      0xe800000000	                          call 0x40007b9	       896	charset.c	FUNCTION_22	CALL_1
0x40007b9	        0x4883c408	                              add rsp, 8	       897	charset.c	FUNCTION_22
0x40007bd	              0xc3	                                     ret	       897	charset.c	FUNCTION_22
backslash_halve_save	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	16
0x400294c	              0x55	                                push rbp	      2090	charset.c	FUNCTION_64
0x400294d	              0x53	                                push rbx	      2090	charset.c	FUNCTION_64
0x400294e	        0x4883ec08	                              sub rsp, 8	      2090	charset.c	FUNCTION_64
0x4002952	          0x4889fb	                            mov rbx, rdi	      2090	charset.c	FUNCTION_64
0x4002955	      0xe800000000	                          call 0x400295a	      2093	charset.c	FUNCTION_64	CALL_1
0x400295a	          0x4889c5	                            mov rbp, rax	      2093	charset.c	FUNCTION_64	CALL_1
0x400295d	          0x4889d8	                            mov rax, rbx	      2095	charset.c	FUNCTION_64	IF_1
0x4002960	          0x4885ed	                           test rbp, rbp	      2094	charset.c	FUNCTION_64	IF_1
0x4002963	            0x740b	                            je 0x4002970	      2094	charset.c	FUNCTION_64	IF_1
0x4002965	          0x4889ef	                            mov rdi, rbp	      2096	charset.c	FUNCTION_64	CALL_2
0x4002968	      0xe800000000	                          call 0x400296d	      2096	charset.c	FUNCTION_64	CALL_2
0x400296d	          0x4889e8	                            mov rax, rbp	      2097	charset.c	FUNCTION_64
0x4002970	        0x4883c408	                              add rsp, 8	      2098	charset.c	FUNCTION_64
0x4002974	              0x5b	                                 pop rbx	      2098	charset.c	FUNCTION_64
0x4002975	              0x5d	                                 pop rbp	      2098	charset.c	FUNCTION_64
0x4002976	              0xc3	                                     ret	      2098	charset.c	FUNCTION_64
vim_strsize	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	5
0x40006c2	        0x4883ec08	                              sub rsp, 8	       777	charset.c	FUNCTION_14
0x40006c6	      0xbeffffff7f	                     mov esi, 0x7fffffff	       778	charset.c	FUNCTION_14	CALL_1
0x40006cb	      0xe800000000	                          call 0x40006d0	       778	charset.c	FUNCTION_14	CALL_1
0x40006d0	        0x4883c408	                              add rsp, 8	       779	charset.c	FUNCTION_14
0x40006d4	              0xc3	                                     ret	       779	charset.c	FUNCTION_14
transchar_nonprint	ELSE,8:FOR,0:IF,9:WHILE,0:DO,0:CALL,6:functions,0:SWITCH,0	53
0x4000496	              0x55	                                push rbp	       611	charset.c	FUNCTION_8
0x4000497	              0x53	                                push rbx	       611	charset.c	FUNCTION_8
0x4000498	        0x4883ec08	                              sub rsp, 8	       611	charset.c	FUNCTION_8
0x400049c	          0x4889fd	                            mov rbp, rdi	       611	charset.c	FUNCTION_8
0x400049f	          0x83fe0a	                            cmp esi, 0xa	       612	charset.c	FUNCTION_8	IF_1
0x40004a2	     0xf8483000000	                            je 0x400052b	       612	charset.c	FUNCTION_8	IF_1
0x40004a8	            0x89f3	                            mov ebx, esi	       612	charset.c	FUNCTION_8	IF_1
0x40004aa	          0x83fe0d	                            cmp esi, 0xd	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40004ad	            0x7519	                           jne 0x40004c8	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40004af	    0x488b3d000000	            mov rdi, qword [0x040004b6] 	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40004b6	      0xe800000000	                          call 0x40004bb	       614	charset.c	FUNCTION_8	ELSE_1	IF_2	CALL_1
0x40004bb	          0x83f802	                              cmp eax, 2	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40004be	      0xb80a000000	                            mov eax, 0xa	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40004c3	           0xf44d8	                          cmove ebx, eax	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40004c6	            0xeb68	                           jmp 0x4000530	       615	charset.c	FUNCTION_8	ELSE_1	IF_2
0x40004c8	    0xf60500000000	               test byte [0x040004cf], 4	       617	charset.c	FUNCTION_8	IF_3
0x40004cf	            0x740c	                            je 0x40004dd	       617	charset.c	FUNCTION_8	IF_3
0x40004d1	            0x89de	                            mov esi, ebx	       618	charset.c	FUNCTION_8	CALL_2
0x40004d3	          0x4889ef	                            mov rdi, rbp	       618	charset.c	FUNCTION_8	CALL_2
0x40004d6	      0xe800000000	                          call 0x40004db	       618	charset.c	FUNCTION_8	CALL_2
0x40004db	            0xeb5e	                           jmp 0x400053b	       618	charset.c	FUNCTION_8	CALL_2
0x40004dd	          0x83fe7f	                           cmp esi, 0x7f	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004e0	            0x7f10	                            jg 0x40004f2	       624	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004e2	        0xc645005e	                    mov byte [rbp], 0x5e	       627	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004e6	          0x83f340	                           xor ebx, 0x40	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004e9	          0x885d01	                  mov byte [rbp + 1], bl	       634	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004ec	        0xc6450200	                   mov byte [rbp + 2], 0	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004f0	            0xeb49	                           jmp 0x400053b	       637	charset.c	FUNCTION_8	ELSE_2	IF_4	ELSE_3	IF_5
0x40004f2	    0x833d00000000	               cmp dword [0x040004f9], 0	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40004f9	            0x7407	                            je 0x4000502	       640	charset.c	FUNCTION_8	ELSE_5	IF_7
0x40004fb	      0xe800000000	                          call 0x4000500	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x4000500	            0xeb39	                           jmp 0x400053b	       642	charset.c	FUNCTION_8	ELSE_5	IF_7	CALL_5
0x4000502	    0x8d8660ffffff	                   lea eax, [rsi - 0xa0]	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000508	          0x83f85e	                           cmp eax, 0x5e	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400050b	            0x770f	                            ja 0x400051c	       646	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400050d	          0xc6077c	                    mov byte [rdi], 0x7c	       648	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000510	          0x83c380	             add ebx, 0xffffffffffffff80	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000513	          0x885f01	                  mov byte [rdi + 1], bl	       649	charset.c	FUNCTION_8	ELSE_6	IF_8
0x4000516	        0xc6470200	                   mov byte [rdi + 2], 0	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400051a	            0xeb1f	                           jmp 0x400053b	       650	charset.c	FUNCTION_8	ELSE_6	IF_8
0x400051c	          0xc6077e	                    mov byte [rdi], 0x7e	       666	charset.c	FUNCTION_8	ELSE_8
0x400051f	          0x83f3c0	                     xor ebx, 0xffffffc0	       670	charset.c	FUNCTION_8	ELSE_8
0x4000522	          0x885f01	                  mov byte [rdi + 1], bl	       670	charset.c	FUNCTION_8	ELSE_8
0x4000525	        0xc6470200	                   mov byte [rdi + 2], 0	       672	charset.c	FUNCTION_8	ELSE_8
0x4000529	            0xeb10	                           jmp 0x400053b	       674	charset.c	FUNCTION_8
0x400052b	      0xbb00000000	                              mov ebx, 0	       613	charset.c	FUNCTION_8	IF_1
0x4000530	    0xf60500000000	               test byte [0x04000537], 4	       617	charset.c	FUNCTION_8	IF_3
0x4000537	            0x74a9	                            je 0x40004e2	       617	charset.c	FUNCTION_8	IF_3
0x4000539	            0xeb96	                           jmp 0x40004d1	       617	charset.c	FUNCTION_8	IF_3
0x400053b	        0x4883c408	                              add rsp, 8	       674	charset.c	FUNCTION_8
0x400053f	              0x5b	                                 pop rbx	       674	charset.c	FUNCTION_8
0x4000540	              0x5d	                                 pop rbp	       674	charset.c	FUNCTION_8
0x4000541	              0xc3	                                     ret	       674	charset.c	FUNCTION_8
vim_isIDc	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	9
0x400071a	          0x8d57ff	                      lea edx, [rdi - 1]	       885	charset.c	FUNCTION_21
0x400071d	      0xb800000000	                              mov eax, 0	       885	charset.c	FUNCTION_21
0x4000722	    0x81fafe000000	                           cmp edx, 0xfe	       885	charset.c	FUNCTION_21
0x4000728	            0x7710	                            ja 0x400073a	       885	charset.c	FUNCTION_21
0x400072a	          0x4863ff	                         movsxd rdi, edi	       885	charset.c	FUNCTION_21
0x400072d	     0xfb687000000	                   movzx eax, byte [rdi]	       885	charset.c	FUNCTION_21
0x4000734	          0xc0e805	                               shr al, 5	       885	charset.c	FUNCTION_21
0x4000737	          0x83e001	                              and eax, 1	       885	charset.c	FUNCTION_21
0x400073a	            0xf3c3	                                     ret	       886	charset.c	FUNCTION_21
rem_backslash	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	7
0x40028e5	      0xb800000000	                              mov eax, 0	      2068	charset.c	FUNCTION_62
0x40028ea	          0x803f5c	                    cmp byte [rdi], 0x5c	      2068	charset.c	FUNCTION_62
0x40028ed	            0x750a	                           jne 0x40028f9	      2068	charset.c	FUNCTION_62
0x40028ef	        0x807f0100	                   cmp byte [rdi + 1], 0	      2068	charset.c	FUNCTION_62
0x40028f3	           0xf95c0	                                setne al	      2068	charset.c	FUNCTION_62
0x40028f6	           0xfb6c0	                           movzx eax, al	      2068	charset.c	FUNCTION_62
0x40028f9	            0xf3c3	                                     ret	      2070	charset.c	FUNCTION_62
byte2cells	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,0:functions,0:SWITCH,0	9
0x4000542	    0x833d00000000	               cmp dword [0x04000549], 0	       720	charset.c	FUNCTION_11	IF_1
0x4000549	            0x740a	                            je 0x4000555	       720	charset.c	FUNCTION_11	IF_1
0x400054b	      0xb800000000	                              mov eax, 0	       721	charset.c	FUNCTION_11	IF_1
0x4000550	          0x83ff7f	                           cmp edi, 0x7f	       720	charset.c	FUNCTION_11	IF_1
0x4000553	            0x7f0d	                            jg 0x4000562	       720	charset.c	FUNCTION_11	IF_1
0x4000555	          0x4863ff	                         movsxd rdi, edi	       723	charset.c	FUNCTION_11
0x4000558	     0xfb687000000	                   movzx eax, byte [rdi]	       723	charset.c	FUNCTION_11
0x400055f	          0x83e007	                              and eax, 7	       723	charset.c	FUNCTION_11
0x4000562	            0xf3c3	                                     ret	       724	charset.c	FUNCTION_11
skipdigits	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	11
0x4001afe	          0x4889f8	                            mov rax, rdi	      1559	charset.c	FUNCTION_42
0x4001b01	           0xfb617	                   movzx edx, byte [rdi]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b04	          0x83ea30	                           sub edx, 0x30	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b07	          0x83fa09	                              cmp edx, 9	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b0a	            0x770f	                            ja 0x4001b1b	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b0c	        0x4883c001	                              add rax, 1	      1563	charset.c	FUNCTION_42	WHILE_1
0x4001b10	           0xfb610	                   movzx edx, byte [rax]	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b13	          0x83ea30	                           sub edx, 0x30	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b16	          0x83fa09	                              cmp edx, 9	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b19	            0x76f1	                           jbe 0x4001b0c	      1562	charset.c	FUNCTION_42	WHILE_1	CALL_1
0x4001b1b	            0xf3c3	                                     ret	      1565	charset.c	FUNCTION_42
vim_str2nr	ELSE,11:FOR,1:IF,26:WHILE,4:DO,0:CALL,6:functions,0:SWITCH,0	260
0x40024e7	            0x4157	                                push r15	      1871	charset.c	FUNCTION_59
0x40024e9	            0x4156	                                push r14	      1871	charset.c	FUNCTION_59
0x40024eb	            0x4155	                                push r13	      1871	charset.c	FUNCTION_59
0x40024ed	            0x4154	                                push r12	      1871	charset.c	FUNCTION_59
0x40024ef	              0x55	                                push rbp	      1871	charset.c	FUNCTION_59
0x40024f0	              0x53	                                push rbx	      1871	charset.c	FUNCTION_59
0x40024f1	        0x4883ec20	                           sub rsp, 0x20	      1871	charset.c	FUNCTION_59
0x40024f5	          0x4989fc	                            mov r12, rdi	      1871	charset.c	FUNCTION_59
0x40024f8	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1871	charset.c	FUNCTION_59
0x40024fd	          0x4989d6	                            mov r14, rdx	      1871	charset.c	FUNCTION_59
0x4002500	            0x89cd	                            mov ebp, ecx	      1871	charset.c	FUNCTION_59
0x4002502	        0x4c890424	                     mov qword [rsp], r8	      1871	charset.c	FUNCTION_59
0x4002506	          0x4d89cd	                             mov r13, r9	      1871	charset.c	FUNCTION_59
0x4002509	          0x4889fb	                            mov rbx, rdi	      1872	charset.c	FUNCTION_59
0x400250c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1874	charset.c	FUNCTION_59
0x4002514	          0x803f2d	                    cmp byte [rdi], 0x2d	      1878	charset.c	FUNCTION_59	IF_1
0x4002517	            0x750c	                           jne 0x4002525	      1878	charset.c	FUNCTION_59	IF_1
0x4002519	        0x488d5f01	                      lea rbx, [rdi + 1]	      1881	charset.c	FUNCTION_59	IF_1
0x400251d	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1880	charset.c	FUNCTION_59	IF_1
0x4002525	          0x803b30	                    cmp byte [rbx], 0x30	      1885	charset.c	FUNCTION_59	IF_2
0x4002528	     0xf852d030000	                           jne 0x400285b	      1885	charset.c	FUNCTION_59	IF_2
0x400252e	      0x440fb67b01	              movzx r15d, byte [rbx + 1]	      1885	charset.c	FUNCTION_59	IF_2
0x4002533	        0x418d47c8	                   lea eax, [r15 - 0x38]	      1885	charset.c	FUNCTION_59	IF_2
0x4002537	            0x3c01	                               cmp al, 1	      1885	charset.c	FUNCTION_59	IF_2
0x4002539	     0xf861c030000	                           jbe 0x400285b	      1885	charset.c	FUNCTION_59	IF_2
0x400253f	      0x837c245800	               cmp dword [rsp + 0x58], 0	      1886	charset.c	FUNCTION_59	IF_2
0x4002544	       0xf94442418	                  sete byte [rsp + 0x18]	      1886	charset.c	FUNCTION_59	IF_2
0x4002549	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	      1886	charset.c	FUNCTION_59	IF_2
0x400254e	      0x837c245801	               cmp dword [rsp + 0x58], 1	      1886	charset.c	FUNCTION_59	IF_2
0x4002553	            0x7f08	                            jg 0x400255d	      1886	charset.c	FUNCTION_59	IF_2
0x4002555	            0x84c0	                             test al, al	      1886	charset.c	FUNCTION_59	IF_2
0x4002557	     0xf84fe020000	                            je 0x400285b	      1886	charset.c	FUNCTION_59	IF_2
0x400255d	        0x410fb6c7	                         movzx eax, r15b	      1888	charset.c	FUNCTION_59	IF_2
0x4002561	        0x89442408	                mov dword [rsp + 8], eax	      1888	charset.c	FUNCTION_59	IF_2
0x4002565	        0x40f6c504	                             test bpl, 4	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x4002569	            0x7437	                            je 0x40025a2	      1889	charset.c	FUNCTION_59	IF_2	IF_3
0x400256b	          0x4489f8	                           mov eax, r15d	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x400256e	          0x83e0df	                     and eax, 0xffffffdf	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002571	            0x3c58	                            cmp al, 0x58	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002573	            0x752d	                           jne 0x40025a2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002575	         0xfb67b02	               movzx edi, byte [rbx + 2]	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002579	      0xe800000000	                          call 0x400257e	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x400257e	            0x85c0	                           test eax, eax	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002580	            0x7450	                            je 0x40025d2	      1890	charset.c	FUNCTION_59	IF_2	IF_3	CALL_1
0x4002582	      0x837c245802	               cmp dword [rsp + 0x58], 2	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002587	            0x7f07	                            jg 0x4002590	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002589	      0x807c241800	                cmp byte [rsp + 0x18], 0	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x400258e	            0x7442	                            je 0x40025d2	      1891	charset.c	FUNCTION_59	IF_2	IF_3
0x4002590	        0x4883c302	                              add rbx, 2	      1893	charset.c	FUNCTION_59	IF_2	IF_3
0x4002594	          0x83fd09	                              cmp ebp, 9	      1923	charset.c	FUNCTION_59	IF_7
0x4002597	     0xf8509010000	                           jne 0x40026a6	      1923	charset.c	FUNCTION_59	IF_7
0x400259d	      0xe987000000	                           jmp 0x4002629	      1923	charset.c	FUNCTION_59	IF_7
0x40025a2	        0x40f6c501	                             test bpl, 1	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025a6	            0x742a	                            je 0x40025d2	      1894	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025a8	          0x4489f8	                           mov eax, r15d	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025ab	          0x83e0df	                     and eax, 0xffffffdf	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025ae	            0x3c42	                            cmp al, 0x42	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025b0	            0x7520	                           jne 0x40025d2	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025b2	         0xfb64302	               movzx eax, byte [rbx + 2]	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025b6	          0x83e830	                           sub eax, 0x30	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025b9	          0x83f801	                              cmp eax, 1	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025bc	            0x7714	                            ja 0x40025d2	      1895	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4	CALL_2
0x40025be	      0x837c245802	               cmp dword [rsp + 0x58], 2	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025c3	            0x7f07	                            jg 0x40025cc	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025c5	      0x807c241800	                cmp byte [rsp + 0x18], 0	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025ca	            0x7406	                            je 0x40025d2	      1896	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025cc	        0x4883c302	                              add rbx, 2	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025d0	            0xeb57	                           jmp 0x4002629	      1898	charset.c	FUNCTION_59	IF_2	ELSE_1	IF_4
0x40025d2	        0x40f6c502	                             test bpl, 2	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x40025d6	     0xf847f020000	                            je 0x400285b	      1903	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5
0x40025dc	      0x837c245801	               cmp dword [rsp + 0x58], 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x40025e1	     0xf8474020000	                            je 0x400285b	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x40025e7	        0x4183ef30	                          sub r15d, 0x30	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025eb	        0x4180ff07	                             cmp r15b, 7	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025ef	     0xf8766020000	                            ja 0x400285b	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025f5	      0xb801000000	                              mov eax, 1	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025fa	            0xeb09	                           jmp 0x4002605	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025fc	          0x80f937	                            cmp cl, 0x37	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x40025ff	     0xf8756020000	                            ja 0x400285b	      1908	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	IF_6
0x4002605	          0x83c001	                              add eax, 1	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002608	        0x39442458	            cmp dword [rsp + 0x58], eax 	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400260c	     0xf845f020000	                            je 0x4002871	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002612	          0x4863d0	                         movsxd rdx, eax	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002615	         0xfb60c13	             movzx ecx, byte [rbx + rdx]	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002619	           0xfb6d1	                           movzx edx, cl	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400261c	          0x83ea30	                           sub edx, 0x30	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x400261f	          0x83fa09	                              cmp edx, 9	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002622	            0x76d8	                           jbe 0x40025fc	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002624	      0xe948020000	                           jmp 0x4002871	      1906	charset.c	FUNCTION_59	IF_2	ELSE_2	IF_5	FOR_1	CALL_3
0x4002629	      0x837c240801	                  cmp dword [rsp + 8], 1	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x400262e	            0x19c0	                            sbb eax, eax	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002630	          0x83e0fe	                     and eax, 0xfffffffe	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002633	          0x83c003	                              add eax, 3	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002636	            0xeb44	                           jmp 0x400267c	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002638	          0x4839f5	                            cmp rbp, rsi	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x400263b	            0x770e	                            ja 0x400264b	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x400263d	           0xfb6c0	                           movzx eax, al	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002640	          0x83e830	                           sub eax, 0x30	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002643	            0x4898	                                    cdqe	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002645	        0x488d2c68	                  lea rbp, [rax + rbp*2]	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002649	            0xeb07	                           jmp 0x4002652	      1932	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x400264b	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1934	charset.c	FUNCTION_59	IF_7	WHILE_1	ELSE_3
0x4002652	        0x4883c301	                              add rbx, 1	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002656	          0x4839cb	                            cmp rbx, rcx	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002659	            0x753b	                           jne 0x4002696	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x400265b	      0xe974010000	                           jmp 0x40027d4	      1936	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_10
0x4002660	    0xc74424080000	                  mov dword [rsp + 8], 0	      1923	charset.c	FUNCTION_59	IF_7
0x4002668	      0xb801000000	                              mov eax, 1	      1922	charset.c	FUNCTION_59
0x400266d	            0xeb0d	                           jmp 0x400267c	      1922	charset.c	FUNCTION_59
0x400266f	    0xc74424083000	               mov dword [rsp + 8], 0x30	      1923	charset.c	FUNCTION_59	IF_7
0x4002677	      0xb803000000	                              mov eax, 3	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x400267c	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002680	            0x29c7	                            sub edi, eax	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002682	      0x488d4c3b01	                lea rcx, [rbx + rdi + 1]	      1927	charset.c	FUNCTION_59	IF_7	IF_8
0x4002687	      0xbd00000000	                              mov ebp, 0	      1922	charset.c	FUNCTION_59
0x400268c	    0x48befeffffff	         movabs rsi, 0x7ffffffffffffffe 	      1931	charset.c	FUNCTION_59	IF_7	WHILE_1	IF_9
0x4002696	           0xfb603	                   movzx eax, byte [rbx]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x4002699	          0x8d50d0	                   lea edx, [rax - 0x30]	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x400269c	          0x80fa01	                               cmp dl, 1	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x400269f	            0x7697	                           jbe 0x4002638	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40026a1	      0xe942010000	                           jmp 0x40027e8	      1928	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40026a6	      0x837c240830	               cmp dword [rsp + 8], 0x30	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026ab	            0x7405	                            je 0x40026b2	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026ad	          0x83fd0a	                            cmp ebp, 0xa	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026b0	            0x7554	                           jne 0x4002706	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026b2	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026b6	          0x8d40ff	                      lea eax, [rax - 1]	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026b9	      0x488d4c0301	                lea rcx, [rbx + rax + 1]	      1940	charset.c	FUNCTION_59	ELSE_4	IF_11
0x40026be	      0xbd00000000	                              mov ebp, 0	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x40026c3	    0x48befeffffff	         movabs rsi, 0x1ffffffffffffffe 	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026cd	            0xeb27	                           jmp 0x40026f6	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026cf	          0x4839f5	                            cmp rbp, rsi	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026d2	            0x770e	                            ja 0x40026e2	      1946	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026d4	           0xfb6c0	                           movzx eax, al	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026d7	          0x83e830	                           sub eax, 0x30	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026da	            0x4898	                                    cdqe	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026dc	        0x488d2ce8	                  lea rbp, [rax + rbp*8]	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026e0	            0xeb07	                           jmp 0x40026e9	      1947	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_12
0x40026e2	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1949	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	ELSE_5
0x40026e9	        0x4883c301	                              add rbx, 1	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40026ed	          0x4839cb	                            cmp rbx, rcx	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x40026f0	     0xf84e3000000	                            je 0x40027d9	      1951	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2	IF_13
0x40026f6	           0xfb603	                   movzx eax, byte [rbx]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40026f9	          0x8d50d0	                   lea edx, [rax - 0x30]	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40026fc	          0x80fa07	                               cmp dl, 7	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40026ff	            0x76ce	                           jbe 0x40026cf	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002701	      0xe9e2000000	                           jmp 0x40027e8	      1943	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x4002706	      0x837c240800	                  cmp dword [rsp + 8], 0	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x400270b	            0x7525	                           jne 0x4002732	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x400270d	          0x83fd0c	                            cmp ebp, 0xc	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002710	            0x7420	                            je 0x4002732	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002712	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002716	          0x8d40ff	                      lea eax, [rax - 1]	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002719	      0x488d4c0301	                lea rcx, [rbx + rax + 1]	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x400271e	      0xbd00000000	                              mov ebp, 0	      1955	charset.c	FUNCTION_59	ELSE_6	IF_14
0x4002723	    0x48be98999999	          movabs rsi, 0x1999999999999998	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400272d	      0xe992000000	                           jmp 0x40027c4	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x4002732	      0x837c240801	                  cmp dword [rsp + 8], 1	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002737	            0x19c0	                            sbb eax, eax	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002739	          0x83e0fe	                     and eax, 0xfffffffe	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x400273c	          0x83c003	                              add eax, 3	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x400273f	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002743	            0x29c7	                            sub edi, eax	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002745	      0x488d443b01	                lea rax, [rbx + rdi + 1]	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x400274a	      0x4889442418	             mov qword [rsp + 0x18], rax	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x400274f	      0xbd00000000	                              mov ebp, 0	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002754	            0xeb34	                           jmp 0x400278a	      1959	charset.c	FUNCTION_59	ELSE_6	IF_14	IF_15
0x4002756	    0x48b8feffffff	          movabs rax, 0xffffffffffffffe 	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002760	          0x4839c5	                            cmp rbp, rax	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002763	            0x7713	                            ja 0x4002778	      1963	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_16
0x4002765	        0x48c1e504	                              shl rbp, 4	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002769	          0x4489ff	                           mov edi, r15d	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x400276c	      0xe800000000	                          call 0x4002771	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002771	            0x4898	                                    cdqe	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002773	          0x4801c5	                            add rbp, rax	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002776	            0xeb07	                           jmp 0x400277f	      1964	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_5
0x4002778	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1966	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	ELSE_7
0x400277f	        0x4883c301	                              add rbx, 1	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x4002783	      0x48395c2418	            cmp qword [rsp + 0x18], rbx 	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x4002788	            0x7454	                            je 0x40027de	      1968	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	IF_17
0x400278a	        0x440fb63b	                  movzx r15d, byte [rbx]	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x400278e	          0x4489ff	                           mov edi, r15d	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4002791	      0xe800000000	                          call 0x4002796	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4002796	            0x85c0	                           test eax, eax	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x4002798	            0x75bc	                           jne 0x4002756	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x400279a	            0xeb4c	                           jmp 0x40027e8	      1960	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3	CALL_4
0x400279c	          0x4839f5	                            cmp rbp, rsi	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x400279f	            0x7713	                            ja 0x40027b4	      1978	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027a1	      0x488d54ad00	                  lea rdx, [rbp + rbp*4]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027a6	           0xfb6c0	                           movzx eax, al	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027a9	          0x83e830	                           sub eax, 0x30	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027ac	            0x4898	                                    cdqe	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027ae	        0x488d2c50	                  lea rbp, [rax + rdx*2]	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027b2	            0xeb07	                           jmp 0x40027bb	      1979	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_18
0x40027b4	    0x48c7c5ffffff	             mov rbp, 0xffffffffffffffff	      1981	charset.c	FUNCTION_59	ELSE_8	WHILE_4	ELSE_9
0x40027bb	        0x4883c301	                              add rbx, 1	      1982	charset.c	FUNCTION_59	ELSE_8	WHILE_4
0x40027bf	          0x4839d9	                            cmp rcx, rbx	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x40027c2	            0x7421	                            je 0x40027e5	      1983	charset.c	FUNCTION_59	ELSE_8	WHILE_4	IF_19
0x40027c4	           0xfb603	                   movzx eax, byte [rbx]	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027c7	           0xfb6d0	                           movzx edx, al	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027ca	          0x83ea30	                           sub edx, 0x30	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027cd	          0x83fa09	                              cmp edx, 9	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027d0	            0x76ca	                           jbe 0x400279c	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027d2	            0xeb14	                           jmp 0x40027e8	      1975	charset.c	FUNCTION_59	ELSE_8	WHILE_4	CALL_6
0x40027d4	          0x4889cb	                            mov rbx, rcx	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40027d7	            0xeb0f	                           jmp 0x40027e8	      1935	charset.c	FUNCTION_59	IF_7	WHILE_1
0x40027d9	          0x4889cb	                            mov rbx, rcx	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40027dc	            0xeb0a	                           jmp 0x40027e8	      1950	charset.c	FUNCTION_59	ELSE_4	IF_11	WHILE_2
0x40027de	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x40027e3	            0xeb03	                           jmp 0x40027e8	      1967	charset.c	FUNCTION_59	ELSE_6	IF_14	WHILE_3
0x40027e5	          0x4889cb	                            mov rbx, rcx	      1982	charset.c	FUNCTION_59	ELSE_8	WHILE_4
0x40027e8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1988	charset.c	FUNCTION_59	IF_20
0x40027ed	          0x4885c0	                           test rax, rax	      1988	charset.c	FUNCTION_59	IF_20
0x40027f0	            0x7406	                            je 0x40027f8	      1988	charset.c	FUNCTION_59	IF_20
0x40027f2	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1989	charset.c	FUNCTION_59	IF_20
0x40027f6	            0x8938	                    mov dword [rax], edi	      1989	charset.c	FUNCTION_59	IF_20
0x40027f8	          0x4d85f6	                           test r14, r14	      1990	charset.c	FUNCTION_59	IF_21
0x40027fb	            0x7406	                            je 0x4002803	      1990	charset.c	FUNCTION_59	IF_21
0x40027fd	          0x4c29e3	                            sub rbx, r12	      1991	charset.c	FUNCTION_59	IF_21
0x4002800	          0x41891e	                    mov dword [r14], ebx	      1991	charset.c	FUNCTION_59	IF_21
0x4002803	      0x48833c2400	                      cmp qword [rsp], 0	      1992	charset.c	FUNCTION_59	IF_22
0x4002808	            0x7446	                            je 0x4002850	      1992	charset.c	FUNCTION_59	IF_22
0x400280a	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x400280f	            0x7427	                            je 0x4002838	      1994	charset.c	FUNCTION_59	IF_22	IF_23
0x4002811	          0x4885ed	                           test rbp, rbp	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002814	            0x7913	                           jns 0x4002829	      1997	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002816	        0x488b0424	                    mov rax, qword [rsp]	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x400281a	    0x48bf00000000	          movabs rdi, 0x8000000000000000	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002824	          0x488938	                    mov qword [rax], rdi	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002827	            0xeb27	                           jmp 0x4002850	      1998	charset.c	FUNCTION_59	IF_22	IF_23	IF_24
0x4002829	          0x4889e8	                            mov rax, rbp	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x400282c	          0x48f7d8	                                 neg rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x400282f	        0x488b3c24	                    mov rdi, qword [rsp]	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002833	          0x488907	                    mov qword [rdi], rax	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002836	            0xeb18	                           jmp 0x4002850	      2000	charset.c	FUNCTION_59	IF_22	IF_23	ELSE_10
0x4002838	          0x4885ed	                           test rbp, rbp	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x400283b	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4002845	        0x480f48e8	                          cmovs rbp, rax	      2005	charset.c	FUNCTION_59	IF_22	ELSE_11	IF_25
0x4002849	        0x488b0424	                    mov rax, qword [rsp]	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x400284d	          0x488928	                    mov qword [rax], rbp	      2006	charset.c	FUNCTION_59	IF_22	ELSE_11
0x4002850	          0x4d85ed	                           test r13, r13	      2009	charset.c	FUNCTION_59	IF_26
0x4002853	            0x7432	                            je 0x4002887	      2009	charset.c	FUNCTION_59	IF_26
0x4002855	        0x49896d00	                    mov qword [r13], rbp	      2010	charset.c	FUNCTION_59	IF_26
0x4002859	            0xeb2c	                           jmp 0x4002887	      2011	charset.c	FUNCTION_59
0x400285b	          0x83fd09	                              cmp ebp, 9	      1923	charset.c	FUNCTION_59	IF_7
0x400285e	     0xf84fcfdffff	                            je 0x4002660	      1923	charset.c	FUNCTION_59	IF_7
0x4002864	    0xc74424080000	                  mov dword [rsp + 8], 0	      1923	charset.c	FUNCTION_59	IF_7
0x400286c	      0xe935feffff	                           jmp 0x40026a6	      1923	charset.c	FUNCTION_59	IF_7
0x4002871	          0x83fd09	                              cmp ebp, 9	      1923	charset.c	FUNCTION_59	IF_7
0x4002874	     0xf84f5fdffff	                            je 0x400266f	      1923	charset.c	FUNCTION_59	IF_7
0x400287a	    0xc74424083000	               mov dword [rsp + 8], 0x30	      1923	charset.c	FUNCTION_59	IF_7
0x4002882	      0xe92bfeffff	                           jmp 0x40026b2	      1923	charset.c	FUNCTION_59	IF_7
0x4002887	        0x4883c420	                           add rsp, 0x20	      2011	charset.c	FUNCTION_59
0x400288b	              0x5b	                                 pop rbx	      2011	charset.c	FUNCTION_59
0x400288c	              0x5d	                                 pop rbp	      2011	charset.c	FUNCTION_59
0x400288d	            0x415c	                                 pop r12	      2011	charset.c	FUNCTION_59
0x400288f	            0x415d	                                 pop r13	      2011	charset.c	FUNCTION_59
0x4002891	            0x415e	                                 pop r14	      2011	charset.c	FUNCTION_59
0x4002893	            0x415f	                                 pop r15	      2011	charset.c	FUNCTION_59
0x4002895	              0xc3	                                     ret	      2011	charset.c	FUNCTION_59
skiptowhite	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,0:functions,0:SWITCH,0	13
0x4001e15	          0x4889f8	                            mov rax, rdi	      1789	charset.c	FUNCTION_55
0x4001e18	           0xfb617	                   movzx edx, byte [rdi]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e1b	          0xf6c2df	                           test dl, 0xdf	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e1e	            0x7416	                            je 0x4001e36	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e20	          0x80fa09	                               cmp dl, 9	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e23	            0x7411	                            je 0x4001e36	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e25	        0x4883c001	                              add rax, 1	      1791	charset.c	FUNCTION_55	WHILE_1
0x4001e29	           0xfb610	                   movzx edx, byte [rax]	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e2c	          0xf6c2df	                           test dl, 0xdf	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e2f	            0x7405	                            je 0x4001e36	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e31	          0x80fa09	                               cmp dl, 9	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e34	            0x75ef	                           jne 0x4001e25	      1790	charset.c	FUNCTION_55	WHILE_1
0x4001e36	            0xf3c3	                                     ret	      1793	charset.c	FUNCTION_55
lbr_chartabsize	ELSE,0:FOR,0:IF,2:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	42
0x4001326	        0x4883ec08	                              sub rsp, 8	      1001	charset.c	FUNCTION_30
0x400132a	          0x4889f9	                            mov rcx, rdi	      1001	charset.c	FUNCTION_30
0x400132d	          0x4989f1	                             mov r9, rsi	      1001	charset.c	FUNCTION_30
0x4001330	    0x488b3d000000	            mov rdi, qword [0x04001337] 	      1003	charset.c	FUNCTION_30	IF_1
0x4001337	    0x83bf30020000	              cmp dword [rdi + 0x230], 0	      1003	charset.c	FUNCTION_30	IF_1
0x400133e	            0x7564	                           jne 0x40013a4	      1003	charset.c	FUNCTION_30	IF_1
0x4001340	    0x488b05000000	            mov rax, qword [0x04001347] 	      1003	charset.c	FUNCTION_30	IF_1
0x4001347	          0x803800	                       cmp byte [rax], 0	      1003	charset.c	FUNCTION_30	IF_1
0x400134a	            0x7558	                           jne 0x40013a4	      1003	charset.c	FUNCTION_30	IF_1
0x400134c	    0x83bfb4010000	              cmp dword [rdi + 0x1b4], 0	      1003	charset.c	FUNCTION_30	IF_1
0x4001353	            0x754f	                           jne 0x40013a4	      1003	charset.c	FUNCTION_30	IF_1
0x4001355	    0x83bf94020000	              cmp dword [rdi + 0x294], 0	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x400135c	            0x740c	                            je 0x400136a	      1007	charset.c	FUNCTION_30	IF_1	IF_2
0x400135e	      0xb900000000	                              mov ecx, 0	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001363	      0xe8d7f9ffff	          call sym.win_nolbr_chartabsize	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x4001368	            0xeb54	                           jmp 0x40013be	      1008	charset.c	FUNCTION_30	IF_1	CALL_1
0x400136a	          0x803e09	                       cmp byte [rsi], 9	      1010	charset.c	FUNCTION_30	IF_1
0x400136d	            0x752b	                           jne 0x400139a	      1010	charset.c	FUNCTION_30	IF_1
0x400136f	    0x83bf34020000	              cmp dword [rdi + 0x234], 0	      1010	charset.c	FUNCTION_30	IF_1
0x4001376	            0x7409	                            je 0x4001381	      1010	charset.c	FUNCTION_30	IF_1
0x4001378	    0x833d00000000	               cmp dword [0x0400137f], 0	      1010	charset.c	FUNCTION_30	IF_1
0x400137f	            0x7419	                            je 0x400139a	      1010	charset.c	FUNCTION_30	IF_1
0x4001381	    0x488b05000000	            mov rax, qword [0x04001388] 	      1010	charset.c	FUNCTION_30	IF_1
0x4001388	    0x488bb0a81500	          mov rsi, qword [rax + 0x15a8] 	      1010	charset.c	FUNCTION_30	IF_1
0x400138f	            0x89d0	                            mov eax, edx	      1010	charset.c	FUNCTION_30	IF_1
0x4001391	              0x99	                                     cdq	      1010	charset.c	FUNCTION_30	IF_1
0x4001392	            0xf7fe	                                idiv esi	      1010	charset.c	FUNCTION_30	IF_1
0x4001394	            0x89f0	                            mov eax, esi	      1010	charset.c	FUNCTION_30	IF_1
0x4001396	            0x29d0	                            sub eax, edx	      1010	charset.c	FUNCTION_30	IF_1
0x4001398	            0xeb24	                           jmp 0x40013be	      1010	charset.c	FUNCTION_30	IF_1
0x400139a	          0x4c89cf	                             mov rdi, r9	      1010	charset.c	FUNCTION_30	IF_1
0x400139d	      0xe800000000	                          call 0x40013a2	      1010	charset.c	FUNCTION_30	IF_1
0x40013a2	            0xeb1a	                           jmp 0x40013be	      1010	charset.c	FUNCTION_30	IF_1
0x40013a4	          0x4885c9	                           test rcx, rcx	      1013	charset.c	FUNCTION_30	CALL_2
0x40013a7	        0x490f44c9	                           cmove rcx, r9	      1013	charset.c	FUNCTION_30	CALL_2
0x40013ab	          0x4889ce	                            mov rsi, rcx	      1013	charset.c	FUNCTION_30	CALL_2
0x40013ae	    0x41b800000000	                              mov r8d, 0	      1013	charset.c	FUNCTION_30	CALL_2
0x40013b4	            0x89d1	                            mov ecx, edx	      1013	charset.c	FUNCTION_30	CALL_2
0x40013b6	          0x4c89ca	                             mov rdx, r9	      1013	charset.c	FUNCTION_30	CALL_2
0x40013b9	      0xe800000000	                          call 0x40013be	      1013	charset.c	FUNCTION_30	CALL_2
0x40013be	        0x4883c408	                              add rsp, 8	      1015	charset.c	FUNCTION_30
0x40013c2	              0xc3	                                     ret	      1015	charset.c	FUNCTION_30
skiptohex	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	17
0x4001bd6	              0x53	                                push rbx	      1626	charset.c	FUNCTION_47
0x4001bd7	          0x4889fb	                            mov rbx, rdi	      1626	charset.c	FUNCTION_47
0x4001bda	           0xfb63f	                   movzx edi, byte [rdi]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bdd	          0x4084ff	                           test dil, dil	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001be0	            0x750e	                           jne 0x4001bf0	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001be2	            0xeb19	                           jmp 0x4001bfd	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001be4	        0x4883c301	                              add rbx, 1	      1630	charset.c	FUNCTION_47	WHILE_1
0x4001be8	           0xfb63b	                   movzx edi, byte [rbx]	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001beb	          0x4084ff	                           test dil, dil	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bee	            0x740d	                            je 0x4001bfd	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf0	        0x400fb6ff	                          movzx edi, dil	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf4	      0xe800000000	                          call 0x4001bf9	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bf9	            0x85c0	                           test eax, eax	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bfb	            0x74e7	                            je 0x4001be4	      1629	charset.c	FUNCTION_47	WHILE_1	CALL_1
0x4001bfd	          0x4889d8	                            mov rax, rbx	      1632	charset.c	FUNCTION_47
0x4001c00	              0x5b	                                 pop rbx	      1632	charset.c	FUNCTION_47
0x4001c01	              0xc3	                                     ret	      1632	charset.c	FUNCTION_47
transchar_hex	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,4:functions,0:SWITCH,0	49
0x40003fe	          0xc6073c	                    mov byte [rdi], 0x3c	       681	charset.c	FUNCTION_9
0x4000401	      0xb800000000	                              mov eax, 0	       679	charset.c	FUNCTION_9
0x4000406	    0x81feff000000	                           cmp esi, 0xff	       683	charset.c	FUNCTION_9	IF_1
0x400040c	            0x7e37	                           jle 0x4000445	       683	charset.c	FUNCTION_9	IF_1
0x400040e	            0x89f0	                            mov eax, esi	       703	charset.c	FUNCTION_10	IF_1
0x4000410	          0xc1e80c	                            shr eax, 0xc	       703	charset.c	FUNCTION_10	IF_1
0x4000413	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x4000416	          0x8d4830	                   lea ecx, [rax + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x4000419	          0x8d5057	                   lea edx, [rax + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x400041c	          0x83f809	                              cmp eax, 9	       704	charset.c	FUNCTION_10	IF_1
0x400041f	            0x89c8	                            mov eax, ecx	       704	charset.c	FUNCTION_10	IF_1
0x4000421	           0xf47c2	                          cmova eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x4000424	          0x884701	                  mov byte [rdi + 1], al	       685	charset.c	FUNCTION_9	IF_1	CALL_1
0x4000427	            0x89f0	                            mov eax, esi	       703	charset.c	FUNCTION_10	IF_1
0x4000429	          0xc1e808	                              shr eax, 8	       703	charset.c	FUNCTION_10	IF_1
0x400042c	          0x83e00f	                            and eax, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x400042f	          0x8d4830	                   lea ecx, [rax + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x4000432	          0x8d5057	                   lea edx, [rax + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x4000435	          0x83f809	                              cmp eax, 9	       704	charset.c	FUNCTION_10	IF_1
0x4000438	            0x89c8	                            mov eax, ecx	       704	charset.c	FUNCTION_10	IF_1
0x400043a	           0xf47c2	                          cmova eax, edx	       704	charset.c	FUNCTION_10	IF_1
0x400043d	          0x884702	                  mov byte [rdi + 2], al	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x4000440	      0xb802000000	                              mov eax, 2	       686	charset.c	FUNCTION_9	IF_1	CALL_2
0x4000445	          0x8d4801	                      lea ecx, [rax + 1]	       689	charset.c	FUNCTION_9	CALL_3
0x4000448	          0x4863c9	                         movsxd rcx, ecx	       689	charset.c	FUNCTION_9	CALL_3
0x400044b	            0x89f2	                            mov edx, esi	       703	charset.c	FUNCTION_10	IF_1
0x400044d	          0xc1ea04	                              shr edx, 4	       703	charset.c	FUNCTION_10	IF_1
0x4000450	          0x83e20f	                            and edx, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x4000453	        0x448d4a30	                   lea r9d, [rdx + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x4000457	        0x448d4257	                   lea r8d, [rdx + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x400045b	          0x83fa09	                              cmp edx, 9	       704	charset.c	FUNCTION_10	IF_1
0x400045e	          0x4489ca	                            mov edx, r9d	       704	charset.c	FUNCTION_10	IF_1
0x4000461	        0x410f47d0	                          cmova edx, r8d	       704	charset.c	FUNCTION_10	IF_1
0x4000465	          0x88140f	                mov byte [rdi + rcx], dl	       689	charset.c	FUNCTION_9	CALL_3
0x4000468	          0x8d5002	                      lea edx, [rax + 2]	       690	charset.c	FUNCTION_9	CALL_4
0x400046b	          0x4863d2	                         movsxd rdx, edx	       690	charset.c	FUNCTION_9	CALL_4
0x400046e	          0x83e60f	                            and esi, 0xf	       703	charset.c	FUNCTION_10	IF_1
0x4000471	        0x448d4630	                   lea r8d, [rsi + 0x30]	       704	charset.c	FUNCTION_10	IF_1
0x4000475	          0x8d4e57	                   lea ecx, [rsi + 0x57]	       704	charset.c	FUNCTION_10	IF_1
0x4000478	          0x83fe09	                              cmp esi, 9	       704	charset.c	FUNCTION_10	IF_1
0x400047b	        0x410f46c8	                         cmovbe ecx, r8d	       704	charset.c	FUNCTION_10	IF_1
0x400047f	          0x880c17	                mov byte [rdi + rdx], cl	       690	charset.c	FUNCTION_9	CALL_4
0x4000482	          0x8d5003	                      lea edx, [rax + 3]	       691	charset.c	FUNCTION_9
0x4000485	          0x4863d2	                         movsxd rdx, edx	       691	charset.c	FUNCTION_9
0x4000488	        0xc604173e	              mov byte [rdi + rdx], 0x3e	       691	charset.c	FUNCTION_9
0x400048c	          0x83c004	                              add eax, 4	       692	charset.c	FUNCTION_9
0x400048f	            0x4898	                                    cdqe	       692	charset.c	FUNCTION_9
0x4000491	        0xc6040700	                 mov byte [rdi + rax], 0	       692	charset.c	FUNCTION_9
0x4000495	              0xc3	                                     ret	       692	charset.c	FUNCTION_9
transchar_byte	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	13
0x4000a19	        0x4883ec08	                              sub rsp, 8	       594	charset.c	FUNCTION_7
0x4000a1d	    0x833d00000000	               cmp dword [0x04000a24], 0	       595	charset.c	FUNCTION_7	IF_1
0x4000a24	            0x7418	                            je 0x4000a3e	       595	charset.c	FUNCTION_7	IF_1
0x4000a26	          0x83ff7f	                           cmp edi, 0x7f	       595	charset.c	FUNCTION_7	IF_1
0x4000a29	            0x7e13	                           jle 0x4000a3e	       595	charset.c	FUNCTION_7	IF_1
0x4000a2b	            0x89fe	                            mov esi, edi	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4000a2d	      0xbf00000000	                              mov edi, 0	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4000a32	      0xe800000000	                          call 0x4000a37	       597	charset.c	FUNCTION_7	IF_1	CALL_1
0x4000a37	      0xb800000000	                              mov eax, 0	       598	charset.c	FUNCTION_7	IF_1
0x4000a3c	            0xeb05	                           jmp 0x4000a43	       598	charset.c	FUNCTION_7	IF_1
0x4000a3e	      0xe800000000	                          call 0x4000a43	       600	charset.c	FUNCTION_7	CALL_2
0x4000a43	        0x4883c408	                              add rsp, 8	       601	charset.c	FUNCTION_7
0x4000a47	              0xc3	                                     ret	       601	charset.c	FUNCTION_7
str_foldcase	ELSE,5:FOR,0:IF,14:WHILE,1:DO,0:CALL,15:functions,0:SWITCH,0	255
0x4000040	            0x4157	                                push r15	       441	charset.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	       441	charset.c	FUNCTION_5
0x4000044	            0x4155	                                push r13	       441	charset.c	FUNCTION_5
0x4000046	            0x4154	                                push r12	       441	charset.c	FUNCTION_5
0x4000048	              0x55	                                push rbp	       441	charset.c	FUNCTION_5
0x4000049	              0x53	                                push rbx	       441	charset.c	FUNCTION_5
0x400004a	        0x4883ec38	                           sub rsp, 0x38	       441	charset.c	FUNCTION_5
0x400004e	          0x4989fc	                            mov r12, rdi	       441	charset.c	FUNCTION_5
0x4000051	          0x4189f7	                           mov r15d, esi	       441	charset.c	FUNCTION_5
0x4000054	          0x4889d3	                            mov rbx, rdx	       441	charset.c	FUNCTION_5
0x4000057	        0x894c240c	              mov dword [rsp + 0xc], ecx	       441	charset.c	FUNCTION_5
0x400005b	    0x64488b042528	                mov rax, qword fs:[0x28]	       441	charset.c	FUNCTION_5
0x4000064	      0x4889442428	             mov qword [rsp + 0x28], rax	       441	charset.c	FUNCTION_5
0x4000069	            0x31c0	                            xor eax, eax	       441	charset.c	FUNCTION_5
0x400006b	          0x4885d2	                           test rdx, rdx	       452	charset.c	FUNCTION_5	IF_1
0x400006e	            0x7554	                           jne 0x40000c4	       452	charset.c	FUNCTION_5	IF_1
0x4000070	      0xba0a000000	                            mov edx, 0xa	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000075	      0xbe01000000	                              mov esi, 1	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x400007a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x400007f	      0xe800000000	                          call 0x4000084	       454	charset.c	FUNCTION_5	IF_1	CALL_1
0x4000084	        0x418d7701	                      lea esi, [r15 + 1]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000088	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x400008d	      0xe800000000	                          call 0x4000092	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000092	            0x89c2	                            mov edx, eax	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x4000094	      0xb800000000	                              mov eax, 0	       456	charset.c	FUNCTION_5	IF_1	IF_2
0x4000099	            0x85d2	                           test edx, edx	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x400009b	     0xf84d1020000	                            je 0x4000372	       455	charset.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40000a1	          0x4963ef	                        movsxd rbp, r15d	       457	charset.c	FUNCTION_5	IF_1	CALL_3
0x40000a4	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x40000a7	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_67	CALL_3
0x40000aa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_67	CALL_3
0x40000af	      0xe800000000	                          call 0x40000b4	        59	string3.h	FUNCTION_67	CALL_3
0x40000b4	      0x44897c2410	            mov dword [rsp + 0x10], r15d	       458	charset.c	FUNCTION_5	IF_1
0x40000b9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       467	charset.c	FUNCTION_5	IF_4
0x40000be	        0xc6042800	                 mov byte [rax + rbp], 0	       467	charset.c	FUNCTION_5	IF_4
0x40000c2	            0xeb24	                           jmp 0x40000e8	       467	charset.c	FUNCTION_5	IF_4
0x40000c4	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x40000c8	            0x89c8	                            mov eax, ecx	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x40000ca	          0x83e801	                              sub eax, 1	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x40000cd	            0x39ce	                            cmp esi, ecx	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x40000cf	        0x440f4df8	                        cmovge r15d, eax	       463	charset.c	FUNCTION_5	ELSE_1	IF_3
0x40000d3	          0x4963ef	                        movsxd rbp, r15d	       464	charset.c	FUNCTION_5	ELSE_1	CALL_4
0x40000d6	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_67	CALL_3
0x40000d9	          0x4889fe	                            mov rsi, rdi	        59	string3.h	FUNCTION_67	CALL_3
0x40000dc	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x40000df	      0xe800000000	                          call 0x40000e4	        59	string3.h	FUNCTION_67	CALL_3
0x40000e4	        0xc6042b00	                 mov byte [rbx + rbp], 0	       469	charset.c	FUNCTION_5	ELSE_2
0x40000e8	      0xbd00000000	                              mov ebp, 0	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40000ed	      0xe94c020000	                           jmp 0x400033e	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40000f2	    0x833d00000000	               cmp dword [0x040000f9], 0	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40000f9	            0x7550	                           jne 0x400014b	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x40000fb	    0x833d00000000	               cmp dword [0x04000102], 0	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000102	     0xf84f7010000	                            je 0x40002ff	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000108	          0x4885db	                           test rbx, rbx	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400010b	            0x751e	                           jne 0x400012b	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400010d	          0x4863c5	                         movsxd rax, ebp	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000110	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000115	         0xfb60402	             movzx eax, byte [rdx + rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000119	    0x80b800000000	                       cmp byte [rax], 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000120	     0xf8ed9010000	                           jle 0x40002ff	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000126	      0xe97f020000	                           jmp 0x40003aa	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400012b	          0x4863c5	                         movsxd rax, ebp	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400012e	         0xfb61403	             movzx edx, byte [rbx + rax]	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000132	    0x488b05000000	            mov rax, qword [0x04000139] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000139	    0x80ba00000000	                       cmp byte [rdx], 1	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000140	     0xf8fad010000	                            jg 0x40002f3	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x4000146	      0xe9b4010000	                           jmp 0x40002ff	       476	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	CALL_5
0x400014b	          0x4885db	                           test rbx, rbx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x400014e	            0x7552	                           jne 0x40001a2	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000150	          0x4c63ed	                         movsxd r13, ebp	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000153	          0x4c89ef	                            mov rdi, r13	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000156	      0x48037c2420	             add rdi, qword [rsp + 0x20]	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x400015b	      0xe800000000	                          call 0x4000160	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000160	          0x4189c4	                           mov r12d, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x4000163	          0x4c89ef	                            mov rdi, r13	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000166	      0x48037c2420	             add rdi, qword [rsp + 0x20]	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x400016b	      0xe800000000	                          call 0x4000170	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000170	          0x4189c6	                           mov r14d, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x4000173	          0x4489e7	                           mov edi, r12d	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x4000176	      0xe800000000	                          call 0x400017b	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x400017b	          0x4189c5	                           mov r13d, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x400017e	        0x4183fc7f	                          cmp r12d, 0x7f	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000182	           0xf9ec2	                                setle dl	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000185	        0x4183fe01	                             cmp r14d, 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000189	           0xf9fc0	                                 setg al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400018c	             0x8c2	                               or dl, al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400018e	     0xf84f0010000	                            je 0x4000384	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000194	          0x4539ec	                          cmp r12d, r13d	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x4000197	     0xf8533020000	                           jne 0x40003d0	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x400019d	      0xe9e2010000	                           jmp 0x4000384	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001a2	          0x4c63ed	                         movsxd r13, ebp	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40001a5	          0x4901dd	                            add r13, rbx	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40001a8	          0x4c89ef	                            mov rdi, r13	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40001ab	      0xe800000000	                          call 0x40001b0	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40001b0	          0x4189c4	                           mov r12d, eax	       480	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_6
0x40001b3	          0x4c89ef	                            mov rdi, r13	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40001b6	      0xe800000000	                          call 0x40001bb	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40001bb	          0x4189c6	                           mov r14d, eax	       481	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_7
0x40001be	          0x4489e7	                           mov edi, r12d	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x40001c1	      0xe800000000	                          call 0x40001c6	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x40001c6	          0x4189c5	                           mov r13d, eax	       482	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	CALL_8
0x40001c9	        0x4183fc7f	                          cmp r12d, 0x7f	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001cd	           0xf9ec2	                                setle dl	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001d0	        0x4183fe01	                             cmp r14d, 1	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001d4	           0xf9fc0	                                 setg al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001d7	             0x8c2	                               or dl, al	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001d9	     0xf84b1010000	                            je 0x4000390	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001df	          0x4539ec	                          cmp r12d, r13d	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001e2	     0xf85ce010000	                           jne 0x40003b6	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001e8	      0xe9a3010000	                           jmp 0x4000390	       487	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7
0x40001ed	      0x443b742408	               cmp r14d, dword [rsp + 8]	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x40001f2	     0xf8da4010000	                           jge 0x400039c	       495	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9
0x40001f8	          0x4885db	                           test rbx, rbx	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40001fb	            0x7521	                           jne 0x400021e	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40001fd	        0x8b742408	                mov esi, dword [rsp + 8]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000201	          0x4429f6	                           sub esi, r14d	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000204	          0x83c601	                              add esi, 1	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000207	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400020c	      0xe800000000	                          call 0x4000211	       498	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4000211	            0x85c0	                           test eax, eax	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000213	     0xf8583010000	                           jne 0x400039c	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000219	      0xe9a1000000	                           jmp 0x40002bf	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400021e	        0x8b442408	                mov eax, dword [rsp + 8]	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000222	          0x4401f8	                           add eax, r15d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000225	          0x4429f0	                           sub eax, r14d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000228	        0x3944240c	              cmp dword [rsp + 0xc], eax	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x400022c	     0xf8f6a010000	                            jg 0x400039c	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000232	      0xe995000000	                           jmp 0x40002cc	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x4000237	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400023c	          0x4c63c5	                          movsxd r8, ebp	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400023f	          0x4963f6	                        movsxd rsi, r14d	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000242	          0x4c01c6	                             add rsi, r8	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000245	          0x4c01ce	                             add rsi, r9	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000248	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400024f	          0x4889f7	                            mov rdi, rsi	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000252	      0xb800000000	                              mov eax, 0	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000257	            0xf2ae	              repne scasb al, byte [rdi]	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x4000259	          0x48f7d1	                                 not rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400025c	          0x4889ca	                            mov rdx, rcx	       510	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12	CALL_11
0x400025f	      0x448b642408	               mov r12d, dword [rsp + 8]	        59	string3.h	FUNCTION_67	CALL_3
0x4000264	          0x4963fc	                        movsxd rdi, r12d	        59	string3.h	FUNCTION_67	CALL_3
0x4000267	          0x4c01c7	                             add rdi, r8	        59	string3.h	FUNCTION_67	CALL_3
0x400026a	          0x4c01cf	                             add rdi, r9	        59	string3.h	FUNCTION_67	CALL_3
0x400026d	      0xe800000000	                          call 0x4000272	        59	string3.h	FUNCTION_67	CALL_3
0x4000272	          0x4489e0	                           mov eax, r12d	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000275	          0x4429f0	                           sub eax, r14d	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x4000278	         0x1442410	             add dword [rsp + 0x10], eax	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x400027c	            0xeb44	                           jmp 0x40002c2	       511	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x400027e	          0x4c63c5	                          movsxd r8, ebp	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000281	          0x4963f6	                        movsxd rsi, r14d	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000284	          0x4c01c6	                             add rsi, r8	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000287	          0x4801de	                            add rsi, rbx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x400028a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000291	          0x4889f7	                            mov rdi, rsi	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000294	      0xb800000000	                              mov eax, 0	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x4000299	            0xf2ae	              repne scasb al, byte [rdi]	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x400029b	          0x48f7d1	                                 not rcx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x400029e	          0x4889ca	                            mov rdx, rcx	       515	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3	CALL_12
0x40002a1	      0x448b642408	               mov r12d, dword [rsp + 8]	        59	string3.h	FUNCTION_67	CALL_3
0x40002a6	          0x4963fc	                        movsxd rdi, r12d	        59	string3.h	FUNCTION_67	CALL_3
0x40002a9	          0x4c01c7	                             add rdi, r8	        59	string3.h	FUNCTION_67	CALL_3
0x40002ac	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_67	CALL_3
0x40002af	      0xe800000000	                          call 0x40002b4	        59	string3.h	FUNCTION_67	CALL_3
0x40002b4	          0x4489e0	                           mov eax, r12d	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x40002b7	          0x4429f0	                           sub eax, r14d	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x40002ba	          0x4101c7	                           add r15d, eax	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x40002bd	            0xeb10	                           jmp 0x40002cf	       516	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	ELSE_3
0x40002bf	          0x4589e5	                          mov r13d, r12d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40002c2	          0x4863f5	                         movsxd rsi, ebp	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002c5	      0x4803742420	             add rsi, qword [rsp + 0x20]	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002ca	            0xeb09	                           jmp 0x40002d5	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002cc	          0x4589e5	                          mov r13d, r12d	       497	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_9	IF_10
0x40002cf	          0x4863f5	                         movsxd rsi, ebp	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d2	          0x4801de	                            add rsi, rbx	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d5	          0x4489ef	                           mov edi, r13d	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002d8	      0xe800000000	                          call 0x40002dd	       520	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_13
0x40002dd	    0x488b05000000	            mov rax, qword [0x040002e4] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002e4	          0x4885db	                           test rbx, rbx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002e7	            0x750a	                           jne 0x40002f3	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002e9	          0x4863fd	                         movsxd rdi, ebp	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002ec	      0x48037c2420	             add rdi, qword [rsp + 0x20]	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002f1	            0xeb06	                           jmp 0x40002f9	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002f3	          0x4863fd	                         movsxd rdi, ebp	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002f6	          0x4801df	                            add rdi, rbx	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002f9	            0xffd0	                                call rax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002fb	             0x1c5	                            add ebp, eax	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002fd	            0xeb3f	                           jmp 0x400033e	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40002ff	          0x4885db	                           test rbx, rbx	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000302	            0x7521	                           jne 0x4000325	       529	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_13
0x4000304	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000309	      0xe800000000	                          call 0x400030e	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400030e	          0x4863d5	                         movsxd rdx, ebp	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000311	          0x4901d4	                            add r12, rdx	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000314	      0x410fb61424	                   movzx edx, byte [r12]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000319	          0x488b00	                    mov rax, qword [rax]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400031c	          0x8b0490	            mov eax, dword [rax + rdx*4]	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x400031f	        0x41880424	                      mov byte [r12], al	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000323	            0xeb16	                           jmp 0x400033b	       530	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x4000325	      0xe800000000	                          call 0x400032a	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x400032a	          0x4863d5	                         movsxd rdx, ebp	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x400032d	          0x4801da	                            add rdx, rbx	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000330	           0xfb60a	                   movzx ecx, byte [rdx]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000333	          0x488b00	                    mov rax, qword [rax]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000336	          0x8b0488	            mov eax, dword [rax + rcx*4]	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x4000339	            0x8802	                      mov byte [rdx], al	       532	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	CALL_15
0x400033b	          0x83c501	                              add ebp, 1	       533	charset.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4
0x400033e	          0x4885db	                           test rbx, rbx	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000341	            0x7511	                           jne 0x4000354	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000343	          0x4863c5	                         movsxd rax, ebp	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000346	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x400034b	        0x803c0200	                 cmp byte [rdx + rax], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x400034f	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000352	            0xeb0a	                           jmp 0x400035e	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000354	          0x4863c5	                         movsxd rax, ebp	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000357	        0x803c0300	                 cmp byte [rbx + rax], 0	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x400035b	           0xf95c0	                                setne al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x400035e	            0x84c0	                             test al, al	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000360	     0xf858cfdffff	                           jne 0x40000f2	       473	charset.c	FUNCTION_5	ELSE_2	WHILE_1
0x4000366	          0x4885db	                           test rbx, rbx	       538	charset.c	FUNCTION_5	IF_14
0x4000369	          0x4889d8	                            mov rax, rbx	       538	charset.c	FUNCTION_5	IF_14
0x400036c	    0x480f44442420	           cmove rax, qword [rsp + 0x20]	       538	charset.c	FUNCTION_5	IF_14
0x4000372	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       540	charset.c	FUNCTION_5
0x4000377	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       540	charset.c	FUNCTION_5
0x4000380	            0x746d	                            je 0x40003ef	       540	charset.c	FUNCTION_5
0x4000382	            0xeb66	                           jmp 0x40003ea	       540	charset.c	FUNCTION_5
0x4000384	    0x488b05000000	            mov rax, qword [0x0400038b] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400038b	      0xe959ffffff	                           jmp 0x40002e9	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000390	    0x488b05000000	            mov rax, qword [0x04000397] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x4000397	      0xe957ffffff	                           jmp 0x40002f3	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x400039c	          0x4885db	                           test rbx, rbx	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x400039f	     0xf85d9feffff	                           jne 0x400027e	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40003a5	      0xe98dfeffff	                           jmp 0x4000237	       508	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8	IF_11	IF_12
0x40003aa	    0x488b05000000	            mov rax, qword [0x040003b1] 	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40003b1	      0xe933ffffff	                           jmp 0x40002e9	       524	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5
0x40003b6	          0x4489ef	                           mov edi, r13d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003b9	      0xe800000000	                          call 0x40003be	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003be	        0x89442408	                mov dword [rsp + 8], eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003c2	          0x4139c6	                           cmp r14d, eax	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003c5	     0xf8404ffffff	                            je 0x40002cf	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003cb	      0xe91dfeffff	                           jmp 0x40001ed	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003d0	          0x4489ef	                           mov edi, r13d	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003d3	      0xe800000000	                          call 0x40003d8	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003d8	        0x89442408	                mov dword [rsp + 8], eax	       489	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	CALL_9
0x40003dc	          0x4439f0	                           cmp eax, r14d	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003df	     0xf8508feffff	                           jne 0x40001ed	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003e5	      0xe9d8feffff	                           jmp 0x40002c2	       493	charset.c	FUNCTION_5	ELSE_2	WHILE_1	IF_5	IF_6	IF_7	IF_8
0x40003ea	      0xe800000000	                          call 0x40003ef	       540	charset.c	FUNCTION_5
0x40003ef	        0x4883c438	                           add rsp, 0x38	       540	charset.c	FUNCTION_5
0x40003f3	              0x5b	                                 pop rbx	       540	charset.c	FUNCTION_5
0x40003f4	              0x5d	                                 pop rbp	       540	charset.c	FUNCTION_5
0x40003f5	            0x415c	                                 pop r12	       540	charset.c	FUNCTION_5
0x40003f7	            0x415d	                                 pop r13	       540	charset.c	FUNCTION_5
0x40003f9	            0x415e	                                 pop r14	       540	charset.c	FUNCTION_5
0x40003fb	            0x415f	                                 pop r15	       540	charset.c	FUNCTION_5
0x40003fd	              0xc3	                                     ret	       540	charset.c	FUNCTION_5
lbr_chartabsize_adv	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,2:functions,0:SWITCH,0	19
0x40013c3	              0x55	                                push rbp	      1025	charset.c	FUNCTION_31
0x40013c4	              0x53	                                push rbx	      1025	charset.c	FUNCTION_31
0x40013c5	        0x4883ec08	                              sub rsp, 8	      1025	charset.c	FUNCTION_31
0x40013c9	          0x4889f3	                            mov rbx, rsi	      1025	charset.c	FUNCTION_31
0x40013cc	          0x488b36	                    mov rsi, qword [rsi]	      1028	charset.c	FUNCTION_31	CALL_1
0x40013cf	      0xe800000000	                          call 0x40013d4	      1028	charset.c	FUNCTION_31	CALL_1
0x40013d4	            0x89c5	                            mov ebp, eax	      1028	charset.c	FUNCTION_31	CALL_1
0x40013d6	      0xb801000000	                              mov eax, 1	      1029	charset.c	FUNCTION_31	CALL_2
0x40013db	    0x833d00000000	               cmp dword [0x040013e2], 0	      1029	charset.c	FUNCTION_31	CALL_2
0x40013e2	            0x7409	                            je 0x40013ed	      1029	charset.c	FUNCTION_31	CALL_2
0x40013e4	          0x488b3b	                    mov rdi, qword [rbx]	      1029	charset.c	FUNCTION_31	CALL_2
0x40013e7	    0xff1500000000	                 call qword [0x040013ed]	      1029	charset.c	FUNCTION_31	CALL_2
0x40013ed	            0x4898	                                    cdqe	      1029	charset.c	FUNCTION_31	CALL_2
0x40013ef	          0x480103	                    add qword [rbx], rax	      1029	charset.c	FUNCTION_31	CALL_2
0x40013f2	            0x89e8	                            mov eax, ebp	      1031	charset.c	FUNCTION_31
0x40013f4	        0x4883c408	                              add rsp, 8	      1031	charset.c	FUNCTION_31
0x40013f8	              0x5b	                                 pop rbx	      1031	charset.c	FUNCTION_31
0x40013f9	              0x5d	                                 pop rbp	      1031	charset.c	FUNCTION_31
0x40013fa	              0xc3	                                     ret	      1031	charset.c	FUNCTION_31
skiphex	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	11
0x4001bbb	              0x53	                                push rbx	      1586	charset.c	FUNCTION_44
0x4001bbc	          0x4889fb	                            mov rbx, rdi	      1586	charset.c	FUNCTION_44
0x4001bbf	            0xeb04	                           jmp 0x4001bc5	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001bc1	        0x4883c301	                              add rbx, 1	      1590	charset.c	FUNCTION_44	WHILE_1
0x4001bc5	           0xfb63b	                   movzx edi, byte [rbx]	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001bc8	      0xe800000000	                          call 0x4001bcd	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001bcd	            0x85c0	                           test eax, eax	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001bcf	            0x75f0	                           jne 0x4001bc1	      1589	charset.c	FUNCTION_44	WHILE_1	CALL_1
0x4001bd1	          0x4889d8	                            mov rax, rbx	      1592	charset.c	FUNCTION_44
0x4001bd4	              0x5b	                                 pop rbx	      1592	charset.c	FUNCTION_44
0x4001bd5	              0xc3	                                     ret	      1592	charset.c	FUNCTION_44
hexhex2nr	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,4:functions,0:SWITCH,0	29
0x4002896	            0x4154	                                push r12	      2034	charset.c	FUNCTION_61
0x4002898	              0x55	                                push rbp	      2034	charset.c	FUNCTION_61
0x4002899	              0x53	                                push rbx	      2034	charset.c	FUNCTION_61
0x400289a	          0x4889fb	                            mov rbx, rdi	      2034	charset.c	FUNCTION_61
0x400289d	           0xfb62f	                   movzx ebp, byte [rdi]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028a0	            0x89ef	                            mov edi, ebp	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028a2	      0xe800000000	                          call 0x40028a7	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028a7	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028a9	            0x7429	                            je 0x40028d4	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028ab	      0x440fb66301	              movzx r12d, byte [rbx + 1]	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028b0	          0x4489e7	                           mov edi, r12d	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028b3	      0xe800000000	                          call 0x40028b8	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028b8	            0x85c0	                           test eax, eax	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028ba	            0x741f	                            je 0x40028db	      2035	charset.c	FUNCTION_61	IF_1	CALL_2
0x40028bc	            0x89ef	                            mov edi, ebp	      2037	charset.c	FUNCTION_61	CALL_4
0x40028be	      0xe800000000	                          call 0x40028c3	      2037	charset.c	FUNCTION_61	CALL_4
0x40028c3	            0x89c3	                            mov ebx, eax	      2037	charset.c	FUNCTION_61	CALL_4
0x40028c5	          0x4489e7	                           mov edi, r12d	      2037	charset.c	FUNCTION_61	CALL_4
0x40028c8	      0xe800000000	                          call 0x40028cd	      2037	charset.c	FUNCTION_61	CALL_4
0x40028cd	          0xc1e304	                              shl ebx, 4	      2037	charset.c	FUNCTION_61	CALL_4
0x40028d0	             0x1d8	                            add eax, ebx	      2037	charset.c	FUNCTION_61	CALL_4
0x40028d2	            0xeb0c	                           jmp 0x40028e0	      2037	charset.c	FUNCTION_61	CALL_4
0x40028d4	      0xb8ffffffff	                     mov eax, 0xffffffff	      2036	charset.c	FUNCTION_61	IF_1
0x40028d9	            0xeb05	                           jmp 0x40028e0	      2036	charset.c	FUNCTION_61	IF_1
0x40028db	      0xb8ffffffff	                     mov eax, 0xffffffff	      2036	charset.c	FUNCTION_61	IF_1
0x40028e0	              0x5b	                                 pop rbx	      2038	charset.c	FUNCTION_61
0x40028e1	              0x5d	                                 pop rbp	      2038	charset.c	FUNCTION_61
0x40028e2	            0x415c	                                 pop r12	      2038	charset.c	FUNCTION_61
0x40028e4	              0xc3	                                     ret	      2038	charset.c	FUNCTION_61
getvvcol	ELSE,2:FOR,0:IF,7:WHILE,0:DO,0:CALL,7:functions,0:SWITCH,0	90
0x40017d2	            0x4157	                                push r15	      1441	charset.c	FUNCTION_37
0x40017d4	            0x4156	                                push r14	      1441	charset.c	FUNCTION_37
0x40017d6	            0x4155	                                push r13	      1441	charset.c	FUNCTION_37
0x40017d8	            0x4154	                                push r12	      1441	charset.c	FUNCTION_37
0x40017da	              0x55	                                push rbp	      1441	charset.c	FUNCTION_37
0x40017db	              0x53	                                push rbx	      1441	charset.c	FUNCTION_37
0x40017dc	        0x4883ec18	                           sub rsp, 0x18	      1441	charset.c	FUNCTION_37
0x40017e0	          0x4989ff	                            mov r15, rdi	      1441	charset.c	FUNCTION_37
0x40017e3	          0x4989f6	                            mov r14, rsi	      1441	charset.c	FUNCTION_37
0x40017e6	          0x4889d5	                            mov rbp, rdx	      1441	charset.c	FUNCTION_37
0x40017e9	          0x4989cc	                            mov r12, rcx	      1441	charset.c	FUNCTION_37
0x40017ec	          0x4d89c5	                             mov r13, r8	      1441	charset.c	FUNCTION_37
0x40017ef	    0x64488b042528	                mov rax, qword fs:[0x28]	      1441	charset.c	FUNCTION_37
0x40017f8	      0x4889442408	                mov qword [rsp + 8], rax	      1441	charset.c	FUNCTION_37
0x40017fd	            0x31c0	                            xor eax, eax	      1441	charset.c	FUNCTION_37
0x40017ff	      0xe800000000	                          call 0x4001804	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x4001804	            0x85c0	                           test eax, eax	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x4001806	     0xf84be000000	                            je 0x40018ca	      1449	charset.c	FUNCTION_37	IF_1	CALL_1
0x400180c	    0x41b800000000	                              mov r8d, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4001812	      0xb900000000	                              mov ecx, 0	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4001817	      0x488d542404	                      lea rdx, [rsp + 4]	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400181c	          0x4c89f6	                            mov rsi, r14	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x400181f	          0x4c89ff	                            mov rdi, r15	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4001822	      0xe800000000	                          call 0x4001827	      1452	charset.c	FUNCTION_37	IF_1	CALL_2
0x4001827	        0x418b5e0c	              mov ebx, dword [r14 + 0xc]	      1454	charset.c	FUNCTION_37	IF_1
0x400182b	        0x498b7f08	                mov rdi, qword [r15 + 8]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400182f	      0xba00000000	                              mov edx, 0	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4001834	          0x498b36	                    mov rsi, qword [r14]	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x4001837	      0xe800000000	                          call 0x400183c	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400183c	          0x4889c6	                            mov rsi, rax	      1458	charset.c	FUNCTION_37	IF_1	CALL_3
0x400183f	        0x418b5608	                mov edx, dword [r14 + 8]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001843	      0xb800000000	                              mov eax, 0	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001848	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400184f	          0x4889f7	                            mov rdi, rsi	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001852	            0xf2ae	              repne scasb al, byte [rdi]	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001854	          0x48f7d1	                                 not rcx	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001857	        0x4883e901	                              sub rcx, 1	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x400185b	      0xbf00000000	                              mov edi, 0	      1455	charset.c	FUNCTION_37	IF_1
0x4001860	            0x39ca	                            cmp edx, ecx	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001862	            0x7d44	                           jge 0x40018a8	      1459	charset.c	FUNCTION_37	IF_1	IF_2	CALL_4
0x4001864	          0x4863fa	                         movsxd rdi, edx	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4001867	          0x4801f7	                            add rdi, rsi	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x400186a	    0xff1500000000	                 call qword [0x04001870]	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4001870	          0x4189c6	                           mov r14d, eax	      1461	charset.c	FUNCTION_37	IF_1	IF_2
0x4001873	      0xbf00000000	                              mov edi, 0	      1455	charset.c	FUNCTION_37	IF_1
0x4001878	          0x83f809	                              cmp eax, 9	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400187b	            0x742b	                            je 0x40018a8	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400187d	            0x89c7	                            mov edi, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400187f	      0xe800000000	                          call 0x4001884	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x4001884	      0xbf00000000	                              mov edi, 0	      1455	charset.c	FUNCTION_37	IF_1
0x4001889	            0x85c0	                           test eax, eax	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400188b	            0x741b	                            je 0x40018a8	      1463	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_5
0x400188d	          0x4489f7	                           mov edi, r14d	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x4001890	      0xe800000000	                          call 0x4001895	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x4001895	          0x8d78ff	                      lea edi, [rax - 1]	      1465	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	CALL_6
0x4001898	            0x39fb	                            cmp ebx, edi	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x400189a	            0x7f07	                            jg 0x40018a3	      1466	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x400189c	      0xbb00000000	                              mov ebx, 0	      1469	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	ELSE_1
0x40018a1	            0xeb05	                           jmp 0x40018a8	      1469	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	ELSE_1
0x40018a3	      0xbf00000000	                              mov edi, 0	      1467	charset.c	FUNCTION_37	IF_1	IF_2	IF_3	IF_4
0x40018a8	         0x35c2404	                add ebx, dword [rsp + 4]	      1473	charset.c	FUNCTION_37	IF_1
0x40018ac	          0x4885ed	                           test rbp, rbp	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x40018af	            0x7403	                            je 0x40018b4	      1474	charset.c	FUNCTION_37	IF_1	IF_5
0x40018b1	          0x895d00	                    mov dword [rbp], ebx	      1475	charset.c	FUNCTION_37	IF_1	IF_5
0x40018b4	          0x4d85e4	                           test r12, r12	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x40018b7	            0x7404	                            je 0x40018bd	      1476	charset.c	FUNCTION_37	IF_1	IF_6
0x40018b9	        0x41891c24	                    mov dword [r12], ebx	      1477	charset.c	FUNCTION_37	IF_1	IF_6
0x40018bd	          0x4d85ed	                           test r13, r13	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x40018c0	            0x741c	                            je 0x40018de	      1478	charset.c	FUNCTION_37	IF_1	IF_7
0x40018c2	             0x1fb	                            add ebx, edi	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x40018c4	        0x41895d00	                    mov dword [r13], ebx	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x40018c8	            0xeb14	                           jmp 0x40018de	      1479	charset.c	FUNCTION_37	IF_1	IF_7
0x40018ca	          0x4d89e8	                             mov r8, r13	      1482	charset.c	FUNCTION_37	CALL_7
0x40018cd	          0x4c89e1	                            mov rcx, r12	      1482	charset.c	FUNCTION_37	CALL_7
0x40018d0	          0x4889ea	                            mov rdx, rbp	      1482	charset.c	FUNCTION_37	CALL_7
0x40018d3	          0x4c89f6	                            mov rsi, r14	      1482	charset.c	FUNCTION_37	CALL_7
0x40018d6	          0x4c89ff	                            mov rdi, r15	      1482	charset.c	FUNCTION_37	CALL_7
0x40018d9	      0xe800000000	                          call 0x40018de	      1482	charset.c	FUNCTION_37	CALL_7
0x40018de	      0x488b442408	                mov rax, qword [rsp + 8]	      1483	charset.c	FUNCTION_37
0x40018e3	    0x644833042528	                xor rax, qword fs:[0x28]	      1483	charset.c	FUNCTION_37
0x40018ec	            0x7405	                            je 0x40018f3	      1483	charset.c	FUNCTION_37
0x40018ee	      0xe800000000	                          call 0x40018f3	      1483	charset.c	FUNCTION_37
0x40018f3	        0x4883c418	                           add rsp, 0x18	      1483	charset.c	FUNCTION_37
0x40018f7	              0x5b	                                 pop rbx	      1483	charset.c	FUNCTION_37
0x40018f8	              0x5d	                                 pop rbp	      1483	charset.c	FUNCTION_37
0x40018f9	            0x415c	                                 pop r12	      1483	charset.c	FUNCTION_37
0x40018fb	            0x415d	                                 pop r13	      1483	charset.c	FUNCTION_37
0x40018fd	            0x415e	                                 pop r14	      1483	charset.c	FUNCTION_37
0x40018ff	            0x415f	                                 pop r15	      1483	charset.c	FUNCTION_37
0x4001901	              0xc3	                                     ret	      1483	charset.c	FUNCTION_37
skiptobin	ELSE,0:FOR,0:IF,0:WHILE,1:DO,0:CALL,1:functions,0:SWITCH,0	17
0x4001b3c	          0x4889f8	                            mov rax, rdi	      1600	charset.c	FUNCTION_45
0x4001b3f	           0xfb617	                   movzx edx, byte [rdi]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b42	            0x84d2	                             test dl, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b44	            0x7421	                            je 0x4001b67	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b46	           0xfb6d2	                           movzx edx, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b49	          0x83ea30	                           sub edx, 0x30	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b4c	          0x83fa01	                              cmp edx, 1	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b4f	            0x7616	                           jbe 0x4001b67	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b51	        0x4883c001	                              add rax, 1	      1604	charset.c	FUNCTION_45	WHILE_1
0x4001b55	           0xfb610	                   movzx edx, byte [rax]	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b58	            0x84d2	                             test dl, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b5a	            0x740b	                            je 0x4001b67	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b5c	           0xfb6d2	                           movzx edx, dl	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b5f	          0x83ea30	                           sub edx, 0x30	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b62	          0x83fa01	                              cmp edx, 1	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b65	            0x77ea	                            ja 0x4001b51	      1603	charset.c	FUNCTION_45	WHILE_1	CALL_1
0x4001b67	            0xf3c3	                                     ret	      1606	charset.c	FUNCTION_45
getwhitecols	ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	6
0x4001ada	              0x53	                                push rbx	      1550	charset.c	FUNCTION_41
0x4001adb	          0x4889fb	                            mov rbx, rdi	      1550	charset.c	FUNCTION_41
0x4001ade	      0xe800000000	                          call 0x4001ae3	      1551	charset.c	FUNCTION_41	CALL_1
0x4001ae3	          0x4829d8	                            sub rax, rbx	      1551	charset.c	FUNCTION_41	CALL_1
0x4001ae6	              0x5b	                                 pop rbx	      1552	charset.c	FUNCTION_41
0x4001ae7	              0xc3	                                     ret	      1552	charset.c	FUNCTION_41
vim_isprintc	ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:CALL,1:functions,0:SWITCH,0	20
0x4000889	    0x833d00000000	               cmp dword [0x04000890], 0	       971	charset.c	FUNCTION_28	IF_1
0x4000890	            0x7413	                            je 0x40008a5	       971	charset.c	FUNCTION_28	IF_1
0x4000892	    0x81ffff000000	                           cmp edi, 0xff	       971	charset.c	FUNCTION_28	IF_1
0x4000898	            0x7e0b	                           jle 0x40008a5	       971	charset.c	FUNCTION_28	IF_1
0x400089a	        0x4883ec08	                              sub rsp, 8	       969	charset.c	FUNCTION_28
0x400089e	      0xe800000000	                          call 0x40008a3	       972	charset.c	FUNCTION_28	CALL_1
0x40008a3	            0xeb27	                           jmp 0x40008cc	       972	charset.c	FUNCTION_28	CALL_1
0x40008a5	      0xb801000000	                              mov eax, 1	       974	charset.c	FUNCTION_28
0x40008aa	    0x81ffff000000	                           cmp edi, 0xff	       974	charset.c	FUNCTION_28
0x40008b0	            0x7f1e	                            jg 0x40008d0	       974	charset.c	FUNCTION_28
0x40008b2	      0xb800000000	                              mov eax, 0	       974	charset.c	FUNCTION_28
0x40008b7	            0x85ff	                           test edi, edi	       974	charset.c	FUNCTION_28
0x40008b9	            0x7e15	                           jle 0x40008d0	       974	charset.c	FUNCTION_28
0x40008bb	          0x4863ff	                         movsxd rdi, edi	       974	charset.c	FUNCTION_28
0x40008be	     0xfb687000000	                   movzx eax, byte [rdi]	       972	charset.c	FUNCTION_28	CALL_1
0x40008c5	          0xc0e804	                               shr al, 4	       972	charset.c	FUNCTION_28	CALL_1
0x40008c8	          0x83e001	                              and eax, 1	       972	charset.c	FUNCTION_28	CALL_1
0x40008cb	              0xc3	                                     ret	       972	charset.c	FUNCTION_28	CALL_1
0x40008cc	        0x4883c408	                              add rsp, 8	       975	charset.c	FUNCTION_28
0x40008d0	            0xf3c3	                                     ret	       975	charset.c	FUNCTION_28
getvcols	ELSE,4:FOR,0:IF,4:WHILE,0:DO,0:CALL,5:functions,0:SWITCH,0	89
0x400198f	            0x4156	                                push r14	      1497	charset.c	FUNCTION_38
0x4001991	            0x4155	                                push r13	      1497	charset.c	FUNCTION_38
0x4001993	            0x4154	                                push r12	      1497	charset.c	FUNCTION_38
0x4001995	              0x55	                                push rbp	      1497	charset.c	FUNCTION_38
0x4001996	              0x53	                                push rbx	      1497	charset.c	FUNCTION_38
0x4001997	        0x4883ec20	                           sub rsp, 0x20	      1497	charset.c	FUNCTION_38
0x400199b	          0x4989fe	                            mov r14, rdi	      1497	charset.c	FUNCTION_38
0x400199e	          0x4889f3	                            mov rbx, rsi	      1497	charset.c	FUNCTION_38
0x40019a1	          0x4989d5	                            mov r13, rdx	      1497	charset.c	FUNCTION_38
0x40019a4	          0x4989cc	                            mov r12, rcx	      1497	charset.c	FUNCTION_38
0x40019a7	          0x4c89c5	                             mov rbp, r8	      1497	charset.c	FUNCTION_38
0x40019aa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	charset.c	FUNCTION_38
0x40019b3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1497	charset.c	FUNCTION_38
0x40019b8	            0x31c0	                            xor eax, eax	      1497	charset.c	FUNCTION_38
0x40019ba	          0x488b16	                    mov rdx, qword [rsi]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019bd	        0x498b4500	                    mov rax, qword [r13]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019c1	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019c4	            0x7408	                            je 0x40019ce	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019c6	          0x4839c2	                            cmp rdx, rax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019c9	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019cc	            0xeb1c	                           jmp 0x40019ea	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019ce	          0x8b5608	                mov edx, dword [rsi + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019d1	        0x418b4508	                mov eax, dword [r13 + 8]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019d5	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019d7	            0x7407	                            je 0x40019e0	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019d9	            0x39c2	                            cmp edx, eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019db	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019de	            0xeb0a	                           jmp 0x40019ea	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019e0	        0x418b450c	              mov eax, dword [r13 + 0xc]	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019e4	          0x39460c	              cmp dword [rsi + 0xc], eax	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019e7	           0xf9cc0	                                 setl al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019ea	            0x84c0	                             test al, al	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019ec	            0x7436	                            je 0x4001a24	      1500	charset.c	FUNCTION_38	IF_1	CALL_1
0x40019ee	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40019f3	      0xb900000000	                              mov ecx, 0	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40019f8	      0x488d542408	                      lea rdx, [rsp + 8]	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x40019fd	          0x4889de	                            mov rsi, rbx	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001a00	          0x4c89f7	                            mov rdi, r14	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001a03	      0xe800000000	                          call 0x4001a08	      1502	charset.c	FUNCTION_38	IF_1	CALL_2
0x4001a08	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a0d	      0xb900000000	                              mov ecx, 0	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a12	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a17	          0x4c89ee	                            mov rsi, r13	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a1a	          0x4c89f7	                            mov rdi, r14	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a1d	      0xe800000000	                          call 0x4001a22	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a22	            0xeb34	                           jmp 0x4001a58	      1503	charset.c	FUNCTION_38	IF_1	CALL_3
0x4001a24	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a29	      0xb900000000	                              mov ecx, 0	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a2e	      0x488d542408	                      lea rdx, [rsp + 8]	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a33	          0x4c89ee	                            mov rsi, r13	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a36	          0x4c89f7	                            mov rdi, r14	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a39	      0xe800000000	                          call 0x4001a3e	      1507	charset.c	FUNCTION_38	ELSE_1	CALL_4
0x4001a3e	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a43	      0xb900000000	                              mov ecx, 0	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a48	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a4d	          0x4889de	                            mov rsi, rbx	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a50	          0x4c89f7	                            mov rdi, r14	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a53	      0xe800000000	                          call 0x4001a58	      1508	charset.c	FUNCTION_38	ELSE_1	CALL_5
0x4001a58	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1510	charset.c	FUNCTION_38	IF_2
0x4001a5c	        0x8b442408	                mov eax, dword [rsp + 8]	      1510	charset.c	FUNCTION_38	IF_2
0x4001a60	            0x39c2	                            cmp edx, eax	      1511	charset.c	FUNCTION_38	IF_2
0x4001a62	           0xf4cc2	                          cmovl eax, edx	      1511	charset.c	FUNCTION_38	IF_2
0x4001a65	        0x41890424	                    mov dword [r12], eax	      1511	charset.c	FUNCTION_38	IF_2
0x4001a69	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001a6d	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001a71	            0x39c1	                            cmp ecx, eax	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001a73	            0x7e1d	                           jle 0x4001a92	      1514	charset.c	FUNCTION_38	ELSE_2	IF_3
0x4001a75	    0x488b35000000	            mov rsi, qword [0x04001a7c] 	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a7c	          0x803e65	                    cmp byte [rsi], 0x65	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a7f	            0x750c	                           jne 0x4001a8d	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a81	          0x83ea01	                              sub edx, 1	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a84	            0x39d0	                            cmp eax, edx	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a86	            0x7f05	                            jg 0x4001a8d	      1516	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a88	          0x895500	                    mov dword [rbp], edx	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a8b	            0xeb08	                           jmp 0x4001a95	      1517	charset.c	FUNCTION_38	ELSE_2	IF_3	IF_4
0x4001a8d	          0x894d00	                    mov dword [rbp], ecx	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x4001a90	            0xeb03	                           jmp 0x4001a95	      1519	charset.c	FUNCTION_38	ELSE_2	IF_3	ELSE_3
0x4001a92	          0x894500	                    mov dword [rbp], eax	      1522	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001a95	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001a9a	    0x644833042528	                xor rax, qword fs:[0x28]	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001aa3	            0x7405	                            je 0x4001aaa	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001aa5	      0xe800000000	                          call 0x4001aaa	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001aaa	        0x4883c420	                           add rsp, 0x20	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001aae	              0x5b	                                 pop rbx	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001aaf	              0x5d	                                 pop rbp	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ab0	            0x415c	                                 pop r12	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ab2	            0x415d	                                 pop r13	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ab4	            0x415e	                                 pop r14	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
0x4001ab6	              0xc3	                                     ret	      1523	charset.c	FUNCTION_38	ELSE_3	ELSE_4
