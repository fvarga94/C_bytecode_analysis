diffopt_horizontal	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,0:DO,0	4
0x4002902	    0x8b0500000000	            mov eax, dword [0x04002908] 	      1942	diff.c	FUNCTION_33
0x4002908	          0xc1e803	                              shr eax, 3	      1942	diff.c	FUNCTION_33
0x400290b	          0x83e001	                              and eax, 1	      1942	diff.c	FUNCTION_33
0x400290e	              0xc3	                                     ret	      1943	diff.c	FUNCTION_33
diff_win_options	FOR,0:WHILE,0:IF,8:SWITCH,0:ELSE,0:functions,0:CALL,11:DO,0	85
0x400097b	            0x4154	                                push r12	      1153	diff.c	FUNCTION_21
0x400097d	              0x55	                                push rbp	      1153	diff.c	FUNCTION_21
0x400097e	              0x53	                                push rbx	      1153	diff.c	FUNCTION_21
0x400097f	          0x4889fb	                            mov rbx, rdi	      1153	diff.c	FUNCTION_21
0x4000982	          0x4189f4	                           mov r12d, esi	      1153	diff.c	FUNCTION_21
0x4000985	    0x488b2d000000	            mov rbp, qword [0x0400098c] 	      1155	diff.c	FUNCTION_21
0x400098c	    0x48893d000000	            mov qword [0x04000993], rdi 	      1158	diff.c	FUNCTION_21
0x4000993	      0xe800000000	                          call 0x4000998	      1159	diff.c	FUNCTION_21	CALL_1
0x4000998	    0x48892d000000	            mov qword [0x0400099f], rbp 	      1160	diff.c	FUNCTION_21
0x400099f	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      1164	diff.c	FUNCTION_21	IF_1
0x40009a6	     0xf8563010000	                           jne 0x4000b0f	      1164	diff.c	FUNCTION_21	IF_1
0x40009ac	    0x8b8388020000	           mov eax, dword [rbx + 0x288] 	      1165	diff.c	FUNCTION_21	IF_1
0x40009b2	    0x898390020000	            mov dword [rbx + 0x290], eax	      1165	diff.c	FUNCTION_21	IF_1
0x40009b8	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x40009c2	    0x8b83b0020000	           mov eax, dword [rbx + 0x2b0] 	      1168	diff.c	FUNCTION_21	IF_2
0x40009c8	    0x8983b4020000	            mov dword [rbx + 0x2b4], eax	      1168	diff.c	FUNCTION_21	IF_2
0x40009ce	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x40009d8	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      1171	diff.c	FUNCTION_21	IF_3
0x40009de	    0x898398020000	            mov dword [rbx + 0x298], eax	      1171	diff.c	FUNCTION_21	IF_3
0x40009e4	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x40009ee	    0x48891d000000	            mov qword [0x040009f5], rbx 	      1174	diff.c	FUNCTION_21
0x40009f5	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x40009f9	    0x488905000000	            mov qword [0x04000a00], rax 	      1175	diff.c	FUNCTION_21
0x4000a00	    0x83bb8c020000	              cmp dword [rbx + 0x28c], 0	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x4000a07	            0x740c	                            je 0x4000a15	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x4000a09	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000a10	      0xe800000000	                          call 0x4000a15	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000a15	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a1c	      0xe800000000	                          call 0x4000a21	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a21	    0x488983000200	            mov qword [rbx + 0x200], rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a28	    0x41b800000000	                              mov r8d, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a2e	      0xb905000000	                              mov ecx, 5	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a33	      0xba00000000	                              mov edx, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a38	      0xbeffffffff	                     mov esi, 0xffffffff	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a3d	      0xbf00000000	                              mov edi, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a42	      0xe800000000	                          call 0x4000a47	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a47	    0x48892d000000	            mov qword [0x04000a4e], rbp 	      1184	diff.c	FUNCTION_21
0x4000a4e	        0x488b4508	                mov rax, qword [rbp + 8]	      1185	diff.c	FUNCTION_21
0x4000a52	    0x488905000000	            mov qword [0x04000a59], rax 	      1185	diff.c	FUNCTION_21
0x4000a59	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      1186	diff.c	FUNCTION_21	IF_6
0x4000a60	            0x7526	                           jne 0x4000a88	      1186	diff.c	FUNCTION_21	IF_6
0x4000a62	    0x488b83c80100	           mov rax, qword [rbx + 0x1c8] 	      1188	diff.c	FUNCTION_21	IF_6
0x4000a69	    0x8983d0010000	            mov dword [rbx + 0x1d0], eax	      1188	diff.c	FUNCTION_21	IF_6
0x4000a6f	    0x8b83d4010000	           mov eax, dword [rbx + 0x1d4] 	      1189	diff.c	FUNCTION_21	IF_6
0x4000a75	    0x8983d8010000	            mov dword [rbx + 0x1d8], eax	      1189	diff.c	FUNCTION_21	IF_6
0x4000a7b	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      1190	diff.c	FUNCTION_21	IF_6
0x4000a82	    0x8983f0010000	            mov dword [rbx + 0x1f0], eax	      1190	diff.c	FUNCTION_21	IF_6
0x4000a88	    0x486305000000	         movsxd rax, dword [0x04000a8f] 	      1192	diff.c	FUNCTION_21
0x4000a8f	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1192	diff.c	FUNCTION_21
0x4000a96	    0xc783d4010000	              mov dword [rbx + 0x1d4], 1	      1193	diff.c	FUNCTION_21
0x4000aa0	    0x48c783e80100	              mov qword [rbx + 0x1e8], 0	      1194	diff.c	FUNCTION_21
0x4000aab	          0x4889df	                            mov rdi, rbx	      1195	diff.c	FUNCTION_21	CALL_5
0x4000aae	      0xe800000000	                          call 0x4000ab3	      1195	diff.c	FUNCTION_21	CALL_5
0x4000ab3	          0x4889df	                            mov rdi, rbx	      1197	diff.c	FUNCTION_21	CALL_6
0x4000ab6	      0xe800000000	                          call 0x4000abb	      1197	diff.c	FUNCTION_21	CALL_6
0x4000abb	      0xbe68000000	                           mov esi, 0x68	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000ac0	    0x488b3d000000	            mov rdi, qword [0x04000ac7] 	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000ac7	      0xe800000000	                          call 0x4000acc	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000acc	          0x4885c0	                           test rax, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000acf	            0x750a	                           jne 0x4000adb	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000ad1	      0xbf00000000	                              mov edi, 0	      1200	diff.c	FUNCTION_21	CALL_8
0x4000ad6	      0xe800000000	                          call 0x4000adb	      1200	diff.c	FUNCTION_21	CALL_8
0x4000adb	    0xc7838c020000	              mov dword [rbx + 0x28c], 1	      1202	diff.c	FUNCTION_21
0x4000ae5	      0xbe01000000	                              mov esi, 1	      1204	diff.c	FUNCTION_21	CALL_9
0x4000aea	          0x4889df	                            mov rdi, rbx	      1204	diff.c	FUNCTION_21	CALL_9
0x4000aed	      0xe832faffff	                call sym.set_diff_option	      1204	diff.c	FUNCTION_21	CALL_9
0x4000af2	          0x4585e4	                         test r12d, r12d	      1206	diff.c	FUNCTION_21	IF_8
0x4000af5	            0x7409	                            je 0x4000b00	      1206	diff.c	FUNCTION_21	IF_8
0x4000af7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1207	diff.c	FUNCTION_21	CALL_10
0x4000afb	      0xe800000000	                          call 0x4000b00	      1207	diff.c	FUNCTION_21	CALL_10
0x4000b00	      0xbe28000000	                           mov esi, 0x28	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b05	          0x4889df	                            mov rdi, rbx	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b08	      0xe800000000	                          call 0x4000b0d	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b0d	            0xeb35	                           jmp 0x4000b44	      1209	diff.c	FUNCTION_21
0x4000b0f	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x4000b19	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x4000b23	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x4000b2d	    0x48891d000000	            mov qword [0x04000b34], rbx 	      1174	diff.c	FUNCTION_21
0x4000b34	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x4000b38	    0x488905000000	            mov qword [0x04000b3f], rax 	      1175	diff.c	FUNCTION_21
0x4000b3f	      0xe9e4feffff	                           jmp 0x4000a28	      1175	diff.c	FUNCTION_21
0x4000b44	              0x5b	                                 pop rbx	      1209	diff.c	FUNCTION_21
0x4000b45	              0x5d	                                 pop rbp	      1209	diff.c	FUNCTION_21
0x4000b46	            0x415c	                                 pop r12	      1209	diff.c	FUNCTION_21
0x4000b48	              0xc3	                                     ret	      1209	diff.c	FUNCTION_21
diff_check	FOR,4:WHILE,0:IF,17:SWITCH,0:ELSE,1:functions,0:CALL,4:DO,0	142
0x40005a8	            0x4156	                                push r14	      1522	diff.c	FUNCTION_26
0x40005aa	            0x4155	                                push r13	      1522	diff.c	FUNCTION_26
0x40005ac	            0x4154	                                push r12	      1522	diff.c	FUNCTION_26
0x40005ae	              0x55	                                push rbp	      1522	diff.c	FUNCTION_26
0x40005af	              0x53	                                push rbx	      1522	diff.c	FUNCTION_26
0x40005b0	          0x4889fb	                            mov rbx, rdi	      1522	diff.c	FUNCTION_26
0x40005b3	          0x4889f5	                            mov rbp, rsi	      1522	diff.c	FUNCTION_26
0x40005b6	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      1527	diff.c	FUNCTION_26
0x40005ba	    0x488b05000000	            mov rax, qword [0x040005c1] 	      1530	diff.c	FUNCTION_26	IF_1
0x40005c1	    0x83b8a0000000	               cmp dword [rax + 0xa0], 0	      1530	diff.c	FUNCTION_26	IF_1
0x40005c8	            0x740a	                            je 0x40005d4	      1530	diff.c	FUNCTION_26	IF_1
0x40005ca	      0xbf00000000	                              mov edi, 0	      1531	diff.c	FUNCTION_26	CALL_1
0x40005cf	      0xe800000000	                          call 0x40005d4	      1531	diff.c	FUNCTION_26	CALL_1
0x40005d4	    0x488b05000000	            mov rax, qword [0x040005db] 	      1533	diff.c	FUNCTION_26	IF_2
0x40005db	      0x4883785800	               cmp qword [rax + 0x58], 0	      1533	diff.c	FUNCTION_26	IF_2
0x40005e0	     0xf84a2010000	                            je 0x4000788	      1533	diff.c	FUNCTION_26	IF_2
0x40005e6	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      1537	diff.c	FUNCTION_26	IF_3
0x40005ed	     0xf849d010000	                            je 0x4000790	      1537	diff.c	FUNCTION_26	IF_3
0x40005f3	          0x4885ed	                           test rbp, rbp	      1537	diff.c	FUNCTION_26	IF_3
0x40005f6	     0xf8e94010000	                           jle 0x4000790	      1537	diff.c	FUNCTION_26	IF_3
0x40005fc	        0x498b4500	                    mov rax, qword [r13]	      1537	diff.c	FUNCTION_26	IF_3
0x4000600	        0x4883c001	                              add rax, 1	      1537	diff.c	FUNCTION_26	IF_3
0x4000604	    0x41bc00000000	                             mov r12d, 0	      1538	diff.c	FUNCTION_26	IF_3
0x400060a	          0x4839c5	                            cmp rbp, rax	      1537	diff.c	FUNCTION_26	IF_3
0x400060d	     0xf8fad010000	                            jg 0x40007c0	      1537	diff.c	FUNCTION_26	IF_3
0x4000613	          0x4c89ef	                            mov rdi, r13	      1540	diff.c	FUNCTION_26	CALL_2
0x4000616	      0xe825faffff	                   call sym.diff_buf_idx	      1540	diff.c	FUNCTION_26	CALL_2
0x400061b	          0x4189c5	                           mov r13d, eax	      1540	diff.c	FUNCTION_26	CALL_2
0x400061e	          0x83f808	                              cmp eax, 8	      1541	diff.c	FUNCTION_26	IF_4
0x4000621	     0xf8499010000	                            je 0x40007c0	      1541	diff.c	FUNCTION_26	IF_4
0x4000627	    0x41b900000000	                              mov r9d, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400062d	    0x41b801000000	                              mov r8d, 1	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000633	      0xb900000000	                              mov ecx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000638	      0xba00000000	                              mov edx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400063d	          0x4889ee	                            mov rsi, rbp	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000640	          0x4889df	                            mov rdi, rbx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000643	      0xe800000000	                          call 0x4000648	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000648	          0x4189c4	                           mov r12d, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400064b	            0x85c0	                           test eax, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400064d	     0xf8545010000	                           jne 0x4000798	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000653	    0x488b0d000000	            mov rcx, qword [0x0400065a] 	      1551	diff.c	FUNCTION_26	FOR_1
0x400065a	        0x488b5958	            mov rbx, qword [rcx + 0x58] 	      1551	diff.c	FUNCTION_26	FOR_1
0x400065e	          0x4885db	                           test rbx, rbx	      1551	diff.c	FUNCTION_26	FOR_1
0x4000661	     0xf8459010000	                            je 0x40007c0	      1551	diff.c	FUNCTION_26	FOR_1
0x4000667	          0x4963d5	                        movsxd rdx, r13d	      1551	diff.c	FUNCTION_26	FOR_1
0x400066a	        0x48c1e203	                              shl rdx, 3	      1551	diff.c	FUNCTION_26	FOR_1
0x400066e	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000673	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000678	          0x4839c5	                            cmp rbp, rax	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400067b	            0x7f18	                            jg 0x4000695	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400067d	      0xe92e010000	                           jmp 0x40007b0	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000682	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000687	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400068c	          0x4839c5	                            cmp rbp, rax	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400068f	     0xf8e1b010000	                           jle 0x40007b0	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000695	          0x488b1b	                    mov rbx, qword [rbx]	      1551	diff.c	FUNCTION_26	FOR_1
0x4000698	          0x4885db	                           test rbx, rbx	      1551	diff.c	FUNCTION_26	FOR_1
0x400069b	            0x75e5	                           jne 0x4000682	      1551	diff.c	FUNCTION_26	FOR_1
0x400069d	      0xe91e010000	                           jmp 0x40007c0	      1551	diff.c	FUNCTION_26	FOR_1
0x40006a2	        0x488b7a48	            mov rdi, qword [rdx + 0x48] 	      1557	diff.c	FUNCTION_26	IF_8
0x40006a6	          0x4801f8	                            add rax, rdi	      1557	diff.c	FUNCTION_26	IF_8
0x40006a9	          0x4839c5	                            cmp rbp, rax	      1557	diff.c	FUNCTION_26	IF_8
0x40006ac	     0xf8d98000000	                           jge 0x400074a	      1557	diff.c	FUNCTION_26	IF_8
0x40006b2	      0xb800000000	                              mov eax, 0	      1557	diff.c	FUNCTION_26	IF_8
0x40006b7	    0x41be00000000	                             mov r14d, 0	      1557	diff.c	FUNCTION_26	IF_8
0x40006bd	      0xbe00000000	                              mov esi, 0	      1557	diff.c	FUNCTION_26	IF_8
0x40006c2	          0x4139c5	                           cmp r13d, eax	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006c5	            0x7428	                            je 0x40006ef	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006c7	    0x48837cc16000	       cmp qword [rcx + rax*8 + 0x60], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006cd	            0x7420	                            je 0x40006ef	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006cf	      0x488b54c348	    mov rdx, qword [rbx + rax*8 + 0x48] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006d4	          0x4885d2	                           test rdx, rdx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006d7	            0x7410	                            je 0x40006e9	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006d9	          0x4839d7	                            cmp rdi, rdx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40006dc	     0xf85be000000	                           jne 0x40007a0	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40006e2	      0xbe01000000	                              mov esi, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40006e7	            0xeb06	                           jmp 0x40006ef	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40006e9	    0x41be01000000	                             mov r14d, 1	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006ef	        0x4883c001	                              add rax, 1	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006f3	        0x4883f808	                              cmp rax, 8	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40006f7	            0x75c9	                           jne 0x40006c2	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40006f9	            0x85f6	                           test esi, esi	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x40006fb	            0x743f	                            je 0x400073c	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x40006fd	      0xbd00000000	                              mov ebp, 0	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000702	            0x89ea	                            mov edx, ebp	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000704	          0x4139ed	                           cmp r13d, ebp	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000707	            0x7429	                            je 0x4000732	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000709	          0x4863c5	                         movsxd rax, ebp	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400070c	    0x488b0d000000	            mov rcx, qword [0x04000713] 	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000713	    0x48837cc16000	       cmp qword [rcx + rax*8 + 0x60], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000719	            0x7417	                            je 0x4000732	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400071b	    0x48837ceb4800	       cmp qword [rbx + rbp*8 + 0x48], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000721	            0x740f	                            je 0x4000732	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000723	          0x4489ee	                           mov esi, r13d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000726	          0x4889df	                            mov rdi, rbx	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000729	      0xe845fbffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400072e	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000730	            0x7476	                            je 0x40007a8	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000732	        0x4883c501	                              add rbp, 1	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000736	        0x4883fd08	                              cmp rbp, 8	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x400073a	            0x75c6	                           jne 0x4000702	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x400073c	          0x4585f6	                         test r14d, r14d	      1594	diff.c	FUNCTION_26	IF_8
0x400073f	      0xb8feffffff	                     mov eax, 0xfffffffe	      1594	diff.c	FUNCTION_26	IF_8
0x4000744	        0x440f45e0	                        cmovne r12d, eax	      1594	diff.c	FUNCTION_26	IF_8
0x4000748	            0xeb76	                           jmp 0x40007c0	      1594	diff.c	FUNCTION_26	IF_8
0x400074a	    0x448b25000000	           mov r12d, dword [0x04000751] 	      1598	diff.c	FUNCTION_26	IF_16
0x4000751	        0x4183e401	                             and r12d, 1	      1598	diff.c	FUNCTION_26	IF_16
0x4000755	            0x7469	                            je 0x40007c0	      1598	diff.c	FUNCTION_26	IF_16
0x4000757	      0xb800000000	                              mov eax, 0	      1598	diff.c	FUNCTION_26	IF_16
0x400075c	    0x41bc00000000	                             mov r12d, 0	      1598	diff.c	FUNCTION_26	IF_16
0x4000762	    0x48837c016000	         cmp qword [rcx + rax + 0x60], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000768	            0x740f	                            je 0x4000779	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400076a	      0x488b540348	      mov rdx, qword [rbx + rax + 0x48] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400076f	          0x4963f4	                        movsxd rsi, r12d	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000772	          0x4839f2	                            cmp rdx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000775	        0x440f4fe2	                         cmovg r12d, edx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000779	        0x4883c008	                              add rax, 8	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400077d	        0x4883f840	                           cmp rax, 0x40	      1604	diff.c	FUNCTION_26	FOR_4
0x4000781	            0x75df	                           jne 0x4000762	      1604	diff.c	FUNCTION_26	FOR_4
0x4000783	          0x4129fc	                           sub r12d, edi	      1607	diff.c	FUNCTION_26
0x4000786	            0xeb38	                           jmp 0x40007c0	      1607	diff.c	FUNCTION_26
0x4000788	    0x41bc00000000	                             mov r12d, 0	      1534	diff.c	FUNCTION_26	IF_2
0x400078e	            0xeb30	                           jmp 0x40007c0	      1534	diff.c	FUNCTION_26	IF_2
0x4000790	    0x41bc00000000	                             mov r12d, 0	      1538	diff.c	FUNCTION_26	IF_3
0x4000796	            0xeb28	                           jmp 0x40007c0	      1538	diff.c	FUNCTION_26	IF_3
0x4000798	    0x41bc00000000	                             mov r12d, 0	      1547	diff.c	FUNCTION_26	IF_5
0x400079e	            0xeb20	                           jmp 0x40007c0	      1547	diff.c	FUNCTION_26	IF_5
0x40007a0	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40007a6	            0xeb18	                           jmp 0x40007c0	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40007a8	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x40007ae	            0xeb10	                           jmp 0x40007c0	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x40007b0	          0x4801da	                            add rdx, rbx	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x40007b3	        0x488b4208	                mov rax, qword [rdx + 8]	      1554	diff.c	FUNCTION_26	IF_7
0x40007b7	          0x4839c5	                            cmp rbp, rax	      1554	diff.c	FUNCTION_26	IF_7
0x40007ba	     0xf8de2feffff	                           jge 0x40006a2	      1554	diff.c	FUNCTION_26	IF_7
0x40007c0	          0x4489e0	                           mov eax, r12d	      1608	diff.c	FUNCTION_26
0x40007c3	              0x5b	                                 pop rbx	      1608	diff.c	FUNCTION_26
0x40007c4	              0x5d	                                 pop rbp	      1608	diff.c	FUNCTION_26
0x40007c5	            0x415c	                                 pop r12	      1608	diff.c	FUNCTION_26
0x40007c7	            0x415d	                                 pop r13	      1608	diff.c	FUNCTION_26
0x40007c9	            0x415e	                                 pop r14	      1608	diff.c	FUNCTION_26
0x40007cb	              0xc3	                                     ret	      1608	diff.c	FUNCTION_26
diff_get_corresponding_line	FOR,0:WHILE,0:IF,1:SWITCH,0:ELSE,0:functions,0:CALL,1:DO,0	97
0x40039b0	            0x4154	                                push r12	      2637	diff.c	FUNCTION_43
0x40039b2	              0x55	                                push rbp	      2637	diff.c	FUNCTION_43
0x40039b3	              0x53	                                push rbx	      2637	diff.c	FUNCTION_43
0x40039b4	          0x4889f3	                            mov rbx, rsi	      2637	diff.c	FUNCTION_43
0x40039b7	      0xe884c6ffff	                   call sym.diff_buf_idx	      2586	diff.c	FUNCTION_42	CALL_1
0x40039bc	          0x4189c4	                           mov r12d, eax	      2586	diff.c	FUNCTION_42	CALL_1
0x40039bf	    0x488b3d000000	            mov rdi, qword [0x040039c6] 	      2587	diff.c	FUNCTION_42	CALL_2
0x40039c6	      0xe875c6ffff	                   call sym.diff_buf_idx	      2587	diff.c	FUNCTION_42	CALL_2
0x40039cb	        0x4183fc08	                             cmp r12d, 8	      2588	diff.c	FUNCTION_42	IF_1
0x40039cf	     0xf840f010000	                            je 0x4003ae4	      2588	diff.c	FUNCTION_42	IF_1
0x40039d5	            0x89c5	                            mov ebp, eax	      2588	diff.c	FUNCTION_42	IF_1
0x40039d7	          0x83f808	                              cmp eax, 8	      2588	diff.c	FUNCTION_42	IF_1
0x40039da	     0xf8404010000	                            je 0x4003ae4	      2588	diff.c	FUNCTION_42	IF_1
0x40039e0	    0x488b05000000	            mov rax, qword [0x040039e7] 	      2588	diff.c	FUNCTION_42	IF_1
0x40039e7	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      2588	diff.c	FUNCTION_42	IF_1
0x40039eb	          0x4885f6	                           test rsi, rsi	      2588	diff.c	FUNCTION_42	IF_1
0x40039ee	     0xf84f5000000	                            je 0x4003ae9	      2588	diff.c	FUNCTION_42	IF_1
0x40039f4	    0x83b8a0000000	               cmp dword [rax + 0xa0], 0	      2591	diff.c	FUNCTION_42	IF_2
0x40039fb	            0x7421	                            je 0x4003a1e	      2591	diff.c	FUNCTION_42	IF_2
0x40039fd	      0xbf00000000	                              mov edi, 0	      2592	diff.c	FUNCTION_42	CALL_3
0x4003a02	      0xe800000000	                          call 0x4003a07	      2592	diff.c	FUNCTION_42	CALL_3
0x4003a07	    0x488b05000000	            mov rax, qword [0x04003a0e] 	      2594	diff.c	FUNCTION_42	IF_3
0x4003a0e	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      2594	diff.c	FUNCTION_42	IF_3
0x4003a12	          0x4889d8	                            mov rax, rbx	      2595	diff.c	FUNCTION_42	IF_3
0x4003a15	          0x4885f6	                           test rsi, rsi	      2594	diff.c	FUNCTION_42	IF_3
0x4003a18	     0xf84ce000000	                            je 0x4003aec	      2594	diff.c	FUNCTION_42	IF_3
0x4003a1e	          0x4d63cc	                         movsxd r9, r12d	      2594	diff.c	FUNCTION_42	IF_3
0x4003a21	        0x49c1e103	                               shl r9, 3	      2594	diff.c	FUNCTION_42	IF_3
0x4003a25	        0x4a8d040e	                     lea rax, [rsi + r9]	      2594	diff.c	FUNCTION_42	IF_3
0x4003a29	        0x488b5008	                mov rdx, qword [rax + 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a2d	          0x4839d3	                            cmp rbx, rdx	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a30	            0x7c2c	                            jl 0x4003a5e	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a32	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a36	        0x488d040a	                    lea rax, [rdx + rcx]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a3a	    0x4c8b15000000	            mov r10, qword [0x04003a41] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003a41	          0x4c63c5	                          movsxd r8, ebp	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003a44	        0x49c1e003	                               shl r8, 3	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003a48	          0x4839c3	                            cmp rbx, rax	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a4b	            0x7d50	                           jge 0x4003a9d	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a4d	            0xeb2c	                           jmp 0x4003a7b	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a4f	        0x4a8d3c0e	                     lea rdi, [rsi + r9]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a53	        0x488b5708	                mov rdx, qword [rdi + 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a57	          0x4839d3	                            cmp rbx, rdx	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a5a	            0x7d12	                           jge 0x4003a6e	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a5c	            0xeb05	                           jmp 0x4003a63	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a5e	      0xb900000000	                              mov ecx, 0	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a63	          0x4863c9	                         movsxd rcx, ecx	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a66	          0x4889d8	                            mov rax, rbx	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a69	          0x4829c8	                            sub rax, rcx	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a6c	            0xeb7e	                           jmp 0x4003aec	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x4003a6e	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a72	        0x488d3c0a	                    lea rdi, [rdx + rcx]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a76	          0x4839fb	                            cmp rbx, rdi	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a79	            0x7d22	                           jge 0x4003a9d	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a7b	            0x29d3	                            sub ebx, edx	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a7d	          0x4863ed	                         movsxd rbp, ebp	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a80	        0x488d04ee	                  lea rax, [rsi + rbp*8]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a84	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4003a88	          0x4863cb	                         movsxd rcx, ebx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4003a8b	          0x4839d1	                            cmp rcx, rdx	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4003a8e	           0xf4fda	                          cmovg ebx, edx	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4003a91	          0x4863db	                         movsxd rbx, ebx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a94	        0x48035808	                add rbx, qword [rax + 8]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a98	          0x4889d8	                            mov rax, rbx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a9b	            0xeb4f	                           jmp 0x4003aec	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x4003a9d	          0x4885c9	                           test rcx, rcx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aa0	            0x751f	                           jne 0x4003ac1	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aa2	          0x4839d3	                            cmp rbx, rdx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aa5	            0x751a	                           jne 0x4003ac1	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aa7	        0x4e8d1c06	                     lea r11, [rsi + r8]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aab	        0x498b7b08	                mov rdi, qword [r11 + 8]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003aaf	        0x498b4238	            mov rax, qword [r10 + 0x38] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003ab3	          0x4839c7	                            cmp rdi, rax	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003ab6	            0x7f09	                            jg 0x4003ac1	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003ab8	        0x49037b48	             add rdi, qword [r11 + 0x48]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003abc	          0x4839f8	                            cmp rax, rdi	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003abf	            0x7c2b	                            jl 0x4003aec	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4003ac1	      0x422b540648	        sub edx, dword [rsi + r8 + 0x48]	      2623	diff.c	FUNCTION_42	FOR_1
0x4003ac6	      0x422b540608	           sub edx, dword [rsi + r8 + 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x4003acb	             0x1d1	                            add ecx, edx	      2623	diff.c	FUNCTION_42	FOR_1
0x4003acd	          0x488b36	                    mov rsi, qword [rsi]	      2597	diff.c	FUNCTION_42	FOR_1
0x4003ad0	          0x4885f6	                           test rsi, rsi	      2597	diff.c	FUNCTION_42	FOR_1
0x4003ad3	     0xf8576ffffff	                           jne 0x4003a4f	      2597	diff.c	FUNCTION_42	FOR_1
0x4003ad9	          0x4863c9	                         movsxd rcx, ecx	      2628	diff.c	FUNCTION_42
0x4003adc	          0x4889d8	                            mov rax, rbx	      2628	diff.c	FUNCTION_42
0x4003adf	          0x4829c8	                            sub rax, rcx	      2628	diff.c	FUNCTION_42
0x4003ae2	            0xeb08	                           jmp 0x4003aec	      2628	diff.c	FUNCTION_42
0x4003ae4	          0x4889d8	                            mov rax, rbx	      2589	diff.c	FUNCTION_42	IF_1
0x4003ae7	            0xeb03	                           jmp 0x4003aec	      2589	diff.c	FUNCTION_42	IF_1
0x4003ae9	          0x4889d8	                            mov rax, rbx	      2589	diff.c	FUNCTION_42	IF_1
0x4003aec	    0x488b15000000	            mov rdx, qword [0x04003af3] 	      2641	diff.c	FUNCTION_43	IF_1
0x4003af3	          0x483902	                    cmp qword [rdx], rax	      2641	diff.c	FUNCTION_43	IF_1
0x4003af6	        0x480f4e02	                 cmovle rax, qword [rdx]	      2641	diff.c	FUNCTION_43	IF_1
0x4003afa	              0x5b	                                 pop rbx	      2644	diff.c	FUNCTION_43
0x4003afb	              0x5d	                                 pop rbp	      2644	diff.c	FUNCTION_43
0x4003afc	            0x415c	                                 pop r12	      2644	diff.c	FUNCTION_43
0x4003afe	              0xc3	                                     ret	      2644	diff.c	FUNCTION_43
nv_diffgetput	FOR,0:WHILE,0:IF,2:SWITCH,0:ELSE,2:functions,0:CALL,2:DO,0	40
0x4003794	              0x55	                                push rbp	      2140	diff.c	FUNCTION_37
0x4003795	              0x53	                                push rbx	      2140	diff.c	FUNCTION_37
0x4003796	    0x4881ece80000	                           sub rsp, 0xe8	      2140	diff.c	FUNCTION_37
0x400379d	            0x89fb	                            mov ebx, edi	      2140	diff.c	FUNCTION_37
0x400379f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2140	diff.c	FUNCTION_37
0x40037a8	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      2140	diff.c	FUNCTION_37
0x40037b0	            0x31c0	                            xor eax, eax	      2140	diff.c	FUNCTION_37
0x40037b2	          0x4885f6	                           test rsi, rsi	      2144	diff.c	FUNCTION_37	IF_1
0x40037b5	            0x750a	                           jne 0x40037c1	      2144	diff.c	FUNCTION_37	IF_1
0x40037b7	    0x48c704240000	                      mov qword [rsp], 0	      2145	diff.c	FUNCTION_37	IF_1
0x40037bf	            0xeb26	                           jmp 0x40037e7	      2145	diff.c	FUNCTION_37	IF_1
0x40037c1	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037c9	          0x4889f1	                            mov rcx, rsi	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037cc	      0xba00000000	                              mov edx, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037d1	      0xbe1e000000	                           mov esi, 0x1e	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037d6	          0x4889ef	                            mov rdi, rbp	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037d9	      0xb800000000	                              mov eax, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037de	      0xe800000000	                          call 0x40037e3	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x40037e3	        0x48892c24	                    mov qword [rsp], rbp	      2149	diff.c	FUNCTION_37	ELSE_1
0x40037e7	          0x83fb01	                              cmp ebx, 1	      2152	diff.c	FUNCTION_37	IF_2
0x40037ea	            0x19c0	                            sbb eax, eax	      2152	diff.c	FUNCTION_37	IF_2
0x40037ec	          0x83e0fd	                     and eax, 0xfffffffd	      2152	diff.c	FUNCTION_37	IF_2
0x40037ef	          0x83c072	                           add eax, 0x72	      2152	diff.c	FUNCTION_37	IF_2
0x40037f2	        0x89442420	             mov dword [rsp + 0x20], eax	      2152	diff.c	FUNCTION_37	IF_2
0x40037f6	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2155	diff.c	FUNCTION_37
0x40037fe	    0x488b05000000	            mov rax, qword [0x04003805] 	      2156	diff.c	FUNCTION_37
0x4003805	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2156	diff.c	FUNCTION_37
0x4003809	      0x4889542440	             mov qword [rsp + 0x40], rdx	      2156	diff.c	FUNCTION_37
0x400380e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2157	diff.c	FUNCTION_37
0x4003812	      0x4889442448	             mov qword [rsp + 0x48], rax	      2157	diff.c	FUNCTION_37
0x4003817	          0x4889e7	                            mov rdi, rsp	      2158	diff.c	FUNCTION_37	CALL_2
0x400381a	      0xe800000000	                          call 0x400381f	      2158	diff.c	FUNCTION_37	CALL_2
0x400381f	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      2159	diff.c	FUNCTION_37
0x4003827	    0x644833042528	                xor rax, qword fs:[0x28]	      2159	diff.c	FUNCTION_37
0x4003830	            0x7405	                            je 0x4003837	      2159	diff.c	FUNCTION_37
0x4003832	      0xe800000000	                          call 0x4003837	      2159	diff.c	FUNCTION_37
0x4003837	    0x4881c4e80000	                           add rsp, 0xe8	      2159	diff.c	FUNCTION_37
0x400383e	              0x5b	                                 pop rbx	      2159	diff.c	FUNCTION_37
0x400383f	              0x5d	                                 pop rbp	      2159	diff.c	FUNCTION_37
0x4003840	              0xc3	                                     ret	      2159	diff.c	FUNCTION_37
diff_file	FOR,0:WHILE,0:IF,3:SWITCH,0:ELSE,1:functions,0:CALL,14:DO,0	90
0x40003e3	            0x4156	                                push r14	       841	diff.c	FUNCTION_16
0x40003e5	            0x4155	                                push r13	       841	diff.c	FUNCTION_16
0x40003e7	            0x4154	                                push r12	       841	diff.c	FUNCTION_16
0x40003e9	              0x55	                                push rbp	       841	diff.c	FUNCTION_16
0x40003ea	              0x53	                                push rbx	       841	diff.c	FUNCTION_16
0x40003eb	          0x4889fd	                            mov rbp, rdi	       841	diff.c	FUNCTION_16
0x40003ee	          0x4989f4	                            mov r12, rsi	       841	diff.c	FUNCTION_16
0x40003f1	          0x4889d3	                            mov rbx, rdx	       841	diff.c	FUNCTION_16
0x40003f4	    0x488b05000000	            mov rax, qword [0x040003fb] 	       846	diff.c	FUNCTION_16	IF_1
0x40003fb	          0x803800	                       cmp byte [rax], 0	       846	diff.c	FUNCTION_16	IF_1
0x40003fe	            0x740a	                            je 0x400040a	       846	diff.c	FUNCTION_16	IF_1
0x4000400	      0xe800000000	                          call 0x4000405	       848	diff.c	FUNCTION_16	CALL_1
0x4000405	      0xe911010000	                           jmp 0x400051b	       848	diff.c	FUNCTION_16	CALL_1
0x400040a	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000411	      0xb800000000	                              mov eax, 0	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000416	          0x4889f1	                            mov rcx, rsi	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000419	            0xf2ae	              repne scasb al, byte [rdi]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400041b	          0x4989c9	                             mov r9, rcx	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400041e	          0x4889f1	                            mov rcx, rsi	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000421	          0x4c89e7	                            mov rdi, r12	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000424	            0xf2ae	              repne scasb al, byte [rdi]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000426	          0x4889ca	                            mov rdx, rcx	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000429	          0x48f7d2	                                 not rdx	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400042c	          0x4889f1	                            mov rcx, rsi	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x400042f	          0x4889df	                            mov rdi, rbx	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000432	            0xf2ae	              repne scasb al, byte [rdi]	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000434	          0x4989c8	                             mov r8, rcx	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000437	    0x488b3d000000	            mov rdi, qword [0x0400043e] 	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x400043e	          0x4889f1	                            mov rcx, rsi	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000441	            0xf2ae	              repne scasb al, byte [rdi]	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000443	          0x4889c8	                            mov rax, rcx	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000446	          0x48f7d0	                                 not rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x4000449	          0x4c29ca	                             sub rdx, r9	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400044c	          0x4c29c0	                             sub rax, r8	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x400044f	      0x4c8d741015	            lea r14, [rax + rdx + 0x15] 	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x4000454	          0x4489f7	                           mov edi, r14d	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x4000457	      0xe800000000	                          call 0x400045c	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x400045c	          0x4989c5	                            mov r13, rax	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x400045f	          0x4885c0	                           test rax, rax	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x4000462	     0xf84b3000000	                            je 0x400051b	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x4000468	      0xbf00000000	                              mov edi, 0	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x400046d	      0xe800000000	                          call 0x4000472	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x4000472	          0x4885c0	                           test rax, rax	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x4000475	            0x740f	                            je 0x4000486	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x4000477	      0xbe00000000	                              mov esi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x400047c	      0xbf00000000	                              mov edi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x4000481	      0xe800000000	                          call 0x4000486	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x4000486	    0x8b0500000000	            mov eax, dword [0x0400048c] 	       872	diff.c	FUNCTION_16	ELSE_1	IF_2
0x400048c	            0x89c2	                            mov edx, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400048e	          0x83e202	                              and edx, 2	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4000491	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x4000496	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400049b	        0x480f44d1	                          cmove rdx, rcx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x400049f	          0x83e004	                              and eax, 4	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004a2	          0x4989c9	                             mov r9, rcx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004a5	      0xb800000000	                              mov eax, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004aa	        0x4c0f45c8	                          cmovne r9, rax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004ae	    0x833d00000000	               cmp dword [0x040004b5], 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004b5	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004ba	      0xb800000000	                              mov eax, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004bf	        0x480f44c8	                          cmove rcx, rax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004c3	        0x4883ec08	                              sub rsp, 8	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004c7	            0x4154	                                push r12	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004c9	              0x55	                                push rbp	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004ca	              0x52	                                push rdx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004cb	          0x4989c0	                             mov r8, rax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004ce	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004d3	          0x4c89f6	                            mov rsi, r14	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004d6	          0x4c89ef	                            mov rdi, r13	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004d9	      0xb800000000	                              mov eax, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004de	      0xe800000000	                          call 0x40004e3	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x40004e3	        0x4883c420	                           add rsp, 0x20	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004e7	          0x4889d9	                            mov rcx, rbx	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004ea	    0x488b15000000	            mov rdx, qword [0x040004f1] 	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004f1	          0x4489f6	                           mov esi, r14d	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004f4	          0x4c89ef	                            mov rdi, r13	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004f7	      0xe800000000	                          call 0x40004fc	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x40004fc	      0xe800000000	                          call 0x4000501	       875	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_11
0x4000501	      0xbe19000000	                           mov esi, 0x19	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x4000506	          0x4c89ef	                            mov rdi, r13	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x4000509	      0xe800000000	                          call 0x400050e	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x400050e	      0xe800000000	                          call 0x4000513	       877	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_13
0x4000513	          0x4c89ef	                            mov rdi, r13	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x4000516	      0xe800000000	                          call 0x400051b	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x400051b	              0x5b	                                 pop rbx	       881	diff.c	FUNCTION_16
0x400051c	              0x5d	                                 pop rbp	       881	diff.c	FUNCTION_16
0x400051d	            0x415c	                                 pop r12	       881	diff.c	FUNCTION_16
0x400051f	            0x415d	                                 pop r13	       881	diff.c	FUNCTION_16
0x4000521	            0x415e	                                 pop r14	       881	diff.c	FUNCTION_16
0x4000523	              0xc3	                                     ret	       881	diff.c	FUNCTION_16
diff_invalidate	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,1:CALL,0:DO,0	34
0x4001177	              0x55	                                push rbp	       195	diff.c	FUNCTION_7
0x4001178	              0x53	                                push rbx	       195	diff.c	FUNCTION_7
0x4001179	        0x4883ec08	                              sub rsp, 8	       195	diff.c	FUNCTION_7
0x400117d	          0x4889fd	                            mov rbp, rdi	       195	diff.c	FUNCTION_7
0x4001180	    0x488b1d000000	            mov rbx, qword [0x04001187] 	       199	diff.c	FUNCTION_7
0x4001187	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x400118a	            0x753f	                           jne 0x40011cb	       199	diff.c	FUNCTION_7
0x400118c	            0xeb4e	                           jmp 0x40011dc	       199	diff.c	FUNCTION_7
0x400118e	          0x483b28	                    cmp rbp, qword [rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001191	            0x740e	                            je 0x40011a1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001193	          0x83c201	                              add edx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x4001196	        0x4883c008	                              add rax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x400119a	          0x83fa08	                              cmp edx, 8	       183	diff.c	FUNCTION_6	FOR_1
0x400119d	            0x75ef	                           jne 0x400118e	       183	diff.c	FUNCTION_6	FOR_1
0x400119f	            0xeb22	                           jmp 0x40011c3	       183	diff.c	FUNCTION_6	FOR_1
0x40011a1	          0x83fa08	                              cmp edx, 8	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x40011a4	            0x741d	                            je 0x40011c3	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x40011a6	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x40011b0	    0x48391d000000	            cmp qword [0x040011b7], rbx 	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x40011b7	            0x750a	                           jne 0x40011c3	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x40011b9	      0xbf01000000	                              mov edi, 1	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x40011be	      0xe809f6ffff	                    call sym.diff_redraw	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x40011c3	          0x488b1b	                    mov rbx, qword [rbx]	       199	diff.c	FUNCTION_7
0x40011c6	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x40011c9	            0x7411	                            je 0x40011dc	       199	diff.c	FUNCTION_7
0x40011cb	        0x483b6b60	            cmp rbp, qword [rbx + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011cf	            0x74d5	                            je 0x40011a6	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011d1	        0x488d4368	                   lea rax, [rbx + 0x68]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011d5	      0xba01000000	                              mov edx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x40011da	            0xebb2	                           jmp 0x400118e	       183	diff.c	FUNCTION_6	FOR_1
0x40011dc	        0x4883c408	                              add rsp, 8	       209	diff.c	FUNCTION_7
0x40011e0	              0x5b	                                 pop rbx	       209	diff.c	FUNCTION_7
0x40011e1	              0x5d	                                 pop rbp	       209	diff.c	FUNCTION_7
0x40011e2	              0xc3	                                     ret	       209	diff.c	FUNCTION_7
diff_write	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,3:DO,0	30
0x400037b	            0x4154	                                push r12	       641	diff.c	FUNCTION_14
0x400037d	              0x55	                                push rbp	       641	diff.c	FUNCTION_14
0x400037e	              0x53	                                push rbx	       641	diff.c	FUNCTION_14
0x400037f	          0x4889fb	                            mov rbx, rdi	       641	diff.c	FUNCTION_14
0x4000382	          0x4889f5	                            mov rbp, rsi	       641	diff.c	FUNCTION_14
0x4000385	    0x4c8ba7901400	          mov r12, qword [rdi + 0x1490] 	       645	diff.c	FUNCTION_14
0x400038c	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x4000391	      0xe800000000	                          call 0x4000396	       646	diff.c	FUNCTION_14	CALL_1
0x4000396	    0x488983901400	          mov qword [rbx + 0x1490], rax 	       646	diff.c	FUNCTION_14	CALL_1
0x400039d	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x400039f	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x40003a1	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x40003a3	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x40003a5	    0x41b900000000	                              mov r9d, 0	       647	diff.c	FUNCTION_14	CALL_2
0x40003ab	          0x4c8b03	                     mov r8, qword [rbx]	       647	diff.c	FUNCTION_14	CALL_2
0x40003ae	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x40003b3	      0xba00000000	                              mov edx, 0	       647	diff.c	FUNCTION_14	CALL_2
0x40003b8	          0x4889ee	                            mov rsi, rbp	       647	diff.c	FUNCTION_14	CALL_2
0x40003bb	          0x4889df	                            mov rdi, rbx	       647	diff.c	FUNCTION_14	CALL_2
0x40003be	      0xe800000000	                          call 0x40003c3	       647	diff.c	FUNCTION_14	CALL_2
0x40003c3	            0x89c5	                            mov ebp, eax	       647	diff.c	FUNCTION_14	CALL_2
0x40003c5	        0x4883c420	                           add rsp, 0x20	       649	diff.c	FUNCTION_14	CALL_3
0x40003c9	    0x488bbb901400	          mov rdi, qword [rbx + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x40003d0	      0xe800000000	                          call 0x40003d5	       649	diff.c	FUNCTION_14	CALL_3
0x40003d5	    0x4c89a3901400	          mov qword [rbx + 0x1490], r12 	       650	diff.c	FUNCTION_14
0x40003dc	            0x89e8	                            mov eax, ebp	       652	diff.c	FUNCTION_14
0x40003de	              0x5b	                                 pop rbx	       652	diff.c	FUNCTION_14
0x40003df	              0x5d	                                 pop rbp	       652	diff.c	FUNCTION_14
0x40003e0	            0x415c	                                 pop r12	       652	diff.c	FUNCTION_14
0x40003e2	              0xc3	                                     ret	       652	diff.c	FUNCTION_14
diff_buf_idx	FOR,1:WHILE,0:IF,1:SWITCH,0:ELSE,0:functions,0:CALL,0:DO,0	14
0x4000040	    0x488b15000000	            mov rdx, qword [0x04000047] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4000047	        0x483b7a60	            cmp rdi, qword [rdx + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400004b	            0x741c	                            je 0x4000069	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400004d	        0x4883c268	                           add rdx, 0x68	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4000051	      0xb801000000	                              mov eax, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4000056	          0x48393a	                    cmp qword [rdx], rdi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4000059	            0x7413	                            je 0x400006e	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400005b	          0x83c001	                              add eax, 1	       168	diff.c	FUNCTION_5	FOR_1
0x400005e	        0x4883c208	                              add rdx, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4000062	          0x83f808	                              cmp eax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4000065	            0x75ef	                           jne 0x4000056	       168	diff.c	FUNCTION_5	FOR_1
0x4000067	            0xf3c3	                                     ret	       168	diff.c	FUNCTION_5	FOR_1
0x4000069	      0xb800000000	                              mov eax, 0	       168	diff.c	FUNCTION_5	FOR_1
0x400006e	            0xf3c3	                                     ret	       172	diff.c	FUNCTION_5
diff_check_sanity	FOR,1:WHILE,0:IF,2:SWITCH,0:ELSE,0:functions,0:CALL,0:DO,0	16
0x4000070	      0xb800000000	                              mov eax, 0	       591	diff.c	FUNCTION_12
0x4000075	      0x488b4c0760	      mov rcx, qword [rdi + rax + 0x60] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x400007a	          0x4885c9	                           test rcx, rcx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x400007d	            0x7413	                            je 0x4000092	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x400007f	      0x488b540648	      mov rdx, qword [rsi + rax + 0x48] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000084	      0x4803540608	          add rdx, qword [rsi + rax + 8]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000089	        0x4883ea01	                              sub rdx, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400008d	          0x483b11	                    cmp rdx, qword [rcx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000090	            0x7f10	                            jg 0x40000a2	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000092	        0x4883c008	                              add rax, 8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4000096	        0x4883f840	                           cmp rax, 0x40	       594	diff.c	FUNCTION_12	FOR_1
0x400009a	            0x75d9	                           jne 0x4000075	       594	diff.c	FUNCTION_12	FOR_1
0x400009c	      0xb801000000	                              mov eax, 1	       599	diff.c	FUNCTION_12
0x40000a1	              0xc3	                                     ret	       599	diff.c	FUNCTION_12
0x40000a2	      0xb800000000	                              mov eax, 0	       598	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x40000a7	              0xc3	                                     ret	       600	diff.c	FUNCTION_12
ex_diffoff	FOR,0:WHILE,0:IF,2:SWITCH,0:ELSE,0:functions,1:CALL,3:DO,0	109
0x4002245	            0x4155	                                push r13	      1217	diff.c	FUNCTION_22
0x4002247	            0x4154	                                push r12	      1217	diff.c	FUNCTION_22
0x4002249	              0x55	                                push rbp	      1217	diff.c	FUNCTION_22
0x400224a	              0x53	                                push rbx	      1217	diff.c	FUNCTION_22
0x400224b	        0x4883ec08	                              sub rsp, 8	      1217	diff.c	FUNCTION_22
0x400224f	          0x4989fc	                            mov r12, rdi	      1217	diff.c	FUNCTION_22
0x4002252	    0x488b1d000000	            mov rbx, qword [0x04002259] 	      1221	diff.c	FUNCTION_22
0x4002259	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x400225c	     0xf84b4010000	                            je 0x4002416	      1221	diff.c	FUNCTION_22
0x4002262	      0xbd00000000	                              mov ebp, 0	      1221	diff.c	FUNCTION_22
0x4002267	    0x41bd00000000	                             mov r13d, 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400226d	    0x41837c243400	               cmp dword [r12 + 0x34], 0	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002273	            0x740c	                            je 0x4002281	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002275	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400227c	           0xf95c0	                                setne al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400227f	            0xeb0a	                           jmp 0x400228b	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002281	    0x48391d000000	            cmp qword [0x04002288], rbx 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002288	           0xf94c0	                                 sete al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400228b	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400228d	     0xf84fd000000	                            je 0x4002390	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002293	      0xbe00000000	                              mov esi, 0	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x4002298	          0x4889df	                            mov rdi, rbx	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x400229b	      0xe884e2ffff	                call sym.set_diff_option	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x40022a0	    0x83bb8c020000	              cmp dword [rbx + 0x28c], 0	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40022a7	     0xf84c9000000	                            je 0x4002376	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40022ad	    0x83bb88020000	              cmp dword [rbx + 0x288], 0	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40022b4	            0x740c	                            je 0x40022c2	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40022b6	    0x8b8390020000	           mov eax, dword [rbx + 0x290] 	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40022bc	    0x898388020000	            mov dword [rbx + 0x288], eax	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40022c2	    0x83bbb0020000	              cmp dword [rbx + 0x2b0], 0	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40022c9	            0x740c	                            je 0x40022d7	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40022cb	    0x8b83b4020000	           mov eax, dword [rbx + 0x2b4] 	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40022d1	    0x8983b0020000	            mov dword [rbx + 0x2b0], eax	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40022d7	    0x83bb94020000	              cmp dword [rbx + 0x294], 0	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40022de	            0x750c	                           jne 0x40022ec	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40022e0	    0x8b8398020000	           mov eax, dword [rbx + 0x298] 	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40022e6	    0x898394020000	            mov dword [rbx + 0x294], eax	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40022ec	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x40022f3	      0xe800000000	                          call 0x40022f8	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x40022f8	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40022ff	          0x803f00	                       cmp byte [rdi], 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002302	        0x490f44fd	                          cmove rdi, r13	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002306	      0xe800000000	                          call 0x400230b	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400230b	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002312	    0x486305000000	         movsxd rax, dword [0x04002319] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002319	    0x483983c80100	           cmp qword [rbx + 0x1c8], rax 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002320	            0x750e	                           jne 0x4002330	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002322	    0x486383d00100	        movsxd rax, dword [rbx + 0x1d0] 	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002329	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002330	    0x4883bbe80100	              cmp qword [rbx + 0x1e8], 0	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4002338	            0x750e	                           jne 0x4002348	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x400233a	    0x486383f00100	        movsxd rax, dword [rbx + 0x1f0] 	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4002341	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4002348	    0x83bbd4010000	              cmp dword [rbx + 0x1d4], 0	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400234f	            0x741d	                            je 0x400236e	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002351	          0x4889df	                            mov rdi, rbx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002354	      0xe800000000	                          call 0x4002359	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002359	      0xba00000000	                              mov edx, 0	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400235e	            0x85c0	                           test eax, eax	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002360	            0x7506	                           jne 0x4002368	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002362	    0x8b93d8010000	           mov edx, dword [rbx + 0x1d8] 	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002368	    0x8993d4010000	            mov dword [rbx + 0x1d4], edx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400236e	          0x4889df	                            mov rdi, rbx	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002371	      0xe800000000	                          call 0x4002376	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002376	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002380	          0x4889df	                            mov rdi, rbx	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002383	      0xe800000000	                          call 0x4002388	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002388	          0x4889df	                            mov rdi, rbx	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x400238b	      0xe800000000	                          call 0x4002390	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x4002390	     0xbabc0010000	             or ebp, dword [rbx + 0x1c0]	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x4002396	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1221	diff.c	FUNCTION_22
0x400239a	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x400239d	     0xf85cafeffff	                           jne 0x400226d	      1221	diff.c	FUNCTION_22
0x40023a3	    0x41837c243400	               cmp dword [r12 + 0x34], 0	      1272	diff.c	FUNCTION_22	IF_1
0x40023a9	            0x7445	                            je 0x40023f0	      1272	diff.c	FUNCTION_22	IF_1
0x40023ab	            0xeb05	                           jmp 0x40023b2	      1272	diff.c	FUNCTION_22	IF_1
0x40023ad	      0xbd00000000	                              mov ebp, 0	      1219	diff.c	FUNCTION_22
0x40023b2	      0xbb00000000	                              mov ebx, 0	      1219	diff.c	FUNCTION_22
0x40023b7	    0x488b05000000	            mov rax, qword [0x040023be] 	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023be	          0x4863d3	                         movsxd rdx, ebx	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023c1	        0x488d14d0	                  lea rdx, [rax + rdx*8]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023c5	      0x48837a6000	               cmp qword [rdx + 0x60], 0	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023ca	            0x741c	                            je 0x40023e8	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023cc	    0x48c742600000	               mov qword [rdx + 0x60], 0	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023d4	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x40023de	      0xbf01000000	                              mov edi, 1	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x40023e3	      0xe8e4e3ffff	                    call sym.diff_redraw	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x40023e8	          0x83c301	                              add ebx, 1	       150	diff.c	FUNCTION_4	FOR_1
0x40023eb	          0x83fb08	                              cmp ebx, 8	       150	diff.c	FUNCTION_4	FOR_1
0x40023ee	            0x75c7	                           jne 0x40023b7	       150	diff.c	FUNCTION_4	FOR_1
0x40023f0	            0x85ed	                           test ebp, ebp	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40023f2	            0x752a	                           jne 0x400241e	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40023f4	      0xbe68000000	                           mov esi, 0x68	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40023f9	    0x488b3d000000	            mov rdi, qword [0x04002400] 	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002400	      0xe800000000	                          call 0x4002405	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002405	          0x4885c0	                           test rax, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002408	            0x7414	                            je 0x400241e	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x400240a	      0xbf00000000	                              mov edi, 0	      1277	diff.c	FUNCTION_22	CALL_3
0x400240f	      0xe800000000	                          call 0x4002414	      1277	diff.c	FUNCTION_22	CALL_3
0x4002414	            0xeb08	                           jmp 0x400241e	      1278	diff.c	FUNCTION_22
0x4002416	        0x837f3400	               cmp dword [rdi + 0x34], 0	      1272	diff.c	FUNCTION_22	IF_1
0x400241a	            0x74d8	                            je 0x40023f4	      1272	diff.c	FUNCTION_22	IF_1
0x400241c	            0xeb8f	                           jmp 0x40023ad	      1272	diff.c	FUNCTION_22	IF_1
0x400241e	        0x4883c408	                              add rsp, 8	      1278	diff.c	FUNCTION_22
0x4002422	              0x5b	                                 pop rbx	      1278	diff.c	FUNCTION_22
0x4002423	              0x5d	                                 pop rbp	      1278	diff.c	FUNCTION_22
0x4002424	            0x415c	                                 pop r12	      1278	diff.c	FUNCTION_22
0x4002426	            0x415d	                                 pop r13	      1278	diff.c	FUNCTION_22
0x4002428	              0xc3	                                     ret	      1278	diff.c	FUNCTION_22
diff_infold	FOR,2:WHILE,0:IF,8:SWITCH,0:ELSE,1:functions,0:CALL,1:DO,0	86
0x4002cb6	    0x8b87c0010000	           mov eax, dword [rdi + 0x1c0] 	      2100	diff.c	FUNCTION_36	IF_1
0x4002cbc	            0x85c0	                           test eax, eax	      2100	diff.c	FUNCTION_36	IF_1
0x4002cbe	     0xf8424010000	                            je 0x4002de8	      2100	diff.c	FUNCTION_36	IF_1
0x4002cc4	              0x55	                                push rbp	      2093	diff.c	FUNCTION_36
0x4002cc5	              0x53	                                push rbx	      2093	diff.c	FUNCTION_36
0x4002cc6	        0x4883ec08	                              sub rsp, 8	      2093	diff.c	FUNCTION_36
0x4002cca	    0x4c8b05000000	              mov r8, qword [0x04002cd1]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cd1	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cd5	      0xb800000000	                              mov eax, 0	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cda	      0xb900000000	                              mov ecx, 0	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cdf	      0xbdffffffff	                     mov ebp, 0xffffffff	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002ce4	    0x41b901000000	                              mov r9d, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002cea	      0x498b54c060	     mov rdx, qword [r8 + rax*8 + 0x60] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cef	          0x4839fa	                            cmp rdx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cf2	            0x7409	                            je 0x4002cfd	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4002cf4	          0x4885d2	                           test rdx, rdx	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002cf7	        0x410f45c9	                         cmovne ecx, r9d	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002cfb	            0xeb02	                           jmp 0x4002cff	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002cfd	            0x89c5	                            mov ebp, eax	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002cff	        0x4883c001	                              add rax, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4002d03	        0x4883f808	                              cmp rax, 8	      2103	diff.c	FUNCTION_36	FOR_1
0x4002d07	            0x75e1	                           jne 0x4002cea	      2103	diff.c	FUNCTION_36	FOR_1
0x4002d09	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2112	diff.c	FUNCTION_36	IF_4
0x4002d0c	     0xf8490000000	                            je 0x4002da2	      2112	diff.c	FUNCTION_36	IF_4
0x4002d12	            0x85c9	                           test ecx, ecx	      2112	diff.c	FUNCTION_36	IF_4
0x4002d14	     0xf8488000000	                            je 0x4002da2	      2112	diff.c	FUNCTION_36	IF_4
0x4002d1a	          0x4889f3	                            mov rbx, rsi	      2112	diff.c	FUNCTION_36	IF_4
0x4002d1d	    0x4183b8a00000	                cmp dword [r8 + 0xa0], 0	      2115	diff.c	FUNCTION_36	IF_5
0x4002d25	     0xf84a8000000	                            je 0x4002dd3	      2115	diff.c	FUNCTION_36	IF_5
0x4002d2b	      0xbf00000000	                              mov edi, 0	      2116	diff.c	FUNCTION_36	CALL_1
0x4002d30	      0xe800000000	                          call 0x4002d35	      2116	diff.c	FUNCTION_36	CALL_1
0x4002d35	    0x488b05000000	            mov rax, qword [0x04002d3c] 	      2119	diff.c	FUNCTION_36	IF_6
0x4002d3c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2119	diff.c	FUNCTION_36	IF_6
0x4002d40	          0x4885d2	                           test rdx, rdx	      2119	diff.c	FUNCTION_36	IF_6
0x4002d43	            0x7464	                            je 0x4002da9	      2119	diff.c	FUNCTION_36	IF_6
0x4002d45	          0x4863ed	                         movsxd rbp, ebp	      2119	diff.c	FUNCTION_36	IF_6
0x4002d48	        0x48c1e503	                              shl rbp, 3	      2119	diff.c	FUNCTION_36	IF_6
0x4002d4c	        0x488d0c2a	                    lea rcx, [rdx + rbp]	      2119	diff.c	FUNCTION_36	IF_6
0x4002d50	        0x488b4108	                mov rax, qword [rcx + 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d54	    0x486335000000	         movsxd rsi, dword [0x04002d5b] 	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d5b	          0x4889c7	                            mov rdi, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d5e	          0x4829f7	                            sub rdi, rsi	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d61	          0x4839fb	                            cmp rbx, rdi	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d64	            0x7c4a	                            jl 0x4002db0	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d66	        0x48034148	             add rax, qword [rcx + 0x48]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d6a	          0x4801f0	                            add rax, rsi	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d6d	          0x4839c3	                            cmp rbx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d70	            0x7d21	                           jge 0x4002d93	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d72	            0xeb43	                           jmp 0x4002db7	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d74	        0x488d0c2a	                    lea rcx, [rdx + rbp]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d78	        0x488b4108	                mov rax, qword [rcx + 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d7c	          0x4889c7	                            mov rdi, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d7f	          0x4829f7	                            sub rdi, rsi	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d82	          0x4839df	                            cmp rdi, rbx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d85	            0x7f37	                            jg 0x4002dbe	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4002d87	        0x48034148	             add rax, qword [rcx + 0x48]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d8b	          0x4801f0	                            add rax, rsi	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d8e	          0x4839c3	                            cmp rbx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d91	            0x7c32	                            jl 0x4002dc5	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002d93	          0x488b12	                    mov rdx, qword [rdx]	      2122	diff.c	FUNCTION_36	FOR_2
0x4002d96	          0x4885d2	                           test rdx, rdx	      2122	diff.c	FUNCTION_36	FOR_2
0x4002d99	            0x75d9	                           jne 0x4002d74	      2122	diff.c	FUNCTION_36	FOR_2
0x4002d9b	      0xb801000000	                              mov eax, 1	      2131	diff.c	FUNCTION_36
0x4002da0	            0xeb40	                           jmp 0x4002de2	      2131	diff.c	FUNCTION_36
0x4002da2	      0xb800000000	                              mov eax, 0	      2113	diff.c	FUNCTION_36	IF_4
0x4002da7	            0xeb39	                           jmp 0x4002de2	      2113	diff.c	FUNCTION_36	IF_4
0x4002da9	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x4002dae	            0xeb32	                           jmp 0x4002de2	      2120	diff.c	FUNCTION_36	IF_6
0x4002db0	      0xb801000000	                              mov eax, 1	      2131	diff.c	FUNCTION_36
0x4002db5	            0xeb2b	                           jmp 0x4002de2	      2131	diff.c	FUNCTION_36
0x4002db7	      0xb800000000	                              mov eax, 0	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002dbc	            0xeb24	                           jmp 0x4002de2	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002dbe	      0xb801000000	                              mov eax, 1	      2131	diff.c	FUNCTION_36
0x4002dc3	            0xeb1d	                           jmp 0x4002de2	      2131	diff.c	FUNCTION_36
0x4002dc5	      0xb800000000	                              mov eax, 0	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002dca	            0xeb16	                           jmp 0x4002de2	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x4002dcc	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x4002dd1	            0xeb0f	                           jmp 0x4002de2	      2120	diff.c	FUNCTION_36	IF_6
0x4002dd3	        0x498b5058	              mov rdx, qword [r8 + 0x58]	      2119	diff.c	FUNCTION_36	IF_6
0x4002dd7	          0x4885d2	                           test rdx, rdx	      2119	diff.c	FUNCTION_36	IF_6
0x4002dda	     0xf8565ffffff	                           jne 0x4002d45	      2119	diff.c	FUNCTION_36	IF_6
0x4002de0	            0xebea	                           jmp 0x4002dcc	      2119	diff.c	FUNCTION_36	IF_6
0x4002de2	        0x4883c408	                              add rsp, 8	      2132	diff.c	FUNCTION_36
0x4002de6	              0x5b	                                 pop rbx	      2132	diff.c	FUNCTION_36
0x4002de7	              0x5d	                                 pop rbp	      2132	diff.c	FUNCTION_36
0x4002de8	            0xf3c3	                                     ret	      2132	diff.c	FUNCTION_36
diff_find_change	FOR,2:WHILE,4:IF,14:SWITCH,0:ELSE,2:functions,0:CALL,20:DO,0	262
0x400291c	            0x4157	                                push r15	      1964	diff.c	FUNCTION_35
0x400291e	            0x4156	                                push r14	      1964	diff.c	FUNCTION_35
0x4002920	            0x4155	                                push r13	      1964	diff.c	FUNCTION_35
0x4002922	            0x4154	                                push r12	      1964	diff.c	FUNCTION_35
0x4002924	              0x55	                                push rbp	      1964	diff.c	FUNCTION_35
0x4002925	              0x53	                                push rbx	      1964	diff.c	FUNCTION_35
0x4002926	        0x4883ec48	                           sub rsp, 0x48	      1964	diff.c	FUNCTION_35
0x400292a	          0x4889fb	                            mov rbx, rdi	      1964	diff.c	FUNCTION_35
0x400292d	          0x4889f5	                            mov rbp, rsi	      1964	diff.c	FUNCTION_35
0x4002930	      0x4889542408	                mov qword [rsp + 8], rdx	      1964	diff.c	FUNCTION_35
0x4002935	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1964	diff.c	FUNCTION_35
0x400293a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1964	diff.c	FUNCTION_35
0x4002943	      0x4889442438	             mov qword [rsp + 0x38], rax	      1964	diff.c	FUNCTION_35
0x4002948	            0x31c0	                            xor eax, eax	      1964	diff.c	FUNCTION_35
0x400294a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1978	diff.c	FUNCTION_35	CALL_2
0x400294e	      0xba00000000	                              mov edx, 0	      1978	diff.c	FUNCTION_35	CALL_2
0x4002953	      0xe800000000	                          call 0x4002958	      1978	diff.c	FUNCTION_35	CALL_2
0x4002958	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x400295b	      0xe800000000	                          call 0x4002960	      1978	diff.c	FUNCTION_35	CALL_2
0x4002960	          0x4885c0	                           test rax, rax	      1979	diff.c	FUNCTION_35	IF_1
0x4002963	     0xf84ff020000	                            je 0x4002c68	      1979	diff.c	FUNCTION_35	IF_1
0x4002969	          0x4989c7	                            mov r15, rax	      1979	diff.c	FUNCTION_35	IF_1
0x400296c	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1982	diff.c	FUNCTION_35	CALL_3
0x4002970	      0xe8cbd6ffff	                   call sym.diff_buf_idx	      1982	diff.c	FUNCTION_35	CALL_3
0x4002975	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1982	diff.c	FUNCTION_35	CALL_3
0x4002979	          0x83f808	                              cmp eax, 8	      1983	diff.c	FUNCTION_35	IF_2
0x400297c	            0x7512	                           jne 0x4002990	      1983	diff.c	FUNCTION_35	IF_2
0x400297e	          0x4c89ff	                            mov rdi, r15	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4002981	      0xe800000000	                          call 0x4002986	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4002986	      0xb800000000	                              mov eax, 0	      1986	diff.c	FUNCTION_35	IF_2
0x400298b	      0xe9dd020000	                           jmp 0x4002c6d	      1986	diff.c	FUNCTION_35	IF_2
0x4002990	    0x488b3d000000	            mov rdi, qword [0x04002997] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4002997	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	      1990	diff.c	FUNCTION_35	FOR_1
0x400299b	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x400299e	            0x7438	                            je 0x40029d8	      1990	diff.c	FUNCTION_35	FOR_1
0x40029a0	      0x486354241c	         movsxd rdx, dword [rsp + 0x1c] 	      1990	diff.c	FUNCTION_35	FOR_1
0x40029a5	        0x48c1e203	                              shl rdx, 3	      1990	diff.c	FUNCTION_35	FOR_1
0x40029a9	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029ae	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029b3	          0x4839c5	                            cmp rbp, rax	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029b6	            0x7f18	                            jg 0x40029d0	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029b8	      0xe9c2020000	                           jmp 0x4002c7f	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029bd	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029c2	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029c7	          0x4839c5	                            cmp rbp, rax	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029ca	     0xf8eaf020000	                           jle 0x4002c7f	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x40029d0	          0x488b1b	                    mov rbx, qword [rbx]	      1990	diff.c	FUNCTION_35	FOR_1
0x40029d3	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x40029d6	            0x75e5	                           jne 0x40029bd	      1990	diff.c	FUNCTION_35	FOR_1
0x40029d8	          0x4c89ff	                            mov rdi, r15	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x40029db	      0xe800000000	                          call 0x40029e0	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x40029e0	      0xb800000000	                              mov eax, 0	      1996	diff.c	FUNCTION_35	IF_4
0x40029e5	      0xe983020000	                           jmp 0x4002c6d	      1996	diff.c	FUNCTION_35	IF_4
0x40029ea	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      1999	diff.c	FUNCTION_35
0x40029ef	            0x89e9	                            mov ecx, ebp	      1999	diff.c	FUNCTION_35
0x40029f1	        0x2b4cc308	        sub ecx, dword [rbx + rax*8 + 8]	      1999	diff.c	FUNCTION_35
0x40029f5	            0x89c8	                            mov eax, ecx	      1999	diff.c	FUNCTION_35
0x40029f7	        0x488d4b48	                   lea rcx, [rbx + 0x48]	      1999	diff.c	FUNCTION_35
0x40029fb	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1999	diff.c	FUNCTION_35
0x4002a00	      0xbd01000000	                              mov ebp, 1	      1973	diff.c	FUNCTION_35
0x4002a05	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2001	diff.c	FUNCTION_35	FOR_2
0x4002a0d	            0x4898	                                    cdqe	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a0f	      0x4889442420	             mov qword [rsp + 0x20], rax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a14	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a18	            0x89c8	                            mov eax, ecx	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a1a	            0x4898	                                    cdqe	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a1c	    0x488b15000000	            mov rdx, qword [0x04002a23] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a23	      0x488b7cc260	    mov rdi, qword [rdx + rax*8 + 0x60] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a28	        0x394c241c	            cmp dword [rsp + 0x1c], ecx 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a2c	     0xf8412020000	                            je 0x4002c44	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a32	          0x4885ff	                           test rdi, rdi	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a35	     0xf8409020000	                            je 0x4002c44	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a3b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a40	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a45	          0x483b08	                    cmp rcx, qword [rax]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a48	     0xf8df6010000	                           jge 0x4002c44	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002a4e	          0x4889ce	                            mov rsi, rcx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002a51	        0x480370c0	             add rsi, qword [rax - 0x40]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002a55	      0xba00000000	                              mov edx, 0	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002a5a	      0xe800000000	                          call 0x4002a5f	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002a5f	          0x4989c6	                            mov r14, rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002a62	    0x41bc00000000	                             mov r12d, 0	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a68	      0xbd00000000	                              mov ebp, 0	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002a6d	            0xeb61	                           jmp 0x4002ad0	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002a6f	    0xf60500000000	               test byte [0x04002a76], 4	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4002a76	            0x7438	                            je 0x4002ab0	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4002a78	            0x3c20	                            cmp al, 0x20	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002a7a	            0x7404	                            je 0x4002a80	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002a7c	            0x3c09	                               cmp al, 9	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002a7e	            0x7530	                           jne 0x4002ab0	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002a80	          0x4d63ec	                        movsxd r13, r12d	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a83	          0x4d01f5	                            add r13, r14	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a86	      0x410fb64500	                   movzx eax, byte [r13]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a8b	            0x3c20	                            cmp al, 0x20	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a8d	            0x7404	                            je 0x4002a93	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a8f	            0x3c09	                               cmp al, 9	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a91	            0x751d	                           jne 0x4002ab0	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002a93	          0x4889df	                            mov rdi, rbx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002a96	      0xe800000000	                          call 0x4002a9b	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002a9b	            0x89c5	                            mov ebp, eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002a9d	          0x4429fd	                           sub ebp, r15d	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002aa0	          0x4c89ef	                            mov rdi, r13	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002aa3	      0xe800000000	                          call 0x4002aa8	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002aa8	          0x4189c4	                           mov r12d, eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002aab	          0x4529f4	                          sub r12d, r14d	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002aae	            0xeb20	                           jmp 0x4002ad0	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002ab0	          0x4963f4	                        movsxd rsi, r12d	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002ab3	          0x4c01f6	                            add rsi, r14	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002ab6	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002abb	          0x4889df	                            mov rdi, rbx	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002abe	      0xe8e5d5ffff	                call sym.diff_equal_char	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002ac3	            0x85c0	                           test eax, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002ac5	            0x7416	                            je 0x4002add	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002ac7	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002acb	             0x1c5	                            add ebp, eax	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002acd	          0x4101c4	                           add r12d, eax	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002ad0	          0x4863dd	                         movsxd rbx, ebp	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002ad3	          0x4c01fb	                            add rbx, r15	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002ad6	           0xfb603	                   movzx eax, byte [rbx]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002ad9	            0x84c0	                             test al, al	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002adb	            0x7592	                           jne 0x4002a6f	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002add	    0x833d00000000	               cmp dword [0x04002ae4], 0	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002ae4	            0x7420	                            je 0x4002b06	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002ae6	          0x4889de	                            mov rsi, rbx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002ae9	          0x4c89ff	                            mov rdi, r15	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002aec	    0xff1500000000	                 call qword [0x04002af2]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002af2	            0x29c5	                            sub ebp, eax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002af4	          0x4963f4	                        movsxd rsi, r12d	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002af7	          0x4c01f6	                            add rsi, r14	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002afa	          0x4c89f7	                            mov rdi, r14	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002afd	    0xff1500000000	                 call qword [0x04002b03]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002b03	          0x4129c4	                           sub r12d, eax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002b06	      0x488b442408	                mov rax, qword [rsp + 8]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002b0b	            0x3b28	                    cmp ebp, dword [rax]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002b0d	            0x7d02	                           jge 0x4002b11	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002b0f	            0x8928	                    mov dword [rax], ebp	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002b11	          0x4863ed	                         movsxd rbp, ebp	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b14	      0x41803c2f00	                 cmp byte [r15 + rbp], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b19	            0x7513	                           jne 0x4002b2e	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b1b	          0x4963c4	                        movsxd rax, r12d	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b1e	      0xbd00000000	                              mov ebp, 0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002b23	      0x41803c0600	                 cmp byte [r14 + rax], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b28	     0xf8416010000	                            je 0x4002c44	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002b2e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b35	          0x4c89ff	                            mov rdi, r15	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b38	      0xb800000000	                              mov eax, 0	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b3d	            0xf2ae	              repne scasb al, byte [rdi]	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b3f	          0x48f7d1	                                 not rcx	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b42	          0x8d59ff	                      lea ebx, [rcx - 1]	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002b45	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002b4c	          0x4c89f7	                            mov rdi, r14	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002b4f	            0xf2ae	              repne scasb al, byte [rdi]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002b51	          0x48f7d1	                                 not rcx	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002b54	          0x8d69ff	                      lea ebp, [rcx - 1]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002b57	      0xe9b4000000	                           jmp 0x4002c10	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002b5c	    0xf60500000000	               test byte [0x04002b63], 4	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4002b63	            0x745a	                            je 0x4002bbf	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4002b65	          0x4863c3	                         movsxd rax, ebx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b68	      0x410fb60407	             movzx eax, byte [r15 + rax]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b6d	            0x3c20	                            cmp al, 0x20	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b6f	            0x7404	                            je 0x4002b75	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b71	            0x3c09	                               cmp al, 9	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b73	            0x754a	                           jne 0x4002bbf	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4002b75	          0x4863c5	                         movsxd rax, ebp	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b78	      0x410fb60406	             movzx eax, byte [r14 + rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b7d	            0x3c20	                            cmp al, 0x20	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b7f	            0x7404	                            je 0x4002b85	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b81	            0x3c09	                               cmp al, 9	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b83	            0x753a	                           jne 0x4002bbf	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x4002b85	          0x83eb01	                              sub ebx, 1	      2057	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4002b88	            0x39da	                            cmp edx, ebx	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4002b8a	     0xf8f04010000	                            jg 0x4002c94	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x4002b90	          0x4863c3	                         movsxd rax, ebx	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002b93	      0x410fb60407	             movzx eax, byte [r15 + rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002b98	            0x3c20	                            cmp al, 0x20	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002b9a	            0x74e9	                            je 0x4002b85	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002b9c	            0x3c09	                               cmp al, 9	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002b9e	            0x74e5	                            je 0x4002b85	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002ba0	      0xe9ef000000	                           jmp 0x4002c94	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4002ba5	          0x83ed01	                              sub ebp, 1	      2060	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002ba8	          0x4139ec	                           cmp r12d, ebp	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002bab	            0x7f63	                            jg 0x4002c10	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002bad	          0x4863c5	                         movsxd rax, ebp	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bb0	      0x410fb60406	             movzx eax, byte [r14 + rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bb5	            0x3c20	                            cmp al, 0x20	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bb7	            0x74ec	                            je 0x4002ba5	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bb9	            0x3c09	                               cmp al, 9	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bbb	            0x74e8	                            je 0x4002ba5	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bbd	            0xeb51	                           jmp 0x4002c10	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4002bbf	          0x4c63eb	                         movsxd r13, ebx	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bc2	          0x4d01fd	                            add r13, r15	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bc5	          0x4863f5	                         movsxd rsi, ebp	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bc8	        0x498d0436	                    lea rax, [r14 + rsi]	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bcc	        0x48890424	                    mov qword [rsp], rax	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bd0	          0x4c89ee	                            mov rsi, r13	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bd3	          0x4c89ff	                            mov rdi, r15	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bd6	    0xff1500000000	                 call qword [0x04002bdc]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bdc	            0x4898	                                    cdqe	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bde	          0x4929c5	                            sub r13, rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002be1	        0x488b3424	                    mov rsi, qword [rsp]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002be5	          0x4c89f7	                            mov rdi, r14	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002be8	    0xff1500000000	                 call qword [0x04002bee]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002bee	            0x4898	                                    cdqe	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002bf0	        0x488b3424	                    mov rsi, qword [rsp]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002bf4	          0x4829c6	                            sub rsi, rax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002bf7	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002bfc	          0x4c89ef	                            mov rdi, r13	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002bff	      0xe8a4d4ffff	                call sym.diff_equal_char	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002c04	            0x85c0	                           test eax, eax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002c06	            0x742c	                            je 0x4002c34	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4002c08	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002c0c	            0x29c3	                            sub ebx, eax	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002c0e	            0x29c5	                            sub ebp, eax	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4002c10	      0x488b442408	                mov rax, qword [rsp + 8]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c15	            0x8b10	                    mov edx, dword [rax]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c17	            0x39d3	                            cmp ebx, edx	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c19	            0x7c19	                            jl 0x4002c34	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c1b	          0x4139ec	                           cmp r12d, ebp	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c1e	           0xf9ec1	                                setle cl	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c21	            0x89d8	                            mov eax, ebx	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c23	            0xf7d0	                                 not eax	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c25	          0xc1e81f	                           shr eax, 0x1f	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c28	            0x84c1	                             test cl, al	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c2a	            0x7408	                            je 0x4002c34	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c2c	            0x85ed	                           test ebp, ebp	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c2e	     0xf8928ffffff	                           jns 0x4002b5c	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4002c34	      0xbd00000000	                              mov ebp, 0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002c39	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4002c3e	            0x3b18	                    cmp ebx, dword [rax]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4002c40	            0x7e02	                           jle 0x4002c44	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4002c42	            0x8918	                    mov dword [rax], ebx	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4002c44	      0x8344241801	               add dword [rsp + 0x18], 1	      2001	diff.c	FUNCTION_35	FOR_2
0x4002c49	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2001	diff.c	FUNCTION_35	FOR_2
0x4002c4d	    0x488344241008	               add qword [rsp + 0x10], 8	      2001	diff.c	FUNCTION_35	FOR_2
0x4002c53	          0x83f808	                              cmp eax, 8	      2001	diff.c	FUNCTION_35	FOR_2
0x4002c56	     0xf85b8fdffff	                           jne 0x4002a14	      2001	diff.c	FUNCTION_35	FOR_2
0x4002c5c	          0x4c89ff	                            mov rdi, r15	      2081	diff.c	FUNCTION_35	CALL_20
0x4002c5f	      0xe800000000	                          call 0x4002c64	      2081	diff.c	FUNCTION_35	CALL_20
0x4002c64	            0x89e8	                            mov eax, ebp	      2082	diff.c	FUNCTION_35
0x4002c66	            0xeb05	                           jmp 0x4002c6d	      2082	diff.c	FUNCTION_35
0x4002c68	      0xb800000000	                              mov eax, 0	      1980	diff.c	FUNCTION_35	IF_1
0x4002c6d	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2083	diff.c	FUNCTION_35
0x4002c72	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2083	diff.c	FUNCTION_35
0x4002c7b	            0x742a	                            je 0x4002ca7	      2083	diff.c	FUNCTION_35
0x4002c7d	            0xeb23	                           jmp 0x4002ca2	      2083	diff.c	FUNCTION_35
0x4002c7f	          0x4889de	                            mov rsi, rbx	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4002c82	      0xe8e9d3ffff	              call sym.diff_check_sanity	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4002c87	            0x85c0	                           test eax, eax	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4002c89	     0xf855bfdffff	                           jne 0x40029ea	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4002c8f	      0xe944fdffff	                           jmp 0x40029d8	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x4002c94	          0x4139ec	                           cmp r12d, ebp	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002c97	     0xf8e08ffffff	                           jle 0x4002ba5	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002c9d	      0xe96effffff	                           jmp 0x4002c10	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4002ca2	      0xe800000000	                          call 0x4002ca7	      2083	diff.c	FUNCTION_35
0x4002ca7	        0x4883c448	                           add rsp, 0x48	      2083	diff.c	FUNCTION_35
0x4002cab	              0x5b	                                 pop rbx	      2083	diff.c	FUNCTION_35
0x4002cac	              0x5d	                                 pop rbp	      2083	diff.c	FUNCTION_35
0x4002cad	            0x415c	                                 pop r12	      2083	diff.c	FUNCTION_35
0x4002caf	            0x415d	                                 pop r13	      2083	diff.c	FUNCTION_35
0x4002cb1	            0x415e	                                 pop r14	      2083	diff.c	FUNCTION_35
0x4002cb3	            0x415f	                                 pop r15	      2083	diff.c	FUNCTION_35
0x4002cb5	              0xc3	                                     ret	      2083	diff.c	FUNCTION_35
diff_mark_adjust	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,1:CALL,0:DO,0	447
0x40011e3	            0x4157	                                push r15	       220	diff.c	FUNCTION_8
0x40011e5	            0x4156	                                push r14	       220	diff.c	FUNCTION_8
0x40011e7	            0x4155	                                push r13	       220	diff.c	FUNCTION_8
0x40011e9	            0x4154	                                push r12	       220	diff.c	FUNCTION_8
0x40011eb	              0x55	                                push rbp	       220	diff.c	FUNCTION_8
0x40011ec	              0x53	                                push rbx	       220	diff.c	FUNCTION_8
0x40011ed	    0x4881ec880000	                           sub rsp, 0x88	       220	diff.c	FUNCTION_8
0x40011f4	    0x4c8b35000000	            mov r14, qword [0x040011fb] 	       225	diff.c	FUNCTION_8
0x40011fb	          0x4d85f6	                           test r14, r14	       225	diff.c	FUNCTION_8
0x40011fe	     0xf8480060000	                            je 0x4001884	       225	diff.c	FUNCTION_8
0x4001204	      0x48894c2450	             mov qword [rsp + 0x50], rcx	       225	diff.c	FUNCTION_8
0x4001209	      0x4889542478	             mov qword [rsp + 0x78], rdx	       225	diff.c	FUNCTION_8
0x400120e	      0x4889742408	                mov qword [rsp + 8], rsi	       225	diff.c	FUNCTION_8
0x4001213	          0x4889f8	                            mov rax, rdi	       225	diff.c	FUNCTION_8
0x4001216	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       225	diff.c	FUNCTION_8
0x400121b	        0x4883e801	                              sub rax, 1	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400121f	      0x4889442420	             mov qword [rsp + 0x20], rax	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4001224	          0x4d89f7	                            mov r15, r14	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4001227	    0x488b15000000	            mov rdx, qword [0x0400122e] 	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x400122e	        0x493b5760	            cmp rdx, qword [r15 + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001232	            0x742d	                            je 0x4001261	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001234	        0x498d4768	                   lea rax, [r15 + 0x68]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001238	      0xb901000000	                              mov ecx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x400123d	          0x483b10	                    cmp rdx, qword [rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001240	            0x7411	                            je 0x4001253	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001242	          0x83c101	                              add ecx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x4001245	        0x4883c008	                              add rax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x4001249	          0x83f908	                              cmp ecx, 8	       183	diff.c	FUNCTION_6	FOR_1
0x400124c	            0x75ef	                           jne 0x400123d	       183	diff.c	FUNCTION_6	FOR_1
0x400124e	      0xe9d8050000	                           jmp 0x400182b	       183	diff.c	FUNCTION_6	FOR_1
0x4001253	        0x894c244c	             mov dword [rsp + 0x4c], ecx	       183	diff.c	FUNCTION_6	FOR_1
0x4001257	          0x83f908	                              cmp ecx, 8	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x400125a	            0x750d	                           jne 0x4001269	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x400125c	      0xe9ca050000	                           jmp 0x400182b	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x4001261	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       183	diff.c	FUNCTION_6	FOR_1
0x4001269	    0x48817c2408ff	        cmp qword [rsp + 8], 0x7fffffff 	       259	diff.c	FUNCTION_9	IF_1
0x4001272	            0x7512	                           jne 0x4001286	       259	diff.c	FUNCTION_9	IF_1
0x4001274	        0x8b442478	            mov eax, dword [rsp + 0x78] 	       262	diff.c	FUNCTION_9	IF_1
0x4001278	        0x8944243c	             mov dword [rsp + 0x3c], eax	       262	diff.c	FUNCTION_9	IF_1
0x400127c	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       263	diff.c	FUNCTION_9	IF_1
0x4001284	            0xeb2a	                           jmp 0x40012b0	       263	diff.c	FUNCTION_9	IF_1
0x4001286	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400128b	          0x4885c0	                           test rax, rax	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400128e	            0x7e0e	                           jle 0x400129e	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x4001290	        0x8944243c	             mov dword [rsp + 0x3c], eax	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x4001294	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400129c	            0xeb12	                           jmp 0x40012b0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x400129e	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       275	diff.c	FUNCTION_9	ELSE_2
0x40012a2	            0xf7d8	                                 neg eax	       275	diff.c	FUNCTION_9	ELSE_2
0x40012a4	        0x8944241c	             mov dword [rsp + 0x1c], eax	       275	diff.c	FUNCTION_9	ELSE_2
0x40012a8	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       274	diff.c	FUNCTION_9	ELSE_2
0x40012b0	        0x4d8b7758	            mov r14, qword [r15 + 0x58] 	       279	diff.c	FUNCTION_9
0x40012b4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       256	diff.c	FUNCTION_9
0x40012b9	      0x4889442458	             mov qword [rsp + 0x58], rax	       256	diff.c	FUNCTION_9
0x40012be	    0x41bc00000000	                             mov r12d, 0	       278	diff.c	FUNCTION_9
0x40012c4	      0x486344244c	         movsxd rax, dword [rsp + 0x4c] 	       278	diff.c	FUNCTION_9
0x40012c9	      0x4889442428	             mov qword [rsp + 0x28], rax	       278	diff.c	FUNCTION_9
0x40012ce	    0x4c8d2cc50000	                        lea r13, [rax*8]	       278	diff.c	FUNCTION_9
0x40012d6	      0x486344243c	         movsxd rax, dword [rsp + 0x3c] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012db	      0x4889442460	             mov qword [rsp + 0x60], rax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012e0	          0x4d85f6	                           test r14, r14	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012e3	            0x7430	                            je 0x4001315	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012e5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012ea	      0x498b44c608	       mov rax, qword [r14 + rax*8 + 8] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012ef	        0x488d50ff	                      lea rdx, [rax - 1]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012f3	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012f8	          0x4839d1	                            cmp rcx, rdx	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012fb	            0x7c18	                            jl 0x4001315	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012fd	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001304	     0xf85a2000000	                           jne 0x40013ac	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x400130a	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x400130f	     0xf8d97000000	                           jge 0x40013ac	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001315	          0x4d85e4	                           test r12, r12	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001318	            0x7411	                            je 0x400132b	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x400131a	      0x4b8b442c08	         mov rax, qword [r12 + r13 + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400131f	      0x4b03442c48	       add rax, qword [r12 + r13 + 0x48]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001324	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001329	            0x7e78	                           jle 0x40013a3	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400132b	    0x833d00000000	               cmp dword [0x04001332], 0	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001332	            0x756f	                           jne 0x40013a3	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001334	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x4001339	      0xe800000000	                          call 0x400133e	       497	diff.c	FUNCTION_10	CALL_1
0x400133e	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x4001341	     0xf84e4040000	                            je 0x400182b	       498	diff.c	FUNCTION_10	IF_1
0x4001347	          0x4c8930	                    mov qword [rax], r14	       500	diff.c	FUNCTION_10	IF_1
0x400134a	          0x4d85e4	                           test r12, r12	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400134d	            0x7509	                           jne 0x4001358	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400134f	        0x49894758	             mov qword [r15 + 0x58], rax	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4001353	      0xe9e1040000	                           jmp 0x4001839	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4001358	        0x49890424	                    mov qword [r12], rax	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x400135c	      0xe9d8040000	                           jmp 0x4001839	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4001361	    0x49837cd76000	       cmp qword [r15 + rdx*8 + 0x60], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001367	            0x7430	                            je 0x4001399	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001369	          0x4139d0	                            cmp r8d, edx	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400136c	            0x742b	                            je 0x4001399	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400136e	          0x4d85e4	                           test r12, r12	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4001371	            0x7507	                           jne 0x400137a	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4001373	      0x4c894cd008	         mov qword [rax + rdx*8 + 8], r9	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4001378	            0xeb1a	                           jmp 0x4001394	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400137a	      0x498b4cd448	    mov rcx, qword [r12 + rdx*8 + 0x48] 	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x400137f	      0x49034cd408	        add rcx, qword [r12 + rdx*8 + 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4001384	          0x4c01c9	                             add rcx, r9	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4001387	        0x482b4e48	             sub rcx, qword [rsi + 0x48]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x400138b	        0x482b4e08	                sub rcx, qword [rsi + 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x400138f	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4001394	      0x48897cd048	     mov qword [rax + rdx*8 + 0x48], rdi	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001399	        0x4883c201	                              add rdx, 1	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400139d	        0x4883fa08	                              cmp rdx, 8	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x40013a1	            0x75be	                           jne 0x4001361	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x40013a3	          0x4d85f6	                           test r14, r14	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40013a6	     0xf84fa030000	                            je 0x40017a6	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40013ac	        0x4b8d042e	                    lea rax, [r14 + r13]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40013b0	          0x4889c3	                            mov rbx, rax	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40013b3	        0x48890424	                    mov qword [rsp], rax	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40013b7	        0x488b4008	                mov rax, qword [rax + 8]	       326	diff.c	FUNCTION_9	FOR_1
0x40013bb	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	       326	diff.c	FUNCTION_9	FOR_1
0x40013bf	      0x488d4c10ff	                lea rcx, [rax + rdx - 1]	       326	diff.c	FUNCTION_9	FOR_1
0x40013c4	      0x483b4c2420	            cmp rcx, qword [rsp + 0x20] 	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x40013c9	     0xf8c7a030000	                            jl 0x4001749	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x40013cf	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013d3	         0x37c241c	             add edi, dword [rsp + 0x1c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013d7	        0x400f95c6	                               setne sil	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013db	        0x400fb6f6	                          movzx esi, sil	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013df	          0x4889c7	                            mov rdi, rax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013e2	          0x4829f7	                            sub rdi, rsi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013e5	      0x48397c2408	                cmp qword [rsp + 8], rdi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013ea	            0x7d1a	                           jge 0x4001406	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013ec	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013f1	          0x4885c9	                           test rcx, rcx	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013f4	     0xf84ac030000	                            je 0x40017a6	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013fa	          0x4801c8	                            add rax, rcx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013fd	        0x48894308	                mov qword [rbx + 8], rax	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4001401	      0xe943030000	                           jmp 0x4001749	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4001406	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x400140a	            0x85db	                           test ebx, ebx	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x400140c	     0xf8e6b010000	                           jle 0x400157d	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x4001412	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001417	     0xf8f8f000000	                            jg 0x40014ac	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400141d	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001422	            0x89c6	                            mov esi, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001424	          0x4429d6	                           sub esi, r10d	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001427	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400142c	          0x4939cb	                            cmp r11, rcx	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400142f	            0x7c48	                            jl 0x4001479	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4001431	          0x498b06	                    mov rax, qword [r14]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001434	          0x4885c0	                           test rax, rax	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001437	            0x7427	                            je 0x4001460	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001439	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400143e	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001443	        0x488d48ff	                      lea rcx, [rax - 1]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001447	          0x4939cb	                            cmp r11, rcx	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400144a	            0x7c14	                            jl 0x4001460	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400144c	            0x89c1	                            mov ecx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400144e	          0x4429d1	                           sub ecx, r10d	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001451	            0x29cb	                            sub ebx, ecx	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001453	        0x895c241c	             mov dword [rsp + 0x1c], ebx	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001457	            0x29d1	                            sub ecx, edx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001459	      0x4889442458	             mov qword [rsp + 0x58], rax	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400145e	            0xeb06	                           jmp 0x4001466	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001460	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4001464	            0x29d1	                            sub ecx, edx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4001466	        0x488b0424	                    mov rax, qword [rsp]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x400146a	    0x48c740480000	               mov qword [rax + 0x48], 0	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4001472	      0xbf00000000	                              mov edi, 0	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x4001477	            0xeb21	                           jmp 0x400149a	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x4001479	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400147e	          0x4829c1	                            sub rcx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4001481	          0x4889c8	                            mov rax, rcx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4001484	        0x4883c001	                              add rax, 1	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4001488	          0x4829c2	                            sub rdx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400148b	        0x488b0424	                    mov rax, qword [rsp]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400148f	        0x48895048	             mov qword [rax + 0x48], rdx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4001493	            0x89f1	                            mov ecx, esi	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x4001495	      0xbf01000000	                              mov edi, 1	       371	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x400149a	        0x488b0424	                    mov rax, qword [rsp]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400149e	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x40014a3	        0x48895808	                mov qword [rax + 8], rbx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x40014a7	      0xe996000000	                           jmp 0x4001542	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x40014ac	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014b1	          0x4839cb	                            cmp rbx, rcx	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014b4	            0x7e6d	                           jle 0x4001523	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014b6	          0x4889c8	                            mov rax, rcx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014b9	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014be	          0x4829f8	                            sub rax, rdi	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014c1	        0x4883c001	                              add rax, 1	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014c5	          0x4829c2	                            sub rdx, rax	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014c8	        0x488b0424	                    mov rax, qword [rsp]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014cc	        0x48895048	             mov qword [rax + 0x48], rdx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40014d0	          0x498b06	                    mov rax, qword [r14]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014d3	          0x4885c0	                           test rax, rax	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014d6	            0x7437	                            je 0x400150f	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014d8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014dd	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014e2	        0x488d42ff	                      lea rax, [rdx - 1]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014e6	          0x4839c3	                            cmp rbx, rax	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014e9	            0x7c24	                            jl 0x400150f	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014eb	          0x8d42ff	                      lea eax, [rdx - 1]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014ee	            0x29c8	                            sub eax, ecx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014f0	            0x89c1	                            mov ecx, eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014f2	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014f6	             0x1f8	                            add eax, edi	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014f8	            0x29d0	                            sub eax, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014fa	        0x8944241c	             mov dword [rsp + 0x1c], eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40014fe	      0x4889542458	             mov qword [rsp + 0x58], rdx	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001503	      0xbf01000000	                              mov edi, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001508	      0xbe00000000	                              mov esi, 0	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x400150d	            0xeb33	                           jmp 0x4001542	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x400150f	        0x8b442408	                mov eax, dword [rsp + 8]	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4001513	            0x29c8	                            sub eax, ecx	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4001515	            0x89c1	                            mov ecx, eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4001517	      0xbf01000000	                              mov edi, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400151c	      0xbe00000000	                              mov esi, 0	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4001521	            0xeb1f	                           jmp 0x4001542	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4001523	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001528	          0x4829c2	                            sub rdx, rax	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400152b	        0x488b0424	                    mov rax, qword [rsp]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400152f	        0x48895048	             mov qword [rax + 0x48], rdx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001533	      0xbf00000000	                              mov edi, 0	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x4001538	      0xbe00000000	                              mov esi, 0	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x400153d	      0xb900000000	                              mov ecx, 0	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001542	        0x498d4608	                      lea rax, [r14 + 8]	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001546	      0xba00000000	                              mov edx, 0	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400154b	          0x4863f6	                         movsxd rsi, esi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400154e	          0x4863c9	                         movsxd rcx, ecx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001551	      0x448b44244c	            mov r8d, dword [rsp + 0x4c] 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001556	    0x49837cd76000	       cmp qword [r15 + rdx*8 + 0x60], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400155c	            0x740c	                            je 0x400156a	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400155e	          0x4139d0	                            cmp r8d, edx	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001561	            0x7407	                            je 0x400156a	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001563	          0x482930	                    sub qword [rax], rsi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001566	        0x48014840	            add qword [rax + 0x40], rcx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400156a	        0x4883c201	                              add rdx, 1	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400156e	        0x4883c008	                              add rax, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001572	        0x4883fa08	                              cmp rdx, 8	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4001576	            0x75de	                           jne 0x4001556	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x4001578	      0xe9ed020000	                           jmp 0x400186a	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x400157d	      0x4839442410	            cmp qword [rsp + 0x10], rax 	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4001582	            0x7c0f	                            jl 0x4001593	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4001584	      0x4803542460	             add rdx, qword [rsp + 0x60]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4001589	        0x488b0424	                    mov rax, qword [rsp]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x400158d	        0x48895048	             mov qword [rax + 0x48], rdx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4001591	            0xeb12	                           jmp 0x40015a5	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4001593	      0x4803442460	             add rax, qword [rsp + 0x60]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4001598	        0x488b0c24	                    mov rcx, qword [rsp]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x400159c	        0x48894108	                mov qword [rcx + 8], rax	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40015a0	      0xe9a4010000	                           jmp 0x4001749	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40015a5	      0x49837f6000	               cmp qword [r15 + 0x60], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015aa	            0x752e	                           jne 0x40015da	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015ac	        0x498d4768	                   lea rax, [r15 + 0x68]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015b0	      0xba01000000	                              mov edx, 1	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015b5	        0x48833800	                      cmp qword [rax], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015b9	            0x7511	                           jne 0x40015cc	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015bb	          0x83c201	                              add edx, 1	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015be	        0x4883c008	                              add rax, 8	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015c2	          0x83fa08	                              cmp edx, 8	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015c5	            0x75ee	                           jne 0x40015b5	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015c7	      0xe97d010000	                           jmp 0x4001749	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015cc	        0x89542448	             mov dword [rsp + 0x48], edx	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40015d0	          0x83fa08	                              cmp edx, 8	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0x40015d3	            0x750d	                           jne 0x40015e2	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0x40015d5	      0xe96f010000	                           jmp 0x4001749	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0x40015da	    0xc74424480000	               mov dword [rsp + 0x48], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40015e2	          0x4c89f6	                            mov rsi, r14	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015e5	          0x4c89ff	                            mov rdi, r15	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015e8	      0xe883eaffff	              call sym.diff_check_sanity	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015ed	            0x85c0	                           test eax, eax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015ef	     0xf8454010000	                            je 0x4001749	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015f5	      0xb901000000	                              mov ecx, 1	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015fa	      0xbd00000000	                              mov ebp, 0	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x40015ff	    0xc74424380000	               mov dword [rsp + 0x38], 0	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4001607	      0x4863442448	         movsxd rax, dword [rsp + 0x48] 	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x400160c	      0x4889442440	             mov qword [rsp + 0x40], rax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4001611	        0x498d04c6	                  lea rax, [r14 + rax*8]	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4001615	      0x4889442430	             mov qword [rsp + 0x30], rax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x400161a	      0x4c89642468	             mov qword [rsp + 0x68], r12	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x400161f	          0x4189cc	                           mov r12d, ecx	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4001622	      0x4c896c2470	             mov qword [rsp + 0x70], r13	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x4001627	      0xe9ef000000	                           jmp 0x400171b	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0x400162c	          0x83e801	                              sub eax, 1	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x400162f	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4001633	       0xf45442438	          cmovne eax, dword [rsp + 0x38]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4001638	        0x89442438	             mov dword [rsp + 0x38], eax	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x400163c	          0x4863f0	                         movsxd rsi, eax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400163f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001644	        0x48037008	                add rsi, qword [rax + 8]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001648	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400164d	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001652	      0xba00000000	                              mov edx, 0	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001657	      0xe800000000	                          call 0x400165c	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400165c	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400165f	      0xe800000000	                          call 0x4001664	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001664	          0x4989c5	                            mov r13, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001667	          0x4885c0	                           test rax, rax	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x400166a	     0xf84cf000000	                            je 0x400173f	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4001670	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4001674	          0x8d5801	                      lea ebx, [rax + 1]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4001677	          0x83fb07	                              cmp ebx, 7	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400167a	            0x7f59	                            jg 0x40016d5	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400167c	          0x4863c3	                         movsxd rax, ebx	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x400167f	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4001684	          0x4885ff	                           test rdi, rdi	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4001687	            0x743f	                            je 0x40016c8	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4001689	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x400168d	            0x7508	                           jne 0x4001697	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x400168f	      0x498b6cc648	    mov rbp, qword [r14 + rax*8 + 0x48] 	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4001694	          0x83ed01	                              sub ebp, 1	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4001697	            0x85ed	                           test ebp, ebp	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4001699	            0x783a	                            js 0x40016d5	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x400169b	          0x4863f5	                         movsxd rsi, ebp	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x400169e	          0x4863c3	                         movsxd rax, ebx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40016a1	        0x498d04c6	                  lea rax, [r14 + rax*8]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40016a5	        0x483b7048	            cmp rsi, qword [rax + 0x48] 	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40016a9	            0x7d2a	                           jge 0x40016d5	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40016ab	        0x48037008	                add rsi, qword [rax + 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016af	      0xba00000000	                              mov edx, 0	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016b4	      0xe800000000	                          call 0x40016b9	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016b9	          0x4889c6	                            mov rsi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016bc	          0x4c89ef	                            mov rdi, r13	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016bf	      0xe8cbeaffff	                       call sym.diff_cmp	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016c4	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016c6	            0x750d	                           jne 0x40016d5	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40016c8	          0x83c301	                              add ebx, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40016cb	          0x83fb08	                              cmp ebx, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40016ce	            0x75ac	                           jne 0x400167c	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40016d0	      0xe9a2010000	                           jmp 0x4001877	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40016d5	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x40016d8	      0xe800000000	                          call 0x40016dd	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x40016dd	          0x83fb08	                              cmp ebx, 8	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0x40016e0	            0x754b	                           jne 0x400172d	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0x40016e2	        0x8b442448	            mov eax, dword [rsp + 0x48] 	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40016e6	          0x83f807	                              cmp eax, 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40016e9	            0x7f30	                            jg 0x400171b	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40016eb	          0x4863d0	                         movsxd rdx, eax	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40016ee	    0x49837cd76000	       cmp qword [r15 + rdx*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40016f4	            0x7415	                            je 0x400170b	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40016f6	        0x4183fc01	                             cmp r12d, 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40016fa	            0x7506	                           jne 0x4001702	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40016fc	    0x498344d60801	          add qword [r14 + rdx*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001702	          0x4863d0	                         movsxd rdx, eax	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001705	    0x49836cd64801	       sub qword [r14 + rdx*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400170b	          0x83c001	                              add eax, 1	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x400170e	          0x83f808	                              cmp eax, 8	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4001711	            0x75d8	                           jne 0x40016eb	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4001713	            0xeb06	                           jmp 0x400171b	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4001715	    0x41bcffffffff	                    mov r12d, 0xffffffff	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x400171b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001720	        0x488b4048	            mov rax, qword [rax + 0x48] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001724	          0x4885c0	                           test rax, rax	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001727	     0xf8ffffeffff	                            jg 0x400162c	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x400172d	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001731	            0x75e2	                           jne 0x4001715	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001733	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001738	      0x4c8b6c2470	            mov r13, qword [rsp + 0x70] 	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x400173d	            0xeb0a	                           jmp 0x4001749	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x400173f	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001744	      0x4c8b6c2470	            mov r13, qword [rsp + 0x70] 	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001749	          0x4d85e4	                           test r12, r12	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400174c	            0x744d	                            je 0x400179b	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400174e	      0x4b8b442c08	         mov rax, qword [r12 + r13 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001753	      0x4b03442c48	       add rax, qword [r12 + r13 + 0x48]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001758	        0x488b0c24	                    mov rcx, qword [rsp]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400175c	        0x483b4108	                cmp rax, qword [rcx + 8]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001760	            0x7539	                           jne 0x400179b	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001762	      0xb800000000	                              mov eax, 0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001767	    0x49837c076000	         cmp qword [r15 + rax + 0x60], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400176d	            0x740a	                            je 0x4001779	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400176f	      0x498b540648	      mov rdx, qword [r14 + rax + 0x48] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4001774	      0x4901540448	      add qword [r12 + rax + 0x48], rdx 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4001779	        0x4883c008	                              add rax, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400177d	        0x4883f840	                           cmp rax, 0x40	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4001781	            0x75e4	                           jne 0x4001767	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4001783	          0x498b06	                    mov rax, qword [r14]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001786	        0x49890424	                    mov qword [r12], rax	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x400178a	          0x4c89f7	                            mov rdi, r14	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x400178d	      0xe800000000	                          call 0x4001792	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x4001792	        0x4d8b3424	                    mov r14, qword [r12]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001796	      0xe945fbffff	                           jmp 0x40012e0	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x400179b	          0x4d89f4	                            mov r12, r14	       446	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x400179e	          0x4d8b36	                    mov r14, qword [r14]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x40017a1	      0xe93afbffff	                           jmp 0x40012e0	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x40017a6	        0x498b7f58	            mov rdi, qword [r15 + 0x58] 	       452	diff.c	FUNCTION_9
0x40017aa	      0xbb00000000	                              mov ebx, 0	       453	diff.c	FUNCTION_9	WHILE_1
0x40017af	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x40017b2	            0x754e	                           jne 0x4001802	       453	diff.c	FUNCTION_9	WHILE_1
0x40017b4	            0xeb58	                           jmp 0x400180e	       453	diff.c	FUNCTION_9	WHILE_1
0x40017b6	    0x49837c076000	         cmp qword [r15 + rax + 0x60], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x40017bc	            0x7408	                            je 0x40017c6	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x40017be	    0x48837c074800	         cmp qword [rdi + rax + 0x48], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x40017c4	            0x750e	                           jne 0x40017d4	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x40017c6	          0x83c201	                              add edx, 1	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x40017c9	        0x4883c008	                              add rax, 8	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x40017cd	          0x83fa08	                              cmp edx, 8	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x40017d0	            0x75e4	                           jne 0x40017b6	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x40017d2	            0xeb05	                           jmp 0x40017d9	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x40017d4	          0x83fa08	                              cmp edx, 8	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017d7	            0x751e	                           jne 0x40017f7	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017d9	          0x488b2f	                    mov rbp, qword [rdi]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017dc	      0xe800000000	                          call 0x40017e1	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x40017e1	          0x4885db	                           test rbx, rbx	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x40017e4	            0x7509	                           jne 0x40017ef	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x40017e6	        0x49896f58	             mov qword [r15 + 0x58], rbp	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x40017ea	          0x4889ef	                            mov rdi, rbp	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017ed	            0xeb0e	                           jmp 0x40017fd	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017ef	          0x48892b	                    mov qword [rbx], rbp	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x40017f2	          0x4889ef	                            mov rdi, rbp	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017f5	            0xeb06	                           jmp 0x40017fd	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x40017f7	          0x4889fb	                            mov rbx, rdi	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40017fa	          0x488b3f	                    mov rdi, qword [rdi]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40017fd	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4001800	            0x740c	                            je 0x400180e	       453	diff.c	FUNCTION_9	WHILE_1
0x4001802	      0xb800000000	                              mov eax, 0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001807	      0xba00000000	                              mov edx, 0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400180c	            0xeba8	                           jmp 0x40017b6	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400180e	    0x4c393d000000	            cmp qword [0x04001815], r15 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4001815	            0x7514	                           jne 0x400182b	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4001817	      0xbf01000000	                              mov edi, 1	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x400181c	      0xe8abefffff	                    call sym.diff_redraw	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x4001821	    0xc70500000000	               mov dword [0x0400182b], 1	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x400182b	          0x4d8b3f	                    mov r15, qword [r15]	       225	diff.c	FUNCTION_8
0x400182e	          0x4d85ff	                           test r15, r15	       225	diff.c	FUNCTION_8
0x4001831	     0xf85f0f9ffff	                           jne 0x4001227	       225	diff.c	FUNCTION_8
0x4001837	            0xeb4b	                           jmp 0x4001884	       225	diff.c	FUNCTION_8
0x4001839	        0x4a8d1428	                    lea rdx, [rax + r13]	       225	diff.c	FUNCTION_8
0x400183d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001842	        0x48894a08	                mov qword [rdx + 8], rcx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001846	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400184b	        0x48895a48	             mov qword [rdx + 0x48], rbx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400184f	      0xba00000000	                              mov edx, 0	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001854	      0x48637c241c	         movsxd rdi, dword [rsp + 0x1c] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001859	        0x4b8d342c	                    lea rsi, [r12 + r13]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400185d	      0x448b44244c	            mov r8d, dword [rsp + 0x4c] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001862	          0x4989c9	                             mov r9, rcx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001865	      0xe9f7faffff	                           jmp 0x4001361	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400186a	            0x85ff	                           test edi, edi	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x400186c	     0xf84d7feffff	                            je 0x4001749	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x4001872	      0xe92efdffff	                           jmp 0x40015a5	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x4001877	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x400187a	      0xe800000000	                          call 0x400187f	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x400187f	      0xe95efeffff	                           jmp 0x40016e2	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001884	    0x4881c4880000	                           add rsp, 0x88	       231	diff.c	FUNCTION_8
0x400188b	              0x5b	                                 pop rbx	       231	diff.c	FUNCTION_8
0x400188c	              0x5d	                                 pop rbp	       231	diff.c	FUNCTION_8
0x400188d	            0x415c	                                 pop r12	       231	diff.c	FUNCTION_8
0x400188f	            0x415d	                                 pop r13	       231	diff.c	FUNCTION_8
0x4001891	            0x415e	                                 pop r14	       231	diff.c	FUNCTION_8
0x4001893	            0x415f	                                 pop r15	       231	diff.c	FUNCTION_8
0x4001895	              0xc3	                                     ret	       231	diff.c	FUNCTION_8
ex_diffupdate	FOR,6:WHILE,0:IF,24:SWITCH,0:ELSE,3:functions,0:CALL,34:DO,0	614
0x4001896	            0x4157	                                push r15	       663	diff.c	FUNCTION_15
0x4001898	            0x4156	                                push r14	       663	diff.c	FUNCTION_15
0x400189a	            0x4155	                                push r13	       663	diff.c	FUNCTION_15
0x400189c	            0x4154	                                push r12	       663	diff.c	FUNCTION_15
0x400189e	              0x55	                                push rbp	       663	diff.c	FUNCTION_15
0x400189f	              0x53	                                push rbx	       663	diff.c	FUNCTION_15
0x40018a0	    0x4881ecb80000	                           sub rsp, 0xb8	       663	diff.c	FUNCTION_15
0x40018a7	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       663	diff.c	FUNCTION_15
0x40018ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       663	diff.c	FUNCTION_15
0x40018b5	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       663	diff.c	FUNCTION_15
0x40018bd	            0x31c0	                            xor eax, eax	       663	diff.c	FUNCTION_15
0x40018bf	    0x488b3d000000	            mov rdi, qword [0x040018c6] 	       675	diff.c	FUNCTION_15	CALL_1
0x40018c6	      0xe800000000	                          call 0x40018cb	       675	diff.c	FUNCTION_15	CALL_1
0x40018cb	    0x488b0d000000	            mov rcx, qword [0x040018d2] 	       676	diff.c	FUNCTION_15
0x40018d2	    0xc781a0000000	               mov dword [rcx + 0xa0], 0	       676	diff.c	FUNCTION_15
0x40018dc	      0x4883796000	               cmp qword [rcx + 0x60], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40018e1	            0x753c	                           jne 0x400191f	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40018e3	        0x488d4168	                   lea rax, [rcx + 0x68]	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40018e7	    0x41be01000000	                             mov r14d, 1	       679	diff.c	FUNCTION_15	FOR_1
0x40018ed	        0x48833800	                      cmp qword [rax], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40018f1	            0x7513	                           jne 0x4001906	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40018f3	        0x4183c601	                             add r14d, 1	       679	diff.c	FUNCTION_15	FOR_1
0x40018f7	        0x4883c008	                              add rax, 8	       679	diff.c	FUNCTION_15	FOR_1
0x40018fb	        0x4183fe08	                             cmp r14d, 8	       679	diff.c	FUNCTION_15	FOR_1
0x40018ff	            0x75ec	                           jne 0x40018ed	       679	diff.c	FUNCTION_15	FOR_1
0x4001901	      0xe915090000	                           jmp 0x400221b	       679	diff.c	FUNCTION_15	FOR_1
0x4001906	        0x4183fe08	                             cmp r14d, 8	       682	diff.c	FUNCTION_15	IF_2
0x400190a	     0xf840b090000	                            je 0x400221b	       682	diff.c	FUNCTION_15	IF_2
0x4001910	        0x418d4601	                      lea eax, [r14 + 1]	       686	diff.c	FUNCTION_15	FOR_2
0x4001914	        0x89442414	             mov dword [rsp + 0x14], eax	       686	diff.c	FUNCTION_15	FOR_2
0x4001918	          0x83f807	                              cmp eax, 7	       686	diff.c	FUNCTION_15	FOR_2
0x400191b	            0x7e10	                           jle 0x400192d	       686	diff.c	FUNCTION_15	FOR_2
0x400191d	            0xeb3a	                           jmp 0x4001959	       686	diff.c	FUNCTION_15	FOR_2
0x400191f	    0x41be00000000	                             mov r14d, 0	       679	diff.c	FUNCTION_15	FOR_1
0x4001925	    0xc74424140100	               mov dword [rsp + 0x14], 1	       686	diff.c	FUNCTION_15	FOR_2
0x400192d	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001931	            0x89d8	                            mov eax, ebx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001933	            0x4898	                                    cdqe	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001935	    0x48837cc16000	       cmp qword [rcx + rax*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400193b	            0x7522	                           jne 0x400195f	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400193d	            0x89d8	                            mov eax, ebx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400193f	            0xeb0b	                           jmp 0x400194c	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001941	          0x4863d0	                         movsxd rdx, eax	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001944	    0x48837cd16000	       cmp qword [rcx + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400194a	            0x7520	                           jne 0x400196c	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400194c	          0x83c001	                              add eax, 1	       686	diff.c	FUNCTION_15	FOR_2
0x400194f	          0x83f808	                              cmp eax, 8	       686	diff.c	FUNCTION_15	FOR_2
0x4001952	            0x75ed	                           jne 0x4001941	       686	diff.c	FUNCTION_15	FOR_2
0x4001954	      0xe9c2080000	                           jmp 0x400221b	       686	diff.c	FUNCTION_15	FOR_2
0x4001959	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       686	diff.c	FUNCTION_15	FOR_2
0x400195d	            0xeb04	                           jmp 0x4001963	       686	diff.c	FUNCTION_15	FOR_2
0x400195f	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001963	          0x83f808	                              cmp eax, 8	       689	diff.c	FUNCTION_15	IF_4
0x4001966	     0xf84af080000	                            je 0x400221b	       689	diff.c	FUNCTION_15	IF_4
0x400196c	      0xbe01000000	                              mov esi, 1	       693	diff.c	FUNCTION_15	CALL_2
0x4001971	      0xbf6f000000	                           mov edi, 0x6f	       693	diff.c	FUNCTION_15	CALL_2
0x4001976	      0xe800000000	                          call 0x400197b	       693	diff.c	FUNCTION_15	CALL_2
0x400197b	          0x4989c7	                            mov r15, rax	       693	diff.c	FUNCTION_15	CALL_2
0x400197e	      0xbe01000000	                              mov esi, 1	       694	diff.c	FUNCTION_15	CALL_3
0x4001983	      0xbf6e000000	                           mov edi, 0x6e	       694	diff.c	FUNCTION_15	CALL_3
0x4001988	      0xe800000000	                          call 0x400198d	       694	diff.c	FUNCTION_15	CALL_3
0x400198d	          0x4889c3	                            mov rbx, rax	       694	diff.c	FUNCTION_15	CALL_3
0x4001990	      0x4889442418	             mov qword [rsp + 0x18], rax	       694	diff.c	FUNCTION_15	CALL_3
0x4001995	      0xbe01000000	                              mov esi, 1	       695	diff.c	FUNCTION_15	CALL_4
0x400199a	      0xbf64000000	                           mov edi, 0x64	       695	diff.c	FUNCTION_15	CALL_4
0x400199f	      0xe800000000	                          call 0x40019a4	       695	diff.c	FUNCTION_15	CALL_4
0x40019a4	          0x4889c1	                            mov rcx, rax	       695	diff.c	FUNCTION_15	CALL_4
0x40019a7	      0x4889442408	                mov qword [rsp + 8], rax	       695	diff.c	FUNCTION_15	CALL_4
0x40019ac	          0x4d85ff	                           test r15, r15	       696	diff.c	FUNCTION_15	IF_5
0x40019af	           0xf94c2	                                 sete dl	       696	diff.c	FUNCTION_15	IF_5
0x40019b2	          0x4885db	                           test rbx, rbx	       696	diff.c	FUNCTION_15	IF_5
0x40019b5	           0xf94c0	                                 sete al	       696	diff.c	FUNCTION_15	IF_5
0x40019b8	             0x8c2	                               or dl, al	       696	diff.c	FUNCTION_15	IF_5
0x40019ba	     0xf85b1070000	                           jne 0x4002171	       696	diff.c	FUNCTION_15	IF_5
0x40019c0	          0x4885c9	                           test rcx, rcx	       696	diff.c	FUNCTION_15	IF_5
0x40019c3	     0xf84a8070000	                            je 0x4002171	       696	diff.c	FUNCTION_15	IF_5
0x40019c9	    0x41bd00000000	                             mov r13d, 0	       696	diff.c	FUNCTION_15	IF_5
0x40019cf	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40019d4	      0x4489742428	            mov dword [rsp + 0x28], r14d	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40019d9	          0x4989de	                            mov r14, rbx	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40019dc	      0xbe00000000	                              mov esi, 0	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40019e1	          0x4c89ff	                            mov rdi, r15	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40019e4	      0xe800000000	                          call 0x40019e9	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40019e9	          0x4889c3	                            mov rbx, rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40019ec	          0x4885c0	                           test rax, rax	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x40019ef	     0xf8416010000	                            je 0x4001b0b	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x40019f5	          0x4889c1	                            mov rcx, rax	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40019f8	      0xba01000000	                              mov edx, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x40019fd	      0xbe06000000	                              mov esi, 6	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001a02	      0xbf00000000	                              mov edi, 0	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001a07	      0xe800000000	                          call 0x4001a0c	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001a0c	        0x4883f801	                              cmp rax, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001a10	      0xb801000000	                              mov eax, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001a15	        0x440f45e8	                        cmovne r13d, eax	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001a19	          0x4889df	                            mov rdi, rbx	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001a1c	      0xe800000000	                          call 0x4001a21	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001a21	      0xbe00000000	                              mov esi, 0	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001a26	          0x4c89f7	                            mov rdi, r14	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001a29	      0xe800000000	                          call 0x4001a2e	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001a2e	          0x4889c3	                            mov rbx, rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001a31	          0x4885c0	                           test rax, rax	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001a34	     0xf84bc000000	                            je 0x4001af6	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001a3a	          0x4889c1	                            mov rcx, rax	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001a3d	      0xba01000000	                              mov edx, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001a42	      0xbe06000000	                              mov esi, 6	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001a47	      0xbf00000000	                              mov edi, 0	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001a4c	      0xe800000000	                          call 0x4001a51	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001a51	        0x4883f801	                              cmp rax, 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4001a55	      0xb801000000	                              mov eax, 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4001a5a	        0x440f45e8	                        cmovne r13d, eax	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4001a5e	          0x4889df	                            mov rdi, rbx	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001a61	      0xe800000000	                          call 0x4001a66	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001a66	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001a6b	          0x4889da	                            mov rdx, rbx	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001a6e	          0x4c89f6	                            mov rsi, r14	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001a71	          0x4c89ff	                            mov rdi, r15	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001a74	      0xe86ae9ffff	                      call sym.diff_file	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001a79	      0xbe00000000	                              mov esi, 0	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001a7e	          0x4889df	                            mov rdi, rbx	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001a81	      0xe800000000	                          call 0x4001a86	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001a86	          0x4989c4	                            mov r12, rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001a89	          0x4885c0	                           test rax, rax	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001a8c	            0x7449	                            je 0x4001ad7	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001a8e	      0xbb00000000	                              mov ebx, 0	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001a93	          0x4c89e2	                            mov rdx, r12	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001a96	      0xbe32000000	                           mov esi, 0x32	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001a9b	          0x4889ef	                            mov rdi, rbp	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001a9e	      0xe800000000	                          call 0x4001aa3	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001aa3	            0x85c0	                           test eax, eax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001aa5	            0x7526	                           jne 0x4001acd	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001aa7	      0xbf00000000	                              mov edi, 0	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001aac	      0xb903000000	                              mov ecx, 3	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001ab1	          0x4889ee	                            mov rsi, rbp	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001ab4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001ab6	           0xf97c0	                                 seta al	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001ab9	           0xf92c2	                                 setb dl	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001abc	            0x29d0	                            sub eax, edx	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001abe	           0xfbec0	                           movsx eax, al	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001ac1	            0x85c0	                           test eax, eax	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001ac3	      0xb801000000	                              mov eax, 1	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001ac8	           0xf44d8	                          cmove ebx, eax	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001acb	            0xebc6	                           jmp 0x4001a93	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001acd	          0x4c89e7	                            mov rdi, r12	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x4001ad0	      0xe800000000	                          call 0x4001ad5	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x4001ad5	            0xeb0b	                           jmp 0x4001ae2	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x4001ad7	    0x41bd01000000	                             mov r13d, 1	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001add	      0xbb00000000	                              mov ebx, 0	       707	diff.c	FUNCTION_15	FOR_3
0x4001ae2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x4001ae7	      0xe800000000	                          call 0x4001aec	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x4001aec	          0x4c89f7	                            mov rdi, r14	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001aef	      0xe800000000	                          call 0x4001af4	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001af4	            0xeb0b	                           jmp 0x4001b01	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001af6	    0x41bd01000000	                             mov r13d, 1	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001afc	      0xbb00000000	                              mov ebx, 0	       707	diff.c	FUNCTION_15	FOR_3
0x4001b01	          0x4c89ff	                            mov rdi, r15	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001b04	      0xe800000000	                          call 0x4001b09	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001b09	            0xeb0b	                           jmp 0x4001b16	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001b0b	    0x41bd01000000	                             mov r13d, 1	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x4001b11	      0xbb00000000	                              mov ebx, 0	       707	diff.c	FUNCTION_15	FOR_3
0x4001b16	    0x488b05000000	            mov rax, qword [0x04001b1d] 	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001b1d	          0x803800	                       cmp byte [rax], 0	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001b20	            0x751e	                           jne 0x4001b40	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001b22	    0x833d00000000	               cmp dword [0x04001b29], 2	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001b29	            0x7515	                           jne 0x4001b40	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001b2b	    0x891d00000000	            mov dword [0x04001b31], ebx 	       773	diff.c	FUNCTION_15	FOR_3
0x4001b31	            0x85db	                           test ebx, ebx	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001b33	     0xf84a3feffff	                            je 0x40019dc	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001b39	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001b3e	            0xeb55	                           jmp 0x4001b95	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001b40	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001b45	            0x85db	                           test ebx, ebx	       779	diff.c	FUNCTION_15	IF_18
0x4001b47	            0x754c	                           jne 0x4001b95	       779	diff.c	FUNCTION_15	IF_18
0x4001b49	          0x4585ed	                         test r13d, r13d	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001b4c	            0x741c	                            je 0x4001b6a	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001b4e	      0xba05000000	                              mov edx, 5	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b53	      0xbe00000000	                              mov esi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b58	      0xbf00000000	                              mov edi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b5d	      0xe800000000	                          call 0x4001b62	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b62	          0x4889c7	                            mov rdi, rax	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b65	      0xe800000000	                          call 0x4001b6a	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001b6a	      0xba05000000	                              mov edx, 5	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b6f	      0xbe00000000	                              mov esi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b74	      0xbf00000000	                              mov edi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b79	      0xe800000000	                          call 0x4001b7e	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b7e	          0x4889c7	                            mov rdi, rax	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b81	      0xe800000000	                          call 0x4001b86	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001b86	    0xc70500000000	               mov dword [0x04001b90], 2	       784	diff.c	FUNCTION_15	IF_18
0x4001b90	      0xe9dc050000	                           jmp 0x4002171	       788	diff.c	FUNCTION_15	IF_18
0x4001b95	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       792	diff.c	FUNCTION_15	IF_20
0x4001b9a	          0x4885c0	                           test rax, rax	       792	diff.c	FUNCTION_15	IF_20
0x4001b9d	            0x743f	                            je 0x4001bde	       792	diff.c	FUNCTION_15	IF_20
0x4001b9f	        0x83783400	               cmp dword [rax + 0x34], 0	       792	diff.c	FUNCTION_15	IF_20
0x4001ba3	            0x7439	                            je 0x4001bde	       792	diff.c	FUNCTION_15	IF_20
0x4001ba5	        0x4183fe07	                             cmp r14d, 7	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001ba9	            0x7f33	                            jg 0x4001bde	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bab	          0x4489f3	                           mov ebx, r14d	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bae	          0x4863c3	                         movsxd rax, ebx	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bb1	    0x488b15000000	            mov rdx, qword [0x04001bb8] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bb8	      0x488b6cc260	    mov rbp, qword [rdx + rax*8 + 0x60] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bbd	          0x4889ef	                            mov rdi, rbp	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001bc0	      0xe800000000	                          call 0x4001bc5	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001bc5	            0x85c0	                           test eax, eax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001bc7	            0x740d	                            je 0x4001bd6	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001bc9	      0xbe00000000	                              mov esi, 0	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001bce	          0x4889ef	                            mov rdi, rbp	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001bd1	      0xe800000000	                          call 0x4001bd6	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001bd6	          0x83c301	                              add ebx, 1	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bd9	          0x83fb08	                              cmp ebx, 8	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bdc	            0x75d0	                           jne 0x4001bae	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bde	          0x4963c6	                        movsxd rax, r14d	       801	diff.c	FUNCTION_15
0x4001be1	    0x488b15000000	            mov rdx, qword [0x04001be8] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001be8	      0x488b7cc260	    mov rdi, qword [rdx + rax*8 + 0x60] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001bed	          0x4c89fe	                            mov rsi, r15	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001bf0	      0xe886e7ffff	                     call sym.diff_write	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001bf5	            0x85c0	                           test eax, eax	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001bf7	     0xf8474050000	                            je 0x4002171	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001bfd	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       806	diff.c	FUNCTION_15	FOR_6
0x4001c01	          0x83f807	                              cmp eax, 7	       806	diff.c	FUNCTION_15	FOR_6
0x4001c04	     0xf8f43050000	                            jg 0x400214d	       806	diff.c	FUNCTION_15	FOR_6
0x4001c0a	          0x4963f6	                        movsxd rsi, r14d	       806	diff.c	FUNCTION_15	FOR_6
0x4001c0d	      0x4889742448	             mov qword [rsp + 0x48], rsi	       806	diff.c	FUNCTION_15	FOR_6
0x4001c12	    0x4c8d2cf50000	                        lea r13, [rsi*8]	       806	diff.c	FUNCTION_15	FOR_6
0x4001c1a	      0x448974245c	            mov dword [rsp + 0x5c], r14d	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001c1f	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001c24	          0x4d89ec	                            mov r12, r13	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001c27	          0x4189c5	                           mov r13d, eax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001c2a	          0x4963c5	                        movsxd rax, r13d	       808	diff.c	FUNCTION_15	FOR_6
0x4001c2d	    0x488b15000000	            mov rdx, qword [0x04001c34] 	       808	diff.c	FUNCTION_15	FOR_6
0x4001c34	      0x488b7cc260	    mov rdi, qword [rdx + rax*8 + 0x60] 	       808	diff.c	FUNCTION_15	FOR_6
0x4001c39	          0x4885ff	                           test rdi, rdi	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001c3c	     0xf84f8040000	                            je 0x400213a	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001c42	      0x48837f0800	                  cmp qword [rdi + 8], 0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001c47	     0xf84ed040000	                            je 0x400213a	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001c4d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001c52	      0xe824e7ffff	                     call sym.diff_write	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001c57	            0x85c0	                           test eax, eax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001c59	     0xf84db040000	                            je 0x400213a	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001c5f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001c64	          0x4889da	                            mov rdx, rbx	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001c67	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001c6c	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001c71	      0xe86de7ffff	                      call sym.diff_file	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001c76	    0x488b05000000	            mov rax, qword [0x04001c7d] 	      1291	diff.c	FUNCTION_23
0x4001c7d	        0x4c8b7058	            mov r14, qword [rax + 0x58] 	      1291	diff.c	FUNCTION_23
0x4001c81	      0xbe00000000	                              mov esi, 0	      1303	diff.c	FUNCTION_23	CALL_1
0x4001c86	          0x4889df	                            mov rdi, rbx	      1303	diff.c	FUNCTION_23	CALL_1
0x4001c89	      0xe800000000	                          call 0x4001c8e	      1303	diff.c	FUNCTION_23	CALL_1
0x4001c8e	          0x4889c6	                            mov rsi, rax	      1303	diff.c	FUNCTION_23	CALL_1
0x4001c91	      0x4889442428	             mov qword [rsp + 0x28], rax	      1303	diff.c	FUNCTION_23	CALL_1
0x4001c96	    0x41bf01000000	                             mov r15d, 1	      1304	diff.c	FUNCTION_23	IF_1
0x4001c9c	      0xbd00000000	                              mov ebp, 0	      1304	diff.c	FUNCTION_23	IF_1
0x4001ca1	          0x4963c5	                        movsxd rax, r13d	      1304	diff.c	FUNCTION_23	IF_1
0x4001ca4	        0x48c1e003	                              shl rax, 3	      1304	diff.c	FUNCTION_23	IF_1
0x4001ca8	      0x4889442438	             mov qword [rsp + 0x38], rax	      1304	diff.c	FUNCTION_23	IF_1
0x4001cad	          0x4885f6	                           test rsi, rsi	      1304	diff.c	FUNCTION_23	IF_1
0x4001cb0	            0x7537	                           jne 0x4001ce9	      1304	diff.c	FUNCTION_23	IF_1
0x4001cb2	      0xba05000000	                              mov edx, 5	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cb7	      0xbe00000000	                              mov esi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cbc	      0xbf00000000	                              mov edi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cc1	      0xe800000000	                          call 0x4001cc6	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cc6	          0x4889c7	                            mov rdi, rax	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cc9	      0xe800000000	                          call 0x4001cce	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cce	      0xe953040000	                           jmp 0x4002126	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001cd3	          0x4c89f5	                            mov rbp, r14	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001cd6	          0x4989de	                            mov r14, rbx	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001cd9	    0x41bf00000000	                             mov r15d, 0	      1457	diff.c	FUNCTION_23	FOR_1
0x4001cdf	            0xeb0d	                           jmp 0x4001cee	      1457	diff.c	FUNCTION_23	FOR_1
0x4001ce1	    0x41bf00000000	                             mov r15d, 0	      1457	diff.c	FUNCTION_23	FOR_1
0x4001ce7	            0xeb05	                           jmp 0x4001cee	      1457	diff.c	FUNCTION_23	FOR_1
0x4001ce9	      0x44896c2458	            mov dword [rsp + 0x58], r13d	      1457	diff.c	FUNCTION_23	FOR_1
0x4001cee	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1457	diff.c	FUNCTION_23	FOR_1
0x4001cf3	          0x4889da	                            mov rdx, rbx	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001cf6	      0xbe32000000	                           mov esi, 0x32	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001cfb	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d00	      0xe800000000	                          call 0x4001d05	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d05	            0x85c0	                           test eax, eax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d07	            0x741a	                            je 0x4001d23	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d09	      0x448b6c2458	           mov r13d, dword [rsp + 0x58] 	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d0e	          0x4963d5	                        movsxd rdx, r13d	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d11	        0x48c1e203	                              shl rdx, 3	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d15	          0x4d85f6	                           test r14, r14	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001d18	     0xf85a6030000	                           jne 0x40020c4	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001d1e	      0xe9f9030000	                           jmp 0x400211c	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001d23	      0xe800000000	                          call 0x4001d28	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d28	       0xfb6542470	           movzx edx, byte [rsp + 0x70] 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d2d	          0x488b00	                    mov rax, qword [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d30	      0xf644500108	         test byte [rax + rdx*2 + 1], 8 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d35	            0x74bc	                            je 0x4001cf3	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d37	      0x488d442470	                   lea rax, [rsp + 0x70]	      1322	diff.c	FUNCTION_23	FOR_1
0x4001d3c	      0x4889442468	             mov qword [rsp + 0x68], rax	      1322	diff.c	FUNCTION_23	FOR_1
0x4001d41	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001d46	      0xe800000000	                          call 0x4001d4b	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001d4b	          0x4989c5	                            mov r13, rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001d4e	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001d53	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      1330	diff.c	FUNCTION_23	FOR_1	ELSE_1
0x4001d58	          0x80382c	                    cmp byte [rax], 0x2c	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001d5b	            0x7518	                           jne 0x4001d75	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001d5d	        0x4883c001	                              add rax, 1	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001d61	      0x4889442468	             mov qword [rsp + 0x68], rax	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001d66	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001d6b	      0xe800000000	                          call 0x4001d70	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001d70	      0x4889442420	             mov qword [rsp + 0x20], rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001d75	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d7a	           0xfb610	                   movzx edx, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d7d	          0x8d4a9d	                   lea ecx, [rdx - 0x63]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d80	          0x80f901	                               cmp cl, 1	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d83	            0x7609	                           jbe 0x4001d8e	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d85	          0x80fa61	                            cmp dl, 0x61	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d88	     0xf8560ffffff	                           jne 0x4001cee	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001d8e	        0x488d5001	                      lea rdx, [rax + 1]	      1333	diff.c	FUNCTION_23	FOR_1
0x4001d92	      0x4889542468	             mov qword [rsp + 0x68], rdx	      1333	diff.c	FUNCTION_23	FOR_1
0x4001d97	           0xfb618	                   movzx ebx, byte [rax]	      1333	diff.c	FUNCTION_23	FOR_1
0x4001d9a	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001d9f	      0xe800000000	                          call 0x4001da4	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001da4	      0x4889442430	             mov qword [rsp + 0x30], rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001da9	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001dae	          0x803a2c	                    cmp byte [rdx], 0x2c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001db1	            0x7513	                           jne 0x4001dc6	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001db3	        0x4883c201	                              add rdx, 1	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001db7	      0x4889542468	             mov qword [rsp + 0x68], rdx	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001dbc	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4001dc1	      0xe800000000	                          call 0x4001dc6	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4001dc6	      0x4c3b6c2420	            cmp r13, qword [rsp + 0x20] 	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001dcb	     0xf8f1dffffff	                            jg 0x4001cee	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001dd1	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001dd6	     0xf8f12ffffff	                            jg 0x4001cee	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001ddc	           0xfb6db	                           movzx ebx, bl	      1333	diff.c	FUNCTION_23	FOR_1
0x4001ddf	          0x83fb61	                           cmp ebx, 0x61	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001de2	            0x750f	                           jne 0x4001df3	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001de4	        0x4983c501	                              add r13, 1	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001de8	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001df1	            0xeb4d	                           jmp 0x4001e40	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001df3	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001df8	          0x4c29ea	                            sub rdx, r13	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001dfb	        0x488d7201	                      lea rsi, [rdx + 1]	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001dff	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001e04	          0x83fb64	                           cmp ebx, 0x64	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e07	            0x7537	                           jne 0x4001e40	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e09	    0x488344243001	               add qword [rsp + 0x30], 1	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e0f	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e18	          0x4d85f6	                           test r14, r14	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e1b	     0xf8471030000	                            je 0x4002192	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e21	        0x4b8d1426	                    lea rdx, [r14 + r12]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e25	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e29	          0x4889c6	                            mov rsi, rax	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e2c	        0x48037248	             add rsi, qword [rdx + 0x48]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e30	          0x4c39ee	                            cmp rsi, r13	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e33	            0x7c20	                            jl 0x4001e55	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e35	          0x4c89f3	                            mov rbx, r14	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e38	          0x4989ee	                            mov r14, rbp	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e3b	      0xe9b1030000	                           jmp 0x40021f1	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e40	      0x482b442430	             sub rax, qword [rsp + 0x30]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e45	        0x4883c001	                              add rax, 1	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e49	      0x4889442440	             mov qword [rsp + 0x40], rax	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e4e	            0xebc8	                           jmp 0x4001e18	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e50	          0x4989de	                            mov r14, rbx	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e53	            0xeb0a	                           jmp 0x4001e5f	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e55	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e5a	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e5f	          0x4585ff	                         test r15d, r15d	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e62	            0x7434	                            je 0x4001e98	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e64	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4001e67	            0x7416	                            je 0x4001e7f	      1486	diff.c	FUNCTION_24	IF_1
0x4001e69	      0x4a8b542508	         mov rdx, qword [rbp + r12 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e6e	      0x4a03542548	       add rdx, qword [rbp + r12 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e73	      0x482b540d48	       sub rdx, qword [rbp + rcx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e78	      0x482b540d08	          sub rdx, qword [rbp + rcx + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e7d	            0xeb05	                           jmp 0x4001e84	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e7f	      0xba00000000	                              mov edx, 0	      1487	diff.c	FUNCTION_24	IF_1
0x4001e84	        0x498d3c0e	                    lea rdi, [r14 + rcx]	      1487	diff.c	FUNCTION_24	IF_1
0x4001e88	          0x4829d0	                            sub rax, rdx	      1491	diff.c	FUNCTION_24
0x4001e8b	        0x48894708	                mov qword [rdi + 8], rax	      1491	diff.c	FUNCTION_24
0x4001e8f	      0x498b44f648	    mov rax, qword [r14 + rsi*8 + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001e94	        0x48894748	             mov qword [rdi + 0x48], rax	      1492	diff.c	FUNCTION_24
0x4001e98	          0x498b1e	                    mov rbx, qword [r14]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e9b	          0x4885db	                           test rbx, rbx	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e9e	     0xf84f1020000	                            je 0x4002195	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ea4	        0x4a8d1423	                    lea rdx, [rbx + r12]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ea8	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eac	    0x41bf01000000	                             mov r15d, 1	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eb2	          0x4c89f5	                            mov rbp, r14	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eb5	          0x4889c7	                            mov rdi, rax	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eb8	        0x48037a48	             add rdi, qword [rdx + 0x48]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ebc	          0x4c39ef	                            cmp rdi, r13	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ebf	            0x7c8f	                            jl 0x4001e50	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ec1	      0xe92b030000	                           jmp 0x40021f1	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ec6	      0x4a3b4cc008	        cmp rcx, qword [rax + r8*8 + 8] 	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4001ecb	            0x7c15	                            jl 0x4001ee2	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4001ecd	          0x4889c2	                            mov rdx, rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4001ed0	            0xeb08	                           jmp 0x4001eda	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4001ed2	          0x4889da	                            mov rdx, rbx	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ed5	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001eda	          0x488b02	                    mov rax, qword [rdx]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4001edd	          0x4885c0	                           test rax, rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4001ee0	            0x75e4	                           jne 0x4001ec6	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4001ee2	          0x4c29ee	                            sub rsi, r13	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ee5	          0x4885f6	                           test rsi, rsi	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001ee8	            0x7e4a	                           jle 0x4001f34	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001eea	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001eee	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001ef2	            0x39c7	                            cmp edi, eax	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001ef4	            0x7e22	                           jle 0x4001f18	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001ef6	    0x4c8b05000000	              mov r8, qword [0x04001efd]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001efd	          0x4189f9	                            mov r9d, edi	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001f00	          0x4863f8	                         movsxd rdi, eax	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001f03	    0x49837cf86000	        cmp qword [r8 + rdi*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001f09	            0x7405	                            je 0x4001f10	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001f0b	      0x482974fb08	        sub qword [rbx + rdi*8 + 8], rsi	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4001f10	          0x83c001	                              add eax, 1	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001f13	          0x4439c8	                            cmp eax, r9d	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001f16	            0x75e8	                           jne 0x4001f00	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001f18	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001f1d	          0x4801d8	                            add rax, rbx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4001f20	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001f25	        0x48897008	                mov qword [rax + 8], rsi	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001f29	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001f2e	        0x48897048	             mov qword [rax + 0x48], rsi	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001f32	            0xeb57	                           jmp 0x4001f8b	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4001f34	          0x4585ff	                         test r15d, r15d	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f37	            0x7431	                            je 0x4001f6a	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f39	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f3e	          0x4801d8	                            add rax, rbx	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f41	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f46	          0x4801f7	                            add rdi, rsi	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f49	        0x48897808	                mov qword [rax + 8], rdi	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f4d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f52	          0x4829f7	                            sub rdi, rsi	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f55	        0x48897848	             mov qword [rax + 0x48], rdi	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001f59	      0x4a2b4c2208	          sub rcx, qword [rdx + r12 + 8]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001f5e	          0x4889ce	                            mov rsi, rcx	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f61	      0x4a2b742248	       sub rsi, qword [rdx + r12 + 0x48]	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f66	            0x794d	                           jns 0x4001fb5	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f68	            0xeb35	                           jmp 0x4001f9f	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f6a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f6f	      0x482b442420	             sub rax, qword [rsp + 0x20]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f74	      0x4a03442208	          add rax, qword [rdx + r12 + 8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f79	      0x4a03442248	       add rax, qword [rdx + r12 + 0x48]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f7e	          0x4829f8	                            sub rax, rdi	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f81	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f86	      0x4801443348	      add qword [rbx + rsi + 0x48], rax 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001f8b	      0x4a2b4c2248	       sub rcx, qword [rdx + r12 + 0x48]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001f90	          0x4889ce	                            mov rsi, rcx	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f93	      0x4a2b742208	          sub rsi, qword [rdx + r12 + 8]	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f98	            0x791b	                           jns 0x4001fb5	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001f9a	          0x4585ff	                         test r15d, r15d	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001f9d	            0x7411	                            je 0x4001fb0	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001f9f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001fa4	      0x4829740348	       sub qword [rbx + rax + 0x48], rsi	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001fa9	      0xbe00000000	                              mov esi, 0	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001fae	            0xeb05	                           jmp 0x4001fb5	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001fb0	      0xbe00000000	                              mov esi, 0	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001fb5	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001fb9	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001fbd	            0x39c8	                            cmp eax, ecx	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001fbf	            0x7e3d	                           jle 0x4001ffe	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001fc1	    0x4c8b05000000	              mov r8, qword [0x04001fc8]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fc8	          0x4189c2	                           mov r10d, eax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fcb	          0x4863c1	                         movsxd rax, ecx	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fce	    0x49837cc06000	        cmp qword [r8 + rax*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fd4	            0x7420	                            je 0x4001ff6	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fd6	          0x4889c7	                            mov rdi, rax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fd9	        0x48c1e703	                              shl rdi, 3	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fdd	        0x4c8d0c3b	                     lea r9, [rbx + rdi]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fe1	      0x488b443a08	         mov rax, qword [rdx + rdi + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fe6	      0x4803443a48	       add rax, qword [rdx + rdi + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001feb	        0x492b4108	                 sub rax, qword [r9 + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001fef	          0x4801f0	                            add rax, rsi	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001ff2	        0x49894148	              mov qword [r9 + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001ff6	          0x83c101	                              add ecx, 1	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001ff9	          0x4439d1	                           cmp ecx, r10d	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001ffc	            0x75cd	                           jne 0x4001fcb	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001ffe	          0x488b3b	                    mov rdi, qword [rbx]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002001	          0x488b02	                    mov rax, qword [rdx]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002004	          0x488903	                    mov qword [rbx], rax	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002007	          0x4839c7	                            cmp rdi, rax	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400200a	     0xf84c3fcffff	                            je 0x4001cd3	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002010	          0x488b2f	                    mov rbp, qword [rdi]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002013	      0xe800000000	                          call 0x4002018	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x4002018	          0x4889ef	                            mov rdi, rbp	      1435	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400201b	          0x483b2b	                    cmp rbp, qword [rbx]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400201e	            0x75f0	                           jne 0x4002010	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002020	          0x4c89f5	                            mov rbp, r14	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002023	          0x4989de	                            mov r14, rbx	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4002026	    0x41bf00000000	                             mov r15d, 0	      1457	diff.c	FUNCTION_23	FOR_1
0x400202c	      0xe9bdfcffff	                           jmp 0x4001cee	      1457	diff.c	FUNCTION_23	FOR_1
0x4002031	    0x4c8b3d000000	            mov r15, qword [0x04002038] 	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002038	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x400203d	      0xe800000000	                          call 0x4002042	       497	diff.c	FUNCTION_10	CALL_1
0x4002042	          0x4989c6	                            mov r14, rax	       497	diff.c	FUNCTION_10	CALL_1
0x4002045	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x4002048	     0xf84c9000000	                            je 0x4002117	       498	diff.c	FUNCTION_10	IF_1
0x400204e	          0x488918	                    mov qword [rax], rbx	       500	diff.c	FUNCTION_10	IF_1
0x4002051	          0x4885ed	                           test rbp, rbp	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002054	            0x7509	                           jne 0x400205f	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002056	        0x49894758	             mov qword [r15 + 0x58], rax	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x400205a	      0xe943010000	                           jmp 0x40021a2	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x400205f	        0x48894500	                    mov qword [rbp], rax	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4002063	      0xe93a010000	                           jmp 0x40021a2	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4002068	          0x4863d0	                         movsxd rdx, eax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400206b	    0x49837cd06000	        cmp qword [r8 + rdx*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002071	            0x743b	                            je 0x40020ae	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4002073	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4002076	            0x7417	                            je 0x400208f	      1486	diff.c	FUNCTION_24	IF_1
0x4002078	          0x4889d1	                            mov rcx, rdx	      1486	diff.c	FUNCTION_24	IF_1
0x400207b	        0x488b5748	            mov rdx, qword [rdi + 0x48] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x400207f	        0x48035708	                add rdx, qword [rdi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002083	      0x482b54cd48	     sub rdx, qword [rbp + rcx*8 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002088	      0x482b54cd08	        sub rdx, qword [rbp + rcx*8 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400208d	            0xeb05	                           jmp 0x4002094	      1489	diff.c	FUNCTION_24	ELSE_1
0x400208f	      0xba00000000	                              mov edx, 0	      1487	diff.c	FUNCTION_24	IF_1
0x4002094	          0x4863c8	                         movsxd rcx, eax	      1487	diff.c	FUNCTION_24	IF_1
0x4002097	        0x498d0cce	                  lea rcx, [r14 + rcx*8]	      1487	diff.c	FUNCTION_24	IF_1
0x400209b	        0x488b5e08	                mov rbx, qword [rsi + 8]	      1491	diff.c	FUNCTION_24
0x400209f	          0x4829d3	                            sub rbx, rdx	      1491	diff.c	FUNCTION_24
0x40020a2	        0x48895908	                mov qword [rcx + 8], rbx	      1491	diff.c	FUNCTION_24
0x40020a6	        0x488b5648	            mov rdx, qword [rsi + 0x48] 	      1492	diff.c	FUNCTION_24
0x40020aa	        0x48895148	             mov qword [rcx + 0x48], rdx	      1492	diff.c	FUNCTION_24
0x40020ae	          0x83c001	                              add eax, 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40020b1	          0x4439c8	                            cmp eax, r9d	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40020b4	            0x75b2	                           jne 0x4002068	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40020b6	    0x41bf00000000	                             mov r15d, 0	      1457	diff.c	FUNCTION_23	FOR_1
0x40020bc	      0xe92dfcffff	                           jmp 0x4001cee	      1457	diff.c	FUNCTION_23	FOR_1
0x40020c1	          0x4989c6	                            mov r14, rax	      1466	diff.c	FUNCTION_23	WHILE_3
0x40020c4	          0x4585ff	                         test r15d, r15d	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x40020c7	            0x743b	                            je 0x4002104	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x40020c9	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x40020cc	            0x7416	                            je 0x40020e4	      1486	diff.c	FUNCTION_24	IF_1
0x40020ce	      0x4a8b442508	         mov rax, qword [rbp + r12 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x40020d3	      0x4a03442548	       add rax, qword [rbp + r12 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40020d8	      0x482b441548	       sub rax, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40020dd	      0x482b441508	          sub rax, qword [rbp + rdx + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40020e2	            0xeb05	                           jmp 0x40020e9	      1489	diff.c	FUNCTION_24	ELSE_1
0x40020e4	      0xb800000000	                              mov eax, 0	      1487	diff.c	FUNCTION_24	IF_1
0x40020e9	        0x4b8d3426	                    lea rsi, [r14 + r12]	      1487	diff.c	FUNCTION_24	IF_1
0x40020ed	        0x498d0c16	                    lea rcx, [r14 + rdx]	      1487	diff.c	FUNCTION_24	IF_1
0x40020f1	        0x488b5e08	                mov rbx, qword [rsi + 8]	      1491	diff.c	FUNCTION_24
0x40020f5	          0x4829c3	                            sub rbx, rax	      1491	diff.c	FUNCTION_24
0x40020f8	        0x48895908	                mov qword [rcx + 8], rbx	      1491	diff.c	FUNCTION_24
0x40020fc	        0x488b4648	            mov rax, qword [rsi + 0x48] 	      1492	diff.c	FUNCTION_24
0x4002100	        0x48894148	             mov qword [rcx + 0x48], rax	      1492	diff.c	FUNCTION_24
0x4002104	          0x498b06	                    mov rax, qword [r14]	      1466	diff.c	FUNCTION_23	WHILE_3
0x4002107	    0x41bf01000000	                             mov r15d, 1	      1467	diff.c	FUNCTION_23	WHILE_3
0x400210d	          0x4c89f5	                            mov rbp, r14	      1467	diff.c	FUNCTION_23	WHILE_3
0x4002110	          0x4885c0	                           test rax, rax	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002113	            0x75ac	                           jne 0x40020c1	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002115	            0xeb05	                           jmp 0x400211c	      1461	diff.c	FUNCTION_23	WHILE_3
0x4002117	      0x448b6c2458	           mov r13d, dword [rsp + 0x58] 	      1461	diff.c	FUNCTION_23	WHILE_3
0x400211c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1471	diff.c	FUNCTION_23	CALL_14
0x4002121	      0xe800000000	                          call 0x4002126	      1471	diff.c	FUNCTION_23	CALL_14
0x4002126	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x400212b	      0xe800000000	                          call 0x4002130	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x4002130	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4002135	      0xe800000000	                          call 0x400213a	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x400213a	        0x4183c501	                             add r13d, 1	       806	diff.c	FUNCTION_15	FOR_6
0x400213e	        0x4183fd08	                             cmp r13d, 8	       806	diff.c	FUNCTION_15	FOR_6
0x4002142	     0xf85e2faffff	                           jne 0x4001c2a	       806	diff.c	FUNCTION_15	FOR_6
0x4002148	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	       806	diff.c	FUNCTION_15	FOR_6
0x400214d	          0x4c89ff	                            mov rdi, r15	       820	diff.c	FUNCTION_15	CALL_30
0x4002150	      0xe800000000	                          call 0x4002155	       820	diff.c	FUNCTION_15	CALL_30
0x4002155	    0x488b05000000	            mov rax, qword [0x0400215c] 	       823	diff.c	FUNCTION_15
0x400215c	    0x48c780b80000	               mov qword [rax + 0xb8], 0	       823	diff.c	FUNCTION_15
0x4002167	      0xbf01000000	                              mov edi, 1	       825	diff.c	FUNCTION_15	CALL_31
0x400216c	      0xe85be6ffff	                    call sym.diff_redraw	       825	diff.c	FUNCTION_15	CALL_31
0x4002171	          0x4c89ff	                            mov rdi, r15	       828	diff.c	FUNCTION_15	CALL_32
0x4002174	      0xe800000000	                          call 0x4002179	       828	diff.c	FUNCTION_15	CALL_32
0x4002179	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       829	diff.c	FUNCTION_15	CALL_33
0x400217e	      0xe800000000	                          call 0x4002183	       829	diff.c	FUNCTION_15	CALL_33
0x4002183	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       830	diff.c	FUNCTION_15	CALL_34
0x4002188	      0xe800000000	                          call 0x400218d	       830	diff.c	FUNCTION_15	CALL_34
0x400218d	      0xe989000000	                           jmp 0x400221b	       830	diff.c	FUNCTION_15	CALL_34
0x4002192	          0x4989ee	                            mov r14, rbp	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4002195	          0x4c89f5	                            mov rbp, r14	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002198	      0xbb00000000	                              mov ebx, 0	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x400219d	      0xe98ffeffff	                           jmp 0x4002031	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x40021a2	        0x4b8d3426	                    lea rsi, [r14 + r12]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x40021a6	        0x4c896e08	                mov qword [rsi + 8], r13	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021aa	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021af	        0x48894648	             mov qword [rsi + 0x48], rax	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021b3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021b8	          0x4c01f0	                            add rax, r14	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021bb	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021c0	        0x48894808	                mov qword [rax + 8], rcx	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021c4	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021c9	        0x48894848	             mov qword [rax + 0x48], rcx	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40021cd	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40021d1	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40021d5	            0x39c1	                            cmp ecx, eax	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40021d7	     0xf8e04fbffff	                           jle 0x4001ce1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40021dd	    0x4c8b05000000	              mov r8, qword [0x040021e4]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021e4	      0x4a8d7c2500	                    lea rdi, [rbp + r12]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021e9	          0x4189c9	                            mov r9d, ecx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021ec	      0xe977feffff	                           jmp 0x4002068	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021f1	        0x4a8d0423	                    lea rax, [rbx + r12]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021f5	        0x488b7008	                mov rsi, qword [rax + 8]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40021f9	          0x4889f7	                            mov rdi, rsi	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x40021fc	        0x48037848	             add rdi, qword [rax + 0x48]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002200	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002205	      0x498d4c0500	                    lea rcx, [r13 + rax]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x400220a	          0x4c89f5	                            mov rbp, r14	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x400220d	          0x4839f1	                            cmp rcx, rsi	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002210	     0xf8c1bfeffff	                            jl 0x4002031	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002216	      0xe9b7fcffff	                           jmp 0x4001ed2	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x400221b	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       831	diff.c	FUNCTION_15
0x4002223	    0x644833042528	                xor rax, qword fs:[0x28]	       831	diff.c	FUNCTION_15
0x400222c	            0x7405	                            je 0x4002233	       831	diff.c	FUNCTION_15
0x400222e	      0xe800000000	                          call 0x4002233	       831	diff.c	FUNCTION_15
0x4002233	    0x4881c4b80000	                           add rsp, 0xb8	       831	diff.c	FUNCTION_15
0x400223a	              0x5b	                                 pop rbx	       831	diff.c	FUNCTION_15
0x400223b	              0x5d	                                 pop rbp	       831	diff.c	FUNCTION_15
0x400223c	            0x415c	                                 pop r12	       831	diff.c	FUNCTION_15
0x400223e	            0x415d	                                 pop r13	       831	diff.c	FUNCTION_15
0x4002240	            0x415e	                                 pop r14	       831	diff.c	FUNCTION_15
0x4002242	            0x415f	                                 pop r15	       831	diff.c	FUNCTION_15
0x4002244	              0xc3	                                     ret	       831	diff.c	FUNCTION_15
diff_buf_add	FOR,1:WHILE,0:IF,2:SWITCH,0:ELSE,0:functions,0:CALL,4:DO,0	33
0x40008fd	              0x53	                                push rbx	       124	diff.c	FUNCTION_3
0x40008fe	          0x4889fb	                            mov rbx, rdi	       124	diff.c	FUNCTION_3
0x4000901	      0xe83af7ffff	                   call sym.diff_buf_idx	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x4000906	          0x83f808	                              cmp eax, 8	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x4000909	            0x756e	                           jne 0x4000979	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x400090b	    0x488b0d000000	            mov rcx, qword [0x04000912] 	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000912	      0x4883796000	               cmp qword [rcx + 0x60], 0	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000917	            0x7411	                            je 0x400092a	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000919	        0x488d5168	                   lea rdx, [rcx + 0x68]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400091d	      0xb801000000	                              mov eax, 1	       130	diff.c	FUNCTION_3	FOR_1
0x4000922	        0x48833a00	                      cmp qword [rdx], 0	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000926	            0x7524	                           jne 0x400094c	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000928	            0xeb05	                           jmp 0x400092f	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400092a	      0xb800000000	                              mov eax, 0	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400092f	            0x4898	                                    cdqe	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000931	      0x48895cc160	     mov qword [rcx + rax*8 + 0x60], rbx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000936	    0xc781a0000000	               mov dword [rcx + 0xa0], 1	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x4000940	      0xbf01000000	                              mov edi, 1	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4000945	      0xe882feffff	                    call sym.diff_redraw	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x400094a	            0xeb2d	                           jmp 0x4000979	       136	diff.c	FUNCTION_3	FOR_1	IF_2
0x400094c	          0x83c001	                              add eax, 1	       130	diff.c	FUNCTION_3	FOR_1
0x400094f	        0x4883c208	                              add rdx, 8	       130	diff.c	FUNCTION_3	FOR_1
0x4000953	          0x83f808	                              cmp eax, 8	       130	diff.c	FUNCTION_3	FOR_1
0x4000956	            0x75ca	                           jne 0x4000922	       130	diff.c	FUNCTION_3	FOR_1
0x4000958	      0xba05000000	                              mov edx, 5	       139	diff.c	FUNCTION_3	CALL_4
0x400095d	      0xbe00000000	                              mov esi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x4000962	      0xbf00000000	                              mov edi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x4000967	      0xe800000000	                          call 0x400096c	       139	diff.c	FUNCTION_3	CALL_4
0x400096c	      0xbe08000000	                              mov esi, 8	       139	diff.c	FUNCTION_3	CALL_4
0x4000971	          0x4889c7	                            mov rdi, rax	       139	diff.c	FUNCTION_3	CALL_4
0x4000974	      0xe800000000	                          call 0x4000979	       139	diff.c	FUNCTION_3	CALL_4
0x4000979	              0x5b	                                 pop rbx	       140	diff.c	FUNCTION_3
0x400097a	              0xc3	                                     ret	       140	diff.c	FUNCTION_3
diff_redraw	FOR,0:WHILE,0:IF,5:SWITCH,0:ELSE,1:functions,0:CALL,6:DO,0	52
0x40007cc	              0x55	                                push rbp	       608	diff.c	FUNCTION_13
0x40007cd	              0x53	                                push rbx	       608	diff.c	FUNCTION_13
0x40007ce	        0x4883ec08	                              sub rsp, 8	       608	diff.c	FUNCTION_13
0x40007d2	            0x89fd	                            mov ebp, edi	       608	diff.c	FUNCTION_13
0x40007d4	    0x488b1d000000	            mov rbx, qword [0x040007db] 	       612	diff.c	FUNCTION_13	CALL_1
0x40007db	          0x4885db	                           test rbx, rbx	       612	diff.c	FUNCTION_13	CALL_1
0x40007de	     0xf8494000000	                            je 0x4000878	       612	diff.c	FUNCTION_13	CALL_1
0x40007e4	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	       613	diff.c	FUNCTION_13	IF_1
0x40007eb	            0x747e	                            je 0x400086b	       613	diff.c	FUNCTION_13	IF_1
0x40007ed	      0xbe23000000	                           mov esi, 0x23	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007f2	          0x4889df	                            mov rdi, rbx	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007f5	      0xe800000000	                          call 0x40007fa	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007fa	            0x85ed	                           test ebp, ebp	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x40007fc	            0x7414	                            je 0x4000812	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x40007fe	          0x4889df	                            mov rdi, rbx	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000801	      0xe800000000	                          call 0x4000806	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000806	            0x85c0	                           test eax, eax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000808	            0x7408	                            je 0x4000812	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400080a	          0x4889df	                            mov rdi, rbx	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x400080d	      0xe800000000	                          call 0x4000812	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4000812	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4000816	          0x4889df	                            mov rdi, rbx	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4000819	      0xe800000000	                          call 0x400081e	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x400081e	    0x48391d000000	            cmp qword [0x04000825], rbx 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000825	            0x7409	                            je 0x4000830	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000827	    0x83bb84000000	               cmp dword [rbx + 0x84], 0	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400082e	            0x7f04	                            jg 0x4000834	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000830	            0x85c0	                           test eax, eax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000832	            0x7e37	                           jle 0x400086b	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000834	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400083a	            0x39d0	                            cmp eax, edx	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400083c	            0x7d12	                           jge 0x4000850	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400083e	            0x85c0	                           test eax, eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000840	      0xba00000000	                              mov edx, 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000845	           0xf48c2	                          cmovs eax, edx	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000848	    0x898384000000	             mov dword [rbx + 0x84], eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400084e	            0xeb0e	                           jmp 0x400085e	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000850	            0x39d0	                            cmp eax, edx	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000852	            0x7e0a	                           jle 0x400085e	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000854	            0x85c0	                           test eax, eax	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000856	            0x7e06	                           jle 0x400085e	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000858	    0x898384000000	             mov dword [rbx + 0x84], eax	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x400085e	      0xbe00000000	                              mov esi, 0	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x4000863	          0x4889df	                            mov rdi, rbx	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x4000866	      0xe800000000	                          call 0x400086b	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400086b	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       612	diff.c	FUNCTION_13	CALL_1
0x400086f	          0x4885db	                           test rbx, rbx	       612	diff.c	FUNCTION_13	CALL_1
0x4000872	     0xf856cffffff	                           jne 0x40007e4	       612	diff.c	FUNCTION_13	CALL_1
0x4000878	        0x4883c408	                              add rsp, 8	       632	diff.c	FUNCTION_13
0x400087c	              0x5b	                                 pop rbx	       632	diff.c	FUNCTION_13
0x400087d	              0x5d	                                 pop rbp	       632	diff.c	FUNCTION_13
0x400087e	              0xc3	                                     ret	       632	diff.c	FUNCTION_13
diff_set_topline	FOR,2:WHILE,0:IF,16:SWITCH,0:ELSE,5:functions,0:CALL,7:DO,0	153
0x400244d	            0x4157	                                push r15	      1738	diff.c	FUNCTION_31
0x400244f	            0x4156	                                push r14	      1738	diff.c	FUNCTION_31
0x4002451	            0x4155	                                push r13	      1738	diff.c	FUNCTION_31
0x4002453	            0x4154	                                push r12	      1738	diff.c	FUNCTION_31
0x4002455	              0x55	                                push rbp	      1738	diff.c	FUNCTION_31
0x4002456	              0x53	                                push rbx	      1738	diff.c	FUNCTION_31
0x4002457	        0x4883ec18	                           sub rsp, 0x18	      1738	diff.c	FUNCTION_31
0x400245b	          0x4989ff	                            mov r15, rdi	      1738	diff.c	FUNCTION_31
0x400245e	          0x4989f5	                            mov r13, rsi	      1738	diff.c	FUNCTION_31
0x4002461	        0x488b4708	                mov rax, qword [rdi + 8]	      1739	diff.c	FUNCTION_31
0x4002465	      0x4889442408	                mov qword [rsp + 8], rax	      1739	diff.c	FUNCTION_31
0x400246a	          0x4889c7	                            mov rdi, rax	      1747	diff.c	FUNCTION_31	CALL_1
0x400246d	      0xe8cedbffff	                   call sym.diff_buf_idx	      1747	diff.c	FUNCTION_31	CALL_1
0x4002472	          0x83f808	                              cmp eax, 8	      1748	diff.c	FUNCTION_31	IF_1
0x4002475	     0xf8425020000	                            je 0x40026a0	      1748	diff.c	FUNCTION_31	IF_1
0x400247b	            0x89c5	                            mov ebp, eax	      1748	diff.c	FUNCTION_31	IF_1
0x400247d	        0x4d8b6778	            mov r12, qword [r15 + 0x78] 	      1740	diff.c	FUNCTION_31
0x4002481	    0x488b05000000	            mov rax, qword [0x04002488] 	      1751	diff.c	FUNCTION_31	IF_2
0x4002488	    0x83b8a0000000	               cmp dword [rax + 0xa0], 0	      1751	diff.c	FUNCTION_31	IF_2
0x400248f	            0x740a	                            je 0x400249b	      1751	diff.c	FUNCTION_31	IF_2
0x4002491	      0xbf00000000	                              mov edi, 0	      1752	diff.c	FUNCTION_31	CALL_2
0x4002496	      0xe800000000	                          call 0x400249b	      1752	diff.c	FUNCTION_31	CALL_2
0x400249b	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1754	diff.c	FUNCTION_31
0x40024a6	    0x4c8b35000000	            mov r14, qword [0x040024ad] 	      1757	diff.c	FUNCTION_31	FOR_1
0x40024ad	        0x498b5e58	            mov rbx, qword [r14 + 0x58] 	      1757	diff.c	FUNCTION_31	FOR_1
0x40024b1	          0x4885db	                           test rbx, rbx	      1757	diff.c	FUNCTION_31	FOR_1
0x40024b4	     0xf84bc010000	                            je 0x4002676	      1757	diff.c	FUNCTION_31	FOR_1
0x40024ba	          0x4863ed	                         movsxd rbp, ebp	      1757	diff.c	FUNCTION_31	FOR_1
0x40024bd	        0x48c1e503	                              shl rbp, 3	      1757	diff.c	FUNCTION_31	FOR_1
0x40024c1	      0x488b442b08	         mov rax, qword [rbx + rbp + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024c6	      0x4803442b48	       add rax, qword [rbx + rbp + 0x48]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024cb	          0x4939c4	                            cmp r12, rax	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024ce	            0x7f18	                            jg 0x40024e8	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024d0	      0xe9b9010000	                           jmp 0x400268e	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024d5	      0x488b442b08	         mov rax, qword [rbx + rbp + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024da	      0x4803442b48	       add rax, qword [rbx + rbp + 0x48]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024df	          0x4939c4	                            cmp r12, rax	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024e2	     0xf8ea6010000	                           jle 0x400268e	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40024e8	          0x488b1b	                    mov rbx, qword [rbx]	      1757	diff.c	FUNCTION_31	FOR_1
0x40024eb	          0x4885db	                           test rbx, rbx	      1757	diff.c	FUNCTION_31	FOR_1
0x40024ee	            0x75e5	                           jne 0x40024d5	      1757	diff.c	FUNCTION_31	FOR_1
0x40024f0	      0xe981010000	                           jmp 0x4002676	      1757	diff.c	FUNCTION_31	FOR_1
0x40024f5	            0x4898	                                    cdqe	      1757	diff.c	FUNCTION_31	FOR_1
0x40024f7	        0x4c8d04c3	                   lea r8, [rbx + rax*8]	      1757	diff.c	FUNCTION_31	FOR_1
0x40024fb	          0x4801dd	                            add rbp, rbx	      1757	diff.c	FUNCTION_31	FOR_1
0x40024fe	          0x4c89e7	                            mov rdi, r12	      1774	diff.c	FUNCTION_31	ELSE_1
0x4002501	        0x482b7d08	                sub rdi, qword [rbp + 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x4002505	        0x49037808	                 add rdi, qword [r8 + 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x4002509	        0x49897d78	             mov qword [r13 + 0x78], rdi	      1774	diff.c	FUNCTION_31	ELSE_1
0x400250d	        0x4c8b4d08	                 mov r9, qword [rbp + 8]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x4002511	          0x4d39cc	                             cmp r12, r9	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x4002514	     0xf8cdb000000	                            jl 0x40025f5	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x400251a	      0xb800000000	                              mov eax, 0	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x400251f	      0xba00000000	                              mov edx, 0	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x4002524	    0x49837c066000	         cmp qword [r14 + rax + 0x60], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400252a	            0x740e	                            je 0x400253a	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400252c	      0x488b4c0348	      mov rcx, qword [rbx + rax + 0x48] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4002531	          0x4863f2	                         movsxd rsi, edx	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4002534	          0x4839ce	                            cmp rsi, rcx	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4002537	           0xf4cd1	                          cmovl edx, ecx	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400253a	        0x4883c008	                              add rax, 8	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400253e	        0x4883f840	                           cmp rax, 0x40	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x4002542	            0x75e0	                           jne 0x4002524	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x4002544	        0x498b4048	              mov rax, qword [r8 + 0x48]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002548	        0x488b4d48	            mov rcx, qword [rbp + 0x48] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400254c	          0x4839c8	                            cmp rax, rcx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400254f	            0x7513	                           jne 0x4002564	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002551	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002558	    0x418985840000	             mov dword [r13 + 0x84], eax	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x400255f	      0xe991000000	                           jmp 0x40025f5	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002564	          0x4839c8	                            cmp rax, rcx	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4002567	            0x7e4a	                           jle 0x40025b3	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4002569	          0x4c01c9	                             add rcx, r9	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400256c	          0x4939cc	                            cmp r12, rcx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x400256f	     0xf8580000000	                           jne 0x40025f5	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002575	    0x418bb7840000	            mov esi, dword [r15 + 0x84] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x400257c	            0x89d1	                            mov ecx, edx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x400257e	            0x29f1	                            sub ecx, esi	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002580	          0x4863c9	                         movsxd rcx, ecx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002583	          0x4839c8	                            cmp rax, rcx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002586	            0x7f18	                            jg 0x40025a0	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002588	        0x49034008	                 add rax, qword [r8 + 8]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x400258c	        0x49894578	             mov qword [r13 + 0x78], rax	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002590	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002597	    0x418985840000	             mov dword [r13 + 0x84], eax	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x400259e	            0xeb55	                           jmp 0x40025f5	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x40025a0	          0x4863c2	                         movsxd rax, edx	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025a3	        0x49034008	                 add rax, qword [r8 + 8]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025a7	          0x4863f6	                         movsxd rsi, esi	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025aa	          0x4829f0	                            sub rax, rsi	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025ad	        0x49894578	             mov qword [r13 + 0x78], rax	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025b1	            0xeb42	                           jmp 0x40025f5	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x40025b3	        0x49034008	                 add rax, qword [r8 + 8]	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x40025b7	          0x4839c7	                            cmp rdi, rax	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x40025ba	            0x7c39	                            jl 0x40025f5	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x40025bc	        0x49894578	             mov qword [r13 + 0x78], rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x40025c0	    0xf60500000000	               test byte [0x040025c7], 1	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x40025c7	            0x742c	                            je 0x40025f5	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x40025c9	        0x488b4508	                mov rax, qword [rbp + 8]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025cd	          0x4889c1	                            mov rcx, rax	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025d0	        0x48034d48	             add rcx, qword [rbp + 0x48]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025d4	          0x4939cc	                            cmp r12, rcx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025d7	            0x7510	                           jne 0x40025e9	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025d9	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025e0	    0x418985840000	             mov dword [r13 + 0x84], eax	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025e7	            0xeb0c	                           jmp 0x40025f5	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x40025e9	          0x4429e0	                           sub eax, r12d	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x40025ec	             0x1c2	                            add edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x40025ee	    0x418995840000	             mov dword [r13 + 0x84], edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x40025f5	    0x41c7858c0000	               mov dword [r13 + 0x8c], 0	      1830	diff.c	FUNCTION_31	ELSE_5
0x4002600	        0x498b4508	                mov rax, qword [r13 + 8]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002604	          0x488b00	                    mov rax, qword [rax]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002607	        0x49394578	            cmp qword [r13 + 0x78], rax 	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400260b	            0x7e0f	                           jle 0x400261c	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400260d	        0x49894578	             mov qword [r13 + 0x78], rax	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002611	    0x41c7858c0000	               mov dword [r13 + 0x8c], 1	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400261c	      0x49837d7800	               cmp qword [r13 + 0x78], 0	      1836	diff.c	FUNCTION_31	IF_16
0x4002621	            0x7f13	                            jg 0x4002636	      1836	diff.c	FUNCTION_31	IF_16
0x4002623	    0x49c745780100	               mov qword [r13 + 0x78], 1	      1838	diff.c	FUNCTION_31	IF_16
0x400262b	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1839	diff.c	FUNCTION_31	IF_16
0x4002636	          0x4c89ef	                            mov rdi, r13	      1843	diff.c	FUNCTION_31	CALL_4
0x4002639	      0xe800000000	                          call 0x400263e	      1843	diff.c	FUNCTION_31	CALL_4
0x400263e	          0x4c89ef	                            mov rdi, r13	      1844	diff.c	FUNCTION_31	CALL_5
0x4002641	      0xe800000000	                          call 0x4002646	      1844	diff.c	FUNCTION_31	CALL_5
0x4002646	      0xbe00000000	                              mov esi, 0	      1846	diff.c	FUNCTION_31	CALL_6
0x400264b	          0x4c89ef	                            mov rdi, r13	      1846	diff.c	FUNCTION_31	CALL_6
0x400264e	      0xe800000000	                          call 0x4002653	      1846	diff.c	FUNCTION_31	CALL_6
0x4002653	        0x498d5578	                   lea rdx, [r13 + 0x78]	      1848	diff.c	FUNCTION_31	CALL_7
0x4002657	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1848	diff.c	FUNCTION_31	CALL_7
0x400265b	    0x41b900000000	                              mov r9d, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x4002661	    0x41b801000000	                              mov r8d, 1	      1848	diff.c	FUNCTION_31	CALL_7
0x4002667	      0xb900000000	                              mov ecx, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x400266c	          0x4c89ef	                            mov rdi, r13	      1848	diff.c	FUNCTION_31	CALL_7
0x400266f	      0xe800000000	                          call 0x4002674	      1848	diff.c	FUNCTION_31	CALL_7
0x4002674	            0xeb2a	                           jmp 0x40026a0	      1848	diff.c	FUNCTION_31	CALL_7
0x4002676	        0x498b4508	                mov rax, qword [r13 + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x400267a	      0x488b542408	                mov rdx, qword [rsp + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x400267f	          0x4c2b22	                    sub r12, qword [rdx]	      1764	diff.c	FUNCTION_31	IF_4
0x4002682	          0x4c0320	                    add r12, qword [rax]	      1764	diff.c	FUNCTION_31	IF_4
0x4002685	        0x4d896578	             mov qword [r13 + 0x78], r12	      1764	diff.c	FUNCTION_31	IF_4
0x4002689	      0xe967ffffff	                           jmp 0x40025f5	      1764	diff.c	FUNCTION_31	IF_4
0x400268e	        0x498b7d08	                mov rdi, qword [r13 + 8]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4002692	      0xe8a9d9ffff	                   call sym.diff_buf_idx	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4002697	          0x83f808	                              cmp eax, 8	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x400269a	     0xf8555feffff	                           jne 0x40024f5	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x40026a0	        0x4883c418	                           add rsp, 0x18	      1851	diff.c	FUNCTION_31
0x40026a4	              0x5b	                                 pop rbx	      1851	diff.c	FUNCTION_31
0x40026a5	              0x5d	                                 pop rbp	      1851	diff.c	FUNCTION_31
0x40026a6	            0x415c	                                 pop r12	      1851	diff.c	FUNCTION_31
0x40026a8	            0x415d	                                 pop r13	      1851	diff.c	FUNCTION_31
0x40026aa	            0x415e	                                 pop r14	      1851	diff.c	FUNCTION_31
0x40026ac	            0x415f	                                 pop r15	      1851	diff.c	FUNCTION_31
0x40026ae	              0xc3	                                     ret	      1851	diff.c	FUNCTION_31
set_diff_option	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,1:DO,0	17
0x4000524	              0x53	                                push rbx	      1134	diff.c	FUNCTION_20
0x4000525	    0x488b1d000000	            mov rbx, qword [0x0400052c] 	      1135	diff.c	FUNCTION_20
0x400052c	    0x48893d000000	            mov qword [0x04000533], rdi 	      1137	diff.c	FUNCTION_20
0x4000533	        0x488b4708	                mov rax, qword [rdi + 8]	      1138	diff.c	FUNCTION_20
0x4000537	    0x488905000000	            mov qword [0x0400053e], rax 	      1138	diff.c	FUNCTION_20
0x400053e	    0x830500000000	               add dword [0x04000545], 1	      1139	diff.c	FUNCTION_20
0x4000545	          0x4863f6	                         movsxd rsi, esi	      1140	diff.c	FUNCTION_20	CALL_1
0x4000548	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x400054d	      0xba00000000	                              mov edx, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x4000552	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x4000557	      0xe800000000	                          call 0x400055c	      1140	diff.c	FUNCTION_20	CALL_1
0x400055c	    0x832d00000000	               sub dword [0x04000563], 1	      1141	diff.c	FUNCTION_20
0x4000563	    0x48891d000000	            mov qword [0x0400056a], rbx 	      1142	diff.c	FUNCTION_20
0x400056a	        0x488b4308	                mov rax, qword [rbx + 8]	      1143	diff.c	FUNCTION_20
0x400056e	    0x488905000000	            mov qword [0x04000575], rax 	      1143	diff.c	FUNCTION_20
0x4000575	              0x5b	                                 pop rbx	      1144	diff.c	FUNCTION_20
0x4000576	              0xc3	                                     ret	      1144	diff.c	FUNCTION_20
diff_buf_delete	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,1:CALL,0:DO,0	38
0x400087f	              0x55	                                push rbp	        65	diff.c	FUNCTION_1
0x4000880	              0x53	                                push rbx	        65	diff.c	FUNCTION_1
0x4000881	        0x4883ec08	                              sub rsp, 8	        65	diff.c	FUNCTION_1
0x4000885	          0x4889fd	                            mov rbp, rdi	        65	diff.c	FUNCTION_1
0x4000888	    0x488b1d000000	            mov rbx, qword [0x0400088f] 	        69	diff.c	FUNCTION_1
0x400088f	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x4000892	            0x7551	                           jne 0x40008e5	        69	diff.c	FUNCTION_1
0x4000894	            0xeb60	                           jmp 0x40008f6	        69	diff.c	FUNCTION_1
0x4000896	          0x483b2a	                    cmp rbp, qword [rdx]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4000899	            0x740e	                            je 0x40008a9	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400089b	          0x83c001	                              add eax, 1	       183	diff.c	FUNCTION_6	FOR_1
0x400089e	        0x4883c208	                              add rdx, 8	       183	diff.c	FUNCTION_6	FOR_1
0x40008a2	          0x83f808	                              cmp eax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x40008a5	            0x75ef	                           jne 0x4000896	       183	diff.c	FUNCTION_6	FOR_1
0x40008a7	            0xeb34	                           jmp 0x40008dd	       183	diff.c	FUNCTION_6	FOR_1
0x40008a9	          0x83f808	                              cmp eax, 8	        72	diff.c	IF_1
0x40008ac	            0x7507	                           jne 0x40008b5	        72	diff.c	IF_1
0x40008ae	            0xeb2d	                           jmp 0x40008dd	        72	diff.c	IF_1
0x40008b0	      0xb800000000	                              mov eax, 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008b5	            0x4898	                                    cdqe	        74	diff.c	IF_1
0x40008b7	    0x48c744c36000	       mov qword [rbx + rax*8 + 0x60], 0	        74	diff.c	IF_1
0x40008c0	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	        75	diff.c	IF_1
0x40008ca	    0x48391d000000	            cmp qword [0x040008d1], rbx 	        76	diff.c	IF_1	IF_2
0x40008d1	            0x750a	                           jne 0x40008dd	        76	diff.c	IF_1	IF_2
0x40008d3	      0xbf01000000	                              mov edi, 1	        77	diff.c	IF_1	CALL_2
0x40008d8	      0xe8effeffff	                    call sym.diff_redraw	        77	diff.c	IF_1	CALL_2
0x40008dd	          0x488b1b	                    mov rbx, qword [rbx]	        69	diff.c	FUNCTION_1
0x40008e0	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x40008e3	            0x7411	                            je 0x40008f6	        69	diff.c	FUNCTION_1
0x40008e5	        0x483b6b60	            cmp rbp, qword [rbx + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008e9	            0x74c5	                            je 0x40008b0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008eb	        0x488d5368	                   lea rdx, [rbx + 0x68]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008ef	      0xb801000000	                              mov eax, 1	       183	diff.c	FUNCTION_6	FOR_1
0x40008f4	            0xeba0	                           jmp 0x4000896	       183	diff.c	FUNCTION_6	FOR_1
0x40008f6	        0x4883c408	                              add rsp, 8	        80	diff.c	FUNCTION_1
0x40008fa	              0x5b	                                 pop rbx	        80	diff.c	FUNCTION_1
0x40008fb	              0x5d	                                 pop rbp	        80	diff.c	FUNCTION_1
0x40008fc	              0xc3	                                     ret	        80	diff.c	FUNCTION_1
diff_equal_char	FOR,0:WHILE,0:IF,4:SWITCH,0:ELSE,1:functions,0:CALL,7:DO,0	68
0x40000a8	            0x4155	                                push r13	      1645	diff.c	FUNCTION_28
0x40000aa	            0x4154	                                push r12	      1645	diff.c	FUNCTION_28
0x40000ac	              0x55	                                push rbp	      1645	diff.c	FUNCTION_28
0x40000ad	              0x53	                                push rbx	      1645	diff.c	FUNCTION_28
0x40000ae	        0x4883ec08	                              sub rsp, 8	      1645	diff.c	FUNCTION_28
0x40000b2	          0x4989fc	                            mov r12, rdi	      1645	diff.c	FUNCTION_28
0x40000b5	          0x4889f5	                            mov rbp, rsi	      1645	diff.c	FUNCTION_28
0x40000b8	          0x4989d5	                            mov r13, rdx	      1645	diff.c	FUNCTION_28
0x40000bb	    0xff1500000000	                 call qword [0x040000c1]	      1647	diff.c	FUNCTION_28
0x40000c1	            0x89c3	                            mov ebx, eax	      1647	diff.c	FUNCTION_28
0x40000c3	          0x4889ef	                            mov rdi, rbp	      1649	diff.c	FUNCTION_28	IF_1
0x40000c6	    0xff1500000000	                 call qword [0x040000cc]	      1649	diff.c	FUNCTION_28	IF_1
0x40000cc	      0xba00000000	                              mov edx, 0	      1650	diff.c	FUNCTION_28	IF_1
0x40000d1	            0x39c3	                            cmp ebx, eax	      1649	diff.c	FUNCTION_28	IF_1
0x40000d3	     0xf85a9000000	                           jne 0x4000182	      1649	diff.c	FUNCTION_28	IF_1
0x40000d9	          0x83fb01	                              cmp ebx, 1	      1651	diff.c	FUNCTION_28	IF_2
0x40000dc	            0x7e61	                           jle 0x400013f	      1651	diff.c	FUNCTION_28	IF_2
0x40000de	          0x4863d3	                         movsxd rdx, ebx	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000e1	          0x4889ee	                            mov rsi, rbp	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000e4	          0x4c89e7	                            mov rdi, r12	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000e7	      0xe800000000	                          call 0x40000ec	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000ec	            0x85c0	                           test eax, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000ee	            0x7444	                            je 0x4000134	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x40000f0	    0x8b1500000000	            mov edx, dword [0x040000f6] 	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40000f6	            0x85d2	                           test edx, edx	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40000f8	     0xf8484000000	                            je 0x4000182	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x40000fe	    0x8b1500000000	            mov edx, dword [0x04000104] 	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4000104	          0x83e202	                              and edx, 2	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4000107	            0x7479	                            je 0x4000182	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x4000109	          0x4c89e7	                            mov rdi, r12	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x400010c	      0xe800000000	                          call 0x4000111	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4000111	            0x89c7	                            mov edi, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4000113	      0xe800000000	                          call 0x4000118	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4000118	          0x4189c4	                           mov r12d, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x400011b	          0x4889ef	                            mov rdi, rbp	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x400011e	      0xe800000000	                          call 0x4000123	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x4000123	            0x89c7	                            mov edi, eax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x4000125	      0xe800000000	                          call 0x400012a	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x400012a	      0xba00000000	                              mov edx, 0	      1658	diff.c	FUNCTION_28	IF_2	IF_3
0x400012f	          0x4139c4	                           cmp r12d, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4000132	            0x754e	                           jne 0x4000182	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x4000134	        0x41895d00	                    mov dword [r13], ebx	      1659	diff.c	FUNCTION_28	IF_2
0x4000138	      0xba01000000	                              mov edx, 1	      1670	diff.c	FUNCTION_28
0x400013d	            0xeb43	                           jmp 0x4000182	      1670	diff.c	FUNCTION_28
0x400013f	      0x450fb62424	                  movzx r12d, byte [r12]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4000144	         0xfb65d00	                   movzx ebx, byte [rbp]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4000148	          0x4138dc	                            cmp r12b, bl	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400014b	            0x7428	                            je 0x4000175	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400014d	    0x8b1500000000	            mov edx, dword [0x04000153] 	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4000153	          0x83e202	                              and edx, 2	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4000156	            0x742a	                            je 0x4000182	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x4000158	      0xe800000000	                          call 0x400015d	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400015d	          0x488b00	                    mov rax, qword [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000160	        0x450fb6e4	                        movzx r12d, r12b	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000164	           0xfb6db	                           movzx ebx, bl	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000167	      0xba00000000	                              mov edx, 0	      1667	diff.c	FUNCTION_28	ELSE_1	IF_4
0x400016c	          0x8b0c98	            mov ecx, dword [rax + rbx*4]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400016f	        0x42390ca0	           cmp dword [rax + r12*4], ecx 	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000173	            0x750d	                           jne 0x4000182	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000175	    0x41c745000100	                      mov dword [r13], 1	      1668	diff.c	FUNCTION_28	ELSE_1
0x400017d	      0xba01000000	                              mov edx, 1	      1670	diff.c	FUNCTION_28
0x4000182	            0x89d0	                            mov eax, edx	      1671	diff.c	FUNCTION_28
0x4000184	        0x4883c408	                              add rsp, 8	      1671	diff.c	FUNCTION_28
0x4000188	              0x5b	                                 pop rbx	      1671	diff.c	FUNCTION_28
0x4000189	              0x5d	                                 pop rbp	      1671	diff.c	FUNCTION_28
0x400018a	            0x415c	                                 pop r12	      1671	diff.c	FUNCTION_28
0x400018c	            0x415d	                                 pop r13	      1671	diff.c	FUNCTION_28
0x400018e	              0xc3	                                     ret	      1671	diff.c	FUNCTION_28
ex_diffsplit	FOR,0:WHILE,0:IF,4:SWITCH,0:ELSE,0:functions,0:CALL,11:DO,0	62
0x4003aff	              0x55	                                push rbp	      1080	diff.c	FUNCTION_18
0x4003b00	              0x53	                                push rbx	      1080	diff.c	FUNCTION_18
0x4003b01	        0x4883ec28	                           sub rsp, 0x28	      1080	diff.c	FUNCTION_18
0x4003b05	          0x4889fd	                            mov rbp, rdi	      1080	diff.c	FUNCTION_18
0x4003b08	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	diff.c	FUNCTION_18
0x4003b11	      0x4889442418	             mov qword [rsp + 0x18], rax	      1080	diff.c	FUNCTION_18
0x4003b16	            0x31c0	                            xor eax, eax	      1080	diff.c	FUNCTION_18
0x4003b18	    0x488b1d000000	            mov rbx, qword [0x04003b1f] 	      1081	diff.c	FUNCTION_18
0x4003b1f	    0x488b35000000	            mov rsi, qword [0x04003b26] 	      1084	diff.c	FUNCTION_18	CALL_1
0x4003b26	          0x4889e7	                            mov rdi, rsp	      1084	diff.c	FUNCTION_18	CALL_1
0x4003b29	      0xe800000000	                          call 0x4003b2e	      1084	diff.c	FUNCTION_18	CALL_1
0x4003b2e	    0xc70500000000	               mov dword [0x04003b38], 1	      1086	diff.c	FUNCTION_18
0x4003b38	      0xe800000000	                          call 0x4003b3d	      1089	diff.c	FUNCTION_18	CALL_2
0x4003b3d	    0x488b3d000000	            mov rdi, qword [0x04003b44] 	      1090	diff.c	FUNCTION_18	CALL_3
0x4003b44	      0xe800000000	                          call 0x4003b49	      1090	diff.c	FUNCTION_18	CALL_3
0x4003b49	    0xc70500000000	               mov dword [0x04003b53], 0	      1093	diff.c	FUNCTION_18
0x4003b53	    0x8b3500000000	            mov esi, dword [0x04003b59] 	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b59	          0x83e610	                           and esi, 0x10	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b5c	      0xb802000000	                              mov eax, 2	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b61	           0xf45f0	                         cmovne esi, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b64	      0xbf00000000	                              mov edi, 0	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b69	      0xe800000000	                          call 0x4003b6e	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b6e	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b70	     0xf8488000000	                            je 0x4003bfe	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4003b76	    0xc745209a0100	          mov dword [rbp + 0x20], 0x19a 	      1098	diff.c	FUNCTION_18	IF_1
0x4003b7d	    0x488b05000000	            mov rax, qword [0x04003b84] 	      1099	diff.c	FUNCTION_18	IF_1
0x4003b84	    0xc780c0010000	              mov dword [rax + 0x1c0], 1	      1099	diff.c	FUNCTION_18	IF_1
0x4003b8e	          0x4889de	                            mov rsi, rbx	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4003b91	          0x4889ef	                            mov rdi, rbp	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4003b94	      0xe800000000	                          call 0x4003b99	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4003b99	    0x488b3d000000	            mov rdi, qword [0x04003ba0] 	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4003ba0	          0x4839fb	                            cmp rbx, rdi	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4003ba3	            0x7459	                            je 0x4003bfe	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x4003ba5	      0xbe01000000	                              mov esi, 1	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4003baa	      0xe800000000	                          call 0x4003baf	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4003baf	          0x4889df	                            mov rdi, rbx	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4003bb2	      0xe800000000	                          call 0x4003bb7	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4003bb7	            0x85c0	                           test eax, eax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4003bb9	            0x7431	                            je 0x4003bec	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4003bbb	      0xbe01000000	                              mov esi, 1	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4003bc0	          0x4889df	                            mov rdi, rbx	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4003bc3	      0xe800000000	                          call 0x4003bc8	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x4003bc8	          0x4889e7	                            mov rdi, rsp	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4003bcb	      0xe800000000	                          call 0x4003bd0	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4003bd0	            0x85c0	                           test eax, eax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4003bd2	            0x7418	                            je 0x4003bec	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x4003bd4	    0x488b2d000000	            mov rbp, qword [0x04003bdb] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4003bdb	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4003bdf	        0x488b3c24	                    mov rdi, qword [rsp]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4003be3	      0xe800000000	                          call 0x4003be8	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4003be8	        0x48894538	            mov qword [rbp + 0x38], rax 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x4003bec	    0x488b3d000000	            mov rdi, qword [0x04003bf3] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4003bf3	    0x8bb7a0000000	            mov esi, dword [rdi + 0xa0] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4003bf9	      0xe800000000	                          call 0x4003bfe	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4003bfe	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1120	diff.c	FUNCTION_18
0x4003c03	    0x644833042528	                xor rax, qword fs:[0x28]	      1120	diff.c	FUNCTION_18
0x4003c0c	            0x7405	                            je 0x4003c13	      1120	diff.c	FUNCTION_18
0x4003c0e	      0xe800000000	                          call 0x4003c13	      1120	diff.c	FUNCTION_18
0x4003c13	        0x4883c428	                           add rsp, 0x28	      1120	diff.c	FUNCTION_18
0x4003c17	              0x5b	                                 pop rbx	      1120	diff.c	FUNCTION_18
0x4003c18	              0x5d	                                 pop rbp	      1120	diff.c	FUNCTION_18
0x4003c19	              0xc3	                                     ret	      1120	diff.c	FUNCTION_18
diffopt_hiddenoff	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,0:DO,0	4
0x400290f	    0x8b0500000000	            mov eax, dword [0x04002915] 	      1951	diff.c	FUNCTION_34
0x4002915	          0xc1e805	                              shr eax, 5	      1951	diff.c	FUNCTION_34
0x4002918	          0x83e001	                              and eax, 1	      1951	diff.c	FUNCTION_34
0x400291b	              0xc3	                                     ret	      1952	diff.c	FUNCTION_34
diff_lnum_win	FOR,1:WHILE,0:IF,6:SWITCH,0:ELSE,0:functions,0:CALL,3:DO,0	69
0x4003c1a	            0x4155	                                push r13	      2652	diff.c	FUNCTION_44
0x4003c1c	            0x4154	                                push r12	      2652	diff.c	FUNCTION_44
0x4003c1e	              0x55	                                push rbp	      2652	diff.c	FUNCTION_44
0x4003c1f	              0x53	                                push rbx	      2652	diff.c	FUNCTION_44
0x4003c20	        0x4883ec08	                              sub rsp, 8	      2652	diff.c	FUNCTION_44
0x4003c24	          0x4889fd	                            mov rbp, rdi	      2652	diff.c	FUNCTION_44
0x4003c27	          0x4989f5	                            mov r13, rsi	      2652	diff.c	FUNCTION_44
0x4003c2a	    0x488b3d000000	            mov rdi, qword [0x04003c31] 	      2658	diff.c	FUNCTION_44	CALL_1
0x4003c31	      0xe80ac4ffff	                   call sym.diff_buf_idx	      2658	diff.c	FUNCTION_44	CALL_1
0x4003c36	          0x83f808	                              cmp eax, 8	      2659	diff.c	FUNCTION_44	IF_1
0x4003c39	     0xf8486000000	                            je 0x4003cc5	      2659	diff.c	FUNCTION_44	IF_1
0x4003c3f	          0x4189c4	                           mov r12d, eax	      2659	diff.c	FUNCTION_44	IF_1
0x4003c42	    0x488b05000000	            mov rax, qword [0x04003c49] 	      2662	diff.c	FUNCTION_44	IF_2
0x4003c49	    0x83b8a0000000	               cmp dword [rax + 0xa0], 0	      2662	diff.c	FUNCTION_44	IF_2
0x4003c50	            0x740a	                            je 0x4003c5c	      2662	diff.c	FUNCTION_44	IF_2
0x4003c52	      0xbf00000000	                              mov edi, 0	      2663	diff.c	FUNCTION_44	CALL_2
0x4003c57	      0xe800000000	                          call 0x4003c5c	      2663	diff.c	FUNCTION_44	CALL_2
0x4003c5c	    0x488b05000000	            mov rax, qword [0x04003c63] 	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c63	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c67	          0x4885db	                           test rbx, rbx	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c6a	            0x7467	                            je 0x4003cd3	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c6c	          0x4963d4	                        movsxd rdx, r12d	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c6f	        0x48c1e203	                              shl rdx, 3	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c73	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c78	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c7d	          0x4839c5	                            cmp rbp, rax	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c80	            0x7f11	                            jg 0x4003c93	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c82	            0xeb65	                           jmp 0x4003ce9	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c84	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c89	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c8e	          0x4839e8	                            cmp rax, rbp	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c91	            0x7d56	                           jge 0x4003ce9	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003c93	          0x488b1b	                    mov rbx, qword [rbx]	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c96	          0x4885db	                           test rbx, rbx	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c99	            0x75e9	                           jne 0x4003c84	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c9b	            0xeb36	                           jmp 0x4003cd3	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c9d	            0x4898	                                    cdqe	      2666	diff.c	FUNCTION_44	FOR_1
0x4003c9f	        0x488d0cc3	                  lea rcx, [rbx + rax*8]	      2666	diff.c	FUNCTION_44	FOR_1
0x4003ca3	        0x488b5108	                mov rdx, qword [rcx + 8]	      2680	diff.c	FUNCTION_44
0x4003ca7	          0x4d63e4	                        movsxd r12, r12d	      2680	diff.c	FUNCTION_44
0x4003caa	          0x4889d0	                            mov rax, rdx	      2680	diff.c	FUNCTION_44
0x4003cad	      0x4a2b44e308	        sub rax, qword [rbx + r12*8 + 8]	      2680	diff.c	FUNCTION_44
0x4003cb2	          0x4801c5	                            add rbp, rax	      2680	diff.c	FUNCTION_44
0x4003cb5	          0x4889d0	                            mov rax, rdx	      2680	diff.c	FUNCTION_44
0x4003cb8	        0x48034148	             add rax, qword [rcx + 0x48]	      2680	diff.c	FUNCTION_44
0x4003cbc	          0x4839c5	                            cmp rbp, rax	      2680	diff.c	FUNCTION_44
0x4003cbf	        0x480f4ec5	                         cmovle rax, rbp	      2680	diff.c	FUNCTION_44
0x4003cc3	            0xeb34	                           jmp 0x4003cf9	      2680	diff.c	FUNCTION_44
0x4003cc5	      0xb800000000	                              mov eax, 0	      2660	diff.c	FUNCTION_44	IF_1
0x4003cca	            0xeb2d	                           jmp 0x4003cf9	      2660	diff.c	FUNCTION_44	IF_1
0x4003ccc	      0xb800000000	                              mov eax, 0	      2678	diff.c	FUNCTION_44	IF_5
0x4003cd1	            0xeb26	                           jmp 0x4003cf9	      2678	diff.c	FUNCTION_44	IF_5
0x4003cd3	        0x498b4508	                mov rax, qword [r13 + 8]	      2672	diff.c	FUNCTION_44	IF_4
0x4003cd7	    0x488b15000000	            mov rdx, qword [0x04003cde] 	      2672	diff.c	FUNCTION_44	IF_4
0x4003cde	          0x482b2a	                    sub rbp, qword [rdx]	      2672	diff.c	FUNCTION_44	IF_4
0x4003ce1	          0x480328	                    add rbp, qword [rax]	      2672	diff.c	FUNCTION_44	IF_4
0x4003ce4	          0x4889e8	                            mov rax, rbp	      2672	diff.c	FUNCTION_44	IF_4
0x4003ce7	            0xeb10	                           jmp 0x4003cf9	      2672	diff.c	FUNCTION_44	IF_4
0x4003ce9	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2676	diff.c	FUNCTION_44	CALL_3
0x4003ced	      0xe84ec3ffff	                   call sym.diff_buf_idx	      2676	diff.c	FUNCTION_44	CALL_3
0x4003cf2	          0x83f808	                              cmp eax, 8	      2677	diff.c	FUNCTION_44	IF_5
0x4003cf5	            0x75a6	                           jne 0x4003c9d	      2677	diff.c	FUNCTION_44	IF_5
0x4003cf7	            0xebd3	                           jmp 0x4003ccc	      2677	diff.c	FUNCTION_44	IF_5
0x4003cf9	        0x4883c408	                              add rsp, 8	      2684	diff.c	FUNCTION_44
0x4003cfd	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4003cfe	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4003cff	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4003d01	            0x415d	                                 pop r13	      2684	diff.c	FUNCTION_44
0x4003d03	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
diff_mode_buf	FOR,0:WHILE,0:IF,1:SWITCH,0:ELSE,0:functions,0:CALL,2:DO,0	28
0x4003841	    0x488b0d000000	            mov rcx, qword [0x04003848] 	      2509	diff.c	FUNCTION_40	CALL_1
0x4003848	          0x4885c9	                           test rcx, rcx	      2509	diff.c	FUNCTION_40	CALL_1
0x400384b	            0x7526	                           jne 0x4003873	      2509	diff.c	FUNCTION_40	CALL_1
0x400384d	      0xb800000000	                              mov eax, 0	      2512	diff.c	FUNCTION_40
0x4003852	              0xc3	                                     ret	      2512	diff.c	FUNCTION_40
0x4003853	          0x483b38	                    cmp rdi, qword [rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003856	            0x740e	                            je 0x4003866	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003858	          0x83c201	                              add edx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x400385b	        0x4883c008	                              add rax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x400385f	          0x83fa08	                              cmp edx, 8	       183	diff.c	FUNCTION_6	FOR_1
0x4003862	            0x75ef	                           jne 0x4003853	       183	diff.c	FUNCTION_6	FOR_1
0x4003864	            0xeb05	                           jmp 0x400386b	       183	diff.c	FUNCTION_6	FOR_1
0x4003866	          0x83fa08	                              cmp edx, 8	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x4003869	            0x7519	                           jne 0x4003884	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x400386b	          0x488b09	                    mov rcx, qword [rcx]	      2509	diff.c	FUNCTION_40	CALL_1
0x400386e	          0x4885c9	                           test rcx, rcx	      2509	diff.c	FUNCTION_40	CALL_1
0x4003871	            0x7417	                            je 0x400388a	      2509	diff.c	FUNCTION_40	CALL_1
0x4003873	        0x483b7960	            cmp rdi, qword [rcx + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003877	            0x7417	                            je 0x4003890	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003879	        0x488d4168	                   lea rax, [rcx + 0x68]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400387d	      0xba01000000	                              mov edx, 1	       183	diff.c	FUNCTION_6	FOR_1
0x4003882	            0xebcf	                           jmp 0x4003853	       183	diff.c	FUNCTION_6	FOR_1
0x4003884	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x4003889	              0xc3	                                     ret	      2511	diff.c	FUNCTION_40	IF_1
0x400388a	      0xb800000000	                              mov eax, 0	      2512	diff.c	FUNCTION_40
0x400388f	              0xc3	                                     ret	      2512	diff.c	FUNCTION_40
0x4003890	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x4003895	              0xc3	                                     ret	      2513	diff.c	FUNCTION_40
diff_buf_adjust	FOR,0:WHILE,0:IF,4:SWITCH,0:ELSE,1:functions,0:CALL,4:DO,0	32
0x40010f7	        0x4883ec08	                              sub rsp, 8	        88	diff.c	FUNCTION_2
0x40010fb	    0x83bfc0010000	              cmp dword [rdi + 0x1c0], 0	        92	diff.c	FUNCTION_2	IF_1
0x4001102	            0x7565	                           jne 0x4001169	        92	diff.c	FUNCTION_2	IF_1
0x4001104	    0x488b05000000	            mov rax, qword [0x0400110b] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400110b	          0x4885c0	                           test rax, rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400110e	            0x7423	                            je 0x4001133	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4001110	        0x488b5708	                mov rdx, qword [rdi + 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4001114	        0x48395008	                cmp qword [rax + 8], rdx	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4001118	            0x7509	                           jne 0x4001123	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x400111a	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4001121	            0x750b	                           jne 0x400112e	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x4001123	        0x488b4020	            mov rax, qword [rax + 0x20] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4001127	          0x4885c0	                           test rax, rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400112a	            0x75e8	                           jne 0x4001114	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400112c	            0xeb05	                           jmp 0x4001133	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400112e	          0x4885c0	                           test rax, rax	        99	diff.c	FUNCTION_2	IF_1	IF_3
0x4001131	            0x753f	                           jne 0x4001172	        99	diff.c	FUNCTION_2	IF_1	IF_3
0x4001133	        0x488b7f08	                mov rdi, qword [rdi + 8]	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x4001137	      0xe804efffff	                   call sym.diff_buf_idx	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x400113c	          0x83f808	                              cmp eax, 8	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x400113f	            0x7431	                            je 0x4001172	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4001141	    0x488b15000000	            mov rdx, qword [0x04001148] 	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4001148	            0x4898	                                    cdqe	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x400114a	    0x48c744c26000	       mov qword [rdx + rax*8 + 0x60], 0	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4001153	    0xc782a0000000	               mov dword [rdx + 0xa0], 1	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x400115d	      0xbf01000000	                              mov edi, 1	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4001162	      0xe865f6ffff	                    call sym.diff_redraw	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4001167	            0xeb09	                           jmp 0x4001172	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4001169	        0x488b7f08	                mov rdi, qword [rdi + 8]	       111	diff.c	FUNCTION_2	CALL_4
0x400116d	      0xe800000000	                          call 0x4001172	       111	diff.c	FUNCTION_2	CALL_4
0x4001172	        0x4883c408	                              add rsp, 8	       112	diff.c	FUNCTION_2
0x4001176	              0xc3	                                     ret	       112	diff.c	FUNCTION_2
diff_check_fill	FOR,0:WHILE,0:IF,2:SWITCH,0:ELSE,0:functions,0:CALL,1:DO,0	10
0x4002429	    0x8b0500000000	            mov eax, dword [0x0400242f] 	      1724	diff.c	FUNCTION_30	IF_1
0x400242f	          0x83e001	                              and eax, 1	      1724	diff.c	FUNCTION_30	IF_1
0x4002432	            0x7417	                            je 0x400244b	      1724	diff.c	FUNCTION_30	IF_1
0x4002434	        0x4883ec08	                              sub rsp, 8	      1720	diff.c	FUNCTION_30
0x4002438	      0xe800000000	                          call 0x400243d	      1726	diff.c	FUNCTION_30	CALL_1
0x400243d	            0x85c0	                           test eax, eax	      1726	diff.c	FUNCTION_30	CALL_1
0x400243f	      0xba00000000	                              mov edx, 0	      1726	diff.c	FUNCTION_30	CALL_1
0x4002444	           0xf48c2	                          cmovs eax, edx	      1726	diff.c	FUNCTION_30	CALL_1
0x4002447	        0x4883c408	                              add rsp, 8	      1730	diff.c	FUNCTION_30
0x400244b	            0xf3c3	                                     ret	      1730	diff.c	FUNCTION_30
diff_move_to	FOR,1:WHILE,1:IF,8:SWITCH,0:ELSE,0:functions,0:CALL,3:DO,0	78
0x4003896	            0x4155	                                push r13	      2521	diff.c	FUNCTION_41
0x4003898	            0x4154	                                push r12	      2521	diff.c	FUNCTION_41
0x400389a	              0x55	                                push rbp	      2521	diff.c	FUNCTION_41
0x400389b	              0x53	                                push rbx	      2521	diff.c	FUNCTION_41
0x400389c	        0x4883ec08	                              sub rsp, 8	      2521	diff.c	FUNCTION_41
0x40038a0	            0x89fb	                            mov ebx, edi	      2521	diff.c	FUNCTION_41
0x40038a2	          0x4989f4	                            mov r12, rsi	      2521	diff.c	FUNCTION_41
0x40038a5	    0x488b3d000000	            mov rdi, qword [0x040038ac] 	      2526	diff.c	FUNCTION_41	CALL_1
0x40038ac	      0xe88fc7ffff	                   call sym.diff_buf_idx	      2526	diff.c	FUNCTION_41	CALL_1
0x40038b1	          0x83f808	                              cmp eax, 8	      2527	diff.c	FUNCTION_41	IF_1
0x40038b4	     0xf84df000000	                            je 0x4003999	      2527	diff.c	FUNCTION_41	IF_1
0x40038ba	          0x4189c5	                           mov r13d, eax	      2527	diff.c	FUNCTION_41	IF_1
0x40038bd	    0x488b05000000	            mov rax, qword [0x040038c4] 	      2527	diff.c	FUNCTION_41	IF_1
0x40038c4	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      2527	diff.c	FUNCTION_41	IF_1
0x40038c8	          0x4885f6	                           test rsi, rsi	      2527	diff.c	FUNCTION_41	IF_1
0x40038cb	     0xf84cf000000	                            je 0x40039a0	      2527	diff.c	FUNCTION_41	IF_1
0x40038d1	    0x488b15000000	            mov rdx, qword [0x040038d8] 	      2523	diff.c	FUNCTION_41
0x40038d8	        0x488b6a38	            mov rbp, qword [rdx + 0x38] 	      2523	diff.c	FUNCTION_41
0x40038dc	    0x83b8a0000000	               cmp dword [rax + 0xa0], 0	      2530	diff.c	FUNCTION_41	IF_2
0x40038e3	            0x7423	                            je 0x4003908	      2530	diff.c	FUNCTION_41	IF_2
0x40038e5	      0xbf00000000	                              mov edi, 0	      2531	diff.c	FUNCTION_41	CALL_2
0x40038ea	      0xe800000000	                          call 0x40038ef	      2531	diff.c	FUNCTION_41	CALL_2
0x40038ef	    0x488b05000000	            mov rax, qword [0x040038f6] 	      2533	diff.c	FUNCTION_41	IF_3
0x40038f6	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      2533	diff.c	FUNCTION_41	IF_3
0x40038fa	      0xb800000000	                              mov eax, 0	      2534	diff.c	FUNCTION_41	IF_3
0x40038ff	          0x4885f6	                           test rsi, rsi	      2533	diff.c	FUNCTION_41	IF_3
0x4003902	     0xf849d000000	                            je 0x40039a5	      2533	diff.c	FUNCTION_41	IF_3
0x4003908	          0x4963cd	                        movsxd rcx, r13d	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400390b	            0xeb45	                           jmp 0x4003952	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400390d	          0x4889f0	                            mov rax, rsi	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003910	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003913	            0x750c	                           jne 0x4003921	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003915	      0x483b6cce08	       cmp rbp, qword [rsi + rcx*8 + 8] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400391a	            0x7e3c	                           jle 0x4003958	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400391c	            0xeb03	                           jmp 0x4003921	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x400391e	          0x4889d0	                            mov rax, rdx	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4003921	          0x83fb01	                              cmp ebx, 1	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003924	            0x7509	                           jne 0x400392f	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003926	      0x483b6cc808	       cmp rbp, qword [rax + rcx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400392b	            0x7d1d	                           jge 0x400394a	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400392d	            0xeb14	                           jmp 0x4003943	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400392f	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003932	            0x7516	                           jne 0x400394a	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003934	          0x488b10	                    mov rdx, qword [rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003937	          0x4885d2	                           test rdx, rdx	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400393a	            0x7407	                            je 0x4003943	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400393c	      0x483b6cca08	       cmp rbp, qword [rdx + rcx*8 + 8] 	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003941	            0x7fdb	                            jg 0x400391e	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003943	      0x488b6cc808	       mov rbp, qword [rax + rcx*8 + 8] 	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003948	            0xeb08	                           jmp 0x4003952	      2552	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x400394a	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x400394d	          0x4885c0	                           test rax, rax	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4003950	            0x75cf	                           jne 0x4003921	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4003952	        0x4983ec01	                              sub r12, 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003956	            0x79b5	                           jns 0x400390d	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003958	    0x488b05000000	            mov rax, qword [0x0400395f] 	      2558	diff.c	FUNCTION_41	IF_7
0x400395f	          0x488b00	                    mov rax, qword [rax]	      2558	diff.c	FUNCTION_41	IF_7
0x4003962	          0x4839c5	                            cmp rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003965	        0x480f4fe8	                          cmovg rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003969	      0xb800000000	                              mov eax, 0	      2563	diff.c	FUNCTION_41	IF_8
0x400396e	    0x488b15000000	            mov rdx, qword [0x04003975] 	      2562	diff.c	FUNCTION_41	IF_8
0x4003975	        0x483b6a38	            cmp rbp, qword [rdx + 0x38] 	      2562	diff.c	FUNCTION_41	IF_8
0x4003979	            0x742a	                            je 0x40039a5	      2562	diff.c	FUNCTION_41	IF_8
0x400397b	      0xe800000000	                          call 0x4003980	      2565	diff.c	FUNCTION_41	CALL_3
0x4003980	    0x488b05000000	            mov rax, qword [0x04003987] 	      2566	diff.c	FUNCTION_41
0x4003987	        0x48896838	             mov qword [rax + 0x38], rbp	      2566	diff.c	FUNCTION_41
0x400398b	    0xc74040000000	               mov dword [rax + 0x40], 0	      2567	diff.c	FUNCTION_41
0x4003992	      0xb801000000	                              mov eax, 1	      2569	diff.c	FUNCTION_41
0x4003997	            0xeb0c	                           jmp 0x40039a5	      2569	diff.c	FUNCTION_41
0x4003999	      0xb800000000	                              mov eax, 0	      2528	diff.c	FUNCTION_41	IF_1
0x400399e	            0xeb05	                           jmp 0x40039a5	      2528	diff.c	FUNCTION_41	IF_1
0x40039a0	      0xb800000000	                              mov eax, 0	      2528	diff.c	FUNCTION_41	IF_1
0x40039a5	        0x4883c408	                              add rsp, 8	      2570	diff.c	FUNCTION_41
0x40039a9	              0x5b	                                 pop rbx	      2570	diff.c	FUNCTION_41
0x40039aa	              0x5d	                                 pop rbp	      2570	diff.c	FUNCTION_41
0x40039ab	            0x415c	                                 pop r12	      2570	diff.c	FUNCTION_41
0x40039ad	            0x415d	                                 pop r13	      2570	diff.c	FUNCTION_41
0x40039af	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
diff_cmp	FOR,0:WHILE,1:IF,5:SWITCH,0:ELSE,1:functions,0:CALL,9:DO,0	69
0x400018f	              0x55	                                push rbp	      1679	diff.c	FUNCTION_29
0x4000190	              0x53	                                push rbx	      1679	diff.c	FUNCTION_29
0x4000191	        0x4883ec18	                           sub rsp, 0x18	      1679	diff.c	FUNCTION_29
0x4000195	          0x4889fb	                            mov rbx, rdi	      1679	diff.c	FUNCTION_29
0x4000198	          0x4889f5	                            mov rbp, rsi	      1679	diff.c	FUNCTION_29
0x400019b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1679	diff.c	FUNCTION_29
0x40001a4	      0x4889442408	                mov qword [rsp + 8], rax	      1679	diff.c	FUNCTION_29
0x40001a9	            0x31c0	                            xor eax, eax	      1679	diff.c	FUNCTION_29
0x40001ab	    0x8b0500000000	            mov eax, dword [0x040001b1] 	      1683	diff.c	FUNCTION_29	IF_1
0x40001b1	            0xa806	                              test al, 6	      1683	diff.c	FUNCTION_29	IF_1
0x40001b3	            0x750a	                           jne 0x40001bf	      1683	diff.c	FUNCTION_29	IF_1
0x40001b5	      0xe800000000	                          call 0x40001ba	      1684	diff.c	FUNCTION_29	CALL_1
0x40001ba	      0xe998000000	                           jmp 0x4000257	      1684	diff.c	FUNCTION_29	CALL_1
0x40001bf	          0x83e006	                              and eax, 6	      1685	diff.c	FUNCTION_29	IF_2
0x40001c2	          0x83f802	                              cmp eax, 2	      1685	diff.c	FUNCTION_29	IF_2
0x40001c5	            0x7558	                           jne 0x400021f	      1685	diff.c	FUNCTION_29	IF_2
0x40001c7	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1686	diff.c	FUNCTION_29	CALL_2
0x40001cc	      0xe800000000	                          call 0x40001d1	      1686	diff.c	FUNCTION_29	CALL_2
0x40001d1	      0xe981000000	                           jmp 0x4000257	      1686	diff.c	FUNCTION_29	CALL_2
0x40001d6	            0x3c20	                            cmp al, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001d8	            0x7404	                            je 0x40001de	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001da	            0x3c09	                               cmp al, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001dc	            0x7522	                           jne 0x4000200	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001de	          0x80fa20	                            cmp dl, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001e1	            0x7405	                            je 0x40001e8	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001e3	          0x80fa09	                               cmp dl, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001e6	            0x7518	                           jne 0x4000200	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x40001e8	          0x4889df	                            mov rdi, rbx	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x40001eb	      0xe800000000	                          call 0x40001f0	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x40001f0	          0x4889c3	                            mov rbx, rax	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x40001f3	          0x4889ef	                            mov rdi, rbp	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x40001f6	      0xe800000000	                          call 0x40001fb	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x40001fb	          0x4889c5	                            mov rbp, rax	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x40001fe	            0xeb1f	                           jmp 0x400021f	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x4000200	      0x488d542404	                      lea rdx, [rsp + 4]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4000205	          0x4889ee	                            mov rsi, rbp	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4000208	          0x4889df	                            mov rdi, rbx	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x400020b	      0xe898feffff	                call sym.diff_equal_char	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4000210	            0x85c0	                           test eax, eax	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4000212	            0x741a	                            je 0x400022e	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x4000214	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x4000219	          0x4801c3	                            add rbx, rax	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x400021c	          0x4801c5	                            add rbp, rax	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x400021f	           0xfb603	                   movzx eax, byte [rbx]	      1691	diff.c	FUNCTION_29	WHILE_1
0x4000222	            0x84c0	                             test al, al	      1691	diff.c	FUNCTION_29	WHILE_1
0x4000224	            0x7408	                            je 0x400022e	      1691	diff.c	FUNCTION_29	WHILE_1
0x4000226	         0xfb65500	                   movzx edx, byte [rbp]	      1691	diff.c	FUNCTION_29	WHILE_1
0x400022a	            0x84d2	                             test dl, dl	      1691	diff.c	FUNCTION_29	WHILE_1
0x400022c	            0x75a8	                           jne 0x40001d6	      1691	diff.c	FUNCTION_29	WHILE_1
0x400022e	          0x4889df	                            mov rdi, rbx	      1708	diff.c	FUNCTION_29	CALL_8
0x4000231	      0xe800000000	                          call 0x4000236	      1708	diff.c	FUNCTION_29	CALL_8
0x4000236	          0x4889c3	                            mov rbx, rax	      1708	diff.c	FUNCTION_29	CALL_8
0x4000239	          0x4889ef	                            mov rdi, rbp	      1709	diff.c	FUNCTION_29	CALL_9
0x400023c	      0xe800000000	                          call 0x4000241	      1709	diff.c	FUNCTION_29	CALL_9
0x4000241	          0x4889c2	                            mov rdx, rax	      1709	diff.c	FUNCTION_29	CALL_9
0x4000244	      0xb801000000	                              mov eax, 1	      1711	diff.c	FUNCTION_29	IF_5
0x4000249	          0x803b00	                       cmp byte [rbx], 0	      1710	diff.c	FUNCTION_29	IF_5
0x400024c	            0x7509	                           jne 0x4000257	      1710	diff.c	FUNCTION_29	IF_5
0x400024e	          0x803a00	                       cmp byte [rdx], 0	      1684	diff.c	FUNCTION_29	CALL_1
0x4000251	           0xf95c0	                                setne al	      1684	diff.c	FUNCTION_29	CALL_1
0x4000254	           0xfb6c0	                           movzx eax, al	      1684	diff.c	FUNCTION_29	CALL_1
0x4000257	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1713	diff.c	FUNCTION_29
0x400025c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1713	diff.c	FUNCTION_29
0x4000265	            0x7405	                            je 0x400026c	      1713	diff.c	FUNCTION_29
0x4000267	      0xe800000000	                          call 0x400026c	      1713	diff.c	FUNCTION_29
0x400026c	        0x4883c418	                           add rsp, 0x18	      1713	diff.c	FUNCTION_29
0x4000270	              0x5b	                                 pop rbx	      1713	diff.c	FUNCTION_29
0x4000271	              0x5d	                                 pop rbp	      1713	diff.c	FUNCTION_29
0x4000272	              0xc3	                                     ret	      1713	diff.c	FUNCTION_29
diffopt_changed	FOR,0:WHILE,1:IF,12:SWITCH,0:ELSE,7:functions,0:CALL,15:DO,0	168
0x40026af	            0x4154	                                push r12	      1858	diff.c	FUNCTION_32
0x40026b1	              0x55	                                push rbp	      1858	diff.c	FUNCTION_32
0x40026b2	              0x53	                                push rbx	      1858	diff.c	FUNCTION_32
0x40026b3	        0x4883ec10	                           sub rsp, 0x10	      1858	diff.c	FUNCTION_32
0x40026b7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1858	diff.c	FUNCTION_32
0x40026c0	      0x4889442408	                mov qword [rsp + 8], rax	      1858	diff.c	FUNCTION_32
0x40026c5	            0x31c0	                            xor eax, eax	      1858	diff.c	FUNCTION_32
0x40026c7	    0x488b05000000	            mov rax, qword [0x040026ce] 	      1865	diff.c	FUNCTION_32
0x40026ce	        0x48890424	                    mov qword [rsp], rax	      1865	diff.c	FUNCTION_32
0x40026d2	    0x41bc02000000	                             mov r12d, 2	      1862	diff.c	FUNCTION_32
0x40026d8	      0xbb00000000	                              mov ebx, 0	      1861	diff.c	FUNCTION_32
0x40026dd	      0xbd06000000	                              mov ebp, 6	      1860	diff.c	FUNCTION_32
0x40026e2	      0xe981010000	                           jmp 0x4002868	      1866	diff.c	FUNCTION_32	WHILE_1
0x40026e7	      0xbf00000000	                              mov edi, 0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026ec	      0xb906000000	                              mov ecx, 6	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026f1	          0x4889d6	                            mov rsi, rdx	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026f4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026f6	           0xf97c1	                                 seta cl	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026f9	           0xf92c0	                                 setb al	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026fc	            0x38c1	                              cmp cl, al	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x40026fe	            0x7510	                           jne 0x4002710	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002700	        0x4883c206	                              add rdx, 6	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002704	        0x48891424	                    mov qword [rsp], rdx	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002708	          0x83cb01	                               or ebx, 1	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x400270b	      0xe93b010000	                           jmp 0x400284b	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002710	      0xbf00000000	                              mov edi, 0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002715	      0xb908000000	                              mov ecx, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x400271a	          0x4889d6	                            mov rsi, rdx	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x400271d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x400271f	           0xf97c1	                                 seta cl	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002722	           0xf92c0	                                 setb al	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002725	            0x38c1	                              cmp cl, al	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002727	            0x7523	                           jne 0x400274c	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002729	         0xfb64208	               movzx eax, byte [rdx + 8]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x400272d	          0x83e830	                           sub eax, 0x30	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002730	          0x83f809	                              cmp eax, 9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002733	            0x7717	                            ja 0x400274c	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002735	        0x4883c208	                              add rdx, 8	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4002739	        0x48891424	                    mov qword [rsp], rdx	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x400273d	          0x4889e7	                            mov rdi, rsp	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002740	      0xe800000000	                          call 0x4002745	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002745	            0x89c5	                            mov ebp, eax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002747	      0xe9ff000000	                           jmp 0x400284b	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x400274c	      0xbf00000000	                              mov edi, 0	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002751	      0xb905000000	                              mov ecx, 5	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002756	          0x4889d6	                            mov rsi, rdx	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002759	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x400275b	           0xf97c1	                                 seta cl	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x400275e	           0xf92c0	                                 setb al	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002761	            0x38c1	                              cmp cl, al	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002763	            0x7510	                           jne 0x4002775	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002765	        0x4883c205	                              add rdx, 5	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002769	        0x48891424	                    mov qword [rsp], rdx	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x400276d	          0x83cb02	                               or ebx, 2	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002770	      0xe9d6000000	                           jmp 0x400284b	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002775	      0xbf00000000	                              mov edi, 0	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x400277a	      0xb906000000	                              mov ecx, 6	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x400277f	          0x4889d6	                            mov rsi, rdx	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002782	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002784	           0xf97c1	                                 seta cl	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002787	           0xf92c0	                                 setb al	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x400278a	            0x38c1	                              cmp cl, al	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x400278c	            0x7510	                           jne 0x400279e	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x400278e	        0x4883c206	                              add rdx, 6	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002792	        0x48891424	                    mov qword [rsp], rdx	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002796	          0x83cb04	                               or ebx, 4	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002799	      0xe9ad000000	                           jmp 0x400284b	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x400279e	      0xbf00000000	                              mov edi, 0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027a3	      0xb90a000000	                            mov ecx, 0xa	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027a8	          0x4889d6	                            mov rsi, rdx	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027ab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027ad	           0xf97c1	                                 seta cl	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027b0	           0xf92c0	                                 setb al	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027b3	            0x38c1	                              cmp cl, al	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027b5	            0x7510	                           jne 0x40027c7	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x40027b7	        0x4883c20a	                            add rdx, 0xa	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x40027bb	        0x48891424	                    mov qword [rsp], rdx	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x40027bf	          0x83cb08	                               or ebx, 8	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x40027c2	      0xe984000000	                           jmp 0x400284b	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x40027c7	      0xbf00000000	                              mov edi, 0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027cc	      0xb908000000	                              mov ecx, 8	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027d1	          0x4889d6	                            mov rsi, rdx	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027d6	           0xf97c1	                                 seta cl	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027d9	           0xf92c0	                                 setb al	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027dc	            0x38c1	                              cmp cl, al	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027de	            0x750d	                           jne 0x40027ed	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x40027e0	        0x4883c208	                              add rdx, 8	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x40027e4	        0x48891424	                    mov qword [rsp], rdx	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x40027e8	          0x83cb10	                            or ebx, 0x10	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x40027eb	            0xeb5e	                           jmp 0x400284b	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x40027ed	      0xbf00000000	                              mov edi, 0	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x40027f2	      0xb90b000000	                            mov ecx, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x40027f7	          0x4889d6	                            mov rsi, rdx	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x40027fa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x40027fc	           0xf97c1	                                 seta cl	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x40027ff	           0xf92c0	                                 setb al	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002802	            0x38c1	                              cmp cl, al	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002804	            0x7521	                           jne 0x4002827	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002806	         0xfb6420b	            movzx eax, byte [rdx + 0xb] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x400280a	          0x83e830	                           sub eax, 0x30	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x400280d	          0x83f809	                              cmp eax, 9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002810	            0x7715	                            ja 0x4002827	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002812	        0x4883c20b	                            add rdx, 0xb	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4002816	        0x48891424	                    mov qword [rsp], rdx	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x400281a	          0x4889e7	                            mov rdi, rsp	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x400281d	      0xe800000000	                          call 0x4002822	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002822	          0x4189c4	                           mov r12d, eax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002825	            0xeb24	                           jmp 0x400284b	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002827	      0xbf00000000	                              mov edi, 0	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x400282c	      0xb909000000	                              mov ecx, 9	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002831	          0x4889d6	                            mov rsi, rdx	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002834	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002836	           0xf97c1	                                 seta cl	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002839	           0xf92c0	                                 setb al	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x400283c	            0x38c1	                              cmp cl, al	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x400283e	            0x750b	                           jne 0x400284b	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002840	        0x4883c209	                              add rdx, 9	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002844	        0x48891424	                    mov qword [rsp], rdx	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002848	          0x83cb20	                            or ebx, 0x20	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x400284b	        0x488b0424	                    mov rax, qword [rsp]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x400284f	           0xfb610	                   movzx edx, byte [rax]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002852	          0x80fa2c	                            cmp dl, 0x2c	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002855	            0x7404	                            je 0x400285b	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002857	            0x84d2	                             test dl, dl	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002859	            0x757d	                           jne 0x40028d8	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x400285b	          0x80fa2c	                            cmp dl, 0x2c	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x400285e	            0x7508	                           jne 0x4002868	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002860	        0x4883c001	                              add rax, 1	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002864	        0x48890424	                    mov qword [rsp], rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002868	        0x488b1424	                    mov rdx, qword [rsp]	      1866	diff.c	FUNCTION_32	WHILE_1
0x400286c	          0x803a00	                       cmp byte [rdx], 0	      1866	diff.c	FUNCTION_32	WHILE_1
0x400286f	     0xf8572feffff	                           jne 0x40026e7	      1866	diff.c	FUNCTION_32	WHILE_1
0x4002875	            0x89d8	                            mov eax, ebx	      1915	diff.c	FUNCTION_32	IF_11
0x4002877	          0x83e018	                           and eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x400287a	          0x83f818	                           cmp eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x400287d	            0x7460	                            je 0x40028df	      1915	diff.c	FUNCTION_32	IF_11
0x400287f	    0x3b1d00000000	            cmp ebx, dword [0x04002885] 	      1919	diff.c	FUNCTION_32	IF_12
0x4002885	            0x741e	                            je 0x40028a5	      1919	diff.c	FUNCTION_32	IF_12
0x4002887	    0x488b05000000	            mov rax, qword [0x0400288e] 	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x400288e	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002891	            0x7412	                            je 0x40028a5	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002893	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      1921	diff.c	FUNCTION_32	IF_12
0x400289d	          0x488b00	                    mov rax, qword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x40028a0	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x40028a3	            0x75ee	                           jne 0x4002893	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x40028a5	    0x891d00000000	            mov dword [0x040028ab], ebx 	      1923	diff.c	FUNCTION_32
0x40028ab	    0x892d00000000	            mov dword [0x040028b1], ebp 	      1924	diff.c	FUNCTION_32
0x40028b1	    0x448925000000	           mov dword [0x040028b8], r12d 	      1925	diff.c	FUNCTION_32
0x40028b8	      0xbf01000000	                              mov edi, 1	      1927	diff.c	FUNCTION_32	CALL_14
0x40028bd	      0xe80adfffff	                    call sym.diff_redraw	      1927	diff.c	FUNCTION_32	CALL_14
0x40028c2	      0xbe00000000	                              mov esi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x40028c7	      0xbf00000000	                              mov edi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x40028cc	      0xe800000000	                          call 0x40028d1	      1931	diff.c	FUNCTION_32	CALL_15
0x40028d1	      0xb801000000	                              mov eax, 1	      1933	diff.c	FUNCTION_32
0x40028d6	            0xeb0c	                           jmp 0x40028e4	      1933	diff.c	FUNCTION_32
0x40028d8	      0xb800000000	                              mov eax, 0	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x40028dd	            0xeb05	                           jmp 0x40028e4	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x40028df	      0xb800000000	                              mov eax, 0	      1916	diff.c	FUNCTION_32	IF_11
0x40028e4	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1934	diff.c	FUNCTION_32
0x40028e9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1934	diff.c	FUNCTION_32
0x40028f2	            0x7405	                            je 0x40028f9	      1934	diff.c	FUNCTION_32
0x40028f4	      0xe800000000	                          call 0x40028f9	      1934	diff.c	FUNCTION_32
0x40028f9	        0x4883c410	                           add rsp, 0x10	      1934	diff.c	FUNCTION_32
0x40028fd	              0x5b	                                 pop rbx	      1934	diff.c	FUNCTION_32
0x40028fe	              0x5d	                                 pop rbp	      1934	diff.c	FUNCTION_32
0x40028ff	            0x415c	                                 pop r12	      1934	diff.c	FUNCTION_32
0x4002901	              0xc3	                                     ret	      1934	diff.c	FUNCTION_32
diff_clear	FOR,1:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,1:DO,0	17
0x4000577	              0x55	                                push rbp	      1500	diff.c	FUNCTION_25
0x4000578	              0x53	                                push rbx	      1500	diff.c	FUNCTION_25
0x4000579	        0x4883ec08	                              sub rsp, 8	      1500	diff.c	FUNCTION_25
0x400057d	          0x4889fd	                            mov rbp, rdi	      1500	diff.c	FUNCTION_25
0x4000580	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4000584	          0x4885ff	                           test rdi, rdi	      1503	diff.c	FUNCTION_25	FOR_1
0x4000587	            0x7410	                            je 0x4000599	      1503	diff.c	FUNCTION_25	FOR_1
0x4000589	          0x488b1f	                    mov rbx, qword [rdi]	      1505	diff.c	FUNCTION_25	FOR_1
0x400058c	      0xe800000000	                          call 0x4000591	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4000591	          0x4889df	                            mov rdi, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x4000594	          0x4885db	                           test rbx, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x4000597	            0x75f0	                           jne 0x4000589	      1503	diff.c	FUNCTION_25	FOR_1
0x4000599	    0x48c745580000	               mov qword [rbp + 0x58], 0	      1508	diff.c	FUNCTION_25
0x40005a1	        0x4883c408	                              add rsp, 8	      1509	diff.c	FUNCTION_25
0x40005a5	              0x5b	                                 pop rbx	      1509	diff.c	FUNCTION_25
0x40005a6	              0x5d	                                 pop rbp	      1509	diff.c	FUNCTION_25
0x40005a7	              0xc3	                                     ret	      1509	diff.c	FUNCTION_25
diff_equal_entry	FOR,1:WHILE,0:IF,4:SWITCH,0:ELSE,0:functions,0:CALL,6:DO,0	74
0x4000273	            0x4157	                                push r15	      1615	diff.c	FUNCTION_27
0x4000275	            0x4156	                                push r14	      1615	diff.c	FUNCTION_27
0x4000277	            0x4155	                                push r13	      1615	diff.c	FUNCTION_27
0x4000279	            0x4154	                                push r12	      1615	diff.c	FUNCTION_27
0x400027b	              0x55	                                push rbp	      1615	diff.c	FUNCTION_27
0x400027c	              0x53	                                push rbx	      1615	diff.c	FUNCTION_27
0x400027d	        0x4883ec18	                           sub rsp, 0x18	      1615	diff.c	FUNCTION_27
0x4000281	          0x4863c6	                         movsxd rax, esi	      1615	diff.c	FUNCTION_27
0x4000284	        0x4c8d2cc7	                  lea r13, [rdi + rax*8]	      1615	diff.c	FUNCTION_27
0x4000288	        0x498b5d48	            mov rbx, qword [r13 + 0x48] 	      1620	diff.c	FUNCTION_27	IF_1
0x400028c	          0x4863c2	                         movsxd rax, edx	      1620	diff.c	FUNCTION_27	IF_1
0x400028f	        0x4c8d3cc7	                  lea r15, [rdi + rax*8]	      1620	diff.c	FUNCTION_27	IF_1
0x4000293	      0xb800000000	                              mov eax, 0	      1621	diff.c	FUNCTION_27	IF_1
0x4000298	        0x493b5f48	            cmp rbx, qword [r15 + 0x48] 	      1620	diff.c	FUNCTION_27	IF_1
0x400029c	     0xf85ca000000	                           jne 0x400036c	      1620	diff.c	FUNCTION_27	IF_1
0x40002a2	            0x89d5	                            mov ebp, edx	      1620	diff.c	FUNCTION_27	IF_1
0x40002a4	          0x4189f6	                           mov r14d, esi	      1620	diff.c	FUNCTION_27	IF_1
0x40002a7	          0x4889fe	                            mov rsi, rdi	      1620	diff.c	FUNCTION_27	IF_1
0x40002aa	    0x488b3d000000	            mov rdi, qword [0x040002b1] 	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x40002b1	      0xe8bafdffff	              call sym.diff_check_sanity	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x40002b6	            0x85c0	                           test eax, eax	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x40002b8	     0xf84ae000000	                            je 0x400036c	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x40002be	          0x4885db	                           test rbx, rbx	      1624	diff.c	FUNCTION_27	FOR_1
0x40002c1	     0xf8e92000000	                           jle 0x4000359	      1624	diff.c	FUNCTION_27	FOR_1
0x40002c7	      0xbb00000000	                              mov ebx, 0	      1624	diff.c	FUNCTION_27	FOR_1
0x40002cc	    0x41bc00000000	                             mov r12d, 0	      1624	diff.c	FUNCTION_27	FOR_1
0x40002d2	          0x4d63f6	                        movsxd r14, r14d	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002d5	          0x4863c5	                         movsxd rax, ebp	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x40002d8	      0x4889442408	                mov qword [rsp + 8], rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x40002dd	          0x4889de	                            mov rsi, rbx	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002e0	        0x49037508	                add rsi, qword [r13 + 8]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002e4	    0x488b05000000	            mov rax, qword [0x040002eb] 	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002eb	      0x4a8b7cf060	    mov rdi, qword [rax + r14*8 + 0x60] 	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002f0	      0xba00000000	                              mov edx, 0	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002f5	      0xe800000000	                          call 0x40002fa	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002fa	          0x4889c7	                            mov rdi, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x40002fd	      0xe800000000	                          call 0x4000302	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x4000302	          0x4889c5	                            mov rbp, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x4000305	          0x4885c0	                           test rax, rax	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x4000308	            0x7456	                            je 0x4000360	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x400030a	        0x49035f08	                add rbx, qword [r15 + 8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400030e	          0x4889de	                            mov rsi, rbx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000311	    0x488b05000000	            mov rax, qword [0x04000318] 	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000318	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400031d	      0x488b7cc860	    mov rdi, qword [rax + rcx*8 + 0x60] 	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000322	      0xba00000000	                              mov edx, 0	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000327	      0xe800000000	                          call 0x400032c	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400032c	          0x4889c6	                            mov rsi, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x400032f	          0x4889ef	                            mov rdi, rbp	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000332	      0xe858feffff	                       call sym.diff_cmp	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000337	            0x89c3	                            mov ebx, eax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x4000339	          0x4889ef	                            mov rdi, rbp	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x400033c	      0xe800000000	                          call 0x4000341	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x4000341	            0x85db	                           test ebx, ebx	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x4000343	            0x7522	                           jne 0x4000367	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x4000345	        0x4183c401	                             add r12d, 1	      1624	diff.c	FUNCTION_27	FOR_1
0x4000349	          0x4963dc	                        movsxd rbx, r12d	      1624	diff.c	FUNCTION_27	FOR_1
0x400034c	        0x493b5d48	            cmp rbx, qword [r13 + 0x48] 	      1624	diff.c	FUNCTION_27	FOR_1
0x4000350	            0x7c8b	                            jl 0x40002dd	      1624	diff.c	FUNCTION_27	FOR_1
0x4000352	      0xb801000000	                              mov eax, 1	      1636	diff.c	FUNCTION_27
0x4000357	            0xeb13	                           jmp 0x400036c	      1636	diff.c	FUNCTION_27
0x4000359	      0xb801000000	                              mov eax, 1	      1636	diff.c	FUNCTION_27
0x400035e	            0xeb0c	                           jmp 0x400036c	      1636	diff.c	FUNCTION_27
0x4000360	      0xb800000000	                              mov eax, 0	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x4000365	            0xeb05	                           jmp 0x400036c	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x4000367	      0xb800000000	                              mov eax, 0	      1634	diff.c	FUNCTION_27	FOR_1	IF_4
0x400036c	        0x4883c418	                           add rsp, 0x18	      1637	diff.c	FUNCTION_27
0x4000370	              0x5b	                                 pop rbx	      1637	diff.c	FUNCTION_27
0x4000371	              0x5d	                                 pop rbp	      1637	diff.c	FUNCTION_27
0x4000372	            0x415c	                                 pop r12	      1637	diff.c	FUNCTION_27
0x4000374	            0x415d	                                 pop r13	      1637	diff.c	FUNCTION_27
0x4000376	            0x415e	                                 pop r14	      1637	diff.c	FUNCTION_27
0x4000378	            0x415f	                                 pop r15	      1637	diff.c	FUNCTION_27
0x400037a	              0xc3	                                     ret	      1637	diff.c	FUNCTION_27
ex_diffthis	FOR,0:WHILE,0:IF,0:SWITCH,0:ELSE,0:functions,0:CALL,1:DO,0	6
0x40010dd	        0x4883ec08	                              sub rsp, 8	      1127	diff.c	FUNCTION_19
0x40010e1	      0xbe01000000	                              mov esi, 1	      1129	diff.c	FUNCTION_19	CALL_1
0x40010e6	    0x488b3d000000	            mov rdi, qword [0x040010ed] 	      1129	diff.c	FUNCTION_19	CALL_1
0x40010ed	      0xe800000000	                          call 0x40010f2	      1129	diff.c	FUNCTION_19	CALL_1
0x40010f2	        0x4883c408	                              add rsp, 8	      1130	diff.c	FUNCTION_19
0x40010f6	              0xc3	                                     ret	      1130	diff.c	FUNCTION_19
