bf_e_block	ELSE,0:DO,0:IF,0:CALL,16:WHILE,0:SWITCH,0:functions,0:FOR,0	217
0x4000040	            0x8b0e	                    mov ecx, dword [rsi]	       357	blowfish.c	FUNCTION_1
0x4000042	            0x330f	                    xor ecx, dword [rdi]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000044	              0x53	                                push rbx	       355	blowfish.c	FUNCTION_1
0x4000045	            0x8b02	                    mov eax, dword [rdx]	       355	blowfish.c	FUNCTION_1
0x4000047	          0x334704	                xor eax, dword [rdi + 4]	       355	blowfish.c	FUNCTION_1
0x400004a	          0x4989c9	                             mov r9, rcx	       360	blowfish.c	FUNCTION_1	CALL_2
0x400004d	          0x4189c8	                            mov r8d, ecx	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000050	           0xfb6dd	                           movzx ebx, ch	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000053	        0x49c1e910	                            shr r9, 0x10	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000057	        0x41c1e818	                           shr r8d, 0x18	       360	blowfish.c	FUNCTION_1	CALL_2
0x400005b	    0x4181e1ff0000	                           and r9d, 0xff	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000062	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000067	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400006f	        0x440fb6c9	                           movzx r9d, cl	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000073	          0x334f08	                xor ecx, dword [rdi + 8]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000076	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       360	blowfish.c	FUNCTION_1	CALL_2
0x400007e	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000086	          0x4431c0	                            xor eax, r8d	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000089	          0x4989c1	                             mov r9, rax	       360	blowfish.c	FUNCTION_1	CALL_2
0x400008c	          0x4189c0	                            mov r8d, eax	       360	blowfish.c	FUNCTION_1	CALL_2
0x400008f	           0xfb6dc	                           movzx ebx, ah	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000092	        0x49c1e910	                            shr r9, 0x10	       360	blowfish.c	FUNCTION_1	CALL_2
0x4000096	        0x41c1e818	                           shr r8d, 0x18	       360	blowfish.c	FUNCTION_1	CALL_2
0x400009a	    0x4181e1ff0000	                           and r9d, 0xff	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000a1	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000a6	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000ae	        0x440fb6c8	                           movzx r9d, al	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000b2	          0x33470c	              xor eax, dword [rdi + 0xc]	       360	blowfish.c	FUNCTION_1	CALL_2
0x40000b5	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000bd	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000c5	          0x4431c1	                            xor ecx, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000c8	          0x4989c9	                             mov r9, rcx	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000cb	          0x4189c8	                            mov r8d, ecx	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000ce	           0xfb6dd	                           movzx ebx, ch	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000d1	        0x49c1e910	                            shr r9, 0x10	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000d5	        0x41c1e818	                           shr r8d, 0x18	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000d9	    0x4181e1ff0000	                           and r9d, 0xff	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000e0	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000e5	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000ed	        0x440fb6c9	                           movzx r9d, cl	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000f1	          0x334f10	             xor ecx, dword [rdi + 0x10]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000f4	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       361	blowfish.c	FUNCTION_1	CALL_4
0x40000fc	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000104	          0x4431c0	                            xor eax, r8d	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000107	          0x4989c1	                             mov r9, rax	       361	blowfish.c	FUNCTION_1	CALL_4
0x400010a	          0x4189c0	                            mov r8d, eax	       361	blowfish.c	FUNCTION_1	CALL_4
0x400010d	           0xfb6dc	                           movzx ebx, ah	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000110	        0x49c1e910	                            shr r9, 0x10	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000114	        0x41c1e818	                           shr r8d, 0x18	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000118	    0x4181e1ff0000	                           and r9d, 0xff	       361	blowfish.c	FUNCTION_1	CALL_4
0x400011f	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000124	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       362	blowfish.c	FUNCTION_1	CALL_6
0x400012c	        0x440fb6c8	                           movzx r9d, al	       361	blowfish.c	FUNCTION_1	CALL_4
0x4000130	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000138	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000140	          0x4431c1	                            xor ecx, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000143	          0x334714	             xor eax, dword [rdi + 0x14]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000146	          0x4989c9	                             mov r9, rcx	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000149	          0x4189c8	                            mov r8d, ecx	       362	blowfish.c	FUNCTION_1	CALL_6
0x400014c	           0xfb6dd	                           movzx ebx, ch	       362	blowfish.c	FUNCTION_1	CALL_6
0x400014f	        0x49c1e910	                            shr r9, 0x10	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000153	        0x41c1e818	                           shr r8d, 0x18	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000157	    0x4181e1ff0000	                           and r9d, 0xff	       362	blowfish.c	FUNCTION_1	CALL_6
0x400015e	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000163	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       362	blowfish.c	FUNCTION_1	CALL_6
0x400016b	        0x440fb6c9	                           movzx r9d, cl	       362	blowfish.c	FUNCTION_1	CALL_6
0x400016f	          0x334f18	             xor ecx, dword [rdi + 0x18]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000172	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       362	blowfish.c	FUNCTION_1	CALL_6
0x400017a	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000182	          0x4431c0	                            xor eax, r8d	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000185	          0x4989c1	                             mov r9, rax	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000188	          0x4189c0	                            mov r8d, eax	       362	blowfish.c	FUNCTION_1	CALL_6
0x400018b	           0xfb6dc	                           movzx ebx, ah	       362	blowfish.c	FUNCTION_1	CALL_6
0x400018e	        0x49c1e910	                            shr r9, 0x10	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000192	        0x41c1e818	                           shr r8d, 0x18	       362	blowfish.c	FUNCTION_1	CALL_6
0x4000196	    0x4181e1ff0000	                           and r9d, 0xff	       362	blowfish.c	FUNCTION_1	CALL_6
0x400019d	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001a2	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001aa	        0x440fb6c8	                           movzx r9d, al	       362	blowfish.c	FUNCTION_1	CALL_6
0x40001ae	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001b6	          0x33471c	             xor eax, dword [rdi + 0x1c]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001b9	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001c1	          0x4431c1	                            xor ecx, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001c4	          0x4989c9	                             mov r9, rcx	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001c7	          0x4189c8	                            mov r8d, ecx	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001ca	           0xfb6dd	                           movzx ebx, ch	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001cd	        0x49c1e910	                            shr r9, 0x10	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d1	        0x41c1e818	                           shr r8d, 0x18	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001d5	    0x4181e1ff0000	                           and r9d, 0xff	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001dc	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001e1	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001e9	        0x440fb6c9	                           movzx r9d, cl	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001ed	          0x334f20	             xor ecx, dword [rdi + 0x20]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001f0	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       363	blowfish.c	FUNCTION_1	CALL_8
0x40001f8	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000200	          0x4431c0	                            xor eax, r8d	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000203	          0x4989c1	                             mov r9, rax	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000206	          0x4189c0	                            mov r8d, eax	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000209	           0xfb6dc	                           movzx ebx, ah	       363	blowfish.c	FUNCTION_1	CALL_8
0x400020c	        0x49c1e910	                            shr r9, 0x10	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000210	        0x41c1e818	                           shr r8d, 0x18	       363	blowfish.c	FUNCTION_1	CALL_8
0x4000214	    0x4181e1ff0000	                           and r9d, 0xff	       363	blowfish.c	FUNCTION_1	CALL_8
0x400021b	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000220	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000228	        0x440fb6c8	                           movzx r9d, al	       363	blowfish.c	FUNCTION_1	CALL_8
0x400022c	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000234	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400023c	          0x4431c1	                            xor ecx, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x400023f	          0x334724	             xor eax, dword [rdi + 0x24]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000242	          0x4989c9	                             mov r9, rcx	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000245	          0x4189c8	                            mov r8d, ecx	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000248	           0xfb6dd	                           movzx ebx, ch	       364	blowfish.c	FUNCTION_1	CALL_10
0x400024b	        0x49c1e910	                            shr r9, 0x10	       364	blowfish.c	FUNCTION_1	CALL_10
0x400024f	        0x41c1e818	                           shr r8d, 0x18	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000253	    0x4181e1ff0000	                           and r9d, 0xff	       364	blowfish.c	FUNCTION_1	CALL_10
0x400025a	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       364	blowfish.c	FUNCTION_1	CALL_10
0x400025f	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000267	        0x440fb6c9	                           movzx r9d, cl	       364	blowfish.c	FUNCTION_1	CALL_10
0x400026b	          0x334f28	             xor ecx, dword [rdi + 0x28]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400026e	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000276	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       364	blowfish.c	FUNCTION_1	CALL_10
0x400027e	          0x4431c0	                            xor eax, r8d	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000281	          0x4989c1	                             mov r9, rax	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000284	          0x4189c0	                            mov r8d, eax	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000287	           0xfb6dc	                           movzx ebx, ah	       364	blowfish.c	FUNCTION_1	CALL_10
0x400028a	        0x49c1e910	                            shr r9, 0x10	       364	blowfish.c	FUNCTION_1	CALL_10
0x400028e	        0x41c1e818	                           shr r8d, 0x18	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000292	    0x4181e1ff0000	                           and r9d, 0xff	       364	blowfish.c	FUNCTION_1	CALL_10
0x4000299	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       365	blowfish.c	FUNCTION_1	CALL_12
0x400029e	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002a6	        0x440fb6c8	                           movzx r9d, al	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002aa	          0x33472c	             xor eax, dword [rdi + 0x2c]	       364	blowfish.c	FUNCTION_1	CALL_10
0x40002ad	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002b5	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002bd	          0x4431c1	                            xor ecx, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002c0	          0x4989c9	                             mov r9, rcx	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002c3	          0x4189c8	                            mov r8d, ecx	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002c6	           0xfb6dd	                           movzx ebx, ch	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002c9	        0x49c1e910	                            shr r9, 0x10	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002cd	        0x41c1e818	                           shr r8d, 0x18	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002d1	    0x4181e1ff0000	                           and r9d, 0xff	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002d8	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002dd	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002e5	        0x440fb6c9	                           movzx r9d, cl	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002e9	          0x334f30	             xor ecx, dword [rdi + 0x30]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002ec	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002f4	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002fc	          0x4431c0	                            xor eax, r8d	       365	blowfish.c	FUNCTION_1	CALL_12
0x40002ff	          0x4989c1	                             mov r9, rax	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000302	          0x4189c0	                            mov r8d, eax	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000305	           0xfb6dc	                           movzx ebx, ah	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000308	        0x49c1e910	                            shr r9, 0x10	       365	blowfish.c	FUNCTION_1	CALL_12
0x400030c	        0x41c1e818	                           shr r8d, 0x18	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000310	    0x4181e1ff0000	                           and r9d, 0xff	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000317	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       366	blowfish.c	FUNCTION_1	CALL_14
0x400031c	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000324	        0x440fb6c8	                           movzx r9d, al	       365	blowfish.c	FUNCTION_1	CALL_12
0x4000328	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000330	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000338	          0x4431c1	                            xor ecx, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x400033b	          0x334734	             xor eax, dword [rdi + 0x34]	       366	blowfish.c	FUNCTION_1	CALL_14
0x400033e	          0x4989c9	                             mov r9, rcx	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000341	          0x4189c8	                            mov r8d, ecx	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000344	           0xfb6dd	                           movzx ebx, ch	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000347	        0x49c1e910	                            shr r9, 0x10	       366	blowfish.c	FUNCTION_1	CALL_14
0x400034b	        0x41c1e818	                           shr r8d, 0x18	       366	blowfish.c	FUNCTION_1	CALL_14
0x400034f	    0x4181e1ff0000	                           and r9d, 0xff	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000356	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       366	blowfish.c	FUNCTION_1	CALL_14
0x400035b	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000363	        0x440fb6c9	                           movzx r9d, cl	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000367	          0x334f38	             xor ecx, dword [rdi + 0x38]	       366	blowfish.c	FUNCTION_1	CALL_14
0x400036a	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000372	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       366	blowfish.c	FUNCTION_1	CALL_14
0x400037a	          0x4431c0	                            xor eax, r8d	       366	blowfish.c	FUNCTION_1	CALL_14
0x400037d	          0x4989c1	                             mov r9, rax	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000380	          0x4189c0	                            mov r8d, eax	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000383	           0xfb6dc	                           movzx ebx, ah	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000386	        0x49c1e910	                            shr r9, 0x10	       366	blowfish.c	FUNCTION_1	CALL_14
0x400038a	        0x41c1e818	                           shr r8d, 0x18	       366	blowfish.c	FUNCTION_1	CALL_14
0x400038e	    0x4181e1ff0000	                           and r9d, 0xff	       366	blowfish.c	FUNCTION_1	CALL_14
0x4000395	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x400039a	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003a2	        0x440fb6c8	                           movzx r9d, al	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003a6	          0x33473c	             xor eax, dword [rdi + 0x3c]	       366	blowfish.c	FUNCTION_1	CALL_14
0x40003a9	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003b1	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003b9	          0x4431c1	                            xor ecx, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003bc	          0x4989c9	                             mov r9, rcx	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003bf	          0x4189c8	                            mov r8d, ecx	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003c2	           0xfb6dd	                           movzx ebx, ch	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003c5	        0x49c1e910	                            shr r9, 0x10	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003c9	        0x41c1e818	                           shr r8d, 0x18	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003cd	    0x4181e1ff0000	                           and r9d, 0xff	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003d4	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003d9	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e1	        0x440fb6c9	                           movzx r9d, cl	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003e5	          0x334f40	             xor ecx, dword [rdi + 0x40]	       368	blowfish.c	FUNCTION_1
0x40003e8	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003f0	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003f8	          0x4431c0	                            xor eax, r8d	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003fb	          0x4989c1	                             mov r9, rax	       367	blowfish.c	FUNCTION_1	CALL_16
0x40003fe	          0x4189c0	                            mov r8d, eax	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000401	           0xfb6dc	                           movzx ebx, ah	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000404	        0x49c1e910	                            shr r9, 0x10	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000408	        0x41c1e818	                           shr r8d, 0x18	       367	blowfish.c	FUNCTION_1	CALL_16
0x400040c	    0x4181e1ff0000	                           and r9d, 0xff	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000413	      0x468b448748	     mov r8d, dword [rdi + r8*4 + 0x48] 	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000418	    0x4603848f4804	     add r8d, dword [rdi + r9*4 + 0x448]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000420	        0x440fb6c8	                           movzx r9d, al	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000424	    0x4433849f4808	    xor r8d, dword [rdi + rbx*4 + 0x848]	       367	blowfish.c	FUNCTION_1	CALL_16
0x400042c	    0x4603848f480c	     add r8d, dword [rdi + r9*4 + 0xc48]	       367	blowfish.c	FUNCTION_1	CALL_16
0x4000434	              0x5b	                                 pop rbx	       375	blowfish.c	FUNCTION_1
0x4000435	          0x4431c1	                            xor ecx, r8d	       368	blowfish.c	FUNCTION_1
0x4000438	          0x334744	             xor eax, dword [rdi + 0x44]	       373	blowfish.c	FUNCTION_1
0x400043b	            0x8906	                    mov dword [rsi], eax	       373	blowfish.c	FUNCTION_1
0x400043d	            0x890a	                    mov dword [rdx], ecx	       374	blowfish.c	FUNCTION_1
0x400043f	              0xc3	                                     ret	       375	blowfish.c	FUNCTION_1
crypt_blowfish_encode	ELSE,0:DO,0:IF,0:CALL,2:WHILE,0:SWITCH,0:functions,0:FOR,1	58
0x4000840	            0x4157	                                push r15	       610	blowfish.c	FUNCTION_7
0x4000842	            0x4156	                                push r14	       610	blowfish.c	FUNCTION_7
0x4000844	            0x4155	                                push r13	       610	blowfish.c	FUNCTION_7
0x4000846	            0x4154	                                push r12	       610	blowfish.c	FUNCTION_7
0x4000848	              0x55	                                push rbp	       610	blowfish.c	FUNCTION_7
0x4000849	              0x53	                                push rbx	       610	blowfish.c	FUNCTION_7
0x400084a	        0x4883ec18	                           sub rsp, 0x18	       610	blowfish.c	FUNCTION_7
0x400084e	          0x4885d2	                           test rdx, rdx	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000851	        0x488b5f08	                mov rbx, qword [rdi + 8]	       611	blowfish.c	FUNCTION_7
0x4000855	     0xf84ad000000	                            je 0x4000908	       615	blowfish.c	FUNCTION_7	FOR_1
0x400085b	          0x4989f6	                            mov r14, rsi	       615	blowfish.c	FUNCTION_7	FOR_1
0x400085e	          0x4989d5	                            mov r13, rdx	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000861	            0x31ed	                            xor ebp, ebp	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000863	          0x4531ff	                          xor r15d, r15d	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000866	            0xeb57	                           jmp 0x40008bf	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000868	     0xf1f84000000	                   nop dword [rax + rax]	       615	blowfish.c	FUNCTION_7	FOR_1
0x4000870	          0x4863d0	                         movsxd rdx, eax	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000873	          0x83c001	                              add eax, 1	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000876	     0xfb6bc135010	   movzx edi, byte [rbx + rdx + 0x1050] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400087e	    0x8b9390100000	          mov edx, dword [rbx + 0x1090] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000884	    0x898348100000	          mov dword [rbx + 0x1048], eax 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400088a	            0x39d0	                            cmp eax, edx	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400088c	            0x746a	                            je 0x40008f8	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x400088e	    0x4863b34c1000	       movsxd rsi, dword [rbx + 0x104c] 	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x4000895	          0x4889f0	                            mov rax, rsi	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x4000898	    0x4430a4335010	     xor byte [rbx + rsi + 0x1050], r12b	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a0	          0x83c001	                              add eax, 1	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a3	            0x39c2	                            cmp edx, eax	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a5	        0x410f44c7	                         cmove eax, r15d	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008a9	          0x4131fc	                           xor r12d, edi	       620	blowfish.c	FUNCTION_7	FOR_1
0x40008ac	    0x89834c100000	          mov dword [rbx + 0x104c], eax 	       619	blowfish.c	FUNCTION_7	FOR_1	CALL_2
0x40008b2	        0x44882429	              mov byte [rcx + rbp], r12b	       620	blowfish.c	FUNCTION_7	FOR_1
0x40008b6	        0x4883c501	                              add rbp, 1	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008ba	          0x4939ed	                            cmp r13, rbp	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008bd	            0x7449	                            je 0x4000908	       615	blowfish.c	FUNCTION_7	FOR_1
0x40008bf	    0x486383481000	       movsxd rax, dword [rbx + 0x1048] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008c6	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	       617	blowfish.c	FUNCTION_7	FOR_1
0x40008cb	            0xa807	                              test al, 7	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008cd	            0x75a1	                           jne 0x4000870	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008cf	    0x488db4035010	           lea rsi, [rbx + rax + 0x1050]	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008d7	          0x4889df	                            mov rdi, rbx	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008da	      0x48894c2408	                mov qword [rsp + 8], rcx	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008df	      0xe85cfbffff	                    call sym.bf_e_cblock	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008e4	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008ea	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008ef	      0xe97cffffff	                           jmp 0x4000870	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008f4	         0xf1f4000	                         nop dword [rax]	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x40008f8	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000902	            0xeb8a	                           jmp 0x400088e	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000904	         0xf1f4000	                         nop dword [rax]	       618	blowfish.c	FUNCTION_7	FOR_1	CALL_1
0x4000908	        0x4883c418	                           add rsp, 0x18	       622	blowfish.c	FUNCTION_7
0x400090c	              0x5b	                                 pop rbx	       622	blowfish.c	FUNCTION_7
0x400090d	              0x5d	                                 pop rbp	       622	blowfish.c	FUNCTION_7
0x400090e	            0x415c	                                 pop r12	       622	blowfish.c	FUNCTION_7
0x4000910	            0x415d	                                 pop r13	       622	blowfish.c	FUNCTION_7
0x4000912	            0x415e	                                 pop r14	       622	blowfish.c	FUNCTION_7
0x4000914	            0x415f	                                 pop r15	       622	blowfish.c	FUNCTION_7
0x4000916	              0xc3	                                     ret	       622	blowfish.c	FUNCTION_7
bf_key_init	ELSE,0:DO,0:IF,1:CALL,9:WHILE,0:SWITCH,0:functions,0:FOR,7	130
0x4000490	            0x4157	                                push r15	       412	blowfish.c	FUNCTION_3
0x4000492	            0x4156	                                push r14	       412	blowfish.c	FUNCTION_3
0x4000494	          0x4189ce	                           mov r14d, ecx	       412	blowfish.c	FUNCTION_3
0x4000497	            0x4155	                                push r13	       412	blowfish.c	FUNCTION_3
0x4000499	            0x4154	                                push r12	       412	blowfish.c	FUNCTION_3
0x400049b	          0x4989d5	                            mov r13, rdx	       412	blowfish.c	FUNCTION_3
0x400049e	              0x55	                                push rbp	       412	blowfish.c	FUNCTION_3
0x400049f	              0x53	                                push rbx	       412	blowfish.c	FUNCTION_3
0x40004a0	            0x89ca	                            mov edx, ecx	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004a2	          0x4889fb	                            mov rbx, rdi	       412	blowfish.c	FUNCTION_3
0x40004a5	          0x4889f7	                            mov rdi, rsi	       412	blowfish.c	FUNCTION_3
0x40004a8	          0x4c89ee	                            mov rsi, r13	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004ab	        0x4883ec28	                           sub rsp, 0x28	       412	blowfish.c	FUNCTION_3
0x40004af	      0xbde8030000	                          mov ebp, 0x3e8	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       412	blowfish.c	FUNCTION_3
0x40004bd	      0x4889442418	             mov qword [rsp + 0x18], rax	       412	blowfish.c	FUNCTION_3
0x40004c2	            0x31c0	                            xor eax, eax	       412	blowfish.c	FUNCTION_3
0x40004c4	      0xe800000000	                          call 0x40004c9	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004c9	          0x4989c4	                            mov r12, rax	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004cc	         0xf1f4000	                         nop dword [rax]	       421	blowfish.c	FUNCTION_3	CALL_1
0x40004d0	          0x4c89e7	                            mov rdi, r12	       423	blowfish.c	FUNCTION_3	CALL_2
0x40004d3	          0x4489f2	                           mov edx, r14d	       423	blowfish.c	FUNCTION_3	CALL_2
0x40004d6	          0x4c89ee	                            mov rsi, r13	       423	blowfish.c	FUNCTION_3	CALL_2
0x40004d9	      0xe800000000	                          call 0x40004de	       423	blowfish.c	FUNCTION_3	CALL_2
0x40004de	          0x83ed01	                              sub ebp, 1	       422	blowfish.c	FUNCTION_3	FOR_1
0x40004e1	          0x4989c4	                            mov r12, rax	       423	blowfish.c	FUNCTION_3	CALL_2
0x40004e4	            0x75ea	                           jne 0x40004d0	       422	blowfish.c	FUNCTION_3	FOR_1
0x40004e6	          0x4889c7	                            mov rdi, rax	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004e9	      0xe800000000	                          call 0x40004ee	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004ee	          0x4189c5	                           mov r13d, eax	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004f1	        0x41c1ed1f	                          shr r13d, 0x1f	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004f5	          0x4101c5	                           add r13d, eax	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004f8	          0x41d1fd	                             sar r13d, 1	       426	blowfish.c	FUNCTION_3	CALL_3
0x40004fb	        0x4183fd00	                             cmp r13d, 0	       427	blowfish.c	FUNCTION_3	IF_1
0x40004ff	     0xf844a010000	                            je 0x400064f	       427	blowfish.c	FUNCTION_3	IF_1
0x4000505	            0x7e41	                           jle 0x4000548	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000507	        0x418d45ff	                      lea eax, [r13 - 1]	       432	blowfish.c	FUNCTION_3	FOR_2
0x400050b	          0x4d89e6	                            mov r14, r12	       432	blowfish.c	FUNCTION_3	FOR_2
0x400050e	          0x4c89e5	                            mov rbp, r12	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000511	      0x4d8d7c0401	                lea r15, [r12 + rax + 1]	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000520	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x4000525	          0x4c89f7	                            mov rdi, r14	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x4000528	            0x31c0	                            xor eax, eax	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x400052a	      0xbe00000000	                              mov esi, 0	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x400052f	        0x4883c501	                              add rbp, 1	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x4000533	        0x4983c602	                              add r14, 2	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x4000537	      0xe800000000	                          call 0x400053c	       434	blowfish.c	FUNCTION_3	FOR_2	CALL_6
0x400053c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       435	blowfish.c	FUNCTION_3	FOR_2
0x4000540	          0x8845ff	                  mov byte [rbp - 1], al	       435	blowfish.c	FUNCTION_3	FOR_2
0x4000543	          0x4939ef	                            cmp r15, rbp	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000546	            0x75d8	                           jne 0x4000520	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000548	        0x488d6b48	                   lea rbp, [rbx + 0x48]	        59	string3.h	FUNCTION_12	CALL_3
0x400054c	      0xba00100000	                         mov edx, 0x1000	        59	string3.h	FUNCTION_12	CALL_3
0x4000551	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_12	CALL_3
0x4000556	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_12	CALL_3
0x4000559	      0xe800000000	                          call 0x400055e	        59	string3.h	FUNCTION_12	CALL_3
0x400055e	            0x31ff	                            xor edi, edi	        59	string3.h	FUNCTION_12	CALL_3
0x4000560	    0x41b804000000	                              mov r8d, 4	        59	string3.h	FUNCTION_12	CALL_3
0x4000566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        59	string3.h	FUNCTION_12	CALL_3
0x4000570	            0x89f9	                            mov ecx, edi	        59	string3.h	FUNCTION_12	CALL_3
0x4000572	            0x31c0	                            xor eax, eax	       432	blowfish.c	FUNCTION_3	FOR_2
0x4000574	          0xc1e008	                              shl eax, 8	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000577	            0x89c6	                            mov esi, eax	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000579	            0x89c8	                            mov eax, ecx	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400057b	          0x83c101	                              add ecx, 1	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400057e	              0x99	                                     cdq	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400057f	          0x41f7fd	                               idiv r13d	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000582	          0x4863d2	                         movsxd rdx, edx	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000585	      0x410fb60414	             movzx eax, byte [r12 + rdx]	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400058a	             0x9f0	                             or eax, esi	       446	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400058c	          0x4439c1	                            cmp ecx, r8d	       445	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x400058f	            0x75e3	                           jne 0x4000574	       445	blowfish.c	FUNCTION_3	FOR_3	FOR_4
0x4000591	    0x338700000000	                    xor eax, dword [rdi]	       447	blowfish.c	FUNCTION_3	FOR_3
0x4000597	        0x448d4104	                      lea r8d, [rcx + 4]	       447	blowfish.c	FUNCTION_3	FOR_3
0x400059b	          0x89043b	              mov dword [rbx + rdi], eax	       447	blowfish.c	FUNCTION_3	FOR_3
0x400059e	        0x4883c704	                              add rdi, 4	       447	blowfish.c	FUNCTION_3	FOR_3
0x40005a2	        0x4883ff48	                           cmp rdi, 0x48	       442	blowfish.c	FUNCTION_3	FOR_3
0x40005a6	            0x75c8	                           jne 0x4000570	       442	blowfish.c	FUNCTION_3	FOR_3
0x40005a8	    0xc74424140000	               mov dword [rsp + 0x14], 0	       450	blowfish.c	FUNCTION_3
0x40005b0	    0xc74424100000	               mov dword [rsp + 0x10], 0	       450	blowfish.c	FUNCTION_3
0x40005b8	          0x4989db	                            mov r11, rbx	       450	blowfish.c	FUNCTION_3
0x40005bb	          0x4989ea	                            mov r10, rbp	       450	blowfish.c	FUNCTION_3
0x40005be	            0x6690	                                     nop	       450	blowfish.c	FUNCTION_3
0x40005c0	      0x488d542414	                   lea rdx, [rsp + 0x14]	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x40005c5	      0x488d742410	                   lea rsi, [rsp + 0x10]	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x40005ca	          0x4889df	                            mov rdi, rbx	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x40005cd	      0xe86efaffff	                     call sym.bf_e_block	       453	blowfish.c	FUNCTION_3	FOR_5	CALL_8
0x40005d2	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       454	blowfish.c	FUNCTION_3	FOR_5
0x40005d6	        0x4983c308	                              add r11, 8	       454	blowfish.c	FUNCTION_3	FOR_5
0x40005da	        0x418943f8	                mov dword [r11 - 8], eax	       454	blowfish.c	FUNCTION_3	FOR_5
0x40005de	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       455	blowfish.c	FUNCTION_3	FOR_5
0x40005e2	        0x418943fc	                mov dword [r11 - 4], eax	       455	blowfish.c	FUNCTION_3	FOR_5
0x40005e6	          0x4c39dd	                            cmp rbp, r11	       451	blowfish.c	FUNCTION_3	FOR_5
0x40005e9	            0x75d5	                           jne 0x40005c0	       451	blowfish.c	FUNCTION_3	FOR_5
0x40005eb	    0x488dab481000	                 lea rbp, [rbx + 0x1048]	       451	blowfish.c	FUNCTION_3	FOR_5
0x40005f2	    0x4d8d9a000400	                  lea r11, [r10 + 0x400]	       451	blowfish.c	FUNCTION_3	FOR_5
0x40005f9	     0xf1f80000000	                         nop dword [rax]	       451	blowfish.c	FUNCTION_3	FOR_5
0x4000600	      0x488d542414	                   lea rdx, [rsp + 0x14]	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x4000605	      0x488d742410	                   lea rsi, [rsp + 0x10]	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x400060a	          0x4889df	                            mov rdi, rbx	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x400060d	      0xe82efaffff	                     call sym.bf_e_block	       462	blowfish.c	FUNCTION_3	FOR_6	FOR_7	CALL_9
0x4000612	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       463	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x4000616	        0x4983c208	                              add r10, 8	       463	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x400061a	        0x418942f8	                mov dword [r10 - 8], eax	       463	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x400061e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       464	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x4000622	        0x418942fc	                mov dword [r10 - 4], eax	       464	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x4000626	          0x4d39da	                            cmp r10, r11	       460	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x4000629	            0x75d5	                           jne 0x4000600	       460	blowfish.c	FUNCTION_3	FOR_6	FOR_7
0x400062b	          0x4939ea	                            cmp r10, rbp	       458	blowfish.c	FUNCTION_3	FOR_6
0x400062e	            0x75c2	                           jne 0x40005f2	       458	blowfish.c	FUNCTION_3	FOR_6
0x4000630	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       467	blowfish.c	FUNCTION_3
0x4000635	    0x644833042528	                xor rax, qword fs:[0x28]	       467	blowfish.c	FUNCTION_3
0x400063e	            0x752a	                           jne 0x400066a	       467	blowfish.c	FUNCTION_3
0x4000640	        0x4883c428	                           add rsp, 0x28	       467	blowfish.c	FUNCTION_3
0x4000644	              0x5b	                                 pop rbx	       467	blowfish.c	FUNCTION_3
0x4000645	              0x5d	                                 pop rbp	       467	blowfish.c	FUNCTION_3
0x4000646	            0x415c	                                 pop r12	       467	blowfish.c	FUNCTION_3
0x4000648	            0x415d	                                 pop r13	       467	blowfish.c	FUNCTION_3
0x400064a	            0x415e	                                 pop r14	       467	blowfish.c	FUNCTION_3
0x400064c	            0x415f	                                 pop r15	       467	blowfish.c	FUNCTION_3
0x400064e	              0xc3	                                     ret	       467	blowfish.c	FUNCTION_3
0x400064f	            0x31ff	                            xor edi, edi	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000651	      0xba05000000	                              mov edx, 5	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000656	      0xbe00000000	                              mov esi, 0	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x400065b	      0xe800000000	                          call 0x4000660	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000660	          0x4889c7	                            mov rdi, rax	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000663	      0xe800000000	                          call 0x4000668	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x4000668	            0xebc6	                           jmp 0x4000630	       429	blowfish.c	FUNCTION_3	IF_1	CALL_5
0x400066a	      0xe800000000	                          call 0x400066f	       467	blowfish.c	FUNCTION_3
bf_e_cblock	ELSE,0:DO,0:IF,0:CALL,7:WHILE,0:SWITCH,0:functions,0:FOR,0	18
0x4000440	        0x4883ec18	                           sub rsp, 0x18	       390	blowfish.c	FUNCTION_2
0x4000444	          0x4989f2	                            mov r10, rsi	       390	blowfish.c	FUNCTION_2
0x4000447	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	blowfish.c	FUNCTION_2
0x4000450	      0x4889442408	                mov qword [rsp + 8], rax	       390	blowfish.c	FUNCTION_2
0x4000455	            0x31c0	                            xor eax, eax	       390	blowfish.c	FUNCTION_2
0x4000457	          0x488b06	                    mov rax, qword [rsi]	       390	blowfish.c	FUNCTION_2
0x400045a	      0x488d542404	                      lea rdx, [rsp + 4]	       396	blowfish.c	FUNCTION_2	CALL_4
0x400045f	          0x4889e6	                            mov rsi, rsp	       396	blowfish.c	FUNCTION_2	CALL_4
0x4000462	        0x48890424	                    mov qword [rsp], rax	       396	blowfish.c	FUNCTION_2	CALL_4
0x4000466	      0xe8d5fbffff	                     call sym.bf_e_block	       396	blowfish.c	FUNCTION_2	CALL_4
0x400046b	        0x488b0424	                    mov rax, qword [rsp]	        53	string3.h	FUNCTION_11	CALL_3
0x400046f	          0x498902	                    mov qword [r10], rax	        53	string3.h	FUNCTION_11	CALL_3
0x4000472	      0x488b442408	                mov rax, qword [rsp + 8]	       400	blowfish.c	FUNCTION_2
0x4000477	    0x644833042528	                xor rax, qword fs:[0x28]	       400	blowfish.c	FUNCTION_2
0x4000480	            0x7505	                           jne 0x4000487	       400	blowfish.c	FUNCTION_2
0x4000482	        0x4883c418	                           add rsp, 0x18	       400	blowfish.c	FUNCTION_2
0x4000486	              0xc3	                                     ret	       400	blowfish.c	FUNCTION_2
0x4000487	      0xe800000000	                          call 0x400048c	       400	blowfish.c	FUNCTION_2
bf_self_test	ELSE,0:DO,0:IF,5:CALL,14:WHILE,0:SWITCH,0:functions,0:FOR,1	119
0x4000670	            0x4154	                                push r12	       518	blowfish.c	FUNCTION_5
0x4000672	              0x55	                                push rbp	       518	blowfish.c	FUNCTION_5
0x4000673	      0xb912020000	                          mov ecx, 0x212	        90	string3.h	FUNCTION_14	CALL_6
0x4000678	              0x53	                                push rbx	       518	blowfish.c	FUNCTION_5
0x4000679	            0x31db	                            xor ebx, ebx	       479	blowfish.c	FUNCTION_4
0x400067b	    0x4881ecb01000	                         sub rsp, 0x10b0	       518	blowfish.c	FUNCTION_5
0x4000682	      0x4c8d642410	                   lea r12, [rsp + 0x10]	        90	string3.h	FUNCTION_14	CALL_6
0x4000687	    0x64488b042528	                mov rax, qword fs:[0x28]	       518	blowfish.c	FUNCTION_5
0x4000690	    0x48898424a810	          mov qword [rsp + 0x10a8], rax 	       518	blowfish.c	FUNCTION_5
0x4000698	            0x31c0	                            xor eax, eax	       518	blowfish.c	FUNCTION_5
0x400069a	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_14	CALL_6
0x400069d	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_14	CALL_6
0x40006a0	    0xc78424a01000	         mov dword [rsp + 0x10a0], 0x40 	       526	blowfish.c	FUNCTION_5
0x40006ab	      0xb800000000	                              mov eax, 0	       526	blowfish.c	FUNCTION_5
0x40006b0	            0x3318	                    xor ebx, dword [rax]	       482	blowfish.c	FUNCTION_4	FOR_1
0x40006b2	        0x4883c004	                              add rax, 4	       482	blowfish.c	FUNCTION_4	FOR_1
0x40006b6	    0x483d00000000	                              cmp rax, 0	       481	blowfish.c	FUNCTION_4	FOR_1
0x40006bc	            0x75f2	                           jne 0x40006b0	       481	blowfish.c	FUNCTION_4	FOR_1
0x40006be	      0xb800000000	                              mov eax, 0	       481	blowfish.c	FUNCTION_4	FOR_1
0x40006c3	    0x488d90000400	                  lea rdx, [rax + 0x400]	       481	blowfish.c	FUNCTION_4	FOR_1
0x40006ca	    0x660f1f440000	                    nop word [rax + rax]	       481	blowfish.c	FUNCTION_4	FOR_1
0x40006d0	            0x3318	                    xor ebx, dword [rax]	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x40006d2	        0x4883c004	                              add rax, 4	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x40006d6	          0x4839c2	                            cmp rdx, rax	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x40006d9	            0x75f5	                           jne 0x40006d0	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x40006db	    0x4881fa000000	                              cmp rdx, 0	       483	blowfish.c	FUNCTION_4	FOR_2
0x40006e2	          0x4889d0	                            mov rax, rdx	       483	blowfish.c	FUNCTION_4	FOR_2
0x40006e5	            0x75dc	                           jne 0x40006c3	       483	blowfish.c	FUNCTION_4	FOR_2
0x40006e7	            0x31ed	                            xor ebp, ebp	       536	blowfish.c	FUNCTION_5	IF_2
0x40006e9	    0x81fb0a52fa6f	                     cmp ebx, 0x6ffa520a	       536	blowfish.c	FUNCTION_5	IF_2
0x40006ef	      0xb900000000	                              mov ecx, 0	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x40006f4	        0x400f95c5	                               setne bpl	       536	blowfish.c	FUNCTION_5	IF_2
0x40006f8	            0x8b11	                    mov edx, dword [rcx]	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x40006fa	        0x4883c104	                              add rcx, 4	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x40006fe	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000704	            0xf7d2	                                 not edx	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000706	            0x21d0	                            and eax, edx	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000708	      0x2580808080	                     and eax, 0x80808080	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400070d	            0x74e9	                            je 0x40006f8	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400070f	            0x89c2	                            mov edx, eax	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000711	      0xbe00000000	                              mov esi, 0	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000716	          0xc1ea10	                           shr edx, 0x10	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000719	      0xa980800000	                        test eax, 0x8080	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400071e	           0xf44c2	                          cmove eax, edx	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000721	        0x488d5102	                      lea rdx, [rcx + 2]	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000725	            0x89c7	                            mov edi, eax	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x4000727	        0x480f44ca	                          cmove rcx, rdx	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400072b	          0x4000c7	                             add dil, al	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400072e	      0xba00000000	                              mov edx, 0	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000733	    0x4881d9000000	                              sbb rcx, 0	       543	blowfish.c	FUNCTION_5	FOR_1	CALL_7
0x400073a	          0x4c89e7	                            mov rdi, r12	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x400073d	      0xe84efdffff	                    call sym.bf_key_init	       541	blowfish.c	FUNCTION_5	FOR_1	CALL_6
0x4000742	    0x8b3d00000000	            mov edi, dword [0x04000748] 	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x4000748	      0x498d442448	                   lea rax, [r12 + 0x48]	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x400074d	          0x4c89e1	                            mov rcx, r12	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x4000750	            0x31d2	                            xor edx, edx	       479	blowfish.c	FUNCTION_4
0x4000752	    0x660f1f440000	                    nop word [rax + rax]	       479	blowfish.c	FUNCTION_4
0x4000758	            0x3311	                    xor edx, dword [rcx]	       482	blowfish.c	FUNCTION_4	FOR_1
0x400075a	        0x4883c104	                              add rcx, 4	       482	blowfish.c	FUNCTION_4	FOR_1
0x400075e	          0x4839c8	                            cmp rax, rcx	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000761	            0x75f5	                           jne 0x4000758	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000763	    0x498db4244810	                 lea rsi, [r12 + 0x1048]	       481	blowfish.c	FUNCTION_4	FOR_1
0x400076b	    0x488d88000400	                  lea rcx, [rax + 0x400]	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000772	    0x660f1f440000	                    nop word [rax + rax]	       481	blowfish.c	FUNCTION_4	FOR_1
0x4000778	            0x3310	                    xor edx, dword [rax]	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x400077a	        0x4883c004	                              add rax, 4	       485	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x400077e	          0x4839c1	                            cmp rcx, rax	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x4000781	            0x75f5	                           jne 0x4000778	       484	blowfish.c	FUNCTION_4	FOR_2	FOR_3
0x4000783	          0x4839f1	                            cmp rcx, rsi	       483	blowfish.c	FUNCTION_4	FOR_2
0x4000786	          0x4889c8	                            mov rax, rcx	       483	blowfish.c	FUNCTION_4	FOR_2
0x4000789	            0x75e0	                           jne 0x400076b	       483	blowfish.c	FUNCTION_4	FOR_2
0x400078b	    0x488b05000000	            mov rax, qword [0x04000792] 	       483	blowfish.c	FUNCTION_4	FOR_2
0x4000792	            0x39d7	                            cmp edi, edx	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x4000794	          0x4889e6	                            mov rsi, rsp	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x4000797	          0x4c89e7	                            mov rdi, r12	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x400079a	        0x48890424	                    mov qword [rsp], rax	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x400079e	            0x743a	                            je 0x40007da	       544	blowfish.c	FUNCTION_5	FOR_1	IF_3	CALL_8
0x40007a0	      0xe89bfcffff	                    call sym.bf_e_cblock	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x40007a5	      0xba08000000	                              mov edx, 8	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007aa	      0xbe00000000	                              mov esi, 0	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007af	          0x4889e7	                            mov rdi, rsp	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007b2	      0xe800000000	                          call 0x40007b7	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007b7	            0x85c0	                           test eax, eax	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007b9	            0x7571	                           jne 0x400082c	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007bb	    0x488bbc24a810	          mov rdi, qword [rsp + 0x10a8] 	       559	blowfish.c	FUNCTION_5
0x40007c3	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       559	blowfish.c	FUNCTION_5
0x40007cc	            0x7569	                           jne 0x4000837	       559	blowfish.c	FUNCTION_5
0x40007ce	    0x4881c4b01000	                         add rsp, 0x10b0	       559	blowfish.c	FUNCTION_5
0x40007d5	              0x5b	                                 pop rbx	       559	blowfish.c	FUNCTION_5
0x40007d6	              0x5d	                                 pop rbp	       559	blowfish.c	FUNCTION_5
0x40007d7	            0x415c	                                 pop r12	       559	blowfish.c	FUNCTION_5
0x40007d9	              0xc3	                                     ret	       559	blowfish.c	FUNCTION_5
0x40007da	      0xe861fcffff	                    call sym.bf_e_cblock	       549	blowfish.c	FUNCTION_5	FOR_1	CALL_10
0x40007df	      0xba08000000	                              mov edx, 8	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007e4	      0xbe00000000	                              mov esi, 0	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007e9	          0x4889e7	                            mov rdi, rsp	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007ec	      0xe800000000	                          call 0x40007f1	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007f1	            0x85c0	                           test eax, eax	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007f3	            0x743b	                            je 0x4000830	       550	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_11
0x40007f5	    0x81fb0a52fa6f	                     cmp ebx, 0x6ffa520a	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007fb	            0x752f	                           jne 0x400082c	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x40007fd	      0xba08000000	                              mov edx, 8	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x4000802	      0xbe00000000	                              mov esi, 0	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x4000807	          0x4889e7	                            mov rdi, rsp	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x400080a	      0xe800000000	                          call 0x400080f	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x400080f	            0x85c0	                           test eax, eax	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x4000811	            0x7519	                           jne 0x400082c	       552	blowfish.c	FUNCTION_5	FOR_1	IF_4	IF_5	CALL_12
0x4000813	            0x31ff	                            xor edi, edi	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x4000815	      0xba05000000	                              mov edx, 5	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x400081a	      0xbe00000000	                              mov esi, 0	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x400081f	      0xe800000000	                          call 0x4000824	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x4000824	          0x4889c7	                            mov rdi, rax	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x4000827	      0xe800000000	                          call 0x400082c	       553	blowfish.c	FUNCTION_5	FOR_1	IF_4	CALL_14
0x400082c	            0x31c0	                            xor eax, eax	       479	blowfish.c	FUNCTION_4
0x400082e	            0xeb8b	                           jmp 0x40007bb	       479	blowfish.c	FUNCTION_4
0x4000830	            0x89e8	                            mov eax, ebp	       479	blowfish.c	FUNCTION_4
0x4000832	          0x83f001	                              xor eax, 1	       479	blowfish.c	FUNCTION_4
0x4000835	            0xeb84	                           jmp 0x40007bb	       479	blowfish.c	FUNCTION_4
0x4000837	      0xe800000000	                          call 0x400083c	       559	blowfish.c	FUNCTION_5
crypt_blowfish_decode	ELSE,0:DO,0:IF,0:CALL,2:WHILE,0:SWITCH,0:functions,0:FOR,1	54
0x4000920	          0x4885d2	                           test rdx, rdx	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000923	            0x4156	                                push r14	       633	blowfish.c	FUNCTION_8
0x4000925	            0x4155	                                push r13	       633	blowfish.c	FUNCTION_8
0x4000927	            0x4154	                                push r12	       633	blowfish.c	FUNCTION_8
0x4000929	              0x55	                                push rbp	       633	blowfish.c	FUNCTION_8
0x400092a	              0x53	                                push rbx	       633	blowfish.c	FUNCTION_8
0x400092b	        0x488b5f08	                mov rbx, qword [rdi + 8]	       634	blowfish.c	FUNCTION_8
0x400092f	     0xf849e000000	                            je 0x40009d3	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000935	          0x4989f4	                            mov r12, rsi	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000938	          0x4989d5	                            mov r13, rdx	       638	blowfish.c	FUNCTION_8	FOR_1
0x400093b	          0x4989ce	                            mov r14, rcx	       638	blowfish.c	FUNCTION_8	FOR_1
0x400093e	            0x31ed	                            xor ebp, ebp	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000940	            0xeb56	                           jmp 0x4000998	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000942	    0x660f1f440000	                    nop word [rax + rax]	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000948	          0x4863d0	                         movsxd rdx, eax	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400094b	          0x83c001	                              add eax, 1	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400094e	    0x3b8390100000	          cmp eax, dword [rbx + 0x1090] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000954	     0xfb6b4135010	   movzx esi, byte [rbx + rdx + 0x1050] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400095c	    0x898348100000	          mov dword [rbx + 0x1048], eax 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000962	            0x747c	                            je 0x40009e0	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x4000964	        0x4132342c	               xor sil, byte [r12 + rbp]	       641	blowfish.c	FUNCTION_8	FOR_1
0x4000968	        0x4188342e	               mov byte [r14 + rbp], sil	       641	blowfish.c	FUNCTION_8	FOR_1
0x400096c	    0x4863bb4c1000	       movsxd rdi, dword [rbx + 0x104c] 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000973	    0x4030b43b5010	      xor byte [rbx + rdi + 0x1050], sil	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400097b	          0x4889f8	                            mov rax, rdi	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400097e	          0x83c001	                              add eax, 1	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000981	    0x3b8390100000	          cmp eax, dword [rbx + 0x1090] 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x4000987	    0x89834c100000	          mov dword [rbx + 0x104c], eax 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400098d	            0x7431	                            je 0x40009c0	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x400098f	        0x4883c501	                              add rbp, 1	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000993	          0x4939ed	                            cmp r13, rbp	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000996	            0x743b	                            je 0x40009d3	       638	blowfish.c	FUNCTION_8	FOR_1
0x4000998	    0x486383481000	       movsxd rax, dword [rbx + 0x1048] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x400099f	            0xa807	                              test al, 7	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009a1	            0x75a5	                           jne 0x4000948	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009a3	    0x488db4035010	           lea rsi, [rbx + rax + 0x1050]	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009ab	          0x4889df	                            mov rdi, rbx	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009ae	      0xe88dfaffff	                    call sym.bf_e_cblock	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009b3	    0x8b8348100000	          mov eax, dword [rbx + 0x1048] 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009b9	            0xeb8d	                           jmp 0x4000948	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009bb	       0xf1f440000	                   nop dword [rax + rax]	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009c0	        0x4883c501	                              add rbp, 1	       638	blowfish.c	FUNCTION_8	FOR_1
0x40009c4	    0xc7834c100000	            mov dword [rbx + 0x104c], 0 	       642	blowfish.c	FUNCTION_8	FOR_1	CALL_2
0x40009ce	          0x4939ed	                            cmp r13, rbp	       638	blowfish.c	FUNCTION_8	FOR_1
0x40009d1	            0x75c5	                           jne 0x4000998	       638	blowfish.c	FUNCTION_8	FOR_1
0x40009d3	              0x5b	                                 pop rbx	       644	blowfish.c	FUNCTION_8
0x40009d4	              0x5d	                                 pop rbp	       644	blowfish.c	FUNCTION_8
0x40009d5	            0x415c	                                 pop r12	       644	blowfish.c	FUNCTION_8
0x40009d7	            0x415d	                                 pop r13	       644	blowfish.c	FUNCTION_8
0x40009d9	            0x415e	                                 pop r14	       644	blowfish.c	FUNCTION_8
0x40009db	              0xc3	                                     ret	       644	blowfish.c	FUNCTION_8
0x40009dc	         0xf1f4000	                         nop dword [rax]	       644	blowfish.c	FUNCTION_8
0x40009e0	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
0x40009ea	      0xe975ffffff	                           jmp 0x4000964	       640	blowfish.c	FUNCTION_8	FOR_1	CALL_1
crypt_blowfish_init	ELSE,0:DO,0:IF,1:CALL,4:WHILE,0:SWITCH,0:functions,0:FOR,0	74
0x4000a50	            0x4157	                                push r15	       654	blowfish.c	FUNCTION_9
0x4000a52	            0x4156	                                push r14	       654	blowfish.c	FUNCTION_9
0x4000a54	          0x4189cf	                           mov r15d, ecx	       654	blowfish.c	FUNCTION_9
0x4000a57	            0x4155	                                push r13	       654	blowfish.c	FUNCTION_9
0x4000a59	            0x4154	                                push r12	       654	blowfish.c	FUNCTION_9
0x4000a5b	          0x4989fd	                            mov r13, rdi	       654	blowfish.c	FUNCTION_9
0x4000a5e	              0x55	                                push rbp	       654	blowfish.c	FUNCTION_9
0x4000a5f	              0x53	                                push rbx	       654	blowfish.c	FUNCTION_9
0x4000a60	      0xbf94100000	                         mov edi, 0x1094	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a65	          0x4989d6	                            mov r14, rdx	       654	blowfish.c	FUNCTION_9
0x4000a68	          0x4d89c4	                             mov r12, r8	       654	blowfish.c	FUNCTION_9
0x4000a6b	          0x4489cd	                            mov ebp, r9d	       654	blowfish.c	FUNCTION_9
0x4000a6e	        0x4883ec18	                           sub rsp, 0x18	       654	blowfish.c	FUNCTION_9
0x4000a72	      0x4889742408	                mov qword [rsp + 8], rsi	       654	blowfish.c	FUNCTION_9
0x4000a77	      0xe800000000	                          call 0x4000a7c	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a7c	      0x41837d0001	                      cmp dword [r13], 1	       661	blowfish.c	FUNCTION_9
0x4000a81	        0x49894508	                mov qword [r13 + 8], rax	       657	blowfish.c	FUNCTION_9
0x4000a85	          0x4889c3	                            mov rbx, rax	       655	blowfish.c	FUNCTION_9	CALL_1
0x4000a88	      0xba08000000	                              mov edx, 8	       661	blowfish.c	FUNCTION_9
0x4000a8d	      0xb840000000	                           mov eax, 0x40	       661	blowfish.c	FUNCTION_9
0x4000a92	           0xf45c2	                         cmovne eax, edx	       661	blowfish.c	FUNCTION_9
0x4000a95	    0x898390100000	          mov dword [rbx + 0x1090], eax 	       661	blowfish.c	FUNCTION_9
0x4000a9b	      0xe800000000	                          call 0x4000aa0	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000aa0	            0x85c0	                           test eax, eax	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000aa2	      0x488b742408	                mov rsi, qword [rsp + 8]	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000aa7	            0x7517	                           jne 0x4000ac0	       663	blowfish.c	FUNCTION_9	IF_1	CALL_2
0x4000aa9	        0x4883c418	                           add rsp, 0x18	       668	blowfish.c	FUNCTION_9
0x4000aad	              0x5b	                                 pop rbx	       668	blowfish.c	FUNCTION_9
0x4000aae	              0x5d	                                 pop rbp	       668	blowfish.c	FUNCTION_9
0x4000aaf	            0x415c	                                 pop r12	       668	blowfish.c	FUNCTION_9
0x4000ab1	            0x415d	                                 pop r13	       668	blowfish.c	FUNCTION_9
0x4000ab3	            0x415e	                                 pop r14	       668	blowfish.c	FUNCTION_9
0x4000ab5	            0x415f	                                 pop r15	       668	blowfish.c	FUNCTION_9
0x4000ab7	              0xc3	                                     ret	       668	blowfish.c	FUNCTION_9
0x4000ab8	     0xf1f84000000	                   nop dword [rax + rax]	       668	blowfish.c	FUNCTION_9
0x4000ac0	          0x4489f9	                           mov ecx, r15d	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000ac3	          0x4c89f2	                            mov rdx, r14	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000ac6	          0x4889df	                            mov rdi, rbx	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000ac9	      0xe8c2f9ffff	                    call sym.bf_key_init	       666	blowfish.c	FUNCTION_9	CALL_3
0x4000ace	    0x486393901000	       movsxd rdx, dword [rbx + 0x1090] 	        90	string3.h	FUNCTION_14	CALL_6
0x4000ad5	    0x488dbb501000	                 lea rdi, [rbx + 0x1050]	        90	string3.h	FUNCTION_14	CALL_6
0x4000adc	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_14	CALL_6
0x4000ade	    0xc7834c100000	            mov dword [rbx + 0x104c], 0 	       576	blowfish.c	FUNCTION_6
0x4000ae8	    0xc78348100000	            mov dword [rbx + 0x1048], 0 	       576	blowfish.c	FUNCTION_6
0x4000af2	      0xe800000000	                          call 0x4000af7	        90	string3.h	FUNCTION_14	CALL_6
0x4000af7	            0x85ed	                           test ebp, ebp	       578	blowfish.c	FUNCTION_6	IF_1
0x4000af9	            0x7eae	                           jle 0x4000aa9	       578	blowfish.c	FUNCTION_6	IF_1
0x4000afb	    0x8bbb90100000	          mov edi, dword [rbx + 0x1090] 	       580	blowfish.c	FUNCTION_6	IF_1
0x4000b01	            0x39fd	                            cmp ebp, edi	       580	blowfish.c	FUNCTION_6	IF_1
0x4000b03	          0x4189f8	                            mov r8d, edi	       580	blowfish.c	FUNCTION_6	IF_1
0x4000b06	        0x440f4dc5	                         cmovge r8d, ebp	       580	blowfish.c	FUNCTION_6	IF_1
0x4000b0a	            0x31c9	                            xor ecx, ecx	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b0c	         0xf1f4000	                         nop dword [rax]	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b10	            0x89c8	                            mov eax, ecx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b12	              0x99	                                     cdq	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b13	            0xf7ff	                                idiv edi	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b15	            0x89c8	                            mov eax, ecx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b17	          0x83c101	                              add ecx, 1	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b1a	          0x4863f2	                         movsxd rsi, edx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b1d	              0x99	                                     cdq	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b1e	            0xf7fd	                                idiv ebp	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b20	          0x4863d2	                         movsxd rdx, edx	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b23	      0x410fb60414	             movzx eax, byte [r12 + rdx]	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b28	    0x308433501000	       xor byte [rbx + rsi + 0x1050], al	       582	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b2f	          0x4139c8	                            cmp r8d, ecx	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b32	            0x75dc	                           jne 0x4000b10	       581	blowfish.c	FUNCTION_6	IF_1	FOR_1
0x4000b34	        0x4883c418	                           add rsp, 0x18	       668	blowfish.c	FUNCTION_9
0x4000b38	              0x5b	                                 pop rbx	       668	blowfish.c	FUNCTION_9
0x4000b39	              0x5d	                                 pop rbp	       668	blowfish.c	FUNCTION_9
0x4000b3a	            0x415c	                                 pop r12	       668	blowfish.c	FUNCTION_9
0x4000b3c	            0x415d	                                 pop r13	       668	blowfish.c	FUNCTION_9
0x4000b3e	            0x415e	                                 pop r14	       668	blowfish.c	FUNCTION_9
0x4000b40	            0x415f	                                 pop r15	       668	blowfish.c	FUNCTION_9
0x4000b42	              0xc3	                                     ret	       668	blowfish.c	FUNCTION_9
