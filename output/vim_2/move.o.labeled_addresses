scroll_cursor_bot	IF,21:functions,0:ELSE,5:FOR,2:WHILE,1:SWITCH,0:CALL,12:DO,0	267
0x40013a6	            0x4157	                                push r15	      1814	move.c	FUNCTION_45
0x40013a8	            0x4156	                                push r14	      1814	move.c	FUNCTION_45
0x40013aa	            0x4155	                                push r13	      1814	move.c	FUNCTION_45
0x40013ac	            0x4154	                                push r12	      1814	move.c	FUNCTION_45
0x40013ae	              0x55	                                push rbp	      1814	move.c	FUNCTION_45
0x40013af	              0x53	                                push rbx	      1814	move.c	FUNCTION_45
0x40013b0	        0x4883ec58	                           sub rsp, 0x58	      1814	move.c	FUNCTION_45
0x40013b4	          0x4189fd	                           mov r13d, edi	      1814	move.c	FUNCTION_45
0x40013b7	            0x89f7	                            mov edi, esi	      1814	move.c	FUNCTION_45
0x40013b9	        0x8974240c	              mov dword [rsp + 0xc], esi	      1814	move.c	FUNCTION_45
0x40013bd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1814	move.c	FUNCTION_45
0x40013c6	      0x4889442448	             mov qword [rsp + 0x48], rax	      1814	move.c	FUNCTION_45
0x40013cb	            0x31c0	                            xor eax, eax	      1814	move.c	FUNCTION_45
0x40013cd	    0x488b05000000	            mov rax, qword [0x040013d4] 	      1820	move.c	FUNCTION_45
0x40013d4	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1820	move.c	FUNCTION_45
0x40013d8	        0x48893424	                    mov qword [rsp], rsi	      1820	move.c	FUNCTION_45
0x40013dc	    0x488bb0e80000	            mov rsi, qword [rax + 0xe8] 	      1827	move.c	FUNCTION_45
0x40013e3	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1827	move.c	FUNCTION_45
0x40013e8	    0x8bb0b4000000	            mov esi, dword [rax + 0xb4] 	      1828	move.c	FUNCTION_45
0x40013ee	        0x89742418	             mov dword [rsp + 0x18], esi	      1828	move.c	FUNCTION_45
0x40013f2	    0x8bb0f0000000	            mov esi, dword [rax + 0xf0] 	      1829	move.c	FUNCTION_45
0x40013f8	        0x8974241c	             mov dword [rsp + 0x1c], esi	      1829	move.c	FUNCTION_45
0x40013fc	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      1832	move.c	FUNCTION_45
0x4001400	            0x85ff	                           test edi, edi	      1833	move.c	FUNCTION_45	IF_1
0x4001402	     0xf84c0000000	                            je 0x40014c8	      1833	move.c	FUNCTION_45	IF_1
0x4001408	    0x8ba884000000	            mov ebp, dword [rax + 0x84] 	      1824	move.c	FUNCTION_45
0x400140e	      0x498d542401	                      lea rdx, [r12 + 1]	      1836	move.c	FUNCTION_45	IF_1
0x4001413	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1836	move.c	FUNCTION_45	IF_1
0x400141a	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1838	move.c	FUNCTION_45	IF_1
0x4001422	        0x48895078	             mov qword [rax + 0x78], rdx	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001426	        0x4883fa01	                              cmp rdx, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400142a	            0x7e51	                           jle 0x400147d	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400142c	      0xbb00000000	                              mov ebx, 0	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001431	            0xeb02	                           jmp 0x4001435	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001433	            0x89c3	                            mov ebx, eax	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4001435	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x400143a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x400143f	      0xe869ecffff	                   call sym.topline_back	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x4001444	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4001448	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400144d	            0x7433	                            je 0x4001482	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400144f	             0x1d8	                            add eax, ebx	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4001451	    0x488b0d000000	            mov rcx, qword [0x04001458] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4001458	    0x3b81a0000000	            cmp eax, dword [rcx + 0xa0] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400145e	            0x7f22	                            jg 0x4001482	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4001460	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x4001464	    0x899184000000	             mov dword [rcx + 0x84], edx	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x400146a	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x400146f	        0x48895178	             mov qword [rcx + 0x78], rdx	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x4001473	        0x4883fa01	                              cmp rdx, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001477	            0x7fba	                            jg 0x4001433	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001479	            0x89c3	                            mov ebx, eax	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400147b	            0xeb05	                           jmp 0x4001482	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400147d	      0xbb00000000	                              mov ebx, 0	      1835	move.c	FUNCTION_45	IF_1
0x4001482	            0x89de	                            mov esi, ebx	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x4001484	    0x488b3d000000	            mov rdi, qword [0x0400148b] 	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x400148b	      0xe800000000	                          call 0x4001490	      1853	move.c	FUNCTION_45	IF_1	CALL_2
0x4001490	    0x488b15000000	            mov rdx, qword [0x04001497] 	      1854	move.c	FUNCTION_45	IF_1
0x4001497	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      1854	move.c	FUNCTION_45	IF_1
0x400149d	            0x89c1	                            mov ecx, eax	      1854	move.c	FUNCTION_45	IF_1
0x400149f	          0x83c960	                            or ecx, 0x60	      1854	move.c	FUNCTION_45	IF_1
0x40014a2	    0x898ab4000000	             mov dword [rdx + 0xb4], ecx	      1854	move.c	FUNCTION_45	IF_1
0x40014a8	        0x488b3c24	                    mov rdi, qword [rsp]	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x40014ac	        0x483b7a78	            cmp rdi, qword [rdx + 0x78] 	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x40014b0	            0x7508	                           jne 0x40014ba	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x40014b2	    0x3baa84000000	            cmp ebp, dword [rdx + 0x84] 	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x40014b8	            0x7413	                            je 0x40014cd	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x40014ba	          0x83e0ee	                     and eax, 0xffffffee	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40014bd	          0x83c860	                            or eax, 0x60	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40014c0	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40014c6	            0xeb05	                           jmp 0x40014cd	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x40014c8	      0xe800000000	                          call 0x40014cd	      1863	move.c	FUNCTION_45	CALL_3
0x40014cd	          0x4c89e7	                            mov rdi, r12	      1867	move.c	FUNCTION_45	CALL_4
0x40014d0	      0xe800000000	                          call 0x40014d5	      1867	move.c	FUNCTION_45	CALL_4
0x40014d5	            0x89c3	                            mov ebx, eax	      1867	move.c	FUNCTION_45	CALL_4
0x40014d7	    0x488b05000000	            mov rax, qword [0x040014de] 	      1876	move.c	FUNCTION_45	IF_4
0x40014de	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1876	move.c	FUNCTION_45	IF_4
0x40014e5	      0xbd00000000	                              mov ebp, 0	      1816	move.c	FUNCTION_45
0x40014ea	          0x4939d4	                            cmp r12, rdx	      1876	move.c	FUNCTION_45	IF_4
0x40014ed	            0x7c0d	                            jl 0x40014fc	      1876	move.c	FUNCTION_45	IF_4
0x40014ef	            0x89dd	                            mov ebp, ebx	      1878	move.c	FUNCTION_45	IF_4
0x40014f1	          0x4939d4	                            cmp r12, rdx	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40014f4	            0x7506	                           jne 0x40014fc	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x40014f6	    0x2ba8f0000000	             sub ebp, dword [rax + 0xf0]	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x40014fc	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001500	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001505	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400150a	      0xe800000000	                          call 0x400150f	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400150f	            0x85c0	                           test eax, eax	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001511	            0x750a	                           jne 0x400151d	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001513	      0x4c89642420	             mov qword [rsp + 0x20], r12	      1894	move.c	FUNCTION_45	IF_6
0x4001518	      0x4c89642430	             mov qword [rsp + 0x30], r12	      1895	move.c	FUNCTION_45	IF_6
0x400151d	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1898	move.c	FUNCTION_45
0x4001525	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1899	move.c	FUNCTION_45
0x400152d	    0x488b3d000000	            mov rdi, qword [0x04001534] 	      1900	move.c	FUNCTION_45	CALL_7
0x4001534	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      1900	move.c	FUNCTION_45	CALL_7
0x400153b	      0xe800000000	                          call 0x4001540	      1900	move.c	FUNCTION_45	CALL_7
0x4001540	    0x488b15000000	            mov rdx, qword [0x04001547] 	      1901	move.c	FUNCTION_45
0x4001547	    0x2b82f4000000	             sub eax, dword [rdx + 0xf4]	      1900	move.c	FUNCTION_45	CALL_7
0x400154d	          0x4189c7	                           mov r15d, eax	      1900	move.c	FUNCTION_45	CALL_7
0x4001550	    0x41bc00000000	                             mov r12d, 0	      1817	move.c	FUNCTION_45
0x4001556	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x400155c	      0xe954010000	                           jmp 0x40016b5	      1904	move.c	FUNCTION_45	WHILE_1
0x4001561	            0x85ed	                           test ebp, ebp	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001563	            0x7e05	                           jle 0x400156a	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001565	          0x4439ed	                           cmp ebp, r13d	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001568	            0x7c1f	                            jl 0x4001589	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x400156a	          0x4963f4	                        movsxd rsi, r12d	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x400156d	    0x8b0500000000	            mov eax, dword [0x04001573] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001573	    0x488b0d000000	            mov rcx, qword [0x0400157a] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x400157a	            0x85c0	                           test eax, eax	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x400157c	            0x7e06	                           jle 0x4001584	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x400157e	          0x83e801	                              sub eax, 1	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001581	          0x4863c8	                         movsxd rcx, eax	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001584	          0x4839f1	                            cmp rcx, rsi	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001587	            0x7e15	                           jle 0x400159e	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001589	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x400158e	        0x4883c001	                              add rax, 1	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001592	    0x488b0d000000	            mov rcx, qword [0x04001599] 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001599	          0x483b01	                    cmp rax, qword [rcx]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x400159c	            0x7e24	                           jle 0x40015c2	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x400159e	    0x488b05000000	            mov rax, qword [0x040015a5] 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015a5	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015ac	          0x4839c2	                            cmp rdx, rax	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015af	            0x7f11	                            jg 0x40015c2	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015b1	     0xf8c0d010000	                            jl 0x40016c4	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015b7	      0x443b7c2428	           cmp r15d, dword [rsp + 0x28] 	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015bc	     0xf8e02010000	                           jle 0x40016c4	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x40015c2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x40015c7	      0xe8e1eaffff	                   call sym.topline_back	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x40015cc	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x40015d0	             0x1c3	                            add ebx, eax	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x40015d2	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x40015d7	        0x410f44de	                         cmove ebx, r14d	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x40015db	    0x488b15000000	            mov rdx, qword [0x040015e2] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x40015e2	    0x3b9aa0000000	            cmp ebx, dword [rdx + 0xa0] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x40015e8	     0xf8fdf010000	                            jg 0x40017cd	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x40015ee	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x40015f3	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x40015fa	          0x4839ce	                            cmp rsi, rcx	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x40015fd	            0x7c1d	                            jl 0x400161c	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x40015ff	            0x7f07	                            jg 0x4001608	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001601	      0x443b7c2428	           cmp r15d, dword [rsp + 0x28] 	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001606	            0x7c14	                            jl 0x400161c	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001608	             0x1c5	                            add ebp, eax	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x400160a	          0x4839ce	                            cmp rsi, rcx	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400160d	            0x750d	                           jne 0x400161c	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400160f	      0x837c243800	               cmp dword [rsp + 0x38], 0	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001614	            0x7506	                           jne 0x400161c	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001616	    0x2baaf0000000	             sub ebp, dword [rdx + 0xf0]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400161c	    0x488b05000000	            mov rax, qword [0x04001623] 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001623	          0x488b00	                    mov rax, qword [rax]	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001626	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x400162b	     0xf8d84000000	                           jge 0x40016b5	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001631	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x4001636	      0xe8aeebffff	                   call sym.botline_forw	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x400163b	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x400163f	             0x1d3	                            add ebx, edx	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001641	    0x488b0d000000	            mov rcx, qword [0x04001648] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x4001648	    0x3b99a0000000	            cmp ebx, dword [rcx + 0xa0] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x400164e	     0xf8f79010000	                            jg 0x40017cd	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x4001654	          0x4963fc	                        movsxd rdi, r12d	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001657	    0x8b0500000000	            mov eax, dword [0x0400165d] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400165d	    0x488b35000000	            mov rsi, qword [0x04001664] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001664	            0x85c0	                           test eax, eax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001666	            0x7e06	                           jle 0x400166e	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001668	          0x83e801	                              sub eax, 1	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400166b	          0x4863f0	                         movsxd rsi, eax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400166e	          0x4439ed	                           cmp ebp, r13d	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001671	            0x7c05	                            jl 0x4001678	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001673	          0x4839fe	                            cmp rsi, rdi	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001676	            0x7e3d	                           jle 0x40016b5	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001678	          0x4101d4	                           add r12d, edx	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400167b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001680	    0x488b81e80000	            mov rax, qword [rcx + 0xe8] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001687	          0x4839c6	                            cmp rsi, rax	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400168a	            0x7d15	                           jge 0x40016a1	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400168c	        0x488d7e01	                      lea rdi, [rsi + 1]	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001690	          0x4839f8	                            cmp rax, rdi	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001693	            0x7520	                           jne 0x40016b5	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001695	    0x8bb9f4000000	            mov edi, dword [rcx + 0xf4] 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400169b	        0x397c2438	            cmp dword [rsp + 0x38], edi 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400169f	            0x7e14	                           jle 0x40016b5	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x40016a1	             0x1d5	                            add ebp, edx	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x40016a3	          0x4839c6	                            cmp rsi, rax	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40016a6	            0x750d	                           jne 0x40016b5	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40016a8	      0x837c243800	               cmp dword [rsp + 0x38], 0	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40016ad	            0x7506	                           jne 0x40016b5	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40016af	    0x2ba9f0000000	             sub ebp, dword [rcx + 0xf0]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40016b5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1904	move.c	FUNCTION_45	WHILE_1
0x40016ba	        0x4883fa01	                              cmp rdx, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x40016be	     0xf8f9dfeffff	                            jg 0x4001561	      1904	move.c	FUNCTION_45	WHILE_1
0x40016c4	    0x41bc00000000	                             mov r12d, 0	      1984	move.c	FUNCTION_45	IF_17
0x40016ca	            0x85ed	                           test ebp, ebp	      1983	move.c	FUNCTION_45	IF_17
0x40016cc	            0x7e77	                           jle 0x4001745	      1983	move.c	FUNCTION_45	IF_17
0x40016ce	    0x488b05000000	            mov rax, qword [0x040016d5] 	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x40016d5	    0x3b98a0000000	            cmp ebx, dword [rax + 0xa0] 	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x40016db	            0x7e05	                           jle 0x40016e2	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x40016dd	          0x4c63e3	                         movsxd r12, ebx	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40016e0	            0xeb63	                           jmp 0x4001745	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40016e2	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1993	move.c	FUNCTION_45	ELSE_4
0x40016e8	        0x89542438	             mov dword [rsp + 0x38], edx	      1993	move.c	FUNCTION_45	ELSE_4
0x40016ec	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1995	move.c	FUNCTION_45	ELSE_4
0x40016f0	        0x488d57ff	                      lea rdx, [rdi - 1]	      1995	move.c	FUNCTION_45	ELSE_4
0x40016f4	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1995	move.c	FUNCTION_45	ELSE_4
0x40016f9	    0x483b90e80000	            cmp rdx, qword [rax + 0xe8] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001700	     0xf8dda000000	                           jge 0x40017e0	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001706	    0x41bc00000000	                             mov r12d, 0	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400170c	      0xbb00000000	                              mov ebx, 0	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001711	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4001716	      0xe8ceeaffff	                   call sym.botline_forw	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x400171b	            0x89d8	                            mov eax, ebx	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400171d	         0x344243c	             add eax, dword [rsp + 0x3c]	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001721	            0x89c3	                            mov ebx, eax	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001723	        0x4983c401	                              add r12, 1	      2000	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001727	            0x39c5	                            cmp ebp, eax	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001729	            0x7e1a	                           jle 0x4001745	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400172b	    0x488b05000000	            mov rax, qword [0x04001732] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001732	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001739	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400173e	            0x7cd1	                            jl 0x4001711	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001740	      0xe99b000000	                           jmp 0x40017e0	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001745	    0x488b05000000	            mov rax, qword [0x0400174c] 	      2010	move.c	FUNCTION_45	IF_20
0x400174c	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      2010	move.c	FUNCTION_45	IF_20
0x4001753	          0x4939c4	                            cmp r12, rax	      2010	move.c	FUNCTION_45	IF_20
0x4001756	            0x7c14	                            jl 0x400176c	      2010	move.c	FUNCTION_45	IF_20
0x4001758	          0x4d63ed	                        movsxd r13, r13d	      2010	move.c	FUNCTION_45	IF_20
0x400175b	          0x4d39ec	                            cmp r12, r13	      2010	move.c	FUNCTION_45	IF_20
0x400175e	            0x7e0c	                           jle 0x400176c	      2010	move.c	FUNCTION_45	IF_20
0x4001760	      0xbf00000000	                              mov edi, 0	      2011	move.c	FUNCTION_45	CALL_11
0x4001765	      0xe800000000	                          call 0x400176a	      2011	move.c	FUNCTION_45	CALL_11
0x400176a	            0xeb0d	                           jmp 0x4001779	      2011	move.c	FUNCTION_45	CALL_11
0x400176c	      0xbe01000000	                              mov esi, 1	      2013	move.c	FUNCTION_45	CALL_12
0x4001771	          0x4c89e7	                            mov rdi, r12	      2013	move.c	FUNCTION_45	CALL_12
0x4001774	      0xe800000000	                          call 0x4001779	      2013	move.c	FUNCTION_45	CALL_12
0x4001779	    0x488b05000000	            mov rax, qword [0x04001780] 	      2020	move.c	FUNCTION_45	IF_21
0x4001780	        0x488b3c24	                    mov rdi, qword [rsp]	      2020	move.c	FUNCTION_45	IF_21
0x4001784	        0x48397878	            cmp qword [rax + 0x78], rdi 	      2020	move.c	FUNCTION_45	IF_21
0x4001788	            0x7527	                           jne 0x40017b1	      2020	move.c	FUNCTION_45	IF_21
0x400178a	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2020	move.c	FUNCTION_45	IF_21
0x400178f	            0x7420	                            je 0x40017b1	      2020	move.c	FUNCTION_45	IF_21
0x4001791	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2022	move.c	FUNCTION_45	IF_21
0x4001796	    0x4889b8e80000	             mov qword [rax + 0xe8], rdi	      2022	move.c	FUNCTION_45	IF_21
0x400179d	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      2023	move.c	FUNCTION_45	IF_21
0x40017a1	    0x89b8f0000000	             mov dword [rax + 0xf0], edi	      2023	move.c	FUNCTION_45	IF_21
0x40017a7	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      2024	move.c	FUNCTION_45	IF_21
0x40017ab	    0x89b8b4000000	             mov dword [rax + 0xb4], edi	      2024	move.c	FUNCTION_45	IF_21
0x40017b1	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	      2026	move.c	FUNCTION_45
0x40017bb	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2027	move.c	FUNCTION_45
0x40017c0	    0x644833042528	                xor rax, qword fs:[0x28]	      2027	move.c	FUNCTION_45
0x40017c9	            0x7425	                            je 0x40017f0	      2027	move.c	FUNCTION_45
0x40017cb	            0xeb1e	                           jmp 0x40017eb	      2027	move.c	FUNCTION_45
0x40017cd	    0x41bc00000000	                             mov r12d, 0	      1984	move.c	FUNCTION_45	IF_17
0x40017d3	            0x85ed	                           test ebp, ebp	      1983	move.c	FUNCTION_45	IF_17
0x40017d5	     0xf8f02ffffff	                            jg 0x40016dd	      1983	move.c	FUNCTION_45	IF_17
0x40017db	      0xe965ffffff	                           jmp 0x4001745	      1983	move.c	FUNCTION_45	IF_17
0x40017e0	    0x41bc0f270000	                        mov r12d, 0x270f	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x40017e6	      0xe95affffff	                           jmp 0x4001745	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x40017eb	      0xe800000000	                          call 0x40017f0	      2027	move.c	FUNCTION_45
0x40017f0	        0x4883c458	                           add rsp, 0x58	      2027	move.c	FUNCTION_45
0x40017f4	              0x5b	                                 pop rbx	      2027	move.c	FUNCTION_45
0x40017f5	              0x5d	                                 pop rbp	      2027	move.c	FUNCTION_45
0x40017f6	            0x415c	                                 pop r12	      2027	move.c	FUNCTION_45
0x40017f8	            0x415d	                                 pop r13	      2027	move.c	FUNCTION_45
0x40017fa	            0x415e	                                 pop r14	      2027	move.c	FUNCTION_45
0x40017fc	            0x415f	                                 pop r15	      2027	move.c	FUNCTION_45
0x40017fe	              0xc3	                                     ret	      2027	move.c	FUNCTION_45
scrolldown	IF,9:functions,0:ELSE,4:FOR,0:WHILE,2:SWITCH,0:CALL,13:DO,0	153
0x4002366	            0x4155	                                push r13	      1180	move.c	FUNCTION_33
0x4002368	            0x4154	                                push r12	      1180	move.c	FUNCTION_33
0x400236a	              0x55	                                push rbp	      1180	move.c	FUNCTION_33
0x400236b	              0x53	                                push rbx	      1180	move.c	FUNCTION_33
0x400236c	        0x4883ec18	                           sub rsp, 0x18	      1180	move.c	FUNCTION_33
0x4002370	          0x4889fd	                            mov rbp, rdi	      1180	move.c	FUNCTION_33
0x4002373	          0x4189f4	                           mov r12d, esi	      1180	move.c	FUNCTION_33
0x4002376	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	move.c	FUNCTION_33
0x400237f	      0x4889442408	                mov qword [rsp + 8], rax	      1180	move.c	FUNCTION_33
0x4002384	            0x31c0	                            xor eax, eax	      1180	move.c	FUNCTION_33
0x4002386	    0x488b05000000	            mov rax, qword [0x0400238d] 	      1189	move.c	FUNCTION_33	CALL_1
0x400238d	        0x488d7078	                   lea rsi, [rax + 0x78]	      1189	move.c	FUNCTION_33	CALL_1
0x4002391	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1189	move.c	FUNCTION_33	CALL_1
0x4002395	      0xba00000000	                              mov edx, 0	      1189	move.c	FUNCTION_33	CALL_1
0x400239a	      0xe800000000	                          call 0x400239f	      1189	move.c	FUNCTION_33	CALL_1
0x400239f	      0xe800000000	                          call 0x40023a4	      1191	move.c	FUNCTION_33	CALL_2
0x40023a4	          0x4885ed	                           test rbp, rbp	      1192	move.c	FUNCTION_33	WHILE_1
0x40023a7	     0xf8e08010000	                           jle 0x40024b5	      1192	move.c	FUNCTION_33	WHILE_1
0x40023ad	        0x488d5dff	                      lea rbx, [rbp - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x40023b1	      0xbd00000000	                              mov ebp, 0	      1192	move.c	FUNCTION_33	WHILE_1
0x40023b6	    0x488b3d000000	            mov rdi, qword [0x040023bd] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023bd	    0x448baf840000	           mov r13d, dword [rdi + 0x84] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023c4	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023c8	      0xe800000000	                          call 0x40023cd	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023cd	          0x4139c5	                           cmp r13d, eax	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023d0	            0x7d2f	                           jge 0x4002401	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x40023d2	    0x488b15000000	            mov rdx, qword [0x040023d9] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023d9	    0x8b8a84000000	            mov ecx, dword [rdx + 0x84] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023df	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023e5	          0x83e801	                              sub eax, 1	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023e8	            0x39c1	                            cmp ecx, eax	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023ea	            0x7d15	                           jge 0x4002401	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023ec	          0x83c101	                              add ecx, 1	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023ef	    0x898a84000000	             mov dword [rdx + 0x84], ecx	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023f5	        0x4883c501	                              add rbp, 1	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023f9	          0x4989dd	                            mov r13, rbx	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x40023fc	      0xe991000000	                           jmp 0x4002492	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002401	    0x488b05000000	            mov rax, qword [0x04002408] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002408	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x400240c	        0x4883ff01	                              cmp rdi, 1	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002410	     0xf84a4000000	                            je 0x40024ba	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002416	        0x4883ef01	                              sub rdi, 1	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x400241a	        0x48897878	             mov qword [rax + 0x78], rdi	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x400241e	    0xc78084000000	               mov dword [rax + 0x84], 0	      1208	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002428	      0xba00000000	                              mov edx, 0	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x400242d	          0x4889e6	                            mov rsi, rsp	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002430	      0xe800000000	                          call 0x4002435	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002435	            0x85c0	                           test eax, eax	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002437	            0x7441	                            je 0x400247a	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002439	        0x4883c501	                              add rbp, 1	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400243d	          0x4585e4	                         test r12d, r12d	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002440	            0x7516	                           jne 0x4002458	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002442	    0x488b05000000	            mov rax, qword [0x04002449] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002449	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x400244d	        0x482b0424	                    sub rax, qword [rsp]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002451	        0x4883e801	                              sub rax, 1	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002455	          0x4829c3	                            sub rbx, rax	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002458	    0x488b05000000	            mov rax, qword [0x0400245f] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400245f	        0x488b0c24	                    mov rcx, qword [rsp]	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002463	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002467	          0x4829ca	                            sub rdx, rcx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400246a	    0x482990e80000	             sub qword [rax + 0xe8], rdx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002471	        0x48894878	             mov qword [rax + 0x78], rcx	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002475	          0x4989dd	                            mov r13, rbx	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002478	            0xeb18	                           jmp 0x4002492	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x400247a	    0x488b05000000	            mov rax, qword [0x04002481] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002481	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002485	      0xe800000000	                          call 0x400248a	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x400248a	            0x4898	                                    cdqe	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x400248c	          0x4801c5	                            add rbp, rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x400248f	          0x4989dd	                            mov r13, rbx	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002492	    0x488b05000000	            mov rax, qword [0x04002499] 	      1224	move.c	FUNCTION_33	WHILE_1
0x4002499	    0x4883a8e80000	               sub qword [rax + 0xe8], 1	      1224	move.c	FUNCTION_33	WHILE_1
0x40024a1	      0xe800000000	                          call 0x40024a6	      1225	move.c	FUNCTION_33	WHILE_1	CALL_6
0x40024a6	        0x498d5dff	                      lea rbx, [r13 - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x40024aa	          0x4d85ed	                           test r13, r13	      1192	move.c	FUNCTION_33	WHILE_1
0x40024ad	     0xf8f03ffffff	                            jg 0x40023b6	      1192	move.c	FUNCTION_33	WHILE_1
0x40024b3	            0xeb05	                           jmp 0x40024ba	      1192	move.c	FUNCTION_33	WHILE_1
0x40024b5	      0xbd00000000	                              mov ebp, 0	      1181	move.c	FUNCTION_33
0x40024ba	    0x488b3d000000	            mov rdi, qword [0x040024c1] 	      1227	move.c	FUNCTION_33
0x40024c1	     0x1afdc000000	             add dword [rdi + 0xdc], ebp	      1227	move.c	FUNCTION_33
0x40024c7	     0x1afd4000000	             add dword [rdi + 0xd4], ebp	      1228	move.c	FUNCTION_33
0x40024cd	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1231	move.c	FUNCTION_33	IF_5
0x40024d1	        0x48394738	            cmp qword [rdi + 0x38], rax 	      1231	move.c	FUNCTION_33	IF_5
0x40024d5	            0x750a	                           jne 0x40024e1	      1231	move.c	FUNCTION_33	IF_5
0x40024d7	    0xc787d4000000	               mov dword [rdi + 0xd4], 0	      1232	move.c	FUNCTION_33	IF_5
0x40024e1	      0xbe01000000	                              mov esi, 1	      1233	move.c	FUNCTION_33	CALL_7
0x40024e6	      0xe800000000	                          call 0x40024eb	      1233	move.c	FUNCTION_33	CALL_7
0x40024eb	    0x488b05000000	            mov rax, qword [0x040024f2] 	      1240	move.c	FUNCTION_33
0x40024f2	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1240	move.c	FUNCTION_33
0x40024f8	    0x83b894020000	              cmp dword [rax + 0x294], 0	      1241	move.c	FUNCTION_33	IF_6
0x40024ff	            0x7434	                            je 0x4002535	      1241	move.c	FUNCTION_33	IF_6
0x4002501	    0x83b8ac000000	               cmp dword [rax + 0xac], 0	      1241	move.c	FUNCTION_33	IF_6
0x4002508	            0x742b	                            je 0x4002535	      1241	move.c	FUNCTION_33	IF_6
0x400250a	      0xe800000000	                          call 0x400250f	      1243	move.c	FUNCTION_33	IF_6	CALL_8
0x400250f	      0xe8b4e2ffff	               call sym.validate_cheight	      1244	move.c	FUNCTION_33	IF_6	CALL_9
0x4002514	    0x488b35000000	            mov rsi, qword [0x0400251b] 	      1245	move.c	FUNCTION_33	IF_6
0x400251b	    0x8b86cc000000	            mov eax, dword [rsi + 0xcc] 	      1245	move.c	FUNCTION_33	IF_6
0x4002521	          0x8d48ff	                      lea ecx, [rax - 1]	      1245	move.c	FUNCTION_33	IF_6
0x4002524	    0x8b86d8000000	            mov eax, dword [rsi + 0xd8] 	      1245	move.c	FUNCTION_33	IF_6
0x400252a	              0x99	                                     cdq	      1245	move.c	FUNCTION_33	IF_6
0x400252b	    0xf7beac000000	                 idiv dword [rsi + 0xac]	      1245	move.c	FUNCTION_33	IF_6
0x4002531	            0x29c1	                            sub ecx, eax	      1245	move.c	FUNCTION_33	IF_6
0x4002533	             0x1cb	                            add ebx, ecx	      1245	move.c	FUNCTION_33	IF_6
0x4002535	    0x488b05000000	            mov rax, qword [0x0400253c] 	      1248	move.c	FUNCTION_33	WHILE_2
0x400253c	    0x3b98a0000000	            cmp ebx, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002542	     0xf8c9c000000	                            jl 0x40025e4	      1248	move.c	FUNCTION_33	WHILE_2
0x4002548	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x400254c	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x4002550	     0xf8e8e000000	                           jle 0x40025e4	      1248	move.c	FUNCTION_33	WHILE_2
0x4002556	      0xba00000000	                              mov edx, 0	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x400255b	          0x4889e6	                            mov rsi, rsp	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x400255e	      0xe800000000	                          call 0x4002563	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002563	            0x85c0	                           test eax, eax	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002565	            0x742f	                            je 0x4002596	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002567	          0x83eb01	                              sub ebx, 1	      1253	move.c	FUNCTION_33	WHILE_2	IF_7
0x400256a	        0x488b0424	                    mov rax, qword [rsp]	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400256e	        0x4883f801	                              cmp rax, 1	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002572	            0x7511	                           jne 0x4002585	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002574	    0x488b05000000	            mov rax, qword [0x0400257b] 	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400257b	    0x48c740380100	               mov qword [rax + 0x38], 1	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002583	            0xeb2b	                           jmp 0x40025b0	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002585	        0x4883e801	                              sub rax, 1	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002589	    0x488b15000000	            mov rdx, qword [0x04002590] 	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002590	        0x48894238	             mov qword [rdx + 0x38], rax	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002594	            0xeb1a	                           jmp 0x40025b0	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002596	    0x488b05000000	            mov rax, qword [0x0400259d] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x400259d	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40025a1	        0x488d57ff	                      lea rdx, [rdi - 1]	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40025a5	        0x48895038	             mov qword [rax + 0x38], rdx	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40025a9	      0xe800000000	                          call 0x40025ae	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40025ae	            0x29c3	                            sub ebx, eax	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40025b0	    0x488b05000000	            mov rax, qword [0x040025b7] 	      1262	move.c	FUNCTION_33	WHILE_2
0x40025b7	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x40025be	    0x3b98a0000000	            cmp ebx, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40025c4	            0x7c0a	                            jl 0x40025d0	      1248	move.c	FUNCTION_33	WHILE_2
0x40025c6	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40025ca	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x40025ce	            0x7f86	                            jg 0x4002556	      1248	move.c	FUNCTION_33	WHILE_2
0x40025d0	      0xe800000000	                          call 0x40025d5	      1270	move.c	FUNCTION_33	IF_9	CALL_12
0x40025d5	    0x488b05000000	            mov rax, qword [0x040025dc] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40025dc	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40025df	      0xe800000000	                          call 0x40025e4	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x40025e4	      0x488b442408	                mov rax, qword [rsp + 8]	      1274	move.c	FUNCTION_33
0x40025e9	    0x644833042528	                xor rax, qword fs:[0x28]	      1274	move.c	FUNCTION_33
0x40025f2	            0x7405	                            je 0x40025f9	      1274	move.c	FUNCTION_33
0x40025f4	      0xe800000000	                          call 0x40025f9	      1274	move.c	FUNCTION_33
0x40025f9	        0x4883c418	                           add rsp, 0x18	      1274	move.c	FUNCTION_33
0x40025fd	              0x5b	                                 pop rbx	      1274	move.c	FUNCTION_33
0x40025fe	              0x5d	                                 pop rbp	      1274	move.c	FUNCTION_33
0x40025ff	            0x415c	                                 pop r12	      1274	move.c	FUNCTION_33
0x4002601	            0x415d	                                 pop r13	      1274	move.c	FUNCTION_33
0x4002603	              0xc3	                                     ret	      1274	move.c	FUNCTION_33
scrollup	IF,8:functions,0:ELSE,2:FOR,0:WHILE,1:SWITCH,0:CALL,7:DO,0	101
0x4000bd3	            0x4154	                                push r12	      1283	move.c	FUNCTION_34
0x4000bd5	              0x55	                                push rbp	      1283	move.c	FUNCTION_34
0x4000bd6	              0x53	                                push rbx	      1283	move.c	FUNCTION_34
0x4000bd7	        0x4883ec10	                           sub rsp, 0x10	      1283	move.c	FUNCTION_34
0x4000bdb	          0x4889fb	                            mov rbx, rdi	      1283	move.c	FUNCTION_34
0x4000bde	            0x89f5	                            mov ebp, esi	      1283	move.c	FUNCTION_34
0x4000be0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1283	move.c	FUNCTION_34
0x4000be9	      0x4889442408	                mov qword [rsp + 8], rax	      1283	move.c	FUNCTION_34
0x4000bee	            0x31c0	                            xor eax, eax	      1283	move.c	FUNCTION_34
0x4000bf0	            0x85f6	                           test esi, esi	      1287	move.c	FUNCTION_34	IF_1
0x4000bf2	            0x7410	                            je 0x4000c04	      1287	move.c	FUNCTION_34	IF_1
0x4000bf4	    0x488b3d000000	            mov rdi, qword [0x04000bfb] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4000bfb	      0xe800000000	                          call 0x4000c00	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4000c00	            0x85c0	                           test eax, eax	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4000c02	            0x7514	                           jne 0x4000c18	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4000c04	    0x488b05000000	            mov rax, qword [0x04000c0b] 	      1295	move.c	FUNCTION_34	IF_1
0x4000c0b	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      1291	move.c	FUNCTION_34	IF_1
0x4000c12	     0xf8499000000	                            je 0x4000cb1	      1291	move.c	FUNCTION_34	IF_1
0x4000c18	    0x488b05000000	            mov rax, qword [0x04000c1f] 	      1300	move.c	FUNCTION_34	IF_1
0x4000c1f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1300	move.c	FUNCTION_34	IF_1
0x4000c23	        0x48890424	                    mov qword [rsp], rax	      1300	move.c	FUNCTION_34	IF_1
0x4000c27	            0xeb64	                           jmp 0x4000c8d	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4000c29	    0x488b15000000	            mov rdx, qword [0x04000c30] 	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c30	    0x8b8284000000	            mov eax, dword [rdx + 0x84] 	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c36	            0x85c0	                           test eax, eax	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c38	            0x7e0b	                           jle 0x4000c45	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c3a	          0x83e801	                              sub eax, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c3d	    0x898284000000	             mov dword [rdx + 0x84], eax	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c43	            0xeb44	                           jmp 0x4000c89	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4000c45	            0x85ed	                           test ebp, ebp	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x4000c47	            0x7411	                            je 0x4000c5a	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x4000c49	          0x4889e2	                            mov rdx, rsp	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4000c4c	      0xbe00000000	                              mov esi, 0	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4000c51	        0x488b3c24	                    mov rdi, qword [rsp]	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4000c55	      0xe800000000	                          call 0x4000c5a	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4000c5a	        0x488b3424	                    mov rsi, qword [rsp]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4000c5e	    0x488b05000000	            mov rax, qword [0x04000c65] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4000c65	          0x483930	                    cmp qword [rax], rsi	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4000c68	            0x7e28	                           jle 0x4000c92	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4000c6a	        0x4883c601	                              add rsi, 1	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x4000c6e	        0x48893424	                    mov qword [rsp], rsi	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x4000c72	    0x4c8b25000000	            mov r12, qword [0x04000c79] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4000c79	          0x4c89e7	                            mov rdi, r12	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4000c7c	      0xe800000000	                          call 0x4000c81	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4000c81	    0x418984248400	             mov dword [r12 + 0x84], eax	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4000c89	        0x4883eb01	                              sub rbx, 1	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4000c8d	          0x4885db	                           test rbx, rbx	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4000c90	            0x7597	                           jne 0x4000c29	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4000c92	    0x488b05000000	            mov rax, qword [0x04000c99] 	      1322	move.c	FUNCTION_34	IF_1
0x4000c99	        0x488b1424	                    mov rdx, qword [rsp]	      1322	move.c	FUNCTION_34	IF_1
0x4000c9d	          0x4889d1	                            mov rcx, rdx	      1322	move.c	FUNCTION_34	IF_1
0x4000ca0	        0x482b4878	             sub rcx, qword [rax + 0x78]	      1322	move.c	FUNCTION_34	IF_1
0x4000ca4	    0x480188e80000	            add qword [rax + 0xe8], rcx 	      1322	move.c	FUNCTION_34	IF_1
0x4000cab	        0x48895078	             mov qword [rax + 0x78], rdx	      1323	move.c	FUNCTION_34	IF_1
0x4000caf	            0xeb0b	                           jmp 0x4000cbc	      1323	move.c	FUNCTION_34	IF_1
0x4000cb1	        0x48015878	            add qword [rax + 0x78], rbx 	      1328	move.c	FUNCTION_34	ELSE_2
0x4000cb5	    0x480198e80000	            add qword [rax + 0xe8], rbx 	      1329	move.c	FUNCTION_34	ELSE_2
0x4000cbc	    0x488b3d000000	            mov rdi, qword [0x04000cc3] 	      1332	move.c	FUNCTION_34	IF_5
0x4000cc3	    0x488b05000000	            mov rax, qword [0x04000cca] 	      1332	move.c	FUNCTION_34	IF_5
0x4000cca	          0x488b10	                    mov rdx, qword [rax]	      1332	move.c	FUNCTION_34	IF_5
0x4000ccd	        0x48395778	            cmp qword [rdi + 0x78], rdx 	      1332	move.c	FUNCTION_34	IF_5
0x4000cd1	            0x7e04	                           jle 0x4000cd7	      1332	move.c	FUNCTION_34	IF_5
0x4000cd3	        0x48895778	             mov qword [rdi + 0x78], rdx	      1333	move.c	FUNCTION_34	IF_5
0x4000cd7	          0x488b00	                    mov rax, qword [rax]	      1334	move.c	FUNCTION_34	IF_6
0x4000cda	        0x4883c001	                              add rax, 1	      1334	move.c	FUNCTION_34	IF_6
0x4000cde	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      1334	move.c	FUNCTION_34	IF_6
0x4000ce5	            0x7e07	                           jle 0x4000cee	      1334	move.c	FUNCTION_34	IF_6
0x4000ce7	    0x488987e80000	             mov qword [rdi + 0xe8], rax	      1335	move.c	FUNCTION_34	IF_6
0x4000cee	      0xbe00000000	                              mov esi, 0	      1338	move.c	FUNCTION_34	CALL_4
0x4000cf3	      0xe800000000	                          call 0x4000cf8	      1338	move.c	FUNCTION_34	CALL_4
0x4000cf8	    0x488b3d000000	            mov rdi, qword [0x04000cff] 	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4000cff	      0xe800000000	                          call 0x4000d04	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4000d04	            0x85c0	                           test eax, eax	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4000d06	            0x7419	                            je 0x4000d21	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4000d08	    0x488b05000000	            mov rax, qword [0x04000d0f] 	      1344	move.c	FUNCTION_34	CALL_6
0x4000d0f	        0x488d7078	                   lea rsi, [rax + 0x78]	      1344	move.c	FUNCTION_34	CALL_6
0x4000d13	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1344	move.c	FUNCTION_34	CALL_6
0x4000d17	      0xba00000000	                              mov edx, 0	      1344	move.c	FUNCTION_34	CALL_6
0x4000d1c	      0xe800000000	                          call 0x4000d21	      1344	move.c	FUNCTION_34	CALL_6
0x4000d21	    0x488b05000000	            mov rax, qword [0x04000d28] 	      1347	move.c	FUNCTION_34
0x4000d28	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1347	move.c	FUNCTION_34
0x4000d2e	            0x89d1	                            mov ecx, edx	      1347	move.c	FUNCTION_34
0x4000d30	          0x83e1ce	                     and ecx, 0xffffffce	      1347	move.c	FUNCTION_34
0x4000d33	    0x8988b4000000	             mov dword [rax + 0xb4], ecx	      1347	move.c	FUNCTION_34
0x4000d39	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1348	move.c	FUNCTION_34	IF_8
0x4000d3d	        0x48394838	            cmp qword [rax + 0x38], rcx 	      1348	move.c	FUNCTION_34	IF_8
0x4000d41	            0x7d15	                           jge 0x4000d58	      1348	move.c	FUNCTION_34	IF_8
0x4000d43	        0x48894838	             mov qword [rax + 0x38], rcx	      1350	move.c	FUNCTION_34	IF_8
0x4000d47	          0x83e2c0	                     and edx, 0xffffffc0	      1351	move.c	FUNCTION_34	IF_8
0x4000d4a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1351	move.c	FUNCTION_34	IF_8
0x4000d50	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x4000d53	      0xe800000000	                          call 0x4000d58	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x4000d58	      0x488b442408	                mov rax, qword [rsp + 8]	      1355	move.c	FUNCTION_34
0x4000d5d	    0x644833042528	                xor rax, qword fs:[0x28]	      1355	move.c	FUNCTION_34
0x4000d66	            0x7405	                            je 0x4000d6d	      1355	move.c	FUNCTION_34
0x4000d68	      0xe800000000	                          call 0x4000d6d	      1355	move.c	FUNCTION_34
0x4000d6d	        0x4883c410	                           add rsp, 0x10	      1355	move.c	FUNCTION_34
0x4000d71	              0x5b	                                 pop rbx	      1355	move.c	FUNCTION_34
0x4000d72	              0x5d	                                 pop rbp	      1355	move.c	FUNCTION_34
0x4000d73	            0x415c	                                 pop r12	      1355	move.c	FUNCTION_34
0x4000d75	              0xc3	                                     ret	      1355	move.c	FUNCTION_34
validate_cursor_col	IF,3:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,3:DO,0	44
0x4000ace	            0x4154	                                push r12	       841	move.c	FUNCTION_27
0x4000ad0	              0x55	                                push rbp	       841	move.c	FUNCTION_27
0x4000ad1	              0x53	                                push rbx	       841	move.c	FUNCTION_27
0x4000ad2	      0xe800000000	                          call 0x4000ad7	       846	move.c	FUNCTION_27	CALL_1
0x4000ad7	    0x488b05000000	            mov rax, qword [0x04000ade] 	       847	move.c	FUNCTION_27	IF_1
0x4000ade	    0xf680b4000000	               test byte [rax + 0xb4], 2	       847	move.c	FUNCTION_27	IF_1
0x4000ae5	            0x7579	                           jne 0x4000b60	       847	move.c	FUNCTION_27	IF_1
0x4000ae7	    0x8b98d8000000	            mov ebx, dword [rax + 0xd8] 	       849	move.c	FUNCTION_27	IF_1
0x4000aed	      0xe800000000	                          call 0x4000af2	       850	move.c	FUNCTION_27	IF_1	CALL_2
0x4000af2	            0x89c5	                            mov ebp, eax	       850	move.c	FUNCTION_27	IF_1	CALL_2
0x4000af4	             0x1c3	                            add ebx, eax	       851	move.c	FUNCTION_27	IF_1
0x4000af6	    0x488b05000000	            mov rax, qword [0x04000afd] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000afd	    0x448ba0ac0000	           mov r12d, dword [rax + 0xac] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000b04	      0xe800000000	                          call 0x4000b09	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000b09	    0x488b0d000000	            mov rcx, qword [0x04000b10] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000b10	    0x83b994020000	              cmp dword [rcx + 0x294], 0	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000b17	            0x7426	                            je 0x4000b3f	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000b19	          0x4129ec	                           sub r12d, ebp	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000b1c	        0x418d3404	                    lea esi, [r12 + rax]	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000b20	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	       856	move.c	FUNCTION_27	IF_1	IF_2
0x4000b26	            0x85f6	                           test esi, esi	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000b28	            0x7e15	                           jle 0x4000b3f	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000b2a	            0x39c3	                            cmp ebx, eax	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000b2c	            0x7c11	                            jl 0x4000b3f	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000b2e	            0x89df	                            mov edi, ebx	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b30	            0x29c7	                            sub edi, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b32	            0x89f8	                            mov eax, edi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b34	              0x99	                                     cdq	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b35	            0xf7fe	                                idiv esi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b37	          0x83c001	                              add eax, 1	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b3a	           0xfaff0	                           imul esi, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b3d	            0x29f3	                            sub ebx, esi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000b3f	    0x8b9194000000	            mov edx, dword [rcx + 0x94] 	       860	move.c	FUNCTION_27	IF_1	IF_3
0x4000b45	            0x89d8	                            mov eax, ebx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000b47	            0x29d0	                            sub eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000b49	            0x39d3	                            cmp ebx, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000b4b	      0xba00000000	                              mov edx, 0	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000b50	           0xf4ec2	                         cmovle eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000b53	    0x8981e0000000	             mov dword [rcx + 0xe0], eax	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x4000b59	    0x8389b4000000	                or dword [rcx + 0xb4], 2	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x4000b60	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x4000b61	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x4000b62	            0x415c	                                 pop r12	       868	move.c	FUNCTION_27	ELSE_1
0x4000b64	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
set_empty_rows	IF,3:functions,0:ELSE,2:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	26
0x4000d76	    0xc787f4000000	               mov dword [rdi + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4000d80	            0x85f6	                           test esi, esi	      1785	move.c	FUNCTION_44	IF_1
0x4000d82	            0x750b	                           jne 0x4000d8f	      1785	move.c	FUNCTION_44	IF_1
0x4000d84	    0xc787f0000000	               mov dword [rdi + 0xf0], 0	      1786	move.c	FUNCTION_44	IF_1
0x4000d8e	              0xc3	                                     ret	      1786	move.c	FUNCTION_44	IF_1
0x4000d8f	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	      1789	move.c	FUNCTION_44	ELSE_1
0x4000d95	            0x29f0	                            sub eax, esi	      1789	move.c	FUNCTION_44	ELSE_1
0x4000d97	    0x8987f0000000	             mov dword [rdi + 0xf0], eax	      1789	move.c	FUNCTION_44	ELSE_1
0x4000d9d	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000da4	        0x488b4708	                mov rax, qword [rdi + 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000da8	          0x483b30	                    cmp rsi, qword [rax]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000dab	            0x7f34	                            jg 0x4000de1	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000dad	              0x53	                                push rbx	      1781	move.c	FUNCTION_44
0x4000dae	          0x4889fb	                            mov rbx, rdi	      1781	move.c	FUNCTION_44
0x4000db1	      0xe800000000	                          call 0x4000db6	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4000db6	    0x8983f4000000	             mov dword [rbx + 0xf4], eax	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4000dbc	    0x8b93f0000000	            mov edx, dword [rbx + 0xf0] 	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dc2	            0x39d0	                            cmp eax, edx	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dc4	            0x7d0a	                           jge 0x4000dd0	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dc6	            0x29c2	                            sub edx, eax	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dc8	    0x8993f0000000	             mov dword [rbx + 0xf0], edx	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dce	            0xeb10	                           jmp 0x4000de0	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000dd0	    0x8993f4000000	             mov dword [rbx + 0xf4], edx	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x4000dd6	    0xc783f0000000	               mov dword [rbx + 0xf0], 0	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x4000de0	              0x5b	                                 pop rbx	      1804	move.c	FUNCTION_44
0x4000de1	            0xf3c3	                                     ret	      1804	move.c	FUNCTION_44
scrollup_clamp	IF,4:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,5:DO,0	47
0x400271f	              0x53	                                push rbx	      1483	move.c	FUNCTION_38
0x4002720	    0x488b05000000	            mov rax, qword [0x04002727] 	      1486	move.c	FUNCTION_38	IF_1
0x4002727	    0x488b15000000	            mov rdx, qword [0x0400272e] 	      1486	move.c	FUNCTION_38	IF_1
0x400272e	          0x488b32	                    mov rsi, qword [rdx]	      1486	move.c	FUNCTION_38	IF_1
0x4002731	        0x48397078	            cmp qword [rax + 0x78], rsi 	      1486	move.c	FUNCTION_38	IF_1
0x4002735	            0x750d	                           jne 0x4002744	      1486	move.c	FUNCTION_38	IF_1
0x4002737	    0x83b884000000	               cmp dword [rax + 0x84], 0	      1488	move.c	FUNCTION_38	IF_1
0x400273e	     0xf84b3000000	                            je 0x40027f7	      1488	move.c	FUNCTION_38	IF_1
0x4002744	      0xe800000000	                          call 0x4002749	      1493	move.c	FUNCTION_38	CALL_1
0x4002749	    0x488b05000000	            mov rax, qword [0x04002750] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002750	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002756	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1501	move.c	FUNCTION_38	CALL_2
0x400275a	      0xe800000000	                          call 0x400275f	      1501	move.c	FUNCTION_38	CALL_2
0x400275f	    0x488b15000000	            mov rdx, qword [0x04002766] 	      1502	move.c	FUNCTION_38
0x4002766	            0x29c3	                            sub ebx, eax	      1501	move.c	FUNCTION_38	CALL_2
0x4002768	    0x2b9a84000000	             sub ebx, dword [rdx + 0x84]	      1501	move.c	FUNCTION_38	CALL_2
0x400276e	    0x83ba94020000	              cmp dword [rdx + 0x294], 0	      1506	move.c	FUNCTION_38	IF_2
0x4002775	            0x7424	                            je 0x400279b	      1506	move.c	FUNCTION_38	IF_2
0x4002777	    0x83baac000000	               cmp dword [rdx + 0xac], 0	      1506	move.c	FUNCTION_38	IF_2
0x400277e	            0x741b	                            je 0x400279b	      1506	move.c	FUNCTION_38	IF_2
0x4002780	      0xe800000000	                          call 0x4002785	      1508	move.c	FUNCTION_38	IF_2	CALL_4
0x4002785	    0x488b0d000000	            mov rcx, qword [0x0400278c] 	      1509	move.c	FUNCTION_38	IF_2
0x400278c	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      1509	move.c	FUNCTION_38	IF_2
0x4002792	              0x99	                                     cdq	      1509	move.c	FUNCTION_38	IF_2
0x4002793	    0xf7b9ac000000	                 idiv dword [rcx + 0xac]	      1509	move.c	FUNCTION_38	IF_2
0x4002799	            0x29c3	                            sub ebx, eax	      1509	move.c	FUNCTION_38	IF_2
0x400279b	          0x4863db	                         movsxd rbx, ebx	      1511	move.c	FUNCTION_38	IF_3
0x400279e	    0x483b1d000000	            cmp rbx, qword [0x040027a5] 	      1511	move.c	FUNCTION_38	IF_3
0x40027a5	            0x7c50	                            jl 0x40027f7	      1511	move.c	FUNCTION_38	IF_3
0x40027a7	    0x488b0d000000	            mov rcx, qword [0x040027ae] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x40027ae	    0x8b8184000000	            mov eax, dword [rcx + 0x84] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x40027b4	            0x85c0	                           test eax, eax	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x40027b6	            0x7e0b	                           jle 0x40027c3	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x40027b8	          0x83e801	                              sub eax, 1	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x40027bb	    0x898184000000	             mov dword [rcx + 0x84], eax	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x40027c1	            0xeb1e	                           jmp 0x40027e1	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x40027c3	        0x488d5178	                   lea rdx, [rcx + 0x78]	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x40027c7	        0x488b7978	            mov rdi, qword [rcx + 0x78] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x40027cb	      0xbe00000000	                              mov esi, 0	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x40027d0	      0xe800000000	                          call 0x40027d5	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x40027d5	    0x488b05000000	            mov rax, qword [0x040027dc] 	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x40027dc	      0x4883407801	               add qword [rax + 0x78], 1	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x40027e1	    0x488b05000000	            mov rax, qword [0x040027e8] 	      1524	move.c	FUNCTION_38	IF_3
0x40027e8	    0x488380e80000	               add qword [rax + 0xe8], 1	      1524	move.c	FUNCTION_38	IF_3
0x40027f0	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      1525	move.c	FUNCTION_38	IF_3
0x40027f7	              0x5b	                                 pop rbx	      1527	move.c	FUNCTION_38
0x40027f8	              0xc3	                                     ret	      1527	move.c	FUNCTION_38
topline_back	IF,3:functions,0:ELSE,3:FOR,0:WHILE,0:SWITCH,0:CALL,3:DO,0	35
0x40000ad	              0x55	                                push rbp	      1538	move.c	FUNCTION_39
0x40000ae	              0x53	                                push rbx	      1538	move.c	FUNCTION_39
0x40000af	        0x4883ec08	                              sub rsp, 8	      1538	move.c	FUNCTION_39
0x40000b3	          0x4889fb	                            mov rbx, rdi	      1538	move.c	FUNCTION_39
0x40000b6	          0x8b6f08	                mov ebp, dword [rdi + 8]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000b9	          0x488b37	                    mov rsi, qword [rdi]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000bc	    0x488b3d000000	            mov rdi, qword [0x040000c3] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000c3	      0xe800000000	                          call 0x40000c8	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000c8	            0x39c5	                            cmp ebp, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000ca	            0x7d0d	                           jge 0x40000d9	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40000cc	        0x83430801	                  add dword [rbx + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x40000d0	    0xc7430c010000	                mov dword [rbx + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x40000d7	            0xeb44	                           jmp 0x400011d	      1544	move.c	FUNCTION_39	IF_1
0x40000d9	          0x488b03	                    mov rax, qword [rbx]	      1549	move.c	FUNCTION_39	ELSE_1
0x40000dc	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x40000e0	          0x48893b	                    mov qword [rbx], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x40000e3	    0xc74308000000	                  mov dword [rbx + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x40000ea	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000ed	            0x7f09	                            jg 0x40000f8	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000ef	    0xc7430cffffff	      mov dword [rbx + 0xc], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000f6	            0xeb25	                           jmp 0x400011d	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000f8	      0xba00000000	                              mov edx, 0	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000fd	          0x4889de	                            mov rsi, rbx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000100	      0xe800000000	                          call 0x4000105	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000105	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000107	            0x7409	                            je 0x4000112	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000109	    0xc7430c010000	                mov dword [rbx + 0xc], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4000110	            0xeb0b	                           jmp 0x400011d	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4000112	          0x488b3b	                    mov rdi, qword [rbx]	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x4000115	      0xe800000000	                          call 0x400011a	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x400011a	          0x89430c	              mov dword [rbx + 0xc], eax	      1562	move.c	FUNCTION_39	ELSE_1	CALL_3
0x400011d	        0x4883c408	                              add rsp, 8	      1564	move.c	FUNCTION_39
0x4000121	              0x5b	                                 pop rbx	      1564	move.c	FUNCTION_39
0x4000122	              0x5d	                                 pop rbp	      1564	move.c	FUNCTION_39
0x4000123	              0xc3	                                     ret	      1564	move.c	FUNCTION_39
invalidate_botline	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	3
0x4000924	    0x488b05000000	            mov rax, qword [0x0400092b] 	       600	move.c	FUNCTION_17
0x400092b	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff9f	       600	move.c	FUNCTION_17
0x4000932	              0xc3	                                     ret	       600	move.c	FUNCTION_17
win_col_off2	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	17
0x4000a7a	      0xb800000000	                              mov eax, 0	       906	move.c	FUNCTION_30
0x4000a7f	    0x4883bf380200	              cmp qword [rdi + 0x238], 0	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000a87	            0x742e	                            je 0x4000ab7	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000a89	              0x53	                                push rbx	       903	move.c	FUNCTION_30
0x4000a8a	          0x4889fb	                            mov rbx, rdi	       903	move.c	FUNCTION_30
0x4000a8d	      0xbe6e000000	                           mov esi, 0x6e	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000a92	    0x488b3d000000	            mov rdi, qword [0x04000a99] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000a99	      0xe800000000	                          call 0x4000a9e	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000a9e	          0x4889c2	                            mov rdx, rax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000aa1	      0xb800000000	                              mov eax, 0	       906	move.c	FUNCTION_30
0x4000aa6	          0x4885d2	                           test rdx, rdx	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000aa9	            0x740b	                            je 0x4000ab6	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4000aab	          0x4889df	                            mov rdi, rbx	       905	move.c	FUNCTION_30	CALL_2
0x4000aae	      0xe800000000	                          call 0x4000ab3	       905	move.c	FUNCTION_30	CALL_2
0x4000ab3	          0x83c001	                              add eax, 1	       905	move.c	FUNCTION_30	CALL_2
0x4000ab6	              0x5b	                                 pop rbx	       907	move.c	FUNCTION_30
0x4000ab7	            0xf3c3	                                     ret	       907	move.c	FUNCTION_30
redraw_for_cursorline	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	16
0x4000430	    0x83bf3c020000	              cmp dword [rdi + 0x23c], 0	       133	move.c	FUNCTION_2	IF_1
0x4000437	            0x7509	                           jne 0x4000442	       133	move.c	FUNCTION_2	IF_1
0x4000439	    0x83bf70020000	              cmp dword [rdi + 0x270], 0	       135	move.c	FUNCTION_2	IF_1
0x4000440	            0x7424	                            je 0x4000466	       135	move.c	FUNCTION_2	IF_1
0x4000442	    0xf687b4000000	           test byte [rdi + 0xb4], 0x10 	       138	move.c	FUNCTION_2	IF_1
0x4000449	            0x751b	                           jne 0x4000466	       138	move.c	FUNCTION_2	IF_1
0x400044b	              0x53	                                push rbx	       132	move.c	FUNCTION_2
0x400044c	          0x4889fb	                            mov rbx, rdi	       132	move.c	FUNCTION_2
0x400044f	      0xe800000000	                          call 0x4000454	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x4000454	            0x85c0	                           test eax, eax	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x4000456	            0x750d	                           jne 0x4000465	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x4000458	      0xbe23000000	                           mov esi, 0x23	       143	move.c	FUNCTION_2	CALL_2
0x400045d	          0x4889df	                            mov rdi, rbx	       143	move.c	FUNCTION_2	CALL_2
0x4000460	      0xe800000000	                          call 0x4000465	       143	move.c	FUNCTION_2	CALL_2
0x4000465	              0x5b	                                 pop rbx	       144	move.c	FUNCTION_2
0x4000466	            0xf3c3	                                     ret	       144	move.c	FUNCTION_2
scroll_cursor_halfway	IF,9:functions,0:ELSE,2:FOR,0:WHILE,1:SWITCH,0:CALL,7:DO,0	103
0x4000f57	            0x4157	                                push r15	      2035	move.c	FUNCTION_46
0x4000f59	            0x4156	                                push r14	      2035	move.c	FUNCTION_46
0x4000f5b	            0x4155	                                push r13	      2035	move.c	FUNCTION_46
0x4000f5d	            0x4154	                                push r12	      2035	move.c	FUNCTION_46
0x4000f5f	              0x55	                                push rbp	      2035	move.c	FUNCTION_46
0x4000f60	              0x53	                                push rbx	      2035	move.c	FUNCTION_46
0x4000f61	        0x4883ec48	                           sub rsp, 0x48	      2035	move.c	FUNCTION_46
0x4000f65	          0x4189fe	                           mov r14d, edi	      2035	move.c	FUNCTION_46
0x4000f68	    0x64488b042528	                mov rax, qword fs:[0x28]	      2035	move.c	FUNCTION_46
0x4000f71	      0x4889442438	             mov qword [rsp + 0x38], rax	      2035	move.c	FUNCTION_46
0x4000f76	            0x31c0	                            xor eax, eax	      2035	move.c	FUNCTION_46
0x4000f78	    0x488b05000000	            mov rax, qword [0x04000f7f] 	      2046	move.c	FUNCTION_46
0x4000f7f	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2046	move.c	FUNCTION_46
0x4000f83	      0x4889742408	                mov qword [rsp + 8], rsi	      2046	move.c	FUNCTION_46
0x4000f88	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2049	move.c	FUNCTION_46
0x4000f8c	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2049	move.c	FUNCTION_46
0x4000f91	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2049	move.c	FUNCTION_46
0x4000f96	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2051	move.c	FUNCTION_46	CALL_1
0x4000f9b	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2051	move.c	FUNCTION_46	CALL_1
0x4000fa0	      0xe800000000	                          call 0x4000fa5	      2051	move.c	FUNCTION_46	CALL_1
0x4000fa5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2054	move.c	FUNCTION_46	CALL_2
0x4000faa	      0xe800000000	                          call 0x4000faf	      2054	move.c	FUNCTION_46	CALL_2
0x4000faf	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2055	move.c	FUNCTION_46
0x4000fb7	    0xc74424280000	               mov dword [rsp + 0x28], 0	      2056	move.c	FUNCTION_46
0x4000fbf	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2060	move.c	FUNCTION_46
0x4000fc4	        0x4983fd01	                              cmp r13, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fc8	     0xf8ea0000000	                           jle 0x400106e	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fce	            0x89c3	                            mov ebx, eax	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fd0	      0xbd00000000	                              mov ebp, 0	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fd5	    0x41bf00000000	                             mov r15d, 0	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fdb	    0x41bc00000000	                             mov r12d, 0	      2061	move.c	FUNCTION_46	WHILE_1
0x4000fe1	          0x4139ec	                           cmp r12d, ebp	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4000fe4	            0x7c43	                            jl 0x4001029	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4000fe6	    0x488b05000000	            mov rax, qword [0x04000fed] 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4000fed	          0x488b00	                    mov rax, qword [rax]	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4000ff0	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4000ff5	            0x7d23	                           jge 0x400101a	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4000ff7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4000ffc	      0xe8e8f1ffff	                   call sym.botline_forw	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4001001	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001005	             0x1c3	                            add ebx, eax	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001007	    0x488b15000000	            mov rdx, qword [0x0400100e] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x400100e	    0x3b9aa0000000	            cmp ebx, dword [rdx + 0xa0] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001014	            0x7f5e	                            jg 0x4001074	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001016	             0x1c5	                            add ebp, eax	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001018	            0xeb0a	                           jmp 0x4001024	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x400101a	          0x83c501	                              add ebp, 1	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1
0x400101d	        0x4183fe01	                             cmp r14d, 1	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4001021	          0x83dbff	             sbb ebx, 0xffffffffffffffff	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4001024	          0x4439e5	                           cmp ebp, r12d	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001027	            0x7e39	                           jle 0x4001062	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001029	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x400102e	      0xe87af0ffff	                   call sym.topline_back	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x4001033	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001037	             0x1c3	                            add ebx, eax	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001039	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x400103e	      0xb9ffffff7f	                     mov ecx, 0x7fffffff	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001043	           0xf44d9	                          cmove ebx, ecx	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001046	    0x488b15000000	            mov rdx, qword [0x0400104d] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x400104d	    0x3b9aa0000000	            cmp ebx, dword [rdx + 0xa0] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001053	            0x7f1f	                            jg 0x4001074	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001055	          0x4101c4	                           add r12d, eax	      2090	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001058	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2091	move.c	FUNCTION_46	WHILE_1	IF_5
0x400105d	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	      2093	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001062	        0x4983fd01	                              cmp r13, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4001066	     0xf8f75ffffff	                            jg 0x4000fe1	      2061	move.c	FUNCTION_46	WHILE_1
0x400106c	            0xeb06	                           jmp 0x4001074	      2061	move.c	FUNCTION_46	WHILE_1
0x400106e	    0x41bf00000000	                             mov r15d, 0	      2039	move.c	FUNCTION_46
0x4001074	    0x488b05000000	            mov rax, qword [0x0400107b] 	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x400107b	        0x488d7078	                   lea rsi, [rax + 0x78]	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x400107f	      0xba00000000	                              mov edx, 0	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001084	          0x4c89ef	                            mov rdi, r13	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001087	      0xe800000000	                          call 0x400108c	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x400108c	            0x85c0	                           test eax, eax	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x400108e	            0x750b	                           jne 0x400109b	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001090	    0x488b05000000	            mov rax, qword [0x04001097] 	      2100	move.c	FUNCTION_46	IF_8
0x4001097	        0x4c896878	             mov qword [rax + 0x78], r13	      2100	move.c	FUNCTION_46	IF_8
0x400109b	    0x488b3d000000	            mov rdi, qword [0x040010a2] 	      2102	move.c	FUNCTION_46
0x40010a2	    0x4489bf840000	            mov dword [rdi + 0x84], r15d	      2102	move.c	FUNCTION_46
0x40010a9	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      2103	move.c	FUNCTION_46	IF_9
0x40010b0	        0x48034778	             add rax, qword [rdi + 0x78]	      2103	move.c	FUNCTION_46	IF_9
0x40010b4	      0x4839442408	                cmp qword [rsp + 8], rax	      2103	move.c	FUNCTION_46	IF_9
0x40010b9	            0x7e0a	                           jle 0x40010c5	      2103	move.c	FUNCTION_46	IF_9
0x40010bb	    0xc7878c000000	               mov dword [rdi + 0x8c], 0	      2104	move.c	FUNCTION_46	IF_9
0x40010c5	      0xbe00000000	                              mov esi, 0	      2105	move.c	FUNCTION_46	CALL_7
0x40010ca	      0xe800000000	                          call 0x40010cf	      2105	move.c	FUNCTION_46	CALL_7
0x40010cf	    0x488b15000000	            mov rdx, qword [0x040010d6] 	      2107	move.c	FUNCTION_46
0x40010d6	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2108	move.c	FUNCTION_46
0x40010dc	          0x83e08e	                     and eax, 0xffffff8e	      2108	move.c	FUNCTION_46
0x40010df	             0xc80	                             or al, 0x80	      2108	move.c	FUNCTION_46
0x40010e1	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2108	move.c	FUNCTION_46
0x40010e7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2109	move.c	FUNCTION_46
0x40010ec	    0x644833042528	                xor rax, qword fs:[0x28]	      2109	move.c	FUNCTION_46
0x40010f5	            0x7405	                            je 0x40010fc	      2109	move.c	FUNCTION_46
0x40010f7	      0xe800000000	                          call 0x40010fc	      2109	move.c	FUNCTION_46
0x40010fc	        0x4883c448	                           add rsp, 0x48	      2109	move.c	FUNCTION_46
0x4001100	              0x5b	                                 pop rbx	      2109	move.c	FUNCTION_46
0x4001101	              0x5d	                                 pop rbp	      2109	move.c	FUNCTION_46
0x4001102	            0x415c	                                 pop r12	      2109	move.c	FUNCTION_46
0x4001104	            0x415d	                                 pop r13	      2109	move.c	FUNCTION_46
0x4001106	            0x415e	                                 pop r14	      2109	move.c	FUNCTION_46
0x4001108	            0x415f	                                 pop r15	      2109	move.c	FUNCTION_46
0x400110a	              0xc3	                                     ret	      2109	move.c	FUNCTION_46
botline_forw	IF,3:functions,0:ELSE,3:FOR,0:WHILE,0:SWITCH,0:CALL,3:DO,0	37
0x40001e9	              0x55	                                push rbp	      1574	move.c	FUNCTION_40
0x40001ea	              0x53	                                push rbx	      1574	move.c	FUNCTION_40
0x40001eb	        0x4883ec08	                              sub rsp, 8	      1574	move.c	FUNCTION_40
0x40001ef	          0x4889fb	                            mov rbx, rdi	      1574	move.c	FUNCTION_40
0x40001f2	          0x8b6f08	                mov ebp, dword [rdi + 8]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40001f5	          0x488b07	                    mov rax, qword [rdi]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40001f8	        0x488d7001	                      lea rsi, [rax + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40001fc	    0x488b3d000000	            mov rdi, qword [0x04000203] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000203	      0xe800000000	                          call 0x4000208	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000208	            0x39c5	                            cmp ebp, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400020a	            0x7d0d	                           jge 0x4000219	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400020c	        0x83430801	                  add dword [rbx + 8], 1	      1579	move.c	FUNCTION_40	IF_1
0x4000210	    0xc7430c010000	                mov dword [rbx + 0xc], 1	      1580	move.c	FUNCTION_40	IF_1
0x4000217	            0xeb4b	                           jmp 0x4000264	      1580	move.c	FUNCTION_40	IF_1
0x4000219	          0x488b03	                    mov rax, qword [rbx]	      1585	move.c	FUNCTION_40	ELSE_1
0x400021c	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4000220	          0x48893b	                    mov qword [rbx], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4000223	    0xc74308000000	                  mov dword [rbx + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x400022a	    0x488b05000000	            mov rax, qword [0x04000231] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000231	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000234	            0x7e09	                           jle 0x400023f	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000236	    0xc7430cffffff	      mov dword [rbx + 0xc], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400023d	            0xeb25	                           jmp 0x4000264	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400023f	          0x4889da	                            mov rdx, rbx	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000242	      0xbe00000000	                              mov esi, 0	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000247	      0xe800000000	                          call 0x400024c	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400024c	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400024e	            0x7409	                            je 0x4000259	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000250	    0xc7430c010000	                mov dword [rbx + 0xc], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4000257	            0xeb0b	                           jmp 0x4000264	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4000259	          0x488b3b	                    mov rdi, qword [rbx]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400025c	      0xe800000000	                          call 0x4000261	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000261	          0x89430c	              mov dword [rbx + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000264	        0x4883c408	                              add rsp, 8	      1602	move.c	FUNCTION_40
0x4000268	              0x5b	                                 pop rbx	      1602	move.c	FUNCTION_40
0x4000269	              0x5d	                                 pop rbp	      1602	move.c	FUNCTION_40
0x400026a	              0xc3	                                     ret	      1602	move.c	FUNCTION_40
botline_topline	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	14
0x4000081	        0x837f0800	                  cmp dword [rdi + 8], 0	      1613	move.c	FUNCTION_41	IF_1
0x4000085	            0x7e24	                           jle 0x40000ab	      1613	move.c	FUNCTION_41	IF_1
0x4000087	              0x53	                                push rbx	      1612	move.c	FUNCTION_41
0x4000088	          0x4889fb	                            mov rbx, rdi	      1612	move.c	FUNCTION_41
0x400008b	          0x488b07	                    mov rax, qword [rdi]	      1615	move.c	FUNCTION_41	IF_1
0x400008e	        0x488d7001	                      lea rsi, [rax + 1]	      1615	move.c	FUNCTION_41	IF_1
0x4000092	          0x488937	                    mov qword [rdi], rsi	      1615	move.c	FUNCTION_41	IF_1
0x4000095	    0x488b3d000000	            mov rdi, qword [0x0400009c] 	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40000a1	          0x2b4308	                sub eax, dword [rbx + 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40000a4	          0x83c001	                              add eax, 1	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40000a7	          0x894308	                mov dword [rbx + 8], eax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x40000aa	              0x5b	                                 pop rbx	      1618	move.c	FUNCTION_41
0x40000ab	            0xf3c3	                                     ret	      1618	move.c	FUNCTION_41
validate_cheight	IF,2:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,4:DO,0	26
0x40007c8	              0x53	                                push rbx	       818	move.c	FUNCTION_26
0x40007c9	    0x488b3d000000	            mov rdi, qword [0x040007d0] 	       819	move.c	FUNCTION_26	CALL_1
0x40007d0	      0xe800000000	                          call 0x40007d5	       819	move.c	FUNCTION_26	CALL_1
0x40007d5	    0x488b1d000000	            mov rbx, qword [0x040007dc] 	       820	move.c	FUNCTION_26	IF_1
0x40007dc	    0xf683b4000000	               test byte [rbx + 0xb4], 8	       820	move.c	FUNCTION_26	IF_1
0x40007e3	            0x755d	                           jne 0x4000842	       820	move.c	FUNCTION_26	IF_1
0x40007e5	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40007e9	        0x483b7b78	            cmp rdi, qword [rbx + 0x78] 	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40007ed	            0x751a	                           jne 0x4000809	       823	move.c	FUNCTION_26	IF_1	IF_2
0x40007ef	      0xe800000000	                          call 0x40007f4	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40007f4	    0x488b15000000	            mov rdx, qword [0x040007fb] 	       825	move.c	FUNCTION_26	IF_1	IF_2
0x40007fb	     0x38284000000	             add eax, dword [rdx + 0x84]	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x4000801	    0x8982cc000000	             mov dword [rdx + 0xcc], eax	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x4000807	            0xeb0b	                           jmp 0x4000814	       824	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x4000809	      0xe800000000	                          call 0x400080e	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x400080e	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       828	move.c	FUNCTION_26	IF_1	CALL_3
0x4000814	    0x488b1d000000	            mov rbx, qword [0x0400081b] 	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400081b	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400081f	      0xba00000000	                              mov edx, 0	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4000824	      0xbe00000000	                              mov esi, 0	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4000829	      0xe800000000	                          call 0x400082e	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x400082e	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       830	move.c	FUNCTION_26	IF_1	CALL_4
0x4000834	    0x488b05000000	            mov rax, qword [0x0400083b] 	       832	move.c	FUNCTION_26	IF_1
0x400083b	    0x8388b4000000	                or dword [rax + 0xb4], 8	       832	move.c	FUNCTION_26	IF_1
0x4000842	              0x5b	                                 pop rbx	       834	move.c	FUNCTION_26
0x4000843	              0xc3	                                     ret	       834	move.c	FUNCTION_26
max_topfill	IF,2:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	28
0x40003c3	              0x55	                                push rbp	      1394	move.c	FUNCTION_36
0x40003c4	              0x53	                                push rbx	      1394	move.c	FUNCTION_36
0x40003c5	        0x4883ec08	                              sub rsp, 8	      1394	move.c	FUNCTION_36
0x40003c9	    0x488b05000000	            mov rax, qword [0x040003d0] 	      1397	move.c	FUNCTION_36	CALL_1
0x40003d0	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1397	move.c	FUNCTION_36	CALL_1
0x40003d4	      0xe800000000	                          call 0x40003d9	      1397	move.c	FUNCTION_36	CALL_1
0x40003d9	    0x488b1d000000	            mov rbx, qword [0x040003e0] 	      1398	move.c	FUNCTION_36	IF_1
0x40003e0	    0x3b83a0000000	            cmp eax, dword [rbx + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x40003e6	            0x7c0c	                            jl 0x40003f4	      1398	move.c	FUNCTION_36	IF_1
0x40003e8	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x40003f2	            0xeb35	                           jmp 0x4000429	      1399	move.c	FUNCTION_36	IF_1
0x40003f4	            0x89c5	                            mov ebp, eax	      1399	move.c	FUNCTION_36	IF_1
0x40003f6	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x40003fa	          0x4889df	                            mov rdi, rbx	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x40003fd	      0xe800000000	                          call 0x4000402	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4000402	    0x898384000000	             mov dword [rbx + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4000408	    0x488b15000000	            mov rdx, qword [0x0400040f] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x400040f	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000415	            0x89e9	                            mov ecx, ebp	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000417	     0x38a84000000	             add ecx, dword [rdx + 0x84]	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x400041d	            0x39c1	                            cmp ecx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x400041f	            0x7e08	                           jle 0x4000429	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000421	            0x29e8	                            sub eax, ebp	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000423	    0x898284000000	             mov dword [rdx + 0x84], eax	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000429	        0x4883c408	                              add rsp, 8	      1406	move.c	FUNCTION_36
0x400042d	              0x5b	                                 pop rbx	      1406	move.c	FUNCTION_36
0x400042e	              0x5d	                                 pop rbp	      1406	move.c	FUNCTION_36
0x400042f	              0xc3	                                     ret	      1406	move.c	FUNCTION_36
validate_cline_row	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,3:DO,0	10
0x4001d54	        0x4883ec08	                              sub rsp, 8	       645	move.c	FUNCTION_22
0x4001d58	      0xe800000000	                          call 0x4001d5d	       649	move.c	FUNCTION_22	CALL_1
0x4001d5d	    0x488b3d000000	            mov rdi, qword [0x04001d64] 	       650	move.c	FUNCTION_22	CALL_2
0x4001d64	      0xe800000000	                          call 0x4001d69	       650	move.c	FUNCTION_22	CALL_2
0x4001d69	    0x488b3d000000	            mov rdi, qword [0x04001d70] 	       651	move.c	FUNCTION_22	IF_1
0x4001d70	    0xf687b4000000	           test byte [rdi + 0xb4], 0x10 	       651	move.c	FUNCTION_22	IF_1
0x4001d77	            0x7505	                           jne 0x4001d7e	       651	move.c	FUNCTION_22	IF_1
0x4001d79	      0xe86ce7ffff	                      call sym.curs_rows	       652	move.c	FUNCTION_22	CALL_3
0x4001d7e	        0x4883c408	                              add rsp, 8	       653	move.c	FUNCTION_22
0x4001d82	              0xc3	                                     ret	       653	move.c	FUNCTION_22
update_topline	IF,28:functions,0:ELSE,9:FOR,2:WHILE,1:SWITCH,0:CALL,24:DO,0	291
0x40017ff	            0x4156	                                push r14	       163	move.c	FUNCTION_4
0x4001801	            0x4155	                                push r13	       163	move.c	FUNCTION_4
0x4001803	            0x4154	                                push r12	       163	move.c	FUNCTION_4
0x4001805	              0x55	                                push rbp	       163	move.c	FUNCTION_4
0x4001806	              0x53	                                push rbx	       163	move.c	FUNCTION_4
0x4001807	        0x4883ec30	                           sub rsp, 0x30	       163	move.c	FUNCTION_4
0x400180b	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	move.c	FUNCTION_4
0x4001814	      0x4889442428	             mov qword [rsp + 0x28], rax	       163	move.c	FUNCTION_4
0x4001819	            0x31c0	                            xor eax, eax	       163	move.c	FUNCTION_4
0x400181b	    0x488b1d000000	            mov rbx, qword [0x04001822] 	       177	move.c	FUNCTION_4
0x4001822	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001827	      0xe800000000	                          call 0x400182c	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400182c	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400182e	            0x7410	                            je 0x4001840	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001830	    0x488b3d000000	            mov rdi, qword [0x04001837] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001837	    0x83bfa0000000	               cmp dword [rdi + 0xa0], 0	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400183e	            0x752d	                           jne 0x400186d	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001840	    0x488b05000000	            mov rax, qword [0x04001847] 	       184	move.c	FUNCTION_4	IF_1
0x4001847	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x400184b	        0x48895078	             mov qword [rax + 0x78], rdx	       184	move.c	FUNCTION_4	IF_1
0x400184f	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       185	move.c	FUNCTION_4	IF_1
0x4001856	    0x8388b4000000	            or dword [rax + 0xb4], 0x60 	       186	move.c	FUNCTION_4	IF_1
0x400185d	    0x48c780500500	              mov qword [rax + 0x550], 1	       187	move.c	FUNCTION_4	IF_1
0x4001868	      0xe9a4040000	                           jmp 0x4001d11	       188	move.c	FUNCTION_4	IF_1
0x400186d	      0xe800000000	                          call 0x4001872	       191	move.c	FUNCTION_4	CALL_2
0x4001872	    0x488b05000000	            mov rax, qword [0x04001879] 	       192	move.c	FUNCTION_4	IF_2
0x4001879	    0xf680b4000000	           test byte [rax + 0xb4], 0x80 	       192	move.c	FUNCTION_4	IF_2
0x4001880	     0xf858b040000	                           jne 0x4001d11	       192	move.c	FUNCTION_4	IF_2
0x4001886	    0x8b1500000000	            mov edx, dword [0x0400188c] 	       197	move.c	FUNCTION_4	IF_3
0x400188c	            0x85d2	                           test edx, edx	       197	move.c	FUNCTION_4	IF_3
0x400188e	            0x7e0d	                           jle 0x400189d	       197	move.c	FUNCTION_4	IF_3
0x4001890	          0x83ea01	                              sub edx, 1	       198	move.c	FUNCTION_4	IF_3
0x4001893	          0x4863d2	                         movsxd rdx, edx	       198	move.c	FUNCTION_4	IF_3
0x4001896	    0x488915000000	            mov qword [0x0400189d], rdx 	       198	move.c	FUNCTION_4	IF_3
0x400189d	        0x4c8b6878	            mov r13, qword [rax + 0x78] 	       201	move.c	FUNCTION_4
0x40018a1	    0x448bb0840000	           mov r14d, dword [rax + 0x84] 	       203	move.c	FUNCTION_4
0x40018a8	    0x488b05000000	            mov rax, qword [0x040018af] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018af	        0x48833801	                      cmp qword [rax], 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018b3	            0x7558	                           jne 0x400190d	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018b5	      0xbf01000000	                              mov edi, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018ba	      0xe800000000	                          call 0x40018bf	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018bf	          0x803800	                       cmp byte [rax], 0	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018c2	            0x7549	                           jne 0x400190d	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x40018c4	    0x488b05000000	            mov rax, qword [0x040018cb] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40018cb	      0x4883787801	               cmp qword [rax + 0x78], 1	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40018d0	            0x740a	                            je 0x40018dc	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40018d2	      0xbf28000000	                           mov edi, 0x28	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40018d7	      0xe800000000	                          call 0x40018dc	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40018dc	    0x488b05000000	            mov rax, qword [0x040018e3] 	       213	move.c	FUNCTION_4	IF_4
0x40018e3	    0x48c740780100	               mov qword [rax + 0x78], 1	       213	move.c	FUNCTION_4	IF_4
0x40018eb	    0x48c780e80000	               mov qword [rax + 0xe8], 2	       214	move.c	FUNCTION_4	IF_4
0x40018f6	    0x8388b4000000	            or dword [rax + 0xb4], 0x60 	       215	move.c	FUNCTION_4	IF_4
0x40018fd	    0x48c780500500	              mov qword [rax + 0x550], 1	       216	move.c	FUNCTION_4	IF_4
0x4001908	      0xe976030000	                           jmp 0x4001c83	       216	move.c	FUNCTION_4	IF_4
0x400190d	    0x488b05000000	            mov rax, qword [0x04001914] 	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4001914	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4001918	        0x4883fa01	                              cmp rdx, 1	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x400191c	            0x7e0f	                           jle 0x400192d	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x400191e	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4001922	            0x7f27	                            jg 0x400194b	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4001924	      0xe8fbe7ffff	               call sym.check_top_offset	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001929	            0x85c0	                           test eax, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x400192b	            0x751e	                           jne 0x400194b	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x400192d	    0x488b3d000000	            mov rdi, qword [0x04001934] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001934	    0x8baf84000000	            mov ebp, dword [rdi + 0x84] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x400193a	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x400193e	      0xe800000000	                          call 0x4001943	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001943	            0x39c5	                            cmp ebp, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001945	     0xf8e06010000	                           jle 0x4001a51	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x400194b	    0x488b3d000000	            mov rdi, qword [0x04001952] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001952	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001958	          0x4189c4	                           mov r12d, eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400195b	        0x41c1ec1f	                          shr r12d, 0x1f	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400195f	          0x4401e0	                           add eax, r12d	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001962	            0xd1f8	                              sar eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001964	        0x448d60ff	                     lea r12d, [rax - 1]	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001968	        0x4183fc01	                             cmp r12d, 1	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x400196c	      0xb802000000	                              mov eax, 2	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4001971	        0x440f4ee0	                        cmovle r12d, eax	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4001975	      0xe800000000	                          call 0x400197a	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x400197a	            0x85c0	                           test eax, eax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x400197c	     0xf8483000000	                            je 0x4001a05	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4001982	    0x488b15000000	            mov rdx, qword [0x04001989] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001989	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400198d	      0x48897c2408	                mov qword [rsp + 8], rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001992	    0x488b05000000	            mov rax, qword [0x04001999] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001999	        0x48034278	             add rax, qword [rdx + 0x78]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400199d	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019a0	            0x7d79	                           jge 0x4001a1b	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019a2	    0x488b05000000	            mov rax, qword [0x040019a9] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019a9	          0x483b38	                    cmp rdi, qword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019ac	            0x7d74	                           jge 0x4001a22	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019ae	        0x4183fc01	                             cmp r12d, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019b2	            0x7e6e	                           jle 0x4001a22	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019b4	      0xbd01000000	                              mov ebp, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019b9	            0xeb14	                           jmp 0x40019cf	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019bb	          0x83c501	                              add ebp, 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019be	    0x488b05000000	            mov rax, qword [0x040019c5] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019c5	          0x483938	                    cmp qword [rax], rdi	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019c8	            0x7e5d	                           jle 0x4001a27	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019ca	          0x4139ec	                           cmp r12d, ebp	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019cd	            0x7e58	                           jle 0x4001a27	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40019cf	      0x488d542408	                      lea rdx, [rsp + 8]	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x40019d4	      0xbe00000000	                              mov esi, 0	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x40019d9	      0xe800000000	                          call 0x40019de	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x40019de	      0x488b442408	                mov rax, qword [rsp + 8]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019e3	        0x488d7801	                      lea rdi, [rax + 1]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019e7	      0x48897c2408	                mov qword [rsp + 8], rdi	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019ec	    0x488b05000000	            mov rax, qword [0x040019f3] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019f3	    0x488b15000000	            mov rdx, qword [0x040019fa] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019fa	        0x48034278	             add rax, qword [rdx + 0x78]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40019fe	          0x4839f8	                            cmp rax, rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001a01	            0x7fb8	                            jg 0x40019bb	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001a03	            0xeb22	                           jmp 0x4001a27	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001a05	    0x488b05000000	            mov rax, qword [0x04001a0c] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4001a0c	    0x488b2d000000	            mov rbp, qword [0x04001a13] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4001a13	           0x36878	             add ebp, dword [rax + 0x78]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4001a16	          0x2b6838	             sub ebp, dword [rax + 0x38]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4001a19	            0xeb0c	                           jmp 0x4001a27	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4001a1b	      0xbd00000000	                              mov ebp, 0	       254	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12
0x4001a20	            0xeb05	                           jmp 0x4001a27	       254	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12
0x4001a22	      0xbd01000000	                              mov ebp, 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001a27	          0x4139ec	                           cmp r12d, ebp	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4001a2a	            0x7f0f	                            jg 0x4001a3b	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4001a2c	      0xbf00000000	                              mov edi, 0	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x4001a31	      0xe800000000	                          call 0x4001a36	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x4001a36	      0xe948020000	                           jmp 0x4001c83	       273	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x4001a3b	      0xe800e6ffff	               call sym.scrolljump_value	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001a40	      0xbe00000000	                              mov esi, 0	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001a45	            0x89c7	                            mov edi, eax	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001a47	      0xe800000000	                          call 0x4001a4c	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001a4c	      0xe9a7020000	                           jmp 0x4001cf8	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001a51	    0x488b05000000	            mov rax, qword [0x04001a58] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a58	        0x488d7078	                   lea rsi, [rax + 0x78]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a5c	        0x488b7878	            mov rdi, qword [rax + 0x78] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a60	      0xba00000000	                              mov edx, 0	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a65	      0xe800000000	                          call 0x4001a6a	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a6a	      0xe989020000	                           jmp 0x4001cf8	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4001a6f	      0xe800000000	                          call 0x4001a74	       302	move.c	FUNCTION_4	IF_15	CALL_13
0x4001a74	    0x488b3d000000	            mov rdi, qword [0x04001a7b] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001a7b	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001a82	    0x488b15000000	            mov rdx, qword [0x04001a89] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001a89	          0x483b02	                    cmp rax, qword [rdx]	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001a8c	     0xf8ff1010000	                            jg 0x4001c83	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001a92	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001a96	          0x4839d0	                            cmp rax, rdx	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001a99	     0xf8ec7000000	                           jle 0x4001b66	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001a9f	    0x482b05000000	             sub rax, qword [0x04001aa6]	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001aa6	          0x4839c2	                            cmp rdx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001aa9	            0x7d0d	                           jge 0x4001ab8	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001aab	      0xe800000000	                          call 0x4001ab0	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x4001ab0	            0x85c0	                           test eax, eax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x4001ab2	     0xf84cb010000	                            je 0x4001c83	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x4001ab8	    0x488b05000000	            mov rax, qword [0x04001abf] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001abf	    0x8ba8f0000000	            mov ebp, dword [rax + 0xf0] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001ac5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001ac9	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001ace	      0x488d542410	                   lea rdx, [rsp + 0x10]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4001ad3	      0xbe00000000	                              mov esi, 0	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4001ad8	      0xe800000000	                          call 0x4001add	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4001add	    0xc74424180000	               mov dword [rsp + 0x18], 0	       327	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001ae5	    0x488b15000000	            mov rdx, qword [0x04001aec] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001aec	     0x3aaf4000000	             add ebp, dword [rdx + 0xf4]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001af2	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4001afa	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001aff	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b06	          0x4839d0	                            cmp rax, rdx	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b09	            0x7c3b	                            jl 0x4001b46	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b0b	            0xeb49	                           jmp 0x4001b56	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b0d	            0x89e8	                            mov eax, ebp	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b0f	         0x344241c	             add eax, dword [rsp + 0x1c]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b13	            0x89c5	                            mov ebp, eax	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b15	            0x4898	                                    cdqe	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4001b17	    0x483b05000000	            cmp rax, qword [0x04001b1e] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4001b1e	     0xf8d5f010000	                           jge 0x4001c83	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4001b24	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x4001b29	      0xe8bbe6ffff	                   call sym.botline_forw	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x4001b2e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b33	    0x488b15000000	            mov rdx, qword [0x04001b3a] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b3a	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b41	          0x4839d0	                            cmp rax, rdx	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b44	            0x7d10	                           jge 0x4001b56	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b46	        0x4883c001	                              add rax, 1	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b4a	          0x4839d0	                            cmp rax, rdx	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b4d	            0x7cbe	                            jl 0x4001b0d	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b4f	      0x837c241800	               cmp dword [rsp + 0x18], 0	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b54	            0x74b7	                            je 0x4001b0d	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4001b56	          0x4863ed	                         movsxd rbp, ebp	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4001b59	    0x483b2d000000	            cmp rbp, qword [0x04001b60] 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4001b60	     0xf8d1d010000	                           jge 0x4001c83	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4001b66	    0x488b3d000000	            mov rdi, qword [0x04001b6d] 	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001b6d	      0xe800000000	                          call 0x4001b72	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001b72	            0x85c0	                           test eax, eax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001b74	     0xf84a2000000	                            je 0x4001c1c	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001b7a	    0x488b05000000	            mov rax, qword [0x04001b81] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b81	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b85	      0x48897c2408	                mov qword [rsp + 8], rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b8a	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b91	    0x482b15000000	             sub rdx, qword [0x04001b98]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b98	          0x4839d7	                            cmp rdi, rdx	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001b9b	     0xf8c9b000000	                            jl 0x4001c3c	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001ba1	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ba4	     0xf8e99000000	                           jle 0x4001c43	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001baa	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bb0	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bb3	            0x85c0	                           test eax, eax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bb5	     0xf8e8f000000	                           jle 0x4001c4a	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bbb	      0xbd01000000	                              mov ebp, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bc0	            0xeb21	                           jmp 0x4001be3	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bc2	        0x4883c501	                              add rbp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001bc6	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bc9	     0xf8e80000000	                           jle 0x4001c4f	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bcf	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bd5	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bd8	            0x4898	                                    cdqe	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bda	          0x4839c5	                            cmp rbp, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001bdd	     0xf8f96000000	                            jg 0x4001c79	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001be3	      0xba00000000	                              mov edx, 0	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001be8	      0x488d742408	                      lea rsi, [rsp + 8]	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001bed	      0xe800000000	                          call 0x4001bf2	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001bf2	      0x488b442408	                mov rax, qword [rsp + 8]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001bf7	        0x488d78ff	                      lea rdi, [rax - 1]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001bfb	      0x48897c2408	                mov qword [rsp + 8], rdi	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c00	    0x488b15000000	            mov rdx, qword [0x04001c07] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c07	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c0e	    0x482b05000000	             sub rax, qword [0x04001c15]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c15	          0x4839f8	                            cmp rax, rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c18	            0x7ea8	                           jle 0x4001bc2	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c1a	            0xeb33	                           jmp 0x4001c4f	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c1c	    0x488b15000000	            mov rdx, qword [0x04001c23] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c23	        0x488b4238	            mov rax, qword [rdx + 0x38] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c27	    0x482b82e80000	             sub rax, qword [rdx + 0xe8]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c2e	    0x488b15000000	            mov rdx, qword [0x04001c35] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c35	      0x488d6c1001	                lea rbp, [rax + rdx + 1]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c3a	            0xeb13	                           jmp 0x4001c4f	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4001c3c	      0xbd00000000	                              mov ebp, 0	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x4001c41	            0xeb0c	                           jmp 0x4001c4f	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x4001c43	      0xbd01000000	                              mov ebp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c48	            0xeb05	                           jmp 0x4001c4f	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c4a	      0xbd01000000	                              mov ebp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001c4f	    0x488b05000000	            mov rax, qword [0x04001c56] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c56	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c5c	          0x83c001	                              add eax, 1	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c5f	            0x4898	                                    cdqe	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c61	          0x4839c5	                            cmp rbp, rax	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c64	            0x7f13	                            jg 0x4001c79	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001c66	      0xe8d5e3ffff	               call sym.scrolljump_value	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001c6b	      0xbe00000000	                              mov esi, 0	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001c70	            0x89c7	                            mov edi, eax	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001c72	      0xe800000000	                          call 0x4001c77	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001c77	            0xeb0a	                           jmp 0x4001c83	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001c79	      0xbf00000000	                              mov edi, 0	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001c7e	      0xe800000000	                          call 0x4001c83	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001c83	    0x488b05000000	            mov rax, qword [0x04001c8a] 	       380	move.c	FUNCTION_4
0x4001c8a	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	       380	move.c	FUNCTION_4
0x4001c94	        0x4c3b6878	            cmp r13, qword [rax + 0x78] 	       385	move.c	FUNCTION_4	IF_26
0x4001c98	            0x7509	                           jne 0x4001ca3	       385	move.c	FUNCTION_4	IF_26
0x4001c9a	    0x443bb0840000	           cmp r14d, dword [rax + 0x84] 	       387	move.c	FUNCTION_4	IF_26
0x4001ca1	            0x7449	                            je 0x4001cec	       387	move.c	FUNCTION_4	IF_26
0x4001ca3	    0xc70500000000	     mov dword [0x04001cad], 0xffffffff 	       391	move.c	FUNCTION_4	IF_26
0x4001cad	    0x83b898000000	               cmp dword [rax + 0x98], 0	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4001cb4	            0x7416	                            je 0x4001ccc	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4001cb6	    0xc78098000000	               mov dword [rax + 0x98], 0	       394	move.c	FUNCTION_4	IF_26	IF_27
0x4001cc0	      0xbf28000000	                           mov edi, 0x28	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4001cc5	      0xe800000000	                          call 0x4001cca	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4001cca	            0xeb0a	                           jmp 0x4001cd6	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4001ccc	      0xbf0a000000	                            mov edi, 0xa	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4001cd1	      0xe800000000	                          call 0x4001cd6	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4001cd6	    0x488b05000000	            mov rax, qword [0x04001cdd] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001cdd	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001ce1	        0x48394838	            cmp qword [rax + 0x38], rcx 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001ce5	            0x7505	                           jne 0x4001cec	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001ce7	      0xe800000000	                          call 0x4001cec	       401	move.c	FUNCTION_4	IF_26	CALL_24
0x4001cec	          0x4863db	                         movsxd rbx, ebx	       405	move.c	FUNCTION_4
0x4001cef	    0x48891d000000	            mov qword [0x04001cf6], rbx 	       405	move.c	FUNCTION_4
0x4001cf6	            0xeb19	                           jmp 0x4001d11	       405	move.c	FUNCTION_4
0x4001cf8	    0x488b05000000	            mov rax, qword [0x04001cff] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4001cff	    0xf680b4000000	           test byte [rax + 0xb4], 0x40 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4001d06	     0xf8568fdffff	                           jne 0x4001a74	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4001d0c	      0xe95efdffff	                           jmp 0x4001a6f	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4001d11	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       407	move.c	FUNCTION_4
0x4001d16	    0x644833042528	                xor rax, qword fs:[0x28]	       407	move.c	FUNCTION_4
0x4001d1f	            0x7405	                            je 0x4001d26	       407	move.c	FUNCTION_4
0x4001d21	      0xe800000000	                          call 0x4001d26	       407	move.c	FUNCTION_4
0x4001d26	        0x4883c430	                           add rsp, 0x30	       407	move.c	FUNCTION_4
0x4001d2a	              0x5b	                                 pop rbx	       407	move.c	FUNCTION_4
0x4001d2b	              0x5d	                                 pop rbp	       407	move.c	FUNCTION_4
0x4001d2c	            0x415c	                                 pop r12	       407	move.c	FUNCTION_4
0x4001d2e	            0x415d	                                 pop r13	       407	move.c	FUNCTION_4
0x4001d30	            0x415e	                                 pop r14	       407	move.c	FUNCTION_4
0x4001d32	              0xc3	                                     ret	       407	move.c	FUNCTION_4
scrolljump_value	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	15
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       417	move.c	FUNCTION_5	IF_1
0x4000047	          0x4885c0	                           test rax, rax	       417	move.c	FUNCTION_5	IF_1
0x400004a	            0x7933	                           jns 0x400007f	       417	move.c	FUNCTION_5	IF_1
0x400004c	    0x488b15000000	            mov rdx, qword [0x04000053] 	       419	move.c	FUNCTION_5
0x4000053	    0x48638aa00000	         movsxd rcx, dword [rdx + 0xa0] 	       419	move.c	FUNCTION_5
0x400005a	          0x48f7d8	                                 neg rax	       419	move.c	FUNCTION_5
0x400005d	        0x480fafc8	                           imul rcx, rax	       419	move.c	FUNCTION_5
0x4000061	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x400006b	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x400006e	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x4000071	        0x488d040a	                    lea rax, [rdx + rcx]	       419	move.c	FUNCTION_5
0x4000075	        0x48c1f806	                              sar rax, 6	       419	move.c	FUNCTION_5
0x4000079	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x400007d	            0x29c8	                            sub eax, ecx	       419	move.c	FUNCTION_5
0x400007f	            0xf3c3	                                     ret	       420	move.c	FUNCTION_5
changed_window_setting_win	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	7
0x4000844	        0x4883ec08	                              sub rsp, 8	       517	move.c	FUNCTION_10
0x4000848	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	       518	move.c	FUNCTION_10
0x4000852	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff00	       520	move.c	FUNCTION_10
0x400085c	      0xbe28000000	                           mov esi, 0x28	       521	move.c	FUNCTION_10	CALL_2
0x4000861	      0xe800000000	                          call 0x4000866	       521	move.c	FUNCTION_10	CALL_2
0x4000866	        0x4883c408	                              add rsp, 8	       522	move.c	FUNCTION_10
0x400086a	              0xc3	                                     ret	       522	move.c	FUNCTION_10
curs_rows	IF,14:functions,0:ELSE,7:FOR,1:WHILE,0:SWITCH,0:CALL,10:DO,0	177
0x40004ea	            0x4156	                                push r14	       662	move.c	FUNCTION_23
0x40004ec	            0x4155	                                push r13	       662	move.c	FUNCTION_23
0x40004ee	            0x4154	                                push r12	       662	move.c	FUNCTION_23
0x40004f0	              0x55	                                push rbp	       662	move.c	FUNCTION_23
0x40004f1	              0x53	                                push rbx	       662	move.c	FUNCTION_23
0x40004f2	          0x4889fb	                            mov rbx, rdi	       662	move.c	FUNCTION_23
0x40004f5	      0xe800000000	                          call 0x40004fa	       672	move.c	FUNCTION_23	CALL_1
0x40004fa	    0x41bd01000000	                             mov r13d, 1	       674	move.c	FUNCTION_23
0x4000500	            0x85c0	                           test eax, eax	       674	move.c	FUNCTION_23
0x4000502	            0x741f	                            je 0x4000523	       674	move.c	FUNCTION_23
0x4000504	    0x83bbf8000000	               cmp dword [rbx + 0xf8], 0	       673	move.c	FUNCTION_23
0x400050b	            0x7416	                            je 0x4000523	       673	move.c	FUNCTION_23
0x400050d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	       674	move.c	FUNCTION_23
0x4000514	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	       674	move.c	FUNCTION_23
0x4000518	          0x483938	                    cmp qword [rax], rdi	       674	move.c	FUNCTION_23
0x400051b	        0x410f9fc5	                               setg r13b	       674	move.c	FUNCTION_23
0x400051f	        0x450fb6ed	                        movzx r13d, r13b	       674	move.c	FUNCTION_23
0x4000523	    0xc783d4000000	               mov dword [rbx + 0xd4], 0	       676	move.c	FUNCTION_23
0x400052d	        0x488b6b78	            mov rbp, qword [rbx + 0x78] 	       677	move.c	FUNCTION_23	FOR_1
0x4000531	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       677	move.c	FUNCTION_23	FOR_1
0x4000535	          0x4839c5	                            cmp rbp, rax	       677	move.c	FUNCTION_23	FOR_1
0x4000538	     0xf8d30010000	                           jge 0x400066e	       677	move.c	FUNCTION_23	FOR_1
0x400053e	    0x41bc00000000	                             mov r12d, 0	       677	move.c	FUNCTION_23	FOR_1
0x4000544	          0x4585ed	                         test r13d, r13d	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000547	     0xf859f000000	                           jne 0x40005ec	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x400054d	    0x4439a3f80000	           cmp dword [rbx + 0xf8], r12d 	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000554	     0xf8e92000000	                           jle 0x40005ec	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x400055a	          0x4963d4	                        movsxd rdx, r12d	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400055d	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000561	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000568	        0x488d14ca	                  lea rdx, [rdx + rcx*8]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400056c	          0x488b0a	                    mov rcx, qword [rdx]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400056f	          0x4839e9	                            cmp rcx, rbp	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000572	     0xf8ce3000000	                            jl 0x400065b	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000578	        0x807a0a00	                 cmp byte [rdx + 0xa], 0	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400057c	     0xf84d9000000	                            je 0x400065b	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000582	          0x4839e9	                            cmp rcx, rbp	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4000585	            0x7531	                           jne 0x40005b8	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4000587	        0x488b4b08	                mov rcx, qword [rbx + 8]	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400058b	    0x83b90c010000	              cmp dword [rcx + 0x10c], 0	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000592	     0xf8401020000	                            je 0x4000799	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000598	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400059c	          0x4839c6	                            cmp rsi, rax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400059f	     0xf8cf4010000	                            jl 0x4000799	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40005a5	        0x4883c601	                              add rsi, 1	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40005a9	    0x4839b1100100	           cmp qword [rcx + 0x110], rsi 	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40005b0	     0xf8fe3010000	                            jg 0x4000799	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40005b6	            0xeb34	                           jmp 0x40005ec	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40005b8	          0x4839e9	                            cmp rcx, rbp	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40005bb	           0xf9fc0	                                 setg al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40005be	           0xfb6c0	                           movzx eax, al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40005c1	          0x4129c4	                           sub r12d, eax	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40005c4	            0xeb26	                           jmp 0x40005ec	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40005c6	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40005cd	            0x751d	                           jne 0x40005ec	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40005cf	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x40005d3	        0x488d6e01	                      lea rbp, [rsi + 1]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x40005d7	          0x4839c5	                            cmp rbp, rax	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x40005da	     0xf8fc8010000	                            jg 0x40007a8	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x40005e0	         0xfb74208	               movzx eax, word [rdx + 8]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40005e4	     0x183d4000000	             add dword [rbx + 0xd4], eax	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40005ea	            0xeb6f	                           jmp 0x400065b	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40005ec	      0xba00000000	                              mov edx, 0	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40005f1	          0x4889ee	                            mov rsi, rbp	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40005f4	          0x4889df	                            mov rdi, rbx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40005f7	      0xe800000000	                          call 0x40005fc	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40005fc	          0x4885c0	                           test rax, rax	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40005ff	            0x7412	                            je 0x4000613	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000601	          0x4801c5	                            add rbp, rax	       721	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000604	        0x483b6b38	            cmp rbp, qword [rbx + 0x38] 	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x4000608	            0x7f6a	                            jg 0x4000674	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x400060a	    0x8383d4000000	               add dword [rbx + 0xd4], 1	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000611	            0xeb48	                           jmp 0x400065b	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000613	        0x48396b78	            cmp qword [rbx + 0x78], rbp 	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4000617	            0x7525	                           jne 0x400063e	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4000619	        0x4c8d7501	                      lea r14, [rbp + 1]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400061d	      0xba01000000	                              mov edx, 1	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000622	          0x4889ee	                            mov rsi, rbp	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000625	          0x4889df	                            mov rdi, rbx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000628	      0xe800000000	                          call 0x400062d	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400062d	     0x38384000000	             add eax, dword [rbx + 0x84]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000633	     0x183d4000000	             add dword [rbx + 0xd4], eax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000639	          0x4c89f5	                            mov rbp, r14	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400063c	            0xeb1d	                           jmp 0x400065b	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400063e	        0x4c8d7501	                      lea r14, [rbp + 1]	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000642	      0xba01000000	                              mov edx, 1	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000647	          0x4889ee	                            mov rsi, rbp	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400064a	          0x4889df	                            mov rdi, rbx	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400064d	      0xe800000000	                          call 0x4000652	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000652	     0x183d4000000	             add dword [rbx + 0xd4], eax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000658	          0x4c89f5	                            mov rbp, r14	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400065b	        0x4183c401	                             add r12d, 1	       677	move.c	FUNCTION_23	FOR_1
0x400065f	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       677	move.c	FUNCTION_23	FOR_1
0x4000663	          0x4839c5	                            cmp rbp, rax	       677	move.c	FUNCTION_23	FOR_1
0x4000666	     0xf8cd8feffff	                            jl 0x4000544	       677	move.c	FUNCTION_23	FOR_1
0x400066c	            0xeb06	                           jmp 0x4000674	       677	move.c	FUNCTION_23	FOR_1
0x400066e	    0x41bc00000000	                             mov r12d, 0	       675	move.c	FUNCTION_23
0x4000674	          0x4889df	                            mov rdi, rbx	       738	move.c	FUNCTION_23	CALL_5
0x4000677	      0xe800000000	                          call 0x400067c	       738	move.c	FUNCTION_23	CALL_5
0x400067c	    0xf683b4000000	               test byte [rbx + 0xb4], 8	       739	move.c	FUNCTION_23	IF_11
0x4000683	     0xf85fb000000	                           jne 0x4000784	       739	move.c	FUNCTION_23	IF_11
0x4000689	          0x4585ed	                         test r13d, r13d	       741	move.c	FUNCTION_23	IF_11	IF_12
0x400068c	            0x7535	                           jne 0x40006c3	       741	move.c	FUNCTION_23	IF_11	IF_12
0x400068e	    0x8b83f8000000	            mov eax, dword [rbx + 0xf8] 	       742	move.c	FUNCTION_23	IF_11	IF_12
0x4000694	          0x4439e0	                           cmp eax, r12d	       742	move.c	FUNCTION_23	IF_11	IF_12
0x4000697	            0x742a	                            je 0x40006c3	       742	move.c	FUNCTION_23	IF_11	IF_12
0x4000699	          0x4439e0	                           cmp eax, r12d	       743	move.c	FUNCTION_23	IF_11	IF_12
0x400069c	     0xf8e83000000	                           jle 0x4000725	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40006a2	          0x4963d4	                        movsxd rdx, r12d	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006a5	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006a9	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006b0	        0x488d14ca	                  lea rdx, [rdx + rcx*8]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006b4	        0x807a0a00	                 cmp byte [rdx + 0xa], 0	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006b8	            0x7409	                            je 0x40006c3	       744	move.c	FUNCTION_23	IF_11	IF_12
0x40006ba	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       745	move.c	FUNCTION_23	IF_11	IF_12
0x40006be	          0x48393a	                    cmp qword [rdx], rdi	       745	move.c	FUNCTION_23	IF_11	IF_12
0x40006c1	            0x7462	                            je 0x4000725	       745	move.c	FUNCTION_23	IF_11	IF_12
0x40006c3	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x40006c7	        0x483b7378	            cmp rsi, qword [rbx + 0x78] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x40006cb	            0x751b	                           jne 0x40006e8	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x40006cd	      0xba01000000	                              mov edx, 1	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006d2	          0x4889df	                            mov rdi, rbx	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006d5	      0xe800000000	                          call 0x40006da	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006da	     0x38384000000	             add eax, dword [rbx + 0x84]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006e0	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006e6	            0xeb13	                           jmp 0x40006fb	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40006e8	      0xba01000000	                              mov edx, 1	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40006ed	          0x4889df	                            mov rdi, rbx	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40006f0	      0xe800000000	                          call 0x40006f5	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40006f5	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40006fb	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x40006ff	    0x41b900000000	                              mov r9d, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000705	    0x41b801000000	                              mov r8d, 1	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x400070b	      0xb900000000	                              mov ecx, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000710	      0xba00000000	                              mov edx, 0	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000715	          0x4889df	                            mov rdi, rbx	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000718	      0xe800000000	                          call 0x400071d	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x400071d	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000723	            0xeb5f	                           jmp 0x4000784	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000725	          0x4439e0	                           cmp eax, r12d	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000728	            0x7d34	                           jge 0x400075e	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x400072a	    0xc783cc000000	               mov dword [rbx + 0xcc], 0	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000734	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000738	    0x41b900000000	                              mov r9d, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400073e	    0x41b801000000	                              mov r8d, 1	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000744	      0xb900000000	                              mov ecx, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000749	      0xba00000000	                              mov edx, 0	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400074e	          0x4889df	                            mov rdi, rbx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000751	      0xe800000000	                          call 0x4000756	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000756	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400075c	            0xeb26	                           jmp 0x4000784	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400075e	          0x4d63e4	                        movsxd r12, r12d	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000761	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000765	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400076c	        0x488d04d0	                  lea rax, [rax + rdx*8]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000770	         0xfb75008	               movzx edx, word [rax + 8]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000774	    0x8993cc000000	             mov dword [rbx + 0xcc], edx	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400077a	         0xfbe400b	            movsx eax, byte [rax + 0xb] 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400077e	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000784	    0x488b3d000000	            mov rdi, qword [0x0400078b] 	       777	move.c	FUNCTION_23	CALL_10
0x400078b	      0xe8a0fcffff	          call sym.redraw_for_cursorline	       777	move.c	FUNCTION_23	CALL_10
0x4000790	    0x838bb4000000	             or dword [rbx + 0xb4], 0x18	       778	move.c	FUNCTION_23
0x4000797	            0xeb26	                           jmp 0x40007bf	       780	move.c	FUNCTION_23
0x4000799	        0x48396b78	            cmp qword [rbx + 0x78], rbp 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x400079d	     0xf852cfeffff	                           jne 0x40005cf	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40007a3	      0xe91efeffff	                           jmp 0x40005c6	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40007a8	          0x4889df	                            mov rdi, rbx	       738	move.c	FUNCTION_23	CALL_5
0x40007ab	      0xe800000000	                          call 0x40007b0	       738	move.c	FUNCTION_23	CALL_5
0x40007b0	    0xf683b4000000	               test byte [rbx + 0xb4], 8	       739	move.c	FUNCTION_23	IF_11
0x40007b7	     0xf84d1feffff	                            je 0x400068e	       739	move.c	FUNCTION_23	IF_11
0x40007bd	            0xebc5	                           jmp 0x4000784	       739	move.c	FUNCTION_23	IF_11
0x40007bf	              0x5b	                                 pop rbx	       780	move.c	FUNCTION_23
0x40007c0	              0x5d	                                 pop rbp	       780	move.c	FUNCTION_23
0x40007c1	            0x415c	                                 pop r12	       780	move.c	FUNCTION_23
0x40007c3	            0x415d	                                 pop r13	       780	move.c	FUNCTION_23
0x40007c5	            0x415e	                                 pop r14	       780	move.c	FUNCTION_23
0x40007c7	              0xc3	                                     ret	       780	move.c	FUNCTION_23
validate_botline	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	7
0x4000f38	    0x488b3d000000	            mov rdi, qword [0x04000f3f] 	       590	move.c	FUNCTION_16	IF_1
0x4000f3f	    0xf687b4000000	           test byte [rdi + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x4000f46	            0x750d	                           jne 0x4000f55	       590	move.c	FUNCTION_16	IF_1
0x4000f48	        0x4883ec08	                              sub rsp, 8	       589	move.c	FUNCTION_16
0x4000f4c	      0xe892feffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4000f51	        0x4883c408	                              add rsp, 8	       592	move.c	FUNCTION_16
0x4000f55	            0xf3c3	                                     ret	       592	move.c	FUNCTION_16
curs_columns	IF,35:functions,0:ELSE,15:FOR,0:WHILE,1:SWITCH,0:CALL,16:DO,0	368
0x4001d83	            0x4157	                                push r15	       923	move.c	FUNCTION_32
0x4001d85	            0x4156	                                push r14	       923	move.c	FUNCTION_32
0x4001d87	            0x4155	                                push r13	       923	move.c	FUNCTION_32
0x4001d89	            0x4154	                                push r12	       923	move.c	FUNCTION_32
0x4001d8b	              0x55	                                push rbp	       923	move.c	FUNCTION_32
0x4001d8c	              0x53	                                push rbx	       923	move.c	FUNCTION_32
0x4001d8d	        0x4883ec18	                           sub rsp, 0x18	       923	move.c	FUNCTION_32
0x4001d91	            0x89fb	                            mov ebx, edi	       923	move.c	FUNCTION_32
0x4001d93	    0x64488b042528	                mov rax, qword fs:[0x28]	       923	move.c	FUNCTION_32
0x4001d9c	      0x4889442408	                mov qword [rsp + 8], rax	       923	move.c	FUNCTION_32
0x4001da1	            0x31c0	                            xor eax, eax	       923	move.c	FUNCTION_32
0x4001da3	      0xe800000000	                          call 0x4001da8	       939	move.c	FUNCTION_32	CALL_1
0x4001da8	    0x488b3d000000	            mov rdi, qword [0x04001daf] 	       944	move.c	FUNCTION_32	IF_1
0x4001daf	    0xf687b4000000	           test byte [rdi + 0xb4], 0x10 	       944	move.c	FUNCTION_32	IF_1
0x4001db6	            0x7505	                           jne 0x4001dbd	       944	move.c	FUNCTION_32	IF_1
0x4001db8	      0xe82de7ffff	                      call sym.curs_rows	       945	move.c	FUNCTION_32	CALL_2
0x4001dbd	    0x488b3d000000	            mov rdi, qword [0x04001dc4] 	       951	move.c	FUNCTION_32	IF_2
0x4001dc4	    0x83bfd0000000	               cmp dword [rdi + 0xd0], 0	       951	move.c	FUNCTION_32	IF_2
0x4001dcb	            0x7415	                            je 0x4001de2	       951	move.c	FUNCTION_32	IF_2
0x4001dcd	    0x8b8794000000	            mov eax, dword [rdi + 0x94] 	       953	move.c	FUNCTION_32	IF_2
0x4001dd3	        0x89442404	                mov dword [rsp + 4], eax	       953	move.c	FUNCTION_32	IF_2
0x4001dd7	    0x8987d8000000	             mov dword [rdi + 0xd8], eax	       953	move.c	FUNCTION_32	IF_2
0x4001ddd	          0x890424	                    mov dword [rsp], eax	       953	move.c	FUNCTION_32	IF_2
0x4001de0	            0xeb18	                           jmp 0x4001dfa	       953	move.c	FUNCTION_32	IF_2
0x4001de2	    0x488d8fd80000	                   lea rcx, [rdi + 0xd8]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001de9	        0x488d7738	                   lea rsi, [rdi + 0x38]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001ded	      0x4c8d442404	                       lea r8, [rsp + 4]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001df2	          0x4889e2	                            mov rdx, rsp	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001df5	      0xe800000000	                          call 0x4001dfa	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4001dfa	    0x8b0500000000	            mov eax, dword [0x04001e00] 	       960	move.c	FUNCTION_32	IF_3
0x4001e00	          0x390424	                    cmp dword [rsp], eax	       960	move.c	FUNCTION_32	IF_3
0x4001e03	            0x7e0a	                           jle 0x4001e0f	       960	move.c	FUNCTION_32	IF_3
0x4001e05	    0xc70500000000	     mov dword [0x04001e0f], 0xffffffff 	       961	move.c	FUNCTION_32	IF_3
0x4001e0f	      0xe800000000	                          call 0x4001e14	       963	move.c	FUNCTION_32	CALL_4
0x4001e14	    0x488b15000000	            mov rdx, qword [0x04001e1b] 	       964	move.c	FUNCTION_32
0x4001e1b	    0x8bbad8000000	            mov edi, dword [rdx + 0xd8] 	       964	move.c	FUNCTION_32
0x4001e21	          0x8d3438	                    lea esi, [rax + rdi]	       964	move.c	FUNCTION_32
0x4001e24	    0x89b2e0000000	             mov dword [rdx + 0xe0], esi	       964	move.c	FUNCTION_32
0x4001e2a	          0x4189c0	                            mov r8d, eax	       965	move.c	FUNCTION_32
0x4001e2d	      0x4403442404	                add r8d, dword [rsp + 4]	       965	move.c	FUNCTION_32
0x4001e32	      0x4489442404	                mov dword [rsp + 4], r8d	       965	move.c	FUNCTION_32
0x4001e37	    0x8b8ad4000000	            mov ecx, dword [rdx + 0xd4] 	       970	move.c	FUNCTION_32
0x4001e3d	    0x898adc000000	             mov dword [rdx + 0xdc], ecx	       970	move.c	FUNCTION_32
0x4001e43	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	       972	move.c	FUNCTION_32
0x4001e49	            0x89cd	                            mov ebp, ecx	       972	move.c	FUNCTION_32
0x4001e4b	            0x29c5	                            sub ebp, eax	       972	move.c	FUNCTION_32
0x4001e4d	            0x85ed	                           test ebp, ebp	       973	move.c	FUNCTION_32	IF_4
0x4001e4f	            0x7f22	                            jg 0x4001e73	       973	move.c	FUNCTION_32	IF_4
0x4001e51	          0x83e901	                              sub ecx, 1	       976	move.c	FUNCTION_32	IF_4
0x4001e54	    0x898ae0000000	             mov dword [rdx + 0xe0], ecx	       976	move.c	FUNCTION_32	IF_4
0x4001e5a	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	       977	move.c	FUNCTION_32	IF_4
0x4001e60	          0x83e801	                              sub eax, 1	       977	move.c	FUNCTION_32	IF_4
0x4001e63	    0x8982dc000000	             mov dword [rdx + 0xdc], eax	       977	move.c	FUNCTION_32	IF_4
0x4001e69	      0xbb00000000	                              mov ebx, 0	       929	move.c	FUNCTION_32
0x4001e6e	      0xe99b010000	                           jmp 0x400200e	       929	move.c	FUNCTION_32
0x4001e73	    0x83ba94020000	              cmp dword [rdx + 0x294], 0	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001e7a	     0xf84a0000000	                            je 0x4001f20	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001e80	            0x85c9	                           test ecx, ecx	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001e82	     0xf8498000000	                            je 0x4001f20	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x4001e88	      0xe800000000	                          call 0x4001e8d	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001e8d	        0x8d5c0500	                    lea ebx, [rbp + rax]	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x4001e91	    0x488b0d000000	            mov rcx, qword [0x04001e98] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001e98	    0x8bb1e0000000	            mov esi, dword [rcx + 0xe0] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001e9e	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ea4	            0x39c6	                            cmp esi, eax	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ea6	     0xf8c62010000	                            jl 0x400200e	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eac	            0x89f2	                            mov edx, esi	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eae	            0x29c2	                            sub edx, eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eb0	            0x89d0	                            mov eax, edx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eb2	              0x99	                                     cdq	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eb3	            0xf7fb	                                idiv ebx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eb5	          0x83c001	                              add eax, 1	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eb8	            0x89da	                            mov edx, ebx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001eba	           0xfafd0	                           imul edx, eax	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ebd	            0x29d6	                            sub esi, edx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ebf	    0x89b1e0000000	             mov dword [rcx + 0xe0], esi	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ec5	     0x181dc000000	             add dword [rcx + 0xdc], eax	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4001ecb	    0x488b05000000	            mov rax, qword [0x04001ed2] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ed2	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ed5	     0xf8433010000	                            je 0x400200e	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001edb	      0xe800000000	                          call 0x4001ee0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ee0	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ee3	     0xf8525010000	                           jne 0x400200e	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4001ee9	    0x488b05000000	            mov rax, qword [0x04001ef0] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001ef0	    0x8ba8e0000000	            mov ebp, dword [rax + 0xe0] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001ef6	    0x488b3d000000	            mov rdi, qword [0x04001efd] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001efd	      0xe800000000	                          call 0x4001f02	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001f02	            0x39c5	                            cmp ebp, eax	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001f04	     0xf8504010000	                           jne 0x400200e	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4001f0a	    0x488b05000000	            mov rax, qword [0x04001f11] 	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4001f11	    0xc780e0000000	               mov dword [rax + 0xe0], 0	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4001f1b	      0xe9ee000000	                           jmp 0x400200e	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4001f20	            0x85db	                           test ebx, ebx	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f22	     0xf84be000000	                            je 0x4001fe6	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f28	    0x83bad0000000	               cmp dword [rdx + 0xd0], 0	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f2f	     0xf85b1000000	                           jne 0x4001fe6	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f35	    0x448b8a940000	            mov r9d, dword [rdx + 0x94] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f3c	    0x488b35000000	            mov rsi, qword [0x04001f43] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f43	          0x8b0424	                    mov eax, dword [rsp]	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f46	          0x4429c8	                            sub eax, r9d	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f49	          0x4401c9	                            add ecx, r9d	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f4c	            0x89f3	                            mov ebx, esi	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f4e	            0x29cb	                            sub ebx, ecx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f50	      0x458d441801	                 lea r8d, [r8 + rbx + 1]	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001f55	            0x29f0	                            sub eax, esi	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001f57	            0x89c1	                            mov ecx, eax	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001f59	            0x7805	                            js 0x4001f60	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001f5b	          0x4585c0	                           test r8d, r8d	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001f5e	            0x7e6c	                           jle 0x4001fcc	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4001f60	            0x89ce	                            mov esi, ecx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001f62	            0xf7de	                                 neg esi	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001f64	            0x85c9	                           test ecx, ecx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001f66	        0x410f49f0	                         cmovns esi, r8d	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4001f6a	    0x4c8b15000000	            mov r10, qword [0x04001f71] 	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f71	          0x4d85d2	                           test r10, r10	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f74	            0x7412	                            je 0x4001f88	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f76	            0x89e8	                            mov eax, ebp	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f78	          0xc1e81f	                           shr eax, 0x1f	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f7b	             0x1e8	                            add eax, ebp	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f7d	            0xd1f8	                              sar eax, 1	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f7f	            0x39c6	                            cmp esi, eax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f81	            0x7d05	                           jge 0x4001f88	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f83	          0x4439c1	                            cmp ecx, r8d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f86	            0x7f0d	                            jg 0x4001f95	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f88	            0x89eb	                            mov ebx, ebp	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f8a	          0xc1eb1f	                           shr ebx, 0x1f	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f8d	             0x1eb	                            add ebx, ebp	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f8f	            0xd1fb	                              sar ebx, 1	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f91	            0x29df	                            sub edi, ebx	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f93	            0xeb18	                           jmp 0x4001fad	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4001f95	          0x4863c6	                         movsxd rax, esi	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001f98	          0x4939c2	                            cmp r10, rax	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001f9b	        0x410f4ff2	                         cmovg esi, r10d	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4001f9f	          0x4489c8	                            mov eax, r9d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fa2	            0x29f0	                            sub eax, esi	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fa4	        0x428d3c0e	                     lea edi, [rsi + r9]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fa8	            0x85c9	                           test ecx, ecx	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001faa	           0xf48f8	                          cmovs edi, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fad	            0x85ff	                           test edi, edi	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001faf	      0xb800000000	                              mov eax, 0	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fb4	           0xf48f8	                          cmovs edi, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4001fb7	          0x4139f9	                            cmp r9d, edi	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001fba	            0x7410	                            je 0x4001fcc	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001fbc	    0x89ba94000000	             mov dword [rdx + 0x94], edi	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4001fc2	      0xbf28000000	                           mov edi, 0x28	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4001fc7	      0xe800000000	                          call 0x4001fcc	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4001fcc	    0x488b05000000	            mov rax, qword [0x04001fd3] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001fd3	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001fd9	    0x2990e0000000	             sub dword [rax + 0xe0], edx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001fdf	      0xbb00000000	                              mov ebx, 0	       929	move.c	FUNCTION_32
0x4001fe4	            0xeb28	                           jmp 0x400200e	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4001fe6	    0x8b8294000000	            mov eax, dword [rdx + 0x94] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001fec	            0x39c6	                            cmp esi, eax	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001fee	            0x7e0f	                           jle 0x4001fff	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ff0	            0x29c6	                            sub esi, eax	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ff2	    0x89b2e0000000	             mov dword [rdx + 0xe0], esi	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4001ff8	      0xbb00000000	                              mov ebx, 0	       929	move.c	FUNCTION_32
0x4001ffd	            0xeb0f	                           jmp 0x400200e	       929	move.c	FUNCTION_32
0x4001fff	    0xc782e0000000	               mov dword [rdx + 0xe0], 0	      1054	move.c	FUNCTION_32	ELSE_8
0x4002009	      0xbb00000000	                              mov ebx, 0	       929	move.c	FUNCTION_32
0x400200e	    0x488b3d000000	            mov rdi, qword [0x04002015] 	      1059	move.c	FUNCTION_32	IF_17
0x4002015	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x4002019	        0x483b7778	            cmp rsi, qword [rdi + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x400201d	            0x750e	                           jne 0x400202d	      1059	move.c	FUNCTION_32	IF_17
0x400201f	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1060	move.c	FUNCTION_32	IF_17
0x4002025	     0x187dc000000	             add dword [rdi + 0xdc], eax	      1060	move.c	FUNCTION_32	IF_17
0x400202b	            0xeb12	                           jmp 0x400203f	      1060	move.c	FUNCTION_32	IF_17
0x400202d	      0xe800000000	                          call 0x4002032	      1062	move.c	FUNCTION_32	CALL_9
0x4002032	    0x488b15000000	            mov rdx, qword [0x04002039] 	      1062	move.c	FUNCTION_32	CALL_9
0x4002039	     0x182dc000000	             add dword [rdx + 0xdc], eax	      1062	move.c	FUNCTION_32	CALL_9
0x400203f	    0x488b3d000000	            mov rdi, qword [0x04002046] 	      1065	move.c	FUNCTION_32
0x4002046	    0x8baf98000000	            mov ebp, dword [rdi + 0x98] 	      1065	move.c	FUNCTION_32
0x400204c	    0x8b97dc000000	            mov edx, dword [rdi + 0xdc] 	      1068	move.c	FUNCTION_32	IF_18
0x4002052	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	      1068	move.c	FUNCTION_32	IF_18
0x4002058	            0x39c2	                            cmp edx, eax	      1068	move.c	FUNCTION_32	IF_18
0x400205a	            0x7d3f	                           jge 0x400209b	      1068	move.c	FUNCTION_32	IF_18
0x400205c	            0x85ed	                           test ebp, ebp	      1069	move.c	FUNCTION_32	IF_18
0x400205e	            0x7f15	                            jg 0x4002075	      1069	move.c	FUNCTION_32	IF_18
0x4002060	          0x4863d2	                         movsxd rdx, edx	      1070	move.c	FUNCTION_32	IF_18
0x4002063	    0x480315000000	             add rdx, qword [0x0400206a]	      1070	move.c	FUNCTION_32	IF_18
0x400206a	            0x4898	                                    cdqe	      1070	move.c	FUNCTION_32	IF_18
0x400206c	          0x4839c2	                            cmp rdx, rax	      1070	move.c	FUNCTION_32	IF_18
0x400206f	     0xf8c35020000	                            jl 0x40022aa	      1070	move.c	FUNCTION_32	IF_18
0x4002075	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1071	move.c	FUNCTION_32	IF_18
0x4002079	      0xba00000000	                              mov edx, 0	      1071	move.c	FUNCTION_32	IF_18
0x400207e	      0xe800000000	                          call 0x4002083	      1071	move.c	FUNCTION_32	IF_18
0x4002083	          0x8d48ff	                      lea ecx, [rax - 1]	      1071	move.c	FUNCTION_32	IF_18
0x4002086	    0x488b15000000	            mov rdx, qword [0x0400208d] 	      1078	move.c	FUNCTION_32	IF_18
0x400208d	    0x3b8aa0000000	            cmp ecx, dword [rdx + 0xa0] 	      1071	move.c	FUNCTION_32	IF_18
0x4002093	     0xf8c11020000	                            jl 0x40022aa	      1071	move.c	FUNCTION_32	IF_18
0x4002099	            0xeb05	                           jmp 0x40020a0	      1071	move.c	FUNCTION_32	IF_18
0x400209b	      0xb800000000	                              mov eax, 0	      1067	move.c	FUNCTION_32
0x40020a0	    0x488b3d000000	            mov rdi, qword [0x040020a7] 	      1079	move.c	FUNCTION_32	IF_18
0x40020a7	    0x83bfa0000000	               cmp dword [rdi + 0xa0], 0	      1079	move.c	FUNCTION_32	IF_18
0x40020ae	     0xf84f6010000	                            je 0x40022aa	      1079	move.c	FUNCTION_32	IF_18
0x40020b4	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1080	move.c	FUNCTION_32	IF_18
0x40020b8	        0x48397778	            cmp qword [rdi + 0x78], rsi 	      1081	move.c	FUNCTION_32	IF_18
0x40020bc	     0xf85e8010000	                           jne 0x40022aa	      1081	move.c	FUNCTION_32	IF_18
0x40020c2	            0x85db	                           test ebx, ebx	      1081	move.c	FUNCTION_32	IF_18
0x40020c4	     0xf8ee0010000	                           jle 0x40022aa	      1081	move.c	FUNCTION_32	IF_18
0x40020ca	    0x83bfac000000	               cmp dword [rdi + 0xac], 0	      1082	move.c	FUNCTION_32	IF_18
0x40020d1	     0xf84d3010000	                            je 0x40022aa	      1082	move.c	FUNCTION_32	IF_18
0x40020d7	          0x4c63eb	                         movsxd r13, ebx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x40020da	          0x4c89e9	                            mov rcx, r13	      1090	move.c	FUNCTION_32	IF_18
0x40020dd	    0x480faf0d0000	            imul rcx, qword [0x040020e5]	      1090	move.c	FUNCTION_32	IF_18
0x40020e5	    0x486397980000	         movsxd rdx, dword [rdi + 0x98] 	      1090	move.c	FUNCTION_32	IF_18
0x40020ec	          0x4801ca	                            add rdx, rcx	      1090	move.c	FUNCTION_32	IF_18
0x40020ef	    0x48638fd80000	         movsxd rcx, dword [rdi + 0xd8] 	      1090	move.c	FUNCTION_32	IF_18
0x40020f6	          0x4839ca	                            cmp rdx, rcx	      1090	move.c	FUNCTION_32	IF_18
0x40020f9	        0x410f9fc4	                               setg r12b	      1090	move.c	FUNCTION_32	IF_18
0x40020fd	        0x450fb6e4	                        movzx r12d, r12b	      1090	move.c	FUNCTION_32	IF_18
0x4002101	            0x85c0	                           test eax, eax	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4002103	            0x750a	                           jne 0x400210f	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4002105	      0xba00000000	                              mov edx, 0	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400210a	      0xe800000000	                          call 0x400210f	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400210f	          0x8d48ff	                      lea ecx, [rax - 1]	      1097	move.c	FUNCTION_32	IF_18
0x4002112	          0x4c63f1	                         movsxd r14, ecx	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4002115	    0x488b3d000000	            mov rdi, qword [0x0400211c] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400211c	    0x8bb7dc000000	            mov esi, dword [rdi + 0xdc] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4002122	    0x4c8b1d000000	            mov r11, qword [0x04002129] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4002129	          0x4863c6	                         movsxd rax, esi	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400212c	          0x4c01d8	                            add rax, r11	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400212f	        0x468d0c1e	                    lea r9d, [rsi + r11]	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4002133	          0x4939c6	                            cmp r14, rax	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4002136	        0x440f4ec9	                         cmovle r9d, ecx	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x400213a	    0x448b87a00000	            mov r8d, dword [rdi + 0xa0] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002141	    0x448b97980000	           mov r10d, dword [rdi + 0x98] 	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002148	          0x4489d0	                           mov eax, r10d	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400214b	              0x99	                                     cdq	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400214c	            0xf7fb	                                idiv ebx	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400214e	          0x4189c7	                           mov r15d, eax	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002151	        0x418d1400	                     lea edx, [r8 + rax]	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002155	      0x418d442402	                      lea eax, [r12 + 2]	      1103	move.c	FUNCTION_32	IF_18	IF_22
0x400215a	          0x4139d1	                            cmp r9d, edx	      1103	move.c	FUNCTION_32	IF_18	IF_22
0x400215d	        0x440f4de0	                        cmovge r12d, eax	      1103	move.c	FUNCTION_32	IF_18	IF_22
0x4002161	        0x4183fc03	                             cmp r12d, 3	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002165	            0x7409	                            je 0x4002170	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002167	        0x4b8d041b	                    lea rax, [r11 + r11]	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400216b	          0x4939c6	                            cmp r14, rax	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400216e	            0x7d3e	                           jge 0x40021ae	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002170	    0x8b87d8000000	            mov eax, dword [rdi + 0xd8] 	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4002176	              0x99	                                     cdq	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4002177	            0xf7fb	                                idiv ebx	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4002179	          0x4589c1	                            mov r9d, r8d	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400217c	        0x41c1e91f	                           shr r9d, 0x1f	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002180	          0x4501c1	                            add r9d, r8d	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002183	          0x41d1f9	                              sar r9d, 1	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002186	            0x89c2	                            mov edx, eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002188	          0x4429ca	                            sub edx, r9d	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400218b	          0x4439c8	                            cmp eax, r9d	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400218e	      0xb800000000	                              mov eax, 0	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002193	           0xf4ed0	                         cmovle edx, eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002196	            0x89c8	                            mov eax, ecx	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002198	          0x4429c0	                            sub eax, r8d	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400219b	          0x83c001	                              add eax, 1	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400219e	            0x39c2	                            cmp edx, eax	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40021a0	           0xf4ec2	                         cmovle eax, edx	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40021a3	           0xfafc3	                           imul eax, ebx	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40021a6	    0x898798000000	             mov dword [rdi + 0x98], eax	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40021ac	            0xeb78	                           jmp 0x4002226	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40021ae	        0x4183fc01	                             cmp r12d, 1	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021b2	            0x753d	                           jne 0x40021f1	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021b4	        0x4d0fafdd	                           imul r11, r13	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021b8	          0x4963c2	                        movsxd rax, r10d	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021bb	          0x4901c3	                            add r11, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021be	    0x486387d80000	         movsxd rax, dword [rdi + 0xd8] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021c5	          0x4929c3	                            sub r11, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021c8	      0x4b8d441dff	                lea rax, [r13 + r11 - 1]	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021cd	            0x4899	                                     cqo	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021cf	          0x49f7fd	                                idiv r13	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021d2	            0x89c2	                            mov edx, eax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40021d4	            0x85c0	                           test eax, eax	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021d6	            0x7e4e	                           jle 0x4002226	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021d8	           0xfafc3	                           imul eax, ebx	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40021db	          0x4139c2	                           cmp r10d, eax	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40021de	        0x410f4cd7	                         cmovl edx, r15d	      1126	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40021e2	           0xfafd3	                           imul edx, ebx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021e5	          0x4129d2	                           sub r10d, edx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021e8	    0x448997980000	            mov dword [rdi + 0x98], r10d	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021ef	            0xeb35	                           jmp 0x4002226	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40021f1	        0x4183fc02	                             cmp r12d, 2	      1130	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40021f5	            0x752f	                           jne 0x4002226	      1130	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40021f7	          0x4489c8	                            mov eax, r9d	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40021fa	          0x4429c0	                            sub eax, r8d	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40021fd	          0x83c001	                              add eax, 1	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002200	           0xfafc3	                           imul eax, ebx	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002203	        0x89442404	                mov dword [rsp + 4], eax	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002207	    0x8b97d8000000	            mov edx, dword [rdi + 0xd8] 	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400220d	            0x39c2	                            cmp edx, eax	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400220f	            0x7d0a	                           jge 0x400221b	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002211	            0x29d8	                            sub eax, ebx	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002213	            0x39c2	                            cmp edx, eax	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002215	            0x7cfa	                            jl 0x4002211	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002217	        0x89442404	                mov dword [rsp + 4], eax	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400221b	          0x4139c2	                           cmp r10d, eax	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x400221e	            0x7d06	                           jge 0x4002226	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002220	    0x898798000000	             mov dword [rdi + 0x98], eax	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002226	    0x8b8f98000000	            mov ecx, dword [rdi + 0x98] 	      1140	move.c	FUNCTION_32	IF_18
0x400222c	            0x89c8	                            mov eax, ecx	      1140	move.c	FUNCTION_32	IF_18
0x400222e	              0x99	                                     cdq	      1140	move.c	FUNCTION_32	IF_18
0x400222f	            0xf7fb	                                idiv ebx	      1140	move.c	FUNCTION_32	IF_18
0x4002231	            0x29c6	                            sub esi, eax	      1140	move.c	FUNCTION_32	IF_18
0x4002233	            0x89f0	                            mov eax, esi	      1140	move.c	FUNCTION_32	IF_18
0x4002235	    0x89b7dc000000	             mov dword [rdi + 0xdc], esi	      1140	move.c	FUNCTION_32	IF_18
0x400223b	          0x4139f0	                            cmp r8d, esi	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x400223e	            0x7f1d	                            jg 0x400225d	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x4002240	            0x89f2	                            mov edx, esi	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x4002242	          0x4429c2	                            sub edx, r8d	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x4002245	          0x83c201	                              add edx, 1	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x4002248	            0x89de	                            mov esi, ebx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x400224a	           0xfaff2	                           imul esi, edx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x400224d	             0x1f1	                            add ecx, esi	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x400224f	    0x898f98000000	             mov dword [rdi + 0x98], ecx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x4002255	            0x29d0	                            sub eax, edx	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x4002257	    0x8987dc000000	             mov dword [rdi + 0xdc], eax	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x400225d	            0x89e8	                            mov eax, ebp	      1149	move.c	FUNCTION_32	IF_18
0x400225f	    0x2b8798000000	             sub eax, dword [rdi + 0x98]	      1149	move.c	FUNCTION_32	IF_18
0x4002265	              0x99	                                     cdq	      1149	move.c	FUNCTION_32	IF_18
0x4002266	            0xf7fb	                                idiv ebx	      1149	move.c	FUNCTION_32	IF_18
0x4002268	            0x85c0	                           test eax, eax	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x400226a	            0x7e19	                           jle 0x4002285	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x400226c	    0x41b800000000	                              mov r8d, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002272	      0xb900000000	                              mov ecx, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002277	            0x89c2	                            mov edx, eax	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002279	      0xbe00000000	                              mov esi, 0	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400227e	      0xe800000000	                          call 0x4002283	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002283	            0xeb36	                           jmp 0x40022bb	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002285	            0x85c0	                           test eax, eax	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002287	            0x7932	                           jns 0x40022bb	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002289	            0xf7d8	                                 neg eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400228b	            0x89c2	                            mov edx, eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400228d	    0x41b900000000	                              mov r9d, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002293	    0x41b800000000	                              mov r8d, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002299	      0xb900000000	                              mov ecx, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400229e	      0xbe00000000	                              mov esi, 0	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40022a3	      0xe800000000	                          call 0x40022a8	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40022a8	            0xeb11	                           jmp 0x40022bb	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40022aa	    0x488b05000000	            mov rax, qword [0x040022b1] 	      1156	move.c	FUNCTION_32	ELSE_15
0x40022b1	    0xc78098000000	               mov dword [rax + 0x98], 0	      1156	move.c	FUNCTION_32	ELSE_15
0x40022bb	    0x488b05000000	            mov rax, qword [0x040022c2] 	      1157	move.c	FUNCTION_32	IF_34
0x40022c2	    0x3ba898000000	            cmp ebp, dword [rax + 0x98] 	      1157	move.c	FUNCTION_32	IF_34
0x40022c8	            0x740a	                            je 0x40022d4	      1157	move.c	FUNCTION_32	IF_34
0x40022ca	      0xbf28000000	                           mov edi, 0x28	      1158	move.c	FUNCTION_32	CALL_14
0x40022cf	      0xe800000000	                          call 0x40022d4	      1158	move.c	FUNCTION_32	CALL_14
0x40022d4	    0x488b05000000	            mov rax, qword [0x040022db] 	      1162	move.c	FUNCTION_32	IF_35
0x40022db	    0x83b86c020000	              cmp dword [rax + 0x26c], 0	      1162	move.c	FUNCTION_32	IF_35
0x40022e2	            0x741c	                            je 0x4002300	      1162	move.c	FUNCTION_32	IF_35
0x40022e4	    0xf680b4000000	               test byte [rax + 0xb4], 4	      1162	move.c	FUNCTION_32	IF_35
0x40022eb	            0x7513	                           jne 0x4002300	      1162	move.c	FUNCTION_32	IF_35
0x40022ed	      0xe800000000	                          call 0x40022f2	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022f2	            0x85c0	                           test eax, eax	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022f4	            0x750a	                           jne 0x4002300	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40022f6	      0xbf23000000	                           mov edi, 0x23	      1167	move.c	FUNCTION_32	CALL_16
0x40022fb	      0xe800000000	                          call 0x4002300	      1167	move.c	FUNCTION_32	CALL_16
0x4002300	    0x488b05000000	            mov rax, qword [0x04002307] 	      1170	move.c	FUNCTION_32
0x4002307	    0x8388b4000000	                or dword [rax + 0xb4], 7	      1170	move.c	FUNCTION_32
0x400230e	      0x488b442408	                mov rax, qword [rsp + 8]	      1171	move.c	FUNCTION_32
0x4002313	    0x644833042528	                xor rax, qword fs:[0x28]	      1171	move.c	FUNCTION_32
0x400231c	            0x7405	                            je 0x4002323	      1171	move.c	FUNCTION_32
0x400231e	      0xe800000000	                          call 0x4002323	      1171	move.c	FUNCTION_32
0x4002323	        0x4883c418	                           add rsp, 0x18	      1171	move.c	FUNCTION_32
0x4002327	              0x5b	                                 pop rbx	      1171	move.c	FUNCTION_32
0x4002328	              0x5d	                                 pop rbp	      1171	move.c	FUNCTION_32
0x4002329	            0x415c	                                 pop r12	      1171	move.c	FUNCTION_32
0x400232b	            0x415d	                                 pop r13	      1171	move.c	FUNCTION_32
0x400232d	            0x415e	                                 pop r14	      1171	move.c	FUNCTION_32
0x400232f	            0x415f	                                 pop r15	      1171	move.c	FUNCTION_32
0x4002331	              0xc3	                                     ret	      1171	move.c	FUNCTION_32
scroll_cursor_top	IF,15:functions,0:ELSE,4:FOR,0:WHILE,1:SWITCH,0:CALL,10:DO,0	163
0x400110b	            0x4157	                                push r15	      1643	move.c	FUNCTION_43
0x400110d	            0x4156	                                push r14	      1643	move.c	FUNCTION_43
0x400110f	            0x4155	                                push r13	      1643	move.c	FUNCTION_43
0x4001111	            0x4154	                                push r12	      1643	move.c	FUNCTION_43
0x4001113	              0x55	                                push rbp	      1643	move.c	FUNCTION_43
0x4001114	              0x53	                                push rbx	      1643	move.c	FUNCTION_43
0x4001115	        0x4883ec48	                           sub rsp, 0x48	      1643	move.c	FUNCTION_43
0x4001119	        0x897c240c	              mov dword [rsp + 0xc], edi	      1643	move.c	FUNCTION_43
0x400111d	        0x89742418	             mov dword [rsp + 0x18], esi	      1643	move.c	FUNCTION_43
0x4001121	    0x64488b042528	                mov rax, qword fs:[0x28]	      1643	move.c	FUNCTION_43
0x400112a	      0x4889442438	             mov qword [rsp + 0x38], rax	      1643	move.c	FUNCTION_43
0x400112f	            0x31c0	                            xor eax, eax	      1643	move.c	FUNCTION_43
0x4001131	    0x488b05000000	            mov rax, qword [0x04001138] 	      1650	move.c	FUNCTION_43
0x4001138	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1650	move.c	FUNCTION_43
0x400113c	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1650	move.c	FUNCTION_43
0x4001141	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1652	move.c	FUNCTION_43
0x4001147	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1652	move.c	FUNCTION_43
0x400114b	    0x8b0500000000	            mov eax, dword [0x04001151] 	      1658	move.c	FUNCTION_43	IF_1
0x4001151	          0x8d50ff	                      lea edx, [rax - 1]	      1655	move.c	FUNCTION_43
0x4001154	            0x85c0	                           test eax, eax	      1655	move.c	FUNCTION_43
0x4001156	     0xf4e15000000	          cmovle edx, dword [0x0400115d]	      1655	move.c	FUNCTION_43
0x400115d	        0x89542408	                mov dword [rsp + 8], edx	      1655	move.c	FUNCTION_43
0x4001161	      0xe862f6ffff	               call sym.validate_cheight	      1669	move.c	FUNCTION_43	CALL_1
0x4001166	    0x488b05000000	            mov rax, qword [0x0400116d] 	      1670	move.c	FUNCTION_43
0x400116d	    0x448ba0cc0000	           mov r12d, dword [rax + 0xcc] 	      1670	move.c	FUNCTION_43
0x4001174	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1671	move.c	FUNCTION_43	IF_2
0x4001178	        0x483b7878	            cmp rdi, qword [rax + 0x78] 	      1672	move.c	FUNCTION_43	IF_2
0x400117c	      0xbd00000000	                              mov ebp, 0	      1672	move.c	FUNCTION_43	IF_2
0x4001181	        0x410f4cec	                         cmovl ebp, r12d	      1672	move.c	FUNCTION_43	IF_2
0x4001185	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x400118a	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x400118f	      0xe800000000	                          call 0x4001194	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001194	            0x85c0	                           test eax, eax	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001196	            0x740e	                            je 0x40011a6	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001198	    0x48836c242801	               sub qword [rsp + 0x28], 1	      1677	move.c	FUNCTION_43	IF_3
0x400119e	    0x488344243001	               add qword [rsp + 0x30], 1	      1678	move.c	FUNCTION_43	IF_3
0x40011a4	            0xeb1d	                           jmp 0x40011c3	      1678	move.c	FUNCTION_43	IF_3
0x40011a6	    0x488b05000000	            mov rax, qword [0x040011ad] 	      1683	move.c	FUNCTION_43	ELSE_1
0x40011ad	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1683	move.c	FUNCTION_43	ELSE_1
0x40011b1	        0x488d50ff	                      lea rdx, [rax - 1]	      1683	move.c	FUNCTION_43	ELSE_1
0x40011b5	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1683	move.c	FUNCTION_43	ELSE_1
0x40011ba	        0x4883c001	                              add rax, 1	      1684	move.c	FUNCTION_43	ELSE_1
0x40011be	      0x4889442430	             mov qword [rsp + 0x30], rax	      1684	move.c	FUNCTION_43	ELSE_1
0x40011c3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1686	move.c	FUNCTION_43
0x40011c8	        0x4883c001	                              add rax, 1	      1686	move.c	FUNCTION_43
0x40011cc	        0x48890424	                    mov qword [rsp], rax	      1686	move.c	FUNCTION_43
0x40011d0	    0x488b3d000000	            mov rdi, qword [0x040011d7] 	      1692	move.c	FUNCTION_43	CALL_3
0x40011d7	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1692	move.c	FUNCTION_43	CALL_3
0x40011db	      0xe800000000	                          call 0x40011e0	      1692	move.c	FUNCTION_43	CALL_3
0x40011e0	          0x4189c7	                           mov r15d, eax	      1692	move.c	FUNCTION_43	CALL_3
0x40011e3	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1699	move.c	FUNCTION_43	WHILE_1
0x40011e8	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x40011eb	     0xf8ec4000000	                           jle 0x40012b5	      1699	move.c	FUNCTION_43	WHILE_1
0x40011f1	            0xeb07	                           jmp 0x40011fa	      1699	move.c	FUNCTION_43	WHILE_1
0x40011f3	        0x48890424	                    mov qword [rsp], rax	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40011f7	          0x4589f7	                          mov r15d, r14d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40011fa	      0xba00000000	                              mov edx, 0	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x40011ff	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001204	      0xe800000000	                          call 0x4001209	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001209	      0xbb01000000	                              mov ebx, 1	      1704	move.c	FUNCTION_43	WHILE_1	IF_4
0x400120e	            0x85c0	                           test eax, eax	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001210	            0x750c	                           jne 0x400121e	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001212	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001217	      0xe800000000	                          call 0x400121c	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x400121c	            0x89c3	                            mov ebx, eax	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x400121e	          0x4101dc	                           add r12d, ebx	      1708	move.c	FUNCTION_43	WHILE_1
0x4001221	        0x468d343b	                   lea r14d, [rbx + r15]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001225	      0x4439742408	               cmp dword [rsp + 8], r14d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400122a	            0x7c37	                            jl 0x4001263	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400122c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001231	    0x488b05000000	            mov rax, qword [0x04001238] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001238	          0x483938	                    cmp qword [rax], rdi	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400123b	            0x7e26	                           jle 0x4001263	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400123d	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001242	      0xbe00000000	                              mov esi, 0	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001247	      0xe800000000	                          call 0x400124c	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x400124c	            0x85c0	                           test eax, eax	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x400124e	            0x7406	                            je 0x4001256	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001250	        0x4183c401	                             add r12d, 1	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x4001254	            0xeb0d	                           jmp 0x4001263	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x4001256	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400125b	      0xe800000000	                          call 0x4001260	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001260	          0x4101c4	                           add r12d, eax	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001263	    0x4c8b2d000000	            mov r13, qword [0x0400126a] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x400126a	    0x453ba5a00000	           cmp r12d, dword [r13 + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001271	            0x7f52	                            jg 0x40012c5	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001273	        0x498b5578	            mov rdx, qword [r13 + 0x78] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001277	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x400127c	             0x1eb	                            add ebx, ebp	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x400127e	          0x4839c2	                            cmp rdx, rax	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001281	           0xf4feb	                          cmovg ebp, ebx	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001284	        0x3b6c240c	              cmp ebp, dword [rsp + 0xc]	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001288	            0x7f06	                            jg 0x4001290	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x400128a	        0x483b1424	                    cmp rdx, qword [rsp]	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x400128e	            0x7f0b	                            jg 0x400129b	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001290	      0x44397c2408	               cmp dword [rsp + 8], r15d	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001295	     0xf8edb000000	                           jle 0x4001376	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x400129b	        0x488d78ff	                      lea rdi, [rax - 1]	      1733	move.c	FUNCTION_43	WHILE_1
0x400129f	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1733	move.c	FUNCTION_43	WHILE_1
0x40012a4	    0x488344243001	               add qword [rsp + 0x30], 1	      1734	move.c	FUNCTION_43	WHILE_1
0x40012aa	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x40012ad	     0xf8f40ffffff	                            jg 0x40011f3	      1699	move.c	FUNCTION_43	WHILE_1
0x40012b3	            0xeb26	                           jmp 0x40012db	      1699	move.c	FUNCTION_43	WHILE_1
0x40012b5	    0x4c8b2d000000	            mov r13, qword [0x040012bc] 	      1742	move.c	FUNCTION_43	IF_10
0x40012bc	    0x453ba5a00000	           cmp r12d, dword [r13 + 0xa0] 	      1742	move.c	FUNCTION_43	IF_10
0x40012c3	            0x7e0f	                           jle 0x40012d4	      1742	move.c	FUNCTION_43	IF_10
0x40012c5	      0xbf00000000	                              mov edi, 0	      1743	move.c	FUNCTION_43	CALL_8
0x40012ca	      0xe800000000	                          call 0x40012cf	      1743	move.c	FUNCTION_43	CALL_8
0x40012cf	      0xe9ae000000	                           jmp 0x4001382	      1743	move.c	FUNCTION_43	CALL_8
0x40012d4	        0x488b0424	                    mov rax, qword [rsp]	      1686	move.c	FUNCTION_43
0x40012d8	          0x4589fe	                          mov r14d, r15d	      1692	move.c	FUNCTION_43	CALL_3
0x40012db	        0x49394578	            cmp qword [r13 + 0x78], rax 	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x40012df	            0x7f07	                            jg 0x40012e8	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x40012e1	      0x837c241800	               cmp dword [rsp + 0x18], 0	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x40012e6	            0x7404	                            je 0x40012ec	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x40012e8	        0x49894578	             mov qword [r13 + 0x78], rax	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40012ec	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40012f0	        0x49394578	            cmp qword [r13 + 0x78], rax 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40012f4	            0x7e04	                           jle 0x40012fa	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40012f6	        0x49894578	             mov qword [r13 + 0x78], rax	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40012fa	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x40012fe	          0x4c89ef	                            mov rdi, r13	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001301	      0xe800000000	                          call 0x4001306	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001306	    0x418985840000	             mov dword [r13 + 0x84], eax	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x400130d	    0x488b3d000000	            mov rdi, qword [0x04001314] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001314	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400131a	        0x8b742408	                mov esi, dword [rsp + 8]	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400131e	          0x4439f6	                           cmp esi, r14d	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001321	            0x7d18	                           jge 0x400133b	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001323	            0x85c0	                           test eax, eax	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001325	            0x7e14	                           jle 0x400133b	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001327	          0x4129f6	                           sub r14d, esi	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x400132a	          0x4429f0	                           sub eax, r14d	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x400132d	      0xba00000000	                              mov edx, 0	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001332	           0xf48c2	                          cmovs eax, edx	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001335	    0x898784000000	             mov dword [rdi + 0x84], eax	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x400133b	      0xbe00000000	                              mov esi, 0	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x4001340	      0xe800000000	                          call 0x4001345	      1762	move.c	FUNCTION_43	ELSE_4	CALL_10
0x4001345	    0x488b05000000	            mov rax, qword [0x0400134c] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x400134c	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4001351	        0x483b7078	            cmp rsi, qword [rax + 0x78] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4001355	            0x750c	                           jne 0x4001363	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4001357	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x400135b	    0x3bb084000000	            cmp esi, dword [rax + 0x84] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4001361	            0x7407	                            je 0x400136a	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4001363	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff8e	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x400136a	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	      1771	move.c	FUNCTION_43	ELSE_4
0x4001374	            0xeb0c	                           jmp 0x4001382	      1773	move.c	FUNCTION_43
0x4001376	        0x488b0424	                    mov rax, qword [rsp]	      1773	move.c	FUNCTION_43
0x400137a	          0x4589fe	                          mov r14d, r15d	      1773	move.c	FUNCTION_43
0x400137d	      0xe959ffffff	                           jmp 0x40012db	      1773	move.c	FUNCTION_43
0x4001382	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1773	move.c	FUNCTION_43
0x4001387	    0x644833042528	                xor rax, qword fs:[0x28]	      1773	move.c	FUNCTION_43
0x4001390	            0x7405	                            je 0x4001397	      1773	move.c	FUNCTION_43
0x4001392	      0xe800000000	                          call 0x4001397	      1773	move.c	FUNCTION_43
0x4001397	        0x4883c448	                           add rsp, 0x48	      1773	move.c	FUNCTION_43
0x400139b	              0x5b	                                 pop rbx	      1773	move.c	FUNCTION_43
0x400139c	              0x5d	                                 pop rbp	      1773	move.c	FUNCTION_43
0x400139d	            0x415c	                                 pop r12	      1773	move.c	FUNCTION_43
0x400139f	            0x415d	                                 pop r13	      1773	move.c	FUNCTION_43
0x40013a1	            0x415e	                                 pop r14	      1773	move.c	FUNCTION_43
0x40013a3	            0x415f	                                 pop r15	      1773	move.c	FUNCTION_43
0x40013a5	              0xc3	                                     ret	      1773	move.c	FUNCTION_43
do_check_cursorbind	IF,0:functions,1:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	87
0x40033bd	            0x4157	                                push r15	      2774	move.c	FUNCTION_51
0x40033bf	            0x4156	                                push r14	      2774	move.c	FUNCTION_51
0x40033c1	            0x4155	                                push r13	      2774	move.c	FUNCTION_51
0x40033c3	            0x4154	                                push r12	      2774	move.c	FUNCTION_51
0x40033c5	              0x55	                                push rbp	      2774	move.c	FUNCTION_51
0x40033c6	              0x53	                                push rbx	      2774	move.c	FUNCTION_51
0x40033c7	        0x4883ec28	                           sub rsp, 0x28	      2774	move.c	FUNCTION_51
0x40033cb	    0x488b2d000000	            mov rbp, qword [0x040033d2] 	      2775	move.c	FUNCTION_51
0x40033d2	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2775	move.c	FUNCTION_51
0x40033d6	      0x4889442408	                mov qword [rsp + 8], rax	      2775	move.c	FUNCTION_51
0x40033db	        0x448b7d40	           mov r15d, dword [rbp + 0x40] 	      2776	move.c	FUNCTION_51
0x40033df	        0x448b7544	           mov r14d, dword [rbp + 0x44] 	      2778	move.c	FUNCTION_51
0x40033e3	        0x448b6d48	           mov r13d, dword [rbp + 0x48] 	      2780	move.c	FUNCTION_51
0x40033e7	        0x448b654c	           mov r12d, dword [rbp + 0x4c] 	      2781	move.c	FUNCTION_51
0x40033eb	    0x488b05000000	            mov rax, qword [0x040033f2] 	      2783	move.c	FUNCTION_51
0x40033f2	      0x4889442410	             mov qword [rsp + 0x10], rax	      2783	move.c	FUNCTION_51
0x40033f7	    0x8b0500000000	            mov eax, dword [0x040033fd] 	      2785	move.c	FUNCTION_51
0x40033fd	        0x89442418	             mov dword [rsp + 0x18], eax	      2785	move.c	FUNCTION_51
0x4003401	    0x8b0500000000	            mov eax, dword [0x04003407] 	      2786	move.c	FUNCTION_51
0x4003407	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2786	move.c	FUNCTION_51
0x400340b	    0xc70500000000	               mov dword [0x04003415], 0	      2791	move.c	FUNCTION_51
0x4003415	    0xc70500000000	               mov dword [0x0400341f], 0	      2791	move.c	FUNCTION_51
0x400341f	    0x488b1d000000	            mov rbx, qword [0x04003426] 	      2792	move.c	FUNCTION_51
0x4003426	    0x48891d000000	            mov qword [0x0400342d], rbx 	      2792	move.c	FUNCTION_51
0x400342d	          0x4885db	                           test rbx, rbx	      2792	move.c	FUNCTION_51
0x4003430	     0xf84f1000000	                            je 0x4003527	      2792	move.c	FUNCTION_51
0x4003436	        0x488b4308	                mov rax, qword [rbx + 8]	      2794	move.c	FUNCTION_51	FUNCTION_1
0x400343a	    0x488905000000	            mov qword [0x04003441], rax 	      2794	move.c	FUNCTION_51	FUNCTION_1
0x4003441	          0x4839dd	                            cmp rbp, rbx	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003444	     0xf84c2000000	                            je 0x400350c	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400344a	    0x83bbb0020000	              cmp dword [rbx + 0x2b0], 0	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003451	     0xf84b5000000	                            je 0x400350c	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003457	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x400345e	            0x7415	                            je 0x4003475	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003460	      0x488b742408	                mov rsi, qword [rsp + 8]	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x4003465	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x400346a	      0xe800000000	                          call 0x400346f	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x400346f	        0x48894338	             mov qword [rbx + 0x38], rax	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003473	            0xeb09	                           jmp 0x400347e	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003475	      0x488b442408	                mov rax, qword [rsp + 8]	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x400347a	        0x48894338	             mov qword [rbx + 0x38], rax	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x400347e	    0x488b05000000	            mov rax, qword [0x04003485] 	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003485	        0x44897840	            mov dword [rax + 0x40], r15d	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003489	        0x44897044	            mov dword [rax + 0x44], r14d	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400348d	        0x44896848	            mov dword [rax + 0x48], r13d	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003491	        0x4489604c	            mov dword [rax + 0x4c], r12d	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003495	    0x8b1d00000000	            mov ebx, dword [0x0400349b] 	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400349b	    0xc70500000000	               mov dword [0x040034a5], 1	      2815	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40034a5	      0xe800000000	                          call 0x40034aa	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_2
0x40034aa	    0x488b05000000	            mov rax, qword [0x040034b1] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40034b1	    0x83b870020000	              cmp dword [rax + 0x270], 0	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40034b8	            0x7509	                           jne 0x40034c3	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40034ba	    0x83b86c020000	              cmp dword [rax + 0x26c], 0	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40034c1	            0x7405	                            je 0x40034c8	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40034c3	      0xe800000000	                          call 0x40034c8	      2819	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_3
0x40034c8	    0x891d00000000	            mov dword [0x040034ce], ebx 	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40034ce	    0x833d00000000	               cmp dword [0x040034d5], 0	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x40034d5	            0x7405	                            je 0x40034dc	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x40034d7	      0xe800000000	                          call 0x40034dc	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x40034dc	      0xbf0a000000	                            mov edi, 0xa	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x40034e1	      0xe800000000	                          call 0x40034e6	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x40034e6	    0x488b05000000	            mov rax, qword [0x040034ed] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x40034ed	    0x83b888020000	              cmp dword [rax + 0x288], 0	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x40034f4	            0x7505	                           jne 0x40034fb	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x40034f6	      0xe800000000	                          call 0x40034fb	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x40034fb	    0x488b05000000	            mov rax, qword [0x04003502] 	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003502	    0xc78040010000	              mov dword [rax + 0x140], 1	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400350c	    0x488b05000000	            mov rax, qword [0x04003513] 	      2792	move.c	FUNCTION_51
0x4003513	        0x488b5820	            mov rbx, qword [rax + 0x20] 	      2792	move.c	FUNCTION_51
0x4003517	    0x48891d000000	            mov qword [0x0400351e], rbx 	      2792	move.c	FUNCTION_51
0x400351e	          0x4885db	                           test rbx, rbx	      2792	move.c	FUNCTION_51
0x4003521	     0xf850fffffff	                           jne 0x4003436	      2792	move.c	FUNCTION_51
0x4003527	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2839	move.c	FUNCTION_51
0x400352b	    0x890500000000	            mov dword [0x04003531], eax 	      2839	move.c	FUNCTION_51
0x4003531	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2840	move.c	FUNCTION_51
0x4003535	    0x890500000000	            mov dword [0x0400353b], eax 	      2840	move.c	FUNCTION_51
0x400353b	    0x48892d000000	            mov qword [0x04003542], rbp 	      2841	move.c	FUNCTION_51
0x4003542	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2842	move.c	FUNCTION_51
0x4003547	    0x488905000000	            mov qword [0x0400354e], rax 	      2842	move.c	FUNCTION_51
0x400354e	        0x4883c428	                           add rsp, 0x28	      2843	move.c	FUNCTION_51
0x4003552	              0x5b	                                 pop rbx	      2843	move.c	FUNCTION_51
0x4003553	              0x5d	                                 pop rbp	      2843	move.c	FUNCTION_51
0x4003554	            0x415c	                                 pop r12	      2843	move.c	FUNCTION_51
0x4003556	            0x415d	                                 pop r13	      2843	move.c	FUNCTION_51
0x4003558	            0x415e	                                 pop r14	      2843	move.c	FUNCTION_51
0x400355a	            0x415f	                                 pop r15	      2843	move.c	FUNCTION_51
0x400355c	              0xc3	                                     ret	      2843	move.c	FUNCTION_51
get_scroll_overlap	IF,8:functions,0:ELSE,5:FOR,0:WHILE,0:SWITCH,0:CALL,8:DO,0	106
0x400026b	            0x4157	                                push r15	      2496	move.c	FUNCTION_49
0x400026d	            0x4156	                                push r14	      2496	move.c	FUNCTION_49
0x400026f	            0x4155	                                push r13	      2496	move.c	FUNCTION_49
0x4000271	            0x4154	                                push r12	      2496	move.c	FUNCTION_49
0x4000273	              0x55	                                push rbp	      2496	move.c	FUNCTION_49
0x4000274	              0x53	                                push rbx	      2496	move.c	FUNCTION_49
0x4000275	        0x4883ec28	                           sub rsp, 0x28	      2496	move.c	FUNCTION_49
0x4000279	          0x4889fb	                            mov rbx, rdi	      2496	move.c	FUNCTION_49
0x400027c	          0x4189f6	                           mov r14d, esi	      2496	move.c	FUNCTION_49
0x400027f	    0x488b05000000	            mov rax, qword [0x04000286] 	      2498	move.c	FUNCTION_49
0x4000286	    0x8ba8a0000000	            mov ebp, dword [rax + 0xa0] 	      2498	move.c	FUNCTION_49
0x400028c	          0x83ed02	                              sub ebp, 2	      2498	move.c	FUNCTION_49
0x400028f	        0x837f0800	                  cmp dword [rdi + 8], 0	      2502	move.c	FUNCTION_49	IF_1
0x4000293	            0x7e09	                           jle 0x400029e	      2502	move.c	FUNCTION_49	IF_1
0x4000295	    0xc7470c010000	                mov dword [rdi + 0xc], 1	      2503	move.c	FUNCTION_49	IF_1
0x400029c	            0xeb0b	                           jmp 0x40002a9	      2503	move.c	FUNCTION_49	IF_1
0x400029e	          0x488b3f	                    mov rdi, qword [rdi]	      2505	move.c	FUNCTION_49	CALL_1
0x40002a1	      0xe800000000	                          call 0x40002a6	      2505	move.c	FUNCTION_49	CALL_1
0x40002a6	          0x89430c	              mov dword [rbx + 0xc], eax	      2505	move.c	FUNCTION_49	CALL_1
0x40002a9	        0x448b630c	            mov r12d, dword [rbx + 0xc] 	      2509	move.c	FUNCTION_49
0x40002ad	          0x4439e5	                           cmp ebp, r12d	      2510	move.c	FUNCTION_49	IF_2
0x40002b0	     0xf8cfe000000	                            jl 0x40003b4	      2510	move.c	FUNCTION_49	IF_2
0x40002b6	          0x4c8b3b	                    mov r15, qword [rbx]	      2513	move.c	FUNCTION_49
0x40002b9	          0x8b4308	                mov eax, dword [rbx + 8]	      2513	move.c	FUNCTION_49
0x40002bc	        0x89442408	                mov dword [rsp + 8], eax	      2513	move.c	FUNCTION_49
0x40002c0	          0x4585f6	                         test r14d, r14d	      2514	move.c	FUNCTION_49	IF_3
0x40002c3	            0x7e0a	                           jle 0x40002cf	      2514	move.c	FUNCTION_49	IF_3
0x40002c5	          0x4889df	                            mov rdi, rbx	      2515	move.c	FUNCTION_49	CALL_3
0x40002c8	      0xe81cffffff	                   call sym.botline_forw	      2515	move.c	FUNCTION_49	CALL_3
0x40002cd	            0xeb08	                           jmp 0x40002d7	      2515	move.c	FUNCTION_49	CALL_3
0x40002cf	          0x4889df	                            mov rdi, rbx	      2517	move.c	FUNCTION_49	CALL_4
0x40002d2	      0xe8d6fdffff	                   call sym.topline_back	      2517	move.c	FUNCTION_49	CALL_4
0x40002d7	        0x448b6b0c	            mov r13d, dword [rbx + 0xc] 	      2518	move.c	FUNCTION_49
0x40002db	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	      2519	move.c	FUNCTION_49	IF_4
0x40002e2	            0x7408	                            je 0x40002ec	      2519	move.c	FUNCTION_49	IF_4
0x40002e4	        0x438d042c	                    lea eax, [r12 + r13]	      2519	move.c	FUNCTION_49	IF_4
0x40002e8	            0x39c5	                            cmp ebp, eax	      2519	move.c	FUNCTION_49	IF_4
0x40002ea	            0x7d13	                           jge 0x40002ff	      2519	move.c	FUNCTION_49	IF_4
0x40002ec	          0x4c893b	                    mov qword [rbx], r15	      2521	move.c	FUNCTION_49	IF_4
0x40002ef	        0x8b442408	                mov eax, dword [rsp + 8]	      2521	move.c	FUNCTION_49	IF_4
0x40002f3	          0x894308	                mov dword [rbx + 8], eax	      2521	move.c	FUNCTION_49	IF_4
0x40002f6	        0x4489630c	             mov dword [rbx + 0xc], r12d	      2521	move.c	FUNCTION_49	IF_4
0x40002fa	      0xe9b5000000	                           jmp 0x40003b4	      2522	move.c	FUNCTION_49	IF_4
0x40002ff	          0x488b03	                    mov rax, qword [rbx]	      2525	move.c	FUNCTION_49
0x4000302	      0x4889442410	             mov qword [rsp + 0x10], rax	      2525	move.c	FUNCTION_49
0x4000307	          0x8b4308	                mov eax, dword [rbx + 8]	      2525	move.c	FUNCTION_49
0x400030a	        0x89442418	             mov dword [rsp + 0x18], eax	      2525	move.c	FUNCTION_49
0x400030e	          0x4585f6	                         test r14d, r14d	      2526	move.c	FUNCTION_49	IF_5
0x4000311	            0x7e0a	                           jle 0x400031d	      2526	move.c	FUNCTION_49	IF_5
0x4000313	          0x4889df	                            mov rdi, rbx	      2527	move.c	FUNCTION_49	CALL_5
0x4000316	      0xe8cefeffff	                   call sym.botline_forw	      2527	move.c	FUNCTION_49	CALL_5
0x400031b	            0xeb08	                           jmp 0x4000325	      2527	move.c	FUNCTION_49	CALL_5
0x400031d	          0x4889df	                            mov rdi, rbx	      2529	move.c	FUNCTION_49	CALL_6
0x4000320	      0xe888fdffff	                   call sym.topline_back	      2529	move.c	FUNCTION_49	CALL_6
0x4000325	          0x8b430c	              mov eax, dword [rbx + 0xc]	      2530	move.c	FUNCTION_49
0x4000328	        0x8944240c	              mov dword [rsp + 0xc], eax	      2530	move.c	FUNCTION_49
0x400032c	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2531	move.c	FUNCTION_49	IF_6
0x4000331	            0x740b	                            je 0x400033e	      2531	move.c	FUNCTION_49	IF_6
0x4000333	          0x4401e8	                           add eax, r13d	      2531	move.c	FUNCTION_49	IF_6
0x4000336	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2531	move.c	FUNCTION_49	IF_6
0x400033a	            0x39c5	                            cmp ebp, eax	      2531	move.c	FUNCTION_49	IF_6
0x400033c	            0x7d10	                           jge 0x400034e	      2531	move.c	FUNCTION_49	IF_6
0x400033e	          0x4c893b	                    mov qword [rbx], r15	      2533	move.c	FUNCTION_49	IF_6
0x4000341	        0x8b442408	                mov eax, dword [rsp + 8]	      2533	move.c	FUNCTION_49	IF_6
0x4000345	          0x894308	                mov dword [rbx + 8], eax	      2533	move.c	FUNCTION_49	IF_6
0x4000348	        0x4489630c	             mov dword [rbx + 0xc], r12d	      2533	move.c	FUNCTION_49	IF_6
0x400034c	            0xeb66	                           jmp 0x40003b4	      2534	move.c	FUNCTION_49	IF_6
0x400034e	          0x4c8b3b	                    mov r15, qword [rbx]	      2537	move.c	FUNCTION_49
0x4000351	          0x8b4308	                mov eax, dword [rbx + 8]	      2537	move.c	FUNCTION_49
0x4000354	        0x89442408	                mov dword [rsp + 8], eax	      2537	move.c	FUNCTION_49
0x4000358	          0x4585f6	                         test r14d, r14d	      2538	move.c	FUNCTION_49	IF_7
0x400035b	            0x7e0a	                           jle 0x4000367	      2538	move.c	FUNCTION_49	IF_7
0x400035d	          0x4889df	                            mov rdi, rbx	      2539	move.c	FUNCTION_49	CALL_7
0x4000360	      0xe884feffff	                   call sym.botline_forw	      2539	move.c	FUNCTION_49	CALL_7
0x4000365	            0xeb08	                           jmp 0x400036f	      2539	move.c	FUNCTION_49	CALL_7
0x4000367	          0x4889df	                            mov rdi, rbx	      2541	move.c	FUNCTION_49	CALL_8
0x400036a	      0xe83efdffff	                   call sym.topline_back	      2541	move.c	FUNCTION_49	CALL_8
0x400036f	          0x8b430c	              mov eax, dword [rbx + 0xc]	      2542	move.c	FUNCTION_49
0x4000372	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2543	move.c	FUNCTION_49	IF_8
0x4000377	            0x7415	                            je 0x400038e	      2543	move.c	FUNCTION_49	IF_8
0x4000379	         0x344240c	              add eax, dword [rsp + 0xc]	      2543	move.c	FUNCTION_49	IF_8
0x400037d	          0x4401e8	                           add eax, r13d	      2543	move.c	FUNCTION_49	IF_8
0x4000380	            0x39c5	                            cmp ebp, eax	      2543	move.c	FUNCTION_49	IF_8
0x4000382	            0x7c0a	                            jl 0x400038e	      2543	move.c	FUNCTION_49	IF_8
0x4000384	      0x440364241c	            add r12d, dword [rsp + 0x1c]	      2543	move.c	FUNCTION_49	IF_8
0x4000389	          0x4439e5	                           cmp ebp, r12d	      2543	move.c	FUNCTION_49	IF_8
0x400038c	            0x7d15	                           jge 0x40003a3	      2543	move.c	FUNCTION_49	IF_8
0x400038e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2544	move.c	FUNCTION_49	IF_8
0x4000393	          0x488903	                    mov qword [rbx], rax	      2544	move.c	FUNCTION_49	IF_8
0x4000396	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2544	move.c	FUNCTION_49	IF_8
0x400039a	          0x894308	                mov dword [rbx + 8], eax	      2544	move.c	FUNCTION_49	IF_8
0x400039d	        0x44896b0c	             mov dword [rbx + 0xc], r13d	      2544	move.c	FUNCTION_49	IF_8
0x40003a1	            0xeb11	                           jmp 0x40003b4	      2544	move.c	FUNCTION_49	IF_8
0x40003a3	          0x4c893b	                    mov qword [rbx], r15	      2546	move.c	FUNCTION_49	ELSE_5
0x40003a6	        0x8b442408	                mov eax, dword [rsp + 8]	      2546	move.c	FUNCTION_49	ELSE_5
0x40003aa	          0x894308	                mov dword [rbx + 8], eax	      2546	move.c	FUNCTION_49	ELSE_5
0x40003ad	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2546	move.c	FUNCTION_49	ELSE_5
0x40003b1	          0x89430c	              mov dword [rbx + 0xc], eax	      2546	move.c	FUNCTION_49	ELSE_5
0x40003b4	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x40003b8	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x40003b9	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x40003ba	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x40003bc	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x40003be	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x40003c0	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x40003c2	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
check_cursor_moved	IF,2:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	27
0x4000468	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x400046f	        0x48394738	            cmp qword [rdi + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x4000473	            0x742d	                            je 0x40004a2	       481	move.c	FUNCTION_8	IF_1
0x4000475	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff60	       483	move.c	FUNCTION_8	IF_1
0x400047f	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4000483	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4000487	    0x488987b80000	             mov qword [rdi + 0xb8], rax	       485	move.c	FUNCTION_8	IF_1
0x400048e	    0x488997c00000	             mov qword [rdi + 0xc0], rdx	       485	move.c	FUNCTION_8	IF_1
0x4000495	    0x8b8794000000	            mov eax, dword [rdi + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x400049b	    0x8987c8000000	             mov dword [rdi + 0xc8], eax	       486	move.c	FUNCTION_8	IF_1
0x40004a1	              0xc3	                                     ret	       486	move.c	FUNCTION_8	IF_1
0x40004a2	          0x8b4740	            mov eax, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004a5	    0x3b87c0000000	            cmp eax, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004ab	            0x7519	                           jne 0x40004c6	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004ad	    0x8b97c8000000	            mov edx, dword [rdi + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004b3	    0x399794000000	            cmp dword [rdi + 0x94], edx 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004b9	            0x750b	                           jne 0x40004c6	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004bb	    0x8b8fc4000000	            mov ecx, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004c1	          0x394f44	            cmp dword [rdi + 0x44], ecx 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004c4	            0x7422	                            je 0x40004e8	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004c6	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004cd	    0x8987c0000000	             mov dword [rdi + 0xc0], eax	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004d3	    0x8b8794000000	            mov eax, dword [rdi + 0x94] 	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004d9	    0x8987c8000000	             mov dword [rdi + 0xc8], eax	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004df	          0x8b4744	            mov eax, dword [rdi + 0x44] 	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004e2	    0x8987c4000000	             mov dword [rdi + 0xc4], eax	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x40004e8	            0xf3c3	                                     ret	       499	move.c	FUNCTION_8	ELSE_1	IF_2
update_topline_redraw	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	8
0x4001d33	        0x4883ec08	                              sub rsp, 8	       152	move.c	FUNCTION_3
0x4001d37	      0xe800000000	                          call 0x4001d3c	       153	move.c	FUNCTION_3	CALL_1
0x4001d3c	    0x833d00000000	               cmp dword [0x04001d43], 0	       154	move.c	FUNCTION_3	IF_1
0x4001d43	            0x740a	                            je 0x4001d4f	       154	move.c	FUNCTION_3	IF_1
0x4001d45	      0xbf00000000	                              mov edi, 0	       155	move.c	FUNCTION_3	CALL_2
0x4001d4a	      0xe800000000	                          call 0x4001d4f	       155	move.c	FUNCTION_3	CALL_2
0x4001d4f	        0x4883c408	                              add rsp, 8	       156	move.c	FUNCTION_3
0x4001d53	              0xc3	                                     ret	       156	move.c	FUNCTION_3
win_col_off	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	29
0x4000a09	              0x55	                                push rbp	       876	move.c	ELSE_1	FUNCTION_28
0x4000a0a	              0x53	                                push rbx	       876	move.c	ELSE_1	FUNCTION_28
0x4000a0b	        0x4883ec08	                              sub rsp, 8	       876	move.c	ELSE_1	FUNCTION_28
0x4000a0f	          0x4889fd	                            mov rbp, rdi	       876	move.c	ELSE_1	FUNCTION_28
0x4000a12	      0xbb00000000	                              mov ebx, 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a17	    0x4883bf380200	              cmp qword [rdi + 0x238], 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a1f	            0x7408	                            je 0x4000a29	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a21	      0xe800000000	                          call 0x4000a26	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a26	          0x8d5801	                      lea ebx, [rax + 1]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a29	    0x8b1500000000	            mov edx, dword [0x04000a2f] 	       879	move.c	ELSE_1	FUNCTION_28
0x4000a2f	            0x85d2	                           test edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4000a31	            0x740d	                            je 0x4000a40	       879	move.c	ELSE_1	FUNCTION_28
0x4000a33	    0x48392d000000	            cmp qword [0x04000a3a], rbp 	       879	move.c	ELSE_1	FUNCTION_28
0x4000a3a	           0xf94c2	                                 sete dl	       879	move.c	ELSE_1	FUNCTION_28
0x4000a3d	           0xfb6d2	                           movzx edx, dl	       879	move.c	ELSE_1	FUNCTION_28
0x4000a40	             0x1da	                            add edx, ebx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a42	            0x89d3	                            mov ebx, edx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a44	     0x39dc8010000	            add ebx, dword [rbp + 0x1c8]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a4a	          0x4889ef	                            mov rdi, rbp	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4000a4d	      0xe800000000	                          call 0x4000a52	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4000a52	          0x83f801	                              cmp eax, 1	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a55	            0x19c0	                            sbb eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a57	            0xf7d0	                                 not eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a59	          0x83e002	                              and eax, 2	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a5c	             0x1d8	                            add eax, ebx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000a5e	        0x4883c408	                              add rsp, 8	       888	move.c	ELSE_1	FUNCTION_28
0x4000a62	              0x5b	                                 pop rbx	       888	move.c	ELSE_1	FUNCTION_28
0x4000a63	              0x5d	                                 pop rbp	       888	move.c	ELSE_1	FUNCTION_28
0x4000a64	              0xc3	                                     ret	       888	move.c	ELSE_1	FUNCTION_28
check_topfill	IF,4:functions,0:ELSE,1:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	32
0x4000b65	    0x83bf84000000	               cmp dword [rdi + 0x84], 0	      1368	move.c	FUNCTION_35	IF_1
0x4000b6c	            0x7e63	                           jle 0x4000bd1	      1368	move.c	FUNCTION_35	IF_1
0x4000b6e	              0x55	                                push rbp	      1365	move.c	FUNCTION_35
0x4000b6f	              0x53	                                push rbx	      1365	move.c	FUNCTION_35
0x4000b70	        0x4883ec08	                              sub rsp, 8	      1365	move.c	FUNCTION_35
0x4000b74	            0x89f5	                            mov ebp, esi	      1365	move.c	FUNCTION_35
0x4000b76	          0x4889fb	                            mov rbx, rdi	      1365	move.c	FUNCTION_35
0x4000b79	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4000b7d	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4000b82	      0xe800000000	                          call 0x4000b87	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4000b87	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4000b8d	            0x89c1	                            mov ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4000b8f	     0x38b84000000	             add ecx, dword [rbx + 0x84]	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4000b95	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4000b97	            0x7e32	                           jle 0x4000bcb	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4000b99	            0x85ed	                           test ebp, ebp	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000b9b	            0x741e	                            je 0x4000bbb	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000b9d	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000ba1	        0x4883f901	                              cmp rcx, 1	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000ba5	            0x7e14	                           jle 0x4000bbb	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000ba7	        0x4883e901	                              sub rcx, 1	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000bab	        0x48894b78	             mov qword [rbx + 0x78], rcx	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000baf	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000bb9	            0xeb10	                           jmp 0x4000bcb	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000bbb	            0x29c2	                            sub edx, eax	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4000bbd	      0xb800000000	                              mov eax, 0	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4000bc2	           0xf48d0	                          cmovs edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4000bc5	    0x899384000000	             mov dword [rbx + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4000bcb	        0x4883c408	                              add rsp, 8	      1386	move.c	FUNCTION_35
0x4000bcf	              0x5b	                                 pop rbx	      1386	move.c	FUNCTION_35
0x4000bd0	              0x5d	                                 pop rbp	      1386	move.c	FUNCTION_35
0x4000bd1	            0xf3c3	                                     ret	      1386	move.c	FUNCTION_35
validate_cursor	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	12
0x4002332	        0x4883ec08	                              sub rsp, 8	       633	move.c	FUNCTION_21
0x4002336	    0x488b3d000000	            mov rdi, qword [0x0400233d] 	       634	move.c	FUNCTION_21	CALL_1
0x400233d	      0xe800000000	                          call 0x4002342	       634	move.c	FUNCTION_21	CALL_1
0x4002342	    0x488b05000000	            mov rax, qword [0x04002349] 	       635	move.c	FUNCTION_21	IF_1
0x4002349	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       635	move.c	FUNCTION_21	IF_1
0x400234f	          0x83e003	                              and eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4002352	          0x83f803	                              cmp eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4002355	            0x740a	                            je 0x4002361	       635	move.c	FUNCTION_21	IF_1
0x4002357	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x400235c	      0xe800000000	                          call 0x4002361	       636	move.c	FUNCTION_21	CALL_2
0x4002361	        0x4883c408	                              add rsp, 8	       637	move.c	FUNCTION_21
0x4002365	              0xc3	                                     ret	       637	move.c	FUNCTION_21
invalidate_botline_win	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	2
0x4000933	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffff9f	       606	move.c	FUNCTION_18
0x400093a	              0xc3	                                     ret	       606	move.c	FUNCTION_18
validate_virtcol_win	IF,2:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,4:DO,0	22
0x4000969	              0x53	                                push rbx	       796	move.c	FUNCTION_25
0x400096a	          0x4889fb	                            mov rbx, rdi	       796	move.c	FUNCTION_25
0x400096d	      0xe800000000	                          call 0x4000972	       797	move.c	FUNCTION_25	CALL_1
0x4000972	    0xf683b4000000	               test byte [rbx + 0xb4], 4	       798	move.c	FUNCTION_25	IF_1
0x4000979	            0x7544	                           jne 0x40009bf	       798	move.c	FUNCTION_25	IF_1
0x400097b	    0x488d8bd80000	                   lea rcx, [rbx + 0xd8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000982	        0x488d7338	                   lea rsi, [rbx + 0x38]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000986	    0x41b800000000	                              mov r8d, 0	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x400098c	      0xba00000000	                              mov edx, 0	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000991	          0x4889df	                            mov rdi, rbx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000994	      0xe800000000	                          call 0x4000999	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000999	    0x838bb4000000	                or dword [rbx + 0xb4], 4	       801	move.c	FUNCTION_25	IF_1
0x40009a0	    0x83bb6c020000	              cmp dword [rbx + 0x26c], 0	       803	move.c	FUNCTION_25	IF_1	IF_2
0x40009a7	            0x7416	                            je 0x40009bf	       803	move.c	FUNCTION_25	IF_1	IF_2
0x40009a9	      0xe800000000	                          call 0x40009ae	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40009ae	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40009b0	            0x750d	                           jne 0x40009bf	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40009b2	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40009b7	          0x4889df	                            mov rdi, rbx	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40009ba	      0xe800000000	                          call 0x40009bf	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40009bf	              0x5b	                                 pop rbx	       811	move.c	FUNCTION_25
0x40009c0	              0xc3	                                     ret	       811	move.c	FUNCTION_25
changed_cline_bef_curs	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	3
0x40008ea	    0x488b05000000	            mov rax, qword [0x040008f1] 	       554	move.c	FUNCTION_12
0x40008f1	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff70	       554	move.c	FUNCTION_12
0x40008fb	              0xc3	                                     ret	       554	move.c	FUNCTION_12
cursor_correct	IF,15:functions,0:ELSE,4:FOR,0:WHILE,1:SWITCH,0:CALL,7:DO,0	157
0x40027f9	            0x4156	                                push r14	      2119	move.c	FUNCTION_47
0x40027fb	            0x4155	                                push r13	      2119	move.c	FUNCTION_47
0x40027fd	            0x4154	                                push r12	      2119	move.c	FUNCTION_47
0x40027ff	              0x55	                                push rbp	      2119	move.c	FUNCTION_47
0x4002800	              0x53	                                push rbx	      2119	move.c	FUNCTION_47
0x4002801	        0x4883ec20	                           sub rsp, 0x20	      2119	move.c	FUNCTION_47
0x4002805	    0x64488b042528	                mov rax, qword fs:[0x28]	      2119	move.c	FUNCTION_47
0x400280e	      0x4889442418	             mov qword [rsp + 0x18], rax	      2119	move.c	FUNCTION_47
0x4002813	            0x31c0	                            xor eax, eax	      2119	move.c	FUNCTION_47
0x4002815	    0x8b0500000000	            mov eax, dword [0x0400281b] 	      2135	move.c	FUNCTION_47	IF_1
0x400281b	        0x448d60ff	                     lea r12d, [rax - 1]	      2132	move.c	FUNCTION_47
0x400281f	            0x85c0	                           test eax, eax	      2132	move.c	FUNCTION_47
0x4002821	    0x440f4e250000	         cmovle r12d, dword [0x04002829]	      2132	move.c	FUNCTION_47
0x4002829	    0x488b05000000	            mov rax, qword [0x04002830] 	      2141	move.c	FUNCTION_47	IF_2
0x4002830	          0x4589e5	                          mov r13d, r12d	      2141	move.c	FUNCTION_47	IF_2
0x4002833	      0x4883787801	               cmp qword [rax + 0x78], 1	      2141	move.c	FUNCTION_47	IF_2
0x4002838	            0x7520	                           jne 0x400285a	      2141	move.c	FUNCTION_47	IF_2
0x400283a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2144	move.c	FUNCTION_47	IF_2
0x4002840	          0x4189c5	                           mov r13d, eax	      2144	move.c	FUNCTION_47	IF_2
0x4002843	        0x41c1ed1f	                          shr r13d, 0x1f	      2144	move.c	FUNCTION_47	IF_2
0x4002847	          0x4101c5	                           add r13d, eax	      2144	move.c	FUNCTION_47	IF_2
0x400284a	          0x41d1fd	                             sar r13d, 1	      2144	move.c	FUNCTION_47	IF_2
0x400284d	          0x4539ec	                          cmp r12d, r13d	      2144	move.c	FUNCTION_47	IF_2
0x4002850	        0x450f4eec	                       cmovle r13d, r12d	      2144	move.c	FUNCTION_47	IF_2
0x4002854	    0x41bc00000000	                             mov r12d, 0	      2143	move.c	FUNCTION_47	IF_2
0x400285a	      0xe800000000	                          call 0x400285f	      2148	move.c	FUNCTION_47	CALL_1
0x400285f	    0x488b3d000000	            mov rdi, qword [0x04002866] 	      2149	move.c	FUNCTION_47	IF_4
0x4002866	    0x488b97e80000	            mov rdx, qword [rdi + 0xe8] 	      2149	move.c	FUNCTION_47	IF_4
0x400286d	    0x488b05000000	            mov rax, qword [0x04002874] 	      2149	move.c	FUNCTION_47	IF_4
0x4002874	          0x488b00	                    mov rax, qword [rax]	      2149	move.c	FUNCTION_47	IF_4
0x4002877	        0x4883c001	                              add rax, 1	      2149	move.c	FUNCTION_47	IF_4
0x400287b	          0x4839c2	                            cmp rdx, rax	      2149	move.c	FUNCTION_47	IF_4
0x400287e	            0x7528	                           jne 0x40028a8	      2149	move.c	FUNCTION_47	IF_4
0x4002880	    0x833d00000000	               cmp dword [0x04002887], 0	      2151	move.c	FUNCTION_47	IF_4
0x4002887	            0x751f	                           jne 0x40028a8	      2151	move.c	FUNCTION_47	IF_4
0x4002889	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	      2156	move.c	FUNCTION_47	IF_4
0x400288f	          0x83e801	                              sub eax, 1	      2156	move.c	FUNCTION_47	IF_4
0x4002892	            0x89c1	                            mov ecx, eax	      2156	move.c	FUNCTION_47	IF_4
0x4002894	          0xc1e91f	                           shr ecx, 0x1f	      2156	move.c	FUNCTION_47	IF_4
0x4002897	             0x1c8	                            add eax, ecx	      2156	move.c	FUNCTION_47	IF_4
0x4002899	            0xd1f8	                              sar eax, 1	      2156	move.c	FUNCTION_47	IF_4
0x400289b	          0x4139c4	                           cmp r12d, eax	      2156	move.c	FUNCTION_47	IF_4
0x400289e	        0x440f4fe0	                         cmovg r12d, eax	      2156	move.c	FUNCTION_47	IF_4
0x40028a2	    0x41bd00000000	                             mov r13d, 0	      2155	move.c	FUNCTION_47	IF_4
0x40028a8	        0x4c8b7738	            mov r14, qword [rdi + 0x38] 	      2165	move.c	FUNCTION_47
0x40028ac	          0x4963c4	                        movsxd rax, r12d	      2166	move.c	FUNCTION_47	IF_6
0x40028af	        0x48034778	             add rax, qword [rdi + 0x78]	      2166	move.c	FUNCTION_47	IF_6
0x40028b3	          0x4939c6	                            cmp r14, rax	      2166	move.c	FUNCTION_47	IF_6
0x40028b6	            0x7c18	                            jl 0x40028d0	      2166	move.c	FUNCTION_47	IF_6
0x40028b8	          0x4963c5	                        movsxd rax, r13d	      2167	move.c	FUNCTION_47	IF_6
0x40028bb	          0x4829c2	                            sub rdx, rax	      2167	move.c	FUNCTION_47	IF_6
0x40028be	          0x4939d6	                            cmp r14, rdx	      2167	move.c	FUNCTION_47	IF_6
0x40028c1	            0x7d0d	                           jge 0x40028d0	      2167	move.c	FUNCTION_47	IF_6
0x40028c3	      0xe800000000	                          call 0x40028c8	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x40028c8	            0x85c0	                           test eax, eax	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x40028ca	     0xf846a010000	                            je 0x4002a3a	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x40028d0	    0x488b05000000	            mov rax, qword [0x040028d7] 	      2180	move.c	FUNCTION_47
0x40028d7	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2180	move.c	FUNCTION_47
0x40028db	      0x4889542408	                mov qword [rsp + 8], rdx	      2180	move.c	FUNCTION_47
0x40028e0	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	      2181	move.c	FUNCTION_47
0x40028e7	        0x488d51ff	                      lea rdx, [rcx - 1]	      2181	move.c	FUNCTION_47
0x40028eb	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2181	move.c	FUNCTION_47
0x40028f0	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2184	move.c	FUNCTION_47
0x40028f6	    0x8ba8f4000000	            mov ebp, dword [rax + 0xf4] 	      2185	move.c	FUNCTION_47
0x40028fc	      0xe993000000	                           jmp 0x4002994	      2187	move.c	FUNCTION_47	WHILE_1
0x4002901	          0x4439ed	                           cmp ebp, r13d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4002904	            0x7d33	                           jge 0x4002939	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4002906	            0x39eb	                            cmp ebx, ebp	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4002908	            0x7d05	                           jge 0x400290f	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400290a	          0x4439e3	                           cmp ebx, r12d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400290d	            0x7c2a	                            jl 0x4002939	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400290f	      0xba00000000	                              mov edx, 0	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4002914	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4002919	      0xe800000000	                          call 0x400291e	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400291e	            0x85c0	                           test eax, eax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4002920	            0x7405	                            je 0x4002927	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4002922	          0x83c501	                              add ebp, 1	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x4002925	            0xeb0c	                           jmp 0x4002933	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x4002927	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x400292c	      0xe800000000	                          call 0x4002931	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x4002931	             0x1c5	                            add ebp, eax	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x4002933	    0x48836c241001	               sub qword [rsp + 0x10], 1	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4002939	          0x4439e3	                           cmp ebx, r12d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400293c	            0x7d56	                           jge 0x4002994	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400293e	            0x39eb	                            cmp ebx, ebp	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4002940	            0x7c05	                            jl 0x4002947	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4002942	          0x4439ed	                           cmp ebp, r13d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4002945	            0x7c4d	                            jl 0x4002994	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4002947	      0x488d542408	                      lea rdx, [rsp + 8]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400294c	      0xbe00000000	                              mov esi, 0	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4002951	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4002956	      0xe800000000	                          call 0x400295b	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400295b	            0x85c0	                           test eax, eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400295d	            0x7405	                            je 0x4002964	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400295f	          0x83c301	                              add ebx, 1	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4002962	            0xeb0c	                           jmp 0x4002970	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4002964	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4002969	      0xe800000000	                          call 0x400296e	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x400296e	             0x1c3	                            add ebx, eax	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4002970	      0x488b742408	                mov rsi, qword [rsp + 8]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4002975	      0x483b742410	            cmp rsi, qword [rsp + 0x10] 	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400297a	            0x7d12	                           jge 0x400298e	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400297c	        0x4883c601	                              add rsi, 1	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4002980	    0x488b3d000000	            mov rdi, qword [0x04002987] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4002987	      0xe800000000	                          call 0x400298c	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x400298c	             0x1c3	                            add ebx, eax	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x400298e	    0x488344240801	                  add qword [rsp + 8], 1	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x4002994	          0x4439e3	                           cmp ebx, r12d	      2187	move.c	FUNCTION_47	WHILE_1
0x4002997	            0x7c05	                            jl 0x400299e	      2187	move.c	FUNCTION_47	WHILE_1
0x4002999	          0x4439ed	                           cmp ebp, r13d	      2187	move.c	FUNCTION_47	WHILE_1
0x400299c	            0x7d10	                           jge 0x40029ae	      2187	move.c	FUNCTION_47	WHILE_1
0x400299e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2187	move.c	FUNCTION_47	WHILE_1
0x40029a3	      0x48397c2408	                cmp qword [rsp + 8], rdi	      2187	move.c	FUNCTION_47	WHILE_1
0x40029a8	     0xf8c53ffffff	                            jl 0x4002901	      2187	move.c	FUNCTION_47	WHILE_1
0x40029ae	      0x488b542408	                mov rdx, qword [rsp + 8]	      2215	move.c	FUNCTION_47	IF_12
0x40029b3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2215	move.c	FUNCTION_47	IF_12
0x40029b8	          0x4885c0	                           test rax, rax	      2215	move.c	FUNCTION_47	IF_12
0x40029bb	            0x7405	                            je 0x40029c2	      2215	move.c	FUNCTION_47	IF_12
0x40029bd	          0x4839c2	                            cmp rdx, rax	      2215	move.c	FUNCTION_47	IF_12
0x40029c0	            0x750d	                           jne 0x40029cf	      2215	move.c	FUNCTION_47	IF_12
0x40029c2	    0x488b05000000	            mov rax, qword [0x040029c9] 	      2216	move.c	FUNCTION_47	IF_12
0x40029c9	        0x48895038	             mov qword [rax + 0x38], rdx	      2216	move.c	FUNCTION_47	IF_12
0x40029cd	            0xeb5a	                           jmp 0x4002a29	      2216	move.c	FUNCTION_47	IF_12
0x40029cf	          0x4839c2	                            cmp rdx, rax	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x40029d2	            0x7e0d	                           jle 0x40029e1	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x40029d4	    0x488b15000000	            mov rdx, qword [0x040029db] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x40029db	        0x48894238	             mov qword [rdx + 0x38], rax	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x40029df	            0xeb48	                           jmp 0x4002a29	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x40029e1	          0x4939d6	                            cmp r14, rdx	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029e4	            0x7d19	                           jge 0x40029ff	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029e6	    0x488b0d000000	            mov rcx, qword [0x040029ed] 	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029ed	      0x4883797801	               cmp qword [rcx + 0x78], 1	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029f2	            0x7e0b	                           jle 0x40029ff	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029f4	        0x48895138	             mov qword [rcx + 0x38], rdx	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029f8	    0x83a1b4000000	      and dword [rcx + 0xb4], 0xffffffe4	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40029ff	          0x4939c6	                            cmp r14, rax	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a02	            0x7e25	                           jle 0x4002a29	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a04	    0x488b15000000	            mov rdx, qword [0x04002a0b] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a0b	    0x488b0d000000	            mov rcx, qword [0x04002a12] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a12	          0x488b09	                    mov rcx, qword [rcx]	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a15	    0x48398ae80000	            cmp qword [rdx + 0xe8], rcx 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a1c	            0x7f0b	                            jg 0x4002a29	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a1e	        0x48894238	             mov qword [rdx + 0x38], rax	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a22	    0x83a2b4000000	      and dword [rdx + 0xb4], 0xffffffe4	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x4002a29	    0x488b05000000	            mov rax, qword [0x04002a30] 	      2234	move.c	FUNCTION_47
0x4002a30	    0x8188b4000000	             or dword [rax + 0xb4], 0x80	      2234	move.c	FUNCTION_47
0x4002a3a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2235	move.c	FUNCTION_47
0x4002a3f	    0x644833042528	                xor rax, qword fs:[0x28]	      2235	move.c	FUNCTION_47
0x4002a48	            0x7405	                            je 0x4002a4f	      2235	move.c	FUNCTION_47
0x4002a4a	      0xe800000000	                          call 0x4002a4f	      2235	move.c	FUNCTION_47
0x4002a4f	        0x4883c420	                           add rsp, 0x20	      2235	move.c	FUNCTION_47
0x4002a53	              0x5b	                                 pop rbx	      2235	move.c	FUNCTION_47
0x4002a54	              0x5d	                                 pop rbp	      2235	move.c	FUNCTION_47
0x4002a55	            0x415c	                                 pop r12	      2235	move.c	FUNCTION_47
0x4002a57	            0x415d	                                 pop r13	      2235	move.c	FUNCTION_47
0x4002a59	            0x415e	                                 pop r14	      2235	move.c	FUNCTION_47
0x4002a5b	              0xc3	                                     ret	      2235	move.c	FUNCTION_47
scrolldown_clamp	IF,5:functions,0:ELSE,2:FOR,0:WHILE,0:SWITCH,0:CALL,8:DO,0	65
0x4002604	            0x4154	                                push r12	      1416	move.c	FUNCTION_37
0x4002606	              0x55	                                push rbp	      1416	move.c	FUNCTION_37
0x4002607	              0x53	                                push rbx	      1416	move.c	FUNCTION_37
0x4002608	    0x488b3d000000	            mov rdi, qword [0x0400260f] 	      1419	move.c	FUNCTION_37
0x400260f	    0x8baf84000000	            mov ebp, dword [rdi + 0x84] 	      1419	move.c	FUNCTION_37
0x4002615	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      1420	move.c	FUNCTION_37	CALL_1
0x4002619	      0xe800000000	                          call 0x400261e	      1420	move.c	FUNCTION_37	CALL_1
0x400261e	          0x4189c4	                           mov r12d, eax	      1420	move.c	FUNCTION_37	CALL_1
0x4002621	    0x488b05000000	            mov rax, qword [0x04002628] 	      1425	move.c	FUNCTION_37	IF_1
0x4002628	      0x4883787801	               cmp qword [rax + 0x78], 1	      1425	move.c	FUNCTION_37	IF_1
0x400262d	            0x7f09	                            jg 0x4002638	      1425	move.c	FUNCTION_37	IF_1
0x400262f	          0x4439e5	                           cmp ebp, r12d	      1425	move.c	FUNCTION_37	IF_1
0x4002632	     0xf8de2000000	                           jge 0x400271a	      1425	move.c	FUNCTION_37	IF_1
0x4002638	      0xe800000000	                          call 0x400263d	      1430	move.c	FUNCTION_37	CALL_2
0x400263d	    0x488b05000000	            mov rax, qword [0x04002644] 	      1437	move.c	FUNCTION_37
0x4002644	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1437	move.c	FUNCTION_37
0x400264a	          0x4439e5	                           cmp ebp, r12d	      1439	move.c	FUNCTION_37	IF_2
0x400264d	            0x7d05	                           jge 0x4002654	      1439	move.c	FUNCTION_37	IF_2
0x400264f	          0x83c301	                              add ebx, 1	      1440	move.c	FUNCTION_37	IF_2
0x4002652	            0xeb0f	                           jmp 0x4002663	      1440	move.c	FUNCTION_37	IF_2
0x4002654	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1442	move.c	FUNCTION_37	CALL_3
0x4002658	        0x4883ef01	                              sub rdi, 1	      1442	move.c	FUNCTION_37	CALL_3
0x400265c	      0xe800000000	                          call 0x4002661	      1442	move.c	FUNCTION_37	CALL_3
0x4002661	             0x1c3	                            add ebx, eax	      1442	move.c	FUNCTION_37	CALL_3
0x4002663	    0x488b05000000	            mov rax, qword [0x0400266a] 	      1446	move.c	FUNCTION_37	IF_3
0x400266a	    0x83b894020000	              cmp dword [rax + 0x294], 0	      1446	move.c	FUNCTION_37	IF_3
0x4002671	            0x7434	                            je 0x40026a7	      1446	move.c	FUNCTION_37	IF_3
0x4002673	    0x83b8ac000000	               cmp dword [rax + 0xac], 0	      1446	move.c	FUNCTION_37	IF_3
0x400267a	            0x742b	                            je 0x40026a7	      1446	move.c	FUNCTION_37	IF_3
0x400267c	      0xe847e1ffff	               call sym.validate_cheight	      1448	move.c	FUNCTION_37	IF_3	CALL_5
0x4002681	      0xe800000000	                          call 0x4002686	      1449	move.c	FUNCTION_37	IF_3	CALL_6
0x4002686	    0x488b35000000	            mov rsi, qword [0x0400268d] 	      1450	move.c	FUNCTION_37	IF_3
0x400268d	    0x8b86cc000000	            mov eax, dword [rsi + 0xcc] 	      1450	move.c	FUNCTION_37	IF_3
0x4002693	          0x8d48ff	                      lea ecx, [rax - 1]	      1450	move.c	FUNCTION_37	IF_3
0x4002696	    0x8b86d8000000	            mov eax, dword [rsi + 0xd8] 	      1450	move.c	FUNCTION_37	IF_3
0x400269c	              0x99	                                     cdq	      1450	move.c	FUNCTION_37	IF_3
0x400269d	    0xf7beac000000	                 idiv dword [rsi + 0xac]	      1450	move.c	FUNCTION_37	IF_3
0x40026a3	            0x29c1	                            sub ecx, eax	      1450	move.c	FUNCTION_37	IF_3
0x40026a5	             0x1cb	                            add ebx, ecx	      1450	move.c	FUNCTION_37	IF_3
0x40026a7	    0x488b3d000000	            mov rdi, qword [0x040026ae] 	      1453	move.c	FUNCTION_37	IF_4
0x40026ae	          0x4863db	                         movsxd rbx, ebx	      1453	move.c	FUNCTION_37	IF_4
0x40026b1	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      1453	move.c	FUNCTION_37	IF_4
0x40026b8	    0x482b05000000	             sub rax, qword [0x040026bf]	      1453	move.c	FUNCTION_37	IF_4
0x40026bf	          0x4839c3	                            cmp rbx, rax	      1453	move.c	FUNCTION_37	IF_4
0x40026c2	            0x7d56	                           jge 0x400271a	      1453	move.c	FUNCTION_37	IF_4
0x40026c4	          0x4439e5	                           cmp ebp, r12d	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x40026c7	            0x7d13	                           jge 0x40026dc	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x40026c9	    0x838784000000	               add dword [rdi + 0x84], 1	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x40026d0	      0xbe01000000	                              mov esi, 1	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x40026d5	      0xe800000000	                          call 0x40026da	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x40026da	            0xeb0f	                           jmp 0x40026eb	      1459	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x40026dc	      0x48836f7801	               sub qword [rdi + 0x78], 1	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x40026e1	    0xc78784000000	               mov dword [rdi + 0x84], 0	      1464	move.c	FUNCTION_37	IF_4	ELSE_2
0x40026eb	    0x488b05000000	            mov rax, qword [0x040026f2] 	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x40026f2	        0x488d7078	                   lea rsi, [rax + 0x78]	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x40026f6	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x40026fa	      0xba00000000	                              mov edx, 0	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x40026ff	      0xe800000000	                          call 0x4002704	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002704	    0x488b05000000	            mov rax, qword [0x0400270b] 	      1472	move.c	FUNCTION_37	IF_4
0x400270b	    0x4883a8e80000	               sub qword [rax + 0xe8], 1	      1472	move.c	FUNCTION_37	IF_4
0x4002713	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      1473	move.c	FUNCTION_37	IF_4
0x400271a	              0x5b	                                 pop rbx	      1475	move.c	FUNCTION_37
0x400271b	              0x5d	                                 pop rbp	      1475	move.c	FUNCTION_37
0x400271c	            0x415c	                                 pop r12	      1475	move.c	FUNCTION_37
0x400271e	              0xc3	                                     ret	      1475	move.c	FUNCTION_37
update_curswant	IF,1:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	11
0x40009d6	    0x488b05000000	            mov rax, qword [0x040009dd] 	       467	move.c	FUNCTION_7	IF_1
0x40009dd	        0x83784c00	               cmp dword [rax + 0x4c], 0	       467	move.c	FUNCTION_7	IF_1
0x40009e1	            0x7424	                            je 0x4000a07	       467	move.c	FUNCTION_7	IF_1
0x40009e3	        0x4883ec08	                              sub rsp, 8	       466	move.c	FUNCTION_7
0x40009e7	      0xe800000000	                          call 0x40009ec	       469	move.c	FUNCTION_7	IF_1	CALL_1
0x40009ec	    0x488b05000000	            mov rax, qword [0x040009f3] 	       470	move.c	FUNCTION_7	IF_1
0x40009f3	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	       470	move.c	FUNCTION_7	IF_1
0x40009f9	          0x895048	             mov dword [rax + 0x48], edx	       470	move.c	FUNCTION_7	IF_1
0x40009fc	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       471	move.c	FUNCTION_7	IF_1
0x4000a03	        0x4883c408	                              add rsp, 8	       473	move.c	FUNCTION_7
0x4000a07	            0xf3c3	                                     ret	       473	move.c	FUNCTION_7
onepage	IF,21:functions,0:ELSE,9:FOR,1:WHILE,1:SWITCH,0:CALL,30:DO,0	288
0x4002a5c	            0x4155	                                push r13	      2246	move.c	FUNCTION_48
0x4002a5e	            0x4154	                                push r12	      2246	move.c	FUNCTION_48
0x4002a60	              0x55	                                push rbp	      2246	move.c	FUNCTION_48
0x4002a61	              0x53	                                push rbx	      2246	move.c	FUNCTION_48
0x4002a62	        0x4883ec28	                           sub rsp, 0x28	      2246	move.c	FUNCTION_48
0x4002a66	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	move.c	FUNCTION_48
0x4002a6f	      0x4889442418	             mov qword [rsp + 0x18], rax	      2246	move.c	FUNCTION_48
0x4002a74	            0x31c0	                            xor eax, eax	      2246	move.c	FUNCTION_48
0x4002a76	    0x488b05000000	            mov rax, qword [0x04002a7d] 	      2250	move.c	FUNCTION_48
0x4002a7d	        0x4c8b6878	            mov r13, qword [rax + 0x78] 	      2250	move.c	FUNCTION_48
0x4002a81	    0x488b05000000	            mov rax, qword [0x04002a88] 	      2252	move.c	FUNCTION_48	IF_1
0x4002a88	        0x48833801	                      cmp qword [rax], 1	      2252	move.c	FUNCTION_48	IF_1
0x4002a8c	            0x7410	                            je 0x4002a9e	      2252	move.c	FUNCTION_48	IF_1
0x4002a8e	          0x4189fc	                           mov r12d, edi	      2252	move.c	FUNCTION_48	IF_1
0x4002a91	          0x4889f5	                            mov rbp, rsi	      2252	move.c	FUNCTION_48	IF_1
0x4002a94	          0x4885f6	                           test rsi, rsi	      2258	move.c	FUNCTION_48	FOR_1
0x4002a97	            0x7f14	                            jg 0x4002aad	      2258	move.c	FUNCTION_48	FOR_1
0x4002a99	      0xe960040000	                           jmp 0x4002efe	      2258	move.c	FUNCTION_48	FOR_1
0x4002a9e	      0xe800000000	                          call 0x4002aa3	      2254	move.c	FUNCTION_48	IF_1	CALL_1
0x4002aa3	      0xb800000000	                              mov eax, 0	      2255	move.c	FUNCTION_48	IF_1
0x4002aa8	      0xe919040000	                           jmp 0x4002ec6	      2255	move.c	FUNCTION_48	IF_1
0x4002aad	      0xe800000000	                          call 0x4002ab2	      2260	move.c	FUNCTION_48	FOR_1	CALL_2
0x4002ab2	        0x4183fc01	                             cmp r12d, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ab6	            0x7536	                           jne 0x4002aee	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ab8	    0x488b3d000000	            mov rdi, qword [0x04002abf] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4002abf	        0x488b4f78	            mov rcx, qword [rdi + 0x78] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ac3	    0x488b05000000	            mov rax, qword [0x04002aca] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4002aca	          0x488b10	                    mov rdx, qword [rax]	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4002acd	          0x4889d6	                            mov rsi, rdx	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ad0	    0x482b35000000	             sub rsi, qword [0x04002ad7]	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ad7	          0x4839f1	                            cmp rcx, rsi	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ada	     0xf8c55040000	                            jl 0x4002f35	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ae0	    0x483b97e80000	            cmp rdx, qword [rdi + 0xe8] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ae7	            0x7c2f	                            jl 0x4002b18	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002ae9	      0xe947040000	                           jmp 0x4002f35	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4002aee	    0x488b3d000000	            mov rdi, qword [0x04002af5] 	      2270	move.c	FUNCTION_48	FOR_1	IF_2
0x4002af5	      0x48837f7801	               cmp qword [rdi + 0x78], 1	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4002afa	     0xf85dc030000	                           jne 0x4002edc	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b00	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b06	      0xbe01000000	                              mov esi, 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4002b0b	      0xe800000000	                          call 0x4002b10	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4002b10	            0x39c3	                            cmp ebx, eax	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b12	     0xf85c4030000	                           jne 0x4002edc	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b18	      0xe800000000	                          call 0x4002b1d	      2277	move.c	FUNCTION_48	FOR_1	IF_2	CALL_4
0x4002b1d	      0xe800000000	                          call 0x4002b22	      2452	move.c	FUNCTION_48	CALL_23
0x4002b22	      0xe800000000	                          call 0x4002b27	      2454	move.c	FUNCTION_48	CALL_24
0x4002b27	      0xe800000000	                          call 0x4002b2c	      2455	move.c	FUNCTION_48	CALL_25
0x4002b2c	    0x488b05000000	            mov rax, qword [0x04002b33] 	      2458	move.c	FUNCTION_48
0x4002b33	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x4002b3a	      0xbb00000000	                              mov ebx, 0	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b3f	      0xe976030000	                           jmp 0x4002eba	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4002b44	    0x488b15000000	            mov rdx, qword [0x04002b4b] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b4b	          0x4885d2	                           test rdx, rdx	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b4e	            0x7e43	                           jle 0x4002b93	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b50	    0x488b35000000	            mov rsi, qword [0x04002b57] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b57	        0x4883ee01	                              sub rsi, 1	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b5b	          0x4839f2	                            cmp rdx, rsi	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b5e	            0x7d33	                           jge 0x4002b93	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b60	        0x4883fa02	                              cmp rdx, 2	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4002b64	            0x7f0a	                            jg 0x4002b70	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4002b66	        0x4883c101	                              add rcx, 1	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4002b6a	        0x48894f78	             mov qword [rdi + 0x78], rcx	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4002b6e	            0xeb09	                           jmp 0x4002b79	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4002b70	      0x488d5411fe	                lea rdx, [rcx + rdx - 2]	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4002b75	        0x48895778	             mov qword [rdi + 0x78], rdx	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4002b79	          0x488b00	                    mov rax, qword [rax]	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4002b7c	        0x48394778	            cmp qword [rdi + 0x78], rax 	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4002b80	            0x7e04	                           jle 0x4002b86	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4002b82	        0x48894778	             mov qword [rdi + 0x78], rax	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4002b86	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b8a	        0x48894738	             mov qword [rdi + 0x38], rax	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b8e	      0xe9cc020000	                           jmp 0x4002e5f	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002b93	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002b9a	          0x488b00	                    mov rax, qword [rax]	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002b9d	          0x4839c6	                            cmp rsi, rax	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002ba0	            0x7e1a	                           jle 0x4002bbc	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002ba2	        0x48894778	             mov qword [rdi + 0x78], rax	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002ba6	    0xc78784000000	               mov dword [rdi + 0x84], 0	      2303	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002bb0	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffee	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002bb7	      0xe9a3020000	                           jmp 0x4002e5f	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4002bbc	        0x48893424	                    mov qword [rsp], rsi	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bc0	      0xe800000000	                          call 0x4002bc5	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4002bc5	    0x488b15000000	            mov rdx, qword [0x04002bcc] 	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bcc	    0x2b82f4000000	             sub eax, dword [rdx + 0xf4]	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4002bd2	        0x89442408	                mov dword [rsp + 8], eax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4002bd6	      0xbeffffffff	                     mov esi, 0xffffffff	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4002bdb	          0x4889e7	                            mov rdi, rsp	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4002bde	      0xe888d6ffff	             call sym.get_scroll_overlap	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4002be3	    0x488b3d000000	            mov rdi, qword [0x04002bea] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bea	        0x488b0424	                    mov rax, qword [rsp]	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bee	        0x48894778	             mov qword [rdi + 0x78], rax	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bf2	        0x8b442408	                mov eax, dword [rsp + 8]	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bf6	    0x898784000000	             mov dword [rdi + 0x84], eax	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002bfc	      0xbe00000000	                              mov esi, 0	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x4002c01	      0xe800000000	                          call 0x4002c06	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x4002c06	    0x488b05000000	            mov rax, qword [0x04002c0d] 	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002c0d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002c11	        0x48895038	             mov qword [rax + 0x38], rdx	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002c15	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff84	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002c1c	      0xe93e020000	                           jmp 0x4002e5f	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4002c21	      0xe89dd7ffff	                    call sym.max_topfill	      2333	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8	CALL_8
0x4002c26	      0xe934020000	                           jmp 0x4002e5f	      2334	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002c2b	    0x488b05000000	            mov rax, qword [0x04002c32] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c32	    0x483905000000	            cmp qword [0x04002c39], rax 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c39	            0x756e	                           jne 0x4002ca9	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c3b	    0x488b05000000	            mov rax, qword [0x04002c42] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c42	          0x4885c0	                           test rax, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c45	            0x7e62	                           jle 0x4002ca9	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c47	    0x488b0d000000	            mov rcx, qword [0x04002c4e] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c4e	        0x488d51ff	                      lea rdx, [rcx - 1]	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c52	          0x4839d0	                            cmp rax, rdx	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c55	            0x7d52	                           jge 0x4002ca9	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c57	        0x4883f802	                              cmp rax, 2	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4002c5b	            0x7f0a	                            jg 0x4002c67	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4002c5d	        0x4883ee01	                              sub rsi, 1	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4002c61	        0x48897778	             mov qword [rdi + 0x78], rsi	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4002c65	            0xeb0b	                           jmp 0x4002c72	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4002c67	        0x488d50fe	                      lea rdx, [rax - 2]	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4002c6b	          0x4829d6	                            sub rsi, rdx	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4002c6e	        0x48897778	             mov qword [rdi + 0x78], rsi	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4002c72	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4002c77	            0x7f08	                            jg 0x4002c81	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4002c79	    0x48c747780100	               mov qword [rdi + 0x78], 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4002c81	        0x48034778	             add rax, qword [rdi + 0x78]	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c85	        0x4883e801	                              sub rax, 1	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c89	        0x48894738	             mov qword [rdi + 0x38], rax	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4002c8d	    0x488b15000000	            mov rdx, qword [0x04002c94] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002c94	          0x488b12	                    mov rdx, qword [rdx]	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002c97	          0x4839d0	                            cmp rax, rdx	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002c9a	     0xf8ebf010000	                           jle 0x4002e5f	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002ca0	        0x48895738	             mov qword [rdi + 0x38], rdx	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002ca4	      0xe9b6010000	                           jmp 0x4002e5f	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4002ca9	        0x488d46ff	                      lea rax, [rsi - 1]	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002cad	        0x48890424	                    mov qword [rsp], rax	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002cb1	      0xe800000000	                          call 0x4002cb6	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4002cb6	    0x488b15000000	            mov rdx, qword [0x04002cbd] 	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002cbd	    0x2b8284000000	             sub eax, dword [rdx + 0x84]	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4002cc3	        0x89442408	                mov dword [rsp + 8], eax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4002cc7	      0xbe01000000	                              mov esi, 1	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4002ccc	          0x4889e7	                            mov rdi, rsp	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4002ccf	      0xe897d5ffff	             call sym.get_scroll_overlap	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4002cd4	    0x488b05000000	            mov rax, qword [0x04002cdb] 	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002cdb	          0x488b00	                    mov rax, qword [rax]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002cde	        0x48390424	                    cmp qword [rsp], rax	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002ce2	            0x7c0e	                            jl 0x4002cf2	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002ce4	        0x48890424	                    mov qword [rsp], rax	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002ce8	    0xc74424080000	                  mov dword [rsp + 8], 0	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002cf0	            0xeb08	                           jmp 0x4002cfa	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4002cf2	          0x4889e7	                            mov rdi, rsp	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x4002cf5	      0xe887d3ffff	                call sym.botline_topline	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x4002cfa	        0x488b1424	                    mov rdx, qword [rsp]	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002cfe	    0x488b05000000	            mov rax, qword [0x04002d05] 	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002d05	        0x48895038	             mov qword [rax + 0x38], rdx	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002d09	      0xbb00000000	                              mov ebx, 0	      2377	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4002d0e	            0xeb1f	                           jmp 0x4002d2f	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d10	          0x4889e7	                            mov rdi, rsp	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x4002d13	      0xe895d3ffff	                   call sym.topline_back	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x4002d18	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4002d1c	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4002d21	            0x7407	                            je 0x4002d2a	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4002d23	            0x4898	                                    cdqe	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4002d25	          0x4801c3	                            add rbx, rax	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4002d28	            0xeb05	                           jmp 0x4002d2f	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4002d2a	      0xbbffffff7f	                     mov ebx, 0x7fffffff	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4002d2f	    0x488b3d000000	            mov rdi, qword [0x04002d36] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d36	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d3d	          0x4839c3	                            cmp rbx, rax	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d40	            0x7f09	                            jg 0x4002d4b	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d42	      0x48833c2400	                      cmp qword [rsp], 0	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d47	            0x7fc7	                            jg 0x4002d10	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d49	            0xeb09	                           jmp 0x4002d54	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4002d4b	        0x488b3424	                    mov rsi, qword [rsp]	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d4f	          0x4885f6	                           test rsi, rsi	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d52	            0x7f20	                            jg 0x4002d74	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d54	    0x48c747780100	               mov qword [rdi + 0x78], 1	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d5c	      0xe862d6ffff	                    call sym.max_topfill	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15	CALL_13
0x4002d61	    0x488b05000000	            mov rax, qword [0x04002d68] 	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d68	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d6f	      0xe9eb000000	                           jmp 0x4002e5f	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4002d74	      0x837c240800	                  cmp dword [rsp + 8], 0	      1628	move.c	FUNCTION_42	IF_1
0x4002d79	            0x7e15	                           jle 0x4002d90	      1628	move.c	FUNCTION_42	IF_1
0x4002d7b	      0xe800000000	                          call 0x4002d80	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4002d80	        0x2b442408	                sub eax, dword [rsp + 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4002d84	          0x83c001	                              add eax, 1	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4002d87	        0x89442408	                mov dword [rsp + 8], eax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4002d8b	      0x48832c2401	                      sub qword [rsp], 1	      1631	move.c	FUNCTION_42	IF_1
0x4002d90	          0x4889e7	                            mov rdi, rsp	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x4002d93	      0xe851d4ffff	                   call sym.botline_forw	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x4002d98	          0x4889e7	                            mov rdi, rsp	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4002d9b	      0xe849d4ffff	                   call sym.botline_forw	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4002da0	          0x4889e7	                            mov rdi, rsp	      2403	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4002da3	      0xe8d9d2ffff	                call sym.botline_topline	      2403	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4002da8	      0xba00000000	                              mov edx, 0	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4002dad	          0x4889e6	                            mov rsi, rsp	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4002db0	        0x488b3c24	                    mov rdi, qword [rsp]	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4002db4	      0xe800000000	                          call 0x4002db9	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4002db9	        0x488b0424	                    mov rax, qword [rsp]	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dbd	    0x488b3d000000	            mov rdi, qword [0x04002dc4] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dc4	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dc8	          0x4839f0	                            cmp rax, rsi	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dcb	            0x7c6c	                            jl 0x4002e39	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dcd	            0x7f0c	                            jg 0x4002ddb	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dcf	    0x8b8f84000000	            mov ecx, dword [rdi + 0x84] 	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dd5	        0x394c2408	                cmp dword [rsp + 8], ecx	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002dd9	            0x7c5e	                            jl 0x4002e39	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002ddb	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002de1	        0x895c2408	                mov dword [rsp + 8], ebx	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002de5	      0xe800000000	                          call 0x4002dea	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4002dea	            0x39c3	                            cmp ebx, eax	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4002dec	            0x7d05	                           jge 0x4002df3	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4002dee	      0xe8d0d5ffff	                    call sym.max_topfill	      2425	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_20
0x4002df3	    0x488b3d000000	            mov rdi, qword [0x04002dfa] 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002dfa	        0x8b442408	                mov eax, dword [rsp + 8]	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002dfe	    0x398784000000	            cmp dword [rdi + 0x84], eax 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002e04	            0x750f	                           jne 0x4002e15	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002e06	      0x48836f7801	               sub qword [rdi + 0x78], 1	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002e0b	    0xc78784000000	               mov dword [rdi + 0x84], 0	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4002e15	      0xe8c9dfffff	                   call sym.comp_botline	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4002e1a	    0x488b05000000	            mov rax, qword [0x04002e21] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e21	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e28	        0x488d51ff	                      lea rdx, [rcx - 1]	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e2c	        0x48895038	             mov qword [rax + 0x38], rdx	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e30	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe4	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e37	            0xeb26	                           jmp 0x4002e5f	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4002e39	        0x48894778	             mov qword [rdi + 0x78], rax	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4002e3d	        0x8b442408	                mov eax, dword [rsp + 8]	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4002e41	    0x898784000000	             mov dword [rdi + 0x84], eax	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4002e47	      0xbe00000000	                              mov esi, 0	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x4002e4c	      0xe800000000	                          call 0x4002e51	      2444	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x4002e51	    0x488b05000000	            mov rax, qword [0x04002e58] 	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4002e58	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4002e5f	        0x4883ed01	                              sub rbp, 1	      2258	move.c	FUNCTION_48	FOR_1
0x4002e63	     0xf8544fcffff	                           jne 0x4002aad	      2258	move.c	FUNCTION_48	FOR_1
0x4002e69	      0xe990000000	                           jmp 0x4002efe	      2258	move.c	FUNCTION_48	FOR_1
0x4002e6e	      0xe8b1d2ffff	               call sym.check_top_offset	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002e73	      0xbb01000000	                              mov ebx, 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002e78	            0x85c0	                           test eax, eax	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002e7a	            0x743e	                            je 0x4002eba	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002e7c	      0xbe00000000	                              mov esi, 0	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4002e81	      0xbf01000000	                              mov edi, 1	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4002e86	      0xe800000000	                          call 0x4002e8b	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4002e8b	    0x488b05000000	            mov rax, qword [0x04002e92] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4002e92	        0x4c3b6878	            cmp r13, qword [rax + 0x78] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4002e96	            0x7c22	                            jl 0x4002eba	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4002e98	    0x488b15000000	            mov rdx, qword [0x04002e9f] 	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4002e9f	          0x4c3b2a	                    cmp r13, qword [rdx]	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4002ea2	            0x7d16	                           jge 0x4002eba	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4002ea4	        0x498d7d01	                      lea rdi, [r13 + 1]	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x4002ea8	        0x48897878	             mov qword [rax + 0x78], rdi	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x4002eac	        0x488d7078	                   lea rsi, [rax + 0x78]	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4002eb0	      0xba00000000	                              mov edx, 0	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4002eb5	      0xe800000000	                          call 0x4002eba	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4002eba	      0xbf0a000000	                            mov edi, 0xa	      2478	move.c	FUNCTION_48	CALL_30
0x4002ebf	      0xe800000000	                          call 0x4002ec4	      2478	move.c	FUNCTION_48	CALL_30
0x4002ec4	            0x89d8	                            mov eax, ebx	      2479	move.c	FUNCTION_48
0x4002ec6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2480	move.c	FUNCTION_48
0x4002ecb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2480	move.c	FUNCTION_48
0x4002ed4	     0xf8481000000	                            je 0x4002f5b	      2480	move.c	FUNCTION_48
0x4002eda	            0xeb7a	                           jmp 0x4002f56	      2480	move.c	FUNCTION_48
0x4002edc	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x4002ee4	    0x488b3d000000	            mov rdi, qword [0x04002eeb] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002eeb	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002eef	        0x4883fe01	                              cmp rsi, 1	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002ef3	     0xf8532fdffff	                           jne 0x4002c2b	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002ef9	      0xe923fdffff	                           jmp 0x4002c21	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4002efe	      0xe800000000	                          call 0x4002f03	      2452	move.c	FUNCTION_48	CALL_23
0x4002f03	      0xe800000000	                          call 0x4002f08	      2454	move.c	FUNCTION_48	CALL_24
0x4002f08	      0xe800000000	                          call 0x4002f0d	      2455	move.c	FUNCTION_48	CALL_25
0x4002f0d	      0xbf06000000	                              mov edi, 6	      2457	move.c	FUNCTION_48	CALL_26
0x4002f12	      0xe800000000	                          call 0x4002f17	      2457	move.c	FUNCTION_48	CALL_26
0x4002f17	    0x488b05000000	            mov rax, qword [0x04002f1e] 	      2458	move.c	FUNCTION_48
0x4002f1e	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x4002f25	      0xbb01000000	                              mov ebx, 1	      2458	move.c	FUNCTION_48
0x4002f2a	        0x4183fc01	                             cmp r12d, 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002f2e	            0x758a	                           jne 0x4002eba	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002f30	      0xe939ffffff	                           jmp 0x4002e6e	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x4002f35	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x4002f3d	    0x488b15000000	            mov rdx, qword [0x04002f44] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002f44	    0x483915000000	            cmp qword [0x04002f4b], rdx 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002f4b	     0xf8542fcffff	                           jne 0x4002b93	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002f51	      0xe9eefbffff	                           jmp 0x4002b44	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4002f56	      0xe800000000	                          call 0x4002f5b	      2480	move.c	FUNCTION_48
0x4002f5b	        0x4883c428	                           add rsp, 0x28	      2480	move.c	FUNCTION_48
0x4002f5f	              0x5b	                                 pop rbx	      2480	move.c	FUNCTION_48
0x4002f60	              0x5d	                                 pop rbp	      2480	move.c	FUNCTION_48
0x4002f61	            0x415c	                                 pop r12	      2480	move.c	FUNCTION_48
0x4002f63	            0x415d	                                 pop r13	      2480	move.c	FUNCTION_48
0x4002f65	              0xc3	                                     ret	      2480	move.c	FUNCTION_48
check_top_offset	IF,3:functions,0:ELSE,0:FOR,0:WHILE,1:SWITCH,0:CALL,2:DO,0	50
0x4000124	              0x55	                                push rbp	       428	move.c	FUNCTION_6
0x4000125	              0x53	                                push rbx	       428	move.c	FUNCTION_6
0x4000126	        0x4883ec28	                           sub rsp, 0x28	       428	move.c	FUNCTION_6
0x400012a	    0x64488b042528	                mov rax, qword fs:[0x28]	       428	move.c	FUNCTION_6
0x4000133	      0x4889442418	             mov qword [rsp + 0x18], rax	       428	move.c	FUNCTION_6
0x4000138	            0x31c0	                            xor eax, eax	       428	move.c	FUNCTION_6
0x400013a	    0x488b3d000000	            mov rdi, qword [0x04000141] 	       432	move.c	FUNCTION_6	IF_1
0x4000141	    0x488b05000000	            mov rax, qword [0x04000148] 	       432	move.c	FUNCTION_6	IF_1
0x4000148	        0x48034778	             add rax, qword [rdi + 0x78]	       432	move.c	FUNCTION_6	IF_1
0x400014c	        0x48394738	            cmp qword [rdi + 0x38], rax 	       432	move.c	FUNCTION_6	IF_1
0x4000150	            0x7c09	                            jl 0x400015b	       432	move.c	FUNCTION_6	IF_1
0x4000152	      0xe800000000	                          call 0x4000157	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000157	            0x85c0	                           test eax, eax	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000159	            0x7472	                            je 0x40001cd	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x400015b	    0x488b05000000	            mov rax, qword [0x04000162] 	       438	move.c	FUNCTION_6	IF_1
0x4000162	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       438	move.c	FUNCTION_6	IF_1
0x4000166	        0x48891424	                    mov qword [rsp], rdx	       438	move.c	FUNCTION_6	IF_1
0x400016a	    0xc74424080000	                  mov dword [rsp + 8], 0	       440	move.c	FUNCTION_6	IF_1
0x4000172	    0x8ba884000000	            mov ebp, dword [rax + 0x84] 	       441	move.c	FUNCTION_6	IF_1
0x4000178	          0x4863dd	                         movsxd rbx, ebp	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x400017b	    0x483b1d000000	            cmp rbx, qword [0x04000182] 	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000182	            0x7d3c	                           jge 0x40001c0	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000184	          0x4889e7	                            mov rdi, rsp	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x4000187	      0xe821ffffff	                   call sym.topline_back	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x400018c	        0x488b1424	                    mov rdx, qword [rsp]	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000190	    0x488b05000000	            mov rax, qword [0x04000197] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000197	        0x488b4078	            mov rax, qword [rax + 0x78] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400019b	          0x4839c2	                            cmp rdx, rax	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400019e	            0x7c20	                            jl 0x40001c0	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40001a0	          0x4839c2	                            cmp rdx, rax	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40001a3	            0x7507	                           jne 0x40001ac	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40001a5	      0x837c240800	                  cmp dword [rsp + 8], 0	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40001aa	            0x7f14	                            jg 0x40001c0	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40001ac	            0x89e8	                            mov eax, ebp	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001ae	         0x344240c	              add eax, dword [rsp + 0xc]	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001b2	            0x89c5	                            mov ebp, eax	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001b4	          0x4863d8	                         movsxd rbx, eax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001b7	    0x483b1d000000	            cmp rbx, qword [0x040001be] 	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001be	            0x7cc4	                            jl 0x4000184	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40001c0	    0x48391d000000	            cmp qword [0x040001c7], rbx 	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40001c7	           0xf9fc0	                                 setg al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40001ca	           0xfb6c0	                           movzx eax, al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40001cd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       462	move.c	FUNCTION_6
0x40001d2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       462	move.c	FUNCTION_6
0x40001db	            0x7405	                            je 0x40001e2	       462	move.c	FUNCTION_6
0x40001dd	      0xe800000000	                          call 0x40001e2	       462	move.c	FUNCTION_6
0x40001e2	        0x4883c428	                           add rsp, 0x28	       462	move.c	FUNCTION_6
0x40001e6	              0x5b	                                 pop rbx	       462	move.c	FUNCTION_6
0x40001e7	              0x5d	                                 pop rbp	       462	move.c	FUNCTION_6
0x40001e8	              0xc3	                                     ret	       462	move.c	FUNCTION_6
approximate_botline_win	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	2
0x400093b	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffdf	       613	move.c	FUNCTION_19
0x4000942	              0xc3	                                     ret	       613	move.c	FUNCTION_19
validate_virtcol	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	5
0x40009c1	        0x4883ec08	                              sub rsp, 8	       787	move.c	FUNCTION_24
0x40009c5	    0x488b3d000000	            mov rdi, qword [0x040009cc] 	       788	move.c	FUNCTION_24	CALL_1
0x40009cc	      0xe800000000	                          call 0x40009d1	       788	move.c	FUNCTION_24	CALL_1
0x40009d1	        0x4883c408	                              add rsp, 8	       789	move.c	FUNCTION_24
0x40009d5	              0xc3	                                     ret	       789	move.c	FUNCTION_24
curwin_col_off2	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	5
0x4000ab9	        0x4883ec08	                              sub rsp, 8	       911	move.c	FUNCTION_31
0x4000abd	    0x488b3d000000	            mov rdi, qword [0x04000ac4] 	       912	move.c	FUNCTION_31	CALL_1
0x4000ac4	      0xe800000000	                          call 0x4000ac9	       912	move.c	FUNCTION_31	CALL_1
0x4000ac9	        0x4883c408	                              add rsp, 8	       913	move.c	FUNCTION_31
0x4000acd	              0xc3	                                     ret	       913	move.c	FUNCTION_31
set_topline	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,2:DO,0	22
0x4000880	              0x53	                                push rbx	       529	move.c	FUNCTION_11
0x4000881	        0x4883ec10	                           sub rsp, 0x10	       529	move.c	FUNCTION_11
0x4000885	          0x4889fb	                            mov rbx, rdi	       529	move.c	FUNCTION_11
0x4000888	      0x4889742408	                mov qword [rsp + 8], rsi	       529	move.c	FUNCTION_11
0x400088d	    0x41b900000000	                              mov r9d, 0	       532	move.c	FUNCTION_11	CALL_1
0x4000893	    0x41b801000000	                              mov r8d, 1	       532	move.c	FUNCTION_11	CALL_1
0x4000899	      0xb900000000	                              mov ecx, 0	       532	move.c	FUNCTION_11	CALL_1
0x400089e	      0x488d542408	                      lea rdx, [rsp + 8]	       532	move.c	FUNCTION_11	CALL_1
0x40008a3	      0xe800000000	                          call 0x40008a8	       532	move.c	FUNCTION_11	CALL_1
0x40008a8	      0x488b442408	                mov rax, qword [rsp + 8]	       535	move.c	FUNCTION_11
0x40008ad	          0x4889c2	                            mov rdx, rax	       535	move.c	FUNCTION_11
0x40008b0	        0x482b5378	             sub rdx, qword [rbx + 0x78]	       535	move.c	FUNCTION_11
0x40008b4	    0x480193e80000	            add qword [rbx + 0xe8], rdx 	       535	move.c	FUNCTION_11
0x40008bb	        0x48894378	             mov qword [rbx + 0x78], rax	       536	move.c	FUNCTION_11
0x40008bf	    0xc68380000000	                mov byte [rbx + 0x80], 1	       537	move.c	FUNCTION_11
0x40008c6	    0xc78384000000	               mov dword [rbx + 0x84], 0	       539	move.c	FUNCTION_11
0x40008d0	    0x81a3b4000000	      and dword [rbx + 0xb4], 0xffffff4e	       541	move.c	FUNCTION_11
0x40008da	      0xbf0a000000	                            mov edi, 0xa	       543	move.c	FUNCTION_11	CALL_2
0x40008df	      0xe800000000	                          call 0x40008e4	       543	move.c	FUNCTION_11	CALL_2
0x40008e4	        0x4883c410	                           add rsp, 0x10	       544	move.c	FUNCTION_11
0x40008e8	              0x5b	                                 pop rbx	       544	move.c	FUNCTION_11
0x40008e9	              0xc3	                                     ret	       544	move.c	FUNCTION_11
curwin_col_off	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	5
0x4000a65	        0x4883ec08	                              sub rsp, 8	       892	move.c	FUNCTION_29
0x4000a69	    0x488b3d000000	            mov rdi, qword [0x04000a70] 	       893	move.c	FUNCTION_29	CALL_1
0x4000a70	      0xe800000000	                          call 0x4000a75	       893	move.c	FUNCTION_29	CALL_1
0x4000a75	        0x4883c408	                              add rsp, 8	       894	move.c	FUNCTION_29
0x4000a79	              0xc3	                                     ret	       894	move.c	FUNCTION_29
changed_window_setting	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	5
0x400086b	        0x4883ec08	                              sub rsp, 8	       511	move.c	FUNCTION_9
0x400086f	    0x488b3d000000	            mov rdi, qword [0x04000876] 	       512	move.c	FUNCTION_9	CALL_1
0x4000876	      0xe800000000	                          call 0x400087b	       512	move.c	FUNCTION_9	CALL_1
0x400087b	        0x4883c408	                              add rsp, 8	       513	move.c	FUNCTION_9
0x400087f	              0xc3	                                     ret	       513	move.c	FUNCTION_9
changed_line_abv_curs	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	3
0x4000907	    0x488b05000000	            mov rax, qword [0x0400090e] 	       573	move.c	FUNCTION_14
0x400090e	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff60	       573	move.c	FUNCTION_14
0x4000918	              0xc3	                                     ret	       573	move.c	FUNCTION_14
cursor_valid	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,1:DO,0	9
0x4000943	    0x488b3d000000	            mov rdi, qword [0x0400094a] 	       622	move.c	FUNCTION_20	CALL_1
0x400094a	      0xe800000000	                          call 0x400094f	       622	move.c	FUNCTION_20	CALL_1
0x400094f	    0x488b05000000	            mov rax, qword [0x04000956] 	       623	move.c	FUNCTION_20
0x4000956	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       623	move.c	FUNCTION_20
0x400095c	          0x83e003	                              and eax, 3	       623	move.c	FUNCTION_20
0x400095f	          0x83f803	                              cmp eax, 3	       623	move.c	FUNCTION_20
0x4000962	           0xf94c0	                                 sete al	       623	move.c	FUNCTION_20
0x4000965	           0xfb6c0	                           movzx eax, al	       623	move.c	FUNCTION_20
0x4000968	              0xc3	                                     ret	       625	move.c	FUNCTION_20
halfpage	IF,19:functions,0:ELSE,7:FOR,0:WHILE,6:SWITCH,0:CALL,24:DO,1	261
0x4002f66	            0x4157	                                push r15	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f68	            0x4156	                                push r14	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f6a	            0x4155	                                push r13	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f6c	            0x4154	                                push r12	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f6e	              0x55	                                push rbp	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f6f	              0x53	                                push rbx	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f70	        0x4883ec08	                              sub rsp, 8	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f74	          0x4189fe	                           mov r14d, edi	      2556	move.c	ELSE_5	FUNCTION_50
0x4002f77	          0x4885f6	                           test rsi, rsi	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f7a	            0x741c	                            je 0x4002f98	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f7c	    0x488b15000000	            mov rdx, qword [0x04002f83] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f83	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f8a	          0x4839f0	                            cmp rax, rsi	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f8d	        0x480f4fc6	                          cmovg rax, rsi	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f91	    0x488982600200	            mov qword [rdx + 0x260], rax	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4002f98	    0x488b15000000	            mov rdx, qword [0x04002f9f] 	      2566	move.c	ELSE_5	FUNCTION_50
0x4002f9f	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      2565	move.c	ELSE_5	FUNCTION_50
0x4002fa6	    0x483982600200	           cmp qword [rdx + 0x260], rax 	      2565	move.c	ELSE_5	FUNCTION_50
0x4002fad	    0x480f4e826002	         cmovle rax, qword [rdx + 0x260]	      2565	move.c	ELSE_5	FUNCTION_50
0x4002fb5	          0x4889c3	                            mov rbx, rax	      2565	move.c	ELSE_5	FUNCTION_50
0x4002fb8	          0x4189c4	                           mov r12d, eax	      2565	move.c	ELSE_5	FUNCTION_50
0x4002fbb	      0xe800000000	                          call 0x4002fc0	      2568	move.c	ELSE_5	FUNCTION_50	CALL_1
0x4002fc0	      0xe800000000	                          call 0x4002fc5	      2569	move.c	ELSE_5	FUNCTION_50	CALL_2
0x4002fc5	    0x488b3d000000	            mov rdi, qword [0x04002fcc] 	      2570	move.c	ELSE_5	FUNCTION_50
0x4002fcc	          0x4585f6	                         test r14d, r14d	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4002fcf	            0x7520	                           jne 0x4002ff1	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4002fd1	            0x85db	                           test ebx, ebx	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fd3	     0xf8e94030000	                           jle 0x400336d	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fd9	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fdd	      0xbd00000000	                              mov ebp, 0	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fe2	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fe6	     0xf8f29020000	                            jg 0x4003215	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002fec	      0xe904030000	                           jmp 0x40032f5	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4002ff1	            0x85db	                           test ebx, ebx	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4002ff3	     0xf8e74030000	                           jle 0x400336d	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4002ff9	    0x488b05000000	            mov rax, qword [0x04003000] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003000	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003003	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400300a	     0xf8f87010000	                            jg 0x4003197	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003010	    0x8b9ff4000000	            mov ebx, dword [rdi + 0xf4] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4003016	     0x39ff0000000	             add ebx, dword [rdi + 0xf0]	      2572	move.c	ELSE_5	FUNCTION_50
0x400301c	    0x41bd00000000	                             mov r13d, 0	      2572	move.c	ELSE_5	FUNCTION_50
0x4003022	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003028	            0x85c0	                           test eax, eax	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x400302a	            0x7e27	                           jle 0x4003053	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x400302c	        0x4183ec01	                             sub r12d, 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003030	          0x4d85ed	                           test r13, r13	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003033	            0x7e0e	                           jle 0x4003043	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003035	          0x4489e2	                           mov edx, r12d	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003038	          0xc1ea1f	                           shr edx, 0x1f	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x400303b	            0x84d2	                             test dl, dl	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x400303d	     0xf854b010000	                           jne 0x400318e	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003043	          0x83e801	                              sub eax, 1	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003046	    0x898784000000	             mov dword [rdi + 0x84], eax	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x400304c	      0xbd01000000	                              mov ebp, 1	      2584	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003051	            0xeb7a	                           jmp 0x40030cd	      2584	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003053	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4003057	      0xe800000000	                          call 0x400305c	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x400305c	            0x89c5	                            mov ebp, eax	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x400305e	          0x4129c4	                           sub r12d, eax	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003061	            0x7909	                           jns 0x400306c	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003063	          0x4d85ed	                           test r13, r13	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003066	     0xf8f22010000	                            jg 0x400318e	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x400306c	    0x488b05000000	            mov rax, qword [0x04003073] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003073	        0x488d5078	                   lea rdx, [rax + 0x78]	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003077	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x400307b	      0xbe00000000	                              mov esi, 0	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003080	      0xe800000000	                          call 0x4003085	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003085	    0x4c8b3d000000	            mov r15, qword [0x0400308c] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x400308c	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003090	        0x488d7001	                      lea rsi, [rax + 1]	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003094	        0x49897778	             mov qword [r15 + 0x78], rsi	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003098	          0x4c89ff	                            mov rdi, r15	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x400309b	      0xe800000000	                          call 0x40030a0	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x40030a0	    0x418987840000	             mov dword [r15 + 0x84], eax	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x40030a7	    0x488b05000000	            mov rax, qword [0x040030ae] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030ae	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030b2	    0x488b0d000000	            mov rcx, qword [0x040030b9] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030b9	          0x483b11	                    cmp rdx, qword [rcx]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030bc	            0x7d0f	                           jge 0x40030cd	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030be	        0x4883c201	                              add rdx, 1	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030c2	        0x48895038	             mov qword [rax + 0x38], rdx	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030c6	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff1	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x40030cd	    0x488b05000000	            mov rax, qword [0x040030d4] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030d4	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030da	            0x89d1	                            mov ecx, edx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030dc	          0x83e1ee	                     and ecx, 0xffffffee	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030df	    0x8988b4000000	             mov dword [rax + 0xb4], ecx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030e5	          0x4863cd	                         movsxd rcx, ebp	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030e8	          0x4901cd	                            add r13, rcx	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40030eb	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40030f2	            0x740b	                            je 0x40030ff	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40030f4	          0x83e28e	                     and edx, 0xffffff8e	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40030f7	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40030fd	            0xeb66	                           jmp 0x4003165	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40030ff	             0x1eb	                            add ebx, ebp	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4003101	    0x488b05000000	            mov rax, qword [0x04003108] 	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4003108	    0x488bb8e80000	            mov rdi, qword [rax + 0xe8] 	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x400310f	      0xe800000000	                          call 0x4003114	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4003114	            0x89c5	                            mov ebp, eax	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4003116	            0x39c3	                            cmp ebx, eax	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4003118	            0x7c4b	                            jl 0x4003165	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x400311a	    0x488b05000000	            mov rax, qword [0x04003121] 	      2634	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003121	    0x488d90e80000	                   lea rdx, [rax + 0xe8]	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003128	    0x488bb8e80000	            mov rdi, qword [rax + 0xe8] 	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x400312f	      0xbe00000000	                              mov esi, 0	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003134	      0xe800000000	                          call 0x4003139	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003139	    0x488b15000000	            mov rdx, qword [0x04003140] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003140	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003147	        0x4883c001	                              add rax, 1	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x400314b	    0x488982e80000	             mov qword [rdx + 0xe8], rax	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003152	            0x29eb	                            sub ebx, ebp	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003154	    0x488b15000000	            mov rdx, qword [0x0400315b] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x400315b	          0x483b02	                    cmp rax, qword [rdx]	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x400315e	            0x7ea1	                           jle 0x4003101	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003160	      0xe93f020000	                           jmp 0x40033a4	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003165	          0x4585e4	                         test r12d, r12d	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003168	     0xf8eff010000	                           jle 0x400336d	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400316e	    0x488b3d000000	            mov rdi, qword [0x04003175] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003175	    0x488b05000000	            mov rax, qword [0x0400317c] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400317c	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400317f	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003186	     0xf8e96feffff	                           jle 0x4003022	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400318c	            0xeb09	                           jmp 0x4003197	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400318e	          0x4585e4	                         test r12d, r12d	      2646	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4003191	     0xf8ed6010000	                           jle 0x400336d	      2646	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4003197	    0x488b3d000000	            mov rdi, qword [0x0400319e] 	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x400319e	      0xe800000000	                          call 0x40031a3	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40031a3	            0x85c0	                           test eax, eax	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40031a5	            0x7456	                            je 0x40031fd	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40031a7	        0x4183ec01	                             sub r12d, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031ab	            0x785e	                            js 0x400320b	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031ad	    0x488b15000000	            mov rdx, qword [0x040031b4] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031b4	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031b8	    0x488b05000000	            mov rax, qword [0x040031bf] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031bf	          0x483b38	                    cmp rdi, qword [rax]	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031c2	            0x7d47	                           jge 0x400320b	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031c4	        0x4883c238	                           add rdx, 0x38	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x40031c8	      0xbe00000000	                              mov esi, 0	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x40031cd	      0xe800000000	                          call 0x40031d2	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x40031d2	    0x488b15000000	            mov rdx, qword [0x040031d9] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031d9	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031dd	        0x488d7801	                      lea rdi, [rax + 1]	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031e1	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031e5	        0x4183ec01	                             sub r12d, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031e9	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031ed	            0x741c	                            je 0x400320b	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031ef	    0x488b05000000	            mov rax, qword [0x040031f6] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031f6	          0x483938	                    cmp qword [rax], rdi	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031f9	            0x7fc9	                            jg 0x40031c4	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031fb	            0xeb0e	                           jmp 0x400320b	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40031fd	    0x488b05000000	            mov rax, qword [0x04003204] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4003204	          0x4d63e4	                        movsxd r12, r12d	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4003207	        0x4c016038	            add qword [rax + 0x38], r12 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x400320b	      0xe800000000	                          call 0x4003210	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4003210	      0xe958010000	                           jmp 0x400336d	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4003215	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400321b	      0xe800000000	                          call 0x4003220	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4003220	            0x39c3	                            cmp ebx, eax	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4003222	            0x7d24	                           jge 0x4003248	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4003224	        0x4183ec01	                             sub r12d, 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4003228	            0x7909	                           jns 0x4003233	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x400322a	          0x4885ed	                           test rbp, rbp	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x400322d	     0xf8fbd000000	                            jg 0x40032f0	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4003233	    0x488b05000000	            mov rax, qword [0x0400323a] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x400323a	    0x838084000000	               add dword [rax + 0x84], 1	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4003241	      0xbb01000000	                              mov ebx, 1	      2690	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4003246	            0xeb56	                           jmp 0x400329e	      2690	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4003248	    0x488b05000000	            mov rax, qword [0x0400324f] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400324f	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4003253	        0x4883ef01	                              sub rdi, 1	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4003257	      0xe800000000	                          call 0x400325c	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400325c	            0x89c3	                            mov ebx, eax	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400325e	          0x4129c4	                           sub r12d, eax	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4003261	            0x7909	                           jns 0x400326c	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4003263	          0x4885ed	                           test rbp, rbp	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4003266	     0xf8f84000000	                            jg 0x40032f0	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x400326c	    0x488b35000000	            mov rsi, qword [0x04003273] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4003273	        0x488b4678	            mov rax, qword [rsi + 0x78] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4003277	        0x488d78ff	                      lea rdi, [rax - 1]	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400327b	        0x48897e78	             mov qword [rsi + 0x78], rdi	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400327f	        0x4883c678	                           add rsi, 0x78	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4003283	      0xba00000000	                              mov edx, 0	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4003288	      0xe800000000	                          call 0x400328d	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400328d	    0x488b05000000	            mov rax, qword [0x04003294] 	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4003294	    0xc78084000000	               mov dword [rax + 0x84], 0	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400329e	    0x488b3d000000	            mov rdi, qword [0x040032a5] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032a5	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032ab	            0x89c2	                            mov edx, eax	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032ad	          0x83e28e	                     and edx, 0xffffff8e	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032b0	    0x8997b4000000	             mov dword [rdi + 0xb4], edx	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032b6	          0x4863db	                         movsxd rbx, ebx	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032b9	          0x4801dd	                            add rbp, rbx	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x40032bc	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032c0	        0x4883fa01	                              cmp rdx, 1	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032c4	            0x7e11	                           jle 0x40032d7	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032c6	        0x4883ea01	                              sub rdx, 1	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032ca	        0x48895738	             mov qword [rdi + 0x38], rdx	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032ce	          0x83e080	                     and eax, 0xffffff80	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032d1	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x40032d7	          0x4585e4	                         test r12d, r12d	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032da	     0xf8e8d000000	                           jle 0x400336d	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032e0	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032e4	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032e8	     0xf8f27ffffff	                            jg 0x4003215	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032ee	            0xeb05	                           jmp 0x40032f5	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40032f0	          0x4585e4	                         test r12d, r12d	      2725	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x40032f3	            0x7e78	                           jle 0x400336d	      2725	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x40032f5	    0x488b3d000000	            mov rdi, qword [0x040032fc] 	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40032fc	          0x4963dc	                        movsxd rbx, r12d	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x40032ff	        0x48395f38	            cmp qword [rdi + 0x38], rbx 	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003303	            0x7f0a	                            jg 0x400330f	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003305	    0x48c747380100	               mov qword [rdi + 0x38], 1	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x400330d	            0xeb5e	                           jmp 0x400336d	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x400330f	      0xe800000000	                          call 0x4003314	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003314	            0x85c0	                           test eax, eax	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003316	            0x744a	                            je 0x4003362	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003318	        0x4183ec01	                             sub r12d, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400331c	            0x784f	                            js 0x400336d	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400331e	    0x488b15000000	            mov rdx, qword [0x04003325] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003325	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003329	        0x4883f801	                              cmp rax, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400332d	            0x7e3e	                           jle 0x400336d	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400332f	        0x488d78ff	                      lea rdi, [rax - 1]	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003333	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003337	        0x488d7238	                   lea rsi, [rdx + 0x38]	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x400333b	      0xba00000000	                              mov edx, 0	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4003340	      0xe800000000	                          call 0x4003345	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4003345	        0x4183ec01	                             sub r12d, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003349	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400334d	            0x741e	                            je 0x400336d	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400334f	    0x488b15000000	            mov rdx, qword [0x04003356] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003356	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400335a	        0x4883f801	                              cmp rax, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400335e	            0x7fcf	                            jg 0x400332f	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003360	            0xeb0b	                           jmp 0x400336d	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003362	    0x488b05000000	            mov rax, qword [0x04003369] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4003369	        0x48295838	             sub qword [rax + 0x38], rbx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400336d	      0xe800000000	                          call 0x4003372	      2762	move.c	FUNCTION_50	ELSE_5	CALL_20
0x4003372	          0x4585f6	                         test r14d, r14d	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4003375	        0x400f94c6	                                sete sil	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4003379	        0x400fb6f6	                          movzx esi, sil	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x400337d	    0x488b3d000000	            mov rdi, qword [0x04003384] 	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4003384	      0xe800000000	                          call 0x4003389	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4003389	      0xe800000000	                          call 0x400338e	      2767	move.c	FUNCTION_50	ELSE_5	CALL_22
0x400338e	      0xbf06000000	                              mov edi, 6	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4003393	      0xe800000000	                          call 0x4003398	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4003398	      0xbf0a000000	                            mov edi, 0xa	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x400339d	      0xe800000000	                          call 0x40033a2	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x40033a2	            0xeb0a	                           jmp 0x40033ae	      2770	move.c	FUNCTION_50	ELSE_5
0x40033a4	          0x4585e4	                         test r12d, r12d	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40033a7	            0x7ec4	                           jle 0x400336d	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40033a9	      0xe9e9fdffff	                           jmp 0x4003197	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40033ae	        0x4883c408	                              add rsp, 8	      2770	move.c	FUNCTION_50	ELSE_5
0x40033b2	              0x5b	                                 pop rbx	      2770	move.c	FUNCTION_50	ELSE_5
0x40033b3	              0x5d	                                 pop rbp	      2770	move.c	FUNCTION_50	ELSE_5
0x40033b4	            0x415c	                                 pop r12	      2770	move.c	FUNCTION_50	ELSE_5
0x40033b6	            0x415d	                                 pop r13	      2770	move.c	FUNCTION_50	ELSE_5
0x40033b8	            0x415e	                                 pop r14	      2770	move.c	FUNCTION_50	ELSE_5
0x40033ba	            0x415f	                                 pop r15	      2770	move.c	FUNCTION_50	ELSE_5
0x40033bc	              0xc3	                                     ret	      2770	move.c	FUNCTION_50	ELSE_5
comp_botline	IF,5:functions,0:ELSE,3:FOR,1:WHILE,0:SWITCH,0:CALL,6:DO,0	86
0x4000de3	            0x4155	                                push r13	        52	move.c	FUNCTION_1
0x4000de5	            0x4154	                                push r12	        52	move.c	FUNCTION_1
0x4000de7	              0x55	                                push rbp	        52	move.c	FUNCTION_1
0x4000de8	              0x53	                                push rbx	        52	move.c	FUNCTION_1
0x4000de9	        0x4883ec18	                           sub rsp, 0x18	        52	move.c	FUNCTION_1
0x4000ded	          0x4889fd	                            mov rbp, rdi	        52	move.c	FUNCTION_1
0x4000df0	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	move.c	FUNCTION_1
0x4000df9	      0x4889442408	                mov qword [rsp + 8], rax	        52	move.c	FUNCTION_1
0x4000dfe	            0x31c0	                            xor eax, eax	        52	move.c	FUNCTION_1
0x4000e00	      0xe800000000	                          call 0x4000e05	        65	move.c	FUNCTION_1	CALL_1
0x4000e05	    0xf685b4000000	           test byte [rbp + 0xb4], 0x10 	        66	move.c	FUNCTION_1	IF_1
0x4000e0c	            0x740d	                            je 0x4000e1b	        66	move.c	FUNCTION_1	IF_1
0x4000e0e	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	        68	move.c	FUNCTION_1	IF_1
0x4000e12	    0x448badd40000	           mov r13d, dword [rbp + 0xd4] 	        69	move.c	FUNCTION_1	IF_1
0x4000e19	            0xeb0a	                           jmp 0x4000e25	        69	move.c	FUNCTION_1	IF_1
0x4000e1b	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	        73	move.c	FUNCTION_1	ELSE_1
0x4000e1f	    0x41bd00000000	                             mov r13d, 0	        74	move.c	FUNCTION_1	ELSE_1
0x4000e25	        0x488b4508	                mov rax, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000e29	          0x483b18	                    cmp rbx, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000e2c	     0xf8fcd000000	                            jg 0x4000eff	        77	move.c	FUNCTION_1	FOR_1
0x4000e32	            0xeb03	                           jmp 0x4000e37	        77	move.c	FUNCTION_1	FOR_1
0x4000e34	          0x4189c5	                           mov r13d, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000e37	        0x48891c24	                    mov qword [rsp], rbx	        80	move.c	FUNCTION_1	FOR_1
0x4000e3b	    0x41b900000000	                              mov r9d, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e41	    0x41b801000000	                              mov r8d, 1	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e47	          0x4889e1	                            mov rcx, rsp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e4a	      0xba00000000	                              mov edx, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e4f	          0x4889de	                            mov rsi, rbx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e52	          0x4889ef	                            mov rdi, rbp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e55	      0xe800000000	                          call 0x4000e5a	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e5a	            0x85c0	                           test eax, eax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e5c	            0x7540	                           jne 0x4000e9e	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000e5e	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e62	            0x7520	                           jne 0x4000e84	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e64	      0xba01000000	                              mov edx, 1	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e69	          0x4889de	                            mov rsi, rbx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e6c	          0x4889ef	                            mov rdi, rbp	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e6f	      0xe800000000	                          call 0x4000e74	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e74	     0x38584000000	             add eax, dword [rbp + 0x84]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e7a	          0x4189c4	                           mov r12d, eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000e7d	      0xba00000000	                              mov edx, 0	        81	move.c	FUNCTION_1	FOR_1
0x4000e82	            0xeb25	                           jmp 0x4000ea9	        81	move.c	FUNCTION_1	FOR_1
0x4000e84	      0xba01000000	                              mov edx, 1	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000e89	          0x4889de	                            mov rsi, rbx	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000e8c	          0x4889ef	                            mov rdi, rbp	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000e8f	      0xe800000000	                          call 0x4000e94	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000e94	          0x4189c4	                           mov r12d, eax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000e97	      0xba00000000	                              mov edx, 0	        81	move.c	FUNCTION_1	FOR_1
0x4000e9c	            0xeb0b	                           jmp 0x4000ea9	        81	move.c	FUNCTION_1	FOR_1
0x4000e9e	      0xba01000000	                              mov edx, 1	        85	move.c	FUNCTION_1	FOR_1	IF_2
0x4000ea3	    0x41bc01000000	                             mov r12d, 1	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x4000ea9	        0x488b4538	            mov rax, qword [rbp + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000ead	          0x4839d8	                            cmp rax, rbx	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000eb0	            0x7c29	                            jl 0x4000edb	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000eb2	        0x483b0424	                    cmp rax, qword [rsp]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000eb6	            0x7f23	                            jg 0x4000edb	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000eb8	    0x4489add40000	           mov dword [rbp + 0xd4], r13d 	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x4000ebf	    0x4489a5cc0000	           mov dword [rbp + 0xcc], r12d 	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x4000ec6	    0x8995d0000000	            mov dword [rbp + 0xd0], edx 	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x4000ecc	          0x4889ef	                            mov rdi, rbp	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x4000ecf	      0xe85cf5ffff	          call sym.redraw_for_cursorline	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x4000ed4	    0x838db4000000	             or dword [rbp + 0xb4], 0x18	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x4000edb	        0x438d042c	                    lea eax, [r12 + r13]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000edf	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000ee5	            0x7f18	                            jg 0x4000eff	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000ee7	        0x488b0c24	                    mov rcx, qword [rsp]	        77	move.c	FUNCTION_1	FOR_1
0x4000eeb	        0x488d5901	                      lea rbx, [rcx + 1]	        77	move.c	FUNCTION_1	FOR_1
0x4000eef	        0x488b5508	                mov rdx, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000ef3	          0x48391a	                    cmp qword [rdx], rbx	        77	move.c	FUNCTION_1	FOR_1
0x4000ef6	     0xf8d38ffffff	                           jge 0x4000e34	        77	move.c	FUNCTION_1	FOR_1
0x4000efc	          0x4189c5	                           mov r13d, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000eff	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	       120	move.c	FUNCTION_1
0x4000f06	    0x838db4000000	            or dword [rbp + 0xb4], 0x60 	       121	move.c	FUNCTION_1
0x4000f0d	          0x4489ee	                           mov esi, r13d	       123	move.c	FUNCTION_1	CALL_6
0x4000f10	          0x4889ef	                            mov rdi, rbp	       123	move.c	FUNCTION_1	CALL_6
0x4000f13	      0xe800000000	                          call 0x4000f18	       123	move.c	FUNCTION_1	CALL_6
0x4000f18	      0x488b442408	                mov rax, qword [rsp + 8]	       124	move.c	FUNCTION_1
0x4000f1d	    0x644833042528	                xor rax, qword fs:[0x28]	       124	move.c	FUNCTION_1
0x4000f26	            0x7405	                            je 0x4000f2d	       124	move.c	FUNCTION_1
0x4000f28	      0xe800000000	                          call 0x4000f2d	       124	move.c	FUNCTION_1
0x4000f2d	        0x4883c418	                           add rsp, 0x18	       124	move.c	FUNCTION_1
0x4000f31	              0x5b	                                 pop rbx	       124	move.c	FUNCTION_1
0x4000f32	              0x5d	                                 pop rbp	       124	move.c	FUNCTION_1
0x4000f33	            0x415c	                                 pop r12	       124	move.c	FUNCTION_1
0x4000f35	            0x415d	                                 pop r13	       124	move.c	FUNCTION_1
0x4000f37	              0xc3	                                     ret	       124	move.c	FUNCTION_1
changed_cline_bef_curs_win	IF,0:functions,0:ELSE,0:FOR,0:WHILE,0:SWITCH,0:CALL,0:DO,0	2
0x40008fc	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff70	       561	move.c	FUNCTION_13
0x4000906	              0xc3	                                     ret	       561	move.c	FUNCTION_13
