maketitle	CALL,47:IF,26:SWITCH,1:ELSE,10:WHILE,0:FOR,0:DO,0:functions,0	339
0x40059f0	            0x4156	                                push r14	      3538	buffer.c	FUNCTION_61
0x40059f2	            0x4155	                                push r13	      3538	buffer.c	FUNCTION_61
0x40059f4	            0x4154	                                push r12	      3538	buffer.c	FUNCTION_61
0x40059f6	              0x55	                                push rbp	      3538	buffer.c	FUNCTION_61
0x40059f7	              0x53	                                push rbx	      3538	buffer.c	FUNCTION_61
0x40059f8	    0x4881ec100400	                          sub rsp, 0x410	      3538	buffer.c	FUNCTION_61
0x40059ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      3538	buffer.c	FUNCTION_61
0x4005a08	    0x488984240804	            mov qword [rsp + 0x408], rax	      3538	buffer.c	FUNCTION_61
0x4005a10	            0x31c0	                            xor eax, eax	      3538	buffer.c	FUNCTION_61
0x4005a12	      0xe800000000	                          call 0x4005a17	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005a17	            0x85c0	                           test eax, eax	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005a19	            0x750f	                           jne 0x4005a2a	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005a1b	    0xc70500000000	               mov dword [0x04005a25], 1	      3552	buffer.c	FUNCTION_61	IF_1
0x4005a25	      0xe961050000	                           jmp 0x4005f8b	      3553	buffer.c	FUNCTION_61	IF_1
0x4005a2a	    0xc70500000000	               mov dword [0x04005a34], 0	      3556	buffer.c	FUNCTION_61
0x4005a34	    0x833d00000000	               cmp dword [0x04005a3b], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a3b	            0x7533	                           jne 0x4005a70	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a3d	    0x833d00000000	               cmp dword [0x04005a44], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a44	     0xf85c6030000	                           jne 0x4005e10	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a4a	      0xbf00000000	                              mov edi, 0	      3540	buffer.c	FUNCTION_61
0x4005a4f	    0x48833d000000	               cmp qword [0x04005a57], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a57	     0xf85b8030000	                           jne 0x4005e15	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a5d	    0x48833d000000	               cmp qword [0x04005a65], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a65	     0xf8420050000	                            je 0x4005f8b	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a6b	      0xe9a5030000	                           jmp 0x4005e15	      3557	buffer.c	FUNCTION_61	IF_2
0x4005a70	    0x488b0d000000	            mov rcx, qword [0x04005a77] 	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a77	      0xbb00000000	                              mov ebx, 0	      3543	buffer.c	FUNCTION_61
0x4005a7c	          0x4885c9	                           test rcx, rcx	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a7f	            0x7e32	                           jle 0x4005ab3	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a81	    0x480faf0d0000	            imul rcx, qword [0x04005a89]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a89	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a93	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a96	          0x48f7ea	                                imul rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a99	        0x488d1c0a	                    lea rbx, [rdx + rcx]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005a9d	        0x48c1fb06	                              sar rbx, 6	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005aa1	        0x48c1f93f	                           sar rcx, 0x3f	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005aa5	          0x4829cb	                            sub rbx, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4005aa8	          0x83fb09	                              cmp ebx, 9	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4005aab	      0xb80a000000	                            mov eax, 0xa	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4005ab0	           0xf4ed8	                         cmovle ebx, eax	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4005ab3	    0x488b3d000000	            mov rdi, qword [0x04005aba] 	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4005aba	          0x803f00	                       cmp byte [rdi], 0	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4005abd	     0xf8495000000	                            je 0x4005b58	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4005ac3	    0xf60500000000	               test byte [0x04005aca], 2	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4005aca	     0xf8445030000	                            je 0x4005e15	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4005ad0	    0x8b2d00000000	            mov ebp, dword [0x04005ad6] 	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4005ad6	      0xbe00000000	                              mov esi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x4005adb	      0xbf00000000	                              mov edi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x4005ae0	      0xe800000000	                          call 0x4005ae5	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x4005ae5	          0x4189c0	                            mov r8d, eax	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x4005ae8	    0xc70500000000	               mov dword [0x04005af2], 0	      3581	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4005af2	        0x4883ec08	                              sub rsp, 8	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005af6	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005af8	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005afa	              0x53	                                push rbx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005afb	    0x41b900000000	                              mov r9d, 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b01	    0x488b0d000000	            mov rcx, qword [0x04005b08] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b08	      0xba01040000	                          mov edx, 0x401	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b0d	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b12	    0x488b3d000000	            mov rdi, qword [0x04005b19] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b19	      0xe800000000	                          call 0x4005b1e	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4005b1e	        0x4883c420	                           add rsp, 0x20	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4005b22	    0x833d00000000	               cmp dword [0x04005b29], 0	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4005b29	            0x741f	                            je 0x4005b4a	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4005b2b	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b31	      0xb901000000	                              mov ecx, 1	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b36	      0xba00000000	                              mov edx, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b3b	      0xbeffffffff	                     mov esi, 0xffffffff	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b40	      0xbf00000000	                              mov edi, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b45	      0xe800000000	                          call 0x4005b4a	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x4005b4a	     0x92d00000000	              or dword [0x04005b50], ebp	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4005b50	          0x4889e7	                            mov rdi, rsp	      3569	buffer.c	FUNCTION_61	IF_3
0x4005b53	      0xe9bd020000	                           jmp 0x4005e15	      3569	buffer.c	FUNCTION_61	IF_3
0x4005b58	    0x488b05000000	            mov rax, qword [0x04005b5f] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4005b5f	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4005b66	          0x4885d2	                           test rdx, rdx	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4005b69	            0x7526	                           jne 0x4005b91	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4005b6b	      0xba05000000	                              mov edx, 5	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b70	      0xbe00000000	                              mov esi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b75	      0xbf00000000	                              mov edi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b7a	      0xe800000000	                          call 0x4005b7f	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b7f	      0xba9d030000	                          mov edx, 0x39d	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b84	          0x4889c6	                            mov rsi, rax	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b87	          0x4889e7	                            mov rdi, rsp	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b8a	      0xe800000000	                          call 0x4005b8f	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b8f	            0xeb4e	                           jmp 0x4005bdf	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4005b91	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4005b98	          0x4885ff	                           test rdi, rdi	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4005b9b	            0x7417	                            je 0x4005bb4	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4005b9d	      0xe800000000	                          call 0x4005ba2	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005ba2	      0xba9d030000	                          mov edx, 0x39d	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005ba7	          0x4889c6	                            mov rsi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005baa	          0x4889e7	                            mov rdi, rsp	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005bad	      0xe800000000	                          call 0x4005bb2	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005bb2	            0xeb2b	                           jmp 0x4005bdf	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4005bb4	          0x4889d7	                            mov rdi, rdx	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4005bb7	      0xe800000000	                          call 0x4005bbc	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4005bbc	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4005bbf	      0xe800000000	                          call 0x4005bc4	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4005bc4	          0x4889c5	                            mov rbp, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4005bc7	      0xba9d030000	                          mov edx, 0x39d	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4005bcc	          0x4889c6	                            mov rsi, rax	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4005bcf	          0x4889e7	                            mov rdi, rsp	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4005bd2	      0xe800000000	                          call 0x4005bd7	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4005bd7	          0x4889ef	                            mov rdi, rbp	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4005bda	      0xe800000000	                          call 0x4005bdf	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4005bdf	    0x488b3d000000	            mov rdi, qword [0x04005be6] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4005be6	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4005bee	     0xf859a010000	                           jne 0x4005d8e	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4005bf4	      0xe800000000	                          call 0x4005bf9	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005bf9	    0x488b2d000000	            mov rbp, qword [0x04005c00] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c00	    0x8b9560150000	          mov edx, dword [rbp + 0x1560] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c06	          0x8d0450	                  lea eax, [rax + rdx*2]	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c09	    0x83bd40150000	            cmp dword [rbp + 0x1540], 1 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c10	            0x19d2	                            sbb edx, edx	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c12	          0x83e204	                              and edx, 4	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x4005c15	             0x1d0	                            add eax, edx	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005c17	          0x83f807	                              cmp eax, 7	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005c1a	            0x776b	                            ja 0x4005c87	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005c1c	            0x89c0	                            mov eax, eax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005c1e	    0xff24c5000000	                       jmp qword [rax*8]	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4005c25	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005c2a	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005c2f	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005c32	      0xe800000000	                          call 0x4005c37	       148	string3.h	FUNCTION_114	CALL_3
0x4005c37	            0xeb4e	                           jmp 0x4005c87	       148	string3.h	FUNCTION_114	CALL_3
0x4005c39	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005c3e	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005c43	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005c46	      0xe800000000	                          call 0x4005c4b	       148	string3.h	FUNCTION_114	CALL_3
0x4005c4b	            0xeb3a	                           jmp 0x4005c87	       148	string3.h	FUNCTION_114	CALL_3
0x4005c4d	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005c52	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005c57	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005c5a	      0xe800000000	                          call 0x4005c5f	       148	string3.h	FUNCTION_114	CALL_3
0x4005c5f	            0xeb26	                           jmp 0x4005c87	       148	string3.h	FUNCTION_114	CALL_3
0x4005c61	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005c66	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005c6b	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005c6e	      0xe800000000	                          call 0x4005c73	       148	string3.h	FUNCTION_114	CALL_3
0x4005c73	            0xeb12	                           jmp 0x4005c87	       148	string3.h	FUNCTION_114	CALL_3
0x4005c75	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005c7a	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005c7f	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005c82	      0xe800000000	                          call 0x4005c87	       148	string3.h	FUNCTION_114	CALL_3
0x4005c87	    0x4883bd980000	               cmp qword [rbp + 0x98], 0	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005c8f	     0xf84f9000000	                            je 0x4005d8e	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005c95	    0x4883bd481c00	             cmp qword [rbp + 0x1c48], 0	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005c9d	     0xf85eb000000	                           jne 0x4005d8e	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005ca3	      0xb800000000	                              mov eax, 0	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005ca8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005caf	          0x4889e7	                            mov rdi, rsp	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005cb2	            0xf2ae	              repne scasb al, byte [rdi]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005cb4	          0x4889c8	                            mov rax, rcx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005cb7	          0x48f7d0	                                 not rax	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005cba	        0x4883e801	                              sub rax, 1	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4005cbe	          0x4863c8	                         movsxd rcx, eax	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005cc1	        0xc6040c20	              mov byte [rsp + rcx], 0x20	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005cc5	        0x448d6002	                     lea r12d, [rax + 2]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005cc9	          0x83c001	                              add eax, 1	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005ccc	            0x4898	                                    cdqe	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005cce	        0xc6040428	              mov byte [rsp + rax], 0x28	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4005cd2	    0x41beed030000	                         mov r14d, 0x3ed	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cd8	          0x4529e6	                          sub r14d, r12d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cdb	          0x4d63ec	                        movsxd r13, r12d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cde	          0x4901e5	                            add r13, rsp	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005ce1	    0x488bb5880000	            mov rsi, qword [rbp + 0x88] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005ce8	    0x41b801000000	                              mov r8d, 1	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cee	          0x4489f1	                           mov ecx, r14d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cf1	          0x4c89ea	                            mov rdx, r13	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cf4	          0x4889ef	                            mov rdi, rbp	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cf7	      0xe800000000	                          call 0x4005cfc	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4005cfc	          0x4c89ef	                            mov rdi, r13	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x4005cff	      0xe800000000	                          call 0x4005d04	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x4005d04	          0x4939c5	                            cmp r13, rax	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x4005d07	            0x752c	                           jne 0x4005d35	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x4005d09	      0xba05000000	                              mov edx, 5	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d0e	      0xbe00000000	                              mov esi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d13	      0xbf00000000	                              mov edi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d18	      0xe800000000	                          call 0x4005d1d	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d1d	      0xbaec030000	                          mov edx, 0x3ec	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d22	          0x4429e2	                           sub edx, r12d	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d25	          0x4863d2	                         movsxd rdx, edx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d28	          0x4889c6	                            mov rsi, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d2b	          0x4c89ef	                            mov rdi, r13	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d2e	      0xe800000000	                          call 0x4005d33	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d33	            0xeb03	                           jmp 0x4005d38	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4005d35	          0xc60000	                       mov byte [rax], 0	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x4005d38	    0x4181fcec0300	                         cmp r12d, 0x3ec	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x4005d3f	            0x7f23	                            jg 0x4005d64	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x4005d41	          0x4c89ef	                            mov rdi, r13	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4005d44	      0xe800000000	                          call 0x4005d49	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4005d49	          0x4889c5	                            mov rbp, rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x4005d4c	          0x4963d6	                        movsxd rdx, r14d	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4005d4f	          0x4889c6	                            mov rsi, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4005d52	          0x4c89ef	                            mov rdi, r13	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4005d55	      0xe800000000	                          call 0x4005d5a	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x4005d5a	          0x4889ef	                            mov rdi, rbp	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x4005d5d	      0xe800000000	                          call 0x4005d62	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x4005d62	            0xeb18	                           jmp 0x4005d7c	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x4005d64	      0xbaf7030000	                          mov edx, 0x3f7	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d69	          0x4429e2	                           sub edx, r12d	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d6c	          0x4863d2	                         movsxd rdx, edx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d6f	      0xbe00000000	                              mov esi, 0	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d74	          0x4c89ef	                            mov rdi, r13	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d77	      0xe800000000	                          call 0x4005d7c	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4005d7c	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005d81	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005d86	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005d89	      0xe800000000	                          call 0x4005d8e	       148	string3.h	FUNCTION_114	CALL_3
0x4005d8e	      0xb900000000	                              mov ecx, 0	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4005d93	      0xbaf7030000	                          mov edx, 0x3f7	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4005d98	          0x4889e6	                            mov rsi, rsp	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4005d9b	    0x488b3d000000	            mov rdi, qword [0x04005da2] 	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4005da2	      0xe8afa6ffff	              call sym.append_arg_number	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4005da7	    0x488b2d000000	            mov rbp, qword [0x04005dae] 	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4005dae	          0x4885ed	                           test rbp, rbp	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4005db1	            0x7424	                            je 0x4005dd7	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4005db3	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005db8	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005dbd	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005dc0	      0xe800000000	                          call 0x4005dc5	       148	string3.h	FUNCTION_114	CALL_3
0x4005dc5	      0xba01040000	                          mov edx, 0x401	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4005dca	          0x4889ee	                            mov rsi, rbp	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4005dcd	          0x4889e7	                            mov rdi, rsp	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4005dd0	      0xe800000000	                          call 0x4005dd5	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4005dd5	            0xeb12	                           jmp 0x4005de9	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4005dd7	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4005ddc	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4005de1	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_114	CALL_3
0x4005de4	      0xe800000000	                          call 0x4005de9	       148	string3.h	FUNCTION_114	CALL_3
0x4005de9	          0x4889e7	                            mov rdi, rsp	      3569	buffer.c	FUNCTION_61	IF_3
0x4005dec	            0x85db	                           test ebx, ebx	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x4005dee	            0x7e25	                           jle 0x4005e15	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x4005df0	      0xe800000000	                          call 0x4005df5	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4005df5	          0x4889e7	                            mov rdi, rsp	      3569	buffer.c	FUNCTION_61	IF_3
0x4005df8	            0x39c3	                            cmp ebx, eax	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4005dfa	            0x7d19	                           jge 0x4005e15	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4005dfc	      0xb901040000	                          mov ecx, 0x401	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4005e01	            0x89da	                            mov edx, ebx	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4005e03	          0x4889e6	                            mov rsi, rsp	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4005e06	      0xe800000000	                          call 0x4005e0b	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4005e0b	          0x4889e7	                            mov rdi, rsp	      3569	buffer.c	FUNCTION_61	IF_3
0x4005e0e	            0xeb05	                           jmp 0x4005e15	      3569	buffer.c	FUNCTION_61	IF_3
0x4005e10	      0xbf00000000	                              mov edi, 0	      3540	buffer.c	FUNCTION_61
0x4005e15	      0xbe00000000	                              mov esi, 0	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005e1a	      0xe804a7ffff	                      call sym.ti_change	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005e1f	            0x89c3	                            mov ebx, eax	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005e21	      0xbf00000000	                              mov edi, 0	      3542	buffer.c	FUNCTION_61
0x4005e26	    0x833d00000000	               cmp dword [0x04005e2d], 0	      3700	buffer.c	FUNCTION_61	IF_19
0x4005e2d	     0xf8445010000	                            je 0x4005f78	      3700	buffer.c	FUNCTION_61	IF_19
0x4005e33	    0x488b3d000000	            mov rdi, qword [0x04005e3a] 	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005e3a	          0x803f00	                       cmp byte [rdi], 0	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005e3d	     0xf8496000000	                            je 0x4005ed9	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005e43	    0xf60500000000	               test byte [0x04005e4a], 1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005e4a	     0xf8428010000	                            je 0x4005f78	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005e50	    0x8b2d00000000	            mov ebp, dword [0x04005e56] 	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005e56	      0xbe00000000	                              mov esi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005e5b	      0xbf00000000	                              mov edi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005e60	      0xe800000000	                          call 0x4005e65	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005e65	          0x4189c0	                            mov r8d, eax	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005e68	    0xc70500000000	               mov dword [0x04005e72], 0	      3714	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005e72	        0x4883ec08	                              sub rsp, 8	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e76	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e78	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e7a	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e7c	    0x41b900000000	                              mov r9d, 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e82	    0x488b0d000000	            mov rcx, qword [0x04005e89] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e89	      0xba01040000	                          mov edx, 0x401	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e8e	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e93	    0x488b3d000000	            mov rdi, qword [0x04005e9a] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e9a	      0xe800000000	                          call 0x4005e9f	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005e9f	        0x4883c420	                           add rsp, 0x20	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4005ea3	    0x833d00000000	               cmp dword [0x04005eaa], 0	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4005eaa	            0x741f	                            je 0x4005ecb	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4005eac	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005eb2	      0xb901000000	                              mov ecx, 1	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005eb7	      0xba00000000	                              mov edx, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005ebc	      0xbeffffffff	                     mov esi, 0xffffffff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005ec1	      0xbf00000000	                              mov edi, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005ec6	      0xe800000000	                          call 0x4005ecb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4005ecb	     0x92d00000000	              or dword [0x04005ed1], ebp	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005ed1	          0x4889e7	                            mov rdi, rsp	      3702	buffer.c	FUNCTION_61	IF_19
0x4005ed4	      0xe99f000000	                           jmp 0x4005f78	      3702	buffer.c	FUNCTION_61	IF_19
0x4005ed9	    0x488b3d000000	            mov rdi, qword [0x04005ee0] 	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4005ee0	      0xe800000000	                          call 0x4005ee5	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4005ee5	          0x4885c0	                           test rax, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4005ee8	            0x7411	                            je 0x4005efb	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4005eea	    0x488b3d000000	            mov rdi, qword [0x04005ef1] 	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4005ef1	      0xe800000000	                          call 0x4005ef6	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4005ef6	          0x4889c5	                            mov rbp, rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4005ef9	            0xeb16	                           jmp 0x4005f11	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4005efb	    0x488b05000000	            mov rax, qword [0x04005f02] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4005f02	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4005f09	      0xe800000000	                          call 0x4005f0e	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4005f0e	          0x4889c5	                            mov rbp, rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4005f11	        0xc6042400	                       mov byte [rsp], 0	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x4005f15	      0xb800000000	                              mov eax, 0	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f1a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f21	          0x4889ef	                            mov rdi, rbp	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f24	            0xf2ae	              repne scasb al, byte [rdi]	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f26	          0x48f7d1	                                 not rcx	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f29	        0x4883e901	                              sub rcx, 1	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4005f2d	          0x83f964	                           cmp ecx, 0x64	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4005f30	            0x7e26	                           jle 0x4005f58	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4005f32	        0x448d619c	                  lea r12d, [rcx - 0x64]	      3738	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4005f36	    0x833d00000000	               cmp dword [0x04005f3d], 0	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f3d	            0x7413	                            je 0x4005f52	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f3f	          0x4963f4	                        movsxd rsi, r12d	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f42	          0x4801ee	                            add rsi, rbp	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f45	          0x4889ef	                            mov rdi, rbp	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f48	      0xe800000000	                          call 0x4005f4d	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f4d	      0x458d640401	               lea r12d, [r12 + rax + 1]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4005f52	          0x4963cc	                        movsxd rcx, r12d	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4005f55	          0x4801cd	                            add rbp, rcx	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4005f58	      0xba01040000	                          mov edx, 0x401	       110	string3.h	FUNCTION_110	CALL_3
0x4005f5d	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_110	CALL_3
0x4005f60	          0x4889e7	                            mov rdi, rsp	       110	string3.h	FUNCTION_110	CALL_3
0x4005f63	      0xe800000000	                          call 0x4005f68	       110	string3.h	FUNCTION_110	CALL_3
0x4005f68	      0xbe01040000	                          mov esi, 0x401	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4005f6d	          0x4889e7	                            mov rdi, rsp	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4005f70	      0xe800000000	                          call 0x4005f75	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4005f75	          0x4889e7	                            mov rdi, rsp	      3702	buffer.c	FUNCTION_61	IF_19
0x4005f78	      0xbe00000000	                              mov esi, 0	      3750	buffer.c	FUNCTION_61	CALL_46
0x4005f7d	      0xe8a1a5ffff	                      call sym.ti_change	      3750	buffer.c	FUNCTION_61	CALL_46
0x4005f82	             0x9c3	                             or ebx, eax	      3752	buffer.c	FUNCTION_61	IF_26
0x4005f84	            0x7405	                            je 0x4005f8b	      3752	buffer.c	FUNCTION_61	IF_26
0x4005f86	      0xe800000000	                          call 0x4005f8b	      3753	buffer.c	FUNCTION_61	CALL_47
0x4005f8b	    0x488b84240804	           mov rax, qword [rsp + 0x408] 	      3754	buffer.c	FUNCTION_61
0x4005f93	    0x644833042528	                xor rax, qword fs:[0x28]	      3754	buffer.c	FUNCTION_61
0x4005f9c	            0x7405	                            je 0x4005fa3	      3754	buffer.c	FUNCTION_61
0x4005f9e	      0xe800000000	                          call 0x4005fa3	      3754	buffer.c	FUNCTION_61
0x4005fa3	    0x4881c4100400	                          add rsp, 0x410	      3754	buffer.c	FUNCTION_61
0x4005faa	              0x5b	                                 pop rbx	      3754	buffer.c	FUNCTION_61
0x4005fab	              0x5d	                                 pop rbp	      3754	buffer.c	FUNCTION_61
0x4005fac	            0x415c	                                 pop r12	      3754	buffer.c	FUNCTION_61
0x4005fae	            0x415d	                                 pop r13	      3754	buffer.c	FUNCTION_61
0x4005fb0	            0x415e	                                 pop r14	      3754	buffer.c	FUNCTION_61
0x4005fb2	              0xc3	                                     ret	      3754	buffer.c	FUNCTION_61
ex_buffer_all	CALL,27:IF,20:SWITCH,0:ELSE,8:WHILE,0:FOR,4:DO,0:functions,0	258
0x4008af7	            0x4157	                                push r15	      5121	buffer.c	FUNCTION_72
0x4008af9	            0x4156	                                push r14	      5121	buffer.c	FUNCTION_72
0x4008afb	            0x4155	                                push r13	      5121	buffer.c	FUNCTION_72
0x4008afd	            0x4154	                                push r12	      5121	buffer.c	FUNCTION_72
0x4008aff	              0x55	                                push rbp	      5121	buffer.c	FUNCTION_72
0x4008b00	              0x53	                                push rbx	      5121	buffer.c	FUNCTION_72
0x4008b01	        0x4883ec58	                           sub rsp, 0x58	      5121	buffer.c	FUNCTION_72
0x4008b05	    0x64488b042528	                mov rax, qword fs:[0x28]	      5121	buffer.c	FUNCTION_72
0x4008b0e	      0x4889442448	             mov qword [rsp + 0x48], rax	      5121	buffer.c	FUNCTION_72
0x4008b13	            0x31c0	                            xor eax, eax	      5121	buffer.c	FUNCTION_72
0x4008b15	    0x448b35000000	           mov r14d, dword [0x04008b1c] 	      5130	buffer.c	FUNCTION_72
0x4008b1c	    0x41bd0f270000	                        mov r13d, 0x270f	      5134	buffer.c	FUNCTION_72	IF_1
0x4008b22	        0x837f3800	               cmp dword [rdi + 0x38], 0	      5133	buffer.c	FUNCTION_72	IF_1
0x4008b26	            0x7404	                            je 0x4008b2c	      5133	buffer.c	FUNCTION_72	IF_1
0x4008b28	        0x448b6f48	           mov r13d, dword [rdi + 0x48] 	      5136	buffer.c	FUNCTION_72	ELSE_1
0x4008b2c	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b2f	      0x3de1010000	                          cmp eax, 0x1e1	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b34	           0xf94c2	                                 sete dl	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b37	      0x3dab010000	                          cmp eax, 0x1ab	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b3c	           0xf94c0	                                 sete al	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b3f	             0x9c2	                             or edx, eax	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b41	        0x8854240f	                mov byte [rsp + 0xf], dl	      5137	buffer.c	FUNCTION_72	IF_2
0x4008b45	      0xe800000000	                          call 0x4008b4a	      5142	buffer.c	FUNCTION_72	CALL_1
0x4008b4a	    0xc70500000000	               mov dword [0x04008b54], 1	      5145	buffer.c	FUNCTION_72
0x4008b54	          0x4585f6	                         test r14d, r14d	      5152	buffer.c	FUNCTION_72	IF_3
0x4008b57	            0x7e16	                           jle 0x4008b6f	      5152	buffer.c	FUNCTION_72	IF_3
0x4008b59	      0xba01000000	                              mov edx, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x4008b5e	      0xbe01000000	                              mov esi, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x4008b63	    0x488b3d000000	            mov rdi, qword [0x04008b6a] 	      5153	buffer.c	FUNCTION_72	CALL_2
0x4008b6a	      0xe800000000	                          call 0x4008b6f	      5153	buffer.c	FUNCTION_72	CALL_2
0x4008b6f	      0xbd00000000	                              mov ebp, 0	      5134	buffer.c	FUNCTION_72	IF_1
0x4008b74	    0x488b05000000	            mov rax, qword [0x04008b7b] 	      5156	buffer.c	FUNCTION_72	FOR_1
0x4008b7b	          0x4c8b38	                    mov r15, qword [rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0x4008b7e	    0x488b1d000000	            mov rbx, qword [0x04008b85] 	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008b85	          0x4885db	                           test rbx, rbx	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008b88	     0xf84c7000000	                            je 0x4008c55	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008b8e	        0x4c8b6320	            mov r12, qword [rbx + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008b92	        0x488b4308	                mov rax, qword [rbx + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008b96	        0x83787801	               cmp dword [rax + 0x78], 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008b9a	            0x7f65	                            jg 0x4008c01	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008b9c	    0xf60500000000	               test byte [0x04008ba3], 2	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008ba3	            0x743e	                            je 0x4008be3	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008ba5	    0x8b83a4000000	            mov eax, dword [rbx + 0xa4] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bab	     0x383a0000000	             add eax, dword [rbx + 0xa0]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bb1	            0x4898	                                    cdqe	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bb3	      0x4889442410	             mov qword [rsp + 0x10], rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bb8	    0x488b05000000	            mov rax, qword [0x04008bbf] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bbf	    0x482b05000000	             sub rax, qword [0x04008bc6]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bc6	      0x4889442418	             mov qword [rsp + 0x18], rax	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bcb	      0xe800000000	                          call 0x4008bd0	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x4008bd0	            0x4898	                                    cdqe	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bd2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bd7	          0x4829c1	                            sub rcx, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bda	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bdf	            0x7c20	                            jl 0x4008c01	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008be1	            0xeb10	                           jmp 0x4008bf3	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008be3	    0x486383ac0000	         movsxd rax, dword [rbx + 0xac] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bea	    0x483b05000000	            cmp rax, qword [0x04008bf1] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bf1	            0x750e	                           jne 0x4008c01	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bf3	          0x4585f6	                         test r14d, r14d	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bf6	            0x7e4e	                           jle 0x4008c46	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bf8	    0x48391d000000	            cmp qword [0x04008bff], rbx 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008bff	            0x7445	                            je 0x4008c46	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c01	    0x488b05000000	            mov rax, qword [0x04008c08] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c08	    0x483905000000	            cmp qword [0x04008c0f], rax 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c0f	            0x7435	                            je 0x4008c46	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c11	        0x837b2800	               cmp dword [rbx + 0x28], 0	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c15	            0x752f	                           jne 0x4008c46	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c17	        0x488b4308	                mov rax, qword [rbx + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c1b	    0x83b880000000	               cmp dword [rax + 0x80], 0	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c22	            0x7f22	                            jg 0x4008c46	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c24	      0xbe00000000	                              mov esi, 0	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x4008c29	          0x4889df	                            mov rdi, rbx	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x4008c2c	      0xe800000000	                          call 0x4008c31	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x4008c31	    0x488b1d000000	            mov rbx, qword [0x04008c38] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c38	    0x4c8b3d000000	            mov r15, qword [0x04008c3f] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c3f	      0xbd00000000	                              mov ebp, 0	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c44	            0xeb06	                           jmp 0x4008c4c	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4008c46	          0x83c501	                              add ebp, 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0x4008c49	          0x4c89e3	                            mov rbx, r12	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008c4c	          0x4885db	                           test rbx, rbx	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008c4f	     0xf8539ffffff	                           jne 0x4008b8e	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x4008c55	          0x4585f6	                         test r14d, r14d	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4008c58	            0x741c	                            je 0x4008c76	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4008c5a	          0x4d85ff	                           test r15, r15	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4008c5d	            0x7417	                            je 0x4008c76	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4008c5f	      0xba01000000	                              mov edx, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4008c64	      0xbe01000000	                              mov esi, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4008c69	          0x4c89ff	                            mov rdi, r15	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4008c6c	      0xe800000000	                          call 0x4008c71	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4008c71	      0xe9fefeffff	                           jmp 0x4008b74	      5182	buffer.c	FUNCTION_72	FOR_1
0x4008c76	    0x830500000000	               add dword [0x04008c7d], 1	      5190	buffer.c	FUNCTION_72
0x4008c7d	      0xbe00000000	                              mov esi, 0	      5191	buffer.c	FUNCTION_72	CALL_6
0x4008c82	    0x488b3d000000	            mov rdi, qword [0x04008c89] 	      5191	buffer.c	FUNCTION_72	CALL_6
0x4008c89	      0xe800000000	                          call 0x4008c8e	      5191	buffer.c	FUNCTION_72	CALL_6
0x4008c8e	    0x830500000000	               add dword [0x04008c95], 1	      5192	buffer.c	FUNCTION_72
0x4008c95	    0x488b1d000000	            mov rbx, qword [0x04008c9c] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008c9c	          0x4885db	                           test rbx, rbx	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008c9f	     0xf84ac010000	                            je 0x4008e51	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008ca5	          0x4139ed	                           cmp r13d, ebp	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008ca8	     0xf8ea3010000	                           jle 0x4008e51	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008cae	    0x41bc01000000	                             mov r12d, 1	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008cb4	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008cb9	            0x740b	                            je 0x4008cc6	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008cbb	      0x48837b0800	                  cmp qword [rbx + 8], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008cc0	     0xf8479010000	                            je 0x4008e3f	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008cc6	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008ccd	     0xf846c010000	                            je 0x4008e3f	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4008cd3	          0x4585f6	                         test r14d, r14d	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x4008cd6	            0x7413	                            je 0x4008ceb	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x4008cd8	        0x837b7800	               cmp dword [rbx + 0x78], 0	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4008cdc	      0xbf00000000	                              mov edi, 0	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4008ce1	    0x480f4f3d0000	           cmovg rdi, qword [0x04008ce9]	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4008ce9	            0xeb2a	                           jmp 0x4008d15	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4008ceb	    0x488b3d000000	            mov rdi, qword [0x04008cf2] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008cf2	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008cf5	            0x741e	                            je 0x4008d15	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008cf7	        0x48395f08	                cmp qword [rdi + 8], rbx	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4008cfb	            0x750f	                           jne 0x4008d0c	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4008cfd	      0xe905020000	                           jmp 0x4008f07	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4008d02	        0x48395f08	                cmp qword [rdi + 8], rbx	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4008d06	     0xf84fb010000	                            je 0x4008f07	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4008d0c	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008d10	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008d13	            0x75ed	                           jne 0x4008d02	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4008d15	          0x4885ff	                           test rdi, rdi	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d18	     0xf85de000000	                           jne 0x4008dfc	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d1e	        0x4183fc01	                             cmp r12d, 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d22	     0xf85d4000000	                           jne 0x4008dfc	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d28	          0x4889de	                            mov rsi, rbx	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x4008d2b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x4008d30	      0xe800000000	                          call 0x4008d35	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0x4008d35	    0x448b3d000000	           mov r15d, dword [0x04008d3c] 	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d3c	    0xc70500000000	               mov dword [0x04008d46], 1	      5226	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d46	      0xbe21000000	                           mov esi, 0x21	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4008d4b	      0xbf00000000	                              mov edi, 0	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4008d50	      0xe800000000	                          call 0x4008d55	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4008d55	          0x4189c4	                           mov r12d, eax	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4008d58	          0x8d4501	                      lea eax, [rbp + 1]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d5b	        0x89442410	             mov dword [rsp + 0x10], eax	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d5f	    0x44893d000000	           mov dword [0x04008d66], r15d 	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d66	          0x4585e4	                         test r12d, r12d	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x4008d69	            0x7507	                           jne 0x4008d72	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x4008d6b	            0x89c5	                            mov ebp, eax	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d6d	      0xe9cd000000	                           jmp 0x4008e3f	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d72	    0xc70500000000	               mov dword [0x04008d7c], 1	      5235	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008d7c	      0xbe00000000	                              mov esi, 0	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4008d81	          0x4889df	                            mov rdi, rbx	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4008d84	      0xe800000000	                          call 0x4008d89	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4008d89	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x4008d8e	      0xe800000000	                          call 0x4008d93	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x4008d93	            0x85c0	                           test eax, eax	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x4008d95	            0x7513	                           jne 0x4008daa	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0x4008d97	    0xc70500000000	               mov dword [0x04008da1], 0	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x4008da1	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008da5	      0xe9a7000000	                           jmp 0x4008e51	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008daa	    0x833d00000000	               cmp dword [0x04008db1], 2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4008db1	            0x753b	                           jne 0x4008dee	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4008db3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x4008db8	      0xe800000000	                          call 0x4008dbd	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x4008dbd	      0xbe01000000	                              mov esi, 1	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4008dc2	    0x488b3d000000	            mov rdi, qword [0x04008dc9] 	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4008dc9	      0xe800000000	                          call 0x4008dce	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4008dce	    0xc70500000000	               mov dword [0x04008dd8], 0	      5260	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4008dd8	    0xc70500000000	               mov dword [0x04008de2], 1	      5261	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4008de2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4008de7	      0xe800000000	                          call 0x4008dec	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4008dec	            0xeb0e	                           jmp 0x4008dfc	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4008dee	      0xbf00000000	                              mov edi, 0	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x4008df3	      0xe800000000	                          call 0x4008df8	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x4008df8	        0x8b6c2410	            mov ebp, dword [rsp + 0x10] 	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4008dfc	      0xe800000000	                          call 0x4008e01	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x4008e01	    0x8b0500000000	            mov eax, dword [0x04008e07] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4008e07	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4008e09	            0x7407	                            je 0x4008e12	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4008e0b	      0xe800000000	                          call 0x4008e10	      5278	buffer.c	FUNCTION_72	FOR_3	IF_15	CALL_18
0x4008e10	            0xeb3f	                           jmp 0x4008e51	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4008e12	      0xe800000000	                          call 0x4008e17	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4008e17	            0x85c0	                           test eax, eax	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4008e19	            0x7536	                           jne 0x4008e51	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4008e1b	          0x4585f6	                         test r14d, r14d	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e1e	            0x7e1f	                           jle 0x4008e3f	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e20	      0xbf00000000	                              mov edi, 0	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e25	      0xe800000000	                          call 0x4008e2a	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e2a	            0x4898	                                    cdqe	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e2c	    0x483b05000000	            cmp rax, qword [0x04008e33] 	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e33	            0x7f0a	                            jg 0x4008e3f	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4008e35	    0xc70500000000	         mov dword [0x04008e3f], 0x270f 	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0x4008e3f	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008e43	          0x4885db	                           test rbx, rbx	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008e46	            0x7409	                            je 0x4008e51	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008e48	          0x4439ed	                           cmp ebp, r13d	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008e4b	     0xf8c63feffff	                            jl 0x4008cb4	      5193	buffer.c	FUNCTION_72	FOR_3
0x4008e51	    0x832d00000000	               sub dword [0x04008e58], 1	      5290	buffer.c	FUNCTION_72
0x4008e58	      0xbe00000000	                              mov esi, 0	      5291	buffer.c	FUNCTION_72	CALL_21
0x4008e5d	    0x488b3d000000	            mov rdi, qword [0x04008e64] 	      5291	buffer.c	FUNCTION_72	CALL_21
0x4008e64	      0xe800000000	                          call 0x4008e69	      5291	buffer.c	FUNCTION_72	CALL_21
0x4008e69	    0x832d00000000	               sub dword [0x04008e70], 1	      5292	buffer.c	FUNCTION_72
0x4008e70	    0x488b1d000000	            mov rbx, qword [0x04008e77] 	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008e77	          0x4439ed	                           cmp ebp, r13d	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008e7a	     0xf8ea6000000	                           jle 0x4008f26	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008e80	        0x4c8b6308	                mov r12, qword [rbx + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e84	          0x4c89e7	                            mov rdi, r12	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e87	      0xe800000000	                          call 0x4008e8c	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e8c	            0x85c0	                           test eax, eax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008e8e	     0xf8584000000	                           jne 0x4008f18	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008e94	          0x4c89e7	                            mov rdi, r12	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e97	      0xe800000000	                          call 0x4008e9c	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e9c	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008e9e	            0x7478	                            je 0x4008f18	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4008ea0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008ea4	      0xbe00000000	                              mov esi, 0	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008ea9	      0xe800000000	                          call 0x4008eae	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008eae	          0x4189c4	                           mov r12d, eax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4008eb1	          0x4889df	                            mov rdi, rbx	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008eb4	      0xe800000000	                          call 0x4008eb9	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008eb9	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008ebb	            0x7509	                           jne 0x4008ec6	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008ebd	    0x488b1d000000	            mov rbx, qword [0x04008ec4] 	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0x4008ec4	            0xeb36	                           jmp 0x4008efc	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0x4008ec6	        0x4183fc01	                             cmp r12d, 1	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4008eca	            0x7527	                           jne 0x4008ef3	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4008ecc	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008ed0	      0xe800000000	                          call 0x4008ed5	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008ed5	            0x85c0	                           test eax, eax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008ed7	        0x400f94c6	                                sete sil	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008edb	        0x400fb6f6	                          movzx esi, sil	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008edf	          0x4889df	                            mov rdi, rbx	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008ee2	      0xe800000000	                          call 0x4008ee7	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4008ee7	          0x83ed01	                              sub ebp, 1	      5309	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4008eea	    0x488b1d000000	            mov rbx, qword [0x04008ef1] 	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4008ef1	            0xeb09	                           jmp 0x4008efc	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4008ef3	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x4008ef7	          0x4885db	                           test rbx, rbx	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x4008efa	            0x742a	                            je 0x4008f26	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x4008efc	          0x4139ed	                           cmp r13d, ebp	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008eff	     0xf8c7bffffff	                            jl 0x4008e80	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008f05	            0xeb1f	                           jmp 0x4008f26	      5297	buffer.c	FUNCTION_72	FOR_4
0x4008f07	    0x488b35000000	            mov rsi, qword [0x04008f0e] 	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x4008f0e	      0xe800000000	                          call 0x4008f13	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x4008f13	      0xe9e4feffff	                           jmp 0x4008dfc	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x4008f18	          0x4889df	                            mov rdi, rbx	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008f1b	      0xe800000000	                          call 0x4008f20	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008f20	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008f22	            0x7499	                            je 0x4008ebd	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008f24	            0xeba6	                           jmp 0x4008ecc	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4008f26	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5319	buffer.c	FUNCTION_72
0x4008f2b	    0x644833042528	                xor rax, qword fs:[0x28]	      5319	buffer.c	FUNCTION_72
0x4008f34	            0x7405	                            je 0x4008f3b	      5319	buffer.c	FUNCTION_72
0x4008f36	      0xe800000000	                          call 0x4008f3b	      5319	buffer.c	FUNCTION_72
0x4008f3b	        0x4883c458	                           add rsp, 0x58	      5319	buffer.c	FUNCTION_72
0x4008f3f	              0x5b	                                 pop rbx	      5319	buffer.c	FUNCTION_72
0x4008f40	              0x5d	                                 pop rbp	      5319	buffer.c	FUNCTION_72
0x4008f41	            0x415c	                                 pop r12	      5319	buffer.c	FUNCTION_72
0x4008f43	            0x415d	                                 pop r13	      5319	buffer.c	FUNCTION_72
0x4008f45	            0x415e	                                 pop r14	      5319	buffer.c	FUNCTION_72
0x4008f47	            0x415f	                                 pop r15	      5319	buffer.c	FUNCTION_72
0x4008f49	              0xc3	                                     ret	      5319	buffer.c	FUNCTION_72
no_write_message	CALL,5:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	21
0x4000d28	        0x4883ec08	                              sub rsp, 8	      1818	buffer.c	FUNCTION_23
0x4000d2c	    0x488b05000000	            mov rax, qword [0x04000d33] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4000d33	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4000d3a	      0xe800000000	                          call 0x4000d3f	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4000d3f	            0x85c0	                           test eax, eax	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4000d41	            0x741e	                            je 0x4000d61	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x4000d43	      0xba05000000	                              mov edx, 5	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d48	      0xbe00000000	                              mov esi, 0	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d4d	      0xbf00000000	                              mov edi, 0	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d52	      0xe800000000	                          call 0x4000d57	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d57	          0x4889c7	                            mov rdi, rax	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d5a	      0xe800000000	                          call 0x4000d5f	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d5f	            0xeb1c	                           jmp 0x4000d7d	      1821	buffer.c	FUNCTION_23	CALL_3
0x4000d61	      0xba05000000	                              mov edx, 5	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d66	      0xbe00000000	                              mov esi, 0	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d6b	      0xbf00000000	                              mov edi, 0	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d70	      0xe800000000	                          call 0x4000d75	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d75	          0x4889c7	                            mov rdi, rax	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d78	      0xe800000000	                          call 0x4000d7d	      1824	buffer.c	FUNCTION_23	CALL_5
0x4000d7d	        0x4883c408	                              add rsp, 8	      1825	buffer.c	FUNCTION_23
0x4000d81	              0xc3	                                     ret	      1825	buffer.c	FUNCTION_23
ExpandBufnames	CALL,11:IF,11:SWITCH,0:ELSE,1:WHILE,0:FOR,2:DO,0:functions,1	171
0x40010da	            0x4157	                                push r15	      2558	buffer.c	FUNCTION_34
0x40010dc	            0x4156	                                push r14	      2558	buffer.c	FUNCTION_34
0x40010de	            0x4155	                                push r13	      2558	buffer.c	FUNCTION_34
0x40010e0	            0x4154	                                push r12	      2558	buffer.c	FUNCTION_34
0x40010e2	              0x55	                                push rbp	      2558	buffer.c	FUNCTION_34
0x40010e3	              0x53	                                push rbx	      2558	buffer.c	FUNCTION_34
0x40010e4	    0x4881ecf80000	                           sub rsp, 0xf8	      2558	buffer.c	FUNCTION_34
0x40010eb	          0x4889f8	                            mov rax, rdi	      2558	buffer.c	FUNCTION_34
0x40010ee	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2558	buffer.c	FUNCTION_34
0x40010f3	      0x4889742420	             mov qword [rsp + 0x20], rsi	      2558	buffer.c	FUNCTION_34
0x40010f8	          0x4989d7	                            mov r15, rdx	      2558	buffer.c	FUNCTION_34
0x40010fb	          0x4189ce	                           mov r14d, ecx	      2558	buffer.c	FUNCTION_34
0x40010fe	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      2558	buffer.c	FUNCTION_34
0x4001107	    0x4889bc24e800	             mov qword [rsp + 0xe8], rdi	      2558	buffer.c	FUNCTION_34
0x400110f	            0x31ff	                            xor edi, edi	      2558	buffer.c	FUNCTION_34
0x4001111	    0xc70600000000	                      mov dword [rsi], 0	      2566	buffer.c	FUNCTION_34
0x4001117	    0x48c702000000	                      mov qword [rdx], 0	      2567	buffer.c	FUNCTION_34
0x400111e	      0x4889442418	             mov qword [rsp + 0x18], rax	      2579	buffer.c	FUNCTION_34	ELSE_1
0x4001123	          0x80385e	                    cmp byte [rax], 0x5e	      2570	buffer.c	FUNCTION_34	IF_1
0x4001126	     0xf8515020000	                           jne 0x4001341	      2570	buffer.c	FUNCTION_34	IF_1
0x400112c	      0xb800000000	                              mov eax, 0	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001131	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001138	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400113d	            0xf2ae	              repne scasb al, byte [rdi]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400113f	          0x4889c8	                            mov rax, rcx	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001142	          0x48f7d0	                                 not rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001145	          0x8d780a	                    lea edi, [rax + 0xa]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001148	      0xe800000000	                          call 0x400114d	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400114d	          0x4889c1	                            mov rcx, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001150	      0x4889442418	             mov qword [rsp + 0x18], rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001155	      0xb800000000	                              mov eax, 0	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x400115a	          0x4885c9	                           test rcx, rcx	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x400115d	     0xf84c9010000	                            je 0x400132c	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x4001163	    0x48b85c285e5c	          movabs rax, 0x2f5c5b7c5c5e285c	       110	string3.h	FUNCTION_110	CALL_3
0x400116d	          0x488901	                    mov qword [rcx], rax	       110	string3.h	FUNCTION_110	CALL_3
0x4001170	    0xc741085d5c29	          mov dword [rcx + 8], 0x295c5d 	       110	string3.h	FUNCTION_110	CALL_3
0x4001177	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       110	string3.h	FUNCTION_110	CALL_3
0x400117c	        0x488d7701	                      lea rsi, [rdi + 1]	       110	string3.h	FUNCTION_110	CALL_3
0x4001180	        0x488d790b	                    lea rdi, [rcx + 0xb]	       110	string3.h	FUNCTION_110	CALL_3
0x4001184	      0xe800000000	                          call 0x4001189	       110	string3.h	FUNCTION_110	CALL_3
0x4001189	      0xe9b3010000	                           jmp 0x4001341	       110	string3.h	FUNCTION_110	CALL_3
0x400118e	    0x48834424080b	                add qword [rsp + 8], 0xb	       110	string3.h	FUNCTION_110	CALL_3
0x4001194	      0x837c242800	               cmp dword [rsp + 0x28], 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001199	            0x7e0b	                           jle 0x40011a6	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400119b	      0x807c242f00	                cmp byte [rsp + 0x2f], 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40011a0	     0xf8552010000	                           jne 0x40012f8	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40011a6	      0xbe01000000	                              mov esi, 1	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x40011ab	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x40011b0	      0xe800000000	                          call 0x40011b5	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x40011b5	      0x4889442430	             mov qword [rsp + 0x30], rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x40011ba	          0x4885c0	                           test rax, rax	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40011bd	            0x7526	                           jne 0x40011e5	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40011bf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40011c4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40011c9	          0x4839f8	                            cmp rax, rdi	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40011cc	     0xf842d010000	                            je 0x40012ff	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x40011d2	          0x4889c7	                            mov rdi, rax	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011d5	      0xe800000000	                          call 0x40011da	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011da	      0xe920010000	                           jmp 0x40012ff	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011df	        0x4183c401	                             add r12d, 1	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011e3	            0xeb06	                           jmp 0x40011eb	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011e5	    0x41bc02000000	                             mov r12d, 2	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x40011eb	    0x488b1d000000	            mov rbx, qword [0x040011f2] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40011f2	          0x4885db	                           test rbx, rbx	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40011f5	     0xf84da000000	                            je 0x40012d5	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40011fb	      0xbd00000000	                              mov ebp, 0	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001200	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4001207	            0x746b	                            je 0x4001274	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4001209	    0x4c8b2d000000	            mov r13, qword [0x04001210] 	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x4001210	    0x488bb3900000	            mov rsi, qword [rbx + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001217	          0x4489ea	                           mov edx, r13d	      2665	buffer.c	FUNCTION_35	CALL_1
0x400121a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2665	buffer.c	FUNCTION_35	CALL_1
0x400121f	      0xe8b3f1ffff	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001224	          0x4885c0	                           test rax, rax	      2666	buffer.c	FUNCTION_35	IF_1
0x4001227	            0x7519	                           jne 0x4001242	      2666	buffer.c	FUNCTION_35	IF_1
0x4001229	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001230	          0x4489ea	                           mov edx, r13d	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001233	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001238	      0xe89af1ffff	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x400123d	          0x4885c0	                           test rax, rax	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001240	            0x7432	                            je 0x4001274	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001242	        0x4183fc02	                             cmp r12d, 2	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4001246	            0x7505	                           jne 0x400124d	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4001248	          0x83c501	                              add ebp, 1	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x400124b	            0xeb27	                           jmp 0x4001274	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x400124d	          0x4585f6	                         test r14d, r14d	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001250	            0x740d	                            je 0x400125f	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001252	          0x4889c6	                            mov rsi, rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4001255	          0x4889df	                            mov rdi, rbx	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4001258	      0xe800000000	                          call 0x400125d	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400125d	            0xeb08	                           jmp 0x4001267	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400125f	          0x4889c7	                            mov rdi, rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4001262	      0xe800000000	                          call 0x4001267	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4001267	          0x4863cd	                         movsxd rcx, ebp	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x400126a	          0x498b17	                    mov rdx, qword [r15]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x400126d	        0x488904ca	            mov qword [rdx + rcx*8], rax	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001271	          0x8d6d01	                      lea ebp, [rbp + 1]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001274	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001278	          0x4885db	                           test rbx, rbx	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400127b	            0x7583	                           jne 0x4001200	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400127d	            0x85ed	                           test ebp, ebp	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x400127f	     0xf84e4000000	                            je 0x4001369	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x4001285	        0x4183fc02	                             cmp r12d, 2	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4001289	            0x753b	                           jne 0x40012c6	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x400128b	    0x8d3ced000000	                        lea edi, [rbp*8]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4001292	      0xe800000000	                          call 0x4001297	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4001297	          0x498907	                    mov qword [r15], rax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x400129a	          0x4885c0	                           test rax, rax	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x400129d	     0xf853cffffff	                           jne 0x40011df	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x40012a3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x40012a8	      0xe800000000	                          call 0x40012ad	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x40012ad	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x40012b2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x40012b7	          0x4839f8	                            cmp rax, rdi	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x40012ba	            0x7443	                            je 0x40012ff	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x40012bc	          0x4889c7	                            mov rdi, rax	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x40012bf	      0xe800000000	                          call 0x40012c4	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x40012c4	            0xeb39	                           jmp 0x40012ff	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x40012c6	        0x4183fc02	                             cmp r12d, 2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40012ca	     0xf8e0fffffff	                           jle 0x40011df	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40012d0	      0xe9a3000000	                           jmp 0x4001378	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40012d5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40012da	      0xe800000000	                          call 0x40012df	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40012df	      0x8344242801	               add dword [rsp + 0x28], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012e4	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012e8	          0x83f802	                              cmp eax, 2	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012eb	     0xf859dfeffff	                           jne 0x400118e	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012f1	      0xbd00000000	                              mov ebp, 0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012f6	            0xeb0e	                           jmp 0x4001306	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x40012f8	      0xbd00000000	                              mov ebp, 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40012fd	            0xeb07	                           jmp 0x4001306	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x40012ff	      0xb800000000	                              mov eax, 0	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4001304	            0xeb26	                           jmp 0x400132c	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4001306	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2644	buffer.c	FUNCTION_34	IF_11
0x400130b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2644	buffer.c	FUNCTION_34	IF_11
0x4001310	          0x4839c8	                            cmp rax, rcx	      2644	buffer.c	FUNCTION_34	IF_11
0x4001313	            0x7408	                            je 0x400131d	      2644	buffer.c	FUNCTION_34	IF_11
0x4001315	          0x4889c7	                            mov rdi, rax	      2645	buffer.c	FUNCTION_34	CALL_11
0x4001318	      0xe800000000	                          call 0x400131d	      2645	buffer.c	FUNCTION_34	CALL_11
0x400131d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2647	buffer.c	FUNCTION_34
0x4001322	            0x8928	                    mov dword [rax], ebp	      2647	buffer.c	FUNCTION_34
0x4001324	            0x85ed	                           test ebp, ebp	      2648	buffer.c	FUNCTION_34
0x4001326	           0xf95c0	                                setne al	      2648	buffer.c	FUNCTION_34
0x4001329	           0xfb6c0	                           movzx eax, al	      2648	buffer.c	FUNCTION_34
0x400132c	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      2649	buffer.c	FUNCTION_34
0x4001334	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2649	buffer.c	FUNCTION_34
0x400133d	            0x744a	                            je 0x4001389	      2649	buffer.c	FUNCTION_34
0x400133f	            0xeb43	                           jmp 0x4001384	      2649	buffer.c	FUNCTION_34
0x4001341	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001346	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400134b	          0x4839c8	                            cmp rax, rcx	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400134e	       0xf9444242f	                  sete byte [rsp + 0x2f]	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001353	      0x4889442408	                mov qword [rsp + 8], rax	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001358	    0xc74424280000	               mov dword [rsp + 0x28], 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001360	        0x4183e602	                             and r14d, 2	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001364	      0xe93dfeffff	                           jmp 0x40011a6	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001369	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x400136e	      0xe800000000	                          call 0x4001373	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4001373	      0xe967ffffff	                           jmp 0x40012df	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4001378	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x400137d	      0xe800000000	                          call 0x4001382	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4001382	            0xeb82	                           jmp 0x4001306	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4001384	      0xe800000000	                          call 0x4001389	      2649	buffer.c	FUNCTION_34
0x4001389	    0x4881c4f80000	                           add rsp, 0xf8	      2649	buffer.c	FUNCTION_34
0x4001390	              0x5b	                                 pop rbx	      2649	buffer.c	FUNCTION_34
0x4001391	              0x5d	                                 pop rbp	      2649	buffer.c	FUNCTION_34
0x4001392	            0x415c	                                 pop r12	      2649	buffer.c	FUNCTION_34
0x4001394	            0x415d	                                 pop r13	      2649	buffer.c	FUNCTION_34
0x4001396	            0x415e	                                 pop r14	      2649	buffer.c	FUNCTION_34
0x4001398	            0x415f	                                 pop r15	      2649	buffer.c	FUNCTION_34
0x400139a	              0xc3	                                     ret	      2649	buffer.c	FUNCTION_34
find_win_for_buf	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	33
0x4002de7	    0x488b05000000	            mov rax, qword [0x04002dee] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002dee	          0x488902	                    mov qword [rdx], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002df1	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002df4	            0x7448	                            je 0x4002e3e	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002df6	    0x483905000000	            cmp qword [0x04002dfd], rax 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002dfd	            0x7406	                            je 0x4002e05	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002dff	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e03	            0xeb07	                           jmp 0x4002e0c	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e05	    0x488b05000000	            mov rax, qword [0x04002e0c] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e0c	          0x488906	                    mov qword [rsi], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e0f	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e12	            0x741a	                            je 0x4002e2e	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e14	        0x483b7808	                cmp rdi, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x4002e18	            0x7508	                           jne 0x4002e22	      5769	buffer.c	FUNCTION_87	IF_1
0x4002e1a	            0xeb28	                           jmp 0x4002e44	      5769	buffer.c	FUNCTION_87	IF_1
0x4002e1c	        0x48397808	                cmp qword [rax + 8], rdi	      5769	buffer.c	FUNCTION_87	IF_1
0x4002e20	            0x7428	                            je 0x4002e4a	      5769	buffer.c	FUNCTION_87	IF_1
0x4002e22	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e26	          0x488906	                    mov qword [rsi], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e29	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e2c	            0x75ee	                           jne 0x4002e1c	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e2e	          0x488b02	                    mov rax, qword [rdx]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e31	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e34	          0x488902	                    mov qword [rdx], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e37	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e3a	            0x75ba	                           jne 0x4002df6	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e3c	            0xf3c3	                                     ret	      5768	buffer.c	FUNCTION_87	CALL_1
0x4002e3e	      0xb800000000	                              mov eax, 0	      5771	buffer.c	FUNCTION_87
0x4002e43	              0xc3	                                     ret	      5771	buffer.c	FUNCTION_87
0x4002e44	      0xb801000000	                              mov eax, 1	      5773	buffer.c	FUNCTION_87
0x4002e49	              0xc3	                                     ret	      5773	buffer.c	FUNCTION_87
0x4002e4a	      0xb801000000	                              mov eax, 1	      5773	buffer.c	FUNCTION_87
0x4002e4f	              0xc3	                                     ret	      5774	buffer.c	FUNCTION_87
setaltfname	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	12
0x4008f4a	        0x4883ec08	                              sub rsp, 8	      3224	buffer.c	FUNCTION_50
0x4008f4e	      0xb900000000	                              mov ecx, 0	      3228	buffer.c	FUNCTION_50	CALL_1
0x4008f53	      0xe800000000	                          call 0x4008f58	      3228	buffer.c	FUNCTION_50	CALL_1
0x4008f58	          0x4885c0	                           test rax, rax	      3229	buffer.c	FUNCTION_50	IF_1
0x4008f5b	            0x741c	                            je 0x4008f79	      3229	buffer.c	FUNCTION_50	IF_1
0x4008f5d	    0x833d00000000	               cmp dword [0x04008f64], 0	      3229	buffer.c	FUNCTION_50	IF_1
0x4008f64	            0x7513	                           jne 0x4008f79	      3229	buffer.c	FUNCTION_50	IF_1
0x4008f66	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4008f6c	    0x488b15000000	            mov rdx, qword [0x04008f73] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4008f73	    0x898a78010000	            mov dword [rdx + 0x178], ecx	      3230	buffer.c	FUNCTION_50	IF_1
0x4008f79	        0x4883c408	                              add rsp, 8	      3232	buffer.c	FUNCTION_50
0x4008f7d	              0xc3	                                     ret	      3232	buffer.c	FUNCTION_50
buf_valid	CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	18
0x40009e9	    0x488b05000000	            mov rax, qword [0x040009f0] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40009f0	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40009f3	            0x7417	                            je 0x4000a0c	       392	buffer.c	FUNCTION_5	FOR_1
0x40009f5	          0x4839f8	                            cmp rax, rdi	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40009f8	            0x7507	                           jne 0x4000a01	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40009fa	            0xeb16	                           jmp 0x4000a12	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40009fc	          0x4839c7	                            cmp rdi, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40009ff	            0x7417	                            je 0x4000a18	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a01	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a05	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a08	            0x75f2	                           jne 0x40009fc	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a0a	            0xf3c3	                                     ret	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a0c	      0xb800000000	                              mov eax, 0	       395	buffer.c	FUNCTION_5
0x4000a11	              0xc3	                                     ret	       395	buffer.c	FUNCTION_5
0x4000a12	      0xb801000000	                              mov eax, 1	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a17	              0xc3	                                     ret	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a18	      0xb801000000	                              mov eax, 1	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a1d	              0xc3	                                     ret	       396	buffer.c	FUNCTION_5
resettitle	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	6
0x4001f53	        0x4883ec08	                              sub rsp, 8	      3782	buffer.c	FUNCTION_63
0x4001f57	    0x488b35000000	            mov rsi, qword [0x04001f5e] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4001f5e	    0x488b3d000000	            mov rdi, qword [0x04001f65] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4001f65	      0xe800000000	                          call 0x4001f6a	      3783	buffer.c	FUNCTION_63	CALL_1
0x4001f6a	        0x4883c408	                              add rsp, 8	      3784	buffer.c	FUNCTION_63
0x4001f6e	              0xc3	                                     ret	      3784	buffer.c	FUNCTION_63
fix_fname	CALL,9:IF,3:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	5
0x40020ea	        0x4883ec08	                              sub rsp, 8	      4749	buffer.c	FUNCTION_68
0x40020ee	      0xbe01000000	                              mov esi, 1	      4759	buffer.c	FUNCTION_68	CALL_1
0x40020f3	      0xe800000000	                          call 0x40020f8	      4759	buffer.c	FUNCTION_68	CALL_1
0x40020f8	        0x4883c408	                              add rsp, 8	      4787	buffer.c	FUNCTION_68
0x40020fc	              0xc3	                                     ret	      4787	buffer.c	FUNCTION_68
buflist_setfpos	CALL,5:IF,10:SWITCH,0:ELSE,2:WHILE,0:FOR,1:DO,0:functions,0	100
0x40001fa	            0x4157	                                push r15	      2757	buffer.c	FUNCTION_39
0x40001fc	            0x4156	                                push r14	      2757	buffer.c	FUNCTION_39
0x40001fe	            0x4155	                                push r13	      2757	buffer.c	FUNCTION_39
0x4000200	            0x4154	                                push r12	      2757	buffer.c	FUNCTION_39
0x4000202	              0x55	                                push rbp	      2757	buffer.c	FUNCTION_39
0x4000203	              0x53	                                push rbx	      2757	buffer.c	FUNCTION_39
0x4000204	        0x4883ec08	                              sub rsp, 8	      2757	buffer.c	FUNCTION_39
0x4000208	          0x4989fc	                            mov r12, rdi	      2757	buffer.c	FUNCTION_39
0x400020b	          0x4889f5	                            mov rbp, rsi	      2757	buffer.c	FUNCTION_39
0x400020e	          0x4989d5	                            mov r13, rdx	      2757	buffer.c	FUNCTION_39
0x4000211	          0x4189cf	                           mov r15d, ecx	      2757	buffer.c	FUNCTION_39
0x4000214	          0x4589c6	                           mov r14d, r8d	      2757	buffer.c	FUNCTION_39
0x4000217	    0x488b9f280100	           mov rbx, qword [rdi + 0x128] 	      2760	buffer.c	FUNCTION_39	FOR_1
0x400021e	          0x4885db	                           test rbx, rbx	      2760	buffer.c	FUNCTION_39	FOR_1
0x4000221	     0xf84f5000000	                            je 0x400031c	      2760	buffer.c	FUNCTION_39	FOR_1
0x4000227	        0x483b7310	            cmp rsi, qword [rbx + 0x10] 	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x400022b	            0x750f	                           jne 0x400023c	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x400022d	      0xe902010000	                           jmp 0x4000334	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4000232	        0x48396b10	            cmp qword [rbx + 0x10], rbp 	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4000236	     0xf84f8000000	                            je 0x4000334	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x400023c	          0x488b1b	                    mov rbx, qword [rbx]	      2760	buffer.c	FUNCTION_39	FOR_1
0x400023f	          0x4885db	                           test rbx, rbx	      2760	buffer.c	FUNCTION_39	FOR_1
0x4000242	            0x75ee	                           jne 0x4000232	      2760	buffer.c	FUNCTION_39	FOR_1
0x4000244	      0xe9d3000000	                           jmp 0x400031c	      2760	buffer.c	FUNCTION_39	FOR_1
0x4000249	        0x48896b10	             mov qword [rbx + 0x10], rbp	      2769	buffer.c	FUNCTION_39	IF_2
0x400024d	          0x4d85ed	                           test r13, r13	      2770	buffer.c	FUNCTION_39	IF_2	IF_4
0x4000250	      0xb801000000	                              mov eax, 1	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x4000255	        0x4c0f44e8	                          cmove r13, rax	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x4000259	        0x4c896b18	             mov qword [rbx + 0x18], r13	      2792	buffer.c	FUNCTION_39	IF_8
0x400025d	        0x44897b20	            mov dword [rbx + 0x20], r15d	      2793	buffer.c	FUNCTION_39	IF_8
0x4000261	          0x4585f6	                         test r14d, r14d	      2795	buffer.c	FUNCTION_39	IF_9
0x4000264	     0xf8489000000	                            je 0x40002f3	      2795	buffer.c	FUNCTION_39	IF_9
0x400026a	            0xeb50	                           jmp 0x40002bc	      2795	buffer.c	FUNCTION_39	IF_9
0x400026c	          0x488b13	                    mov rdx, qword [rbx]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x400026f	          0x488910	                    mov qword [rax], rdx	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4000272	            0xeb0b	                           jmp 0x400027f	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4000274	          0x488b03	                    mov rax, qword [rbx]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x4000277	    0x498984242801	            mov qword [r12 + 0x128], rax	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x400027f	          0x488b03	                    mov rax, qword [rbx]	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4000282	          0x4885c0	                           test rax, rax	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4000285	            0x7408	                            je 0x400028f	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x4000287	        0x488b5308	                mov rdx, qword [rbx + 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x400028b	        0x48895008	                mov qword [rax + 8], rdx	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x400028f	          0x4585f6	                         test r14d, r14d	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4000292	     0xf84b8000000	                            je 0x4000350	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x4000298	        0x837b2800	               cmp dword [rbx + 0x28], 0	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x400029c	     0xf84a4000000	                            je 0x4000346	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x40002a2	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x40002a6	      0xe800000000	                          call 0x40002ab	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x40002ab	    0x488dbbf00100	                  lea rdi, [rbx + 0x1f0]	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x40002b2	      0xe800000000	                          call 0x40002b7	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x40002b7	      0xe98a000000	                           jmp 0x4000346	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x40002bc	        0x488d7330	                   lea rsi, [rbx + 0x30]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x40002c0	    0x488dbdb00100	                  lea rdi, [rbp + 0x1b0]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x40002c7	      0xe800000000	                          call 0x40002cc	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x40002cc	     0xfbe85200100	          movsx eax, byte [rbp + 0x120] 	      2800	buffer.c	FUNCTION_39	IF_9
0x40002d3	    0x8983e8010000	            mov dword [rbx + 0x1e8], eax	      2800	buffer.c	FUNCTION_39	IF_9
0x40002d9	    0x488db3f00100	                  lea rsi, [rbx + 0x1f0]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x40002e0	    0x488dbd080100	                  lea rdi, [rbp + 0x108]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x40002e7	      0xe800000000	                          call 0x40002ec	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x40002ec	    0xc74328010000	               mov dword [rbx + 0x28], 1	      2803	buffer.c	FUNCTION_39	IF_9
0x40002f3	    0x498b84242801	           mov rax, qword [r12 + 0x128] 	      2807	buffer.c	FUNCTION_39
0x40002fb	          0x488903	                    mov qword [rbx], rax	      2807	buffer.c	FUNCTION_39
0x40002fe	    0x49899c242801	            mov qword [r12 + 0x128], rbx	      2808	buffer.c	FUNCTION_39
0x4000306	    0x48c743080000	                  mov qword [rbx + 8], 0	      2809	buffer.c	FUNCTION_39
0x400030e	          0x488b03	                    mov rax, qword [rbx]	      2810	buffer.c	FUNCTION_39	IF_10
0x4000311	          0x4885c0	                           test rax, rax	      2810	buffer.c	FUNCTION_39	IF_10
0x4000314	            0x7458	                            je 0x400036e	      2810	buffer.c	FUNCTION_39	IF_10
0x4000316	        0x48895808	                mov qword [rax + 8], rbx	      2811	buffer.c	FUNCTION_39	IF_10
0x400031a	            0xeb52	                           jmp 0x400036e	      2811	buffer.c	FUNCTION_39	IF_10
0x400031c	      0xbf08020000	                          mov edi, 0x208	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x4000321	      0xe800000000	                          call 0x4000326	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x4000326	          0x4889c3	                            mov rbx, rax	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x4000329	          0x4885c0	                           test rax, rax	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x400032c	     0xf8517ffffff	                           jne 0x4000249	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x4000332	            0xeb3a	                           jmp 0x400036e	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x4000334	        0x488b4308	                mov rax, qword [rbx + 8]	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4000338	          0x4885c0	                           test rax, rax	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x400033b	     0xf852bffffff	                           jne 0x400026c	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4000341	      0xe92effffff	                           jmp 0x4000274	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4000346	          0x4d85ed	                           test r13, r13	      2790	buffer.c	FUNCTION_39	IF_8
0x4000349	            0x750c	                           jne 0x4000357	      2790	buffer.c	FUNCTION_39	IF_8
0x400034b	      0xe96cffffff	                           jmp 0x40002bc	      2790	buffer.c	FUNCTION_39	IF_8
0x4000350	          0x4d85ed	                           test r13, r13	      2790	buffer.c	FUNCTION_39	IF_8
0x4000353	            0x749e	                            je 0x40002f3	      2790	buffer.c	FUNCTION_39	IF_8
0x4000355	            0xeb0d	                           jmp 0x4000364	      2790	buffer.c	FUNCTION_39	IF_8
0x4000357	        0x4c896b18	             mov qword [rbx + 0x18], r13	      2792	buffer.c	FUNCTION_39	IF_8
0x400035b	        0x44897b20	            mov dword [rbx + 0x20], r15d	      2793	buffer.c	FUNCTION_39	IF_8
0x400035f	      0xe958ffffff	                           jmp 0x40002bc	      2793	buffer.c	FUNCTION_39	IF_8
0x4000364	        0x4c896b18	             mov qword [rbx + 0x18], r13	      2792	buffer.c	FUNCTION_39	IF_8
0x4000368	        0x44897b20	            mov dword [rbx + 0x20], r15d	      2793	buffer.c	FUNCTION_39	IF_8
0x400036c	            0xeb85	                           jmp 0x40002f3	      2793	buffer.c	FUNCTION_39	IF_8
0x400036e	        0x4883c408	                              add rsp, 8	      2814	buffer.c	FUNCTION_39
0x4000372	              0x5b	                                 pop rbx	      2814	buffer.c	FUNCTION_39
0x4000373	              0x5d	                                 pop rbp	      2814	buffer.c	FUNCTION_39
0x4000374	            0x415c	                                 pop r12	      2814	buffer.c	FUNCTION_39
0x4000376	            0x415d	                                 pop r13	      2814	buffer.c	FUNCTION_39
0x4000378	            0x415e	                                 pop r14	      2814	buffer.c	FUNCTION_39
0x400037a	            0x415f	                                 pop r15	      2814	buffer.c	FUNCTION_39
0x400037c	              0xc3	                                     ret	      2814	buffer.c	FUNCTION_39
wipe_buffer	CALL,3:IF,3:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	25
0x4009358	              0x53	                                push rbx	      6228	buffer.c	FUNCTION_103
0x4009359	          0x4889fb	                            mov rbx, rdi	      6228	buffer.c	FUNCTION_103
0x400935c	    0x8b97b8000000	            mov edx, dword [rdi + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0x4009362	    0x8b0500000000	            mov eax, dword [0x04009368] 	      6229	buffer.c	FUNCTION_103	IF_1
0x4009368	          0x83e801	                              sub eax, 1	      6229	buffer.c	FUNCTION_103	IF_1
0x400936b	            0x39c2	                            cmp edx, eax	      6229	buffer.c	FUNCTION_103	IF_1
0x400936d	            0x7506	                           jne 0x4009375	      6229	buffer.c	FUNCTION_103	IF_1
0x400936f	    0x891500000000	            mov dword [0x04009375], edx 	      6230	buffer.c	FUNCTION_103	IF_1
0x4009375	            0x85f6	                           test esi, esi	      6232	buffer.c	FUNCTION_103	IF_2
0x4009377	            0x7523	                           jne 0x400939c	      6232	buffer.c	FUNCTION_103	IF_2
0x4009379	      0xe800000000	                          call 0x400937e	      6233	buffer.c	FUNCTION_103	CALL_1
0x400937e	      0xb900000000	                              mov ecx, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x4009383	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x4009388	          0x4889de	                            mov rsi, rbx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400938b	      0xbf00000000	                              mov edi, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x4009390	      0xe800000000	                          call 0x4009395	      6235	buffer.c	FUNCTION_103	CALL_2
0x4009395	      0xe800000000	                          call 0x400939a	      6238	buffer.c	FUNCTION_103	CALL_3
0x400939a	            0xeb17	                           jmp 0x40093b3	      6239	buffer.c	FUNCTION_103
0x400939c	      0xb900000000	                              mov ecx, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x40093a1	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x40093a6	          0x4889de	                            mov rsi, rbx	      6235	buffer.c	FUNCTION_103	CALL_2
0x40093a9	      0xbf00000000	                              mov edi, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0x40093ae	      0xe800000000	                          call 0x40093b3	      6235	buffer.c	FUNCTION_103	CALL_2
0x40093b3	              0x5b	                                 pop rbx	      6239	buffer.c	FUNCTION_103
0x40093b4	              0xc3	                                     ret	      6239	buffer.c	FUNCTION_103
buflist_getfpos	CALL,3:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	22
0x4001b1c	              0x53	                                push rbx	      2333	buffer.c	FUNCTION_29
0x4001b1d	    0x488b3d000000	            mov rdi, qword [0x04001b24] 	      2336	buffer.c	FUNCTION_29	CALL_1
0x4001b24	      0xe800000000	                          call 0x4001b29	      2336	buffer.c	FUNCTION_29	CALL_1
0x4001b29	          0x4889c3	                            mov rbx, rax	      2336	buffer.c	FUNCTION_29	CALL_1
0x4001b2c	          0x488b10	                    mov rdx, qword [rax]	      2338	buffer.c	FUNCTION_29
0x4001b2f	    0x488b05000000	            mov rax, qword [0x04001b36] 	      2338	buffer.c	FUNCTION_29
0x4001b36	        0x48895038	             mov qword [rax + 0x38], rdx	      2338	buffer.c	FUNCTION_29
0x4001b3a	      0xe800000000	                          call 0x4001b3f	      2339	buffer.c	FUNCTION_29	CALL_2
0x4001b3f	    0x833d00000000	               cmp dword [0x04001b46], 0	      2341	buffer.c	FUNCTION_29	IF_1
0x4001b46	            0x7410	                            je 0x4001b58	      2341	buffer.c	FUNCTION_29	IF_1
0x4001b48	    0x488b05000000	            mov rax, qword [0x04001b4f] 	      2342	buffer.c	FUNCTION_29	IF_1
0x4001b4f	    0xc74040000000	               mov dword [rax + 0x40], 0	      2342	buffer.c	FUNCTION_29	IF_1
0x4001b56	            0xeb27	                           jmp 0x4001b7f	      2342	buffer.c	FUNCTION_29	IF_1
0x4001b58	          0x8b5308	                mov edx, dword [rbx + 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4001b5b	    0x488b05000000	            mov rax, qword [0x04001b62] 	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4001b62	          0x895040	             mov dword [rax + 0x40], edx	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4001b65	      0xe800000000	                          call 0x4001b6a	      2346	buffer.c	FUNCTION_29	ELSE_1	CALL_3
0x4001b6a	    0x488b05000000	            mov rax, qword [0x04001b71] 	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4001b71	    0xc74044000000	               mov dword [rax + 0x44], 0	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4001b78	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2350	buffer.c	FUNCTION_29	ELSE_1
0x4001b7f	              0x5b	                                 pop rbx	      2352	buffer.c	FUNCTION_29
0x4001b80	              0xc3	                                     ret	      2352	buffer.c	FUNCTION_29
bt_nofile	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	19
0x4002481	          0x4885ff	                           test rdi, rdi	      5628	buffer.c	FUNCTION_80
0x4002484	            0x742c	                            je 0x40024b2	      5628	buffer.c	FUNCTION_80
0x4002486	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5628	buffer.c	FUNCTION_80
0x400248d	           0xfb610	                   movzx edx, byte [rax]	      5628	buffer.c	FUNCTION_80
0x4002490	          0x80fa6e	                            cmp dl, 0x6e	      5628	buffer.c	FUNCTION_80
0x4002493	            0x750b	                           jne 0x40024a0	      5628	buffer.c	FUNCTION_80
0x4002495	        0x80780266	                cmp byte [rax + 2], 0x66	      5628	buffer.c	FUNCTION_80
0x4002499	           0xf94c0	                                 sete al	      5628	buffer.c	FUNCTION_80
0x400249c	           0xfb6c0	                           movzx eax, al	      5628	buffer.c	FUNCTION_80
0x400249f	              0xc3	                                     ret	      5628	buffer.c	FUNCTION_80
0x40024a0	          0x80fa74	                            cmp dl, 0x74	      5628	buffer.c	FUNCTION_80
0x40024a3	           0xf94c1	                                 sete cl	      5628	buffer.c	FUNCTION_80
0x40024a6	          0x80fa61	                            cmp dl, 0x61	      5628	buffer.c	FUNCTION_80
0x40024a9	           0xf94c0	                                 sete al	      5628	buffer.c	FUNCTION_80
0x40024ac	             0x9c8	                             or eax, ecx	      5628	buffer.c	FUNCTION_80
0x40024ae	           0xfb6c0	                           movzx eax, al	      5628	buffer.c	FUNCTION_80
0x40024b1	              0xc3	                                     ret	      5628	buffer.c	FUNCTION_80
0x40024b2	      0xb800000000	                              mov eax, 0	      5628	buffer.c	FUNCTION_80
0x40024b7	              0xc3	                                     ret	      5631	buffer.c	FUNCTION_80
fname_expand	CALL,3:IF,4:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	13
0x40020fd	          0x488b06	                    mov rax, qword [rsi]	      4799	buffer.c	FUNCTION_69	IF_1
0x4002100	          0x4885c0	                           test rax, rax	      4799	buffer.c	FUNCTION_69	IF_1
0x4002103	            0x7419	                            je 0x400211e	      4799	buffer.c	FUNCTION_69	IF_1
0x4002105	              0x53	                                push rbx	      4798	buffer.c	FUNCTION_69
0x4002106	        0x48833a00	                      cmp qword [rdx], 0	      4801	buffer.c	FUNCTION_69	IF_2
0x400210a	            0x7503	                           jne 0x400210f	      4801	buffer.c	FUNCTION_69	IF_2
0x400210c	          0x488902	                    mov qword [rdx], rax	      4802	buffer.c	FUNCTION_69	IF_2
0x400210f	          0x4889f3	                            mov rbx, rsi	      4802	buffer.c	FUNCTION_69	IF_2
0x4002112	          0x488b3e	                    mov rdi, qword [rsi]	      4803	buffer.c	FUNCTION_69	CALL_1
0x4002115	      0xe800000000	                          call 0x400211a	      4803	buffer.c	FUNCTION_69	CALL_1
0x400211a	          0x488903	                    mov qword [rbx], rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x400211d	              0x5b	                                 pop rbx	      4820	buffer.c	FUNCTION_69
0x400211e	            0xf3c3	                                     ret	      4820	buffer.c	FUNCTION_69
buf_change_sign_type	CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	17
0x4006137	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x400613e	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006141	            0x741d	                            je 0x4006160	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006143	            0x3b30	                    cmp esi, dword [rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006145	            0x750e	                           jne 0x4006155	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006147	            0xeb04	                           jmp 0x400614d	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006149	            0x3930	                    cmp dword [rax], esi	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400614b	            0x7508	                           jne 0x4006155	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400614d	          0x895010	             mov dword [rax + 0x10], edx	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006150	        0x488b4008	                mov rax, qword [rax + 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006154	              0xc3	                                     ret	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006155	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006159	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400615c	            0x75eb	                           jne 0x4006149	      5897	buffer.c	FUNCTION_90	FOR_1
0x400615e	            0xf3c3	                                     ret	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006160	      0xb800000000	                              mov eax, 0	      5906	buffer.c	FUNCTION_90
0x4006165	              0xc3	                                     ret	      5907	buffer.c	FUNCTION_90
insert_sign	CALL,4:IF,5:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	52
0x4000916	            0x4157	                                push r15	      5789	buffer.c	FUNCTION_88
0x4000918	            0x4156	                                push r14	      5789	buffer.c	FUNCTION_88
0x400091a	            0x4155	                                push r13	      5789	buffer.c	FUNCTION_88
0x400091c	            0x4154	                                push r12	      5789	buffer.c	FUNCTION_88
0x400091e	              0x55	                                push rbp	      5789	buffer.c	FUNCTION_88
0x400091f	              0x53	                                push rbx	      5789	buffer.c	FUNCTION_88
0x4000920	        0x4883ec18	                           sub rsp, 0x18	      5789	buffer.c	FUNCTION_88
0x4000924	      0x48897c2408	                mov qword [rsp + 8], rdi	      5789	buffer.c	FUNCTION_88
0x4000929	          0x4889f5	                            mov rbp, rsi	      5789	buffer.c	FUNCTION_88
0x400092c	          0x4989d4	                            mov r12, rdx	      5789	buffer.c	FUNCTION_88
0x400092f	          0x4189cf	                           mov r15d, ecx	      5789	buffer.c	FUNCTION_88
0x4000932	          0x4d89c6	                             mov r14, r8	      5789	buffer.c	FUNCTION_88
0x4000935	          0x4589cd	                           mov r13d, r9d	      5789	buffer.c	FUNCTION_88
0x4000938	      0xbe00000000	                              mov esi, 0	      5792	buffer.c	FUNCTION_88	CALL_1
0x400093d	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x4000942	      0xe800000000	                          call 0x4000947	      5792	buffer.c	FUNCTION_88	CALL_1
0x4000947	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400094a	            0x746c	                            je 0x40009b8	      5793	buffer.c	FUNCTION_88	IF_1
0x400094c	          0x4889c3	                            mov rbx, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400094f	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x4000952	        0x4c897008	                mov qword [rax + 8], r14	      5796	buffer.c	FUNCTION_88	IF_1
0x4000956	        0x44896810	            mov dword [rax + 0x10], r13d	      5797	buffer.c	FUNCTION_88	IF_1
0x400095a	        0x4c896018	             mov qword [rax + 0x18], r12	      5798	buffer.c	FUNCTION_88	IF_1
0x400095e	        0x48896820	             mov qword [rax + 0x20], rbp	      5800	buffer.c	FUNCTION_88	IF_1
0x4000962	          0x4d85e4	                           test r12, r12	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x4000965	            0x7405	                            je 0x400096c	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x4000967	      0x4989442420	             mov qword [r12 + 0x20], rax	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400096c	          0x4885ed	                           test rbp, rbp	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400096f	            0x7543	                           jne 0x40009b4	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x4000971	      0x488b442408	                mov rax, qword [rsp + 8]	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x4000976	    0x4883b8201c00	             cmp qword [rax + 0x1c20], 0	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400097e	            0x7512	                           jne 0x4000992	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x4000980	      0xbe28000000	                           mov esi, 0x28	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x4000985	          0x4889c7	                            mov rdi, rax	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x4000988	      0xe800000000	                          call 0x400098d	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400098d	      0xe800000000	                          call 0x4000992	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x4000992	      0x4c8b742408	                mov r14, qword [rsp + 8]	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x4000997	    0x49899e201c00	          mov qword [r14 + 0x1c20], rbx 	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x400099e	      0xe800000000	                          call 0x40009a3	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40009a3	            0x85c0	                           test eax, eax	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40009a5	            0x7411	                            je 0x40009b8	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40009a7	    0x41c786281c00	            mov dword [r14 + 0x1c28], 1 	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x40009b2	            0xeb04	                           jmp 0x40009b8	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x40009b4	        0x48895d18	            mov qword [rbp + 0x18], rbx 	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x40009b8	        0x4883c418	                           add rsp, 0x18	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009bc	              0x5b	                                 pop rbx	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009bd	              0x5d	                                 pop rbp	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009be	            0x415c	                                 pop r12	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009c0	            0x415d	                                 pop r13	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009c2	            0x415e	                                 pop r14	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009c4	            0x415f	                                 pop r15	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40009c6	              0xc3	                                     ret	      5825	buffer.c	FUNCTION_88	ELSE_1
buflist_findnr	CALL,2:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	32
0x400139b	        0x4883ec28	                           sub rsp, 0x28	      2709	buffer.c	FUNCTION_37
0x400139f	          0x4189f8	                            mov r8d, edi	      2709	buffer.c	FUNCTION_37
0x40013a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2709	buffer.c	FUNCTION_37
0x40013ab	      0x4889442418	             mov qword [rsp + 0x18], rax	      2709	buffer.c	FUNCTION_37
0x40013b0	            0x31c0	                            xor eax, eax	      2709	buffer.c	FUNCTION_37
0x40013b2	            0x85ff	                           test edi, edi	      2713	buffer.c	FUNCTION_37	IF_1
0x40013b4	            0x750e	                           jne 0x40013c4	      2713	buffer.c	FUNCTION_37	IF_1
0x40013b6	    0x488b05000000	            mov rax, qword [0x040013bd] 	      2714	buffer.c	FUNCTION_37	IF_1
0x40013bd	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x40013c4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013c9	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013ce	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013d3	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013d6	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013db	      0xe800000000	                          call 0x40013e0	        33	stdio2.h	FUNCTION_116	CALL_1
0x40013e0	          0x4889e6	                            mov rsi, rsp	      2716	buffer.c	FUNCTION_37	CALL_1
0x40013e3	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x40013e8	      0xe800000000	                          call 0x40013ed	      2716	buffer.c	FUNCTION_37	CALL_1
0x40013ed	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40013f1	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40013f7	            0x740d	                            je 0x4001406	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40013f9	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40013fc	            0x7408	                            je 0x4001406	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40013fe	    0x482dbc000000	                           sub rax, 0xbc	      2719	buffer.c	FUNCTION_37	IF_2
0x4001404	            0xeb05	                           jmp 0x400140b	      2719	buffer.c	FUNCTION_37	IF_2
0x4001406	      0xb800000000	                              mov eax, 0	      2721	buffer.c	FUNCTION_37
0x400140b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2722	buffer.c	FUNCTION_37
0x4001410	    0x644833142528	                xor rdx, qword fs:[0x28]	      2722	buffer.c	FUNCTION_37
0x4001419	            0x7405	                            je 0x4001420	      2722	buffer.c	FUNCTION_37
0x400141b	      0xe800000000	                          call 0x4001420	      2722	buffer.c	FUNCTION_37
0x4001420	        0x4883c428	                           add rsp, 0x28	      2722	buffer.c	FUNCTION_37
0x4001424	              0xc3	                                     ret	      2722	buffer.c	FUNCTION_37
buf_delete_signs	CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	26
0x4006343	              0x55	                                push rbp	      6051	buffer.c	FUNCTION_97
0x4006344	              0x53	                                push rbx	      6051	buffer.c	FUNCTION_97
0x4006345	        0x4883ec08	                              sub rsp, 8	      6051	buffer.c	FUNCTION_97
0x4006349	          0x4889fd	                            mov rbp, rdi	      6051	buffer.c	FUNCTION_97
0x400634c	    0x488bbf201c00	          mov rdi, qword [rdi + 0x1c20] 	      6056	buffer.c	FUNCTION_97	IF_1
0x4006353	          0x4885ff	                           test rdi, rdi	      6056	buffer.c	FUNCTION_97	IF_1
0x4006356	            0x7440	                            je 0x4006398	      6056	buffer.c	FUNCTION_97	IF_1
0x4006358	    0x48833d000000	               cmp qword [0x04006360], 0	      6056	buffer.c	FUNCTION_97	IF_1
0x4006360	            0x741e	                            je 0x4006380	      6056	buffer.c	FUNCTION_97	IF_1
0x4006362	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4006367	          0x4889ef	                            mov rdi, rbp	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400636a	      0xe800000000	                          call 0x400636f	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400636f	      0xe800000000	                          call 0x4006374	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0x4006374	    0x488bbd201c00	          mov rdi, qword [rbp + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400637b	          0x4885ff	                           test rdi, rdi	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400637e	            0x7418	                            je 0x4006398	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006380	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x4006384	      0xe800000000	                          call 0x4006389	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x4006389	    0x48899d201c00	          mov qword [rbp + 0x1c20], rbx 	      6066	buffer.c	FUNCTION_97	WHILE_1
0x4006390	          0x4889df	                            mov rdi, rbx	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006393	          0x4885db	                           test rbx, rbx	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006396	            0x75e8	                           jne 0x4006380	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006398	        0x4883c408	                              add rsp, 8	      6068	buffer.c	FUNCTION_97
0x400639c	              0x5b	                                 pop rbx	      6068	buffer.c	FUNCTION_97
0x400639d	              0x5d	                                 pop rbp	      6068	buffer.c	FUNCTION_97
0x400639e	              0xc3	                                     ret	      6068	buffer.c	FUNCTION_97
do_bufdel	CALL,28:IF,20:SWITCH,0:ELSE,13:WHILE,0:FOR,1:DO,0:functions,0	219
0x4007d2b	            0x4157	                                push r15	      1099	buffer.c	FUNCTION_17
0x4007d2d	            0x4156	                                push r14	      1099	buffer.c	FUNCTION_17
0x4007d2f	            0x4155	                                push r13	      1099	buffer.c	FUNCTION_17
0x4007d31	            0x4154	                                push r12	      1099	buffer.c	FUNCTION_17
0x4007d33	              0x55	                                push rbp	      1099	buffer.c	FUNCTION_17
0x4007d34	              0x53	                                push rbx	      1099	buffer.c	FUNCTION_17
0x4007d35	        0x4883ec18	                           sub rsp, 0x18	      1099	buffer.c	FUNCTION_17
0x4007d39	          0x4189fd	                           mov r13d, edi	      1099	buffer.c	FUNCTION_17
0x4007d3c	      0x4889742408	                mov qword [rsp + 8], rsi	      1099	buffer.c	FUNCTION_17
0x4007d41	        0x44890c24	                    mov dword [rsp], r9d	      1099	buffer.c	FUNCTION_17
0x4007d45	            0x85d2	                           test edx, edx	      1106	buffer.c	FUNCTION_17	IF_1
0x4007d47	            0x7521	                           jne 0x4007d6a	      1106	buffer.c	FUNCTION_17	IF_1
0x4007d49	          0x4589c8	                            mov r8d, r9d	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4007d4c	      0xb900000000	                              mov ecx, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4007d51	      0xba01000000	                              mov edx, 1	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4007d56	      0xbe00000000	                              mov esi, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4007d5b	      0xe800000000	                          call 0x4007d60	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4007d60	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4007d65	      0xe900030000	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4007d6a	          0x4189d4	                           mov r12d, edx	      1102	buffer.c	FUNCTION_17
0x4007d6d	          0x4589c7	                           mov r15d, r8d	      1102	buffer.c	FUNCTION_17
0x4007d70	          0x4489c3	                            mov ebx, r8d	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x4007d73	          0x83fa02	                              cmp edx, 2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4007d76	            0x750c	                           jne 0x4007d84	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4007d78	      0x488b442408	                mov rax, qword [rsp + 8]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4007d7d	          0x803800	                       cmp byte [rax], 0	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4007d80	            0x751e	                           jne 0x4007da0	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4007d82	            0x89cb	                            mov ebx, ecx	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4007d84	    0x8b0500000000	            mov eax, dword [0x04007d8a] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007d8a	      0xbd00000000	                              mov ebp, 0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007d8f	    0xc74424040000	                  mov dword [rsp + 4], 0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007d97	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007d99	            0x741e	                            je 0x4007db9	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007d9b	      0xe9bf020000	                           jmp 0x400805f	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007da0	      0xba05000000	                              mov edx, 5	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4007da5	      0xbe00000000	                              mov esi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4007daa	      0xbf00000000	                              mov edi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4007daf	      0xe800000000	                          call 0x4007db4	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4007db4	      0xe9b1020000	                           jmp 0x400806a	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4007db9	    0x488b05000000	            mov rax, qword [0x04007dc0] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x4007dc0	    0x3998b8000000	            cmp dword [rax + 0xb8], ebx 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x4007dc6	            0x7425	                            je 0x4007ded	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x4007dc8	        0x448b0424	                    mov r8d, dword [rsp]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007dcc	            0x89d9	                            mov ecx, ebx	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007dce	      0xba01000000	                              mov edx, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007dd3	      0xbe01000000	                              mov esi, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007dd8	          0x4489ef	                           mov edi, r13d	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007ddb	      0xe800000000	                          call 0x4007de0	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x4007de0	          0x83f801	                              cmp eax, 1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007de3	           0xf94c0	                                 sete al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007de6	           0xfb6c0	                           movzx eax, al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007de9	             0x1c5	                            add ebp, eax	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007deb	            0xeb04	                           jmp 0x4007df1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007ded	        0x895c2404	                mov dword [rsp + 4], ebx	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x4007df1	        0x4183fc02	                             cmp r12d, 2	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x4007df5	            0x750a	                           jne 0x4007e01	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x4007df7	          0x83c301	                              add ebx, 1	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4007dfa	          0x4139df	                           cmp r15d, ebx	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4007dfd	            0x7d69	                           jge 0x4007e68	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4007dff	            0xeb7a	                           jmp 0x4007e7b	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4007e01	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4007e06	      0xe800000000	                          call 0x4007e0b	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4007e0b	      0x4889442408	                mov qword [rsp + 8], rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x4007e10	           0xfb610	                   movzx edx, byte [rax]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4007e13	            0x84d2	                             test dl, dl	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4007e15	            0x7464	                            je 0x4007e7b	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x4007e17	           0xfb6d2	                           movzx edx, dl	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4007e1a	          0x83ea30	                           sub edx, 0x30	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4007e1d	          0x83fa09	                              cmp edx, 9	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4007e20	            0x763a	                           jbe 0x4007e5c	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x4007e22	          0x4889c7	                            mov rdi, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4007e25	      0xe800000000	                          call 0x4007e2a	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4007e2a	          0x4989c6	                            mov r14, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4007e2d	        0x4183fd04	                             cmp r13d, 4	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e31	           0xf94c2	                                 sete dl	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e34	           0xfb6d2	                           movzx edx, dl	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e37	    0x41b800000000	                              mov r8d, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e3d	      0xb900000000	                              mov ecx, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e42	          0x4889c6	                            mov rsi, rax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e45	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e4a	      0xe800000000	                          call 0x4007e4f	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e4f	            0x89c3	                            mov ebx, eax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4007e51	            0x85c0	                           test eax, eax	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4007e53	            0x7826	                            js 0x4007e7b	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4007e55	      0x4c89742408	                mov qword [rsp + 8], r14	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4007e5a	            0xeb0c	                           jmp 0x4007e68	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4007e5c	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4007e61	      0xe800000000	                          call 0x4007e66	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4007e66	            0x89c3	                            mov ebx, eax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4007e68	      0xe800000000	                          call 0x4007e6d	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007e6d	    0x8b0500000000	            mov eax, dword [0x04007e73] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007e73	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007e75	     0xf843effffff	                            je 0x4007db9	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4007e7b	    0x8b0500000000	            mov eax, dword [0x04007e81] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e81	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e83	            0x752b	                           jne 0x4007eb0	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e85	        0x8b442404	                mov eax, dword [rsp + 4]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e89	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e8b	            0x7423	                            je 0x4007eb0	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e8d	        0x448b0424	                    mov r8d, dword [rsp]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e91	            0x89c1	                            mov ecx, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e93	      0xba01000000	                              mov edx, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e98	      0xbe01000000	                              mov esi, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007e9d	          0x4489ef	                           mov edi, r13d	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007ea0	      0xe800000000	                          call 0x4007ea5	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4007ea5	          0x83f801	                              cmp eax, 1	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4007ea8	           0xf94c0	                                 sete al	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4007eab	           0xfb6c0	                           movzx eax, al	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4007eae	             0x1c5	                            add ebp, eax	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4007eb0	            0x85ed	                           test ebp, ebp	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4007eb2	     0xf8585000000	                           jne 0x4007f3d	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4007eb8	        0x4183fd02	                             cmp r13d, 2	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4007ebc	            0x7525	                           jne 0x4007ee3	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4007ebe	      0xba05000000	                              mov edx, 5	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4007ec3	      0xbe00000000	                              mov esi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4007ec8	      0xbf00000000	                              mov edi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4007ecd	      0xe800000000	                          call 0x4007ed2	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4007ed2	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x4007ed5	    0x488b3d000000	            mov rdi, qword [0x04007edc] 	       110	string3.h	FUNCTION_110	CALL_3
0x4007edc	      0xe800000000	                          call 0x4007ee1	       110	string3.h	FUNCTION_110	CALL_3
0x4007ee1	            0xeb4e	                           jmp 0x4007f31	       110	string3.h	FUNCTION_110	CALL_3
0x4007ee3	        0x4183fd03	                             cmp r13d, 3	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007ee7	            0x7525	                           jne 0x4007f0e	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007ee9	      0xba05000000	                              mov edx, 5	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007eee	      0xbe00000000	                              mov esi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007ef3	      0xbf00000000	                              mov edi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007ef8	      0xe800000000	                          call 0x4007efd	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4007efd	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x4007f00	    0x488b3d000000	            mov rdi, qword [0x04007f07] 	       110	string3.h	FUNCTION_110	CALL_3
0x4007f07	      0xe800000000	                          call 0x4007f0c	       110	string3.h	FUNCTION_110	CALL_3
0x4007f0c	            0xeb23	                           jmp 0x4007f31	       110	string3.h	FUNCTION_110	CALL_3
0x4007f0e	      0xba05000000	                              mov edx, 5	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4007f13	      0xbe00000000	                              mov esi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4007f18	      0xbf00000000	                              mov edi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4007f1d	      0xe800000000	                          call 0x4007f22	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4007f22	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x4007f25	    0x488b3d000000	            mov rdi, qword [0x04007f2c] 	       110	string3.h	FUNCTION_110	CALL_3
0x4007f2c	      0xe800000000	                          call 0x4007f31	       110	string3.h	FUNCTION_110	CALL_3
0x4007f31	    0x488b05000000	            mov rax, qword [0x04007f38] 	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4007f38	      0xe92d010000	                           jmp 0x400806a	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4007f3d	          0x4863c5	                         movsxd rax, ebp	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4007f40	    0x483b05000000	            cmp rax, qword [0x04007f47] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4007f47	     0xf8c0b010000	                            jl 0x4008058	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4007f4d	        0x4183fd02	                             cmp r13d, 2	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4007f51	            0x7558	                           jne 0x4007fab	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4007f53	          0x83fd01	                              cmp ebp, 1	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4007f56	            0x7526	                           jne 0x4007f7e	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4007f58	      0xba05000000	                              mov edx, 5	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f5d	      0xbe00000000	                              mov esi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f62	      0xbf00000000	                              mov edi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f67	      0xe800000000	                          call 0x4007f6c	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f6c	          0x4889c7	                            mov rdi, rax	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f6f	      0xe800000000	                          call 0x4007f74	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4007f74	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4007f79	      0xe9ec000000	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4007f7e	      0xba05000000	                              mov edx, 5	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f83	      0xbe00000000	                              mov esi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f88	      0xbf00000000	                              mov edi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f8d	      0xe800000000	                          call 0x4007f92	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f92	            0x89ee	                            mov esi, ebp	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f94	          0x4889c7	                            mov rdi, rax	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f97	      0xb800000000	                              mov eax, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007f9c	      0xe800000000	                          call 0x4007fa1	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4007fa1	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4007fa6	      0xe9bf000000	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4007fab	        0x4183fd03	                             cmp r13d, 3	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4007faf	            0x7555	                           jne 0x4008006	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4007fb1	          0x83fd01	                              cmp ebp, 1	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4007fb4	            0x7526	                           jne 0x4007fdc	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4007fb6	      0xba05000000	                              mov edx, 5	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fbb	      0xbe00000000	                              mov esi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fc0	      0xbf00000000	                              mov edi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fc5	      0xe800000000	                          call 0x4007fca	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fca	          0x4889c7	                            mov rdi, rax	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fcd	      0xe800000000	                          call 0x4007fd2	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4007fd2	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4007fd7	      0xe98e000000	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4007fdc	      0xba05000000	                              mov edx, 5	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007fe1	      0xbe00000000	                              mov esi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007fe6	      0xbf00000000	                              mov edi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007feb	      0xe800000000	                          call 0x4007ff0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007ff0	            0x89ee	                            mov esi, ebp	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007ff2	          0x4889c7	                            mov rdi, rax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007ff5	      0xb800000000	                              mov eax, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007ffa	      0xe800000000	                          call 0x4007fff	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4007fff	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4008004	            0xeb64	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4008006	          0x83fd01	                              cmp ebp, 1	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x4008009	            0x7523	                           jne 0x400802e	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x400800b	      0xba05000000	                              mov edx, 5	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008010	      0xbe00000000	                              mov esi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008015	      0xbf00000000	                              mov edi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400801a	      0xe800000000	                          call 0x400801f	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400801f	          0x4889c7	                            mov rdi, rax	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008022	      0xe800000000	                          call 0x4008027	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008027	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x400802c	            0xeb3c	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x400802e	      0xba05000000	                              mov edx, 5	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008033	      0xbe00000000	                              mov esi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008038	      0xbf00000000	                              mov edi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x400803d	      0xe800000000	                          call 0x4008042	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008042	            0x89ee	                            mov esi, ebp	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008044	          0x4889c7	                            mov rdi, rax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008047	      0xb800000000	                              mov eax, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x400804c	      0xe800000000	                          call 0x4008051	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008051	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x4008056	            0xeb12	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x4008058	      0xb800000000	                              mov eax, 0	      1102	buffer.c	FUNCTION_17
0x400805d	            0xeb0b	                           jmp 0x400806a	      1102	buffer.c	FUNCTION_17
0x400805f	    0x8b0500000000	            mov eax, dword [0x04008065] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008065	      0xe94efeffff	                           jmp 0x4007eb8	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400806a	        0x4883c418	                           add rsp, 0x18	      1203	buffer.c	FUNCTION_17
0x400806e	              0x5b	                                 pop rbx	      1203	buffer.c	FUNCTION_17
0x400806f	              0x5d	                                 pop rbp	      1203	buffer.c	FUNCTION_17
0x4008070	            0x415c	                                 pop r12	      1203	buffer.c	FUNCTION_17
0x4008072	            0x415d	                                 pop r13	      1203	buffer.c	FUNCTION_17
0x4008074	            0x415e	                                 pop r14	      1203	buffer.c	FUNCTION_17
0x4008076	            0x415f	                                 pop r15	      1203	buffer.c	FUNCTION_17
0x4008078	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
buflist_getfile	CALL,18:IF,14:SWITCH,0:ELSE,3:WHILE,0:FOR,0:DO,0:functions,0	134
0x400190b	            0x4157	                                push r15	      2242	buffer.c	FUNCTION_28
0x400190d	            0x4156	                                push r14	      2242	buffer.c	FUNCTION_28
0x400190f	            0x4155	                                push r13	      2242	buffer.c	FUNCTION_28
0x4001911	            0x4154	                                push r12	      2242	buffer.c	FUNCTION_28
0x4001913	              0x55	                                push rbp	      2242	buffer.c	FUNCTION_28
0x4001914	              0x53	                                push rbx	      2242	buffer.c	FUNCTION_28
0x4001915	        0x4883ec18	                           sub rsp, 0x18	      2242	buffer.c	FUNCTION_28
0x4001919	            0x89fb	                            mov ebx, edi	      2242	buffer.c	FUNCTION_28
0x400191b	          0x4989f5	                            mov r13, rsi	      2242	buffer.c	FUNCTION_28
0x400191e	          0x4189d4	                           mov r12d, edx	      2242	buffer.c	FUNCTION_28
0x4001921	          0x4189ce	                           mov r14d, ecx	      2242	buffer.c	FUNCTION_28
0x4001924	      0xe800000000	                          call 0x4001929	      2248	buffer.c	FUNCTION_28	CALL_1
0x4001929	          0x4885c0	                           test rax, rax	      2249	buffer.c	FUNCTION_28	IF_1
0x400192c	            0x7554	                           jne 0x4001982	      2249	buffer.c	FUNCTION_28	IF_1
0x400192e	        0x41f6c402	                            test r12b, 2	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001932	            0x7425	                            je 0x4001959	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001934	            0x85db	                           test ebx, ebx	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001936	            0x7521	                           jne 0x4001959	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001938	      0xba05000000	                              mov edx, 5	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x400193d	      0xbe00000000	                              mov esi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001942	      0xbf00000000	                              mov edi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001947	      0xe800000000	                          call 0x400194c	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x400194c	          0x4889c7	                            mov rdi, rax	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x400194f	      0xe800000000	                          call 0x4001954	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001954	      0xe9b2010000	                           jmp 0x4001b0b	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001959	      0xba05000000	                              mov edx, 5	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x400195e	      0xbe00000000	                              mov esi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001963	      0xbf00000000	                              mov edi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001968	      0xe800000000	                          call 0x400196d	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x400196d	          0x4863f3	                         movsxd rsi, ebx	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001970	          0x4889c7	                            mov rdi, rax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001973	      0xe800000000	                          call 0x4001978	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001978	      0xbb00000000	                              mov ebx, 0	      2255	buffer.c	FUNCTION_28	IF_1
0x400197d	      0xe989010000	                           jmp 0x4001b0b	      2255	buffer.c	FUNCTION_28	IF_1
0x4001982	          0x4889c5	                            mov rbp, rax	      2255	buffer.c	FUNCTION_28	IF_1
0x4001985	      0xbb01000000	                              mov ebx, 1	      2260	buffer.c	FUNCTION_28	IF_3
0x400198a	    0x483b05000000	            cmp rax, qword [0x04001991] 	      2259	buffer.c	FUNCTION_28	IF_3
0x4001991	     0xf8474010000	                            je 0x4001b0b	      2259	buffer.c	FUNCTION_28	IF_3
0x4001997	      0xe800000000	                          call 0x400199c	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x400199c	            0x89c3	                            mov ebx, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x400199e	            0x85c0	                           test eax, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x40019a0	            0x740f	                            je 0x40019b1	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x40019a2	      0xe800000000	                          call 0x40019a7	      2264	buffer.c	FUNCTION_28	IF_4	CALL_7
0x40019a7	      0xbb00000000	                              mov ebx, 0	      2265	buffer.c	FUNCTION_28	IF_4
0x40019ac	      0xe95a010000	                           jmp 0x4001b0b	      2265	buffer.c	FUNCTION_28	IF_4
0x40019b1	      0xe800000000	                          call 0x40019b6	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40019b6	          0x4189c7	                           mov r15d, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40019b9	            0x85c0	                           test eax, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40019bb	     0xf854a010000	                           jne 0x4001b0b	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40019c1	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2278	buffer.c	FUNCTION_28	ELSE_2
0x40019c9	          0x4d85ed	                           test r13, r13	      2271	buffer.c	FUNCTION_28	IF_6
0x40019cc	            0x7512	                           jne 0x40019e0	      2271	buffer.c	FUNCTION_28	IF_6
0x40019ce	          0x4889ef	                            mov rdi, rbp	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x40019d1	      0xe800000000	                          call 0x40019d6	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x40019d6	          0x4c8b28	                    mov r13, qword [rax]	      2274	buffer.c	FUNCTION_28	IF_6
0x40019d9	          0x8b4008	                mov eax, dword [rax + 8]	      2275	buffer.c	FUNCTION_28	IF_6
0x40019dc	        0x8944240c	              mov dword [rsp + 0xc], eax	      2275	buffer.c	FUNCTION_28	IF_6
0x40019e0	        0x41f6c404	                            test r12b, 4	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x40019e4	     0xf84a1000000	                            je 0x4001a8b	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x40019ea	    0xf60500000000	               test byte [0x040019f1], 1	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x40019f1	            0x7411	                            je 0x4001a04	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x40019f3	          0x4889ef	                            mov rdi, rbp	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40019f6	      0xe800000000	                          call 0x40019fb	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x40019fb	          0x4885c0	                           test rax, rax	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x40019fe	     0xf8587000000	                           jne 0x4001a8b	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001a04	    0xf60500000000	               test byte [0x04001a0b], 2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001a0b	            0x740d	                            je 0x4001a1a	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001a0d	          0x4889ef	                            mov rdi, rbp	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4001a10	      0xe800000000	                          call 0x4001a15	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4001a15	          0x4885c0	                           test rax, rax	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001a18	            0x7571	                           jne 0x4001a8b	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001a1a	    0xf60500000000	           test byte [0x04001a21], 0x1c 	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001a21	            0x7468	                            je 0x4001a8b	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001a23	    0x488b05000000	            mov rax, qword [0x04001a2a] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a2a	        0x48833801	                      cmp qword [rax], 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a2e	            0x750f	                           jne 0x4001a3f	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a30	      0xbf01000000	                              mov edi, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a35	      0xe800000000	                          call 0x4001a3a	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a3a	          0x803800	                       cmp byte [rax], 0	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a3d	            0x744c	                            je 0x4001a8b	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001a3f	    0x8b0500000000	            mov eax, dword [0x04001a45] 	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4001a45	            0xa808	                              test al, 8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4001a47	            0x7407	                            je 0x4001a50	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4001a49	      0xe800000000	                          call 0x4001a4e	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4001a4e	            0xeb20	                           jmp 0x4001a70	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4001a50	          0x83e010	                           and eax, 0x10	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a53	      0xbe02000000	                              mov esi, 2	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a58	        0x410f44f7	                         cmove esi, r15d	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a5c	      0xbf00000000	                              mov edi, 0	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a61	      0xe800000000	                          call 0x4001a66	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a66	            0x89c3	                            mov ebx, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a68	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a6a	     0xf849b000000	                            je 0x4001b0b	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001a70	    0x488b05000000	            mov rax, qword [0x04001a77] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001a77	    0xc78088020000	              mov dword [rax + 0x288], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001a81	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001a8b	    0x830500000000	               add dword [0x04001a92], 1	      2306	buffer.c	FUNCTION_28
0x4001a92	          0x4489e1	                           mov ecx, r12d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001a95	          0x83e101	                              and ecx, 1	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001a98	    0x8bbdb8000000	            mov edi, dword [rbp + 0xb8] 	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001a9e	          0x4589f1	                           mov r9d, r14d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001aa1	          0x4d89e8	                             mov r8, r13	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001aa4	      0xba00000000	                              mov edx, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001aa9	      0xbe00000000	                              mov esi, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001aae	      0xe800000000	                          call 0x4001ab3	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001ab3	            0x85c0	                           test eax, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001ab5	            0x7f43	                            jg 0x4001afa	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001ab7	    0x832d00000000	               sub dword [0x04001abe], 1	      2310	buffer.c	FUNCTION_28	IF_13
0x4001abe	    0x833d00000000	               cmp dword [0x04001ac5], 0	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001ac5	            0x753f	                           jne 0x4001b06	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001ac7	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001acb	            0x85d2	                           test edx, edx	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001acd	            0x7437	                            je 0x4001b06	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001acf	    0x488b05000000	            mov rax, qword [0x04001ad6] 	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001ad6	          0x895040	             mov dword [rax + 0x40], edx	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001ad9	      0xe800000000	                          call 0x4001ade	      2316	buffer.c	FUNCTION_28	IF_13	IF_14	CALL_18
0x4001ade	    0x488b05000000	            mov rax, qword [0x04001ae5] 	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001ae5	    0xc74044000000	               mov dword [rax + 0x44], 0	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001aec	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001af3	      0xbb01000000	                              mov ebx, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x4001af8	            0xeb11	                           jmp 0x4001b0b	      2322	buffer.c	FUNCTION_28	IF_13
0x4001afa	    0x832d00000000	               sub dword [0x04001b01], 1	      2324	buffer.c	FUNCTION_28
0x4001b01	          0x4489fb	                           mov ebx, r15d	      2325	buffer.c	FUNCTION_28
0x4001b04	            0xeb05	                           jmp 0x4001b0b	      2325	buffer.c	FUNCTION_28
0x4001b06	      0xbb01000000	                              mov ebx, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x4001b0b	            0x89d8	                            mov eax, ebx	      2326	buffer.c	FUNCTION_28
0x4001b0d	        0x4883c418	                           add rsp, 0x18	      2326	buffer.c	FUNCTION_28
0x4001b11	              0x5b	                                 pop rbx	      2326	buffer.c	FUNCTION_28
0x4001b12	              0x5d	                                 pop rbp	      2326	buffer.c	FUNCTION_28
0x4001b13	            0x415c	                                 pop r12	      2326	buffer.c	FUNCTION_28
0x4001b15	            0x415d	                                 pop r13	      2326	buffer.c	FUNCTION_28
0x4001b17	            0x415e	                                 pop r14	      2326	buffer.c	FUNCTION_28
0x4001b19	            0x415f	                                 pop r15	      2326	buffer.c	FUNCTION_28
0x4001b1b	              0xc3	                                     ret	      2326	buffer.c	FUNCTION_28
buflist_findlnum	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	3
0x4001b81	      0xe800000000	                          call 0x4001b86	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4001b86	          0x488b00	                    mov rax, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4001b89	              0xc3	                                     ret	      2945	buffer.c	ELSE_1	FUNCTION_44
buf_contents_changed	CALL,12:IF,6:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	97
0x40093b5	            0x4155	                                push r13	      6169	buffer.c	FUNCTION_102
0x40093b7	            0x4154	                                push r12	      6169	buffer.c	FUNCTION_102
0x40093b9	              0x55	                                push rbp	      6169	buffer.c	FUNCTION_102
0x40093ba	              0x53	                                push rbx	      6169	buffer.c	FUNCTION_102
0x40093bb	    0x4881ec080100	                          sub rsp, 0x108	      6169	buffer.c	FUNCTION_102
0x40093c2	          0x4889fd	                            mov rbp, rdi	      6169	buffer.c	FUNCTION_102
0x40093c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6169	buffer.c	FUNCTION_102
0x40093ce	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      6169	buffer.c	FUNCTION_102
0x40093d6	            0x31c0	                            xor eax, eax	      6169	buffer.c	FUNCTION_102
0x40093d8	      0xb904000000	                              mov ecx, 4	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093dd	      0xba01000000	                              mov edx, 1	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093e2	      0xbe00000000	                              mov esi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093e7	      0xbf00000000	                              mov edi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093ec	      0xe800000000	                          call 0x40093f1	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093f1	          0x4889c3	                            mov rbx, rax	      6177	buffer.c	FUNCTION_102	CALL_1
0x40093f4	      0xb801000000	                              mov eax, 1	      6179	buffer.c	FUNCTION_102	IF_1
0x40093f9	          0x4885db	                           test rbx, rbx	      6178	buffer.c	FUNCTION_102	IF_1
0x40093fc	     0xf841e010000	                            je 0x4009520	      6178	buffer.c	FUNCTION_102	IF_1
0x4009402	          0x4889ee	                            mov rsi, rbp	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x4009405	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400940a	      0xe800000000	                          call 0x400940f	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400940f	            0x85c0	                           test eax, eax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x4009411	            0x7517	                           jne 0x400942a	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x4009413	      0xbe00000000	                              mov esi, 0	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x4009418	          0x4889df	                            mov rdi, rbx	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x400941b	      0xe800000000	                          call 0x4009420	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0x4009420	      0xb801000000	                              mov eax, 1	      6185	buffer.c	FUNCTION_102	IF_2
0x4009425	      0xe9f6000000	                           jmp 0x4009520	      6185	buffer.c	FUNCTION_102	IF_2
0x400942a	          0x4889de	                            mov rsi, rbx	      6189	buffer.c	FUNCTION_102	CALL_4
0x400942d	          0x4889e7	                            mov rdi, rsp	      6189	buffer.c	FUNCTION_102	CALL_4
0x4009430	      0xe800000000	                          call 0x4009435	      6189	buffer.c	FUNCTION_102	CALL_4
0x4009435	    0x488b3d000000	            mov rdi, qword [0x0400943c] 	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400943c	      0xe800000000	                          call 0x4009441	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x4009441	    0x41bc01000000	                             mov r12d, 1	      6171	buffer.c	FUNCTION_102
0x4009447	          0x83f801	                              cmp eax, 1	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400944a	     0xf85a2000000	                           jne 0x40094f2	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x4009450	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009457	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400945e	        0x4883ec08	                              sub rsp, 8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009462	            0x6a11	                               push 0x11	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009464	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009469	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400946f	      0xb900000000	                              mov ecx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009474	      0xba00000000	                              mov edx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009479	      0xe800000000	                          call 0x400947e	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400947e	        0x4883c410	                           add rsp, 0x10	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009482	          0x83f801	                              cmp eax, 1	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009485	            0x756b	                           jne 0x40094f2	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x4009487	        0x488b4500	                    mov rax, qword [rbp]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400948b	    0x488b15000000	            mov rdx, qword [0x04009492] 	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x4009492	          0x483b02	                    cmp rax, qword [rdx]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x4009495	            0x755b	                           jne 0x40094f2	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x4009497	          0x4885c0	                           test rax, rax	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400949a	            0x7e48	                           jle 0x40094e4	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400949c	    0x41bc01000000	                             mov r12d, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x40094a2	          0x4c89e7	                            mov rdi, r12	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094a5	      0xe800000000	                          call 0x40094aa	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094aa	          0x4989c5	                            mov r13, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094ad	      0xba00000000	                              mov edx, 0	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094b2	          0x4c89e6	                            mov rsi, r12	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094b5	          0x4889ef	                            mov rdi, rbp	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094b8	      0xe800000000	                          call 0x40094bd	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094bd	          0x4c89ee	                            mov rsi, r13	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094c0	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094c3	      0xe800000000	                          call 0x40094c8	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094c8	            0x85c0	                           test eax, eax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094ca	            0x7520	                           jne 0x40094ec	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x40094cc	        0x4983c401	                              add r12, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x40094d0	    0x488b05000000	            mov rax, qword [0x040094d7] 	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x40094d7	          0x4c3920	                    cmp qword [rax], r12	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x40094da	            0x7dc6	                           jge 0x40094a2	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x40094dc	    0x41bc00000000	                             mov r12d, 0	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x40094e2	            0xeb0e	                           jmp 0x40094f2	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x40094e4	    0x41bc00000000	                             mov r12d, 0	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x40094ea	            0xeb06	                           jmp 0x40094f2	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x40094ec	    0x41bc01000000	                             mov r12d, 1	      6203	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5
0x40094f2	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      6208	buffer.c	FUNCTION_102	CALL_10
0x40094f7	      0xe800000000	                          call 0x40094fc	      6208	buffer.c	FUNCTION_102	CALL_10
0x40094fc	          0x4889e7	                            mov rdi, rsp	      6211	buffer.c	FUNCTION_102	CALL_11
0x40094ff	      0xe800000000	                          call 0x4009504	      6211	buffer.c	FUNCTION_102	CALL_11
0x4009504	          0x4489e0	                           mov eax, r12d	      6216	buffer.c	FUNCTION_102
0x4009507	    0x483b1d000000	            cmp rbx, qword [0x0400950e] 	      6213	buffer.c	FUNCTION_102	IF_6
0x400950e	            0x7410	                            je 0x4009520	      6213	buffer.c	FUNCTION_102	IF_6
0x4009510	      0xbe00000000	                              mov esi, 0	      6214	buffer.c	FUNCTION_102	CALL_12
0x4009515	          0x4889df	                            mov rdi, rbx	      6214	buffer.c	FUNCTION_102	CALL_12
0x4009518	      0xe800000000	                          call 0x400951d	      6214	buffer.c	FUNCTION_102	CALL_12
0x400951d	          0x4489e0	                           mov eax, r12d	      6216	buffer.c	FUNCTION_102
0x4009520	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      6217	buffer.c	FUNCTION_102
0x4009528	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6217	buffer.c	FUNCTION_102
0x4009531	            0x7405	                            je 0x4009538	      6217	buffer.c	FUNCTION_102
0x4009533	      0xe800000000	                          call 0x4009538	      6217	buffer.c	FUNCTION_102
0x4009538	    0x4881c4080100	                          add rsp, 0x108	      6217	buffer.c	FUNCTION_102
0x400953f	              0x5b	                                 pop rbx	      6217	buffer.c	FUNCTION_102
0x4009540	              0x5d	                                 pop rbp	      6217	buffer.c	FUNCTION_102
0x4009541	            0x415c	                                 pop r12	      6217	buffer.c	FUNCTION_102
0x4009543	            0x415d	                                 pop r13	      6217	buffer.c	FUNCTION_102
0x4009545	              0xc3	                                     ret	      6217	buffer.c	FUNCTION_102
enter_buffer	CALL,19:IF,9:SWITCH,0:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	107
0x4006f3f	              0x53	                                push rbx	      1701	buffer.c	FUNCTION_21
0x4006f40	          0x4889fb	                            mov rbx, rdi	      1701	buffer.c	FUNCTION_21
0x4006f43	      0xbe05000000	                              mov esi, 5	      1703	buffer.c	FUNCTION_21	CALL_1
0x4006f48	      0xe800000000	                          call 0x4006f4d	      1703	buffer.c	FUNCTION_21	CALL_1
0x4006f4d	    0x83bb58170000	             cmp dword [rbx + 0x1758], 0	      1704	buffer.c	FUNCTION_21	IF_1
0x4006f54	            0x750a	                           jne 0x4006f60	      1704	buffer.c	FUNCTION_21	IF_1
0x4006f56	          0x4889df	                            mov rdi, rbx	      1705	buffer.c	FUNCTION_21	CALL_2
0x4006f59	      0xe800000000	                          call 0x4006f5e	      1705	buffer.c	FUNCTION_21	CALL_2
0x4006f5e	            0xeb0c	                           jmp 0x4006f6c	      1705	buffer.c	FUNCTION_21	CALL_2
0x4006f60	    0x488b3d000000	            mov rdi, qword [0x04006f67] 	      1709	buffer.c	FUNCTION_21	CALL_3
0x4006f67	      0xe800000000	                          call 0x4006f6c	      1709	buffer.c	FUNCTION_21	CALL_3
0x4006f6c	    0x488b3d000000	            mov rdi, qword [0x04006f73] 	      1710	buffer.c	FUNCTION_21	CALL_4
0x4006f73	      0xe800000000	                          call 0x4006f78	      1710	buffer.c	FUNCTION_21	CALL_4
0x4006f78	    0x488b05000000	            mov rax, qword [0x04006f7f] 	      1714	buffer.c	FUNCTION_21
0x4006f7f	        0x48895808	                mov qword [rax + 8], rbx	      1714	buffer.c	FUNCTION_21
0x4006f83	    0x48891d000000	            mov qword [0x04006f8a], rbx 	      1715	buffer.c	FUNCTION_21
0x4006f8a	        0x83437801	               add dword [rbx + 0x78], 1	      1716	buffer.c	FUNCTION_21
0x4006f8e	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      1719	buffer.c	FUNCTION_21	IF_2
0x4006f95	            0x7408	                            je 0x4006f9f	      1719	buffer.c	FUNCTION_21	IF_2
0x4006f97	          0x4889df	                            mov rdi, rbx	      1720	buffer.c	FUNCTION_21	CALL_5
0x4006f9a	      0xe800000000	                          call 0x4006f9f	      1720	buffer.c	FUNCTION_21	CALL_5
0x4006f9f	    0x488b05000000	            mov rax, qword [0x04006fa6] 	      1724	buffer.c	FUNCTION_21
0x4006fa6	    0x488b3d000000	            mov rdi, qword [0x04006fad] 	      1724	buffer.c	FUNCTION_21
0x4006fad	    0x488d97681700	                 lea rdx, [rdi + 0x1768]	      1724	buffer.c	FUNCTION_21
0x4006fb4	        0x48895010	             mov qword [rax + 0x10], rdx	      1724	buffer.c	FUNCTION_21
0x4006fb8	    0x48c740380100	               mov qword [rax + 0x38], 1	      1728	buffer.c	FUNCTION_21
0x4006fc0	    0xc74040000000	               mov dword [rax + 0x40], 0	      1729	buffer.c	FUNCTION_21
0x4006fc7	    0xc74044000000	               mov dword [rax + 0x44], 0	      1731	buffer.c	FUNCTION_21
0x4006fce	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1733	buffer.c	FUNCTION_21
0x4006fd5	    0xc68080000000	                mov byte [rax + 0x80], 0	      1734	buffer.c	FUNCTION_21
0x4006fdc	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1737	buffer.c	FUNCTION_21
0x4006fe6	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1740	buffer.c	FUNCTION_21	IF_3
0x4006feb	            0x752c	                           jne 0x4007019	      1740	buffer.c	FUNCTION_21	IF_3
0x4006fed	    0x488b87981400	          mov rax, qword [rdi + 0x1498] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4006ff4	          0x803800	                       cmp byte [rax], 0	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4006ff7	            0x750a	                           jne 0x4007003	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4006ff9	    0xc70500000000	               mov dword [0x04007003], 0	      1746	buffer.c	FUNCTION_21	IF_3	IF_4
0x4007003	      0xba00000000	                              mov edx, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007008	      0xbe00000000	                              mov esi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x400700d	      0xbf00000000	                              mov edi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007012	      0xe800000000	                          call 0x4007017	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007017	            0xeb76	                           jmp 0x400708f	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007019	    0x833d00000000	               cmp dword [0x04007020], 0	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4007020	            0x750a	                           jne 0x400702c	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4007022	    0xc70500000000	               mov dword [0x0400702c], 1	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x400702c	      0xbe00000000	                              mov esi, 0	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4007031	      0xe800000000	                          call 0x4007036	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x4007036	    0x488b05000000	            mov rax, qword [0x0400703d] 	      1755	buffer.c	FUNCTION_21	ELSE_2
0x400703d	    0x48c740780100	               mov qword [rax + 0x78], 1	      1755	buffer.c	FUNCTION_21	ELSE_2
0x4007045	    0xc78084000000	               mov dword [rax + 0x84], 0	      1757	buffer.c	FUNCTION_21	ELSE_2
0x400704f	    0x4c8b05000000	              mov r8, qword [0x04007056]	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4007056	      0xb900000000	                              mov ecx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x400705b	      0xba00000000	                              mov edx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4007060	      0xbe00000000	                              mov esi, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4007065	      0xbf02000000	                              mov edi, 2	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x400706a	      0xe800000000	                          call 0x400706f	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x400706f	    0x4c8b05000000	              mov r8, qword [0x04007076]	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007076	      0xb900000000	                              mov ecx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400707b	      0xba00000000	                              mov edx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007080	      0xbe00000000	                              mov esi, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007085	      0xbf0d000000	                            mov edi, 0xd	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400708a	      0xe800000000	                          call 0x400708f	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400708f	    0x488b05000000	            mov rax, qword [0x04007096] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007096	      0x4883783801	               cmp qword [rax + 0x38], 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x400709b	            0x7513	                           jne 0x40070b0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x400709d	      0xbf00000000	                              mov edi, 0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40070a2	      0xe800000000	                          call 0x40070a7	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40070a7	            0x85c0	                           test eax, eax	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40070a9	            0x7405	                            je 0x40070b0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40070ab	      0xe800000000	                          call 0x40070b0	      1766	buffer.c	FUNCTION_21	CALL_11
0x40070b0	    0x488b3d000000	            mov rdi, qword [0x040070b7] 	      1768	buffer.c	FUNCTION_21	CALL_12
0x40070b7	      0xe800000000	                          call 0x40070bc	      1768	buffer.c	FUNCTION_21	CALL_12
0x40070bc	      0xe800000000	                          call 0x40070c1	      1770	buffer.c	FUNCTION_21	CALL_13
0x40070c1	    0x488b05000000	            mov rax, qword [0x040070c8] 	      1773	buffer.c	FUNCTION_21	IF_7
0x40070c8	      0x4883787801	               cmp qword [rax + 0x78], 1	      1773	buffer.c	FUNCTION_21	IF_7
0x40070cd	            0x7513	                           jne 0x40070e2	      1773	buffer.c	FUNCTION_21	IF_7
0x40070cf	    0x80b880000000	                cmp byte [rax + 0x80], 0	      1773	buffer.c	FUNCTION_21	IF_7
0x40070d6	            0x750a	                           jne 0x40070e2	      1773	buffer.c	FUNCTION_21	IF_7
0x40070d8	      0xbf00000000	                              mov edi, 0	      1774	buffer.c	FUNCTION_21	CALL_14
0x40070dd	      0xe800000000	                          call 0x40070e2	      1774	buffer.c	FUNCTION_21	CALL_14
0x40070e2	    0x488b3d000000	            mov rdi, qword [0x040070e9] 	      1778	buffer.c	FUNCTION_21	CALL_15
0x40070e9	      0xe800000000	                          call 0x40070ee	      1778	buffer.c	FUNCTION_21	CALL_15
0x40070ee	    0x833d00000000	               cmp dword [0x040070f5], 0	      1782	buffer.c	FUNCTION_21
0x40070f5	            0x7405	                            je 0x40070fc	      1782	buffer.c	FUNCTION_21
0x40070f7	      0xe800000000	                          call 0x40070fc	      1782	buffer.c	FUNCTION_21
0x40070fc	    0x488b05000000	            mov rax, qword [0x04007103] 	      1785	buffer.c	FUNCTION_21	IF_8
0x4007103	    0xf68088120000	            test byte [rax + 0x1288], 1 	      1785	buffer.c	FUNCTION_21	IF_8
0x400710a	            0x7405	                            je 0x4007111	      1785	buffer.c	FUNCTION_21	IF_8
0x400710c	      0xe800000000	                          call 0x4007111	      1786	buffer.c	FUNCTION_21	CALL_16
0x4007111	    0x488b05000000	            mov rax, qword [0x04007118] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007118	    0x83b858170000	             cmp dword [rax + 0x1758], 0	      1791	buffer.c	FUNCTION_21	IF_9
0x400711f	            0x7525	                           jne 0x4007146	      1791	buffer.c	FUNCTION_21	IF_9
0x4007121	    0x488b3d000000	            mov rdi, qword [0x04007128] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007128	    0x83bf68020000	              cmp dword [rdi + 0x268], 0	      1791	buffer.c	FUNCTION_21	IF_9
0x400712f	            0x7415	                            je 0x4007146	      1791	buffer.c	FUNCTION_21	IF_9
0x4007131	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007135	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      1791	buffer.c	FUNCTION_21	IF_9
0x400713c	          0x803800	                       cmp byte [rax], 0	      1791	buffer.c	FUNCTION_21	IF_9
0x400713f	            0x7405	                            je 0x4007146	      1791	buffer.c	FUNCTION_21	IF_9
0x4007141	      0xe800000000	                          call 0x4007146	      1792	buffer.c	FUNCTION_21	CALL_17
0x4007146	    0x488b1d000000	            mov rbx, qword [0x0400714d] 	      1795	buffer.c	FUNCTION_21	CALL_18
0x400714d	      0xe800000000	                          call 0x4007152	      1795	buffer.c	FUNCTION_21	CALL_18
0x4007152	    0x488983500100	            mov qword [rbx + 0x150], rax	      1795	buffer.c	FUNCTION_21	CALL_18
0x4007159	      0xbf28000000	                           mov edi, 0x28	      1798	buffer.c	FUNCTION_21	CALL_19
0x400715e	      0xe800000000	                          call 0x4007163	      1798	buffer.c	FUNCTION_21	CALL_19
0x4007163	              0x5b	                                 pop rbx	      1799	buffer.c	FUNCTION_21
0x4007164	              0xc3	                                     ret	      1799	buffer.c	FUNCTION_21
buf_name_changed	CALL,6:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	17
0x4005fb3	              0x53	                                push rbx	      3196	buffer.c	FUNCTION_49
0x4005fb4	          0x4889fb	                            mov rbx, rdi	      3196	buffer.c	FUNCTION_49
0x4005fb7	      0x48837f0800	                  cmp qword [rdi + 8], 0	      3200	buffer.c	FUNCTION_49	IF_1
0x4005fbc	            0x7405	                            je 0x4005fc3	      3200	buffer.c	FUNCTION_49	IF_1
0x4005fbe	      0xe800000000	                          call 0x4005fc3	      3201	buffer.c	FUNCTION_49	CALL_1
0x4005fc3	    0x488b3d000000	            mov rdi, qword [0x04005fca] 	      3203	buffer.c	FUNCTION_49	IF_2
0x4005fca	        0x483b5f08	                cmp rbx, qword [rdi + 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x4005fce	            0x7505	                           jne 0x4005fd5	      3203	buffer.c	FUNCTION_49	IF_2
0x4005fd0	      0xe800000000	                          call 0x4005fd5	      3204	buffer.c	FUNCTION_49	CALL_2
0x4005fd5	      0xe800000000	                          call 0x4005fda	      3206	buffer.c	FUNCTION_49	CALL_3
0x4005fda	      0xe800000000	                          call 0x4005fdf	      3208	buffer.c	FUNCTION_49	CALL_4
0x4005fdf	          0x4889df	                            mov rdi, rbx	      3209	buffer.c	FUNCTION_49	CALL_5
0x4005fe2	      0xe800000000	                          call 0x4005fe7	      3209	buffer.c	FUNCTION_49	CALL_5
0x4005fe7	          0x4889df	                            mov rdi, rbx	      3210	buffer.c	FUNCTION_49	CALL_6
0x4005fea	      0xe800000000	                          call 0x4005fef	      3210	buffer.c	FUNCTION_49	CALL_6
0x4005fef	              0x5b	                                 pop rbx	      3211	buffer.c	FUNCTION_49
0x4005ff0	              0xc3	                                     ret	      3211	buffer.c	FUNCTION_49
buflist_add	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	12
0x4008f7e	        0x4883ec08	                              sub rsp, 8	      3262	buffer.c	FUNCTION_52
0x4008f82	            0x89f1	                            mov ecx, esi	      3262	buffer.c	FUNCTION_52
0x4008f84	      0xba00000000	                              mov edx, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x4008f89	      0xbe00000000	                              mov esi, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x4008f8e	      0xe800000000	                          call 0x4008f93	      3265	buffer.c	FUNCTION_52	CALL_1
0x4008f93	          0x4885c0	                           test rax, rax	      3266	buffer.c	FUNCTION_52	IF_1
0x4008f96	            0x7408	                            je 0x4008fa0	      3266	buffer.c	FUNCTION_52	IF_1
0x4008f98	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3267	buffer.c	FUNCTION_52	IF_1
0x4008f9e	            0xeb05	                           jmp 0x4008fa5	      3267	buffer.c	FUNCTION_52	IF_1
0x4008fa0	      0xb800000000	                              mov eax, 0	      3268	buffer.c	FUNCTION_52
0x4008fa5	        0x4883c408	                              add rsp, 8	      3269	buffer.c	FUNCTION_52
0x4008fa9	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
buflist_findpat	CALL,15:IF,16:SWITCH,0:ELSE,3:WHILE,0:FOR,3:DO,0:functions,0	196
0x4001425	            0x4157	                                push r15	      2435	buffer.c	FUNCTION_33
0x4001427	            0x4156	                                push r14	      2435	buffer.c	FUNCTION_33
0x4001429	            0x4155	                                push r13	      2435	buffer.c	FUNCTION_33
0x400142b	            0x4154	                                push r12	      2435	buffer.c	FUNCTION_33
0x400142d	              0x55	                                push rbp	      2435	buffer.c	FUNCTION_33
0x400142e	              0x53	                                push rbx	      2435	buffer.c	FUNCTION_33
0x400142f	    0x4881ece80000	                           sub rsp, 0xe8	      2435	buffer.c	FUNCTION_33
0x4001436	          0x4889f8	                            mov rax, rdi	      2435	buffer.c	FUNCTION_33
0x4001439	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2435	buffer.c	FUNCTION_33
0x400143e	        0x89542414	             mov dword [rsp + 0x14], edx	      2435	buffer.c	FUNCTION_33
0x4001442	          0x4189cd	                           mov r13d, ecx	      2435	buffer.c	FUNCTION_33
0x4001445	          0x4589c7	                           mov r15d, r8d	      2435	buffer.c	FUNCTION_33
0x4001448	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      2435	buffer.c	FUNCTION_33
0x4001451	    0x48898c24d800	             mov qword [rsp + 0xd8], rcx	      2435	buffer.c	FUNCTION_33
0x4001459	            0x31c9	                            xor ecx, ecx	      2435	buffer.c	FUNCTION_33
0x400145b	        0x4883c001	                              add rax, 1	      2445	buffer.c	FUNCTION_33	IF_1
0x400145f	          0x4839c6	                            cmp rsi, rax	      2445	buffer.c	FUNCTION_33	IF_1
0x4001462	            0x7553	                           jne 0x40014b7	      2445	buffer.c	FUNCTION_33	IF_1
0x4001464	           0xfb607	                   movzx eax, byte [rdi]	      2445	buffer.c	FUNCTION_33	IF_1
0x4001467	          0x8d50dd	                   lea edx, [rax - 0x23]	      2445	buffer.c	FUNCTION_33	IF_1
0x400146a	          0xf6c2fd	                           test dl, 0xfd	      2445	buffer.c	FUNCTION_33	IF_1
0x400146d	            0x7548	                           jne 0x40014b7	      2445	buffer.c	FUNCTION_33	IF_1
0x400146f	            0x3c25	                            cmp al, 0x25	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001471	            0x7510	                           jne 0x4001483	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001473	    0x488b05000000	            mov rax, qword [0x0400147a] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x400147a	    0x448ba0b80000	           mov r12d, dword [rax + 0xb8] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001481	            0xeb0e	                           jmp 0x4001491	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001483	    0x488b05000000	            mov rax, qword [0x0400148a] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x400148a	    0x448ba0780100	          mov r12d, dword [rax + 0x178] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4001491	          0x4585ed	                         test r13d, r13d	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001494	     0xf84e9010000	                            je 0x4001683	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400149a	          0x4489e7	                           mov edi, r12d	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400149d	      0xe800000000	                          call 0x40014a2	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014a2	          0x4889c7	                            mov rdi, rax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014a5	      0xe800000000	                          call 0x40014aa	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014aa	            0x85c0	                           test eax, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014ac	     0xf8409020000	                            je 0x40016bb	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014b2	      0xe9cc010000	                           jmp 0x4001683	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40014b7	      0xb900000000	                              mov ecx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40014bc	      0xba00000000	                              mov edx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40014c1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40014c6	      0xe800000000	                          call 0x40014cb	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40014cb	          0x4889c7	                            mov rdi, rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40014ce	          0x4885c0	                           test rax, rax	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x40014d1	     0xf8410020000	                            je 0x40016e7	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x40014d7	      0xb800000000	                              mov eax, 0	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014dc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014e3	          0x4889fa	                            mov rdx, rdi	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014e6	        0x48893c24	                    mov qword [rsp], rdi	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014ea	            0xf2ae	              repne scasb al, byte [rdi]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014ec	          0x4889c8	                            mov rax, rcx	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014ef	          0x48f7d0	                                 not rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014f2	      0x488d4402fe	                lea rax, [rdx + rax - 2]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014f7	      0x4889442408	                mov qword [rsp + 8], rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40014fc	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001504	          0x4839c2	                            cmp rdx, rax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001507	            0x730d	                           jae 0x4001516	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001509	          0x803824	                    cmp byte [rax], 0x24	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400150c	           0xf94c0	                                 sete al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400150f	           0xfb6c0	                           movzx eax, al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001512	        0x89442410	             mov dword [rsp + 0x10], eax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001516	      0xbd01000000	                              mov ebp, 1	      2476	buffer.c	FUNCTION_33	ELSE_2
0x400151b	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2437	buffer.c	FUNCTION_33
0x4001521	    0x41be00000000	                             mov r14d, 0	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001527	      0x837c241000	               cmp dword [rsp + 0x10], 0	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400152c	            0x7418	                            je 0x4001546	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400152e	        0x4183fe02	                             cmp r14d, 2	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001532	      0xba24000000	                           mov edx, 0x24	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001537	      0xb800000000	                              mov eax, 0	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400153c	           0xf4dc2	                         cmovge eax, edx	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400153f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001544	            0x8801	                      mov byte [rcx], al	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001546	        0x488b0424	                    mov rax, qword [rsp]	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400154a	          0x4889c7	                            mov rdi, rax	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400154d	          0x80385e	                    cmp byte [rax], 0x5e	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001550	            0x750d	                           jne 0x400155f	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001552	          0x4489f0	                           mov eax, r14d	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001555	          0x83e001	                              and eax, 1	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001558	          0x83f801	                              cmp eax, 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400155b	        0x4883d700	                              adc rdi, 0	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400155f	    0x833d00000000	               cmp dword [0x04001566], 0	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001566	        0x400f95c6	                               setne sil	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400156a	        0x400fb6f6	                          movzx esi, sil	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400156e	      0xe800000000	                          call 0x4001573	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001573	      0x4889442420	             mov qword [rsp + 0x20], rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001578	          0x4885c0	                           test rax, rax	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400157b	            0x7513	                           jne 0x4001590	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400157d	        0x488b3c24	                    mov rdi, qword [rsp]	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4001581	      0xe800000000	                          call 0x4001586	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4001586	      0xb8ffffffff	                     mov eax, 0xffffffff	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400158b	      0xe95c010000	                           jmp 0x40016ec	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4001590	    0x488b1d000000	            mov rbx, qword [0x04001597] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001597	          0x4885db	                           test rbx, rbx	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400159a	     0xf849a000000	                            je 0x400163a	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x40015a0	    0x3bab24140000	          cmp ebp, dword [rbx + 0x1424] 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x40015a6	     0xf8581000000	                           jne 0x400162d	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x40015ac	          0x4585ed	                         test r13d, r13d	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015af	            0x740c	                            je 0x40015bd	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015b1	          0x4889df	                            mov rdi, rbx	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015b4	      0xe800000000	                          call 0x40015b9	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015b9	            0x85c0	                           test eax, eax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015bb	            0x7470	                            je 0x400162d	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x40015bd	    0x488bb3900000	            mov rsi, qword [rbx + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x40015c4	      0xba00000000	                              mov edx, 0	      2665	buffer.c	FUNCTION_35	CALL_1
0x40015c9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2665	buffer.c	FUNCTION_35	CALL_1
0x40015ce	      0xe804eeffff	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x40015d3	          0x4885c0	                           test rax, rax	      2666	buffer.c	FUNCTION_35	IF_1
0x40015d6	            0x751b	                           jne 0x40015f3	      2666	buffer.c	FUNCTION_35	IF_1
0x40015d8	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x40015df	      0xba00000000	                              mov edx, 0	      2667	buffer.c	FUNCTION_35	CALL_2
0x40015e4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2667	buffer.c	FUNCTION_35	CALL_2
0x40015e9	      0xe8e9edffff	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x40015ee	          0x4885c0	                           test rax, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40015f1	            0x743a	                            je 0x400162d	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x40015f3	          0x4585ff	                         test r15d, r15d	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x40015f6	            0x7425	                            je 0x400161d	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x40015f8	    0x488b05000000	            mov rax, qword [0x040015ff] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x40015ff	          0x4885c0	                           test rax, rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001602	            0x7429	                            je 0x400162d	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001604	        0x48395808	                cmp qword [rax + 8], rbx	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4001608	            0x7508	                           jne 0x4001612	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x400160a	            0xeb11	                           jmp 0x400161d	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x400160c	        0x48395808	                cmp qword [rax + 8], rbx	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4001610	            0x740b	                            je 0x400161d	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4001612	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001616	          0x4885c0	                           test rax, rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001619	            0x75f1	                           jne 0x400160c	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x400161b	            0xeb10	                           jmp 0x400162d	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x400161d	          0x4585e4	                         test r12d, r12d	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001620	     0xf89db000000	                           jns 0x4001701	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001626	    0x448ba3b80000	           mov r12d, dword [rbx + 0xb8] 	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400162d	        0x488b5b70	            mov rbx, qword [rbx + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001631	          0x4885db	                           test rbx, rbx	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001634	     0xf8566ffffff	                           jne 0x40015a0	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400163a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400163f	      0xe800000000	                          call 0x4001644	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001644	          0x4585e4	                         test r12d, r12d	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4001647	            0x790e	                           jns 0x4001657	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4001649	        0x4183c601	                             add r14d, 1	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400164d	        0x4183fe04	                             cmp r14d, 4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001651	     0xf85d0feffff	                           jne 0x4001527	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001657	      0x837c241400	               cmp dword [rsp + 0x14], 0	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400165c	           0xf94c2	                                 sete dl	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400165f	            0x85ed	                           test ebp, ebp	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001661	           0xf94c0	                                 sete al	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001664	             0x9d0	                             or eax, edx	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001666	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400166a	           0xf95c2	                                setne dl	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400166d	      0xbd00000000	                              mov ebp, 0	      2532	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x4001672	             0x8d0	                               or al, dl	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4001674	     0xf84a7feffff	                            je 0x4001521	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x400167a	        0x488b3c24	                    mov rdi, qword [rsp]	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400167e	      0xe800000000	                          call 0x4001683	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x4001683	        0x4183fcfe	            cmp r12d, 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x4001687	            0x7528	                           jne 0x40016b1	      2538	buffer.c	FUNCTION_33	IF_15
0x4001689	      0xba05000000	                              mov edx, 5	      2539	buffer.c	FUNCTION_33	CALL_13
0x400168e	      0xbe00000000	                              mov esi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x4001693	      0xbf00000000	                              mov edi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x4001698	      0xe800000000	                          call 0x400169d	      2539	buffer.c	FUNCTION_33	CALL_13
0x400169d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2539	buffer.c	FUNCTION_33	CALL_13
0x40016a2	          0x4889c7	                            mov rdi, rax	      2539	buffer.c	FUNCTION_33	CALL_13
0x40016a5	      0xe800000000	                          call 0x40016aa	      2539	buffer.c	FUNCTION_33	CALL_13
0x40016aa	      0xb8feffffff	                     mov eax, 0xfffffffe	      2542	buffer.c	FUNCTION_33
0x40016af	            0xeb3b	                           jmp 0x40016ec	      2542	buffer.c	FUNCTION_33
0x40016b1	          0x4489e0	                           mov eax, r12d	      2542	buffer.c	FUNCTION_33
0x40016b4	          0x4585e4	                         test r12d, r12d	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016b7	            0x7933	                           jns 0x40016ec	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016b9	            0xeb06	                           jmp 0x40016c1	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016bb	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2453	buffer.c	FUNCTION_33	IF_1	IF_3
0x40016c1	      0xba05000000	                              mov edx, 5	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016c6	      0xbe00000000	                              mov esi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016cb	      0xbf00000000	                              mov edi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016d0	      0xe800000000	                          call 0x40016d5	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016d5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016da	          0x4889c7	                            mov rdi, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016dd	      0xe800000000	                          call 0x40016e2	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016e2	          0x4489e0	                           mov eax, r12d	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016e5	            0xeb05	                           jmp 0x40016ec	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x40016e7	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x40016ec	    0x488b8c24d800	            mov rcx, qword [rsp + 0xd8] 	      2543	buffer.c	FUNCTION_33
0x40016f4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2543	buffer.c	FUNCTION_33
0x40016fd	            0x741c	                            je 0x400171b	      2543	buffer.c	FUNCTION_33
0x40016ff	            0xeb15	                           jmp 0x4001716	      2543	buffer.c	FUNCTION_33
0x4001701	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001706	      0xe800000000	                          call 0x400170b	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400170b	    0x41bcfeffffff	                    mov r12d, 0xfffffffe	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001711	      0xe933ffffff	                           jmp 0x4001649	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001716	      0xe800000000	                          call 0x400171b	      2543	buffer.c	FUNCTION_33
0x400171b	    0x4881c4e80000	                           add rsp, 0xe8	      2543	buffer.c	FUNCTION_33
0x4001722	              0x5b	                                 pop rbx	      2543	buffer.c	FUNCTION_33
0x4001723	              0x5d	                                 pop rbp	      2543	buffer.c	FUNCTION_33
0x4001724	            0x415c	                                 pop r12	      2543	buffer.c	FUNCTION_33
0x4001726	            0x415d	                                 pop r13	      2543	buffer.c	FUNCTION_33
0x4001728	            0x415e	                                 pop r14	      2543	buffer.c	FUNCTION_33
0x400172a	            0x415f	                                 pop r15	      2543	buffer.c	FUNCTION_33
0x400172c	              0xc3	                                     ret	      2543	buffer.c	FUNCTION_33
buf_delete_all_signs	CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	13
0x40090f4	              0x53	                                push rbx	      6075	buffer.c	FUNCTION_98
0x40090f5	    0x488b1d000000	            mov rbx, qword [0x040090fc] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x40090fc	          0x4885db	                           test rbx, rbx	      6078	buffer.c	FUNCTION_98	CALL_1
0x40090ff	            0x741b	                            je 0x400911c	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009101	    0x4883bb201c00	             cmp qword [rbx + 0x1c20], 0	      6079	buffer.c	FUNCTION_98	IF_1
0x4009109	            0x7408	                            je 0x4009113	      6079	buffer.c	FUNCTION_98	IF_1
0x400910b	          0x4889df	                            mov rdi, rbx	      6080	buffer.c	FUNCTION_98	CALL_2
0x400910e	      0xe800000000	                          call 0x4009113	      6080	buffer.c	FUNCTION_98	CALL_2
0x4009113	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009117	          0x4885db	                           test rbx, rbx	      6078	buffer.c	FUNCTION_98	CALL_1
0x400911a	            0x75e5	                           jne 0x4009101	      6078	buffer.c	FUNCTION_98	CALL_1
0x400911c	              0x5b	                                 pop rbx	      6081	buffer.c	FUNCTION_98
0x400911d	              0xc3	                                     ret	      6081	buffer.c	FUNCTION_98
bt_help	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	8
0x4002468	          0x4885ff	                           test rdi, rdi	      5618	buffer.c	FUNCTION_79
0x400246b	            0x740e	                            je 0x400247b	      5618	buffer.c	FUNCTION_79
0x400246d	    0x83bf58170000	             cmp dword [rdi + 0x1758], 0	      5618	buffer.c	FUNCTION_79
0x4002474	           0xf95c0	                                setne al	      5618	buffer.c	FUNCTION_79
0x4002477	           0xfb6c0	                           movzx eax, al	      5618	buffer.c	FUNCTION_79
0x400247a	              0xc3	                                     ret	      5618	buffer.c	FUNCTION_79
0x400247b	      0xb800000000	                              mov eax, 0	      5618	buffer.c	FUNCTION_79
0x4002480	              0xc3	                                     ret	      5619	buffer.c	FUNCTION_79
fileinfo	CALL,38:IF,10:SWITCH,0:ELSE,8:WHILE,0:FOR,0:DO,0:functions,0	296
0x4003432	            0x4157	                                push r15	      3401	buffer.c	FUNCTION_59
0x4003434	            0x4156	                                push r14	      3401	buffer.c	FUNCTION_59
0x4003436	            0x4155	                                push r13	      3401	buffer.c	FUNCTION_59
0x4003438	            0x4154	                                push r12	      3401	buffer.c	FUNCTION_59
0x400343a	              0x55	                                push rbp	      3401	buffer.c	FUNCTION_59
0x400343b	              0x53	                                push rbx	      3401	buffer.c	FUNCTION_59
0x400343c	        0x4883ec18	                           sub rsp, 0x18	      3401	buffer.c	FUNCTION_59
0x4003440	            0x89fd	                            mov ebp, edi	      3401	buffer.c	FUNCTION_59
0x4003442	          0x4189f4	                           mov r12d, esi	      3401	buffer.c	FUNCTION_59
0x4003445	          0x4189d7	                           mov r15d, edx	      3401	buffer.c	FUNCTION_59
0x4003448	      0xbf01040000	                          mov edi, 0x401	      3408	buffer.c	FUNCTION_59	CALL_1
0x400344d	      0xe800000000	                          call 0x4003452	      3408	buffer.c	FUNCTION_59	CALL_1
0x4003452	          0x4885c0	                           test rax, rax	      3409	buffer.c	FUNCTION_59	IF_1
0x4003455	     0xf8494040000	                            je 0x40038ef	      3409	buffer.c	FUNCTION_59	IF_1
0x400345b	          0x4889c3	                            mov rbx, rax	      3409	buffer.c	FUNCTION_59	IF_1
0x400345e	          0x83fd01	                              cmp ebp, 1	      3412	buffer.c	FUNCTION_59	IF_2
0x4003461	            0x7e40	                           jle 0x40034a3	      3412	buffer.c	FUNCTION_59	IF_2
0x4003463	    0x488b05000000	            mov rax, qword [0x0400346a] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400346a	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003470	      0xba00000000	                              mov edx, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003475	      0xbe01040000	                          mov esi, 0x401	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400347a	          0x4889df	                            mov rdi, rbx	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400347d	      0xb800000000	                              mov eax, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003482	      0xe800000000	                          call 0x4003487	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003487	      0xb800000000	                              mov eax, 0	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x400348c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4003493	          0x4889df	                            mov rdi, rbx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4003496	            0xf2ae	              repne scasb al, byte [rdi]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4003498	          0x4889ce	                            mov rsi, rcx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x400349b	          0x48f7d6	                                 not rsi	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x400349e	      0x488d4433ff	                lea rax, [rbx + rsi - 1]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x40034a3	        0x4c8d6801	                      lea r13, [rax + 1]	      3420	buffer.c	FUNCTION_59
0x40034a7	          0xc60022	                    mov byte [rax], 0x22	      3420	buffer.c	FUNCTION_59
0x40034aa	    0x488b3d000000	            mov rdi, qword [0x040034b1] 	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40034b1	      0xe800000000	                          call 0x40034b6	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40034b6	          0x4885c0	                           test rax, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40034b9	            0x7426	                            je 0x40034e1	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40034bb	    0x488b3d000000	            mov rdi, qword [0x040034c2] 	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034c2	      0xe800000000	                          call 0x40034c7	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034c7	          0x4889da	                            mov rdx, rbx	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034ca	          0x4c29ea	                            sub rdx, r13	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034cd	    0x488d92000400	                  lea rdx, [rdx + 0x400]	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034d4	          0x4889c6	                            mov rsi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034d7	          0x4c89ef	                            mov rdi, r13	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034da	      0xe800000000	                          call 0x40034df	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034df	            0xeb4e	                           jmp 0x400352f	      3422	buffer.c	FUNCTION_59	CALL_6
0x40034e1	            0x85ed	                           test ebp, ebp	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034e3	            0x7513	                           jne 0x40034f8	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034e5	    0x488b05000000	            mov rax, qword [0x040034ec] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034ec	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034f3	          0x4885f6	                           test rsi, rsi	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034f6	            0x750e	                           jne 0x4003506	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x40034f8	    0x488b05000000	            mov rax, qword [0x040034ff] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x40034ff	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x4003506	            0x89d8	                            mov eax, ebx	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003508	          0x4429e8	                           sub eax, r13d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x400350b	    0x8d8801040000	                  lea ecx, [rax + 0x401]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003511	          0x4585e4	                         test r12d, r12d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003514	      0xbf00000000	                              mov edi, 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003519	    0x480f453d0000	          cmovne rdi, qword [0x04003521]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003521	    0x41b801000000	                              mov r8d, 1	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003527	          0x4c89ea	                            mov rdx, r13	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x400352a	      0xe800000000	                          call 0x400352f	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x400352f	      0xe800000000	                          call 0x4003534	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003534	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003536	            0x7521	                           jne 0x4003559	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003538	    0x488b05000000	            mov rax, qword [0x0400353f] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x400353f	        0xf6407c58	           test byte [rax + 0x7c], 0x58 	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003543	            0x7514	                           jne 0x4003559	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003545	    0x83b860150000	             cmp dword [rax + 0x1560], 0	      3450	buffer.c	FUNCTION_59
0x400354c	            0x7527	                           jne 0x4003575	      3450	buffer.c	FUNCTION_59
0x400354e	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003554	          0x4d89f5	                            mov r13, r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003557	            0xeb66	                           jmp 0x40035bf	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003559	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400355f	    0x41bd00000000	                             mov r13d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003565	    0x488b05000000	            mov rax, qword [0x0400356c] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x400356c	    0x83b860150000	             cmp dword [rax + 0x1560], 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003573	            0x744a	                            je 0x40035bf	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003575	      0xbf72000000	                           mov edi, 0x72	      3447	buffer.c	FUNCTION_59	CALL_18
0x400357a	      0xe800000000	                          call 0x400357f	      3447	buffer.c	FUNCTION_59	CALL_18
0x400357f	            0x85c0	                           test eax, eax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003581	            0x741f	                            je 0x40035a2	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003583	      0xba05000000	                              mov edx, 5	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003588	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x400358d	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003592	      0xe800000000	                          call 0x4003597	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003597	          0x4989c5	                            mov r13, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x400359a	    0x41be00000000	                             mov r14d, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035a0	            0xeb1d	                           jmp 0x40035bf	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035a2	      0xba05000000	                              mov edx, 5	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035a7	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035ac	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035b1	      0xe800000000	                          call 0x40035b6	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035b6	          0x4989c5	                            mov r13, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035b9	    0x41be00000000	                             mov r14d, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40035bf	    0x41bc00000000	                             mov r12d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035c5	    0x488b05000000	            mov rax, qword [0x040035cc] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035cc	        0xf6407c40	           test byte [rax + 0x7c], 0x40 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035d0	            0x7417	                            je 0x40035e9	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035d2	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035d7	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035dc	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035e1	      0xe800000000	                          call 0x40035e6	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035e6	          0x4989c4	                            mov r12, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035e9	    0x488b3d000000	            mov rdi, qword [0x040035f0] 	      3441	buffer.c	FUNCTION_59
0x40035f0	        0xf6477c10	           test byte [rdi + 0x7c], 0x10 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035f4	            0x7432	                            je 0x4003628	      3433	buffer.c	FUNCTION_59	CALL_8
0x40035f6	      0xe800000000	                          call 0x40035fb	      3443	buffer.c	FUNCTION_59	CALL_14
0x40035fb	    0x48c744240800	                  mov qword [rsp + 8], 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003604	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003609	            0x85c0	                           test eax, eax	      3443	buffer.c	FUNCTION_59	CALL_14
0x400360b	            0x7556	                           jne 0x4003663	      3443	buffer.c	FUNCTION_59	CALL_14
0x400360d	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003612	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003617	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400361c	      0xe800000000	                          call 0x4003621	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003621	      0x4889442408	                mov qword [rsp + 8], rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003626	            0xeb09	                           jmp 0x4003631	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003628	    0x48c744240800	                  mov qword [rsp + 8], 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003631	    0x488b3d000000	            mov rdi, qword [0x04003638] 	      3436	buffer.c	FUNCTION_59
0x4003638	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400363d	        0xf6477c08	               test byte [rdi + 0x7c], 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003641	            0x7420	                            je 0x4003663	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003643	      0xe800000000	                          call 0x4003648	      3438	buffer.c	FUNCTION_59	CALL_12
0x4003648	            0x85c0	                           test eax, eax	      3438	buffer.c	FUNCTION_59	CALL_12
0x400364a	            0x7517	                           jne 0x4003663	      3438	buffer.c	FUNCTION_59	CALL_12
0x400364c	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003651	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003656	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400365b	      0xe800000000	                          call 0x4003660	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003660	          0x4889c5	                            mov rbp, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003663	      0xe800000000	                          call 0x4003668	      3434	buffer.c	FUNCTION_59	CALL_10
0x4003668	      0xb900000000	                              mov ecx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400366d	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x400366f	            0x742a	                            je 0x400369b	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003671	      0xbf6d000000	                           mov edi, 0x6d	      3434	buffer.c	FUNCTION_59	CALL_10
0x4003676	      0xe800000000	                          call 0x400367b	      3434	buffer.c	FUNCTION_59	CALL_10
0x400367b	      0xb900000000	                              mov ecx, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003680	            0x85c0	                           test eax, eax	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003682	            0x7517	                           jne 0x400369b	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003684	      0xba05000000	                              mov edx, 5	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003689	      0xbe00000000	                              mov esi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x400368e	      0xbf00000000	                              mov edi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003693	      0xe800000000	                          call 0x4003698	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003698	          0x4889c1	                            mov rcx, rax	      3435	buffer.c	FUNCTION_59	CALL_11
0x400369b	        0x4883ec08	                              sub rsp, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x400369f	            0x4156	                                push r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036a1	            0x4155	                                push r13	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036a3	            0x4154	                                push r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036a5	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036aa	          0x4989e8	                             mov r8, rbp	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036ad	      0xba00000000	                              mov edx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036b2	      0xbe01040000	                          mov esi, 0x401	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036b7	          0x4889df	                            mov rdi, rbx	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036ba	      0xb800000000	                              mov eax, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036bf	      0xe800000000	                          call 0x40036c4	      3433	buffer.c	FUNCTION_59	CALL_8
0x40036c4	    0x488b05000000	            mov rax, qword [0x040036cb] 	      3454	buffer.c	FUNCTION_59	IF_5
0x40036cb	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      3454	buffer.c	FUNCTION_59	IF_5
0x40036cf	        0x4883c420	                           add rsp, 0x20	      3454	buffer.c	FUNCTION_59	IF_5
0x40036d3	    0x4881fd40420f	                        cmp rbp, 0xf4240	      3454	buffer.c	FUNCTION_59	IF_5
0x40036da	            0x7e36	                           jle 0x4003712	      3454	buffer.c	FUNCTION_59	IF_5
0x40036dc	    0x488b05000000	            mov rax, qword [0x040036e3] 	      3456	buffer.c	FUNCTION_59	IF_5
0x40036e3	          0x488b30	                    mov rsi, qword [rax]	      3455	buffer.c	FUNCTION_59	IF_5
0x40036e6	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3455	buffer.c	FUNCTION_59	IF_5
0x40036f0	          0x4889f0	                            mov rax, rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x40036f3	          0x48f7ea	                                imul rdx	      3455	buffer.c	FUNCTION_59	IF_5
0x40036f6	        0x488d0c32	                    lea rcx, [rdx + rsi]	      3455	buffer.c	FUNCTION_59	IF_5
0x40036fa	        0x48c1f906	                              sar rcx, 6	      3455	buffer.c	FUNCTION_59	IF_5
0x40036fe	        0x48c1fe3f	                           sar rsi, 0x3f	      3455	buffer.c	FUNCTION_59	IF_5
0x4003702	          0x4829f1	                            sub rcx, rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x4003705	          0x4889e8	                            mov rax, rbp	      3455	buffer.c	FUNCTION_59	IF_5
0x4003708	            0x4899	                                     cqo	      3455	buffer.c	FUNCTION_59	IF_5
0x400370a	          0x48f7f9	                                idiv rcx	      3455	buffer.c	FUNCTION_59	IF_5
0x400370d	          0x4989c4	                            mov r12, rax	      3455	buffer.c	FUNCTION_59	IF_5
0x4003710	            0xeb1c	                           jmp 0x400372e	      3455	buffer.c	FUNCTION_59	IF_5
0x4003712	      0x488d44ad00	                  lea rax, [rbp + rbp*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003717	        0x488d0480	                  lea rax, [rax + rax*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x400371b	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x400371f	    0x488b35000000	            mov rsi, qword [0x04003726] 	      3459	buffer.c	FUNCTION_59	ELSE_4
0x4003726	            0x4899	                                     cqo	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003728	          0x48f73e	                        idiv qword [rsi]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x400372b	          0x4989c4	                            mov r12, rax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x400372e	    0x488b05000000	            mov rax, qword [0x04003735] 	      3460	buffer.c	FUNCTION_59	IF_6
0x4003735	        0xf6401001	               test byte [rax + 0x10], 1	      3460	buffer.c	FUNCTION_59	IF_6
0x4003739	            0x7433	                            je 0x400376e	      3460	buffer.c	FUNCTION_59	IF_6
0x400373b	      0xba05000000	                              mov edx, 5	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003740	      0xbe00000000	                              mov esi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003745	      0xbf00000000	                              mov edi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400374a	      0xe800000000	                          call 0x400374f	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400374f	          0x4889c1	                            mov rcx, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003752	      0xba00000000	                              mov edx, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003757	      0xbe01040000	                          mov esi, 0x401	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400375c	          0x4889df	                            mov rdi, rbx	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400375f	      0xb800000000	                              mov eax, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003764	      0xe800000000	                          call 0x4003769	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003769	      0xe9ef000000	                           jmp 0x400385d	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400376e	    0x833d00000000	               cmp dword [0x04003775], 0	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4003775	            0x746b	                            je 0x40037e2	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4003777	          0x488b28	                    mov rbp, qword [rax]	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x400377a	        0x4883fd01	                              cmp rbp, 1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x400377e	            0x7531	                           jne 0x40037b1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4003780	      0xba05000000	                              mov edx, 5	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003785	      0xbe00000000	                              mov esi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400378a	      0xbf00000000	                              mov edi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400378f	      0xe800000000	                          call 0x4003794	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003794	          0x4489e1	                           mov ecx, r12d	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003797	          0x4889c2	                            mov rdx, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400379a	      0xbe01040000	                          mov esi, 0x401	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x400379f	          0x4889df	                            mov rdi, rbx	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40037a2	      0xb800000000	                              mov eax, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40037a7	      0xe800000000	                          call 0x40037ac	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40037ac	      0xe9ac000000	                           jmp 0x400385d	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40037b1	      0xba05000000	                              mov edx, 5	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037b6	      0xbe00000000	                              mov esi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037bb	      0xbf00000000	                              mov edi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037c0	      0xe800000000	                          call 0x40037c5	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037c5	          0x4589e0	                           mov r8d, r12d	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037c8	          0x4889e9	                            mov rcx, rbp	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037cb	          0x4889c2	                            mov rdx, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037ce	      0xbe01040000	                          mov esi, 0x401	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037d3	          0x4889df	                            mov rdi, rbx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037d6	      0xb800000000	                              mov eax, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037db	      0xe800000000	                          call 0x40037e0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037e0	            0xeb7b	                           jmp 0x400385d	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x40037e2	          0x4c8b28	                    mov r13, qword [rax]	      3480	buffer.c	FUNCTION_59	ELSE_7
0x40037e5	      0xba05000000	                              mov edx, 5	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037ea	      0xbe00000000	                              mov esi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037ef	      0xbf00000000	                              mov edi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037f4	      0xe800000000	                          call 0x40037f9	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037f9	          0x4589e1	                           mov r9d, r12d	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037fc	          0x4d89e8	                             mov r8, r13	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x40037ff	          0x4889e9	                            mov rcx, rbp	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003802	          0x4889c2	                            mov rdx, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003805	      0xbe01040000	                          mov esi, 0x401	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400380a	          0x4889df	                            mov rdi, rbx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400380d	      0xb800000000	                              mov eax, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003812	      0xe800000000	                          call 0x4003817	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003817	      0xe800000000	                          call 0x400381c	      3482	buffer.c	FUNCTION_59	ELSE_7	CALL_29
0x400381c	      0xb800000000	                              mov eax, 0	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003821	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003828	          0x4889df	                            mov rdi, rbx	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x400382b	            0xf2ae	              repne scasb al, byte [rdi]	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x400382d	          0x4889ce	                            mov rsi, rcx	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003830	          0x48f7d6	                                 not rsi	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003833	        0x488d7eff	                      lea rdi, [rsi - 1]	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003837	    0x488b05000000	            mov rax, qword [0x0400383e] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x400383e	    0x8bb0d8000000	            mov esi, dword [rax + 0xd8] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003844	          0x8d4e01	                      lea ecx, [rsi + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003847	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400384a	          0x83c201	                              add edx, 1	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400384d	      0xbe01040000	                          mov esi, 0x401	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003852	          0x4829fe	                            sub rsi, rdi	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003855	          0x4801df	                            add rdi, rbx	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003858	      0xe800000000	                          call 0x400385d	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400385d	      0xbf66000000	                           mov edi, 0x66	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003862	      0xe800000000	                          call 0x4003867	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003867	            0x85c0	                           test eax, eax	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003869	           0xf94c1	                                 sete cl	      3488	buffer.c	FUNCTION_59	CALL_33
0x400386c	           0xfb6c9	                           movzx ecx, cl	      3488	buffer.c	FUNCTION_59	CALL_33
0x400386f	      0xba01040000	                          mov edx, 0x401	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003874	          0x4889de	                            mov rsi, rbx	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003877	    0x488b3d000000	            mov rdi, qword [0x0400387e] 	      3488	buffer.c	FUNCTION_59	CALL_33
0x400387e	      0xe8d3cbffff	              call sym.append_arg_number	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003883	          0x4585ff	                         test r15d, r15d	      3490	buffer.c	FUNCTION_59	IF_9
0x4003886	            0x7425	                            je 0x40038ad	      3490	buffer.c	FUNCTION_59	IF_9
0x4003888	      0xe800000000	                          call 0x400388d	      3494	buffer.c	FUNCTION_59	IF_9	CALL_34
0x400388d	    0x8b2d00000000	            mov ebp, dword [0x04003893] 	      3495	buffer.c	FUNCTION_59	IF_9
0x4003893	    0xc70500000000	               mov dword [0x0400389d], 1	      3496	buffer.c	FUNCTION_59	IF_9
0x400389d	          0x4889df	                            mov rdi, rbx	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x40038a0	      0xe800000000	                          call 0x40038a5	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x40038a5	    0x892d00000000	            mov dword [0x040038ab], ebp 	      3498	buffer.c	FUNCTION_59	IF_9
0x40038ab	            0xeb3a	                           jmp 0x40038e7	      3498	buffer.c	FUNCTION_59	IF_9
0x40038ad	      0xba00000000	                              mov edx, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40038b2	      0xbe00000000	                              mov esi, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40038b7	          0x4889df	                            mov rdi, rbx	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40038ba	      0xe800000000	                          call 0x40038bf	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x40038bf	    0x833d00000000	               cmp dword [0x040038c6], 0	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038c6	            0x7512	                           jne 0x40038da	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038c8	    0x833d00000000	               cmp dword [0x040038cf], 0	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038cf	            0x7416	                            je 0x40038e7	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038d1	    0x833d00000000	               cmp dword [0x040038d8], 0	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038d8	            0x750d	                           jne 0x40038e7	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x40038da	      0xbe00000000	                              mov esi, 0	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40038df	          0x4889c7	                            mov rdi, rax	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40038e2	      0xe800000000	                          call 0x40038e7	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x40038e7	          0x4889df	                            mov rdi, rbx	      3512	buffer.c	FUNCTION_59	CALL_38
0x40038ea	      0xe800000000	                          call 0x40038ef	      3512	buffer.c	FUNCTION_59	CALL_38
0x40038ef	        0x4883c418	                           add rsp, 0x18	      3513	buffer.c	FUNCTION_59
0x40038f3	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x40038f4	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x40038f5	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x40038f7	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x40038f9	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x40038fb	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x40038fd	              0xc3	                                     ret	      3513	buffer.c	FUNCTION_59
buf_spname	CALL,8:IF,6:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	59
0x4002e50	              0x53	                                push rbx	      5677	buffer.c	FUNCTION_84
0x4002e51	        0x4883ec20	                           sub rsp, 0x20	      5677	buffer.c	FUNCTION_84
0x4002e55	          0x4889fb	                            mov rbx, rdi	      5677	buffer.c	FUNCTION_84
0x4002e58	    0x64488b042528	                mov rax, qword fs:[0x28]	      5677	buffer.c	FUNCTION_84
0x4002e61	      0x4889442418	             mov qword [rsp + 0x18], rax	      5677	buffer.c	FUNCTION_84
0x4002e66	            0x31c0	                            xor eax, eax	      5677	buffer.c	FUNCTION_84
0x4002e68	      0xe800000000	                          call 0x4002e6d	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x4002e6d	            0x85c0	                           test eax, eax	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x4002e6f	            0x7452	                            je 0x4002ec3	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0x4002e71	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e76	      0x488d742408	                      lea rsi, [rsp + 8]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e7b	          0x4889df	                            mov rdi, rbx	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e7e	      0xe800000000	                          call 0x4002e83	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e83	          0x83f801	                              cmp eax, 1	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e86	            0x7525	                           jne 0x4002ead	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e88	      0x488b442408	                mov rax, qword [rsp + 8]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e8d	    0x4883b8501900	             cmp qword [rax + 0x1950], 0	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e95	            0x7416	                            je 0x4002ead	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4002e97	      0xba05000000	                              mov edx, 5	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4002e9c	      0xbe00000000	                              mov esi, 0	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4002ea1	      0xbf00000000	                              mov edi, 0	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4002ea6	      0xe800000000	                          call 0x4002eab	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4002eab	            0xeb7a	                           jmp 0x4002f27	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4002ead	      0xba05000000	                              mov edx, 5	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4002eb2	      0xbe00000000	                              mov esi, 0	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4002eb7	      0xbf00000000	                              mov edi, 0	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4002ebc	      0xe800000000	                          call 0x4002ec1	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4002ec1	            0xeb64	                           jmp 0x4002f27	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4002ec3	          0x4889df	                            mov rdi, rbx	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x4002ec6	      0xe800000000	                          call 0x4002ecb	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x4002ecb	            0x85c0	                           test eax, eax	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x4002ecd	            0x7435	                            je 0x4002f04	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0x4002ecf	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4002ed6	          0x4885ff	                           test rdi, rdi	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4002ed9	            0x7407	                            je 0x4002ee2	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4002edb	      0xe800000000	                          call 0x4002ee0	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x4002ee0	            0xeb45	                           jmp 0x4002f27	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x4002ee2	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4002ee9	          0x4885c0	                           test rax, rax	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4002eec	            0x7539	                           jne 0x4002f27	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4002eee	      0xba05000000	                              mov edx, 5	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4002ef3	      0xbe00000000	                              mov esi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4002ef8	      0xbf00000000	                              mov edi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4002efd	      0xe800000000	                          call 0x4002f02	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4002f02	            0xeb23	                           jmp 0x4002f27	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4002f04	      0xb800000000	                              mov eax, 0	      5710	buffer.c	FUNCTION_84
0x4002f09	    0x4883bb980000	               cmp qword [rbx + 0x98], 0	      5708	buffer.c	FUNCTION_84	IF_6
0x4002f11	            0x7514	                           jne 0x4002f27	      5708	buffer.c	FUNCTION_84	IF_6
0x4002f13	      0xba05000000	                              mov edx, 5	      5709	buffer.c	FUNCTION_84	CALL_8
0x4002f18	      0xbe00000000	                              mov esi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0x4002f1d	      0xbf00000000	                              mov edi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0x4002f22	      0xe800000000	                          call 0x4002f27	      5709	buffer.c	FUNCTION_84	CALL_8
0x4002f27	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5711	buffer.c	FUNCTION_84
0x4002f2c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5711	buffer.c	FUNCTION_84
0x4002f35	            0x7405	                            je 0x4002f3c	      5711	buffer.c	FUNCTION_84
0x4002f37	      0xe800000000	                          call 0x4002f3c	      5711	buffer.c	FUNCTION_84
0x4002f3c	        0x4883c420	                           add rsp, 0x20	      5711	buffer.c	FUNCTION_84
0x4002f40	              0x5b	                                 pop rbx	      5711	buffer.c	FUNCTION_84
0x4002f41	              0xc3	                                     ret	      5711	buffer.c	FUNCTION_84
append_arg_number	CALL,3:IF,3:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	48
0x4000456	    0x488b05000000	            mov rax, qword [0x0400045d] 	      4724	buffer.c	FUNCTION_67	IF_1
0x400045d	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4724	buffer.c	FUNCTION_67	IF_1
0x4000464	          0x833801	                      cmp dword [rax], 1	      4724	buffer.c	FUNCTION_67	IF_1
0x4000467	     0xf8eaa000000	                           jle 0x4000517	      4724	buffer.c	FUNCTION_67	IF_1
0x400046d	          0x4989f9	                             mov r9, rdi	      4724	buffer.c	FUNCTION_67	IF_1
0x4000470	          0x4189ca	                           mov r10d, ecx	      4724	buffer.c	FUNCTION_67	IF_1
0x4000473	      0xb800000000	                              mov eax, 0	      4727	buffer.c	FUNCTION_67	CALL_1
0x4000478	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4727	buffer.c	FUNCTION_67	CALL_1
0x400047f	          0x4889f7	                            mov rdi, rsi	      4727	buffer.c	FUNCTION_67	CALL_1
0x4000482	            0xf2ae	              repne scasb al, byte [rdi]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4000484	          0x48f7d1	                                 not rcx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4000487	        0x488d79ff	                      lea rdi, [rcx - 1]	      4727	buffer.c	FUNCTION_67	CALL_1
0x400048b	          0x4c63c2	                          movsxd r8, edx	      4728	buffer.c	FUNCTION_67	IF_2
0x400048e	        0x4883c122	                           add rcx, 0x22	      4728	buffer.c	FUNCTION_67	IF_2
0x4000492	      0xb800000000	                              mov eax, 0	      4729	buffer.c	FUNCTION_67	IF_2
0x4000497	          0x4c39c1	                             cmp rcx, r8	      4728	buffer.c	FUNCTION_67	IF_2
0x400049a	     0xf8d81000000	                           jge 0x4000521	      4728	buffer.c	FUNCTION_67	IF_2
0x40004a0	        0x4883ec08	                              sub rsp, 8	      4721	buffer.c	FUNCTION_67
0x40004a4	        0x488d043e	                    lea rax, [rsi + rdi]	      4727	buffer.c	FUNCTION_67	CALL_1
0x40004a8	          0xc60020	                    mov byte [rax], 0x20	      4730	buffer.c	FUNCTION_67
0x40004ab	        0x488d7802	                      lea rdi, [rax + 2]	      4731	buffer.c	FUNCTION_67
0x40004af	        0xc6400128	                mov byte [rax + 1], 0x28	      4731	buffer.c	FUNCTION_67
0x40004b3	          0x4585d2	                         test r10d, r10d	      4732	buffer.c	FUNCTION_67	IF_3
0x40004b6	            0x7411	                            je 0x40004c9	      4732	buffer.c	FUNCTION_67	IF_3
0x40004b8	    0xc7400266696c	        mov dword [rax + 2], 0x656c6966 	       110	string3.h	FUNCTION_110	CALL_3
0x40004bf	    0x66c747042000	                mov word [rdi + 4], 0x20	       110	string3.h	FUNCTION_110	CALL_3
0x40004c5	        0x488d7807	                      lea rdi, [rax + 7]	      4735	buffer.c	FUNCTION_67	IF_3
0x40004c9	    0x488b05000000	            mov rax, qword [0x040004d0] 	      4739	buffer.c	FUNCTION_67
0x40004d0	    0x4c8b90800100	           mov r10, qword [rax + 0x180] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004d7	    0x418b81880100	            mov eax, dword [r9 + 0x188] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004de	          0x8d4801	                      lea ecx, [rax + 1]	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004e1	    0x4183b98c0100	               cmp dword [r9 + 0x18c], 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004e9	      0xba00000000	                              mov edx, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004ee	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004f3	        0x480f45d0	                         cmovne rdx, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004f7	          0x4889f8	                            mov rax, rdi	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004fa	          0x4829f0	                            sub rax, rsi	      4737	buffer.c	FUNCTION_67	CALL_3
0x40004fd	          0x4c89c6	                             mov rsi, r8	      4737	buffer.c	FUNCTION_67	CALL_3
0x4000500	          0x4829c6	                            sub rsi, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4000503	          0x458b02	                    mov r8d, dword [r10]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4000506	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x400050b	      0xe800000000	                          call 0x4000510	      4737	buffer.c	FUNCTION_67	CALL_3
0x4000510	      0xb801000000	                              mov eax, 1	      4740	buffer.c	FUNCTION_67
0x4000515	            0xeb06	                           jmp 0x400051d	      4740	buffer.c	FUNCTION_67
0x4000517	      0xb800000000	                              mov eax, 0	      4725	buffer.c	FUNCTION_67	IF_1
0x400051c	              0xc3	                                     ret	      4725	buffer.c	FUNCTION_67	IF_1
0x400051d	        0x4883c408	                              add rsp, 8	      4741	buffer.c	FUNCTION_67
0x4000521	            0xf3c3	                                     ret	      4741	buffer.c	FUNCTION_67
set_bufref	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	10
0x40009c7	          0x488937	                    mov qword [rdi], rsi	       361	buffer.c	FUNCTION_3
0x40009ca	          0x4885f6	                           test rsi, rsi	       362	buffer.c	FUNCTION_3
0x40009cd	            0x7408	                            je 0x40009d7	       362	buffer.c	FUNCTION_3
0x40009cf	    0x8b86b8000000	            mov eax, dword [rsi + 0xb8] 	       362	buffer.c	FUNCTION_3
0x40009d5	            0xeb05	                           jmp 0x40009dc	       362	buffer.c	FUNCTION_3
0x40009d7	      0xb800000000	                              mov eax, 0	       362	buffer.c	FUNCTION_3
0x40009dc	          0x894708	                mov dword [rdi + 8], eax	       362	buffer.c	FUNCTION_3
0x40009df	    0x8b0500000000	            mov eax, dword [0x040009e5] 	       363	buffer.c	FUNCTION_3
0x40009e5	          0x89470c	              mov dword [rdi + 0xc], eax	       363	buffer.c	FUNCTION_3
0x40009e8	              0xc3	                                     ret	       363	buffer.c	FUNCTION_3
set_buflisted	CALL,2:IF,2:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	20
0x40092ff	    0x4c8b05000000	              mov r8, qword [0x04009306]	      6153	buffer.c	FUNCTION_101	IF_1
0x4009306	    0x4139b8241400	           cmp dword [r8 + 0x1424], edi 	      6153	buffer.c	FUNCTION_101	IF_1
0x400930d	            0x7447	                            je 0x4009356	      6153	buffer.c	FUNCTION_101	IF_1
0x400930f	        0x4883ec08	                              sub rsp, 8	      6152	buffer.c	FUNCTION_101
0x4009313	    0x4189b8241400	           mov dword [r8 + 0x1424], edi 	      6155	buffer.c	FUNCTION_101	IF_1
0x400931a	            0x85ff	                           test edi, edi	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400931c	            0x741b	                            je 0x4009339	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400931e	      0xb900000000	                              mov ecx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x4009323	      0xba00000000	                              mov edx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x4009328	      0xbe00000000	                              mov esi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400932d	      0xbf00000000	                              mov edi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x4009332	      0xe800000000	                          call 0x4009337	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x4009337	            0xeb19	                           jmp 0x4009352	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x4009339	      0xb900000000	                              mov ecx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400933e	      0xba00000000	                              mov edx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x4009343	      0xbe00000000	                              mov esi, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x4009348	      0xbf01000000	                              mov edi, 1	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400934d	      0xe800000000	                          call 0x4009352	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x4009352	        0x4883c408	                              add rsp, 8	      6161	buffer.c	FUNCTION_101
0x4009356	            0xf3c3	                                     ret	      6161	buffer.c	FUNCTION_101
buf_addsign	CALL,2:IF,4:SWITCH,0:ELSE,3:WHILE,2:FOR,1:DO,0:functions,0	58
0x4006093	              0x53	                                push rbx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x4006094	          0x4989d0	                             mov r8, rdx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x4006097	          0x4189c9	                            mov r9d, ecx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400609a	    0x488b97201c00	          mov rdx, qword [rdi + 0x1c20] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060a1	          0x4885d2	                           test rdx, rdx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060a4	            0x7474	                            je 0x400611a	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060a6	          0x4889d0	                            mov rax, rdx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060a9	      0xbb00000000	                              mov ebx, 0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060ae	            0xeb03	                           jmp 0x40060b3	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060b0	          0x4c89d0	                            mov rax, r10	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060b3	        0x4c8b5808	                mov r11, qword [rax + 8]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060b7	          0x4d39c3	                             cmp r11, r8	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060ba	            0x750a	                           jne 0x40060c6	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060bc	            0x3b30	                    cmp esi, dword [rax]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060be	            0x7533	                           jne 0x40060f3	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060c0	        0x44894810	             mov dword [rax + 0x10], r9d	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060c4	            0xeb6f	                           jmp 0x4006135	      5846	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40060c6	          0x4d39c3	                             cmp r11, r8	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x40060c9	            0x7e28	                           jle 0x40060f3	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x40060cb	          0x4885db	                           test rbx, rbx	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060ce	            0x7417	                            je 0x40060e7	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060d0	        0x4c3b4308	                 cmp r8, qword [rbx + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060d4	            0x7553	                           jne 0x4006129	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060d6	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060da	          0x4885db	                           test rbx, rbx	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060dd	            0x7408	                            je 0x40060e7	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060df	        0x4c3b4308	                 cmp r8, qword [rbx + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060e3	            0x74f1	                            je 0x40060d6	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060e5	            0xeb42	                           jmp 0x4006129	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40060e7	            0x89f1	                            mov ecx, esi	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40060e9	          0x4889de	                            mov rsi, rbx	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40060ec	      0xe825a8ffff	                    call sym.insert_sign	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40060f1	            0xeb42	                           jmp 0x4006135	      5867	buffer.c	FUNCTION_89	FOR_1	IF_2
0x40060f3	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060f7	          0x4889c3	                            mov rbx, rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060fa	          0x4d85d2	                           test r10, r10	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060fd	            0x75b1	                           jne 0x40060b0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40060ff	          0x4885c0	                           test rax, rax	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006102	            0x7419	                            je 0x400611d	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006104	          0x4d39c3	                             cmp r11, r8	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006107	            0x7526	                           jne 0x400612f	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006109	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400610d	          0x4885c0	                           test rax, rax	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006110	            0x740b	                            je 0x400611d	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006112	        0x4c3b4008	                 cmp r8, qword [rax + 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006116	            0x74f1	                            je 0x4006109	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006118	            0xeb15	                           jmp 0x400612f	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400611a	          0x4889d0	                            mov rax, rdx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400611d	            0x89f1	                            mov ecx, esi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400611f	          0x4889c6	                            mov rsi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006122	      0xe8efa7ffff	                    call sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006127	            0xeb0c	                           jmp 0x4006135	      5882	buffer.c	FUNCTION_89	ELSE_1
0x4006129	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400612d	            0xebb8	                           jmp 0x40060e7	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400612f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0x4006133	            0xebe8	                           jmp 0x400611d	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0x4006135	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x4006136	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
restore_win_for_buf	CALL,2:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	10
0x4002dc4	        0x4883ec08	                              sub rsp, 8	      5748	buffer.c	FUNCTION_86
0x4002dc8	        0x48833a00	                      cmp qword [rdx], 0	      5749	buffer.c	FUNCTION_86	IF_1
0x4002dcc	            0x750c	                           jne 0x4002dda	      5749	buffer.c	FUNCTION_86	IF_1
0x4002dce	      0xba01000000	                              mov edx, 1	      5750	buffer.c	FUNCTION_86	CALL_1
0x4002dd3	      0xe800000000	                          call 0x4002dd8	      5750	buffer.c	FUNCTION_86	CALL_1
0x4002dd8	            0xeb08	                           jmp 0x4002de2	      5750	buffer.c	FUNCTION_86	CALL_1
0x4002dda	          0x4889d7	                            mov rdi, rdx	      5752	buffer.c	FUNCTION_86	CALL_2
0x4002ddd	      0xe800000000	                          call 0x4002de2	      5752	buffer.c	FUNCTION_86	CALL_2
0x4002de2	        0x4883c408	                              add rsp, 8	      5753	buffer.c	FUNCTION_86
0x4002de6	              0xc3	                                     ret	      5753	buffer.c	FUNCTION_86
fname_match	CALL,4:IF,3:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	40
0x40003d7	            0x4154	                                push r12	      2681	buffer.c	FUNCTION_36
0x40003d9	              0x55	                                push rbp	      2681	buffer.c	FUNCTION_36
0x40003da	              0x53	                                push rbx	      2681	buffer.c	FUNCTION_36
0x40003db	          0x4889f3	                            mov rbx, rsi	      2681	buffer.c	FUNCTION_36
0x40003de	          0x4885f6	                           test rsi, rsi	      2685	buffer.c	FUNCTION_36	IF_1
0x40003e1	            0x746b	                            je 0x400044e	      2685	buffer.c	FUNCTION_36	IF_1
0x40003e3	          0x4889fd	                            mov rbp, rdi	      2685	buffer.c	FUNCTION_36	IF_1
0x40003e6	    0x48833d000000	               cmp qword [0x040003ee], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x40003ee	           0xf95c1	                                setne cl	      2688	buffer.c	FUNCTION_36	IF_1
0x40003f1	            0x85d2	                           test edx, edx	      2688	buffer.c	FUNCTION_36	IF_1
0x40003f3	           0xf95c0	                                setne al	      2688	buffer.c	FUNCTION_36	IF_1
0x40003f6	             0x9c8	                             or eax, ecx	      2688	buffer.c	FUNCTION_36	IF_1
0x40003f8	           0xfb6c0	                           movzx eax, al	      2688	buffer.c	FUNCTION_36	IF_1
0x40003fb	    0x8987a8000000	             mov dword [rdi + 0xa8], eax	      2688	buffer.c	FUNCTION_36	IF_1
0x4000401	      0xba00000000	                              mov edx, 0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000406	      0xe800000000	                          call 0x400040b	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400040b	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400040d	            0x753f	                           jne 0x400044e	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400040f	          0x4889de	                            mov rsi, rbx	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4000412	      0xbf00000000	                              mov edi, 0	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4000417	      0xe800000000	                          call 0x400041c	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400041c	          0x4989c4	                            mov r12, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400041f	          0x4885c0	                           test rax, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4000422	            0x741d	                            je 0x4000441	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4000424	      0xba00000000	                              mov edx, 0	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4000429	          0x4889c6	                            mov rsi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400042c	          0x4889ef	                            mov rdi, rbp	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400042f	      0xe800000000	                          call 0x4000434	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4000434	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4000436	      0xb800000000	                              mov eax, 0	      2682	buffer.c	FUNCTION_36
0x400043b	        0x480f44d8	                          cmove rbx, rax	      2682	buffer.c	FUNCTION_36
0x400043f	            0xeb05	                           jmp 0x4000446	      2682	buffer.c	FUNCTION_36
0x4000441	      0xbb00000000	                              mov ebx, 0	      2682	buffer.c	FUNCTION_36
0x4000446	          0x4c89e7	                            mov rdi, r12	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4000449	      0xe800000000	                          call 0x400044e	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400044e	          0x4889d8	                            mov rax, rbx	      2702	buffer.c	FUNCTION_36
0x4000451	              0x5b	                                 pop rbx	      2702	buffer.c	FUNCTION_36
0x4000452	              0x5d	                                 pop rbp	      2702	buffer.c	FUNCTION_36
0x4000453	            0x415c	                                 pop r12	      2702	buffer.c	FUNCTION_36
0x4000455	              0xc3	                                     ret	      2702	buffer.c	FUNCTION_36
close_buffer	CALL,37:IF,34:SWITCH,0:ELSE,7:WHILE,0:FOR,0:DO,0:functions,0	302
0x4006510	            0x4157	                                push r15	       445	buffer.c	FUNCTION_8
0x4006512	            0x4156	                                push r14	       445	buffer.c	FUNCTION_8
0x4006514	            0x4155	                                push r13	       445	buffer.c	FUNCTION_8
0x4006516	            0x4154	                                push r12	       445	buffer.c	FUNCTION_8
0x4006518	              0x55	                                push rbp	       445	buffer.c	FUNCTION_8
0x4006519	              0x53	                                push rbx	       445	buffer.c	FUNCTION_8
0x400651a	        0x4883ec48	                           sub rsp, 0x48	       445	buffer.c	FUNCTION_8
0x400651e	          0x4989fc	                            mov r12, rdi	       445	buffer.c	FUNCTION_8
0x4006521	          0x4889f3	                            mov rbx, rsi	       445	buffer.c	FUNCTION_8
0x4006524	        0x894c2414	             mov dword [rsp + 0x14], ecx	       445	buffer.c	FUNCTION_8
0x4006528	    0x64488b042528	                mov rax, qword fs:[0x28]	       445	buffer.c	FUNCTION_8
0x4006531	      0x4889442438	             mov qword [rsp + 0x38], rax	       445	buffer.c	FUNCTION_8
0x4006536	            0x31c0	                            xor eax, eax	       445	buffer.c	FUNCTION_8
0x4006538	    0x488b2d000000	            mov rbp, qword [0x0400653f] 	       449	buffer.c	FUNCTION_8
0x400653f	          0x4885ed	                           test rbp, rbp	       449	buffer.c	FUNCTION_8
0x4006542	            0x740e	                            je 0x4006552	       449	buffer.c	FUNCTION_8
0x4006544	        0x48397508	                cmp qword [rbp + 8], rsi	       449	buffer.c	FUNCTION_8
0x4006548	        0x410f94c7	                               sete r15b	       449	buffer.c	FUNCTION_8
0x400654c	        0x450fb6ff	                        movzx r15d, r15b	       449	buffer.c	FUNCTION_8
0x4006550	            0xeb06	                           jmp 0x4006558	       449	buffer.c	FUNCTION_8
0x4006552	    0x41bf00000000	                             mov r15d, 0	       449	buffer.c	FUNCTION_8
0x4006558	    0x488b05000000	            mov rax, qword [0x0400655f] 	       451	buffer.c	FUNCTION_8
0x400655f	      0x4889442418	             mov qword [rsp + 0x18], rax	       451	buffer.c	FUNCTION_8
0x4006564	          0x83fa04	                              cmp edx, 4	       454	buffer.c	FUNCTION_8
0x4006567	        0x410f94c6	                               sete r14b	       454	buffer.c	FUNCTION_8
0x400656b	        0x450fb6f6	                        movzx r14d, r14b	       454	buffer.c	FUNCTION_8
0x400656f	    0x488b83101400	          mov rax, qword [rbx + 0x1410] 	       461	buffer.c	FUNCTION_8	IF_1
0x4006576	           0xfb600	                   movzx eax, byte [rax]	       461	buffer.c	FUNCTION_8	IF_1
0x4006579	            0x3c64	                            cmp al, 0x64	       461	buffer.c	FUNCTION_8	IF_1
0x400657b	     0xf84e5030000	                            je 0x4006966	       461	buffer.c	FUNCTION_8	IF_1
0x4006581	            0x3c77	                            cmp al, 0x77	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006583	     0xf84d7030000	                            je 0x4006960	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006589	    0x41bd01000000	                             mov r13d, 1	       473	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x400658f	            0x3c75	                            cmp al, 0x75	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4006591	            0x740a	                            je 0x400659d	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4006593	            0x85d2	                           test edx, edx	       452	buffer.c	FUNCTION_8
0x4006595	        0x410f95c5	                              setne r13b	       452	buffer.c	FUNCTION_8
0x4006599	        0x450fb6ed	                        movzx r13d, r13b	       452	buffer.c	FUNCTION_8
0x400659d	          0x83ea03	                              sub edx, 3	       453	buffer.c	FUNCTION_8
0x40065a0	          0x83fa01	                              cmp edx, 1	       453	buffer.c	FUNCTION_8
0x40065a3	       0xf96442413	                 setbe byte [rsp + 0x13]	       453	buffer.c	FUNCTION_8
0x40065a8	       0xfb6442413	           movzx eax, byte [rsp + 0x13] 	       453	buffer.c	FUNCTION_8
0x40065ad	           0xfb6c8	                           movzx ecx, al	       453	buffer.c	FUNCTION_8
0x40065b0	        0x894c240c	              mov dword [rsp + 0xc], ecx	       453	buffer.c	FUNCTION_8
0x40065b4	          0x4889df	                            mov rdi, rbx	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065b7	      0xe800000000	                          call 0x40065bc	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065bc	            0x85c0	                           test eax, eax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065be	            0x747b	                            je 0x400663b	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065c0	        0x837b7801	               cmp dword [rbx + 0x78], 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065c4	            0x7417	                            je 0x40065dd	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065c6	      0x807c241300	                cmp byte [rsp + 0x13], 0	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065cb	            0x746e	                            je 0x400663b	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065cd	            0xeb0e	                           jmp 0x40065dd	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065cf	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065d7	    0x41bd01000000	                             mov r13d, 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x40065dd	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x40065e4	      0xe800000000	                          call 0x40065e9	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x40065e9	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x40065eb	     0xf8498030000	                            je 0x4006989	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x40065f1	          0x4489e8	                           mov eax, r13d	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x40065f4	          0x4409f0	                            or eax, r14d	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x40065f7	            0x7434	                            je 0x400662d	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x40065f9	    0x83bb80000000	               cmp dword [rbx + 0x80], 0	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4006600	            0x7421	                            je 0x4006623	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4006602	      0xba05000000	                              mov edx, 5	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4006607	      0xbe00000000	                              mov esi, 0	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x400660c	      0xbf00000000	                              mov edi, 0	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4006611	      0xe800000000	                          call 0x4006616	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4006616	          0x4889c7	                            mov rdi, rax	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x4006619	      0xe800000000	                          call 0x400661e	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0x400661e	      0xe994030000	                           jmp 0x40069b7	       485	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x4006623	          0x4889df	                            mov rdi, rbx	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x4006626	      0xe800000000	                          call 0x400662b	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400662b	            0xeb0e	                           jmp 0x400663b	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400662d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       493	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4006635	    0x41bd00000000	                             mov r13d, 0	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x400663b	    0x83bb80000000	               cmp dword [rbx + 0x80], 0	       509	buffer.c	FUNCTION_8	IF_8
0x4006642	            0x7e2a	                           jle 0x400666e	       509	buffer.c	FUNCTION_8	IF_8
0x4006644	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       509	buffer.c	FUNCTION_8	IF_8
0x4006648	          0x4409f0	                            or eax, r14d	       509	buffer.c	FUNCTION_8	IF_8
0x400664b	            0x7421	                            je 0x400666e	       509	buffer.c	FUNCTION_8	IF_8
0x400664d	      0xba05000000	                              mov edx, 5	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006652	      0xbe00000000	                              mov esi, 0	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006657	      0xbf00000000	                              mov edi, 0	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400665c	      0xe800000000	                          call 0x4006661	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006661	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006664	      0xe800000000	                          call 0x4006669	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006669	      0xe949030000	                           jmp 0x40069b7	       512	buffer.c	FUNCTION_8	IF_8
0x400666e	          0x4d85e4	                           test r12, r12	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006671	            0x7442	                            je 0x40066b5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006673	          0x4c89e7	                            mov rdi, r12	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006676	      0xe800000000	                          call 0x400667b	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x400667b	            0x85c0	                           test eax, eax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x400667d	            0x7436	                            je 0x40066b5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x400667f	        0x837b7801	               cmp dword [rbx + 0x78], 1	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4006683	            0x7508	                           jne 0x400668d	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4006685	          0x4c89e7	                            mov rdi, r12	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4006688	      0xe800000000	                          call 0x400668d	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x400668d	      0x418b4c2440	            mov ecx, dword [r12 + 0x40] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006692	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	       525	buffer.c	FUNCTION_8	IF_9
0x4006697	        0x4883fa01	                              cmp rdx, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x400669b	      0xb800000000	                              mov eax, 0	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066a0	        0x480f44d0	                          cmove rdx, rax	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066a4	    0x41b801000000	                              mov r8d, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066aa	          0x4c89e6	                            mov rsi, r12	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066ad	          0x4889df	                            mov rdi, rbx	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066b0	      0xe8459bffff	                call sym.buflist_setfpos	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x40066b5	          0x4889de	                            mov rsi, rbx	       529	buffer.c	FUNCTION_8	CALL_11
0x40066b8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       529	buffer.c	FUNCTION_8	CALL_11
0x40066bd	      0xe800000000	                          call 0x40066c2	       529	buffer.c	FUNCTION_8	CALL_11
0x40066c2	        0x837b7801	               cmp dword [rbx + 0x78], 1	       532	buffer.c	FUNCTION_8	IF_11
0x40066c6	     0xf85cf000000	                           jne 0x400679b	       532	buffer.c	FUNCTION_8	IF_11
0x40066cc	    0x838380000000	               add dword [rbx + 0x80], 1	       534	buffer.c	FUNCTION_8	IF_11
0x40066d3	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066da	          0x4989d8	                             mov r8, rbx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066dd	      0xb900000000	                              mov ecx, 0	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066e2	          0x4889f2	                            mov rdx, rsi	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066e5	      0xbf0e000000	                            mov edi, 0xe	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066ea	      0xe800000000	                          call 0x40066ef	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066ef	            0x85c0	                           test eax, eax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066f1	            0x742f	                            je 0x4006722	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40066f3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x40066f8	      0xe800000000	                          call 0x40066fd	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x40066fd	            0x85c0	                           test eax, eax	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x40066ff	            0x7521	                           jne 0x4006722	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0x4006701	      0xba05000000	                              mov edx, 5	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4006706	      0xbe00000000	                              mov esi, 0	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400670b	      0xbf00000000	                              mov edi, 0	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4006710	      0xe800000000	                          call 0x4006715	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4006715	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4006718	      0xe800000000	                          call 0x400671d	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400671d	      0xe995020000	                           jmp 0x40069b7	       542	buffer.c	FUNCTION_8	IF_11	IF_12
0x4006722	    0x83ab80000000	               sub dword [rbx + 0x80], 1	       544	buffer.c	FUNCTION_8	IF_11
0x4006729	      0x837c241400	               cmp dword [rsp + 0x14], 0	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x400672e	            0x7409	                            je 0x4006739	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4006730	      0xe800000000	                          call 0x4006735	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4006735	            0x85c0	                           test eax, eax	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4006737	            0x75c8	                           jne 0x4006701	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4006739	          0x4585ed	                         test r13d, r13d	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x400673c	            0x7550	                           jne 0x400678e	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x400673e	    0x838380000000	               add dword [rbx + 0x80], 1	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4006745	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400674c	          0x4989d8	                             mov r8, rbx	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400674f	      0xb900000000	                              mov ecx, 0	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4006754	          0x4889f2	                            mov rdx, rsi	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4006757	      0xbf05000000	                              mov edi, 5	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400675c	      0xe800000000	                          call 0x4006761	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4006761	            0x85c0	                           test eax, eax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4006763	            0x740e	                            je 0x4006773	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4006765	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x400676a	      0xe800000000	                          call 0x400676f	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x400676f	            0x85c0	                           test eax, eax	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4006771	            0x748e	                            je 0x4006701	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0x4006773	    0x83ab80000000	               sub dword [rbx + 0x80], 1	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x400677a	      0x837c241400	               cmp dword [rsp + 0x14], 0	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x400677f	            0x740d	                            je 0x400678e	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4006781	      0xe800000000	                          call 0x4006786	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4006786	            0x85c0	                           test eax, eax	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x4006788	     0xf8573ffffff	                           jne 0x4006701	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x400678e	      0xe800000000	                          call 0x4006793	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x4006793	            0x85c0	                           test eax, eax	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x4006795	     0xf851c020000	                           jne 0x40069b7	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x400679b	          0x4585ff	                         test r15d, r15d	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400679e	            0x742c	                            je 0x40067cc	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067a0	    0x483b2d000000	            cmp rbp, qword [0x040067a7] 	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067a7	            0x7423	                            je 0x40067cc	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067a9	          0x4889ef	                            mov rdi, rbp	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067ac	      0xe800000000	                          call 0x40067b1	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067b1	            0x85c0	                           test eax, eax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067b3	            0x7417	                            je 0x40067cc	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x40067b5	      0xe800000000	                          call 0x40067ba	       575	buffer.c	FUNCTION_8	IF_18	CALL_22
0x40067ba	          0x4889ee	                            mov rsi, rbp	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x40067bd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x40067c2	      0xe800000000	                          call 0x40067c7	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x40067c7	      0xe800000000	                          call 0x40067cc	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x40067cc	          0x8b6b78	            mov ebp, dword [rbx + 0x78] 	       580	buffer.c	FUNCTION_8
0x40067cf	            0x85ed	                           test ebp, ebp	       583	buffer.c	FUNCTION_8	IF_19
0x40067d1	            0x7e06	                           jle 0x40067d9	       583	buffer.c	FUNCTION_8	IF_19
0x40067d3	          0x8d45ff	                      lea eax, [rbp - 1]	       584	buffer.c	FUNCTION_8	IF_19
0x40067d6	          0x894378	             mov dword [rbx + 0x78], eax	       584	buffer.c	FUNCTION_8	IF_19
0x40067d9	      0xe800000000	                          call 0x40067de	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067de	          0x4585ed	                         test r13d, r13d	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067e1	        0x410f94c5	                               sete r13b	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067e5	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067e7	            0x7413	                            je 0x40067fc	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067e9	          0x4584ed	                         test r13b, r13b	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067ec	            0x740e	                            je 0x40067fc	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067ee	        0x837b7800	               cmp dword [rbx + 0x78], 0	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067f2	            0x7508	                           jne 0x40067fc	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x40067f4	          0x4889df	                            mov rdi, rbx	       588	buffer.c	FUNCTION_8	CALL_26
0x40067f7	      0xe800000000	                          call 0x40067fc	       588	buffer.c	FUNCTION_8	CALL_26
0x40067fc	        0x837b7800	               cmp dword [rbx + 0x78], 0	       593	buffer.c	FUNCTION_8	IF_21
0x4006800	     0xf8fb1010000	                            jg 0x40069b7	       593	buffer.c	FUNCTION_8	IF_21
0x4006806	          0x4584ed	                         test r13b, r13b	       593	buffer.c	FUNCTION_8	IF_21
0x4006809	     0xf85a8010000	                           jne 0x40069b7	       593	buffer.c	FUNCTION_8	IF_21
0x400680f	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	       598	buffer.c	FUNCTION_8	IF_22
0x4006817	      0xb801000000	                              mov eax, 1	       598	buffer.c	FUNCTION_8	IF_22
0x400681c	       0xf4544240c	           cmovne eax, dword [rsp + 0xc]	       598	buffer.c	FUNCTION_8	IF_22
0x4006821	        0x8944240c	              mov dword [rsp + 0xc], eax	       598	buffer.c	FUNCTION_8	IF_22
0x4006825	    0x483b1d000000	            cmp rbx, qword [0x0400682c] 	       602	buffer.c	FUNCTION_8	IF_23
0x400682c	            0x750e	                           jne 0x400683c	       602	buffer.c	FUNCTION_8	IF_23
0x400682e	    0x833d00000000	               cmp dword [0x04006835], 0	       602	buffer.c	FUNCTION_8	IF_23
0x4006835	            0x7405	                            je 0x400683c	       602	buffer.c	FUNCTION_8	IF_23
0x4006837	      0xe800000000	                          call 0x400683c	       607	buffer.c	FUNCTION_8	CALL_27
0x400683c	    0x4c8b2d000000	            mov r13, qword [0x04006843] 	       615	buffer.c	FUNCTION_8
0x4006843	          0x896b78	             mov dword [rbx + 0x78], ebp	       616	buffer.c	FUNCTION_8
0x4006846	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       618	buffer.c	FUNCTION_8	CALL_28
0x400684b	           0xf95c0	                                setne al	       618	buffer.c	FUNCTION_8	CALL_28
0x400684e	           0xfb6c0	                           movzx eax, al	       618	buffer.c	FUNCTION_8	CALL_28
0x4006851	          0x4489f6	                           mov esi, r14d	       618	buffer.c	FUNCTION_8	CALL_28
0x4006854	            0xf7de	                                 neg esi	       618	buffer.c	FUNCTION_8	CALL_28
0x4006856	          0x83e602	                              and esi, 2	       618	buffer.c	FUNCTION_8	CALL_28
0x4006859	             0x1c6	                            add esi, eax	       618	buffer.c	FUNCTION_8	CALL_28
0x400685b	          0x4889df	                            mov rdi, rbx	       618	buffer.c	FUNCTION_8	CALL_28
0x400685e	      0xe800000000	                          call 0x4006863	       618	buffer.c	FUNCTION_8	CALL_28
0x4006863	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4006868	      0xe800000000	                          call 0x400686d	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x400686d	            0x85c0	                           test eax, eax	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x400686f	     0xf8442010000	                            je 0x40069b7	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0x4006875	      0xe800000000	                          call 0x400687a	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x400687a	            0x85c0	                           test eax, eax	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x400687c	     0xf8535010000	                           jne 0x40069b7	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4006882	    0x48391d000000	            cmp qword [0x04006889], rbx 	       635	buffer.c	FUNCTION_8	IF_26
0x4006889	            0x7509	                           jne 0x4006894	       635	buffer.c	FUNCTION_8	IF_26
0x400688b	          0x4c39eb	                            cmp rbx, r13	       635	buffer.c	FUNCTION_8	IF_26
0x400688e	     0xf8523010000	                           jne 0x40069b7	       635	buffer.c	FUNCTION_8	IF_26
0x4006894	          0x4c89e7	                            mov rdi, r12	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006897	      0xe800000000	                          call 0x400689c	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400689c	            0x85c0	                           test eax, eax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400689e	            0x7410	                            je 0x40068b0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x40068a0	      0x493b5c2408	                cmp rbx, qword [r12 + 8]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x40068a5	            0x7509	                           jne 0x40068b0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x40068a7	    0x49c744240800	                  mov qword [r12 + 8], 0	       639	buffer.c	FUNCTION_8	IF_27
0x40068b0	          0x8b4378	            mov eax, dword [rbx + 0x78] 	       643	buffer.c	FUNCTION_8	IF_28
0x40068b3	            0x85c0	                           test eax, eax	       643	buffer.c	FUNCTION_8	IF_28
0x40068b5	            0x7e06	                           jle 0x40068bd	       643	buffer.c	FUNCTION_8	IF_28
0x40068b7	          0x83e801	                              sub eax, 1	       644	buffer.c	FUNCTION_8	IF_28
0x40068ba	          0x894378	             mov dword [rbx + 0x78], eax	       644	buffer.c	FUNCTION_8	IF_28
0x40068bd	          0x4585f6	                         test r14d, r14d	       649	buffer.c	FUNCTION_8	IF_29
0x40068c0	            0x7461	                            je 0x4006923	       649	buffer.c	FUNCTION_8	IF_29
0x40068c2	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x40068c9	      0xe800000000	                          call 0x40068ce	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x40068ce	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x40068d5	      0xe800000000	                          call 0x40068da	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x40068da	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068de	          0x4885c0	                           test rax, rax	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068e1	            0x750d	                           jne 0x40068f0	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068e3	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068e7	    0x488905000000	            mov qword [0x040068ee], rax 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068ee	            0xeb08	                           jmp 0x40068f8	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x40068f0	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x40068f4	        0x48895068	             mov qword [rax + 0x68], rdx	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x40068f8	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x40068fc	          0x4885c0	                           test rax, rax	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x40068ff	            0x750d	                           jne 0x400690e	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x4006901	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x4006905	    0x488905000000	            mov qword [0x0400690c], rax 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x400690c	            0xeb08	                           jmp 0x4006916	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x400690e	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4006912	        0x48895070	             mov qword [rax + 0x70], rdx	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x4006916	          0x4889df	                            mov rdi, rbx	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4006919	      0xe84ffbffff	                    call sym.free_buffer	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x400691e	      0xe994000000	                           jmp 0x40069b7	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x4006923	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006928	     0xf8481000000	                            je 0x40069af	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x400692e	      0xbe01000000	                              mov esi, 1	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4006933	          0x4889df	                            mov rdi, rbx	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4006936	      0xe864faffff	              call sym.free_buffer_stuff	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x400693b	    0xc7437c060000	               mov dword [rbx + 0x7c], 6	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006942	    0xc783a8120000	            mov dword [rbx + 0x12a8], 0 	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x400694c	          0x4889df	                            mov rdi, rbx	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x400694f	      0xe800000000	                          call 0x4006954	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006954	    0xc78324140000	            mov dword [rbx + 0x1424], 0 	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x400695e	            0xeb57	                           jmp 0x40069b7	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4006960	    0x41be01000000	                             mov r14d, 1	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006966	          0x4889df	                            mov rdi, rbx	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006969	      0xe800000000	                          call 0x400696e	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x400696e	            0x85c0	                           test eax, eax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006970	     0xf8559fcffff	                           jne 0x40065cf	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006976	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x400697e	    0x41bd01000000	                             mov r13d, 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006984	      0xe9b2fcffff	                           jmp 0x400663b	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006989	    0x83bb80000000	               cmp dword [rbx + 0x80], 0	       509	buffer.c	FUNCTION_8	IF_8
0x4006990	     0xf8fb7fcffff	                            jg 0x400664d	       509	buffer.c	FUNCTION_8	IF_8
0x4006996	    0x41be01000000	                             mov r14d, 1	       502	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x400699c	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       500	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x40069a4	    0x41bd01000000	                             mov r13d, 1	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x40069aa	      0xe9bffcffff	                           jmp 0x400666e	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x40069af	          0x4889df	                            mov rdi, rbx	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x40069b2	      0xe800000000	                          call 0x40069b7	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x40069b7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       686	buffer.c	FUNCTION_8
0x40069bc	    0x644833042528	                xor rax, qword fs:[0x28]	       686	buffer.c	FUNCTION_8
0x40069c5	            0x7405	                            je 0x40069cc	       686	buffer.c	FUNCTION_8
0x40069c7	      0xe800000000	                          call 0x40069cc	       686	buffer.c	FUNCTION_8
0x40069cc	        0x4883c448	                           add rsp, 0x48	       686	buffer.c	FUNCTION_8
0x40069d0	              0x5b	                                 pop rbx	       686	buffer.c	FUNCTION_8
0x40069d1	              0x5d	                                 pop rbp	       686	buffer.c	FUNCTION_8
0x40069d2	            0x415c	                                 pop r12	       686	buffer.c	FUNCTION_8
0x40069d4	            0x415d	                                 pop r13	       686	buffer.c	FUNCTION_8
0x40069d6	            0x415e	                                 pop r14	       686	buffer.c	FUNCTION_8
0x40069d8	            0x415f	                                 pop r15	       686	buffer.c	FUNCTION_8
0x40069da	              0xc3	                                     ret	       686	buffer.c	FUNCTION_8
free_buffer	CALL,14:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	37
0x400646d	              0x53	                                push rbx	       822	buffer.c	FUNCTION_11
0x400646e	          0x4889fb	                            mov rbx, rdi	       822	buffer.c	FUNCTION_11
0x4006471	    0x830500000000	               add dword [0x04006478], 1	       823	buffer.c	FUNCTION_11
0x4006478	      0xbe01000000	                              mov esi, 1	       824	buffer.c	FUNCTION_11	CALL_1
0x400647d	      0xe81dffffff	              call sym.free_buffer_stuff	       824	buffer.c	FUNCTION_11	CALL_1
0x4006482	    0x488db3d00000	                   lea rsi, [rbx + 0xd0]	       827	buffer.c	FUNCTION_11	CALL_2
0x4006489	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       827	buffer.c	FUNCTION_11	CALL_2
0x4006490	      0xe800000000	                          call 0x4006495	       827	buffer.c	FUNCTION_11	CALL_2
0x4006495	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       828	buffer.c	FUNCTION_11	CALL_3
0x400649c	      0xe800000000	                          call 0x40064a1	       828	buffer.c	FUNCTION_11	CALL_3
0x40064a1	          0x4889df	                            mov rdi, rbx	       849	buffer.c	FUNCTION_11	CALL_10
0x40064a4	      0xe800000000	                          call 0x40064a9	       849	buffer.c	FUNCTION_11	CALL_10
0x40064a9	          0x4889df	                            mov rdi, rbx	       852	buffer.c	FUNCTION_11	CALL_11
0x40064ac	      0xe800000000	                          call 0x40064b1	       852	buffer.c	FUNCTION_11	CALL_11
0x40064b1	    0x488db3bc0000	                   lea rsi, [rbx + 0xbc]	       414	buffer.c	FUNCTION_7	CALL_1
0x40064b8	      0xbf00000000	                              mov edi, 0	       414	buffer.c	FUNCTION_7	CALL_1
0x40064bd	      0xe800000000	                          call 0x40064c2	       414	buffer.c	FUNCTION_7	CALL_1
0x40064c2	        0x488b5008	                mov rdx, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x40064c6	    0x4881fa000000	                              cmp rdx, 0	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x40064cd	            0x7412	                            je 0x40064e1	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x40064cf	          0x4885d2	                           test rdx, rdx	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x40064d2	            0x740d	                            je 0x40064e1	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x40064d4	          0x4889c6	                            mov rsi, rax	       417	buffer.c	FUNCTION_7	CALL_3
0x40064d7	      0xbf00000000	                              mov edi, 0	       417	buffer.c	FUNCTION_7	CALL_3
0x40064dc	      0xe800000000	                          call 0x40064e1	       417	buffer.c	FUNCTION_7	CALL_3
0x40064e1	          0x4889df	                            mov rdi, rbx	       857	buffer.c	FUNCTION_11	CALL_13
0x40064e4	      0xe800000000	                          call 0x40064e9	       857	buffer.c	FUNCTION_11	CALL_13
0x40064e9	    0x833d00000000	               cmp dword [0x040064f0], 0	       859	buffer.c	FUNCTION_11	IF_1
0x40064f0	            0x7414	                            je 0x4006506	       859	buffer.c	FUNCTION_11	IF_1
0x40064f2	    0x488b05000000	            mov rax, qword [0x040064f9] 	       863	buffer.c	FUNCTION_11	IF_1
0x40064f9	        0x48894368	             mov qword [rbx + 0x68], rax	       863	buffer.c	FUNCTION_11	IF_1
0x40064fd	    0x48891d000000	            mov qword [0x04006504], rbx 	       864	buffer.c	FUNCTION_11	IF_1
0x4006504	            0xeb08	                           jmp 0x400650e	       864	buffer.c	FUNCTION_11	IF_1
0x4006506	          0x4889df	                            mov rdi, rbx	       867	buffer.c	FUNCTION_11	CALL_14
0x4006509	      0xe800000000	                          call 0x400650e	       867	buffer.c	FUNCTION_11	CALL_14
0x400650e	              0x5b	                                 pop rbx	       868	buffer.c	FUNCTION_11
0x400650f	              0xc3	                                     ret	       868	buffer.c	FUNCTION_11
bt_quickfix	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	9
0x40022b2	          0x4885ff	                           test rdi, rdi	      5600	buffer.c	FUNCTION_77
0x40022b5	            0x7411	                            je 0x40022c8	      5600	buffer.c	FUNCTION_77
0x40022b7	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x40022be	          0x803871	                    cmp byte [rax], 0x71	      5600	buffer.c	FUNCTION_77
0x40022c1	           0xf94c0	                                 sete al	      5600	buffer.c	FUNCTION_77
0x40022c4	           0xfb6c0	                           movzx eax, al	      5600	buffer.c	FUNCTION_77
0x40022c7	              0xc3	                                     ret	      5600	buffer.c	FUNCTION_77
0x40022c8	      0xb800000000	                              mov eax, 0	      5600	buffer.c	FUNCTION_77
0x40022cd	              0xc3	                                     ret	      5601	buffer.c	FUNCTION_77
buf_findsign	CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	16
0x4006277	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x400627e	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x4006281	            0x7419	                            je 0x400629c	      5987	buffer.c	FUNCTION_93	FOR_1
0x4006283	            0x3b30	                    cmp esi, dword [rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x4006285	            0x750a	                           jne 0x4006291	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x4006287	            0xeb04	                           jmp 0x400628d	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x4006289	            0x3930	                    cmp dword [rax], esi	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400628b	            0x7504	                           jne 0x4006291	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400628d	          0x8b4008	                mov eax, dword [rax + 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x4006290	              0xc3	                                     ret	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x4006291	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x4006295	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x4006298	            0x75ef	                           jne 0x4006289	      5987	buffer.c	FUNCTION_93	FOR_1
0x400629a	            0xf3c3	                                     ret	      5987	buffer.c	FUNCTION_93	FOR_1
0x400629c	      0xb800000000	                              mov eax, 0	      5991	buffer.c	FUNCTION_93
0x40062a1	              0xc3	                                     ret	      5992	buffer.c	FUNCTION_93
do_buffer	CALL,44:IF,62:SWITCH,1:ELSE,10:WHILE,5:FOR,1:DO,1:functions,0	507
0x40074b6	            0x4157	                                push r15	      1270	buffer.c	FUNCTION_19
0x40074b8	            0x4156	                                push r14	      1270	buffer.c	FUNCTION_19
0x40074ba	            0x4155	                                push r13	      1270	buffer.c	FUNCTION_19
0x40074bc	            0x4154	                                push r12	      1270	buffer.c	FUNCTION_19
0x40074be	              0x55	                                push rbp	      1270	buffer.c	FUNCTION_19
0x40074bf	              0x53	                                push rbx	      1270	buffer.c	FUNCTION_19
0x40074c0	        0x4883ec38	                           sub rsp, 0x38	      1270	buffer.c	FUNCTION_19
0x40074c4	          0x4189ff	                           mov r15d, edi	      1270	buffer.c	FUNCTION_19
0x40074c7	          0x4189d5	                           mov r13d, edx	      1270	buffer.c	FUNCTION_19
0x40074ca	            0x89cd	                            mov ebp, ecx	      1270	buffer.c	FUNCTION_19
0x40074cc	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1270	buffer.c	FUNCTION_19
0x40074d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1270	buffer.c	FUNCTION_19
0x40074da	      0x4889442428	             mov qword [rsp + 0x28], rax	      1270	buffer.c	FUNCTION_19
0x40074df	            0x31c0	                            xor eax, eax	      1270	buffer.c	FUNCTION_19
0x40074e1	        0x448d67fe	                     lea r12d, [rdi - 2]	      1274	buffer.c	FUNCTION_19
0x40074e5	          0x83fe01	                              cmp esi, 1	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x40074e8	            0x7407	                            je 0x40074f1	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x40074ea	          0x83fe02	                              cmp esi, 2	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x40074ed	            0x740e	                            je 0x40074fd	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x40074ef	            0xeb1f	                           jmp 0x4007510	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x40074f1	    0x488b1d000000	            mov rbx, qword [0x040074f8] 	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x40074f8	      0xe989000000	                           jmp 0x4007586	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x40074fd	    0x488b1d000000	            mov rbx, qword [0x04007504] 	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4007504	          0x83fe01	                              cmp esi, 1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4007507	        0x400f94c7	                                sete dil	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x400750b	      0xe925010000	                           jmp 0x4007635	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4007510	    0x488b1d000000	            mov rbx, qword [0x04007517] 	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x4007517	          0x83fe03	                              cmp esi, 3	      1282	buffer.c	FUNCTION_19	IF_1
0x400751a	            0x756a	                           jne 0x4007586	      1282	buffer.c	FUNCTION_19	IF_1
0x400751c	            0xeb30	                           jmp 0x400754e	      1282	buffer.c	FUNCTION_19	IF_1
0x400751e	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x4007522	          0x4885db	                           test rbx, rbx	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4007525	    0x480f441d0000	           cmove rbx, qword [0x0400752d]	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x400752d	    0x488b05000000	            mov rax, qword [0x04007534] 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007534	          0x4839c3	                            cmp rbx, rax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007537	            0x740f	                            je 0x4007548	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007539	          0x4889df	                            mov rdi, rbx	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x400753c	      0xe800000000	                          call 0x4007541	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007541	            0x85c0	                           test eax, eax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007543	            0x74d9	                            je 0x400751e	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007545	          0x4889d8	                            mov rax, rbx	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4007548	          0x83ed01	                              sub ebp, 1	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x400754b	          0x4889c3	                            mov rbx, rax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x400754e	            0x85ed	                           test ebp, ebp	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4007550	            0x7fcc	                            jg 0x400751e	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4007552	          0x4889df	                            mov rdi, rbx	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4007555	      0xe800000000	                          call 0x400755a	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x400755a	          0x4189c6	                           mov r14d, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x400755d	            0x85c0	                           test eax, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x400755f	     0xf85bb060000	                           jne 0x4007c20	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4007565	      0xba05000000	                              mov edx, 5	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x400756a	      0xbe00000000	                              mov esi, 0	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x400756f	      0xbf00000000	                              mov edi, 0	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4007574	      0xe800000000	                          call 0x4007579	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4007579	          0x4889c7	                            mov rdi, rax	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x400757c	      0xe800000000	                          call 0x4007581	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4007581	      0xe97e060000	                           jmp 0x4007c04	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4007586	          0x83fe01	                              cmp esi, 1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4007589	        0x400f94c7	                                sete dil	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x400758d	            0x85ed	                           test ebp, ebp	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x400758f	     0xf84a0000000	                            je 0x4007635	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4007595	          0x4084ff	                           test dil, dil	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4007598	     0xf8497000000	                            je 0x4007635	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x400759e	          0x4885db	                           test rbx, rbx	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075a1	     0xf84cf000000	                            je 0x4007676	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075a7	    0x3babb8000000	            cmp ebp, dword [rbx + 0xb8] 	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075ad	     0xf8456010000	                            je 0x4007709	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075b3	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075b7	          0x4885db	                           test rbx, rbx	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075ba	     0xf84b6000000	                            je 0x4007676	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075c0	    0x3babb8000000	            cmp ebp, dword [rbx + 0xb8] 	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075c6	            0x75eb	                           jne 0x40075b3	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075c8	      0xe93c010000	                           jmp 0x4007709	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x40075cd	          0x4885c0	                           test rax, rax	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x40075d0	        0x480f44c3	                          cmove rax, rbx	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x40075d4	        0x4183fd01	                             cmp r13d, 1	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40075d8	            0x750d	                           jne 0x40075e7	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40075da	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40075de	          0x4885db	                           test rbx, rbx	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40075e1	        0x480f44d9	                          cmove rbx, rcx	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40075e5	            0xeb0b	                           jmp 0x40075f2	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40075e7	        0x488b5b70	            mov rbx, qword [rbx + 0x70] 	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x40075eb	          0x4885db	                           test rbx, rbx	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x40075ee	        0x480f44da	                          cmove rbx, rdx	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x40075f2	        0x4183fc02	                             cmp r12d, 2	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40075f6	            0x7609	                           jbe 0x4007601	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40075f8	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40075ff	            0x7408	                            je 0x4007609	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4007601	          0x83ed01	                              sub ebp, 1	      1329	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4007604	      0xb800000000	                              mov eax, 0	      1330	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x4007609	          0x4839c3	                            cmp rbx, rax	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x400760c	            0x753a	                           jne 0x4007648	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x400760e	      0xba05000000	                              mov edx, 5	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4007613	      0xbe00000000	                              mov esi, 0	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4007618	      0xbf00000000	                              mov edi, 0	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x400761d	      0xe800000000	                          call 0x4007622	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4007622	          0x4889c7	                            mov rdi, rax	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x4007625	      0xe800000000	                          call 0x400762a	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x400762a	    0x41be00000000	                             mov r14d, 0	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4007630	      0xe9cf050000	                           jmp 0x4007c04	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x4007635	    0x488b0d000000	            mov rcx, qword [0x0400763c] 	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x400763c	    0x488b15000000	            mov rdx, qword [0x04007643] 	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4007643	      0xb800000000	                              mov eax, 0	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x4007648	            0x85ed	                           test ebp, ebp	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400764a	            0x7f81	                            jg 0x40075cd	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400764c	        0x4183fc02	                             cmp r12d, 2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4007650	     0xf86e7050000	                           jbe 0x4007c3d	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4007656	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400765d	            0x7509	                           jne 0x4007668	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400765f	          0x4839c3	                            cmp rbx, rax	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4007662	     0xf8565ffffff	                           jne 0x40075cd	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4007668	          0x4885db	                           test rbx, rbx	      1341	buffer.c	FUNCTION_19	IF_11
0x400766b	     0xf8547060000	                           jne 0x4007cb8	      1341	buffer.c	FUNCTION_19	IF_11
0x4007671	      0xe920060000	                           jmp 0x4007c96	      1341	buffer.c	FUNCTION_19	IF_11
0x4007676	          0x83fe01	                              cmp esi, 1	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007679	            0x753a	                           jne 0x40076b5	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x400767b	    0x41be00000000	                             mov r14d, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x4007681	        0x4183fc02	                             cmp r12d, 2	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4007685	     0xf8679050000	                           jbe 0x4007c04	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x400768b	      0xba05000000	                              mov edx, 5	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4007690	      0xbe00000000	                              mov esi, 0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x4007695	      0xbf00000000	                              mov edi, 0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x400769a	      0xe800000000	                          call 0x400769f	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x400769f	          0x4863f5	                         movsxd rsi, ebp	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40076a2	          0x4889c7	                            mov rdi, rax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40076a5	      0xe800000000	                          call 0x40076aa	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40076aa	    0x41be00000000	                             mov r14d, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x40076b0	      0xe94f050000	                           jmp 0x4007c04	      1353	buffer.c	FUNCTION_19	IF_11
0x40076b5	        0x4183fd01	                             cmp r13d, 1	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076b9	            0x7527	                           jne 0x40076e2	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076bb	      0xba05000000	                              mov edx, 5	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076c0	      0xbe00000000	                              mov esi, 0	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076c5	      0xbf00000000	                              mov edi, 0	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076ca	      0xe800000000	                          call 0x40076cf	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076cf	          0x4889c7	                            mov rdi, rax	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076d2	      0xe800000000	                          call 0x40076d7	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x40076d7	    0x41be00000000	                             mov r14d, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x40076dd	      0xe922050000	                           jmp 0x4007c04	      1353	buffer.c	FUNCTION_19	IF_11
0x40076e2	      0xba05000000	                              mov edx, 5	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076e7	      0xbe00000000	                              mov esi, 0	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076ec	      0xbf00000000	                              mov edi, 0	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076f1	      0xe800000000	                          call 0x40076f6	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076f6	          0x4889c7	                            mov rdi, rax	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076f9	      0xe800000000	                          call 0x40076fe	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x40076fe	    0x41be00000000	                             mov r14d, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x4007704	      0xe9fb040000	                           jmp 0x4007c04	      1353	buffer.c	FUNCTION_19	IF_11
0x4007709	    0xc70500000000	               mov dword [0x04007713], 1	      1357	buffer.c	FUNCTION_19
0x4007713	        0x4183fc02	                             cmp r12d, 2	      1363	buffer.c	FUNCTION_19	IF_15
0x4007717	     0xf87cf030000	                            ja 0x4007aec	      1363	buffer.c	FUNCTION_19	IF_15
0x400771d	    0x448bb3800000	           mov r14d, dword [rbx + 0x80] 	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4007724	          0x4585f6	                         test r14d, r14d	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4007727	            0x7427	                            je 0x4007750	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4007729	      0xba05000000	                              mov edx, 5	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x400772e	      0xbe00000000	                              mov esi, 0	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4007733	      0xbf00000000	                              mov edi, 0	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4007738	      0xe800000000	                          call 0x400773d	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x400773d	          0x4889c7	                            mov rdi, rax	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4007740	      0xe800000000	                          call 0x4007745	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4007745	    0x41be00000000	                             mov r14d, 0	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x400774b	      0xe9b4040000	                           jmp 0x4007c04	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x4007750	          0x4889de	                            mov rsi, rbx	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x4007753	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x4007758	      0xe800000000	                          call 0x400775d	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x400775d	        0x4183ff04	                             cmp r15d, 4	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007761	            0x7415	                            je 0x4007778	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007763	      0x48837b0800	                  cmp qword [rbx + 8], 0	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007768	            0x750e	                           jne 0x4007778	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x400776a	    0x8b8324140000	          mov eax, dword [rbx + 0x1424] 	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007770	            0x85c0	                           test eax, eax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007772	     0xf844b030000	                            je 0x4007ac3	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007778	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400777d	     0xf8582000000	                           jne 0x4007805	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4007783	          0x4889df	                            mov rdi, rbx	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4007786	      0xe800000000	                          call 0x400778b	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400778b	            0x85c0	                           test eax, eax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400778d	            0x7476	                            je 0x4007805	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400778f	    0x833d00000000	               cmp dword [0x04007796], 0	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4007796	            0x7509	                           jne 0x40077a1	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4007798	    0x833d00000000	               cmp dword [0x0400779f], 0	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x400779f	            0x7439	                            je 0x40077da	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40077a1	    0x833d00000000	               cmp dword [0x040077a8], 0	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40077a8	            0x7430	                            je 0x40077da	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x40077aa	      0xbe00000000	                              mov esi, 0	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40077af	          0x4889df	                            mov rdi, rbx	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40077b2	      0xe800000000	                          call 0x40077b7	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40077b7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40077bc	      0xe800000000	                          call 0x40077c1	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40077c1	            0x85c0	                           test eax, eax	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40077c3	     0xf8402030000	                            je 0x4007acb	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x40077c9	          0x4889df	                            mov rdi, rbx	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40077cc	      0xe800000000	                          call 0x40077d1	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40077d1	            0x85c0	                           test eax, eax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40077d3	            0x7430	                            je 0x4007805	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40077d5	      0xe92a040000	                           jmp 0x4007c04	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40077da	    0x48639bb80000	         movsxd rbx, dword [rbx + 0xb8] 	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077e1	      0xba05000000	                              mov edx, 5	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077e6	      0xbe00000000	                              mov esi, 0	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077eb	      0xbf00000000	                              mov edi, 0	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077f0	      0xe800000000	                          call 0x40077f5	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077f5	          0x4889de	                            mov rsi, rbx	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077f8	          0x4889c7	                            mov rdi, rax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x40077fb	      0xe800000000	                          call 0x4007800	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4007800	      0xe9ff030000	                           jmp 0x4007c04	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x4007805	    0x48391d000000	            cmp qword [0x0400780c], rbx 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400780c	            0x7512	                           jne 0x4007820	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400780e	    0x833d00000000	               cmp dword [0x04007815], 0	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4007815	     0xf84ac040000	                            je 0x4007cc7	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400781b	      0xe800000000	                          call 0x4007820	      1407	buffer.c	FUNCTION_19	IF_15	CALL_22
0x4007820	    0x488b05000000	            mov rax, qword [0x04007827] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007827	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400782a	     0xf8414040000	                            je 0x4007c44	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007830	    0x83b824140000	             cmp dword [rax + 0x1424], 0	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4007837	            0x7415	                            je 0x400784e	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4007839	          0x4839c3	                            cmp rbx, rax	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400783c	            0x7410	                            je 0x400784e	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400783e	            0xeb43	                           jmp 0x4007883	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4007840	    0x83b824140000	             cmp dword [rax + 0x1424], 0	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4007847	            0x7405	                            je 0x400784e	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x4007849	          0x4839d8	                            cmp rax, rbx	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400784c	            0x7535	                           jne 0x4007883	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x400784e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007852	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007855	            0x75e9	                           jne 0x4007840	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007857	      0xe9e8030000	                           jmp 0x4007c44	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400785c	          0x4489fa	                           mov edx, r15d	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x400785f	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4007863	      0xbf01000000	                              mov edi, 1	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4007868	      0xe8f8f8ffff	                   call sym.empty_curbuf	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x400786d	          0x4189c6	                           mov r14d, eax	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4007870	      0xe98f030000	                           jmp 0x4007c04	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4007875	      0xbe00000000	                              mov esi, 0	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x400787a	      0xe800000000	                          call 0x400787f	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x400787f	            0x85c0	                           test eax, eax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x4007881	            0x7446	                            je 0x40078c9	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x4007883	    0x48391d000000	            cmp qword [0x0400788a], rbx 	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400788a	            0x7546	                           jne 0x40078d2	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400788c	    0x488b3d000000	            mov rdi, qword [0x04007893] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4007893	        0x837f2800	               cmp dword [rdi + 0x28], 0	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4007897	     0xf858b000000	                           jne 0x4007928	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400789d	        0x488b4708	                mov rax, qword [rdi + 8]	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078a1	    0x83b880000000	               cmp dword [rax + 0x80], 0	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078a8	            0x7f7e	                            jg 0x4007928	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078aa	    0x488b05000000	            mov rax, qword [0x040078b1] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078b1	    0x483905000000	            cmp qword [0x040078b8], rax 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078b8	            0x75bb	                           jne 0x4007875	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078ba	    0x488b05000000	            mov rax, qword [0x040078c1] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078c1	        0x48833800	                      cmp qword [rax], 0	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078c5	            0x75ae	                           jne 0x4007875	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078c7	            0xeb5f	                           jmp 0x4007928	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40078c9	    0x48391d000000	            cmp qword [0x040078d0], rbx 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x40078d0	            0x7456	                            je 0x4007928	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x40078d2	      0xbe00000000	                              mov esi, 0	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x40078d7	          0x4889df	                            mov rdi, rbx	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x40078da	      0xe800000000	                          call 0x40078df	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x40078df	    0x41be01000000	                             mov r14d, 1	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x40078e5	    0x48391d000000	            cmp qword [0x040078ec], rbx 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x40078ec	     0xf8412030000	                            je 0x4007c04	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x40078f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x40078f7	      0xe800000000	                          call 0x40078fc	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x40078fc	            0x85c0	                           test eax, eax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x40078fe	     0xf8400030000	                            je 0x4007c04	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4007904	        0x837b7800	               cmp dword [rbx + 0x78], 0	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4007908	     0xf8ff6020000	                            jg 0x4007c04	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400790e	      0xb900000000	                              mov ecx, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4007913	          0x4489fa	                           mov edx, r15d	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4007916	          0x4889de	                            mov rsi, rbx	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4007919	      0xbf00000000	                              mov edi, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400791e	      0xe800000000	                          call 0x4007923	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4007923	      0xe9dc020000	                           jmp 0x4007c04	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4007928	    0x488b1d000000	            mov rbx, qword [0x0400792f] 	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x400792f	          0x4885db	                           test rbx, rbx	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x4007932	            0x7412	                            je 0x4007946	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x4007934	      0xbf00000000	                              mov edi, 0	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x4007939	      0xe800000000	                          call 0x400793e	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x400793e	            0x85c0	                           test eax, eax	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x4007940	     0xf8576010000	                           jne 0x4007abc	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x4007946	    0x488b15000000	            mov rdx, qword [0x0400794d] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x400794d	    0x8b8240150000	          mov eax, dword [rdx + 0x1540] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x4007953	            0x85c0	                           test eax, eax	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x4007955	     0xf8e08030000	                           jle 0x4007c63	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x400795b	    0x448ba2441500	         mov r12d, dword [rdx + 0x1544] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x4007962	        0x4183ec01	                             sub r12d, 1	      1463	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4007966	          0x83e801	                              sub eax, 1	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4007969	          0x4585e4	                         test r12d, r12d	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x400796c	        0x440f48e0	                         cmovs r12d, eax	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4007970	          0x4489e5	                           mov ebp, r12d	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4007973	    0x41bd00000000	                             mov r13d, 0	      1454	buffer.c	FUNCTION_19	IF_15
0x4007979	      0xe981000000	                           jmp 0x40079ff	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x400797e	          0x4863d5	                         movsxd rdx, ebp	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4007981	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4007985	    0x8bbcd0b00500	   mov edi, dword [rax + rdx*8 + 0x5b0] 	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400798c	      0xe800000000	                          call 0x4007991	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4007991	          0x4889c3	                            mov rbx, rax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4007994	          0x4885c0	                           test rax, rax	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x4007997	     0xf84b9020000	                            je 0x4007c56	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x400799d	    0x483b05000000	            cmp rax, qword [0x040079a4] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x40079a4	     0xf84ac020000	                            je 0x4007c56	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x40079aa	    0x83b824140000	             cmp dword [rax + 0x1424], 0	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x40079b1	     0xf849f020000	                            je 0x4007c56	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x40079b7	      0x4883780800	                  cmp qword [rax + 8], 0	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x40079bc	     0xf85b0000000	                           jne 0x4007a72	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x40079c2	          0x4d85ed	                           test r13, r13	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x40079c5	        0x4c0f44e8	                          cmove r13, rax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x40079c9	      0xe988020000	                           jmp 0x4007c56	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x40079ce	    0x488b05000000	            mov rax, qword [0x040079d5] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40079d5	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40079db	    0x398844150000	          cmp dword [rax + 0x1544], ecx 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40079e1	            0x7507	                           jne 0x40079ea	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40079e3	            0xeb2d	                           jmp 0x4007a12	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x40079e5	          0x83ed01	                              sub ebp, 1	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40079e8	            0x7910	                           jns 0x40079fa	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40079ea	    0x488b05000000	            mov rax, qword [0x040079f1] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40079f1	    0x8ba840150000	          mov ebp, dword [rax + 0x1540] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40079f7	          0x83ed01	                              sub ebp, 1	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40079fa	          0x4139ec	                           cmp r12d, ebp	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x40079fd	            0x7413	                            je 0x4007a12	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x40079ff	    0x488b05000000	            mov rax, qword [0x04007a06] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4007a06	    0x3ba844150000	          cmp ebp, dword [rax + 0x1544] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4007a0c	     0xf856cffffff	                           jne 0x400797e	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4007a12	    0x488b0d000000	            mov rcx, qword [0x04007a19] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x4007a19	        0x488b4168	            mov rax, qword [rcx + 0x68] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x4007a1d	          0x4c89eb	                            mov rbx, r13	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x4007a20	      0xba01000000	                              mov edx, 1	      1497	buffer.c	FUNCTION_19	IF_15	IF_39
0x4007a25	          0x4885c0	                           test rax, rax	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4007a28	            0x750f	                           jne 0x4007a39	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4007a2a	            0x85d2	                           test edx, edx	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x4007a2c	            0x7444	                            je 0x4007a72	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x4007a2e	        0x488b4170	            mov rax, qword [rcx + 0x70] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4007a32	      0xba00000000	                              mov edx, 0	      1506	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4007a37	            0xebec	                           jmp 0x4007a25	      1507	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x4007a39	    0x8bb158170000	          mov esi, dword [rcx + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4007a3f	    0x39b058170000	          cmp dword [rax + 0x1758], esi 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4007a45	            0x751b	                           jne 0x4007a62	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4007a47	    0x83b824140000	             cmp dword [rax + 0x1424], 0	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4007a4e	            0x7412	                            je 0x4007a62	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4007a50	      0x4883780800	                  cmp qword [rax + 8], 0	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4007a55	     0xf8513020000	                           jne 0x4007c6e	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4007a5b	          0x4885db	                           test rbx, rbx	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x4007a5e	        0x480f44d8	                          cmove rbx, rax	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x4007a62	            0x85d2	                           test edx, edx	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4007a64	            0x7406	                            je 0x4007a6c	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4007a66	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4007a6a	            0xebb9	                           jmp 0x4007a25	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x4007a6c	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x4007a70	            0xebb3	                           jmp 0x4007a25	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x4007a72	          0x4885db	                           test rbx, rbx	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x4007a75	            0x7575	                           jne 0x4007aec	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x4007a77	    0x488b1d000000	            mov rbx, qword [0x04007a7e] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007a7e	          0x4885db	                           test rbx, rbx	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007a81	            0x7425	                            je 0x4007aa8	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007a83	    0x488b05000000	            mov rax, qword [0x04007a8a] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4007a8a	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4007a91	            0x7405	                            je 0x4007a98	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4007a93	          0x4839d8	                            cmp rax, rbx	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4007a96	            0x750b	                           jne 0x4007aa3	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4007a98	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007a9c	          0x4885db	                           test rbx, rbx	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007a9f	            0x75e9	                           jne 0x4007a8a	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007aa1	            0xeb05	                           jmp 0x4007aa8	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4007aa3	          0x4885db	                           test rbx, rbx	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x4007aa6	            0x7544	                           jne 0x4007aec	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x4007aa8	    0x488b05000000	            mov rax, qword [0x04007aaf] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4007aaf	        0x488b5868	            mov rbx, qword [rax + 0x68] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4007ab3	          0x4885db	                           test rbx, rbx	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4007ab6	            0x7534	                           jne 0x4007aec	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4007ab8	        0x488b5870	            mov rbx, qword [rax + 0x70] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x4007abc	          0x4885db	                           test rbx, rbx	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x4007abf	            0x7412	                            je 0x4007ad3	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x4007ac1	            0xeb29	                           jmp 0x4007aec	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x4007ac3	          0x4189c6	                           mov r14d, eax	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007ac6	      0xe939010000	                           jmp 0x4007c04	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x4007acb	          0x4189c6	                           mov r14d, eax	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x4007ace	      0xe931010000	                           jmp 0x4007c04	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x4007ad3	          0x4489fa	                           mov edx, r15d	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007ad6	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007ada	      0xbf00000000	                              mov edi, 0	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007adf	      0xe881f6ffff	                   call sym.empty_curbuf	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007ae4	          0x4189c6	                           mov r14d, eax	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007ae7	      0xe918010000	                           jmp 0x4007c04	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4007aec	        0x4183ff01	                             cmp r15d, 1	      1550	buffer.c	FUNCTION_19	IF_52
0x4007af0	            0x755f	                           jne 0x4007b51	      1550	buffer.c	FUNCTION_19	IF_52
0x4007af2	    0xf60500000000	               test byte [0x04007af9], 1	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007af9	            0x7417	                            je 0x4007b12	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007afb	          0x4889df	                            mov rdi, rbx	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007afe	      0xe800000000	                          call 0x4007b03	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007b03	    0x41be01000000	                             mov r14d, 1	      1555	buffer.c	FUNCTION_19	IF_52	IF_53
0x4007b09	          0x4885c0	                           test rax, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007b0c	     0xf85f2000000	                           jne 0x4007c04	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4007b12	    0xf60500000000	               test byte [0x04007b19], 2	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b19	            0x7417	                            je 0x4007b32	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b1b	          0x4889df	                            mov rdi, rbx	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b1e	      0xe800000000	                          call 0x4007b23	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b23	    0x41be01000000	                             mov r14d, 1	      1559	buffer.c	FUNCTION_19	IF_52	IF_54
0x4007b29	          0x4885c0	                           test rax, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b2c	     0xf85d2000000	                           jne 0x4007c04	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x4007b32	      0xbe00000000	                              mov esi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b37	      0xbf00000000	                              mov edi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b3c	      0xe800000000	                          call 0x4007b41	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b41	          0x4189c6	                           mov r14d, eax	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b44	            0x85c0	                           test eax, eax	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b46	     0xf852a010000	                           jne 0x4007c76	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b4c	      0xe9b3000000	                           jmp 0x4007c04	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x4007b51	    0x488b3d000000	            mov rdi, qword [0x04007b58] 	      1565	buffer.c	FUNCTION_19	IF_56
0x4007b58	          0x4839df	                            cmp rdi, rbx	      1565	buffer.c	FUNCTION_19	IF_56
0x4007b5b	     0xf8495000000	                            je 0x4007bf6	      1565	buffer.c	FUNCTION_19	IF_56
0x4007b61	          0x4585ff	                         test r15d, r15d	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b64	     0xf859d010000	                           jne 0x4007d07	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b6a	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b6e	      0xe800000000	                          call 0x4007b73	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b73	          0x4189c6	                           mov r14d, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b76	            0x85c0	                           test eax, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b78	     0xf8506010000	                           jne 0x4007c84	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x4007b7e	    0x833d00000000	               cmp dword [0x04007b85], 0	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b85	            0x7509	                           jne 0x4007b90	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b87	    0x833d00000000	               cmp dword [0x04007b8e], 0	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b8e	            0x743a	                            je 0x4007bca	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b90	    0x833d00000000	               cmp dword [0x04007b97], 0	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b97	            0x7431	                            je 0x4007bca	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4007b99	          0x4889de	                            mov rsi, rbx	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4007b9c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4007ba1	      0xe800000000	                          call 0x4007ba6	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x4007ba6	      0xbe00000000	                              mov esi, 0	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4007bab	    0x488b3d000000	            mov rdi, qword [0x04007bb2] 	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4007bb2	      0xe800000000	                          call 0x4007bb7	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x4007bb7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4007bbc	      0xe800000000	                          call 0x4007bc1	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4007bc1	            0x85c0	                           test eax, eax	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4007bc3	            0x7505	                           jne 0x4007bca	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x4007bc5	          0x4189c6	                           mov r14d, eax	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x4007bc8	            0xeb3a	                           jmp 0x4007c04	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x4007bca	    0x488b3d000000	            mov rdi, qword [0x04007bd1] 	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4007bd1	      0xe800000000	                          call 0x4007bd6	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4007bd6	            0x85c0	                           test eax, eax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4007bd8	     0xf84a6000000	                            je 0x4007c84	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x4007bde	      0xe800000000	                          call 0x4007be3	      1587	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_41
0x4007be3	            0xeb1f	                           jmp 0x4007c04	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x4007be5	      0xe800000000	                          call 0x4007bea	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x4007bea	            0x85c0	                           test eax, eax	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4007bec	        0x410f94c6	                               sete r14b	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4007bf0	        0x450fb6f6	                        movzx r14d, r14b	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4007bf4	            0xeb0e	                           jmp 0x4007c04	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4007bf6	    0x41be01000000	                             mov r14d, 1	      1566	buffer.c	FUNCTION_19	IF_56
0x4007bfc	            0xeb06	                           jmp 0x4007c04	      1566	buffer.c	FUNCTION_19	IF_56
0x4007bfe	    0x41be01000000	                             mov r14d, 1	      1566	buffer.c	FUNCTION_19	IF_56
0x4007c04	          0x4489f0	                           mov eax, r14d	      1606	buffer.c	FUNCTION_19
0x4007c07	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1606	buffer.c	FUNCTION_19
0x4007c0c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1606	buffer.c	FUNCTION_19
0x4007c15	     0xf8401010000	                            je 0x4007d1c	      1606	buffer.c	FUNCTION_19
0x4007c1b	      0xe9f7000000	                           jmp 0x4007d17	      1606	buffer.c	FUNCTION_19
0x4007c20	          0x4885db	                           test rbx, rbx	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c23	     0xf85e0faffff	                           jne 0x4007709	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c29	      0xe987faffff	                           jmp 0x40076b5	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c2e	    0xc70500000000	               mov dword [0x04007c38], 1	      1357	buffer.c	FUNCTION_19
0x4007c38	      0xe9e0faffff	                           jmp 0x400771d	      1357	buffer.c	FUNCTION_19
0x4007c3d	          0x4885db	                           test rbx, rbx	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c40	            0x75ec	                           jne 0x4007c2e	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c42	            0xeb60	                           jmp 0x4007ca4	      1341	buffer.c	FUNCTION_19	IF_11
0x4007c44	    0x48391d000000	            cmp qword [0x04007c4b], rbx 	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4007c4b	     0xf8581fcffff	                           jne 0x40078d2	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4007c51	      0xe906fcffff	                           jmp 0x400785c	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4007c56	            0x85ed	                           test ebp, ebp	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4007c58	     0xf8470fdffff	                            je 0x40079ce	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4007c5e	      0xe982fdffff	                           jmp 0x40079e5	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4007c63	    0x41bd00000000	                             mov r13d, 0	      1454	buffer.c	FUNCTION_19	IF_15
0x4007c69	      0xe9a4fdffff	                           jmp 0x4007a12	      1454	buffer.c	FUNCTION_19	IF_15
0x4007c6e	          0x4889c3	                            mov rbx, rax	      1454	buffer.c	FUNCTION_19	IF_15
0x4007c71	      0xe9fcfdffff	                           jmp 0x4007a72	      1454	buffer.c	FUNCTION_19	IF_15
0x4007c76	    0x48391d000000	            cmp qword [0x04007c7d], rbx 	      1565	buffer.c	FUNCTION_19	IF_56
0x4007c7d	            0x755d	                           jne 0x4007cdc	      1565	buffer.c	FUNCTION_19	IF_56
0x4007c7f	      0xe97affffff	                           jmp 0x4007bfe	      1565	buffer.c	FUNCTION_19	IF_56
0x4007c84	      0xbe00000000	                              mov esi, 0	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007c89	          0x4889df	                            mov rdi, rbx	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007c8c	      0xe800000000	                          call 0x4007c91	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007c91	      0xe94fffffff	                           jmp 0x4007be5	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007c96	          0x4084ff	                           test dil, dil	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007c99	     0xf8416faffff	                            je 0x40076b5	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007c9f	      0xe9e7f9ffff	                           jmp 0x400768b	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007ca4	    0x41be00000000	                             mov r14d, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x4007caa	          0x4084ff	                           test dil, dil	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007cad	     0xf8402faffff	                            je 0x40076b5	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007cb3	      0xe94cffffff	                           jmp 0x4007c04	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4007cb8	    0xc70500000000	               mov dword [0x04007cc2], 1	      1357	buffer.c	FUNCTION_19
0x4007cc2	      0xe925feffff	                           jmp 0x4007aec	      1357	buffer.c	FUNCTION_19
0x4007cc7	    0x488b05000000	            mov rax, qword [0x04007cce] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007cce	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007cd1	     0xf8559fbffff	                           jne 0x4007830	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007cd7	      0xe980fbffff	                           jmp 0x400785c	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4007cdc	          0x4489fe	                           mov esi, r15d	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007cdf	          0x4889df	                            mov rdi, rbx	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007ce2	      0xe800000000	                          call 0x4007ce7	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007ce7	    0x488b05000000	            mov rax, qword [0x04007cee] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4007cee	    0xc78088020000	              mov dword [rax + 0x288], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4007cf8	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4007d02	      0xe9defeffff	                           jmp 0x4007be5	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4007d07	          0x4489fe	                           mov esi, r15d	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007d0a	          0x4889df	                            mov rdi, rbx	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007d0d	      0xe800000000	                          call 0x4007d12	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007d12	      0xe9cefeffff	                           jmp 0x4007be5	      1593	buffer.c	FUNCTION_19	CALL_42
0x4007d17	      0xe800000000	                          call 0x4007d1c	      1606	buffer.c	FUNCTION_19
0x4007d1c	        0x4883c438	                           add rsp, 0x38	      1606	buffer.c	FUNCTION_19
0x4007d20	              0x5b	                                 pop rbx	      1606	buffer.c	FUNCTION_19
0x4007d21	              0x5d	                                 pop rbp	      1606	buffer.c	FUNCTION_19
0x4007d22	            0x415c	                                 pop r12	      1606	buffer.c	FUNCTION_19
0x4007d24	            0x415d	                                 pop r13	      1606	buffer.c	FUNCTION_19
0x4007d26	            0x415e	                                 pop r14	      1606	buffer.c	FUNCTION_19
0x4007d28	            0x415f	                                 pop r15	      1606	buffer.c	FUNCTION_19
0x4007d2a	              0xc3	                                     ret	      1606	buffer.c	FUNCTION_19
free_buf_options	CALL,52:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	118
0x4000e37	              0x55	                                push rbp	      2119	buffer.c	FUNCTION_27
0x4000e38	              0x53	                                push rbx	      2119	buffer.c	FUNCTION_27
0x4000e39	        0x4883ec08	                              sub rsp, 8	      2119	buffer.c	FUNCTION_27
0x4000e3d	          0x4889fb	                            mov rbx, rdi	      2119	buffer.c	FUNCTION_27
0x4000e40	            0x85f6	                           test esi, esi	      2120	buffer.c	FUNCTION_27	IF_1
0x4000e42	            0x7430	                            je 0x4000e74	      2120	buffer.c	FUNCTION_27	IF_1
0x4000e44	    0x488dbf881400	                 lea rdi, [rdi + 0x1488]	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4000e4b	      0xe800000000	                          call 0x4000e50	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4000e50	    0x488dbb901400	                 lea rdi, [rbx + 0x1490]	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4000e57	      0xe800000000	                          call 0x4000e5c	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4000e5c	    0x488dbb101400	                 lea rdi, [rbx + 0x1410]	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4000e63	      0xe800000000	                          call 0x4000e68	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4000e68	    0x488dbb181400	                 lea rdi, [rbx + 0x1418]	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4000e6f	      0xe800000000	                          call 0x4000e74	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4000e74	    0x488dbbc01400	                 lea rdi, [rbx + 0x14c0]	      2130	buffer.c	FUNCTION_27	CALL_5
0x4000e7b	      0xe800000000	                          call 0x4000e80	      2130	buffer.c	FUNCTION_27	CALL_5
0x4000e80	    0x488dbbc81400	                 lea rdi, [rbx + 0x14c8]	      2131	buffer.c	FUNCTION_27	CALL_6
0x4000e87	      0xe800000000	                          call 0x4000e8c	      2131	buffer.c	FUNCTION_27	CALL_6
0x4000e8c	    0x488dbbd01400	                 lea rdi, [rbx + 0x14d0]	      2133	buffer.c	FUNCTION_27	CALL_7
0x4000e93	      0xe800000000	                          call 0x4000e98	      2133	buffer.c	FUNCTION_27	CALL_7
0x4000e98	    0x488dbbe01400	                 lea rdi, [rbx + 0x14e0]	      2137	buffer.c	FUNCTION_27	CALL_8
0x4000e9f	      0xe800000000	                          call 0x4000ea4	      2137	buffer.c	FUNCTION_27	CALL_8
0x4000ea4	    0x488dbbf01400	                 lea rdi, [rbx + 0x14f0]	      2138	buffer.c	FUNCTION_27	CALL_9
0x4000eab	      0xe800000000	                          call 0x4000eb0	      2138	buffer.c	FUNCTION_27	CALL_9
0x4000eb0	    0x488dbb381700	                 lea rdi, [rbx + 0x1738]	      2141	buffer.c	FUNCTION_27	CALL_10
0x4000eb7	      0xe800000000	                          call 0x4000ebc	      2141	buffer.c	FUNCTION_27	CALL_10
0x4000ebc	    0x488dbb481700	                 lea rdi, [rbx + 0x1748]	      2144	buffer.c	FUNCTION_27	CALL_11
0x4000ec3	      0xe800000000	                          call 0x4000ec8	      2144	buffer.c	FUNCTION_27	CALL_11
0x4000ec8	    0x488dbbf81400	                 lea rdi, [rbx + 0x14f8]	      2146	buffer.c	FUNCTION_27	CALL_12
0x4000ecf	      0xe800000000	                          call 0x4000ed4	      2146	buffer.c	FUNCTION_27	CALL_12
0x4000ed4	    0x488dbb001500	                 lea rdi, [rbx + 0x1500]	      2148	buffer.c	FUNCTION_27	CALL_13
0x4000edb	      0xe800000000	                          call 0x4000ee0	      2148	buffer.c	FUNCTION_27	CALL_13
0x4000ee0	    0x488dbb101500	                 lea rdi, [rbx + 0x1510]	      2151	buffer.c	FUNCTION_27	CALL_14
0x4000ee7	      0xe800000000	                          call 0x4000eec	      2151	buffer.c	FUNCTION_27	CALL_14
0x4000eec	    0x488dbb181500	                 lea rdi, [rbx + 0x1518]	      2153	buffer.c	FUNCTION_27	CALL_15
0x4000ef3	      0xe800000000	                          call 0x4000ef8	      2153	buffer.c	FUNCTION_27	CALL_15
0x4000ef8	    0x488dbb301500	                 lea rdi, [rbx + 0x1530]	      2154	buffer.c	FUNCTION_27	CALL_16
0x4000eff	      0xe800000000	                          call 0x4000f04	      2154	buffer.c	FUNCTION_27	CALL_16
0x4000f04	    0x488dbba01400	                 lea rdi, [rbx + 0x14a0]	      2155	buffer.c	FUNCTION_27	CALL_17
0x4000f0b	      0xe800000000	                          call 0x4000f10	      2155	buffer.c	FUNCTION_27	CALL_17
0x4000f10	    0x488dbba81400	                 lea rdi, [rbx + 0x14a8]	      2156	buffer.c	FUNCTION_27	CALL_18
0x4000f17	      0xe800000000	                          call 0x4000f1c	      2156	buffer.c	FUNCTION_27	CALL_18
0x4000f1c	    0x488dbbb81400	                 lea rdi, [rbx + 0x14b8]	      2157	buffer.c	FUNCTION_27	CALL_19
0x4000f23	      0xe800000000	                          call 0x4000f28	      2157	buffer.c	FUNCTION_27	CALL_19
0x4000f28	    0x488dbbe81500	                 lea rdi, [rbx + 0x15e8]	      2159	buffer.c	FUNCTION_27	CALL_20
0x4000f2f	      0xe800000000	                          call 0x4000f34	      2159	buffer.c	FUNCTION_27	CALL_20
0x4000f34	    0x488dab901200	                 lea rbp, [rbx + 0x1290]	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000f3b	          0x4889ef	                            mov rdi, rbp	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000f3e	      0xe800000000	                          call 0x4000f43	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000f43	          0x4889ef	                            mov rdi, rbp	      2161	buffer.c	FUNCTION_27	CALL_22
0x4000f46	      0xe800000000	                          call 0x4000f4b	      2161	buffer.c	FUNCTION_27	CALL_22
0x4000f4b	    0x488dbb481400	                 lea rdi, [rbx + 0x1448]	      2164	buffer.c	FUNCTION_27	CALL_23
0x4000f52	      0xe800000000	                          call 0x4000f57	      2164	buffer.c	FUNCTION_27	CALL_23
0x4000f57	    0x488dbb501400	                 lea rdi, [rbx + 0x1450]	      2167	buffer.c	FUNCTION_27	CALL_24
0x4000f5e	      0xe800000000	                          call 0x4000f63	      2167	buffer.c	FUNCTION_27	CALL_24
0x4000f63	    0x488dbb481500	                 lea rdi, [rbx + 0x1548]	      2169	buffer.c	FUNCTION_27	CALL_25
0x4000f6a	      0xe800000000	                          call 0x4000f6f	      2169	buffer.c	FUNCTION_27	CALL_25
0x4000f6f	    0x488dbba01500	                 lea rdi, [rbx + 0x15a0]	      2171	buffer.c	FUNCTION_27	CALL_26
0x4000f76	      0xe800000000	                          call 0x4000f7b	      2171	buffer.c	FUNCTION_27	CALL_26
0x4000f7b	    0x488dbb181c00	                 lea rdi, [rbx + 0x1c18]	      2172	buffer.c	FUNCTION_27	CALL_27
0x4000f82	      0xe800000000	                          call 0x4000f87	      2172	buffer.c	FUNCTION_27	CALL_27
0x4000f87	    0x488dbbd01b00	                 lea rdi, [rbx + 0x1bd0]	      2175	buffer.c	FUNCTION_27	CALL_28
0x4000f8e	      0xe800000000	                          call 0x4000f93	      2175	buffer.c	FUNCTION_27	CALL_28
0x4000f93	    0x488dbbe01b00	                 lea rdi, [rbx + 0x1be0]	      2176	buffer.c	FUNCTION_27	CALL_29
0x4000f9a	      0xe800000000	                          call 0x4000f9f	      2176	buffer.c	FUNCTION_27	CALL_29
0x4000f9f	    0x488bbbd81b00	          mov rdi, qword [rbx + 0x1bd8] 	      2177	buffer.c	FUNCTION_27	CALL_30
0x4000fa6	      0xe800000000	                          call 0x4000fab	      2177	buffer.c	FUNCTION_27	CALL_30
0x4000fab	    0x48c783d81b00	            mov qword [rbx + 0x1bd8], 0 	      2178	buffer.c	FUNCTION_27
0x4000fb6	    0x488dbbe81b00	                 lea rdi, [rbx + 0x1be8]	      2179	buffer.c	FUNCTION_27	CALL_31
0x4000fbd	      0xe800000000	                          call 0x4000fc2	      2179	buffer.c	FUNCTION_27	CALL_31
0x4000fc2	    0x488dbb881500	                 lea rdi, [rbx + 0x1588]	      2182	buffer.c	FUNCTION_27	CALL_32
0x4000fc9	      0xe800000000	                          call 0x4000fce	      2182	buffer.c	FUNCTION_27	CALL_32
0x4000fce	    0x488dbb981400	                 lea rdi, [rbx + 0x1498]	      2184	buffer.c	FUNCTION_27	CALL_33
0x4000fd5	      0xe800000000	                          call 0x4000fda	      2184	buffer.c	FUNCTION_27	CALL_33
0x4000fda	    0x488dbb381400	                 lea rdi, [rbx + 0x1438]	      2186	buffer.c	FUNCTION_27	CALL_34
0x4000fe1	      0xe800000000	                          call 0x4000fe6	      2186	buffer.c	FUNCTION_27	CALL_34
0x4000fe6	    0x488dbb301400	                 lea rdi, [rbx + 0x1430]	      2187	buffer.c	FUNCTION_27	CALL_35
0x4000fed	      0xe800000000	                          call 0x4000ff2	      2187	buffer.c	FUNCTION_27	CALL_35
0x4000ff2	    0x488dbb401400	                 lea rdi, [rbx + 0x1440]	      2190	buffer.c	FUNCTION_27	CALL_36
0x4000ff9	      0xe800000000	                          call 0x4000ffe	      2190	buffer.c	FUNCTION_27	CALL_36
0x4000ffe	    0x488dbb581400	                 lea rdi, [rbx + 0x1458]	      2193	buffer.c	FUNCTION_27	CALL_37
0x4001005	      0xe800000000	                          call 0x400100a	      2193	buffer.c	FUNCTION_27	CALL_37
0x400100a	    0x488dbb601400	                 lea rdi, [rbx + 0x1460]	      2196	buffer.c	FUNCTION_27	CALL_38
0x4001011	      0xe800000000	                          call 0x4001016	      2196	buffer.c	FUNCTION_27	CALL_38
0x4001016	    0x488dbb681400	                 lea rdi, [rbx + 0x1468]	      2197	buffer.c	FUNCTION_27	CALL_39
0x400101d	      0xe800000000	                          call 0x4001022	      2197	buffer.c	FUNCTION_27	CALL_39
0x4001022	    0x488dbbf01500	                 lea rdi, [rbx + 0x15f0]	      2200	buffer.c	FUNCTION_27	CALL_40
0x4001029	      0xe800000000	                          call 0x400102e	      2200	buffer.c	FUNCTION_27	CALL_40
0x400102e	    0x488dbbf81500	                 lea rdi, [rbx + 0x15f8]	      2201	buffer.c	FUNCTION_27	CALL_41
0x4001035	      0xe800000000	                          call 0x400103a	      2201	buffer.c	FUNCTION_27	CALL_41
0x400103a	    0x488dbb001600	                 lea rdi, [rbx + 0x1600]	      2202	buffer.c	FUNCTION_27	CALL_42
0x4001041	      0xe800000000	                          call 0x4001046	      2202	buffer.c	FUNCTION_27	CALL_42
0x4001046	    0x488dbb081600	                 lea rdi, [rbx + 0x1608]	      2204	buffer.c	FUNCTION_27	CALL_43
0x400104d	      0xe800000000	                          call 0x4001052	      2204	buffer.c	FUNCTION_27	CALL_43
0x4001052	    0x488dbb101600	                 lea rdi, [rbx + 0x1610]	      2205	buffer.c	FUNCTION_27	CALL_44
0x4001059	      0xe800000000	                          call 0x400105e	      2205	buffer.c	FUNCTION_27	CALL_44
0x400105e	    0x488dbb201600	                 lea rdi, [rbx + 0x1620]	      2206	buffer.c	FUNCTION_27	CALL_45
0x4001065	      0xe800000000	                          call 0x400106a	      2206	buffer.c	FUNCTION_27	CALL_45
0x400106a	    0x488dbb281600	                 lea rdi, [rbx + 0x1628]	      2207	buffer.c	FUNCTION_27	CALL_46
0x4001071	      0xe800000000	                          call 0x4001076	      2207	buffer.c	FUNCTION_27	CALL_46
0x4001076	    0x488dbb381600	                 lea rdi, [rbx + 0x1638]	      2209	buffer.c	FUNCTION_27	CALL_47
0x400107d	      0xe800000000	                          call 0x4001082	      2209	buffer.c	FUNCTION_27	CALL_47
0x4001082	    0x488dbb401600	                 lea rdi, [rbx + 0x1640]	      2210	buffer.c	FUNCTION_27	CALL_48
0x4001089	      0xe800000000	                          call 0x400108e	      2210	buffer.c	FUNCTION_27	CALL_48
0x400108e	    0x488dbb581500	                 lea rdi, [rbx + 0x1558]	      2213	buffer.c	FUNCTION_27	CALL_49
0x4001095	      0xe800000000	                          call 0x400109a	      2213	buffer.c	FUNCTION_27	CALL_49
0x400109a	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	      2215	buffer.c	FUNCTION_27
0x40010a4	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	      2216	buffer.c	FUNCTION_27
0x40010af	    0x488dbb581600	                 lea rdi, [rbx + 0x1658]	      2218	buffer.c	FUNCTION_27	CALL_50
0x40010b6	      0xe800000000	                          call 0x40010bb	      2218	buffer.c	FUNCTION_27	CALL_50
0x40010bb	    0x488dbbf81300	                 lea rdi, [rbx + 0x13f8]	      2220	buffer.c	FUNCTION_27	CALL_51
0x40010c2	      0xe800000000	                          call 0x40010c7	      2220	buffer.c	FUNCTION_27	CALL_51
0x40010c7	    0x488dbb281500	                 lea rdi, [rbx + 0x1528]	      2222	buffer.c	FUNCTION_27	CALL_52
0x40010ce	      0xe800000000	                          call 0x40010d3	      2222	buffer.c	FUNCTION_27	CALL_52
0x40010d3	        0x4883c408	                              add rsp, 8	      2224	buffer.c	FUNCTION_27
0x40010d7	              0x5b	                                 pop rbx	      2224	buffer.c	FUNCTION_27
0x40010d8	              0x5d	                                 pop rbp	      2224	buffer.c	FUNCTION_27
0x40010d9	              0xc3	                                     ret	      2224	buffer.c	FUNCTION_27
sign_mark_adjust	CALL,0:IF,3:SWITCH,0:ELSE,2:WHILE,0:FOR,1:DO,0:functions,0	24
0x40092af	    0x488b05000000	            mov rax, qword [0x040092b6] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092b6	    0x4c8b80201c00	           mov r8, qword [rax + 0x1c20] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092bd	          0x4d85c0	                             test r8, r8	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092c0	            0x743b	                            je 0x40092fd	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092c2	        0x498b4008	                 mov rax, qword [r8 + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x40092c6	          0x4839f0	                            cmp rax, rsi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x40092c9	            0x7f1d	                            jg 0x40092e8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x40092cb	          0x4839f8	                            cmp rax, rdi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x40092ce	            0x7c18	                            jl 0x40092e8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x40092d0	    0x4881faffffff	                     cmp rdx, 0x7fffffff	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x40092d7	            0x7506	                           jne 0x40092df	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x40092d9	        0x49897808	                 mov qword [r8 + 8], rdi	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x40092dd	            0xeb15	                           jmp 0x40092f4	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x40092df	          0x4801d0	                            add rax, rdx	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x40092e2	        0x49894008	                 mov qword [r8 + 8], rax	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x40092e6	            0xeb0c	                           jmp 0x40092f4	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x40092e8	          0x4839f0	                            cmp rax, rsi	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x40092eb	            0x7e07	                           jle 0x40092f4	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x40092ed	          0x4801c8	                            add rax, rcx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x40092f0	        0x49894008	                 mov qword [r8 + 8], rax	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x40092f4	        0x4d8b4018	               mov r8, qword [r8 + 0x18]	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092f8	          0x4d85c0	                             test r8, r8	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092fb	            0x75c5	                           jne 0x40092c2	      6132	buffer.c	FUNCTION_100	FOR_1
0x40092fd	            0xf3c3	                                     ret	      6132	buffer.c	FUNCTION_100	FOR_1
do_autochdir	CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	17
0x4000ce0	    0x833d00000000	               cmp dword [0x04000ce7], 0	      1809	buffer.c	FUNCTION_22	IF_1
0x4000ce7	            0x7409	                            je 0x4000cf2	      1809	buffer.c	FUNCTION_22	IF_1
0x4000ce9	    0x833d00000000	               cmp dword [0x04000cf0], 0	      1809	buffer.c	FUNCTION_22	IF_1
0x4000cf0	            0x7434	                            je 0x4000d26	      1809	buffer.c	FUNCTION_22	IF_1
0x4000cf2	    0x488b05000000	            mov rax, qword [0x04000cf9] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4000cf9	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4000d00	          0x4885ff	                           test rdi, rdi	      1810	buffer.c	FUNCTION_22	IF_1
0x4000d03	            0x7421	                            je 0x4000d26	      1810	buffer.c	FUNCTION_22	IF_1
0x4000d05	        0x4883ec08	                              sub rsp, 8	      1808	buffer.c	FUNCTION_22
0x4000d09	      0xbe00000000	                              mov esi, 0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4000d0e	      0xe800000000	                          call 0x4000d13	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4000d13	          0x83f801	                              cmp eax, 1	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4000d16	            0x750a	                           jne 0x4000d22	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4000d18	      0xbf01000000	                              mov edi, 1	      1812	buffer.c	FUNCTION_22	CALL_2
0x4000d1d	      0xe800000000	                          call 0x4000d22	      1812	buffer.c	FUNCTION_22	CALL_2
0x4000d22	        0x4883c408	                              add rsp, 8	      1813	buffer.c	FUNCTION_22
0x4000d26	            0xf3c3	                                     ret	      1813	buffer.c	FUNCTION_22
bt_dontwrite_msg	CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	13
0x40024df	        0x4883ec08	                              sub rsp, 8	      5644	buffer.c	FUNCTION_82
0x40024e3	      0xe800000000	                          call 0x40024e8	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x40024e8	            0x85c0	                           test eax, eax	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x40024ea	            0x7421	                            je 0x400250d	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0x40024ec	      0xba05000000	                              mov edx, 5	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40024f1	      0xbe00000000	                              mov esi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40024f6	      0xbf00000000	                              mov edi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40024fb	      0xe800000000	                          call 0x4002500	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4002500	          0x4889c7	                            mov rdi, rax	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4002503	      0xe800000000	                          call 0x4002508	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4002508	      0xb801000000	                              mov eax, 1	      5648	buffer.c	FUNCTION_82	IF_1
0x400250d	        0x4883c408	                              add rsp, 8	      5651	buffer.c	FUNCTION_82
0x4002511	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
buf_delsign	CALL,3:IF,3:SWITCH,0:ELSE,1:WHILE,0:FOR,1:DO,0:functions,0	44
0x40061e7	              0x55	                                push rbp	      5937	buffer.c	FUNCTION_92
0x40061e8	              0x53	                                push rbx	      5937	buffer.c	FUNCTION_92
0x40061e9	        0x4883ec08	                              sub rsp, 8	      5937	buffer.c	FUNCTION_92
0x40061ed	          0x4889fb	                            mov rbx, rdi	      5937	buffer.c	FUNCTION_92
0x40061f0	    0x488b97201c00	          mov rdx, qword [rdi + 0x1c20] 	      5945	buffer.c	FUNCTION_92	FOR_1
0x40061f7	          0x4885d2	                           test rdx, rdx	      5945	buffer.c	FUNCTION_92	FOR_1
0x40061fa	            0x745a	                            je 0x4006256	      5945	buffer.c	FUNCTION_92	FOR_1
0x40061fc	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x4006200	            0x3b32	                    cmp esi, dword [rdx]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006202	            0x7546	                           jne 0x400624a	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006204	    0x488d8b201c00	                 lea rcx, [rbx + 0x1c20]	      5943	buffer.c	FUNCTION_92
0x400620b	          0x4889f8	                            mov rax, rdi	      5947	buffer.c	FUNCTION_92	FOR_1
0x400620e	          0x4889d7	                            mov rdi, rdx	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006211	            0xeb0c	                           jmp 0x400621f	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006213	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x4006217	            0x3937	                    cmp dword [rdi], esi	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006219	            0x7529	                           jne 0x4006244	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400621b	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x400621f	          0x488901	                    mov qword [rcx], rax	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006222	          0x4885c0	                           test rax, rax	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4006225	            0x7408	                            je 0x400622f	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4006227	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400622b	        0x48895020	             mov qword [rax + 0x20], rdx	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400622f	        0x488b6f08	                mov rbp, qword [rdi + 8]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006233	      0xe800000000	                          call 0x4006238	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x4006238	    0x4883bb201c00	             cmp qword [rbx + 0x1c20], 0	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006240	            0x752b	                           jne 0x400626d	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006242	            0xeb17	                           jmp 0x400625b	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006244	          0x4889fa	                            mov rdx, rdi	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006247	          0x4889c7	                            mov rdi, rax	      5947	buffer.c	FUNCTION_92	FOR_1
0x400624a	          0x4885ff	                           test rdi, rdi	      5945	buffer.c	FUNCTION_92	FOR_1
0x400624d	            0x75c4	                           jne 0x4006213	      5945	buffer.c	FUNCTION_92	FOR_1
0x400624f	      0xbd00000000	                              mov ebp, 0	      5944	buffer.c	FUNCTION_92
0x4006254	            0xeb17	                           jmp 0x400626d	      5944	buffer.c	FUNCTION_92
0x4006256	      0xbd00000000	                              mov ebp, 0	      5944	buffer.c	FUNCTION_92
0x400625b	      0xbe28000000	                           mov esi, 0x28	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x4006260	          0x4889df	                            mov rdi, rbx	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x4006263	      0xe800000000	                          call 0x4006268	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x4006268	      0xe800000000	                          call 0x400626d	      5968	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_3
0x400626d	          0x4889e8	                            mov rax, rbp	      5972	buffer.c	FUNCTION_92
0x4006270	        0x4883c408	                              add rsp, 8	      5972	buffer.c	FUNCTION_92
0x4006274	              0x5b	                                 pop rbx	      5972	buffer.c	FUNCTION_92
0x4006275	              0x5d	                                 pop rbp	      5972	buffer.c	FUNCTION_92
0x4006276	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
bt_terminal	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	9
0x40022ce	          0x4885ff	                           test rdi, rdi	      5609	buffer.c	FUNCTION_78
0x40022d1	            0x7411	                            je 0x40022e4	      5609	buffer.c	FUNCTION_78
0x40022d3	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5609	buffer.c	FUNCTION_78
0x40022da	          0x803874	                    cmp byte [rax], 0x74	      5609	buffer.c	FUNCTION_78
0x40022dd	           0xf94c0	                                 sete al	      5609	buffer.c	FUNCTION_78
0x40022e0	           0xfb6c0	                           movzx eax, al	      5609	buffer.c	FUNCTION_78
0x40022e3	              0xc3	                                     ret	      5609	buffer.c	FUNCTION_78
0x40022e4	      0xb800000000	                              mov eax, 0	      5609	buffer.c	FUNCTION_78
0x40022e9	              0xc3	                                     ret	      5610	buffer.c	FUNCTION_78
get_winopts	CALL,7:IF,2:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	85
0x4001773	              0x53	                                push rbx	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4001774	          0x4889fb	                            mov rbx, rdi	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4001777	    0x488b05000000	            mov rax, qword [0x0400177e] 	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x400177e	    0x488db8b00100	                  lea rdi, [rax + 0x1b0]	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4001785	      0xe800000000	                          call 0x400178a	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x400178a	    0x488b3d000000	            mov rdi, qword [0x04001791] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4001791	      0xe800000000	                          call 0x4001796	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4001796	    0x488bb3280100	           mov rsi, qword [rbx + 0x128] 	      2855	buffer.c	FUNCTION_41	FOR_1
0x400179d	          0x4885f6	                           test rsi, rsi	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017a0	     0xf84d4000000	                            je 0x400187a	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017a6	    0x488b15000000	            mov rdx, qword [0x040017ad] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40017ad	    0x488b0d000000	            mov rcx, qword [0x040017b4] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017b4	          0x4889f3	                            mov rbx, rsi	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017b7	        0x48395310	            cmp qword [rbx + 0x10], rdx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40017bb	            0x7523	                           jne 0x40017e0	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40017bd	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2828	buffer.c	FUNCTION_40	IF_1
0x40017c1	            0x7427	                            je 0x40017ea	      2828	buffer.c	FUNCTION_40	IF_1
0x40017c3	          0x4885c9	                           test rcx, rcx	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017c6	            0x7418	                            je 0x40017e0	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017c8	          0x4839ca	                            cmp rdx, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017cb	            0x741d	                            je 0x40017ea	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017cd	          0x4889c8	                            mov rax, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017d0	            0xeb05	                           jmp 0x40017d7	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017d2	          0x4839c2	                            cmp rdx, rax	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017d5	            0x7413	                            je 0x40017ea	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40017d7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017db	          0x4885c0	                           test rax, rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017de	            0x75f2	                           jne 0x40017d2	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017e0	          0x488b1b	                    mov rbx, qword [rbx]	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017e3	          0x4885db	                           test rbx, rbx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017e6	            0x75cf	                           jne 0x40017b7	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017e8	            0xeb05	                           jmp 0x40017ef	      2855	buffer.c	FUNCTION_41	FOR_1
0x40017ea	          0x4885db	                           test rbx, rbx	      2865	buffer.c	FUNCTION_41	IF_2
0x40017ed	            0x753f	                           jne 0x400182e	      2865	buffer.c	FUNCTION_41	IF_2
0x40017ef	    0x488b0d000000	            mov rcx, qword [0x040017f6] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017f6	          0x4889f3	                            mov rbx, rsi	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40017f9	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2828	buffer.c	FUNCTION_40	IF_1
0x40017fd	            0x742a	                            je 0x4001829	      2828	buffer.c	FUNCTION_40	IF_1
0x40017ff	          0x4885c9	                           test rcx, rcx	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4001802	     0xf84b4000000	                            je 0x40018bc	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4001808	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400180c	          0x4839ca	                            cmp rdx, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400180f	            0x7418	                            je 0x4001829	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4001811	          0x4889c8	                            mov rax, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4001814	            0xeb05	                           jmp 0x400181b	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4001816	          0x4839c2	                            cmp rdx, rax	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4001819	            0x740e	                            je 0x4001829	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400181b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x400181f	          0x4885c0	                           test rax, rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4001822	            0x75f2	                           jne 0x4001816	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4001824	      0xe993000000	                           jmp 0x40018bc	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4001829	          0x4885db	                           test rbx, rbx	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400182c	            0x744c	                            je 0x400187a	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400182e	        0x837b2800	               cmp dword [rbx + 0x28], 0	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001832	            0x7446	                            je 0x400187a	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001834	    0x488b05000000	            mov rax, qword [0x0400183b] 	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x400183b	    0x488db0b00100	                  lea rsi, [rax + 0x1b0]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001842	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001846	      0xe800000000	                          call 0x400184b	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x400184b	    0x488b05000000	            mov rax, qword [0x04001852] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001852	    0x8b93e8010000	           mov edx, dword [rbx + 0x1e8] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001858	    0x889020010000	              mov byte [rax + 0x120], dl	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400185e	    0xc68021010000	               mov byte [rax + 0x121], 1	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001865	    0x488db0080100	                  lea rsi, [rax + 0x108]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x400186c	    0x488dbbf00100	                  lea rdi, [rbx + 0x1f0]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4001873	      0xe800000000	                          call 0x4001878	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4001878	            0xeb1a	                           jmp 0x4001894	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x400187a	    0x488b3d000000	            mov rdi, qword [0x04001881] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001881	    0x488db7b00100	                  lea rsi, [rdi + 0x1b0]	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001888	    0x4881c7680300	                          add rdi, 0x368	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x400188f	      0xe800000000	                          call 0x4001894	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001894	    0x488b05000000	            mov rax, qword [0x0400189b] 	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x400189b	          0x4885c0	                           test rax, rax	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x400189e	            0x780e	                            js 0x40018ae	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40018a0	    0x488b15000000	            mov rdx, qword [0x040018a7] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40018a7	    0x488982e80100	            mov qword [rdx + 0x1e8], rax	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40018ae	    0x488b3d000000	            mov rdi, qword [0x040018b5] 	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x40018b5	      0xe800000000	                          call 0x40018ba	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x40018ba	            0xeb0e	                           jmp 0x40018ca	      2918	buffer.c	FUNCTION_42	ELSE_1
0x40018bc	          0x488b1b	                    mov rbx, qword [rbx]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x40018bf	          0x4885db	                           test rbx, rbx	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x40018c2	     0xf8531ffffff	                           jne 0x40017f9	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x40018c8	            0xebb0	                           jmp 0x400187a	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x40018ca	              0x5b	                                 pop rbx	      2918	buffer.c	FUNCTION_42	ELSE_1
0x40018cb	              0xc3	                                     ret	      2918	buffer.c	FUNCTION_42	ELSE_1
buf_findsign_id	CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	16
0x40062a2	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062a9	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062ac	            0x741c	                            je 0x40062ca	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062ae	        0x483b7008	                cmp rsi, qword [rax + 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062b2	            0x750b	                           jne 0x40062bf	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062b4	            0xeb06	                           jmp 0x40062bc	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062b6	        0x48397008	                cmp qword [rax + 8], rsi	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062ba	            0x7503	                           jne 0x40062bf	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062bc	            0x8b00	                    mov eax, dword [rax]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062be	              0xc3	                                     ret	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x40062bf	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062c3	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062c6	            0x75ee	                           jne 0x40062b6	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062c8	            0xf3c3	                                     ret	      6001	buffer.c	FUNCTION_94	FOR_1
0x40062ca	      0xb800000000	                              mov eax, 0	      6005	buffer.c	FUNCTION_94
0x40062cf	              0xc3	                                     ret	      6006	buffer.c	FUNCTION_94
buf_getsigntype	CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	45
0x4006166	            0x4154	                                push r12	      5914	buffer.c	FUNCTION_91
0x4006168	              0x55	                                push rbp	      5914	buffer.c	FUNCTION_91
0x4006169	              0x53	                                push rbx	      5914	buffer.c	FUNCTION_91
0x400616a	          0x4889f5	                            mov rbp, rsi	      5914	buffer.c	FUNCTION_91
0x400616d	          0x4189d4	                           mov r12d, edx	      5914	buffer.c	FUNCTION_91
0x4006170	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x4006177	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400617a	            0x7461	                            je 0x40061dd	      5917	buffer.c	FUNCTION_91	FOR_1
0x400617c	        0x48396b08	                cmp qword [rbx + 8], rbp	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x4006180	            0x754b	                           jne 0x40061cd	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x4006182	          0x4585e4	                         test r12d, r12d	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x4006185	            0x7441	                            je 0x40061c8	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x4006187	        0x4183fc02	                             cmp r12d, 2	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400618b	            0x750f	                           jne 0x400619c	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400618d	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x4006190	      0xe800000000	                          call 0x4006195	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x4006195	          0x4885c0	                           test rax, rax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x4006198	            0x7433	                            je 0x40061cd	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400619a	            0xeb2c	                           jmp 0x40061c8	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400619c	        0x4183fc03	                             cmp r12d, 3	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061a0	            0x750f	                           jne 0x40061b1	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061a2	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x40061a5	      0xe800000000	                          call 0x40061aa	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x40061aa	          0x4885c0	                           test rax, rax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x40061ad	            0x741e	                            je 0x40061cd	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x40061af	            0xeb17	                           jmp 0x40061c8	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x40061b1	        0x4183fc01	                             cmp r12d, 1	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061b5	            0x7516	                           jne 0x40061cd	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061b7	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40061ba	      0xbe01000000	                              mov esi, 1	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40061bf	      0xe800000000	                          call 0x40061c4	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40061c4	            0x85c0	                           test eax, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40061c6	            0x7405	                            je 0x40061cd	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40061c8	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061cb	            0xeb15	                           jmp 0x40061e2	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40061cd	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x40061d1	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x40061d4	            0x75a6	                           jne 0x400617c	      5917	buffer.c	FUNCTION_91	FOR_1
0x40061d6	      0xb800000000	                              mov eax, 0	      5929	buffer.c	FUNCTION_91
0x40061db	            0xeb05	                           jmp 0x40061e2	      5929	buffer.c	FUNCTION_91
0x40061dd	      0xb800000000	                              mov eax, 0	      5929	buffer.c	FUNCTION_91
0x40061e2	              0x5b	                                 pop rbx	      5930	buffer.c	FUNCTION_91
0x40061e3	              0x5d	                                 pop rbp	      5930	buffer.c	FUNCTION_91
0x40061e4	            0x415c	                                 pop r12	      5930	buffer.c	FUNCTION_91
0x40061e6	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
write_viminfo_bufferlist	CALL,8:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,1	96
0x40022ea	            0x4156	                                push r14	      5545	buffer.c	FUNCTION_76
0x40022ec	            0x4155	                                push r13	      5545	buffer.c	FUNCTION_76
0x40022ee	            0x4154	                                push r12	      5545	buffer.c	FUNCTION_76
0x40022f0	              0x55	                                push rbp	      5545	buffer.c	FUNCTION_76
0x40022f1	              0x53	                                push rbx	      5545	buffer.c	FUNCTION_76
0x40022f2	          0x4989fd	                            mov r13, rdi	      5545	buffer.c	FUNCTION_76
0x40022f5	      0xbf25000000	                           mov edi, 0x25	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x40022fa	      0xe800000000	                          call 0x40022ff	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x40022ff	          0x4885c0	                           test rax, rax	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4002302	     0xf8457010000	                            je 0x400245f	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4002308	      0xbf25000000	                           mov edi, 0x25	      5556	buffer.c	FUNCTION_76	CALL_2
0x400230d	      0xe800000000	                          call 0x4002312	      5556	buffer.c	FUNCTION_76	CALL_2
0x4002312	          0x4189c6	                           mov r14d, eax	      5556	buffer.c	FUNCTION_76	CALL_2
0x4002315	      0xbf28100000	                         mov edi, 0x1028	      5560	buffer.c	FUNCTION_76	CALL_3
0x400231a	      0xe800000000	                          call 0x400231f	      5560	buffer.c	FUNCTION_76	CALL_3
0x400231f	          0x4989c4	                            mov r12, rax	      5560	buffer.c	FUNCTION_76	CALL_3
0x4002322	          0x4885c0	                           test rax, rax	      5561	buffer.c	FUNCTION_76	IF_2
0x4002325	     0xf8434010000	                            je 0x400245f	      5561	buffer.c	FUNCTION_76	IF_2
0x400232b	    0x488b2d000000	            mov rbp, qword [0x04002332] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002332	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002335	            0x7435	                            je 0x400236c	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002337	    0x48392d000000	            cmp qword [0x0400233e], rbp 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400233e	            0x7406	                            je 0x4002346	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002340	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002344	            0xeb07	                           jmp 0x400234d	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002346	    0x488b1d000000	            mov rbx, qword [0x0400234d] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400234d	          0x4885db	                           test rbx, rbx	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002350	            0x7411	                            je 0x4002363	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002352	          0x4889df	                            mov rdi, rbx	      5565	buffer.c	FUNCTION_76	CALL_5
0x4002355	      0xe800000000	                          call 0x400235a	      5565	buffer.c	FUNCTION_76	CALL_5
0x400235a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x400235e	          0x4885db	                           test rbx, rbx	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002361	            0x75ef	                           jne 0x4002352	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002363	        0x488b6d00	                    mov rbp, qword [rbp]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002367	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x400236a	            0x75cb	                           jne 0x4002337	      5564	buffer.c	FUNCTION_76	CALL_4
0x400236c	      0xba05000000	                              mov edx, 5	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002371	      0xbe00000000	                              mov esi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002376	      0xbf00000000	                              mov edi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0x400237b	      0xe800000000	                          call 0x4002380	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002380	          0x4c89ee	                            mov rsi, r13	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002383	          0x4889c7	                            mov rdi, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002386	      0xe800000000	                          call 0x400238b	      5567	buffer.c	FUNCTION_76	CALL_7
0x400238b	    0x488b1d000000	            mov rbx, qword [0x04002392] 	      5568	buffer.c	FUNCTION_76
0x4002392	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x4002395	     0xf84bc000000	                            je 0x4002457	      5568	buffer.c	FUNCTION_76
0x400239b	    0x4883bb980000	               cmp qword [rbx + 0x98], 0	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40023a3	     0xf84a1000000	                            je 0x400244a	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40023a9	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40023b0	     0xf8494000000	                            je 0x400244a	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40023b6	          0x4889df	                            mov rdi, rbx	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x40023b9	      0xe800000000	                          call 0x40023be	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x40023be	            0x85c0	                           test eax, eax	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x40023c0	     0xf8584000000	                           jne 0x400244a	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0x40023c6	          0x4889df	                            mov rdi, rbx	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x40023c9	      0xe800000000	                          call 0x40023ce	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x40023ce	            0x85c0	                           test eax, eax	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x40023d0	            0x7578	                           jne 0x400244a	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0x40023d2	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40023d9	      0xe800000000	                          call 0x40023de	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40023de	            0x85c0	                           test eax, eax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40023e0	            0x7568	                           jne 0x400244a	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40023e2	        0x418d6eff	                      lea ebp, [r14 - 1]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x40023e6	          0x4585f6	                         test r14d, r14d	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x40023e9	            0x746c	                            je 0x4002457	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x40023eb	          0x4c89ee	                            mov rsi, r13	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x40023ee	      0xbf25000000	                           mov edi, 0x25	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x40023f3	      0xe800000000	                          call 0x40023f8	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x40023f8	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x40023ff	    0x41b801000000	                              mov r8d, 1	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002405	      0xb900100000	                         mov ecx, 0x1000	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400240a	          0x4c89e2	                            mov rdx, r12	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400240d	      0xbf00000000	                              mov edi, 0	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002412	      0xe800000000	                          call 0x4002417	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002417	    0x488b8b280300	           mov rcx, qword [rbx + 0x328] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400241e	    0x448b83300300	           mov r8d, dword [rbx + 0x330] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002425	      0xba00000000	                              mov edx, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400242a	      0xbe28100000	                         mov esi, 0x1028	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400242f	          0x4c89e7	                            mov rdi, r12	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002432	      0xb800000000	                              mov eax, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002437	      0xe800000000	                          call 0x400243c	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400243c	          0x4c89e6	                            mov rsi, r12	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400243f	          0x4c89ef	                            mov rdi, r13	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4002442	      0xe800000000	                          call 0x4002447	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4002447	          0x4189ee	                           mov r14d, ebp	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x400244a	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5568	buffer.c	FUNCTION_76
0x400244e	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x4002451	     0xf8544ffffff	                           jne 0x400239b	      5568	buffer.c	FUNCTION_76
0x4002457	          0x4c89e7	                            mov rdi, r12	      5590	buffer.c	FUNCTION_76	CALL_8
0x400245a	      0xe800000000	                          call 0x400245f	      5590	buffer.c	FUNCTION_76	CALL_8
0x400245f	              0x5b	                                 pop rbx	      5591	buffer.c	FUNCTION_76
0x4002460	              0x5d	                                 pop rbp	      5591	buffer.c	FUNCTION_76
0x4002461	            0x415c	                                 pop r12	      5591	buffer.c	FUNCTION_76
0x4002463	            0x415d	                                 pop r13	      5591	buffer.c	FUNCTION_76
0x4002465	            0x415e	                                 pop r14	      5591	buffer.c	FUNCTION_76
0x4002467	              0xc3	                                     ret	      5591	buffer.c	FUNCTION_76
free_buffer_stuff	CALL,14:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	47
0x400639f	              0x55	                                push rbp	       896	buffer.c	FUNCTION_13
0x40063a0	              0x53	                                push rbx	       896	buffer.c	FUNCTION_13
0x40063a1	        0x4883ec08	                              sub rsp, 8	       896	buffer.c	FUNCTION_13
0x40063a5	          0x4889fb	                            mov rbx, rdi	       896	buffer.c	FUNCTION_13
0x40063a8	            0x85f6	                           test esi, esi	       897	buffer.c	FUNCTION_13	IF_1
0x40063aa	            0x741e	                            je 0x40063ca	       897	buffer.c	FUNCTION_13	IF_1
0x40063ac	      0xe8f49dffff	                  call sym.clear_wininfo	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x40063b1	      0xbe01000000	                              mov esi, 1	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x40063b6	          0x4889df	                            mov rdi, rbx	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x40063b9	      0xe800000000	                          call 0x40063be	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x40063be	    0x488dbbb01a00	                 lea rdi, [rbx + 0x1ab0]	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x40063c5	      0xe800000000	                          call 0x40063ca	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x40063ca	    0x488babd80000	            mov rbp, qword [rbx + 0xd8] 	       907	buffer.c	FUNCTION_13	CALL_4
0x40063d1	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       909	buffer.c	FUNCTION_13	CALL_5
0x40063d8	        0x488d7810	                   lea rdi, [rax + 0x10]	       909	buffer.c	FUNCTION_13	CALL_5
0x40063dc	      0xe800000000	                          call 0x40063e1	       909	buffer.c	FUNCTION_13	CALL_5
0x40063e1	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       910	buffer.c	FUNCTION_13	CALL_6
0x40063e8	        0x488d7810	                   lea rdi, [rax + 0x10]	       910	buffer.c	FUNCTION_13	CALL_6
0x40063ec	      0xe800000000	                          call 0x40063f1	       910	buffer.c	FUNCTION_13	CALL_6
0x40063f1	          0x4889df	                            mov rdi, rbx	       911	buffer.c	FUNCTION_13	CALL_7
0x40063f4	      0xe8849fffff	               call sym.init_changedtick	       911	buffer.c	FUNCTION_13	CALL_7
0x40063f9	    0x4889abd80000	             mov qword [rbx + 0xd8], rbp	       912	buffer.c	FUNCTION_13	CALL_8
0x4006400	    0x488dbbc81100	                 lea rdi, [rbx + 0x11c8]	       916	buffer.c	FUNCTION_13	CALL_9
0x4006407	      0xe800000000	                          call 0x400640c	       916	buffer.c	FUNCTION_13	CALL_9
0x400640c	          0x4889df	                            mov rdi, rbx	       919	buffer.c	FUNCTION_13	CALL_10
0x400640f	      0xe800000000	                          call 0x4006414	       919	buffer.c	FUNCTION_13	CALL_10
0x4006414	          0x4889df	                            mov rdi, rbx	       922	buffer.c	FUNCTION_13	CALL_11
0x4006417	      0xe800000000	                          call 0x400641c	       922	buffer.c	FUNCTION_13	CALL_11
0x400641c	      0xb900000000	                              mov ecx, 0	       925	buffer.c	FUNCTION_13	CALL_12
0x4006421	      0xba01000000	                              mov edx, 1	       925	buffer.c	FUNCTION_13	CALL_12
0x4006426	      0xbe3f300000	                         mov esi, 0x303f	       925	buffer.c	FUNCTION_13	CALL_12
0x400642b	          0x4889df	                            mov rdi, rbx	       925	buffer.c	FUNCTION_13	CALL_12
0x400642e	      0xe800000000	                          call 0x4006433	       925	buffer.c	FUNCTION_13	CALL_12
0x4006433	      0xb901000000	                              mov ecx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x4006438	      0xba01000000	                              mov edx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x400643d	      0xbe3f300000	                         mov esi, 0x303f	       926	buffer.c	FUNCTION_13	CALL_13
0x4006442	          0x4889df	                            mov rdi, rbx	       926	buffer.c	FUNCTION_13	CALL_13
0x4006445	      0xe800000000	                          call 0x400644a	       926	buffer.c	FUNCTION_13	CALL_13
0x400644a	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x4006451	          0x4885ff	                           test rdi, rdi	       929	buffer.c	FUNCTION_13	CALL_14
0x4006454	            0x7410	                            je 0x4006466	       929	buffer.c	FUNCTION_13	CALL_14
0x4006456	      0xe800000000	                          call 0x400645b	       929	buffer.c	FUNCTION_13	CALL_14
0x400645b	    0x48c783081700	            mov qword [rbx + 0x1708], 0 	       929	buffer.c	FUNCTION_13	CALL_14
0x4006466	        0x4883c408	                              add rsp, 8	       931	buffer.c	FUNCTION_13
0x400646a	              0x5b	                                 pop rbx	       931	buffer.c	FUNCTION_13
0x400646b	              0x5d	                                 pop rbp	       931	buffer.c	FUNCTION_13
0x400646c	              0xc3	                                     ret	       931	buffer.c	FUNCTION_13
empty_curbuf	CALL,8:IF,4:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	72
0x4007165	            0x4155	                                push r13	      1216	buffer.c	FUNCTION_18
0x4007167	            0x4154	                                push r12	      1216	buffer.c	FUNCTION_18
0x4007169	              0x55	                                push rbp	      1216	buffer.c	FUNCTION_18
0x400716a	              0x53	                                push rbx	      1216	buffer.c	FUNCTION_18
0x400716b	        0x4883ec28	                           sub rsp, 0x28	      1216	buffer.c	FUNCTION_18
0x400716f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1216	buffer.c	FUNCTION_18
0x4007178	      0x4889442418	             mov qword [rsp + 0x18], rax	      1216	buffer.c	FUNCTION_18
0x400717d	            0x31c0	                            xor eax, eax	      1216	buffer.c	FUNCTION_18
0x400717f	          0x83fa02	                              cmp edx, 2	      1221	buffer.c	FUNCTION_18	IF_1
0x4007182	            0x7526	                           jne 0x40071aa	      1221	buffer.c	FUNCTION_18	IF_1
0x4007184	      0xba05000000	                              mov edx, 5	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007189	      0xbe00000000	                              mov esi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x400718e	      0xbf00000000	                              mov edi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007193	      0xe800000000	                          call 0x4007198	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007198	          0x4889c7	                            mov rdi, rax	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x400719b	      0xe800000000	                          call 0x40071a0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x40071a0	      0xb800000000	                              mov eax, 0	      1224	buffer.c	FUNCTION_18	IF_1
0x40071a5	      0xe9af000000	                           jmp 0x4007259	      1224	buffer.c	FUNCTION_18	IF_1
0x40071aa	            0x89fd	                            mov ebp, edi	      1224	buffer.c	FUNCTION_18	IF_1
0x40071ac	          0x4189f4	                           mov r12d, esi	      1224	buffer.c	FUNCTION_18	IF_1
0x40071af	          0x4189d5	                           mov r13d, edx	      1224	buffer.c	FUNCTION_18	IF_1
0x40071b2	    0x488b1d000000	            mov rbx, qword [0x040071b9] 	      1218	buffer.c	FUNCTION_18
0x40071b9	          0x4889de	                            mov rsi, rbx	      1227	buffer.c	FUNCTION_18	CALL_3
0x40071bc	          0x4889e7	                            mov rdi, rsp	      1227	buffer.c	FUNCTION_18	CALL_3
0x40071bf	      0xe800000000	                          call 0x40071c4	      1227	buffer.c	FUNCTION_18	CALL_3
0x40071c4	            0x85ed	                           test ebp, ebp	      1228	buffer.c	FUNCTION_18	IF_2
0x40071c6	            0x740d	                            je 0x40071d5	      1228	buffer.c	FUNCTION_18	IF_2
0x40071c8	      0xbe01000000	                              mov esi, 1	      1230	buffer.c	FUNCTION_18	CALL_4
0x40071cd	          0x4889df	                            mov rdi, rbx	      1230	buffer.c	FUNCTION_18	CALL_4
0x40071d0	      0xe800000000	                          call 0x40071d5	      1230	buffer.c	FUNCTION_18	CALL_4
0x40071d5	      0xe800000000	                          call 0x40071da	      1232	buffer.c	FUNCTION_18	CALL_5
0x40071da	        0x4183fc01	                             cmp r12d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071de	          0x4519c9	                            sbb r9d, r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071e1	          0x41f7d1	                                 not r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071e4	        0x4883ec08	                              sub rsp, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071e8	    0xff3500000000	                 push qword [0x040071ee]	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071ee	        0x4183e108	                              and r9d, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071f2	    0x41b801000000	                              mov r8d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071f8	      0xb900000000	                              mov ecx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x40071fd	      0xba00000000	                              mov edx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007202	      0xbe00000000	                              mov esi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007207	      0xbf00000000	                              mov edi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x400720c	      0xe800000000	                          call 0x4007211	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007211	          0x4189c4	                           mov r12d, eax	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007214	        0x4883c410	                           add rsp, 0x10	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007218	    0x483b1d000000	            cmp rbx, qword [0x0400721f] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400721f	            0x7427	                            je 0x4007248	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007221	          0x4889e7	                            mov rdi, rsp	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007224	      0xe800000000	                          call 0x4007229	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007229	            0x85c0	                           test eax, eax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400722b	            0x741b	                            je 0x4007248	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400722d	        0x837b7800	               cmp dword [rbx + 0x78], 0	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007231	            0x7515	                           jne 0x4007248	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007233	      0xb900000000	                              mov ecx, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007238	          0x4489ea	                           mov edx, r13d	      1242	buffer.c	FUNCTION_18	CALL_8
0x400723b	          0x4889de	                            mov rsi, rbx	      1242	buffer.c	FUNCTION_18	CALL_8
0x400723e	      0xbf00000000	                              mov edi, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007243	      0xe800000000	                          call 0x4007248	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007248	          0x4489e0	                           mov eax, r12d	      1245	buffer.c	FUNCTION_18
0x400724b	            0x85ed	                           test ebp, ebp	      1243	buffer.c	FUNCTION_18	IF_4
0x400724d	            0x750a	                           jne 0x4007259	      1243	buffer.c	FUNCTION_18	IF_4
0x400724f	    0xc70500000000	               mov dword [0x04007259], 0	      1244	buffer.c	FUNCTION_18	IF_4
0x4007259	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1246	buffer.c	FUNCTION_18
0x400725e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1246	buffer.c	FUNCTION_18
0x4007267	            0x7405	                            je 0x400726e	      1246	buffer.c	FUNCTION_18
0x4007269	      0xe800000000	                          call 0x400726e	      1246	buffer.c	FUNCTION_18
0x400726e	        0x4883c428	                           add rsp, 0x28	      1246	buffer.c	FUNCTION_18
0x4007272	              0x5b	                                 pop rbx	      1246	buffer.c	FUNCTION_18
0x4007273	              0x5d	                                 pop rbp	      1246	buffer.c	FUNCTION_18
0x4007274	            0x415c	                                 pop r12	      1246	buffer.c	FUNCTION_18
0x4007276	            0x415d	                                 pop r13	      1246	buffer.c	FUNCTION_18
0x4007278	              0xc3	                                     ret	      1246	buffer.c	FUNCTION_18
buf_findsigntype_id	CALL,0:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	15
0x40062d0	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062d7	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062da	            0x7419	                            je 0x40062f5	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062dc	        0x48397008	                cmp qword [rax + 8], rsi	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062e0	            0x7508	                           jne 0x40062ea	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062e2	          0x395010	            cmp dword [rax + 0x10], edx 	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062e5	            0x7503	                           jne 0x40062ea	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062e7	            0x8b00	                    mov eax, dword [rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062e9	              0xc3	                                     ret	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x40062ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062ee	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062f1	            0x75e9	                           jne 0x40062dc	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062f3	            0xf3c3	                                     ret	      6019	buffer.c	FUNCTION_95	FOR_1
0x40062f5	      0xb800000000	                              mov eax, 0	      6023	buffer.c	FUNCTION_95
0x40062fa	              0xc3	                                     ret	      6024	buffer.c	FUNCTION_95
col_print	CALL,2:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	15
0x4001f1f	        0x4883ec08	                              sub rsp, 8	      3521	buffer.c	FUNCTION_60
0x4001f23	            0x39ca	                            cmp edx, ecx	      3522	buffer.c	FUNCTION_60	IF_1
0x4001f25	            0x7513	                           jne 0x4001f3a	      3522	buffer.c	FUNCTION_60	IF_1
0x4001f27	            0x89d1	                            mov ecx, edx	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f29	      0xba00000000	                              mov edx, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f2e	      0xb800000000	                              mov eax, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f33	      0xe800000000	                          call 0x4001f38	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f38	            0xeb14	                           jmp 0x4001f4e	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f3a	          0x4189c8	                            mov r8d, ecx	      3523	buffer.c	FUNCTION_60	CALL_1
0x4001f3d	            0x89d1	                            mov ecx, edx	      3525	buffer.c	FUNCTION_60	CALL_2
0x4001f3f	      0xba00000000	                              mov edx, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x4001f44	      0xb800000000	                              mov eax, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x4001f49	      0xe800000000	                          call 0x4001f4e	      3525	buffer.c	FUNCTION_60	CALL_2
0x4001f4e	        0x4883c408	                              add rsp, 8	      3526	buffer.c	FUNCTION_60
0x4001f52	              0xc3	                                     ret	      3526	buffer.c	FUNCTION_60
clear_wininfo	CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0:functions,0	24
0x40001a5	              0x55	                                push rbp	       938	buffer.c	FUNCTION_14
0x40001a6	              0x53	                                push rbx	       938	buffer.c	FUNCTION_14
0x40001a7	        0x4883ec08	                              sub rsp, 8	       938	buffer.c	FUNCTION_14
0x40001ab	          0x4889fd	                            mov rbp, rdi	       938	buffer.c	FUNCTION_14
0x40001ae	    0x488b9f280100	           mov rbx, qword [rdi + 0x128] 	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001b5	          0x4885db	                           test rbx, rbx	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001b8	            0x7439	                            je 0x40001f3	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001ba	          0x488b03	                    mov rax, qword [rbx]	       944	buffer.c	FUNCTION_14	WHILE_1
0x40001bd	    0x488985280100	           mov qword [rbp + 0x128], rax 	       944	buffer.c	FUNCTION_14	WHILE_1
0x40001c4	        0x837b2800	               cmp dword [rbx + 0x28], 0	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x40001c8	            0x7415	                            je 0x40001df	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x40001ca	        0x488d7b30	                   lea rdi, [rbx + 0x30]	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x40001ce	      0xe800000000	                          call 0x40001d3	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x40001d3	    0x488dbbf00100	                  lea rdi, [rbx + 0x1f0]	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40001da	      0xe800000000	                          call 0x40001df	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x40001df	          0x4889df	                            mov rdi, rbx	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x40001e2	      0xe800000000	                          call 0x40001e7	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x40001e7	    0x488b9d280100	           mov rbx, qword [rbp + 0x128] 	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001ee	          0x4885db	                           test rbx, rbx	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001f1	            0x75c7	                           jne 0x40001ba	       941	buffer.c	FUNCTION_14	WHILE_1
0x40001f3	        0x4883c408	                              add rsp, 8	       954	buffer.c	FUNCTION_14
0x40001f7	              0x5b	                                 pop rbx	       954	buffer.c	FUNCTION_14
0x40001f8	              0x5d	                                 pop rbp	       954	buffer.c	FUNCTION_14
0x40001f9	              0xc3	                                     ret	       954	buffer.c	FUNCTION_14
get_rel_pos	CALL,7:IF,4:SWITCH,0:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	102
0x4001f6f	          0x83fa02	                              cmp edx, 2	      4688	buffer.c	FUNCTION_66	IF_1
0x4001f72	     0xf8e70010000	                           jle 0x40020e8	      4688	buffer.c	FUNCTION_66	IF_1
0x4001f78	            0x4155	                                push r13	      4684	buffer.c	FUNCTION_66
0x4001f7a	            0x4154	                                push r12	      4684	buffer.c	FUNCTION_66
0x4001f7c	              0x55	                                push rbp	      4684	buffer.c	FUNCTION_66
0x4001f7d	              0x53	                                push rbx	      4684	buffer.c	FUNCTION_66
0x4001f7e	        0x4883ec08	                              sub rsp, 8	      4684	buffer.c	FUNCTION_66
0x4001f82	            0x89d3	                            mov ebx, edx	      4684	buffer.c	FUNCTION_66
0x4001f84	          0x4889f5	                            mov rbp, rsi	      4684	buffer.c	FUNCTION_66
0x4001f87	          0x4989fc	                            mov r12, rdi	      4684	buffer.c	FUNCTION_66
0x4001f8a	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      4690	buffer.c	FUNCTION_66
0x4001f8e	        0x4c8d6eff	                      lea r13, [rsi - 1]	      4690	buffer.c	FUNCTION_66
0x4001f92	      0xe800000000	                          call 0x4001f97	      4692	buffer.c	FUNCTION_66	CALL_1
0x4001f97	    0x418b94248400	            mov edx, dword [r12 + 0x84] 	      4692	buffer.c	FUNCTION_66	CALL_1
0x4001f9f	            0x29d0	                            sub eax, edx	      4692	buffer.c	FUNCTION_66	CALL_1
0x4001fa1	            0x4898	                                    cdqe	      4692	buffer.c	FUNCTION_66	CALL_1
0x4001fa3	        0x4e8d0428	                     lea r8, [rax + r13]	      4692	buffer.c	FUNCTION_66	CALL_1
0x4001fa7	    0x49837c247801	               cmp qword [r12 + 0x78], 1	      4693	buffer.c	FUNCTION_66	IF_2
0x4001fad	            0x7508	                           jne 0x4001fb7	      4693	buffer.c	FUNCTION_66	IF_2
0x4001faf	            0x85d2	                           test edx, edx	      4693	buffer.c	FUNCTION_66	IF_2
0x4001fb1	     0xf8f08010000	                            jg 0x40020bf	      4693	buffer.c	FUNCTION_66	IF_2
0x4001fb7	      0x498b442408	                mov rax, qword [r12 + 8]	      4698	buffer.c	FUNCTION_66
0x4001fbc	          0x488b38	                    mov rdi, qword [rax]	      4698	buffer.c	FUNCTION_66
0x4001fbf	    0x492bbc24e800	             sub rdi, qword [r12 + 0xe8]	      4698	buffer.c	FUNCTION_66
0x4001fc7	        0x4883c701	                              add rdi, 1	      4698	buffer.c	FUNCTION_66
0x4001fcb	          0x4885ff	                           test rdi, rdi	      4699	buffer.c	FUNCTION_66	IF_3
0x4001fce	            0x7f4b	                            jg 0x400201b	      4699	buffer.c	FUNCTION_66	IF_3
0x4001fd0	          0x83eb01	                              sub ebx, 1	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fd3	          0x4863db	                         movsxd rbx, ebx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fd6	          0x4d85c0	                             test r8, r8	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fd9	            0x7519	                           jne 0x4001ff4	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fdb	      0xba05000000	                              mov edx, 5	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fe0	      0xbe00000000	                              mov esi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fe5	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fea	      0xe800000000	                          call 0x4001fef	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001fef	          0x4889c6	                            mov rsi, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001ff2	            0xeb17	                           jmp 0x400200b	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001ff4	      0xba05000000	                              mov edx, 5	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001ff9	      0xbe00000000	                              mov esi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4001ffe	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4002003	      0xe800000000	                          call 0x4002008	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4002008	          0x4889c6	                            mov rsi, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x400200b	          0x4889da	                            mov rdx, rbx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x400200e	          0x4889ef	                            mov rdi, rbp	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4002011	      0xe800000000	                          call 0x4002016	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x4002016	      0xe9c3000000	                           jmp 0x40020de	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x400201b	          0x4d85c0	                             test r8, r8	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400201e	            0x7f2a	                            jg 0x400204a	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002020	      0xba05000000	                              mov edx, 5	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002025	      0xbe00000000	                              mov esi, 0	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400202a	      0xbf00000000	                              mov edi, 0	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400202f	      0xe800000000	                          call 0x4002034	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002034	          0x8d53ff	                      lea edx, [rbx - 1]	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002037	          0x4863d2	                         movsxd rdx, edx	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400203a	          0x4889c6	                            mov rsi, rax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400203d	          0x4889ef	                            mov rdi, rbp	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002040	      0xe800000000	                          call 0x4002045	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x4002045	      0xe994000000	                           jmp 0x40020de	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x400204a	    0x4981f840420f	                         cmp r8, 0xf4240	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002051	            0x7e2f	                           jle 0x4002082	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002053	          0x4c01c7	                             add rdi, r8	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002056	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002060	          0x4889f8	                            mov rax, rdi	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002063	          0x48f7ea	                                imul rdx	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002066	        0x488d343a	                    lea rsi, [rdx + rdi]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400206a	        0x48c1fe06	                              sar rsi, 6	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400206e	        0x48c1ff3f	                           sar rdi, 0x3f	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002072	          0x4829fe	                            sub rsi, rdi	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002075	          0x4c89c0	                             mov rax, r8	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002078	            0x4899	                                     cqo	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400207a	          0x48f7fe	                                idiv rsi	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400207d	          0x4889c1	                            mov rcx, rax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002080	            0xeb1b	                           jmp 0x400209d	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002082	        0x4b8d0480	                    lea rax, [r8 + r8*4]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002086	        0x488d0c80	                  lea rcx, [rax + rax*4]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400208a	    0x488d048d0000	                        lea rax, [rcx*4]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002092	          0x4c01c7	                             add rdi, r8	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002095	            0x4899	                                     cqo	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x4002097	          0x48f7ff	                                idiv rdi	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400209a	          0x4889c1	                            mov rcx, rax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x400209d	          0x4863f3	                         movsxd rsi, ebx	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020a0	      0xba00000000	                              mov edx, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020a5	          0x4889ef	                            mov rdi, rbp	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020a8	      0xb800000000	                              mov eax, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020ad	      0xe800000000	                          call 0x40020b2	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020b2	            0xeb2a	                           jmp 0x40020de	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x40020b4	          0x83eb01	                              sub ebx, 1	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x40020b7	          0x4863db	                         movsxd rbx, ebx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x40020ba	      0xe91cffffff	                           jmp 0x4001fdb	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x40020bf	      0x498b442408	                mov rax, qword [r12 + 8]	      4698	buffer.c	FUNCTION_66
0x40020c4	          0x488b00	                    mov rax, qword [rax]	      4699	buffer.c	FUNCTION_66	IF_3
0x40020c7	    0x492b8424e800	             sub rax, qword [r12 + 0xe8]	      4699	buffer.c	FUNCTION_66	IF_3
0x40020cf	        0x4883c001	                              add rax, 1	      4699	buffer.c	FUNCTION_66	IF_3
0x40020d3	          0x4885c0	                           test rax, rax	      4699	buffer.c	FUNCTION_66	IF_3
0x40020d6	     0xf8f44ffffff	                            jg 0x4002020	      4699	buffer.c	FUNCTION_66	IF_3
0x40020dc	            0xebd6	                           jmp 0x40020b4	      4699	buffer.c	FUNCTION_66	IF_3
0x40020de	        0x4883c408	                              add rsp, 8	      4708	buffer.c	FUNCTION_66
0x40020e2	              0x5b	                                 pop rbx	      4708	buffer.c	FUNCTION_66
0x40020e3	              0x5d	                                 pop rbp	      4708	buffer.c	FUNCTION_66
0x40020e4	            0x415c	                                 pop r12	      4708	buffer.c	FUNCTION_66
0x40020e6	            0x415d	                                 pop r13	      4708	buffer.c	FUNCTION_66
0x40020e8	            0xf3c3	                                     ret	      4708	buffer.c	FUNCTION_66
no_write_message_nobang	CALL,5:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	20
0x4000d82	        0x4883ec08	                              sub rsp, 8	      1829	buffer.c	FUNCTION_24
0x4000d86	    0x488bbf481c00	          mov rdi, qword [rdi + 0x1c48] 	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000d8d	      0xe800000000	                          call 0x4000d92	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000d92	            0x85c0	                           test eax, eax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000d94	            0x741e	                            je 0x4000db4	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000d96	      0xba05000000	                              mov edx, 5	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000d9b	      0xbe00000000	                              mov esi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000da0	      0xbf00000000	                              mov edi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000da5	      0xe800000000	                          call 0x4000daa	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000daa	          0x4889c7	                            mov rdi, rax	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000dad	      0xe800000000	                          call 0x4000db2	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000db2	            0xeb1c	                           jmp 0x4000dd0	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000db4	      0xba05000000	                              mov edx, 5	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000db9	      0xbe00000000	                              mov esi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000dbe	      0xbf00000000	                              mov edi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000dc3	      0xe800000000	                          call 0x4000dc8	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000dc8	          0x4889c7	                            mov rdi, rax	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000dcb	      0xe800000000	                          call 0x4000dd0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000dd0	        0x4883c408	                              add rsp, 8	      1836	buffer.c	FUNCTION_24
0x4000dd4	              0xc3	                                     ret	      1836	buffer.c	FUNCTION_24
handle_swap_exists	CALL,12:IF,5:SWITCH,0:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	70
0x40088e2	              0x55	                                push rbp	      1009	buffer.c	FUNCTION_16
0x40088e3	              0x53	                                push rbx	      1009	buffer.c	FUNCTION_16
0x40088e4	        0x4883ec28	                           sub rsp, 0x28	      1009	buffer.c	FUNCTION_16
0x40088e8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1009	buffer.c	FUNCTION_16
0x40088f1	      0x4889442418	             mov qword [rsp + 0x18], rax	      1009	buffer.c	FUNCTION_16
0x40088f6	            0x31c0	                            xor eax, eax	      1009	buffer.c	FUNCTION_16
0x40088f8	    0x8b0500000000	            mov eax, dword [0x040088fe] 	      1018	buffer.c	FUNCTION_16	IF_1
0x40088fe	          0x83f802	                              cmp eax, 2	      1018	buffer.c	FUNCTION_16	IF_1
0x4008901	     0xf85b3000000	                           jne 0x40089ba	      1018	buffer.c	FUNCTION_16	IF_1
0x4008907	          0x4889fb	                            mov rbx, rdi	      1018	buffer.c	FUNCTION_16	IF_1
0x400890a	    0x488b05000000	            mov rax, qword [0x04008911] 	      1014	buffer.c	FUNCTION_16
0x4008911	    0x488ba8b81500	          mov rbp, qword [rax + 0x15b8] 	      1014	buffer.c	FUNCTION_16
0x4008918	          0x4889e7	                            mov rdi, rsp	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400891b	      0xe800000000	                          call 0x4008920	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x4008920	    0xc70500000000	               mov dword [0x0400892a], 0	      1029	buffer.c	FUNCTION_16	IF_1
0x400892a	    0xc70500000000	               mov dword [0x04008934], 1	      1030	buffer.c	FUNCTION_16	IF_1
0x4008934	      0xb900000000	                              mov ecx, 0	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4008939	      0xba02000000	                              mov edx, 2	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400893e	    0x488b35000000	            mov rsi, qword [0x04008945] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4008945	    0x488b3d000000	            mov rdi, qword [0x0400894c] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400894c	      0xe800000000	                          call 0x4008951	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4008951	          0x4885db	                           test rbx, rbx	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4008954	            0x7418	                            je 0x400896e	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4008956	          0x4889df	                            mov rdi, rbx	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4008959	      0xe800000000	                          call 0x400895e	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400895e	            0x85c0	                           test eax, eax	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4008960	            0x740c	                            je 0x400896e	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4008962	          0x488b3b	                    mov rdi, qword [rbx]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x4008965	    0x483b3d000000	            cmp rdi, qword [0x0400896c] 	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400896c	            0x751c	                           jne 0x400898a	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400896e	      0xb903000000	                              mov ecx, 3	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4008973	      0xba01000000	                              mov edx, 1	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4008978	      0xbe00000000	                              mov esi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400897d	      0xbf00000000	                              mov edi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4008982	      0xe800000000	                          call 0x4008987	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x4008987	          0x4889c7	                            mov rdi, rax	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400898a	          0x4885ff	                           test rdi, rdi	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x400898d	            0x7421	                            je 0x40089b0	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x400898f	      0xe800000000	                          call 0x4008994	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x4008994	    0x488b05000000	            mov rax, qword [0x0400899b] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x400899b	    0x483ba8b81500	          cmp rbp, qword [rax + 0x15b8] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40089a2	            0x740c	                            je 0x40089b0	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40089a4	    0x488b3d000000	            mov rdi, qword [0x040089ab] 	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40089ab	      0xe800000000	                          call 0x40089b0	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40089b0	          0x4889e7	                            mov rdi, rsp	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40089b3	      0xe800000000	                          call 0x40089b8	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40089b8	            0xeb44	                           jmp 0x40089fe	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x40089ba	          0x83f803	                              cmp eax, 3	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40089bd	            0x753f	                           jne 0x40089fe	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40089bf	          0x4889e7	                            mov rdi, rsp	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40089c2	      0xe800000000	                          call 0x40089c7	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40089c7	    0xc70500000000	               mov dword [0x040089d1], 1	      1062	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40089d1	      0xe800000000	                          call 0x40089d6	      1063	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_9
0x40089d6	      0xbf00000000	                              mov edi, 0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x40089db	      0xe800000000	                          call 0x40089e0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x40089e0	    0x8b0500000000	            mov eax, dword [0x040089e6] 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40089e6	    0x890500000000	            mov dword [0x040089ec], eax 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40089ec	      0xbf00000000	                              mov edi, 0	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x40089f1	      0xe800000000	                          call 0x40089f6	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x40089f6	          0x4889e7	                            mov rdi, rsp	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x40089f9	      0xe800000000	                          call 0x40089fe	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x40089fe	    0xc70500000000	               mov dword [0x04008a08], 0	      1074	buffer.c	FUNCTION_16
0x4008a08	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1075	buffer.c	FUNCTION_16
0x4008a0d	    0x644833042528	                xor rax, qword fs:[0x28]	      1075	buffer.c	FUNCTION_16
0x4008a16	            0x7405	                            je 0x4008a1d	      1075	buffer.c	FUNCTION_16
0x4008a18	      0xe800000000	                          call 0x4008a1d	      1075	buffer.c	FUNCTION_16
0x4008a1d	        0x4883c428	                           add rsp, 0x28	      1075	buffer.c	FUNCTION_16
0x4008a21	              0x5b	                                 pop rbx	      1075	buffer.c	FUNCTION_16
0x4008a22	              0x5d	                                 pop rbp	      1075	buffer.c	FUNCTION_16
0x4008a23	              0xc3	                                     ret	      1075	buffer.c	FUNCTION_16
buflist_findfpos	CALL,2:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	20
0x40018cc	    0x488b8f280100	           mov rcx, qword [rdi + 0x128] 	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018d3	          0x4885c9	                           test rcx, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018d6	            0x7428	                            je 0x4001900	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018d8	    0x488b15000000	            mov rdx, qword [0x040018df] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018df	        0x48395110	            cmp qword [rcx + 0x10], rdx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018e3	            0x7421	                            je 0x4001906	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018e5	          0x4889c8	                            mov rax, rcx	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018e8	            0xeb06	                           jmp 0x40018f0	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018ea	        0x48395010	            cmp qword [rax + 0x10], rdx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018ee	            0x740b	                            je 0x40018fb	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40018f0	          0x488b00	                    mov rax, qword [rax]	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018f3	          0x4885c0	                           test rax, rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018f6	            0x75f2	                           jne 0x40018ea	      2855	buffer.c	FUNCTION_41	FOR_1
0x40018f8	          0x4889c8	                            mov rax, rcx	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x40018fb	        0x4883c018	                           add rax, 0x18	      2933	buffer.c	FUNCTION_43	IF_1
0x40018ff	              0xc3	                                     ret	      2933	buffer.c	FUNCTION_43	IF_1
0x4001900	      0xb800000000	                              mov eax, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4001905	              0xc3	                                     ret	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4001906	          0x4889c8	                            mov rax, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x4001909	            0xebf0	                           jmp 0x40018fb	      2855	buffer.c	FUNCTION_41	FOR_1
getaltfname	CALL,3:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	31
0x4001bd3	              0x53	                                push rbx	      3241	buffer.c	FUNCTION_51
0x4001bd4	        0x4883ec20	                           sub rsp, 0x20	      3241	buffer.c	FUNCTION_51
0x4001bd8	            0x89fb	                            mov ebx, edi	      3241	buffer.c	FUNCTION_51
0x4001bda	    0x64488b042528	                mov rax, qword fs:[0x28]	      3241	buffer.c	FUNCTION_51
0x4001be3	      0x4889442418	             mov qword [rsp + 0x18], rax	      3241	buffer.c	FUNCTION_51
0x4001be8	            0x31c0	                            xor eax, eax	      3241	buffer.c	FUNCTION_51
0x4001bea	      0x488d542410	                   lea rdx, [rsp + 0x10]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001bef	      0x488d742408	                      lea rsi, [rsp + 8]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001bf4	      0xbf00000000	                              mov edi, 0	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001bf9	      0xe800000000	                          call 0x4001bfe	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001bfe	            0x85c0	                           test eax, eax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001c00	            0x752c	                           jne 0x4001c2e	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4001c02	      0xb800000000	                              mov eax, 0	      3249	buffer.c	FUNCTION_51	IF_1
0x4001c07	            0x85db	                           test ebx, ebx	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x4001c09	            0x7428	                            je 0x4001c33	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x4001c0b	      0xba05000000	                              mov edx, 5	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c10	      0xbe00000000	                              mov esi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c15	      0xbf00000000	                              mov edi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c1a	      0xe800000000	                          call 0x4001c1f	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c1f	          0x4889c7	                            mov rdi, rax	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c22	      0xe800000000	                          call 0x4001c27	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4001c27	      0xb800000000	                              mov eax, 0	      3249	buffer.c	FUNCTION_51	IF_1
0x4001c2c	            0xeb05	                           jmp 0x4001c33	      3249	buffer.c	FUNCTION_51	IF_1
0x4001c2e	      0x488b442408	                mov rax, qword [rsp + 8]	      3251	buffer.c	FUNCTION_51
0x4001c33	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3252	buffer.c	FUNCTION_51
0x4001c38	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3252	buffer.c	FUNCTION_51
0x4001c41	            0x7405	                            je 0x4001c48	      3252	buffer.c	FUNCTION_51
0x4001c43	      0xe800000000	                          call 0x4001c48	      3252	buffer.c	FUNCTION_51
0x4001c48	        0x4883c420	                           add rsp, 0x20	      3252	buffer.c	FUNCTION_51
0x4001c4c	              0x5b	                                 pop rbx	      3252	buffer.c	FUNCTION_51
0x4001c4d	              0xc3	                                     ret	      3252	buffer.c	FUNCTION_51
set_curbuf	CALL,22:IF,10:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	137
0x4007279	            0x4157	                                push r15	      1619	buffer.c	FUNCTION_20
0x400727b	            0x4156	                                push r14	      1619	buffer.c	FUNCTION_20
0x400727d	            0x4155	                                push r13	      1619	buffer.c	FUNCTION_20
0x400727f	            0x4154	                                push r12	      1619	buffer.c	FUNCTION_20
0x4007281	              0x55	                                push rbp	      1619	buffer.c	FUNCTION_20
0x4007282	              0x53	                                push rbx	      1619	buffer.c	FUNCTION_20
0x4007283	        0x4883ec48	                           sub rsp, 0x48	      1619	buffer.c	FUNCTION_20
0x4007287	          0x4889fb	                            mov rbx, rdi	      1619	buffer.c	FUNCTION_20
0x400728a	          0x4189f4	                           mov r12d, esi	      1619	buffer.c	FUNCTION_20
0x400728d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	buffer.c	FUNCTION_20
0x4007296	      0x4889442438	             mov qword [rsp + 0x38], rax	      1619	buffer.c	FUNCTION_20
0x400729b	            0x31c0	                            xor eax, eax	      1619	buffer.c	FUNCTION_20
0x400729d	    0x488b05000000	            mov rax, qword [0x040072a4] 	      1624	buffer.c	FUNCTION_20
0x40072a4	    0x4c8bb0b81500	          mov r14, qword [rax + 0x15b8] 	      1624	buffer.c	FUNCTION_20
0x40072ab	      0xe800000000	                          call 0x40072b0	      1629	buffer.c	FUNCTION_20	CALL_1
0x40072b0	    0x833d00000000	               cmp dword [0x040072b7], 0	      1630	buffer.c	FUNCTION_20	IF_1
0x40072b7	            0x751a	                           jne 0x40072d3	      1630	buffer.c	FUNCTION_20	IF_1
0x40072b9	    0x488b05000000	            mov rax, qword [0x040072c0] 	      1631	buffer.c	FUNCTION_20	IF_1
0x40072c0	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      1631	buffer.c	FUNCTION_20	IF_1
0x40072c6	    0x488b05000000	            mov rax, qword [0x040072cd] 	      1631	buffer.c	FUNCTION_20	IF_1
0x40072cd	    0x899078010000	            mov dword [rax + 0x178], edx	      1631	buffer.c	FUNCTION_20	IF_1
0x40072d3	    0x488b3d000000	            mov rdi, qword [0x040072da] 	      1632	buffer.c	FUNCTION_20	CALL_2
0x40072da	      0xe800000000	                          call 0x40072df	      1632	buffer.c	FUNCTION_20	CALL_2
0x40072df	    0xc70500000000	               mov dword [0x040072e9], 0	      1635	buffer.c	FUNCTION_20
0x40072e9	    0x488b2d000000	            mov rbp, qword [0x040072f0] 	      1639	buffer.c	FUNCTION_20
0x40072f0	          0x4889ee	                            mov rsi, rbp	      1640	buffer.c	FUNCTION_20	CALL_3
0x40072f3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1640	buffer.c	FUNCTION_20	CALL_3
0x40072f8	      0xe800000000	                          call 0x40072fd	      1640	buffer.c	FUNCTION_20	CALL_3
0x40072fd	          0x4889de	                            mov rsi, rbx	      1641	buffer.c	FUNCTION_20	CALL_4
0x4007300	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1641	buffer.c	FUNCTION_20	CALL_4
0x4007305	      0xe800000000	                          call 0x400730a	      1641	buffer.c	FUNCTION_20	CALL_4
0x400730a	    0x4c8b05000000	              mov r8, qword [0x04007311]	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007311	      0xb900000000	                              mov ecx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007316	      0xba00000000	                              mov edx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400731b	      0xbe00000000	                              mov esi, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007320	      0xbf06000000	                              mov edi, 6	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007325	      0xe800000000	                          call 0x400732a	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400732a	            0x85c0	                           test eax, eax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400732c	            0x7431	                            je 0x400735f	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400732e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x4007333	      0xe800000000	                          call 0x4007338	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x4007338	            0x85c0	                           test eax, eax	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x400733a	     0xf8402010000	                            je 0x4007442	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x4007340	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x4007345	      0xe800000000	                          call 0x400734a	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x400734a	            0x85c0	                           test eax, eax	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x400734c	     0xf84f0000000	                            je 0x4007442	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x4007352	      0xe800000000	                          call 0x4007357	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007357	            0x85c0	                           test eax, eax	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007359	     0xf85e3000000	                           jne 0x4007442	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x400735f	    0x488b3d000000	            mov rdi, qword [0x04007366] 	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4007366	        0x483b6f08	                cmp rbp, qword [rdi + 8]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x400736a	            0x7505	                           jne 0x4007371	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x400736c	      0xe800000000	                          call 0x4007371	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x4007371	      0x458d6c24fe	                     lea r13d, [r12 - 2]	      1622	buffer.c	FUNCTION_20
0x4007376	        0x4183fd02	                             cmp r13d, 2	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x400737a	            0x770d	                            ja 0x4007389	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x400737c	      0xbe00000000	                              mov esi, 0	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007381	          0x4889ef	                            mov rdi, rbp	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007384	      0xe800000000	                          call 0x4007389	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007389	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400738e	      0xe800000000	                          call 0x4007393	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007393	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007395	     0xf84a7000000	                            je 0x4007442	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400739b	      0xe800000000	                          call 0x40073a0	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x40073a0	          0x4189c7	                           mov r15d, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x40073a3	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x40073a5	     0xf8597000000	                           jne 0x4007442	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x40073ab	    0x488b05000000	            mov rax, qword [0x040073b2] 	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x40073b2	      0x4889442408	                mov qword [rsp + 8], rax	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x40073b7	    0x483b2d000000	            cmp rbp, qword [0x040073be] 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x40073be	            0x750a	                           jne 0x40073ca	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x40073c0	      0xbf00000000	                              mov edi, 0	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40073c5	      0xe800000000	                          call 0x40073ca	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40073ca	        0x4183fd02	                             cmp r13d, 2	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40073ce	            0x762a	                           jbe 0x40073fa	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40073d0	          0x4585e4	                         test r12d, r12d	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073d3	            0x7528	                           jne 0x40073fd	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073d5	          0x4889ef	                            mov rdi, rbp	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40073d8	      0xe800000000	                          call 0x40073dd	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40073dd	          0x4189c4	                           mov r12d, eax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40073e0	            0x85c0	                           test eax, eax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40073e2	            0x7519	                           jne 0x40073fd	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x40073e4	          0x4889ef	                            mov rdi, rbp	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073e7	      0xe800000000	                          call 0x40073ec	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073ec	            0x85c0	                           test eax, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073ee	    0x41bf02000000	                             mov r15d, 2	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073f4	        0x450f45fc	                       cmovne r15d, r12d	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073f8	            0xeb03	                           jmp 0x40073fd	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40073fa	          0x4589e7	                          mov r15d, r12d	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40073fd	    0x488b3d000000	            mov rdi, qword [0x04007404] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007404	        0x483b6f08	                cmp rbp, qword [rdi + 8]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007408	      0xb800000000	                              mov eax, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400740d	        0x480f45f8	                         cmovne rdi, rax	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007411	      0xb900000000	                              mov ecx, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007416	          0x4489fa	                           mov edx, r15d	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007419	          0x4889ee	                            mov rsi, rbp	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400741c	      0xe800000000	                          call 0x4007421	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007421	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007426	    0x4c3b3d000000	            cmp r15, qword [0x0400742d] 	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400742d	            0x7413	                            je 0x4007442	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400742f	          0x4c89ff	                            mov rdi, r15	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007432	      0xe800000000	                          call 0x4007437	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007437	            0x85c0	                           test eax, eax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007439	            0x7407	                            je 0x4007442	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x400743b	    0x4c893d000000	            mov qword [0x04007442], r15 	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x4007442	          0x4889df	                            mov rdi, rbx	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4007445	      0xe800000000	                          call 0x400744a	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400744a	            0x85c0	                           test eax, eax	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400744c	            0x7412	                            je 0x4007460	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x400744e	    0x483b1d000000	            cmp rbx, qword [0x04007455] 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4007455	            0x7409	                            je 0x4007460	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4007457	      0xe800000000	                          call 0x400745c	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400745c	            0x85c0	                           test eax, eax	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400745e	            0x740e	                            je 0x400746e	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4007460	    0x488b05000000	            mov rax, qword [0x04007467] 	      1684	buffer.c	FUNCTION_20	IF_9
0x4007467	      0x4883780800	                  cmp qword [rax + 8], 0	      1684	buffer.c	FUNCTION_20	IF_9
0x400746c	            0x7524	                           jne 0x4007492	      1684	buffer.c	FUNCTION_20	IF_9
0x400746e	          0x4889df	                            mov rdi, rbx	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4007471	      0xe800000000	                          call 0x4007476	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4007476	    0x488b05000000	            mov rax, qword [0x0400747d] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x400747d	    0x4c3bb0b81500	          cmp r14, qword [rax + 0x15b8] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007484	            0x740c	                            je 0x4007492	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007486	    0x488b3d000000	            mov rdi, qword [0x0400748d] 	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x400748d	      0xe800000000	                          call 0x4007492	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4007492	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1692	buffer.c	FUNCTION_20
0x4007497	    0x644833042528	                xor rax, qword fs:[0x28]	      1692	buffer.c	FUNCTION_20
0x40074a0	            0x7405	                            je 0x40074a7	      1692	buffer.c	FUNCTION_20
0x40074a2	      0xe800000000	                          call 0x40074a7	      1692	buffer.c	FUNCTION_20
0x40074a7	        0x4883c448	                           add rsp, 0x48	      1692	buffer.c	FUNCTION_20
0x40074ab	              0x5b	                                 pop rbx	      1692	buffer.c	FUNCTION_20
0x40074ac	              0x5d	                                 pop rbp	      1692	buffer.c	FUNCTION_20
0x40074ad	            0x415c	                                 pop r12	      1692	buffer.c	FUNCTION_20
0x40074af	            0x415d	                                 pop r13	      1692	buffer.c	FUNCTION_20
0x40074b1	            0x415e	                                 pop r14	      1692	buffer.c	FUNCTION_20
0x40074b3	            0x415f	                                 pop r15	      1692	buffer.c	FUNCTION_20
0x40074b5	              0xc3	                                     ret	      1692	buffer.c	FUNCTION_20
sign_list_placed	CALL,13:IF,3:SWITCH,0:ELSE,1:WHILE,1:FOR,1:DO,0:functions,0	99
0x400911e	            0x4157	                                push r15	      6088	buffer.c	FUNCTION_99
0x4009120	            0x4156	                                push r14	      6088	buffer.c	FUNCTION_99
0x4009122	            0x4155	                                push r13	      6088	buffer.c	FUNCTION_99
0x4009124	            0x4154	                                push r12	      6088	buffer.c	FUNCTION_99
0x4009126	              0x55	                                push rbp	      6088	buffer.c	FUNCTION_99
0x4009127	              0x53	                                push rbx	      6088	buffer.c	FUNCTION_99
0x4009128	    0x4881ec182000	                         sub rsp, 0x2018	      6088	buffer.c	FUNCTION_99
0x400912f	          0x4989ff	                            mov r15, rdi	      6088	buffer.c	FUNCTION_99
0x4009132	    0x64488b042528	                mov rax, qword fs:[0x28]	      6088	buffer.c	FUNCTION_99
0x400913b	    0x488984240820	          mov qword [rsp + 0x2008], rax 	      6088	buffer.c	FUNCTION_99
0x4009143	            0x31c0	                            xor eax, eax	      6088	buffer.c	FUNCTION_99
0x4009145	      0xba05000000	                              mov edx, 5	      6093	buffer.c	FUNCTION_99	CALL_2
0x400914a	      0xbe00000000	                              mov esi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0x400914f	      0xbf00000000	                              mov edi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009154	      0xe800000000	                          call 0x4009159	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009159	          0x4889c7	                            mov rdi, rax	      6093	buffer.c	FUNCTION_99	CALL_2
0x400915c	      0xe800000000	                          call 0x4009161	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009161	      0xbf0a000000	                            mov edi, 0xa	      6094	buffer.c	FUNCTION_99	CALL_3
0x4009166	      0xe800000000	                          call 0x400916b	      6094	buffer.c	FUNCTION_99	CALL_3
0x400916b	          0x4d89fe	                            mov r14, r15	      6098	buffer.c	FUNCTION_99	ELSE_1
0x400916e	          0x4d85ff	                           test r15, r15	      6095	buffer.c	FUNCTION_99	IF_1
0x4009171	            0x7510	                           jne 0x4009183	      6095	buffer.c	FUNCTION_99	IF_1
0x4009173	    0x4c8b35000000	            mov r14, qword [0x0400917a] 	      6096	buffer.c	FUNCTION_99	IF_1
0x400917a	          0x4d85f6	                           test r14, r14	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400917d	     0xf8402010000	                            je 0x4009285	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009183	    0x8b0500000000	            mov eax, dword [0x04009189] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009189	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400918b	     0xf85f4000000	                           jne 0x4009285	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009191	    0x4983be201c00	             cmp qword [r14 + 0x1c20], 0	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x4009199	     0xf84ca000000	                            je 0x4009269	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400919f	    0x498b9e980000	            mov rbx, qword [r14 + 0x98] 	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091a6	      0xba05000000	                              mov edx, 5	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091ab	      0xbe00000000	                              mov esi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091b0	      0xbf00000000	                              mov edi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091b5	      0xe800000000	                          call 0x40091ba	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091ba	          0x4889d9	                            mov rcx, rbx	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091bd	          0x4889c2	                            mov rdx, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091c0	      0xbe00200000	                         mov esi, 0x2000	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091c5	          0x4889e7	                            mov rdi, rsp	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091c8	      0xb800000000	                              mov eax, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091cd	      0xe800000000	                          call 0x40091d2	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x40091d2	    0x8b3500000000	            mov esi, dword [0x040091d8] 	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x40091d8	          0x4889e7	                            mov rdi, rsp	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x40091db	      0xe800000000	                          call 0x40091e0	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x40091e0	      0xbf0a000000	                            mov edi, 0xa	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x40091e5	      0xe800000000	                          call 0x40091ea	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x40091ea	    0x498b9e201c00	          mov rbx, qword [r14 + 0x1c20] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x40091f1	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x40091f4	            0x7473	                            je 0x4009269	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x40091f6	    0x8b0500000000	            mov eax, dword [0x040091fc] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x40091fc	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x40091fe	            0x7569	                           jne 0x4009269	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009200	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009203	      0xe800000000	                          call 0x4009208	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009208	          0x4989c5	                            mov r13, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400920b	          0x448b23	                   mov r12d, dword [rbx]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400920e	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0x4009212	      0xba05000000	                              mov edx, 5	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009217	      0xbe00000000	                              mov esi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400921c	      0xbf00000000	                              mov edi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009221	      0xe800000000	                          call 0x4009226	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009226	          0x4d89e9	                             mov r9, r13	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009229	          0x4589e0	                           mov r8d, r12d	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400922c	          0x4889e9	                            mov rcx, rbp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400922f	          0x4889c2	                            mov rdx, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009232	      0xbe00200000	                         mov esi, 0x2000	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009237	          0x4889e7	                            mov rdi, rsp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400923a	      0xb800000000	                              mov eax, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400923f	      0xe800000000	                          call 0x4009244	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009244	          0x4889e7	                            mov rdi, rsp	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x4009247	      0xe800000000	                          call 0x400924c	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400924c	      0xbf0a000000	                            mov edi, 0xa	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x4009251	      0xe800000000	                          call 0x4009256	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x4009256	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400925a	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400925d	            0x740a	                            je 0x4009269	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400925f	    0x8b0500000000	            mov eax, dword [0x04009265] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009265	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009267	            0x7497	                            je 0x4009200	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009269	          0x4d85ff	                           test r15, r15	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400926c	            0x7517	                           jne 0x4009285	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400926e	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009272	          0x4d85f6	                           test r14, r14	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009275	            0x740e	                            je 0x4009285	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009277	    0x8b0500000000	            mov eax, dword [0x0400927d] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400927d	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400927f	     0xf840cffffff	                            je 0x4009191	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009285	    0x488b84240820	          mov rax, qword [rsp + 0x2008] 	      6118	buffer.c	FUNCTION_99
0x400928d	    0x644833042528	                xor rax, qword fs:[0x28]	      6118	buffer.c	FUNCTION_99
0x4009296	            0x7405	                            je 0x400929d	      6118	buffer.c	FUNCTION_99
0x4009298	      0xe800000000	                          call 0x400929d	      6118	buffer.c	FUNCTION_99
0x400929d	    0x4881c4182000	                         add rsp, 0x2018	      6118	buffer.c	FUNCTION_99
0x40092a4	              0x5b	                                 pop rbx	      6118	buffer.c	FUNCTION_99
0x40092a5	              0x5d	                                 pop rbp	      6118	buffer.c	FUNCTION_99
0x40092a6	            0x415c	                                 pop r12	      6118	buffer.c	FUNCTION_99
0x40092a8	            0x415d	                                 pop r13	      6118	buffer.c	FUNCTION_99
0x40092aa	            0x415e	                                 pop r14	      6118	buffer.c	FUNCTION_99
0x40092ac	            0x415f	                                 pop r15	      6118	buffer.c	FUNCTION_99
0x40092ae	              0xc3	                                     ret	      6118	buffer.c	FUNCTION_99
bufref_valid	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	19
0x4000a1e	      0xb801000000	                              mov eax, 1	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a23	    0x8b1500000000	            mov edx, dword [0x04000a29] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a29	          0x39570c	              cmp dword [rdi + 0xc], edx	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a2c	            0x7425	                            je 0x4000a53	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a2e	              0x55	                                push rbp	       375	buffer.c	FUNCTION_4
0x4000a2f	              0x53	                                push rbx	       375	buffer.c	FUNCTION_4
0x4000a30	          0x4889fb	                            mov rbx, rdi	       375	buffer.c	FUNCTION_4
0x4000a33	          0x488b2f	                    mov rbp, qword [rdi]	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a36	          0x4889ef	                            mov rdi, rbp	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a39	      0xe800000000	                          call 0x4000a3e	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a3e	            0x85c0	                           test eax, eax	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a40	            0x740f	                            je 0x4000a51	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a42	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a48	          0x394308	                cmp dword [rbx + 8], eax	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a4b	           0xf94c0	                                 sete al	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a4e	           0xfb6c0	                           movzx eax, al	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a51	              0x5b	                                 pop rbx	       379	buffer.c	FUNCTION_4
0x4000a52	              0x5d	                                 pop rbp	       379	buffer.c	FUNCTION_4
0x4000a53	            0xf3c3	                                     ret	       379	buffer.c	FUNCTION_4
ti_change	CALL,3:IF,2:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	37
0x4000523	            0x4154	                                push r12	      3763	buffer.c	FUNCTION_62
0x4000525	              0x55	                                push rbp	      3763	buffer.c	FUNCTION_62
0x4000526	              0x53	                                push rbx	      3763	buffer.c	FUNCTION_62
0x4000527	          0x4889fb	                            mov rbx, rdi	      3763	buffer.c	FUNCTION_62
0x400052a	          0x4989f4	                            mov r12, rsi	      3763	buffer.c	FUNCTION_62
0x400052d	          0x488b2e	                    mov rbp, qword [rsi]	      3764	buffer.c	FUNCTION_62	IF_1
0x4000530	          0x4885ff	                           test rdi, rdi	      3764	buffer.c	FUNCTION_62	IF_1
0x4000533	           0xf94c2	                                 sete dl	      3764	buffer.c	FUNCTION_62	IF_1
0x4000536	          0x4885ed	                           test rbp, rbp	      3764	buffer.c	FUNCTION_62	IF_1
0x4000539	           0xf94c0	                                 sete al	      3764	buffer.c	FUNCTION_62	IF_1
0x400053c	            0x38c2	                              cmp dl, al	      3764	buffer.c	FUNCTION_62	IF_1
0x400053e	            0x7516	                           jne 0x4000556	      3764	buffer.c	FUNCTION_62	IF_1
0x4000540	          0x4885ed	                           test rbp, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000543	            0x7440	                            je 0x4000585	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000545	          0x4885ff	                           test rdi, rdi	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000548	            0x743b	                            je 0x4000585	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400054a	          0x4889ee	                            mov rsi, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400054d	      0xe800000000	                          call 0x4000552	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000552	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000554	            0x7434	                            je 0x400058a	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000556	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4000559	      0xe800000000	                          call 0x400055e	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x400055e	          0x4885db	                           test rbx, rbx	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x4000561	            0x750f	                           jne 0x4000572	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x4000563	    0x49c704240000	                      mov qword [r12], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x400056b	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x4000570	            0xeb18	                           jmp 0x400058a	      3772	buffer.c	FUNCTION_62	IF_1
0x4000572	          0x4889df	                            mov rdi, rbx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4000575	      0xe800000000	                          call 0x400057a	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400057a	        0x49890424	                    mov qword [r12], rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400057e	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x4000583	            0xeb05	                           jmp 0x400058a	      3772	buffer.c	FUNCTION_62	IF_1
0x4000585	      0xb800000000	                              mov eax, 0	      3774	buffer.c	FUNCTION_62
0x400058a	              0x5b	                                 pop rbx	      3775	buffer.c	FUNCTION_62
0x400058b	              0x5d	                                 pop rbp	      3775	buffer.c	FUNCTION_62
0x400058c	            0x415c	                                 pop r12	      3775	buffer.c	FUNCTION_62
0x400058e	              0xc3	                                     ret	      3775	buffer.c	FUNCTION_62
curbuf_reusable	CALL,2:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	27
0x4000dd5	        0x4883ec08	                              sub rsp, 8	      1850	buffer.c	FUNCTION_25
0x4000dd9	    0x488b15000000	            mov rdx, qword [0x04000de0] 	      1851	buffer.c	FUNCTION_25
0x4000de0	          0x4885d2	                           test rdx, rdx	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000de3	            0x7448	                            je 0x4000e2d	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000de5	      0xb800000000	                              mov eax, 0	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000dea	    0x4883ba880000	               cmp qword [rdx + 0x88], 0	      1852	buffer.c	FUNCTION_25
0x4000df2	            0x753e	                           jne 0x4000e32	      1852	buffer.c	FUNCTION_25
0x4000df4	        0x837a7801	               cmp dword [rdx + 0x78], 1	      1853	buffer.c	FUNCTION_25
0x4000df8	            0x7f38	                            jg 0x4000e32	      1853	buffer.c	FUNCTION_25
0x4000dfa	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000dff	            0x741d	                            je 0x4000e1e	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e01	        0x48833a01	                      cmp qword [rdx], 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e05	            0x752b	                           jne 0x4000e32	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e07	      0xbf01000000	                              mov edi, 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e0c	      0xe800000000	                          call 0x4000e11	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e11	          0x4889c2	                            mov rdx, rax	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e14	      0xb800000000	                              mov eax, 0	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e19	          0x803a00	                       cmp byte [rdx], 0	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e1c	            0x7514	                           jne 0x4000e32	      1854	buffer.c	FUNCTION_25	CALL_1
0x4000e1e	      0xe800000000	                          call 0x4000e23	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e23	            0x85c0	                           test eax, eax	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e25	           0xf94c0	                                 sete al	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e28	           0xfb6c0	                           movzx eax, al	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e2b	            0xeb05	                           jmp 0x4000e32	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e2d	      0xb800000000	                              mov eax, 0	      1855	buffer.c	FUNCTION_25	CALL_2
0x4000e32	        0x4883c408	                              add rsp, 8	      1856	buffer.c	FUNCTION_25
0x4000e36	              0xc3	                                     ret	      1856	buffer.c	FUNCTION_25
buflist_nr2name	CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	23
0x400172d	              0x55	                                push rbp	      2735	buffer.c	FUNCTION_38
0x400172e	              0x53	                                push rbx	      2735	buffer.c	FUNCTION_38
0x400172f	        0x4883ec08	                              sub rsp, 8	      2735	buffer.c	FUNCTION_38
0x4001733	            0x89f5	                            mov ebp, esi	      2735	buffer.c	FUNCTION_38
0x4001735	            0x89d3	                            mov ebx, edx	      2735	buffer.c	FUNCTION_38
0x4001737	      0xe800000000	                          call 0x400173c	      2738	buffer.c	FUNCTION_38	CALL_1
0x400173c	          0x4885c0	                           test rax, rax	      2739	buffer.c	FUNCTION_38	IF_1
0x400173f	            0x7426	                            je 0x4001767	      2739	buffer.c	FUNCTION_38	IF_1
0x4001741	            0x85ed	                           test ebp, ebp	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001743	            0x7409	                            je 0x400174e	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001745	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x400174c	            0xeb07	                           jmp 0x4001755	      2741	buffer.c	FUNCTION_38	CALL_2
0x400174e	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001755	            0x85db	                           test ebx, ebx	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001757	      0xbf00000000	                              mov edi, 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x400175c	        0x480f45f8	                         cmovne rdi, rax	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001760	      0xe800000000	                          call 0x4001765	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001765	            0xeb05	                           jmp 0x400176c	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001767	      0xb800000000	                              mov eax, 0	      2740	buffer.c	FUNCTION_38	IF_1
0x400176c	        0x4883c408	                              add rsp, 8	      2743	buffer.c	FUNCTION_38
0x4001770	              0x5b	                                 pop rbx	      2743	buffer.c	FUNCTION_38
0x4001771	              0x5d	                                 pop rbp	      2743	buffer.c	FUNCTION_38
0x4001772	              0xc3	                                     ret	      2743	buffer.c	FUNCTION_38
buf_signcount	CALL,1:IF,2:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	24
0x40062fb	            0x4154	                                push r12	      6031	buffer.c	FUNCTION_96
0x40062fd	              0x55	                                push rbp	      6031	buffer.c	FUNCTION_96
0x40062fe	              0x53	                                push rbx	      6031	buffer.c	FUNCTION_96
0x40062ff	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006306	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006309	            0x742a	                            je 0x4006335	      6035	buffer.c	FUNCTION_96	FOR_1
0x400630b	          0x4889f5	                            mov rbp, rsi	      6035	buffer.c	FUNCTION_96	FOR_1
0x400630e	    0x41bc00000000	                             mov r12d, 0	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006314	        0x48396b08	                cmp qword [rbx + 8], rbp	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x4006318	            0x7510	                           jne 0x400632a	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400631a	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400631d	      0xe800000000	                          call 0x4006322	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x4006322	        0x4883f801	                              cmp rax, 1	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4006326	        0x4183dcff	            sbb r12d, 0xffffffffffffffff	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x400632a	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400632e	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006331	            0x75e1	                           jne 0x4006314	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006333	            0xeb06	                           jmp 0x400633b	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006335	    0x41bc00000000	                             mov r12d, 0	      6033	buffer.c	FUNCTION_96
0x400633b	          0x4489e0	                           mov eax, r12d	      6041	buffer.c	FUNCTION_96
0x400633e	              0x5b	                                 pop rbx	      6041	buffer.c	FUNCTION_96
0x400633f	              0x5d	                                 pop rbp	      6041	buffer.c	FUNCTION_96
0x4006340	            0x415c	                                 pop r12	      6041	buffer.c	FUNCTION_96
0x4006342	              0xc3	                                     ret	      6041	buffer.c	FUNCTION_96
switch_to_win_for_buf	CALL,5:IF,2:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	46
0x4005ff1	            0x4155	                                push r13	      5730	buffer.c	FUNCTION_85
0x4005ff3	            0x4154	                                push r12	      5730	buffer.c	FUNCTION_85
0x4005ff5	              0x55	                                push rbp	      5730	buffer.c	FUNCTION_85
0x4005ff6	              0x53	                                push rbx	      5730	buffer.c	FUNCTION_85
0x4005ff7	        0x4883ec28	                           sub rsp, 0x28	      5730	buffer.c	FUNCTION_85
0x4005ffb	          0x4889fb	                            mov rbx, rdi	      5730	buffer.c	FUNCTION_85
0x4005ffe	          0x4889f5	                            mov rbp, rsi	      5730	buffer.c	FUNCTION_85
0x4006001	          0x4989d4	                            mov r12, rdx	      5730	buffer.c	FUNCTION_85
0x4006004	          0x4989cd	                            mov r13, rcx	      5730	buffer.c	FUNCTION_85
0x4006007	    0x64488b042528	                mov rax, qword fs:[0x28]	      5730	buffer.c	FUNCTION_85
0x4006010	      0x4889442418	             mov qword [rsp + 0x18], rax	      5730	buffer.c	FUNCTION_85
0x4006015	            0x31c0	                            xor eax, eax	      5730	buffer.c	FUNCTION_85
0x4006017	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400601c	      0x488d742408	                      lea rsi, [rsp + 8]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x4006021	      0xe800000000	                          call 0x4006026	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x4006026	            0x85c0	                           test eax, eax	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x4006028	            0x750d	                           jne 0x4006037	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0x400602a	          0x4889de	                            mov rsi, rbx	      5735	buffer.c	FUNCTION_85	CALL_2
0x400602d	          0x4c89ef	                            mov rdi, r13	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006030	      0xe800000000	                          call 0x4006035	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006035	            0xeb3c	                           jmp 0x4006073	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006037	    0x41b801000000	                              mov r8d, 1	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400603d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006042	      0x488b542408	                mov rdx, qword [rsp + 8]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006047	          0x4c89e6	                            mov rsi, r12	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400604a	          0x4889ef	                            mov rdi, rbp	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400604d	      0xe800000000	                          call 0x4006052	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006052	            0x85c0	                           test eax, eax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006054	            0x751d	                           jne 0x4006073	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006056	      0xba01000000	                              mov edx, 1	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400605b	        0x498b3424	                    mov rsi, qword [r12]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400605f	        0x488b7d00	                    mov rdi, qword [rbp]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x4006063	      0xe800000000	                          call 0x4006068	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x4006068	          0x4889de	                            mov rsi, rbx	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400606b	          0x4c89ef	                            mov rdi, r13	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400606e	      0xe800000000	                          call 0x4006073	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x4006073	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5741	buffer.c	FUNCTION_85
0x4006078	    0x644833042528	                xor rax, qword fs:[0x28]	      5741	buffer.c	FUNCTION_85
0x4006081	            0x7405	                            je 0x4006088	      5741	buffer.c	FUNCTION_85
0x4006083	      0xe800000000	                          call 0x4006088	      5741	buffer.c	FUNCTION_85
0x4006088	        0x4883c428	                           add rsp, 0x28	      5741	buffer.c	FUNCTION_85
0x400608c	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x400608d	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x400608e	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x4006090	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x4006092	              0xc3	                                     ret	      5741	buffer.c	FUNCTION_85
buflist_name_nr	CALL,2:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	23
0x4001b8a	              0x55	                                push rbp	      3058	buffer.c	FUNCTION_46
0x4001b8b	              0x53	                                push rbx	      3058	buffer.c	FUNCTION_46
0x4001b8c	        0x4883ec08	                              sub rsp, 8	      3058	buffer.c	FUNCTION_46
0x4001b90	          0x4889f5	                            mov rbp, rsi	      3058	buffer.c	FUNCTION_46
0x4001b93	          0x4889d3	                            mov rbx, rdx	      3058	buffer.c	FUNCTION_46
0x4001b96	      0xe800000000	                          call 0x4001b9b	      3061	buffer.c	FUNCTION_46	CALL_1
0x4001b9b	          0x4885c0	                           test rax, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x4001b9e	            0x7427	                            je 0x4001bc7	      3062	buffer.c	FUNCTION_46	IF_1
0x4001ba0	          0x4889c7	                            mov rdi, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x4001ba3	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3062	buffer.c	FUNCTION_46	IF_1
0x4001baa	      0xb800000000	                              mov eax, 0	      3063	buffer.c	FUNCTION_46	IF_1
0x4001baf	          0x4885d2	                           test rdx, rdx	      3062	buffer.c	FUNCTION_46	IF_1
0x4001bb2	            0x7418	                            je 0x4001bcc	      3062	buffer.c	FUNCTION_46	IF_1
0x4001bb4	        0x48895500	                    mov qword [rbp], rdx	      3065	buffer.c	FUNCTION_46
0x4001bb8	      0xe800000000	                          call 0x4001bbd	      3066	buffer.c	FUNCTION_46	CALL_2
0x4001bbd	          0x488903	                    mov qword [rbx], rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x4001bc0	      0xb801000000	                              mov eax, 1	      3068	buffer.c	FUNCTION_46
0x4001bc5	            0xeb05	                           jmp 0x4001bcc	      3068	buffer.c	FUNCTION_46
0x4001bc7	      0xb800000000	                              mov eax, 0	      3063	buffer.c	FUNCTION_46	IF_1
0x4001bcc	        0x4883c408	                              add rsp, 8	      3069	buffer.c	FUNCTION_46
0x4001bd0	              0x5b	                                 pop rbx	      3069	buffer.c	FUNCTION_46
0x4001bd1	              0x5d	                                 pop rbp	      3069	buffer.c	FUNCTION_46
0x4001bd2	              0xc3	                                     ret	      3069	buffer.c	FUNCTION_46
buf_freeall	CALL,21:IF,12:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	144
0x4000ab5	            0x4157	                                push r15	       720	buffer.c	FUNCTION_10
0x4000ab7	            0x4156	                                push r14	       720	buffer.c	FUNCTION_10
0x4000ab9	            0x4155	                                push r13	       720	buffer.c	FUNCTION_10
0x4000abb	            0x4154	                                push r12	       720	buffer.c	FUNCTION_10
0x4000abd	              0x55	                                push rbp	       720	buffer.c	FUNCTION_10
0x4000abe	              0x53	                                push rbx	       720	buffer.c	FUNCTION_10
0x4000abf	        0x4883ec28	                           sub rsp, 0x28	       720	buffer.c	FUNCTION_10
0x4000ac3	          0x4889fd	                            mov rbp, rdi	       720	buffer.c	FUNCTION_10
0x4000ac6	          0x4189f5	                           mov r13d, esi	       720	buffer.c	FUNCTION_10
0x4000ac9	    0x64488b042528	                mov rax, qword fs:[0x28]	       720	buffer.c	FUNCTION_10
0x4000ad2	      0x4889442418	             mov qword [rsp + 0x18], rax	       720	buffer.c	FUNCTION_10
0x4000ad7	            0x31c0	                            xor eax, eax	       720	buffer.c	FUNCTION_10
0x4000ad9	    0x4c8b35000000	            mov r14, qword [0x04000ae0] 	       721	buffer.c	FUNCTION_10
0x4000ae0	    0x488b1d000000	            mov rbx, qword [0x04000ae7] 	       723	buffer.c	FUNCTION_10
0x4000ae7	          0x4885db	                           test rbx, rbx	       723	buffer.c	FUNCTION_10
0x4000aea	            0x740e	                            je 0x4000afa	       723	buffer.c	FUNCTION_10
0x4000aec	        0x48397b08	                cmp qword [rbx + 8], rdi	       723	buffer.c	FUNCTION_10
0x4000af0	        0x410f94c4	                               sete r12b	       723	buffer.c	FUNCTION_10
0x4000af4	        0x450fb6e4	                        movzx r12d, r12b	       723	buffer.c	FUNCTION_10
0x4000af8	            0xeb06	                           jmp 0x4000b00	       723	buffer.c	FUNCTION_10
0x4000afa	    0x41bc00000000	                             mov r12d, 0	       723	buffer.c	FUNCTION_10
0x4000b00	    0x4c8b3d000000	            mov r15, qword [0x04000b07] 	       725	buffer.c	FUNCTION_10
0x4000b07	    0x838580000000	               add dword [rbp + 0x80], 1	       728	buffer.c	FUNCTION_10
0x4000b0e	          0x4889ee	                            mov rsi, rbp	       729	buffer.c	FUNCTION_10	CALL_1
0x4000b11	          0x4889e7	                            mov rdi, rsp	       729	buffer.c	FUNCTION_10	CALL_1
0x4000b14	      0xe800000000	                          call 0x4000b19	       729	buffer.c	FUNCTION_10	CALL_1
0x4000b19	      0x48837d0800	                  cmp qword [rbp + 8], 0	       730	buffer.c	FUNCTION_10	IF_1
0x4000b1e	            0x7430	                            je 0x4000b50	       730	buffer.c	FUNCTION_10	IF_1
0x4000b20	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b27	          0x4989e8	                             mov r8, rbp	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b2a	      0xb900000000	                              mov ecx, 0	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b2f	          0x4889f2	                            mov rdx, rsi	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b32	      0xbf0c000000	                            mov edi, 0xc	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b37	      0xe800000000	                          call 0x4000b3c	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b3c	            0x85c0	                           test eax, eax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b3e	            0x7410	                            je 0x4000b50	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000b40	          0x4889e7	                            mov rdi, rsp	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4000b43	      0xe800000000	                          call 0x4000b48	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4000b48	            0x85c0	                           test eax, eax	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4000b4a	     0xf846c010000	                            je 0x4000cbc	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x4000b50	        0x41f6c501	                            test r13b, 1	       738	buffer.c	FUNCTION_10	IF_3
0x4000b54	            0x7439	                            je 0x4000b8f	       738	buffer.c	FUNCTION_10	IF_3
0x4000b56	    0x83bd24140000	             cmp dword [rbp + 0x1424], 0	       738	buffer.c	FUNCTION_10	IF_3
0x4000b5d	            0x7430	                            je 0x4000b8f	       738	buffer.c	FUNCTION_10	IF_3
0x4000b5f	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b66	          0x4989e8	                             mov r8, rbp	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b69	      0xb900000000	                              mov ecx, 0	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b6e	          0x4889f2	                            mov rdx, rsi	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b71	      0xbf01000000	                              mov edi, 1	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b76	      0xe800000000	                          call 0x4000b7b	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b7b	            0x85c0	                           test eax, eax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b7d	            0x7410	                            je 0x4000b8f	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000b7f	          0x4889e7	                            mov rdi, rsp	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4000b82	      0xe800000000	                          call 0x4000b87	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4000b87	            0x85c0	                           test eax, eax	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4000b89	     0xf842d010000	                            je 0x4000cbc	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4000b8f	        0x41f6c502	                            test r13b, 2	       746	buffer.c	FUNCTION_10	IF_5
0x4000b93	            0x7430	                            je 0x4000bc5	       746	buffer.c	FUNCTION_10	IF_5
0x4000b95	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000b9c	          0x4989e8	                             mov r8, rbp	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000b9f	      0xb900000000	                              mov ecx, 0	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000ba4	          0x4889f2	                            mov rdx, rsi	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000ba7	      0xbf0f000000	                            mov edi, 0xf	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000bac	      0xe800000000	                          call 0x4000bb1	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000bb1	            0x85c0	                           test eax, eax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000bb3	            0x7410	                            je 0x4000bc5	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000bb5	          0x4889e7	                            mov rdi, rsp	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4000bb8	      0xe800000000	                          call 0x4000bbd	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4000bbd	            0x85c0	                           test eax, eax	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4000bbf	     0xf84f7000000	                            je 0x4000cbc	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x4000bc5	    0x83ad80000000	               sub dword [rbp + 0x80], 1	       754	buffer.c	FUNCTION_10
0x4000bcc	          0x4585e4	                         test r12d, r12d	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000bcf	            0x742a	                            je 0x4000bfb	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000bd1	    0x483b1d000000	            cmp rbx, qword [0x04000bd8] 	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000bd8	            0x7421	                            je 0x4000bfb	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000bda	          0x4889df	                            mov rdi, rbx	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000bdd	      0xe800000000	                          call 0x4000be2	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000be2	            0x85c0	                           test eax, eax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000be4	            0x7415	                            je 0x4000bfb	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000be6	      0xe800000000	                          call 0x4000beb	       761	buffer.c	FUNCTION_10	IF_7	CALL_9
0x4000beb	          0x4889de	                            mov rsi, rbx	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000bee	          0x4c89ff	                            mov rdi, r15	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000bf1	      0xe800000000	                          call 0x4000bf6	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000bf6	      0xe800000000	                          call 0x4000bfb	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4000bfb	      0xe800000000	                          call 0x4000c00	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000c00	            0x85c0	                           test eax, eax	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000c02	     0xf85b4000000	                           jne 0x4000cbc	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000c08	    0x48392d000000	            cmp qword [0x04000c0f], rbp 	       777	buffer.c	FUNCTION_10	IF_9
0x4000c0f	            0x7509	                           jne 0x4000c1a	       777	buffer.c	FUNCTION_10	IF_9
0x4000c11	          0x4939ee	                            cmp r14, rbp	       777	buffer.c	FUNCTION_10	IF_9
0x4000c14	     0xf85a2000000	                           jne 0x4000cbc	       777	buffer.c	FUNCTION_10	IF_9
0x4000c1a	          0x4889ef	                            mov rdi, rbp	       780	buffer.c	FUNCTION_10	CALL_13
0x4000c1d	      0xe800000000	                          call 0x4000c22	       780	buffer.c	FUNCTION_10	CALL_13
0x4000c22	    0x488b3d000000	            mov rdi, qword [0x04000c29] 	       784	buffer.c	FUNCTION_10	IF_10
0x4000c29	          0x4885ff	                           test rdi, rdi	       784	buffer.c	FUNCTION_10	IF_10
0x4000c2c	            0x740b	                            je 0x4000c39	       784	buffer.c	FUNCTION_10	IF_10
0x4000c2e	        0x483b6f08	                cmp rbp, qword [rdi + 8]	       784	buffer.c	FUNCTION_10	IF_10
0x4000c32	            0x7505	                           jne 0x4000c39	       784	buffer.c	FUNCTION_10	IF_10
0x4000c34	      0xe800000000	                          call 0x4000c39	       785	buffer.c	FUNCTION_10	CALL_14
0x4000c39	    0x4c8b25000000	            mov r12, qword [0x04000c40] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c40	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c43	            0x743c	                            je 0x4000c81	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c45	    0x4c3925000000	            cmp qword [0x04000c4c], r12 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c4c	            0x7407	                            je 0x4000c55	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c4e	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c53	            0xeb07	                           jmp 0x4000c5c	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c55	    0x488b1d000000	            mov rbx, qword [0x04000c5c] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c5c	          0x4885db	                           test rbx, rbx	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c5f	            0x7417	                            je 0x4000c78	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c61	        0x483b6b08	                cmp rbp, qword [rbx + 8]	       795	buffer.c	FUNCTION_10	IF_11
0x4000c65	            0x7508	                           jne 0x4000c6f	       795	buffer.c	FUNCTION_10	IF_11
0x4000c67	          0x4889df	                            mov rdi, rbx	       796	buffer.c	FUNCTION_10	CALL_16
0x4000c6a	      0xe800000000	                          call 0x4000c6f	       796	buffer.c	FUNCTION_10	CALL_16
0x4000c6f	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c73	          0x4885db	                           test rbx, rbx	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c76	            0x75e9	                           jne 0x4000c61	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c78	        0x4d8b2424	                    mov r12, qword [r12]	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c7c	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c7f	            0x75c4	                           jne 0x4000c45	       794	buffer.c	FUNCTION_10	CALL_15
0x4000c81	      0xbe01000000	                              mov esi, 1	       803	buffer.c	FUNCTION_10	CALL_18
0x4000c86	          0x4889ef	                            mov rdi, rbp	       803	buffer.c	FUNCTION_10	CALL_18
0x4000c89	      0xe800000000	                          call 0x4000c8e	       803	buffer.c	FUNCTION_10	CALL_18
0x4000c8e	    0x48c745000000	                      mov qword [rbp], 0	       804	buffer.c	FUNCTION_10
0x4000c96	        0x41f6c504	                            test r13b, 4	       805	buffer.c	FUNCTION_10	IF_12
0x4000c9a	            0x7510	                           jne 0x4000cac	       805	buffer.c	FUNCTION_10	IF_12
0x4000c9c	          0x4889ef	                            mov rdi, rbp	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4000ca4	          0x4889ef	                            mov rdi, rbp	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4000ca7	      0xe800000000	                          call 0x4000cac	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4000cac	    0x488dbd681700	                 lea rdi, [rbp + 0x1768]	       811	buffer.c	FUNCTION_10	CALL_21
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       811	buffer.c	FUNCTION_10	CALL_21
0x4000cb8	        0x83657cbf	      and dword [rbp + 0x7c], 0xffffffbf	       813	buffer.c	FUNCTION_10
0x4000cbc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       814	buffer.c	FUNCTION_10
0x4000cc1	    0x644833042528	                xor rax, qword fs:[0x28]	       814	buffer.c	FUNCTION_10
0x4000cca	            0x7405	                            je 0x4000cd1	       814	buffer.c	FUNCTION_10
0x4000ccc	      0xe800000000	                          call 0x4000cd1	       814	buffer.c	FUNCTION_10
0x4000cd1	        0x4883c428	                           add rsp, 0x28	       814	buffer.c	FUNCTION_10
0x4000cd5	              0x5b	                                 pop rbx	       814	buffer.c	FUNCTION_10
0x4000cd6	              0x5d	                                 pop rbp	       814	buffer.c	FUNCTION_10
0x4000cd7	            0x415c	                                 pop r12	       814	buffer.c	FUNCTION_10
0x4000cd9	            0x415d	                                 pop r13	       814	buffer.c	FUNCTION_10
0x4000cdb	            0x415e	                                 pop r14	       814	buffer.c	FUNCTION_10
0x4000cdd	            0x415f	                                 pop r15	       814	buffer.c	FUNCTION_10
0x4000cdf	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
chk_modeline	CALL,16:IF,14:SWITCH,0:ELSE,1:WHILE,1:FOR,2:DO,1:functions,0	241
0x400058f	            0x4157	                                push r15	      5371	buffer.c	FUNCTION_74
0x4000591	            0x4156	                                push r14	      5371	buffer.c	FUNCTION_74
0x4000593	            0x4155	                                push r13	      5371	buffer.c	FUNCTION_74
0x4000595	            0x4154	                                push r12	      5371	buffer.c	FUNCTION_74
0x4000597	              0x55	                                push rbp	      5371	buffer.c	FUNCTION_74
0x4000598	              0x53	                                push rbx	      5371	buffer.c	FUNCTION_74
0x4000599	        0x4883ec38	                           sub rsp, 0x38	      5371	buffer.c	FUNCTION_74
0x400059d	          0x4889fd	                            mov rbp, rdi	      5371	buffer.c	FUNCTION_74
0x40005a0	          0x4189f7	                           mov r15d, esi	      5371	buffer.c	FUNCTION_74
0x40005a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5371	buffer.c	FUNCTION_74
0x40005ac	      0x4889442428	             mov qword [rsp + 0x28], rax	      5371	buffer.c	FUNCTION_74
0x40005b1	            0x31c0	                            xor eax, eax	      5371	buffer.c	FUNCTION_74
0x40005b3	      0xe800000000	                          call 0x40005b8	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40005b8	          0x803800	                       cmp byte [rax], 0	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40005bb	     0xf84f6020000	                            je 0x40008b7	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40005c1	          0x4889c3	                            mov rbx, rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40005c4	      0xbfffffffff	                     mov edi, 0xffffffff	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40005c9	          0x83ffff	             cmp edi, 0xffffffffffffffff	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005cc	            0x7412	                            je 0x40005e0	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005ce	      0xe800000000	                          call 0x40005d3	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005d3	            0x85c0	                           test eax, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005d5	     0xf85ba020000	                           jne 0x4000895	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005db	      0xe9e9000000	                           jmp 0x40006c9	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40005e0	      0xbf00000000	                              mov edi, 0	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005e5	      0xb903000000	                              mov ecx, 3	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005ea	          0x4889de	                            mov rsi, rbx	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005ed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005ef	           0xf97c2	                                 seta dl	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005f2	           0xf92c0	                                 setb al	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005f5	            0x38c2	                              cmp dl, al	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005f7	     0xf84e1000000	                            je 0x40006de	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40005fd	           0xfb603	                   movzx eax, byte [rbx]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000600	          0x83e0df	                     and eax, 0xffffffdf	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000603	            0x3c56	                            cmp al, 0x56	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000605	     0xf85be000000	                           jne 0x40006c9	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400060b	        0x807b0169	                cmp byte [rbx + 1], 0x69	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400060f	     0xf85b4000000	                           jne 0x40006c9	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000615	        0x807b026d	                cmp byte [rbx + 2], 0x6d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000619	     0xf85aa000000	                           jne 0x40006c9	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400061f	         0xfb64303	               movzx eax, byte [rbx + 3]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000623	          0x83e83c	                           sub eax, 0x3c	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000626	            0x3c02	                               cmp al, 2	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000628	            0x770b	                            ja 0x4000635	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400062a	        0x488d4304	                      lea rax, [rbx + 4]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400062e	      0x4889442420	             mov qword [rsp + 0x20], rax	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000633	            0xeb09	                           jmp 0x400063e	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000635	        0x488d4303	                      lea rax, [rbx + 3]	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x4000639	      0x4889442420	             mov qword [rsp + 0x20], rax	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x400063e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x4000643	      0xe800000000	                          call 0x4000648	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x4000648	          0x4989c4	                            mov r12, rax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400064b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000650	          0x80383a	                    cmp byte [rax], 0x3a	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000653	            0x7574	                           jne 0x40006c9	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000655	          0x803b56	                    cmp byte [rbx], 0x56	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000658	            0x7522	                           jne 0x400067c	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400065a	        0x488d7801	                      lea rdi, [rax + 1]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400065e	      0xe800000000	                          call 0x4000663	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000663	      0xbf00000000	                              mov edi, 0	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000668	      0xb903000000	                              mov ecx, 3	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400066d	          0x4889c6	                            mov rsi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000670	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000672	           0xf97c2	                                 seta dl	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000675	           0xf92c0	                                 setb al	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000678	            0x38c2	                              cmp dl, al	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400067a	            0x754d	                           jne 0x40006c9	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400067c	      0x440fb66b03	              movzx r13d, byte [rbx + 3]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000681	        0x4180fd3a	                          cmp r13b, 0x3a	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000685	            0x7457	                            je 0x40006de	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000687	    0x4181fc200300	                         cmp r12d, 0x320	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400068e	            0x7f15	                            jg 0x40006a5	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000690	      0xe800000000	                          call 0x4000695	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000695	        0x410fb6d5	                         movzx edx, r13b	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000699	          0x488b08	                    mov rcx, qword [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400069c	      0xf644510108	         test byte [rcx + rdx*2 + 1], 8 	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40006a1	            0x7408	                            je 0x40006ab	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40006a3	            0xeb39	                           jmp 0x40006de	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40006a5	        0x4180fd3c	                          cmp r13b, 0x3c	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006a9	            0x7433	                            je 0x40006de	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006ab	        0x4180fd3e	                          cmp r13b, 0x3e	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006af	            0x7509	                           jne 0x40006ba	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006b1	    0x4181fc1f0300	                         cmp r12d, 0x31f	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006b8	            0x7e24	                           jle 0x40006de	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006ba	        0x4180fd3d	                          cmp r13b, 0x3d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006be	            0x7509	                           jne 0x40006c9	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006c0	    0x4181fc200300	                         cmp r12d, 0x320	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006c7	            0x7415	                            je 0x40006de	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40006c9	           0xfb63b	                   movzx edi, byte [rbx]	      5412	buffer.c	FUNCTION_74	FOR_1
0x40006cc	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40006d0	          0x803b00	                       cmp byte [rbx], 0	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40006d3	     0xf85f0feffff	                           jne 0x40005c9	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40006d9	      0xe9d9010000	                           jmp 0x40008b7	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40006de	          0x803b00	                       cmp byte [rbx], 0	      5415	buffer.c	FUNCTION_74	IF_6
0x40006e1	     0xf8490010000	                            je 0x4000877	      5415	buffer.c	FUNCTION_74	IF_6
0x40006e7	        0x4883c301	                              add rbx, 1	      5418	buffer.c	FUNCTION_74	IF_6	DO_1
0x40006eb	        0x807bff3a	                cmp byte [rbx - 1], 0x3a	      5419	buffer.c	FUNCTION_74	IF_6
0x40006ef	            0x75f6	                           jne 0x40006e7	      5419	buffer.c	FUNCTION_74	IF_6
0x40006f1	          0x4889df	                            mov rdi, rbx	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x40006f4	      0xe800000000	                          call 0x40006f9	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x40006f9	      0x4889442408	                mov qword [rsp + 8], rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x40006fe	          0x4885c0	                           test rax, rax	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000701	     0xf8477010000	                            je 0x400087e	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000707	    0x488b15000000	            mov rdx, qword [0x0400070e] 	      5425	buffer.c	FUNCTION_74	IF_6
0x400070e	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5425	buffer.c	FUNCTION_74	IF_6
0x4000713	    0x488b15000000	            mov rdx, qword [0x0400071a] 	      5426	buffer.c	FUNCTION_74	IF_6
0x400071a	      0x4889542418	             mov qword [rsp + 0x18], rdx	      5426	buffer.c	FUNCTION_74	IF_6
0x400071f	    0x48892d000000	            mov qword [0x04000726], rbp 	      5427	buffer.c	FUNCTION_74	IF_6
0x4000726	    0x48c705000000	               mov qword [0x04000731], 0	      5428	buffer.c	FUNCTION_74	IF_6
0x4000731	          0x4889c7	                            mov rdi, rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x4000734	    0x41bc01000000	                             mov r12d, 1	      5378	buffer.c	FUNCTION_74
0x400073a	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000741	        0x4183cf0c	                            or r15d, 0xc	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x4000745	      0xe800000000	                          call 0x400074a	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400074a	          0x4889c3	                            mov rbx, rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400074d	          0x803800	                       cmp byte [rax], 0	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x4000750	     0xf84fa000000	                            je 0x4000850	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x4000756	      0x4889442420	             mov qword [rsp + 0x20], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400075b	           0xfb600	                   movzx eax, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400075e	            0x3c3a	                            cmp al, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000760	            0x744b	                            je 0x40007ad	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000762	            0x84c0	                             test al, al	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000764	            0x7447	                            je 0x40007ad	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000766	          0x4989d8	                             mov r8, rbx	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000769	            0x3c5c	                            cmp al, 0x5c	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400076b	            0x7526	                           jne 0x4000793	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400076d	      0x418078013a	                 cmp byte [r8 + 1], 0x3a	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000772	            0x751f	                           jne 0x4000793	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000774	        0x498d7001	                       lea rsi, [r8 + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000778	          0x4c89f1	                            mov rcx, r14	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400077b	          0x4889f7	                            mov rdi, rsi	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400077e	      0xb800000000	                              mov eax, 0	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000783	            0xf2ae	              repne scasb al, byte [rdi]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000785	          0x4889ca	                            mov rdx, rcx	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000788	          0x48f7d2	                                 not rdx	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400078b	          0x4c89c7	                             mov rdi, r8	        59	string3.h	FUNCTION_105	CALL_3
0x400078e	      0xe800000000	                          call 0x4000793	        59	string3.h	FUNCTION_105	CALL_3
0x4000793	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000798	        0x4c8d4001	                       lea r8, [rax + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400079c	      0x4c89442420	              mov qword [rsp + 0x20], r8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007a1	         0xfb64001	               movzx eax, byte [rax + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007a5	            0x3c3a	                            cmp al, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007a7	            0x7404	                            je 0x40007ad	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007a9	            0x84c0	                             test al, al	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007ab	            0x75bc	                           jne 0x4000769	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40007ad	            0x84c0	                             test al, al	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x40007af	     0xf8409010000	                            je 0x40008be	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x40007b5	      0xbf00000000	                              mov edi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007ba	      0xb904000000	                              mov ecx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007bf	          0x4889de	                            mov rsi, rbx	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007c2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007c4	           0xf97c1	                                 seta cl	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007c7	           0xf92c2	                                 setb dl	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007ca	            0x38d1	                              cmp cl, dl	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007cc	            0x7419	                            je 0x40007e7	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40007ce	      0xbf00000000	                              mov edi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007d3	      0xb903000000	                              mov ecx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007d8	          0x4889de	                            mov rsi, rbx	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007dd	           0xf97c1	                                 seta cl	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007e0	           0xf92c2	                                 setb dl	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007e3	            0x38d1	                              cmp cl, dl	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007e5	            0x751c	                           jne 0x4000803	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40007e7	            0x3c3a	                            cmp al, 0x3a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x40007e9	            0x7565	                           jne 0x4000850	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x40007eb	      0xbe20000000	                           mov esi, 0x20	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40007f0	          0x4889df	                            mov rdi, rbx	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40007f3	      0xe800000000	                          call 0x40007f8	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40007f8	        0x488d5801	                      lea rbx, [rax + 1]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40007fc	      0xbd01000000	                              mov ebp, 1	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x4000801	            0xeb05	                           jmp 0x4000808	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x4000803	      0xbd00000000	                              mov ebp, 0	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x4000808	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400080d	          0xc60000	                       mov byte [rax], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000810	          0x803b00	                       cmp byte [rbx], 0	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000813	            0x742a	                            je 0x400083f	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000815	    0x448b2d000000	           mov r13d, dword [0x0400081c] 	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400081c	    0xc70500000000	     mov dword [0x04000826], 0xffffffff 	      5468	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000826	          0x4489fe	                           mov esi, r15d	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x4000829	          0x4889df	                            mov rdi, rbx	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400082c	      0xe800000000	                          call 0x4000831	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x4000831	          0x4189c4	                           mov r12d, eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x4000834	    0x44892d000000	           mov dword [0x0400083b], r13d 	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400083b	            0x85c0	                           test eax, eax	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x400083d	            0x7411	                            je 0x4000850	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x400083f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000844	        0x488d7801	                      lea rdi, [rax + 1]	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000848	            0x85ed	                           test ebp, ebp	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400084a	     0xf84f5feffff	                            je 0x4000745	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000850	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5480	buffer.c	FUNCTION_74	IF_6
0x4000855	    0x488905000000	            mov qword [0x0400085c], rax 	      5480	buffer.c	FUNCTION_74	IF_6
0x400085c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5481	buffer.c	FUNCTION_74	IF_6
0x4000861	    0x488905000000	            mov qword [0x04000868], rax 	      5481	buffer.c	FUNCTION_74	IF_6
0x4000868	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x400086d	      0xe800000000	                          call 0x4000872	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000872	          0x4489e0	                           mov eax, r12d	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000875	            0xeb0c	                           jmp 0x4000883	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000877	      0xb801000000	                              mov eax, 1	      5378	buffer.c	FUNCTION_74
0x400087c	            0xeb05	                           jmp 0x4000883	      5378	buffer.c	FUNCTION_74
0x400087e	      0xb800000000	                              mov eax, 0	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000883	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      5486	buffer.c	FUNCTION_74
0x4000888	    0x644833142528	                xor rdx, qword fs:[0x28]	      5486	buffer.c	FUNCTION_74
0x4000891	            0x7474	                            je 0x4000907	      5486	buffer.c	FUNCTION_74
0x4000893	            0xeb6d	                           jmp 0x4000902	      5486	buffer.c	FUNCTION_74
0x4000895	      0xbf00000000	                              mov edi, 0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400089a	      0xb903000000	                              mov ecx, 3	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400089f	          0x4889de	                            mov rsi, rbx	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008a2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008a4	           0xf97c2	                                 seta dl	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008a7	           0xf92c0	                                 setb al	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008aa	            0x38c2	                              cmp dl, al	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008ac	     0xf852efdffff	                           jne 0x40005e0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008b2	      0xe927feffff	                           jmp 0x40006de	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40008b7	      0xb801000000	                              mov eax, 1	      5378	buffer.c	FUNCTION_74
0x40008bc	            0xebc5	                           jmp 0x4000883	      5378	buffer.c	FUNCTION_74
0x40008be	      0xbf00000000	                              mov edi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008c3	      0xb904000000	                              mov ecx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008c8	          0x4889de	                            mov rsi, rbx	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008cb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008cd	           0xf97c2	                                 seta dl	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008d0	           0xf92c0	                                 setb al	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008d3	            0x38c2	                              cmp dl, al	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008d5	     0xf8475ffffff	                            je 0x4000850	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40008db	      0xbf00000000	                              mov edi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008e0	      0xb903000000	                              mov ecx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008e5	          0x4889de	                            mov rsi, rbx	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008e8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008ea	           0xf97c2	                                 seta dl	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008ed	           0xf92c0	                                 setb al	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008f0	            0x38c2	                              cmp dl, al	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008f2	     0xf8458ffffff	                            je 0x4000850	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40008f8	      0xbd01000000	                              mov ebp, 1	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x40008fd	      0xe906ffffff	                           jmp 0x4000808	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x4000902	      0xe800000000	                          call 0x4000907	      5486	buffer.c	FUNCTION_74
0x4000907	        0x4883c438	                           add rsp, 0x38	      5486	buffer.c	FUNCTION_74
0x400090b	              0x5b	                                 pop rbx	      5486	buffer.c	FUNCTION_74
0x400090c	              0x5d	                                 pop rbp	      5486	buffer.c	FUNCTION_74
0x400090d	            0x415c	                                 pop r12	      5486	buffer.c	FUNCTION_74
0x400090f	            0x415d	                                 pop r13	      5486	buffer.c	FUNCTION_74
0x4000911	            0x415e	                                 pop r14	      5486	buffer.c	FUNCTION_74
0x4000913	            0x415f	                                 pop r15	      5486	buffer.c	FUNCTION_74
0x4000915	              0xc3	                                     ret	      5486	buffer.c	FUNCTION_74
init_changedtick	CALL,2:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	13
0x400037d	        0x4883ec08	                              sub rsp, 8	       875	buffer.c	FUNCTION_12
0x4000381	    0xc687e0000000	                mov byte [rdi + 0xe0], 5	       878	buffer.c	FUNCTION_12
0x4000388	    0xc787d0000000	               mov dword [rdi + 0xd0], 1	       879	buffer.c	FUNCTION_12
0x4000392	    0xc687d4000000	                mov byte [rdi + 0xd4], 2	       880	buffer.c	FUNCTION_12
0x4000399	    0x48c787d80000	               mov qword [rdi + 0xd8], 0	       881	buffer.c	FUNCTION_12
0x40003a4	    0x48b86368616e	          movabs rax, 0x746465676e616863	       110	string3.h	FUNCTION_110	CALL_3
0x40003ae	    0x488987e10000	             mov qword [rdi + 0xe1], rax	       110	string3.h	FUNCTION_110	CALL_3
0x40003b5	    0xc787e9000000	       mov dword [rdi + 0xe9], 0x6b6369 	       110	string3.h	FUNCTION_110	CALL_3
0x40003bf	    0x488db7d00000	                   lea rsi, [rdi + 0xd0]	       876	buffer.c	FUNCTION_12
0x40003c6	    0x488bbf301700	          mov rdi, qword [rdi + 0x1730] 	       885	buffer.c	FUNCTION_12	CALL_2
0x40003cd	      0xe800000000	                          call 0x40003d2	       885	buffer.c	FUNCTION_12	CALL_2
0x40003d2	        0x4883c408	                              add rsp, 8	       887	buffer.c	FUNCTION_12
0x40003d6	              0xc3	                                     ret	       887	buffer.c	FUNCTION_12
buf_hide	CALL,0:IF,0:SWITCH,1:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	23
0x4002512	    0x488b87101400	          mov rax, qword [rdi + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002519	           0xfb610	                   movzx edx, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400251c	      0xb801000000	                              mov eax, 1	      5666	buffer.c	FUNCTION_83	SWITCH_1
0x4002521	          0x80fa68	                            cmp dl, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002524	            0x7437	                            je 0x400255d	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002526	          0x80fa68	                            cmp dl, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002529	            0x7707	                            ja 0x4002532	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400252b	          0x80fa64	                            cmp dl, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400252e	            0x750c	                           jne 0x400253c	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002530	            0xeb26	                           jmp 0x4002558	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002532	          0x80fa75	                            cmp dl, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002535	            0x7421	                            je 0x4002558	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4002537	          0x80fa77	                            cmp dl, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400253a	            0x741c	                            je 0x4002558	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400253c	      0xb801000000	                              mov eax, 1	      5668	buffer.c	FUNCTION_83
0x4002541	    0x833d00000000	               cmp dword [0x04002548], 0	      5668	buffer.c	FUNCTION_83
0x4002548	            0x7513	                           jne 0x400255d	      5668	buffer.c	FUNCTION_83
0x400254a	    0x833d00000000	               cmp dword [0x04002551], 0	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x4002551	           0xf95c0	                                setne al	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x4002554	           0xfb6c0	                           movzx eax, al	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x4002557	              0xc3	                                     ret	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x4002558	      0xb800000000	                              mov eax, 0	      5665	buffer.c	FUNCTION_83	SWITCH_1
0x400255d	            0xf3c3	                                     ret	      5669	buffer.c	FUNCTION_83
alist_name	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	12
0x4002193	              0x53	                                push rbx	      4827	buffer.c	FUNCTION_70
0x4002194	          0x4889fb	                            mov rbx, rdi	      4827	buffer.c	FUNCTION_70
0x4002197	          0x8b7f08	                mov edi, dword [rdi + 8]	      4831	buffer.c	FUNCTION_70	CALL_1
0x400219a	      0xe800000000	                          call 0x400219f	      4831	buffer.c	FUNCTION_70	CALL_1
0x400219f	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x40021a2	            0x740c	                            je 0x40021b0	      4832	buffer.c	FUNCTION_70	IF_1
0x40021a4	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4832	buffer.c	FUNCTION_70	IF_1
0x40021ab	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x40021ae	            0x7503	                           jne 0x40021b3	      4832	buffer.c	FUNCTION_70	IF_1
0x40021b0	          0x488b03	                    mov rax, qword [rbx]	      4833	buffer.c	FUNCTION_70	IF_1
0x40021b3	              0x5b	                                 pop rbx	      4835	buffer.c	FUNCTION_70
0x40021b4	              0xc3	                                     ret	      4835	buffer.c	FUNCTION_70
buflist_findname_stat	CALL,1:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0:functions,0	28
0x4001e13	            0x4154	                                push r12	      2408	buffer.c	FUNCTION_32
0x4001e15	              0x55	                                push rbp	      2408	buffer.c	FUNCTION_32
0x4001e16	              0x53	                                push rbx	      2408	buffer.c	FUNCTION_32
0x4001e17	          0x4989fc	                            mov r12, rdi	      2408	buffer.c	FUNCTION_32
0x4001e1a	          0x4889f5	                            mov rbp, rsi	      2408	buffer.c	FUNCTION_32
0x4001e1d	    0x488b1d000000	            mov rbx, qword [0x04001e24] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e24	          0x4885db	                           test rbx, rbx	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e27	            0x7428	                            je 0x4001e51	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e29	        0xf6437c80	           test byte [rbx + 0x7c], 0x80 	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e2d	            0x7512	                           jne 0x4001e41	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e2f	          0x4889ea	                            mov rdx, rbp	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e32	          0x4c89e6	                            mov rsi, r12	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e35	          0x4889df	                            mov rdi, rbx	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e38	      0xe8bffeffff	                  call sym.otherfile_buf	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e3d	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e3f	            0x7417	                            je 0x4001e58	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001e41	        0x488b5b70	            mov rbx, qword [rbx + 0x70] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e45	          0x4885db	                           test rbx, rbx	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e48	            0x75df	                           jne 0x4001e29	      2413	buffer.c	FUNCTION_32	FOR_1
0x4001e4a	      0xb800000000	                              mov eax, 0	      2420	buffer.c	FUNCTION_32
0x4001e4f	            0xeb0a	                           jmp 0x4001e5b	      2420	buffer.c	FUNCTION_32
0x4001e51	      0xb800000000	                              mov eax, 0	      2420	buffer.c	FUNCTION_32
0x4001e56	            0xeb03	                           jmp 0x4001e5b	      2420	buffer.c	FUNCTION_32
0x4001e58	          0x4889d8	                            mov rax, rbx	      2420	buffer.c	FUNCTION_32
0x4001e5b	              0x5b	                                 pop rbx	      2421	buffer.c	FUNCTION_32
0x4001e5c	              0x5d	                                 pop rbp	      2421	buffer.c	FUNCTION_32
0x4001e5d	            0x415c	                                 pop r12	      2421	buffer.c	FUNCTION_32
0x4001e5f	              0xc3	                                     ret	      2421	buffer.c	FUNCTION_32
buf_clear_file	CALL,2:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	16
0x4000a55	              0x53	                                push rbx	       693	buffer.c	FUNCTION_9
0x4000a56	          0x4889fb	                            mov rbx, rdi	       693	buffer.c	FUNCTION_9
0x4000a59	    0x48c707010000	                      mov qword [rdi], 1	       694	buffer.c	FUNCTION_9
0x4000a60	      0xbe01000000	                              mov esi, 1	       695	buffer.c	FUNCTION_9	CALL_1
0x4000a65	      0xe800000000	                          call 0x4000a6a	       695	buffer.c	FUNCTION_9	CALL_1
0x4000a6a	    0xc78360170000	            mov dword [rbx + 0x1760], 0 	       696	buffer.c	FUNCTION_9
0x4000a74	    0xc78370140000	            mov dword [rbx + 0x1470], 1 	       697	buffer.c	FUNCTION_9
0x4000a7e	    0xc78300170000	            mov dword [rbx + 0x1700], 1 	       698	buffer.c	FUNCTION_9
0x4000a88	    0xc7830c140000	            mov dword [rbx + 0x140c], 0 	       700	buffer.c	FUNCTION_9
0x4000a92	    0xc78314170000	            mov dword [rbx + 0x1714], 0 	       701	buffer.c	FUNCTION_9
0x4000a9c	    0x48c743080000	                  mov qword [rbx + 8], 0	       703	buffer.c	FUNCTION_9
0x4000aa4	    0xc74310010000	               mov dword [rbx + 0x10], 1	       704	buffer.c	FUNCTION_9
0x4000aab	          0x4889df	                            mov rdi, rbx	       706	buffer.c	FUNCTION_9	CALL_2
0x4000aae	      0xe800000000	                          call 0x4000ab3	       706	buffer.c	FUNCTION_9	CALL_2
0x4000ab3	              0x5b	                                 pop rbx	       708	buffer.c	FUNCTION_9
0x4000ab4	              0xc3	                                     ret	       708	buffer.c	FUNCTION_9
otherfile	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	7
0x4001f02	        0x4883ec08	                              sub rsp, 8	      3306	buffer.c	FUNCTION_55
0x4001f06	          0x4889fe	                            mov rsi, rdi	      3306	buffer.c	FUNCTION_55
0x4001f09	      0xba00000000	                              mov edx, 0	      3307	buffer.c	FUNCTION_55	CALL_1
0x4001f0e	    0x488b3d000000	            mov rdi, qword [0x04001f15] 	      3307	buffer.c	FUNCTION_55	CALL_1
0x4001f15	      0xe8e2fdffff	                  call sym.otherfile_buf	      3307	buffer.c	FUNCTION_55	CALL_1
0x4001f1a	        0x4883c408	                              add rsp, 8	      3312	buffer.c	FUNCTION_55
0x4001f1e	              0xc3	                                     ret	      3312	buffer.c	FUNCTION_55
buflist_altfpos	CALL,1:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	9
0x4001c4e	        0x4883ec08	                              sub rsp, 8	      3296	buffer.c	FUNCTION_54
0x4001c52	          0x4889fe	                            mov rsi, rdi	      3296	buffer.c	FUNCTION_54
0x4001c55	          0x8b4f40	            mov ecx, dword [rdi + 0x40] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x4001c58	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x4001c5c	    0x41b801000000	                              mov r8d, 1	      3297	buffer.c	FUNCTION_54	CALL_1
0x4001c62	    0x488b3d000000	            mov rdi, qword [0x04001c69] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x4001c69	      0xe88ce5ffff	                call sym.buflist_setfpos	      3297	buffer.c	FUNCTION_54	CALL_1
0x4001c6e	        0x4883c408	                              add rsp, 8	      3298	buffer.c	FUNCTION_54
0x4001c72	              0xc3	                                     ret	      3298	buffer.c	FUNCTION_54
buf_set_name	CALL,5:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	26
0x4002120	              0x55	                                push rbp	      3173	buffer.c	FUNCTION_48
0x4002121	              0x53	                                push rbx	      3173	buffer.c	FUNCTION_48
0x4002122	        0x4883ec08	                              sub rsp, 8	      3173	buffer.c	FUNCTION_48
0x4002126	          0x4889f5	                            mov rbp, rsi	      3173	buffer.c	FUNCTION_48
0x4002129	      0xe800000000	                          call 0x400212e	      3176	buffer.c	FUNCTION_48	CALL_1
0x400212e	          0x4885c0	                           test rax, rax	      3177	buffer.c	FUNCTION_48	IF_1
0x4002131	            0x7459	                            je 0x400218c	      3177	buffer.c	FUNCTION_48	IF_1
0x4002133	          0x4889c3	                            mov rbx, rax	      3177	buffer.c	FUNCTION_48	IF_1
0x4002136	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x400213d	      0xe800000000	                          call 0x4002142	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x4002142	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x4002149	      0xe800000000	                          call 0x400214e	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x400214e	          0x4889ef	                            mov rdi, rbp	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4002151	      0xe800000000	                          call 0x4002156	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4002156	    0x488983880000	             mov qword [rbx + 0x88], rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x400215d	    0x48c783900000	               mov qword [rbx + 0x90], 0	      3182	buffer.c	FUNCTION_48	IF_1
0x4002168	    0x488d93900000	                   lea rdx, [rbx + 0x90]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x400216f	    0x488db3880000	                   lea rsi, [rbx + 0x88]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x4002176	          0x4889df	                            mov rdi, rbx	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x4002179	      0xe800000000	                          call 0x400217e	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x400217e	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	      3186	buffer.c	FUNCTION_48	IF_1
0x4002185	    0x488983980000	             mov qword [rbx + 0x98], rax	      3186	buffer.c	FUNCTION_48	IF_1
0x400218c	        0x4883c408	                              add rsp, 8	      3188	buffer.c	FUNCTION_48
0x4002190	              0x5b	                                 pop rbx	      3188	buffer.c	FUNCTION_48
0x4002191	              0x5d	                                 pop rbp	      3188	buffer.c	FUNCTION_48
0x4002192	              0xc3	                                     ret	      3188	buffer.c	FUNCTION_48
do_arg_all	CALL,43:IF,38:SWITCH,0:ELSE,6:WHILE,0:FOR,5:DO,0:functions,0	483
0x400255f	            0x4157	                                push r15	      4845	buffer.c	FUNCTION_71
0x4002561	            0x4156	                                push r14	      4845	buffer.c	FUNCTION_71
0x4002563	            0x4155	                                push r13	      4845	buffer.c	FUNCTION_71
0x4002565	            0x4154	                                push r12	      4845	buffer.c	FUNCTION_71
0x4002567	              0x55	                                push rbp	      4845	buffer.c	FUNCTION_71
0x4002568	              0x53	                                push rbx	      4845	buffer.c	FUNCTION_71
0x4002569	    0x4881ec880000	                           sub rsp, 0x88	      4845	buffer.c	FUNCTION_71
0x4002570	        0x897c244c	             mov dword [rsp + 0x4c], edi	      4845	buffer.c	FUNCTION_71
0x4002574	        0x8974241c	             mov dword [rsp + 0x1c], esi	      4845	buffer.c	FUNCTION_71
0x4002578	        0x89542418	             mov dword [rsp + 0x18], edx	      4845	buffer.c	FUNCTION_71
0x400257c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4845	buffer.c	FUNCTION_71
0x4002585	      0x4889442478	             mov qword [rsp + 0x78], rax	      4845	buffer.c	FUNCTION_71
0x400258a	            0x31c0	                            xor eax, eax	      4845	buffer.c	FUNCTION_71
0x400258c	    0x488b05000000	            mov rax, qword [0x04002593] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4002593	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4867	buffer.c	FUNCTION_71	IF_1
0x400259a	          0x833800	                      cmp dword [rax], 0	      4867	buffer.c	FUNCTION_71	IF_1
0x400259d	     0xf8efa070000	                           jle 0x4002d9d	      4867	buffer.c	FUNCTION_71	IF_1
0x40025a3	    0x8b0500000000	            mov eax, dword [0x040025a9] 	      4861	buffer.c	FUNCTION_71
0x40025a9	            0x89c3	                            mov ebx, eax	      4861	buffer.c	FUNCTION_71
0x40025ab	        0x89442438	             mov dword [rsp + 0x38], eax	      4861	buffer.c	FUNCTION_71
0x40025af	      0xe800000000	                          call 0x40025b4	      4873	buffer.c	FUNCTION_71	CALL_1
0x40025b4	    0x488b05000000	            mov rax, qword [0x040025bb] 	      4875	buffer.c	FUNCTION_71
0x40025bb	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4875	buffer.c	FUNCTION_71
0x40025c2	          0x448b30	                   mov r14d, dword [rax]	      4875	buffer.c	FUNCTION_71
0x40025c5	          0x4489f7	                           mov edi, r14d	      4876	buffer.c	FUNCTION_71	CALL_2
0x40025c8	      0xe800000000	                          call 0x40025cd	      4876	buffer.c	FUNCTION_71	CALL_2
0x40025cd	      0x4889442420	             mov qword [rsp + 0x20], rax	      4876	buffer.c	FUNCTION_71	CALL_2
0x40025d2	          0x4885c0	                           test rax, rax	      4877	buffer.c	FUNCTION_71	IF_2
0x40025d5	     0xf84c2070000	                            je 0x4002d9d	      4877	buffer.c	FUNCTION_71	IF_2
0x40025db	    0x488b05000000	            mov rax, qword [0x040025e2] 	      4883	buffer.c	FUNCTION_71
0x40025e2	      0x4889442458	             mov qword [rsp + 0x58], rax	      4883	buffer.c	FUNCTION_71
0x40025e7	    0x4c8bb8800100	           mov r15, qword [rax + 0x180] 	      4883	buffer.c	FUNCTION_71
0x40025ee	      0x4183471801	               add dword [r15 + 0x18], 1	      4884	buffer.c	FUNCTION_71
0x40025f3	    0x488b05000000	            mov rax, qword [0x040025fa] 	      4887	buffer.c	FUNCTION_71
0x40025fa	      0x4889442428	             mov qword [rsp + 0x28], rax	      4887	buffer.c	FUNCTION_71
0x40025ff	    0xc70500000000	               mov dword [0x04002609], 1	      4890	buffer.c	FUNCTION_71
0x4002609	            0x85db	                           test ebx, ebx	      4900	buffer.c	FUNCTION_71	IF_3
0x400260b	            0x7e16	                           jle 0x4002623	      4900	buffer.c	FUNCTION_71	IF_3
0x400260d	      0xba01000000	                              mov edx, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002612	      0xbe01000000	                              mov esi, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002617	    0x488b3d000000	            mov rdi, qword [0x0400261e] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x400261e	      0xe800000000	                          call 0x4002623	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002623	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4845	buffer.c	FUNCTION_71
0x400262c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4845	buffer.c	FUNCTION_71
0x4002635	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4845	buffer.c	FUNCTION_71
0x400263d	    0x488b05000000	            mov rax, qword [0x04002644] 	      4904	buffer.c	FUNCTION_71	FOR_1
0x4002644	          0x488b00	                    mov rax, qword [rax]	      4904	buffer.c	FUNCTION_71	FOR_1
0x4002647	      0x4889442430	             mov qword [rsp + 0x30], rax	      4904	buffer.c	FUNCTION_71	FOR_1
0x400264c	    0x488b05000000	            mov rax, qword [0x04002653] 	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002653	      0x4889442408	                mov qword [rsp + 8], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002658	          0x4885c0	                           test rax, rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400265b	     0xf84ca020000	                            je 0x400292b	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002661	      0x488b442408	                mov rax, qword [rsp + 8]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002666	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400266a	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400266f	        0x488b6808	                mov rbp, qword [rax + 8]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002673	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x400267b	     0xf8426010000	                            je 0x40027a7	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002681	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002686	            0x7414	                            je 0x400269c	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002688	      0xe96a060000	                           jmp 0x4002cf7	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x400268d	      0xbb00000000	                              mov ebx, 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002692	          0x4585f6	                         test r14d, r14d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002695	            0x7f2a	                            jg 0x40026c1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002697	      0xe90e010000	                           jmp 0x40027aa	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400269c	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026a0	     0xf8f61060000	                            jg 0x4002d07	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026a6	      0x488b442408	                mov rax, qword [rsp + 8]	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026ab	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026b2	    0x483b05000000	            cmp rax, qword [0x040026b9] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026b9	     0xf8548060000	                           jne 0x4002d07	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026bf	            0xebcc	                           jmp 0x400268d	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40026c1	          0x41391f	                    cmp dword [r15], ebx	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x40026c4	     0xf8ecf000000	                           jle 0x4002799	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x40026ca	          0x4c63e3	                         movsxd r12, ebx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026cd	          0x4c89e7	                            mov rdi, r12	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026d0	        0x48c1e704	                              shl rdi, 4	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026d4	        0x49037f10	             add rdi, qword [r15 + 0x10]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026d8	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026de	          0x394708	                cmp dword [rdi + 8], eax	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026e1	            0x7424	                            je 0x4002707	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x40026e3	    0x4c8bad880000	            mov r13, qword [rbp + 0x88] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026ea	      0xe800000000	                          call 0x40026ef	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026ef	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026f4	          0x4c89ee	                            mov rsi, r13	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026f7	          0x4889c7	                            mov rdi, rax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026fa	      0xe800000000	                          call 0x40026ff	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x40026ff	            0xa801	                              test al, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002701	     0xf8492000000	                            je 0x4002799	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002707	      0xb801000000	                              mov eax, 1	      4923	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x400270c	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002711	    0x483b0d000000	            cmp rcx, qword [0x04002718] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002718	            0x7513	                           jne 0x400272d	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x400271a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400271f	      0x48394c2458	            cmp qword [rsp + 0x58], rcx 	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4002724	           0xf94c0	                                 sete al	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4002727	           0xfb6c0	                           movzx eax, al	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400272a	          0x83c002	                              add eax, 2	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400272d	      0x4c03642420	             add r12, qword [rsp + 0x20]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002732	      0x410fb61424	                   movzx edx, byte [r12]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002737	            0x39d0	                            cmp eax, edx	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002739	            0x7e31	                           jle 0x400276c	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400273b	        0x41880424	                      mov byte [r12], al	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x400273f	            0x85db	                           test ebx, ebx	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002741	            0x7532	                           jne 0x4002775	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002743	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002748	          0x4885c0	                           test rax, rax	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400274b	            0x7407	                            je 0x4002754	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x400274d	    0x4489b0880100	           mov dword [rax + 0x188], r14d	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002754	    0x488b05000000	            mov rax, qword [0x0400275b] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400275b	      0x4889442450	             mov qword [rsp + 0x50], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002760	      0x488b442408	                mov rax, qword [rsp + 8]	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002765	      0x4889442440	             mov qword [rsp + 0x40], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400276a	            0xeb09	                           jmp 0x4002775	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x400276c	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4002771	        0x410f45de	                        cmovne ebx, r14d	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4002775	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x400277a	    0x498bbd800100	           mov rdi, qword [r13 + 0x180] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002781	          0x4939ff	                            cmp r15, rdi	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002784	            0x7424	                            je 0x40027aa	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002786	      0xe800000000	                          call 0x400278b	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x400278b	    0x4d89bd800100	            mov qword [r13 + 0x180], r15	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002792	      0x4183471801	               add dword [r15 + 0x18], 1	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002797	            0xeb11	                           jmp 0x40027aa	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002799	          0x83c301	                              add ebx, 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400279c	          0x4139de	                           cmp r14d, ebx	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400279f	     0xf8f1cffffff	                            jg 0x40026c1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x40027a5	            0xeb03	                           jmp 0x40027aa	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x40027a7	          0x4489f3	                           mov ebx, r14d	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x40027aa	      0x488b442408	                mov rax, qword [rsp + 8]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40027af	    0x899888010000	            mov dword [rax + 0x188], ebx	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40027b5	          0x4439f3	                           cmp ebx, r14d	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x40027b8	     0xf850f010000	                           jne 0x40028cd	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x40027be	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x40027c3	     0xf8504010000	                           jne 0x40028cd	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x40027c9	          0x4889ef	                            mov rdi, rbp	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027cc	      0xe800000000	                          call 0x40027d1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027d1	         0xb44241c	              or eax, dword [rsp + 0x1c]	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027d5	            0x751a	                           jne 0x40027f1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027d7	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027db	     0xf8f67050000	                            jg 0x4002d48	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40027e1	          0x4889ef	                            mov rdi, rbp	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40027e4	      0xe800000000	                          call 0x40027e9	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40027e9	            0x85c0	                           test eax, eax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40027eb	     0xf85e8000000	                           jne 0x40028d9	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40027f1	          0x4889ef	                            mov rdi, rbp	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40027f4	      0xe800000000	                          call 0x40027f9	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40027f9	            0x89c3	                            mov ebx, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40027fb	            0x85c0	                           test eax, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40027fd	     0xf852b050000	                           jne 0x4002d2e	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002803	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002807	     0xf8f0b050000	                            jg 0x4002d18	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x400280d	          0x4889ef	                            mov rdi, rbp	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002810	      0xe800000000	                          call 0x4002815	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002815	            0x85c0	                           test eax, eax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002817	            0x7447	                            je 0x4002860	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002819	          0x4889ee	                            mov rsi, rbp	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x400281c	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x4002821	      0xe800000000	                          call 0x4002826	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0x4002826	      0xbe00000000	                              mov esi, 0	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400282b	          0x4889ef	                            mov rdi, rbp	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x400282e	      0xe800000000	                          call 0x4002833	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x4002833	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002838	      0xe800000000	                          call 0x400283d	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400283d	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400283f	            0x740e	                            je 0x400284f	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002841	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002846	      0xe800000000	                          call 0x400284b	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400284b	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400284d	            0x7511	                           jne 0x4002860	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x400284f	    0x488b05000000	            mov rax, qword [0x04002856] 	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4002856	      0x4889442408	                mov qword [rsp + 8], rax	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x400285b	      0xe9bf000000	                           jmp 0x400291f	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4002860	    0x488b05000000	            mov rax, qword [0x04002867] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002867	    0x483905000000	            cmp qword [0x0400286e], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400286e	            0x7514	                           jne 0x4002884	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002870	    0x488b05000000	            mov rax, qword [0x04002877] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002877	        0x48833800	                      cmp qword [rax], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400287b	            0x7468	                            je 0x40028e5	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400287d	      0x837c243800	               cmp dword [rsp + 0x38], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002882	            0x7461	                            je 0x40028e5	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002884	          0x4889ef	                            mov rdi, rbp	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002887	      0xe800000000	                          call 0x400288c	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400288c	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400288e	            0x7510	                           jne 0x40028a0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002890	          0x4889ef	                            mov rdi, rbp	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002893	      0xe800000000	                          call 0x4002898	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002898	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400289a	           0xf94c3	                                 sete bl	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400289d	           0xfb6db	                           movzx ebx, bl	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x40028a0	            0x89de	                            mov esi, ebx	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x40028a2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x40028a7	      0xe800000000	                          call 0x40028ac	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x40028ac	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x40028b1	          0x4889df	                            mov rdi, rbx	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x40028b4	      0xe800000000	                          call 0x40028b9	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x40028b9	            0x85c0	                           test eax, eax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x40028bb	          0x4889d8	                            mov rax, rbx	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x40028be	    0x480f44050000	           cmove rax, qword [0x040028c6]	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x40028c6	      0x4889442408	                mov qword [rsp + 8], rax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x40028cb	            0xeb52	                           jmp 0x400291f	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x40028cd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028d2	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028d7	            0xeb46	                           jmp 0x400291f	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028d9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028de	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028e3	            0xeb3a	                           jmp 0x400291f	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028e5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028ea	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028ef	    0xc74424480100	               mov dword [rsp + 0x48], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x40028f7	            0xeb26	                           jmp 0x400291f	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x40028f9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40028fe	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002903	    0xc74424480100	               mov dword [rsp + 0x48], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400290b	            0xeb12	                           jmp 0x400291f	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400290d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002912	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002917	    0xc74424480100	               mov dword [rsp + 0x48], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400291f	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002925	     0xf8536fdffff	                           jne 0x4002661	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400292b	      0x837c243800	               cmp dword [rsp + 0x38], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002930	            0x7436	                            je 0x4002968	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002932	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002937	          0x4885db	                           test rbx, rbx	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400293a	            0x742c	                            je 0x4002968	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400293c	          0x4889df	                            mov rdi, rbx	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400293f	      0xe800000000	                          call 0x4002944	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x4002944	            0x85c0	                           test eax, eax	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002946	          0x4889d8	                            mov rax, rbx	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002949	    0x480f44050000	           cmove rax, qword [0x04002951]	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002951	      0xba01000000	                              mov edx, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002956	      0xbe01000000	                              mov esi, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400295b	          0x4889c7	                            mov rdi, rax	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400295e	      0xe800000000	                          call 0x4002963	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002963	      0xe9d5fcffff	                           jmp 0x400263d	      5008	buffer.c	FUNCTION_71	FOR_1
0x4002968	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5014	buffer.c	FUNCTION_71	IF_21
0x400296c	          0x4139c6	                           cmp r14d, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x400296f	            0x7c04	                            jl 0x4002975	      5014	buffer.c	FUNCTION_71	IF_21
0x4002971	            0x85c0	                           test eax, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x4002973	            0x7f05	                            jg 0x400297a	      5014	buffer.c	FUNCTION_71	IF_21
0x4002975	      0x448974244c	            mov dword [rsp + 0x4c], r14d	      5015	buffer.c	FUNCTION_71	IF_21
0x400297a	    0x830500000000	               add dword [0x04002981], 1	      5018	buffer.c	FUNCTION_71
0x4002981	    0x830500000000	               add dword [0x04002988], 1	      5019	buffer.c	FUNCTION_71
0x4002988	    0x488b05000000	            mov rax, qword [0x0400298f] 	      5020	buffer.c	FUNCTION_71
0x400298f	      0x4889442428	             mov qword [rsp + 0x28], rax	      5020	buffer.c	FUNCTION_71
0x4002994	    0x4c8b25000000	            mov r12, qword [0x0400299b] 	      5021	buffer.c	FUNCTION_71
0x400299b	      0xbe00000000	                              mov esi, 0	      5022	buffer.c	FUNCTION_71	CALL_23
0x40029a0	    0x488b3d000000	            mov rdi, qword [0x040029a7] 	      5022	buffer.c	FUNCTION_71	CALL_23
0x40029a7	      0xe800000000	                          call 0x40029ac	      5022	buffer.c	FUNCTION_71	CALL_23
0x40029ac	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029b1	            0x7448	                            je 0x40029fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029b3	    0x488b05000000	            mov rax, qword [0x040029ba] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029ba	        0x48833801	                      cmp qword [rax], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029be	            0x753b	                           jne 0x40029fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029c0	      0xbf01000000	                              mov edi, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029c5	      0xe800000000	                          call 0x40029ca	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029ca	          0x803800	                       cmp byte [rax], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029cd	            0x752c	                           jne 0x40029fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029cf	    0x488b05000000	            mov rax, qword [0x040029d6] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029d6	        0x83787801	               cmp dword [rax + 0x78], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029da	            0x751f	                           jne 0x40029fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40029dc	    0x4883b8880000	               cmp qword [rax + 0x88], 0	      5026	buffer.c	FUNCTION_71	IF_22
0x40029e4	            0x7515	                           jne 0x40029fb	      5026	buffer.c	FUNCTION_71	IF_22
0x40029e6	    0x83b8c8000000	               cmp dword [rax + 0xc8], 0	      5027	buffer.c	FUNCTION_71	IF_22
0x40029ed	      0xb801000000	                              mov eax, 1	      5027	buffer.c	FUNCTION_71	IF_22
0x40029f2	       0xf45442448	          cmovne eax, dword [rsp + 0x48]	      5027	buffer.c	FUNCTION_71	IF_22
0x40029f7	        0x89442448	             mov dword [rsp + 0x48], eax	      5027	buffer.c	FUNCTION_71	IF_22
0x40029fb	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a00	     0xf8e2d020000	                           jle 0x4002c33	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a06	          0x4585f6	                         test r14d, r14d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a09	     0xf8e24020000	                           jle 0x4002c33	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a0f	    0x8b0500000000	            mov eax, dword [0x04002a15] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a15	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a17	     0xf8516020000	                           jne 0x4002c33	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a1d	    0x41bd01000000	                             mov r13d, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a23	      0xbb00000000	                              mov ebx, 0	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a28	      0x44896c2408	               mov dword [rsp + 8], r13d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a2d	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a32	      0x4c89642410	             mov qword [rsp + 0x10], r12	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a37	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002a3c	    0x4981ff000000	                              cmp r15, 0	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a43	            0x7517	                           jne 0x4002a5c	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a45	    0x8b0500000000	            mov eax, dword [0x04002a4b] 	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a4b	          0x83e801	                              sub eax, 1	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a4e	            0x39d8	                            cmp eax, ebx	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a50	            0x750a	                           jne 0x4002a5c	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a52	    0xc70500000000	               mov dword [0x04002a5c], 1	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002a5c	          0x4863eb	                         movsxd rbp, ebx	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4002a5f	    0x41807c2d0000	                 cmp byte [r13 + rbp], 0	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4002a65	            0x746a	                            je 0x4002ad1	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4002a67	    0x488b35000000	            mov rsi, qword [0x04002a6e] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002a6e	    0x399e88010000	           cmp dword [rsi + 0x188], ebx 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002a74	     0xf8461010000	                            je 0x4002bdb	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002a7a	    0x488b3d000000	            mov rdi, qword [0x04002a81] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002a81	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002a84	     0xf8451010000	                            je 0x4002bdb	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002a8a	    0x399f88010000	           cmp dword [rdi + 0x188], ebx 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002a90	            0x7531	                           jne 0x4002ac3	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002a92	            0xeb08	                           jmp 0x4002a9c	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002a94	    0x399f88010000	           cmp dword [rdi + 0x188], ebx 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002a9a	            0x7527	                           jne 0x4002ac3	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002a9c	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002aa1	            0x7416	                            je 0x4002ab9	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002aa3	    0x488b05000000	            mov rax, qword [0x04002aaa] 	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002aaa	      0x4889442450	             mov qword [rsp + 0x50], rax	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002aaf	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002ab4	      0xe922010000	                           jmp 0x4002bdb	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002ab9	      0xe800000000	                          call 0x4002abe	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x4002abe	      0xe918010000	                           jmp 0x4002bdb	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x4002ac3	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002ac7	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002aca	            0x75c8	                           jne 0x4002a94	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002acc	      0xe90a010000	                           jmp 0x4002bdb	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002ad1	      0x837c240801	                  cmp dword [rsp + 8], 1	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4002ad6	     0xf85ff000000	                           jne 0x4002bdb	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4002adc	      0x837c244800	               cmp dword [rsp + 0x48], 0	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002ae1	            0x753b	                           jne 0x4002b1e	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002ae3	    0x8b0500000000	            mov eax, dword [0x04002ae9] 	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002ae9	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002aed	    0xc70500000000	               mov dword [0x04002af7], 1	      5059	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002af7	      0xbe21000000	                           mov esi, 0x21	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4002afc	      0xbf00000000	                              mov edi, 0	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4002b01	      0xe800000000	                          call 0x4002b06	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4002b06	        0x89442408	                mov dword [rsp + 8], eax	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4002b0a	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002b0e	    0x890d00000000	            mov dword [0x04002b14], ecx 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4002b14	            0x85c0	                           test eax, eax	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4002b16	     0xf84e8000000	                            je 0x4002c04	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4002b1c	            0xeb07	                           jmp 0x4002b25	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4002b1e	    0x832d00000000	               sub dword [0x04002b25], 1	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4002b25	    0x488b05000000	            mov rax, qword [0x04002b2c] 	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4002b2c	      0x4889442430	             mov qword [rsp + 0x30], rax	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4002b31	    0x899888010000	            mov dword [rax + 0x188], ebx	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4002b37	            0x85db	                           test ebx, ebx	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4002b39	            0x7511	                           jne 0x4002b4c	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4002b3b	    0x488b0d000000	            mov rcx, qword [0x04002b42] 	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4002b42	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4002b47	      0x4889442440	             mov qword [rsp + 0x40], rax	      5074	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4002b4c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4002b51	        0x488b4008	                mov rax, qword [rax + 8]	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4002b55	      0x4889442438	             mov qword [rsp + 0x38], rax	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4002b5a	          0x4889c7	                            mov rdi, rax	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4002b5d	      0xe800000000	                          call 0x4002b62	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4002b62	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b6a	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b6c	            0x7516	                           jne 0x4002b84	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b6e	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b73	      0xe800000000	                          call 0x4002b78	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b78	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b7a	           0xf95c0	                                setne al	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b7d	           0xfb6c0	                           movzx eax, al	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b80	        0x8944241c	             mov dword [rsp + 0x1c], eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4002b84	          0x4889ef	                            mov rdi, rbp	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b87	        0x48c1e704	                              shl rdi, 4	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b8b	        0x49037f10	             add rdi, qword [r15 + 0x10]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b8f	      0xe800000000	                          call 0x4002b94	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b94	        0x4883ec08	                              sub rsp, 8	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b98	        0xff742438	                 push qword [rsp + 0x38]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002b9c	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002ba0	        0x448d4904	                      lea r9d, [rcx + 4]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002ba4	    0x41b801000000	                              mov r8d, 1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002baa	      0xb900000000	                              mov ecx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002baf	      0xba00000000	                              mov edx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002bb4	          0x4889c6	                            mov rsi, rax	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002bb7	      0xbf00000000	                              mov edi, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002bbc	      0xe800000000	                          call 0x4002bc1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4002bc1	        0x4883c410	                           add rsp, 0x10	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4002bc5	      0x837c244800	               cmp dword [rsp + 0x48], 0	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4002bca	            0x740f	                            je 0x4002bdb	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4002bcc	    0x830500000000	               add dword [0x04002bd3], 1	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4002bd3	    0xc74424480000	               mov dword [rsp + 0x48], 0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4002bdb	      0xe800000000	                          call 0x4002be0	      5086	buffer.c	FUNCTION_71	FOR_4	CALL_32
0x4002be0	          0x4585e4	                         test r12d, r12d	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002be3	            0x7e1f	                           jle 0x4002c04	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002be5	      0xbf00000000	                              mov edi, 0	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002bea	      0xe800000000	                          call 0x4002bef	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002bef	            0x4898	                                    cdqe	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002bf1	    0x483b05000000	            cmp rax, qword [0x04002bf8] 	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002bf8	            0x7f0a	                            jg 0x4002c04	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002bfa	    0xc70500000000	         mov dword [0x04002c04], 0x270f 	      5090	buffer.c	FUNCTION_71	FOR_4	IF_33
0x4002c04	          0x83c301	                              add ebx, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c07	        0x395c244c	            cmp dword [rsp + 0x4c], ebx 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c0b	            0x7e1a	                           jle 0x4002c27	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c0d	          0x4139de	                           cmp r14d, ebx	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c10	            0x7e1c	                           jle 0x4002c2e	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c12	    0x8b0500000000	            mov eax, dword [0x04002c18] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c18	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c1a	     0xf841cfeffff	                            je 0x4002a3c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c20	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c25	            0xeb0c	                           jmp 0x4002c33	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c27	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c2c	            0xeb05	                           jmp 0x4002c33	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c2e	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002c33	          0x4c89ff	                            mov rdi, r15	      5094	buffer.c	FUNCTION_71	CALL_34
0x4002c36	      0xe800000000	                          call 0x4002c3b	      5094	buffer.c	FUNCTION_71	CALL_34
0x4002c3b	    0x832d00000000	               sub dword [0x04002c42], 1	      5096	buffer.c	FUNCTION_71
0x4002c42	      0x4c3b642450	            cmp r12, qword [rsp + 0x50] 	      5099	buffer.c	FUNCTION_71	IF_34
0x4002c47	            0x743b	                            je 0x4002c84	      5099	buffer.c	FUNCTION_71	IF_34
0x4002c49	          0x4c89e7	                            mov rdi, r12	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002c4c	      0xe800000000	                          call 0x4002c51	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002c51	            0x85c0	                           test eax, eax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002c53	            0x7412	                            je 0x4002c67	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002c55	      0xba01000000	                              mov edx, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x4002c5a	      0xbe01000000	                              mov esi, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x4002c5f	          0x4c89e7	                            mov rdi, r12	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x4002c62	      0xe800000000	                          call 0x4002c67	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x4002c67	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002c6c	      0xe800000000	                          call 0x4002c71	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002c71	            0x85c0	                           test eax, eax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002c73	            0x740f	                            je 0x4002c84	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002c75	      0xbe00000000	                              mov esi, 0	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x4002c7a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x4002c7f	      0xe800000000	                          call 0x4002c84	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x4002c84	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002c89	      0xe800000000	                          call 0x4002c8e	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002c8e	            0x85c0	                           test eax, eax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002c90	            0x7414	                            je 0x4002ca6	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002c92	      0xba01000000	                              mov edx, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x4002c97	      0xbe01000000	                              mov esi, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x4002c9c	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      5108	buffer.c	FUNCTION_71	CALL_40
0x4002ca1	      0xe800000000	                          call 0x4002ca6	      5108	buffer.c	FUNCTION_71	CALL_40
0x4002ca6	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002cab	      0xe800000000	                          call 0x4002cb0	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002cb0	            0x85c0	                           test eax, eax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002cb2	            0x740f	                            je 0x4002cc3	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002cb4	      0xbe00000000	                              mov esi, 0	      5110	buffer.c	FUNCTION_71	CALL_42
0x4002cb9	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5110	buffer.c	FUNCTION_71	CALL_42
0x4002cbe	      0xe800000000	                          call 0x4002cc3	      5110	buffer.c	FUNCTION_71	CALL_42
0x4002cc3	    0x832d00000000	               sub dword [0x04002cca], 1	      5112	buffer.c	FUNCTION_71
0x4002cca	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5113	buffer.c	FUNCTION_71	CALL_43
0x4002ccf	      0xe800000000	                          call 0x4002cd4	      5113	buffer.c	FUNCTION_71	CALL_43
0x4002cd4	      0xe9c4000000	                           jmp 0x4002d9d	      5113	buffer.c	FUNCTION_71	CALL_43
0x4002cd9	      0x488b442408	                mov rax, qword [rsp + 8]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002cde	    0xc78088010000	              mov dword [rax + 0x188], 0	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ce8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ced	      0x4889442408	                mov qword [rsp + 8], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002cf2	      0xe928fcffff	                           jmp 0x400291f	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002cf7	      0xbb00000000	                              mov ebx, 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002cfc	          0x4585f6	                         test r14d, r14d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002cff	     0xf8fbcf9ffff	                            jg 0x40026c1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002d05	            0xebd2	                           jmp 0x4002cd9	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002d07	      0x488b442408	                mov rax, qword [rsp + 8]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d0c	    0x4489b0880100	           mov dword [rax + 0x188], r14d	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d13	      0xe9b1faffff	                           jmp 0x40027c9	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d18	    0x488b05000000	            mov rax, qword [0x04002d1f] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d1f	    0x483905000000	            cmp qword [0x04002d26], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d26	     0xf8564fbffff	                           jne 0x4002890	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d2c	            0xeb28	                           jmp 0x4002d56	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d2e	    0x488b05000000	            mov rax, qword [0x04002d35] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d35	    0x483905000000	            cmp qword [0x04002d3c], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d3c	            0x7439	                            je 0x4002d77	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d3e	      0xbb00000000	                              mov ebx, 0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d43	      0xe958fbffff	                           jmp 0x40028a0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d48	          0x4889ef	                            mov rdi, rbp	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002d4b	      0xe800000000	                          call 0x4002d50	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002d50	            0x85c0	                           test eax, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002d52	            0x74c4	                            je 0x4002d18	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002d54	            0xebd8	                           jmp 0x4002d2e	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002d56	    0x488b05000000	            mov rax, qword [0x04002d5d] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d5d	        0x48833800	                      cmp qword [rax], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d61	     0xf8492fbffff	                            je 0x40028f9	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d67	      0x837c243800	               cmp dword [rsp + 0x38], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d6c	     0xf8487fbffff	                            je 0x40028f9	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d72	      0xe919fbffff	                           jmp 0x4002890	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d77	    0x488b05000000	            mov rax, qword [0x04002d7e] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d7e	        0x48833800	                      cmp qword [rax], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d82	     0xf8485fbffff	                            je 0x400290d	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d88	      0xbb00000000	                              mov ebx, 0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d8d	      0x837c243800	               cmp dword [rsp + 0x38], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d92	     0xf8508fbffff	                           jne 0x40028a0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d98	      0xe970fbffff	                           jmp 0x400290d	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d9d	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5114	buffer.c	FUNCTION_71
0x4002da2	    0x644833042528	                xor rax, qword fs:[0x28]	      5114	buffer.c	FUNCTION_71
0x4002dab	            0x7405	                            je 0x4002db2	      5114	buffer.c	FUNCTION_71
0x4002dad	      0xe800000000	                          call 0x4002db2	      5114	buffer.c	FUNCTION_71
0x4002db2	    0x4881c4880000	                           add rsp, 0x88	      5114	buffer.c	FUNCTION_71
0x4002db9	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0x4002dba	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0x4002dbb	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0x4002dbd	            0x415d	                                 pop r13	      5114	buffer.c	FUNCTION_71
0x4002dbf	            0x415e	                                 pop r14	      5114	buffer.c	FUNCTION_71
0x4002dc1	            0x415f	                                 pop r15	      5114	buffer.c	FUNCTION_71
0x4002dc3	              0xc3	                                     ret	      5114	buffer.c	FUNCTION_71
goto_buffer	CALL,6:IF,1:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0:functions,0	52
0x4008a24	            0x4155	                                push r13	       965	buffer.c	FUNCTION_15
0x4008a26	            0x4154	                                push r12	       965	buffer.c	FUNCTION_15
0x4008a28	              0x55	                                push rbp	       965	buffer.c	FUNCTION_15
0x4008a29	              0x53	                                push rbx	       965	buffer.c	FUNCTION_15
0x4008a2a	        0x4883ec38	                           sub rsp, 0x38	       965	buffer.c	FUNCTION_15
0x4008a2e	          0x4889fb	                            mov rbx, rdi	       965	buffer.c	FUNCTION_15
0x4008a31	            0x89f5	                            mov ebp, esi	       965	buffer.c	FUNCTION_15
0x4008a33	          0x4189d4	                           mov r12d, edx	       965	buffer.c	FUNCTION_15
0x4008a36	          0x4189cd	                           mov r13d, ecx	       965	buffer.c	FUNCTION_15
0x4008a39	    0x64488b042528	                mov rax, qword fs:[0x28]	       965	buffer.c	FUNCTION_15
0x4008a42	      0x4889442428	             mov qword [rsp + 0x28], rax	       965	buffer.c	FUNCTION_15
0x4008a47	            0x31c0	                            xor eax, eax	       965	buffer.c	FUNCTION_15
0x4008a49	    0x488b35000000	            mov rsi, qword [0x04008a50] 	       969	buffer.c	FUNCTION_15	CALL_1
0x4008a50	          0x4889e7	                            mov rdi, rsp	       969	buffer.c	FUNCTION_15	CALL_1
0x4008a53	      0xe800000000	                          call 0x4008a58	       969	buffer.c	FUNCTION_15	CALL_1
0x4008a58	    0xc70500000000	               mov dword [0x04008a62], 1	       971	buffer.c	FUNCTION_15
0x4008a62	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a66	          0x803873	                    cmp byte [rax], 0x73	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a69	        0x400f94c7	                                sete dil	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a6d	        0x400fb6ff	                          movzx edi, dil	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a71	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a75	          0x4489e9	                           mov ecx, r13d	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a78	          0x4489e2	                           mov edx, r12d	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a7b	            0x89ee	                            mov esi, ebp	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a7d	      0xe800000000	                          call 0x4008a82	       973	buffer.c	FUNCTION_15	CALL_2
0x4008a82	    0x833d00000000	               cmp dword [0x04008a89], 2	       976	buffer.c	FUNCTION_15	IF_1
0x4008a89	            0x7544	                           jne 0x4008acf	       976	buffer.c	FUNCTION_15	IF_1
0x4008a8b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       976	buffer.c	FUNCTION_15	IF_1
0x4008a8f	          0x803873	                    cmp byte [rax], 0x73	       976	buffer.c	FUNCTION_15	IF_1
0x4008a92	            0x753b	                           jne 0x4008acf	       976	buffer.c	FUNCTION_15	IF_1
0x4008a94	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x4008a99	      0xe800000000	                          call 0x4008a9e	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x4008a9e	      0xbe01000000	                              mov esi, 1	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x4008aa3	    0x488b3d000000	            mov rdi, qword [0x04008aaa] 	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x4008aaa	      0xe800000000	                          call 0x4008aaf	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x4008aaf	    0xc70500000000	               mov dword [0x04008ab9], 0	       988	buffer.c	FUNCTION_15	IF_1
0x4008ab9	    0xc70500000000	               mov dword [0x04008ac3], 1	       989	buffer.c	FUNCTION_15	IF_1
0x4008ac3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x4008ac8	      0xe800000000	                          call 0x4008acd	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x4008acd	            0xeb08	                           jmp 0x4008ad7	       977	buffer.c	FUNCTION_15	IF_1
0x4008acf	          0x4889e7	                            mov rdi, rsp	       998	buffer.c	FUNCTION_15	CALL_6
0x4008ad2	      0xe800000000	                          call 0x4008ad7	       998	buffer.c	FUNCTION_15	CALL_6
0x4008ad7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1000	buffer.c	FUNCTION_15
0x4008adc	    0x644833042528	                xor rax, qword fs:[0x28]	      1000	buffer.c	FUNCTION_15
0x4008ae5	            0x7405	                            je 0x4008aec	      1000	buffer.c	FUNCTION_15
0x4008ae7	      0xe800000000	                          call 0x4008aec	      1000	buffer.c	FUNCTION_15
0x4008aec	        0x4883c438	                           add rsp, 0x38	      1000	buffer.c	FUNCTION_15
0x4008af0	              0x5b	                                 pop rbx	      1000	buffer.c	FUNCTION_15
0x4008af1	              0x5d	                                 pop rbp	      1000	buffer.c	FUNCTION_15
0x4008af2	            0x415c	                                 pop r12	      1000	buffer.c	FUNCTION_15
0x4008af4	            0x415d	                                 pop r13	      1000	buffer.c	FUNCTION_15
0x4008af6	              0xc3	                                     ret	      1000	buffer.c	FUNCTION_15
do_modelines	CALL,2:IF,4:SWITCH,0:ELSE,0:WHILE,0:FOR,2:DO,0:functions,0	72
0x40021b5	    0x488b05000000	            mov rax, qword [0x040021bc] 	      5340	buffer.c	FUNCTION_73	IF_1
0x40021bc	    0x83b838150000	             cmp dword [rax + 0x1538], 0	      5340	buffer.c	FUNCTION_73	IF_1
0x40021c3	     0xf84e7000000	                            je 0x40022b0	      5340	buffer.c	FUNCTION_73	IF_1
0x40021c9	            0x4156	                                push r14	      5335	buffer.c	FUNCTION_73
0x40021cb	            0x4155	                                push r13	      5335	buffer.c	FUNCTION_73
0x40021cd	            0x4154	                                push r12	      5335	buffer.c	FUNCTION_73
0x40021cf	              0x55	                                push rbp	      5335	buffer.c	FUNCTION_73
0x40021d0	              0x53	                                push rbx	      5335	buffer.c	FUNCTION_73
0x40021d1	    0x488b15000000	            mov rdx, qword [0x040021d8] 	      5340	buffer.c	FUNCTION_73	IF_1
0x40021d8	            0x89d5	                            mov ebp, edx	      5340	buffer.c	FUNCTION_73	IF_1
0x40021da	            0x85d2	                           test edx, edx	      5340	buffer.c	FUNCTION_73	IF_1
0x40021dc	     0xf84c6000000	                            je 0x40022a8	      5340	buffer.c	FUNCTION_73	IF_1
0x40021e2	    0x833d00000000	               cmp dword [0x040021e9], 0	      5345	buffer.c	FUNCTION_73	IF_2
0x40021e9	     0xf85b9000000	                           jne 0x40022a8	      5345	buffer.c	FUNCTION_73	IF_2
0x40021ef	    0xc70500000000	               mov dword [0x040021f9], 1	      5348	buffer.c	FUNCTION_73
0x40021f9	          0x488b18	                    mov rbx, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x40021fc	          0x4885db	                           test rbx, rbx	      5349	buffer.c	FUNCTION_73	FOR_1
0x40021ff	     0xf8e9c000000	                           jle 0x40022a1	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002205	          0x4189fd	                           mov r13d, edi	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002208	            0x85d2	                           test edx, edx	      5349	buffer.c	FUNCTION_73	FOR_1
0x400220a	            0x7e35	                           jle 0x4002241	      5349	buffer.c	FUNCTION_73	FOR_1
0x400220c	    0x41bc01000000	                             mov r12d, 1	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002212	    0x41be00000000	                             mov r14d, 0	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x4002218	          0x4489ee	                           mov esi, r13d	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400221b	          0x4c89e7	                            mov rdi, r12	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400221e	      0xe86ce3ffff	                   call sym.chk_modeline	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x4002223	            0x85c0	                           test eax, eax	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x4002225	        0x410f44ee	                         cmove ebp, r14d	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x4002229	        0x4983c401	                              add r12, 1	      5350	buffer.c	FUNCTION_73	FOR_1
0x400222d	    0x488b05000000	            mov rax, qword [0x04002234] 	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002234	          0x488b18	                    mov rbx, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002237	          0x4c39e3	                            cmp rbx, r12	      5349	buffer.c	FUNCTION_73	FOR_1
0x400223a	            0x7d27	                           jge 0x4002263	      5349	buffer.c	FUNCTION_73	FOR_1
0x400223c	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400223f	            0x7e60	                           jle 0x40022a1	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002241	          0x4863d5	                         movsxd rdx, ebp	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002244	          0x4839da	                            cmp rdx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002247	            0x7d58	                           jge 0x40022a1	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002249	    0x488b05000000	            mov rax, qword [0x04002250] 	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002250	          0x488b00	                    mov rax, qword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002253	          0x4829d0	                            sub rax, rdx	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002256	    0x41bc00000000	                             mov r12d, 0	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400225c	          0x4839d8	                            cmp rax, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400225f	            0x7c0c	                            jl 0x400226d	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002261	            0xeb3e	                           jmp 0x40022a1	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002263	          0x4863c5	                         movsxd rax, ebp	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002266	          0x4c39e0	                            cmp rax, r12	      5349	buffer.c	FUNCTION_73	FOR_1
0x4002269	            0x7dad	                           jge 0x4002218	      5349	buffer.c	FUNCTION_73	FOR_1
0x400226b	            0xebcf	                           jmp 0x400223c	      5349	buffer.c	FUNCTION_73	FOR_1
0x400226d	          0x4489ee	                           mov esi, r13d	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x4002270	          0x4889df	                            mov rdi, rbx	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x4002273	      0xe817e3ffff	                   call sym.chk_modeline	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x4002278	            0x85c0	                           test eax, eax	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400227a	        0x410f44ec	                         cmove ebp, r12d	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400227e	        0x4883eb01	                              sub rbx, 1	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002282	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002285	            0x7e1a	                           jle 0x40022a1	      5354	buffer.c	FUNCTION_73	FOR_2
0x4002287	          0x4863d5	                         movsxd rdx, ebp	      5354	buffer.c	FUNCTION_73	FOR_2
0x400228a	          0x4839da	                            cmp rdx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400228d	            0x7d12	                           jge 0x40022a1	      5354	buffer.c	FUNCTION_73	FOR_2
0x400228f	    0x488b05000000	            mov rax, qword [0x04002296] 	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002296	          0x488b00	                    mov rax, qword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x4002299	          0x4829d0	                            sub rax, rdx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400229c	          0x4839d8	                            cmp rax, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400229f	            0x7ccc	                            jl 0x400226d	      5355	buffer.c	FUNCTION_73	FOR_2
0x40022a1	    0x832d00000000	               sub dword [0x040022a8], 1	      5358	buffer.c	FUNCTION_73
0x40022a8	              0x5b	                                 pop rbx	      5359	buffer.c	FUNCTION_73
0x40022a9	              0x5d	                                 pop rbp	      5359	buffer.c	FUNCTION_73
0x40022aa	            0x415c	                                 pop r12	      5359	buffer.c	FUNCTION_73
0x40022ac	            0x415d	                                 pop r13	      5359	buffer.c	FUNCTION_73
0x40022ae	            0x415e	                                 pop r14	      5359	buffer.c	FUNCTION_73
0x40022b0	            0xf3c3	                                     ret	      5359	buffer.c	FUNCTION_73
read_buffer	CALL,8:IF,5:SWITCH,0:ELSE,2:WHILE,2:FOR,0:DO,0:functions,0	87
0x4000040	              0x55	                                push rbp	        73	buffer.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        73	buffer.c	FUNCTION_1
0x4000042	        0x4883ec18	                           sub rsp, 0x18	        73	buffer.c	FUNCTION_1
0x4000046	            0x89fd	                            mov ebp, edi	        73	buffer.c	FUNCTION_1
0x4000048	          0x4989f1	                             mov r9, rsi	        73	buffer.c	FUNCTION_1
0x400004b	    0x64488b042528	                mov rax, qword fs:[0x28]	        73	buffer.c	FUNCTION_1
0x4000054	      0x4889442408	                mov qword [rsp + 8], rax	        73	buffer.c	FUNCTION_1
0x4000059	            0x31c0	                            xor eax, eax	        73	buffer.c	FUNCTION_1
0x400005b	    0xc74424040100	                  mov dword [rsp + 4], 1	        74	buffer.c	FUNCTION_1
0x4000063	    0x488b05000000	            mov rax, qword [0x0400006a] 	        82	buffer.c	FUNCTION_1
0x400006a	          0x488b18	                    mov rbx, qword [rax]	        82	buffer.c	FUNCTION_1
0x400006d	          0x83ca08	                               or edx, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4000070	            0x85ff	                           test edi, edi	        83	buffer.c	FUNCTION_1	CALL_1
0x4000072	            0x7510	                           jne 0x4000084	        83	buffer.c	FUNCTION_1	CALL_1
0x4000074	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	        83	buffer.c	FUNCTION_1	CALL_1
0x400007b	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	        83	buffer.c	FUNCTION_1	CALL_1
0x4000082	            0xeb0a	                           jmp 0x400008e	        83	buffer.c	FUNCTION_1	CALL_1
0x4000084	      0xbe00000000	                              mov esi, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x4000089	      0xbf00000000	                              mov edi, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x400008e	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4000092	              0x52	                                push rdx	        83	buffer.c	FUNCTION_1	CALL_1
0x4000093	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x4000099	      0xb900000000	                              mov ecx, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x400009e	          0x4889da	                            mov rdx, rbx	        83	buffer.c	FUNCTION_1	CALL_1
0x40000a1	      0xe800000000	                          call 0x40000a6	        83	buffer.c	FUNCTION_1	CALL_1
0x40000a6	        0x89442414	             mov dword [rsp + 0x14], eax	        83	buffer.c	FUNCTION_1	CALL_1
0x40000aa	        0x4883c410	                           add rsp, 0x10	        88	buffer.c	FUNCTION_1	IF_1
0x40000ae	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0x40000b1	            0x740e	                            je 0x40000c1	        88	buffer.c	FUNCTION_1	IF_1
0x40000b3	    0x488b05000000	            mov rax, qword [0x040000ba] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000ba	          0x483b18	                    cmp rbx, qword [rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000bd	            0x7c23	                            jl 0x40000e2	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000bf	            0xeb3a	                           jmp 0x40000fb	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000c1	        0x4883eb01	                              sub rbx, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000c5	            0x7834	                            js 0x40000fb	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000c7	      0xbe00000000	                              mov esi, 0	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000cc	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000d1	      0xe800000000	                          call 0x40000d6	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40000d6	        0x4883eb01	                              sub rbx, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000da	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000de	            0x75e7	                           jne 0x40000c7	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000e0	            0xeb19	                           jmp 0x40000fb	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40000e2	      0xbe00000000	                              mov esi, 0	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000e7	          0x4889df	                            mov rdi, rbx	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000ea	      0xe800000000	                          call 0x40000ef	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000ef	    0x488b05000000	            mov rax, qword [0x040000f6] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000f6	          0x483b18	                    cmp rbx, qword [rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000f9	            0x7ce7	                            jl 0x40000e2	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000fb	    0x488b05000000	            mov rax, qword [0x04000102] 	       101	buffer.c	FUNCTION_1
0x4000102	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0x400010a	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x4000111	            0x85ed	                           test ebp, ebp	       104	buffer.c	FUNCTION_1	IF_2
0x4000113	            0x7470	                            je 0x4000185	       104	buffer.c	FUNCTION_1	IF_2
0x4000115	    0x833d00000000	               cmp dword [0x0400011c], 0	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400011c	            0x7523	                           jne 0x4000141	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400011e	    0x488b05000000	            mov rax, qword [0x04000125] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000125	        0x48833801	                      cmp qword [rax], 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000129	            0x750f	                           jne 0x400013a	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400012b	      0xbf01000000	                              mov edi, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000130	      0xe800000000	                          call 0x4000135	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000135	          0x803800	                       cmp byte [rax], 0	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000138	            0x7407	                            je 0x4000141	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400013a	      0xe800000000	                          call 0x400013f	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x400013f	            0xeb18	                           jmp 0x4000159	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x4000141	      0x837c240401	                  cmp dword [rsp + 4], 1	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000146	            0x753d	                           jne 0x4000185	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000148	      0xbe00000000	                              mov esi, 0	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x400014d	    0x488b3d000000	            mov rdi, qword [0x04000154] 	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000154	      0xe800000000	                          call 0x4000159	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000159	      0x837c240401	                  cmp dword [rsp + 4], 1	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x400015e	            0x7525	                           jne 0x4000185	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4000160	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000165	    0x4c8b05000000	              mov r8, qword [0x0400016c]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x400016c	      0xb900000000	                              mov ecx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000171	      0xba00000000	                              mov edx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000176	      0xbe00000000	                              mov esi, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x400017b	      0xbf49000000	                           mov edi, 0x49	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000180	      0xe800000000	                          call 0x4000185	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000185	        0x8b442404	                mov eax, dword [rsp + 4]	       124	buffer.c	FUNCTION_1
0x4000189	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       124	buffer.c	FUNCTION_1
0x400018e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       124	buffer.c	FUNCTION_1
0x4000197	            0x7405	                            je 0x400019e	       124	buffer.c	FUNCTION_1
0x4000199	      0xe800000000	                          call 0x400019e	       124	buffer.c	FUNCTION_1
0x400019e	        0x4883c418	                           add rsp, 0x18	       124	buffer.c	FUNCTION_1
0x40001a2	              0x5b	                                 pop rbx	       124	buffer.c	FUNCTION_1
0x40001a3	              0x5d	                                 pop rbp	       124	buffer.c	FUNCTION_1
0x40001a4	              0xc3	                                     ret	       124	buffer.c	FUNCTION_1
buflist_findname_exp	CALL,3:IF,1:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	20
0x4001ec6	              0x55	                                push rbp	      2361	buffer.c	FUNCTION_30
0x4001ec7	              0x53	                                push rbx	      2361	buffer.c	FUNCTION_30
0x4001ec8	        0x4883ec08	                              sub rsp, 8	      2361	buffer.c	FUNCTION_30
0x4001ecc	      0xbe01000000	                              mov esi, 1	      2366	buffer.c	FUNCTION_30	CALL_1
0x4001ed1	      0xe800000000	                          call 0x4001ed6	      2366	buffer.c	FUNCTION_30	CALL_1
0x4001ed6	          0x4885c0	                           test rax, rax	      2373	buffer.c	FUNCTION_30	IF_1
0x4001ed9	            0x7418	                            je 0x4001ef3	      2373	buffer.c	FUNCTION_30	IF_1
0x4001edb	          0x4889c3	                            mov rbx, rax	      2373	buffer.c	FUNCTION_30	IF_1
0x4001ede	          0x4889c7	                            mov rdi, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4001ee1	      0xe800000000	                          call 0x4001ee6	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4001ee6	          0x4889c5	                            mov rbp, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x4001ee9	          0x4889df	                            mov rdi, rbx	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4001eec	      0xe800000000	                          call 0x4001ef1	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4001ef1	            0xeb05	                           jmp 0x4001ef8	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x4001ef3	      0xbd00000000	                              mov ebp, 0	      2363	buffer.c	FUNCTION_30
0x4001ef8	          0x4889e8	                            mov rax, rbp	      2379	buffer.c	FUNCTION_30
0x4001efb	        0x4883c408	                              add rsp, 8	      2379	buffer.c	FUNCTION_30
0x4001eff	              0x5b	                                 pop rbx	      2379	buffer.c	FUNCTION_30
0x4001f00	              0x5d	                                 pop rbp	      2379	buffer.c	FUNCTION_30
0x4001f01	              0xc3	                                     ret	      2379	buffer.c	FUNCTION_30
bt_dontwrite	CALL,0:IF,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0:functions,0	13
0x40024b8	          0x4885ff	                           test rdi, rdi	      5639	buffer.c	FUNCTION_81
0x40024bb	            0x741c	                            je 0x40024d9	      5639	buffer.c	FUNCTION_81
0x40024bd	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x40024c4	           0xfb610	                   movzx edx, byte [rax]	      5639	buffer.c	FUNCTION_81
0x40024c7	          0x80fa6e	                            cmp dl, 0x6e	      5639	buffer.c	FUNCTION_81
0x40024ca	           0xf94c1	                                 sete cl	      5639	buffer.c	FUNCTION_81
0x40024cd	          0x80fa74	                            cmp dl, 0x74	      5639	buffer.c	FUNCTION_81
0x40024d0	           0xf94c0	                                 sete al	      5639	buffer.c	FUNCTION_81
0x40024d3	             0x9c8	                             or eax, ecx	      5639	buffer.c	FUNCTION_81
0x40024d5	           0xfb6c0	                           movzx eax, al	      5639	buffer.c	FUNCTION_81
0x40024d8	              0xc3	                                     ret	      5639	buffer.c	FUNCTION_81
0x40024d9	      0xb800000000	                              mov eax, 0	      5639	buffer.c	FUNCTION_81
0x40024de	              0xc3	                                     ret	      5640	buffer.c	FUNCTION_81
open_buffer	CALL,43:IF,22:SWITCH,0:ELSE,2:WHILE,0:FOR,0:DO,0:functions,0	294
0x40069db	            0x4157	                                push r15	       136	buffer.c	FUNCTION_2
0x40069dd	            0x4156	                                push r14	       136	buffer.c	FUNCTION_2
0x40069df	            0x4155	                                push r13	       136	buffer.c	FUNCTION_2
0x40069e1	            0x4154	                                push r12	       136	buffer.c	FUNCTION_2
0x40069e3	              0x55	                                push rbp	       136	buffer.c	FUNCTION_2
0x40069e4	              0x53	                                push rbx	       136	buffer.c	FUNCTION_2
0x40069e5	        0x4883ec78	                           sub rsp, 0x78	       136	buffer.c	FUNCTION_2
0x40069e9	            0x89fb	                            mov ebx, edi	       136	buffer.c	FUNCTION_2
0x40069eb	          0x4989f4	                            mov r12, rsi	       136	buffer.c	FUNCTION_2
0x40069ee	            0x89d5	                            mov ebp, edx	       136	buffer.c	FUNCTION_2
0x40069f0	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	buffer.c	FUNCTION_2
0x40069f9	      0x4889442468	             mov qword [rsp + 0x68], rax	       136	buffer.c	FUNCTION_2
0x40069fe	            0x31c0	                            xor eax, eax	       136	buffer.c	FUNCTION_2
0x4006a00	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       137	buffer.c	FUNCTION_2
0x4006a08	    0x488b3d000000	            mov rdi, qword [0x04006a0f] 	       140	buffer.c	FUNCTION_2
0x4006a0f	    0x4c8bafb81500	          mov r13, qword [rdi + 0x15b8] 	       140	buffer.c	FUNCTION_2
0x4006a16	    0x833d00000000	               cmp dword [0x04006a1d], 0	       149	buffer.c	FUNCTION_2	IF_1
0x4006a1d	            0x741a	                            je 0x4006a39	       149	buffer.c	FUNCTION_2	IF_1
0x4006a1f	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	       149	buffer.c	FUNCTION_2	IF_1
0x4006a27	            0x7410	                            je 0x4006a39	       149	buffer.c	FUNCTION_2	IF_1
0x4006a29	        0xf6477c04	               test byte [rdi + 0x7c], 4	       150	buffer.c	FUNCTION_2	IF_1
0x4006a2d	            0x740a	                            je 0x4006a39	       150	buffer.c	FUNCTION_2	IF_1
0x4006a2f	    0xc78760150000	            mov dword [rdi + 0x1560], 1 	       151	buffer.c	FUNCTION_2	IF_1
0x4006a39	      0xe800000000	                          call 0x4006a3e	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4006a3e	          0x4189c6	                           mov r14d, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4006a41	            0x85c0	                           test eax, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4006a43	     0xf85b1000000	                           jne 0x4006afa	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4006a49	      0xb900000000	                              mov ecx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4006a4e	      0xba00000000	                              mov edx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4006a53	    0x488b35000000	            mov rsi, qword [0x04006a5a] 	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4006a5a	      0xbf00000000	                              mov edi, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4006a5f	      0xe800000000	                          call 0x4006a64	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4006a64	    0x488b05000000	            mov rax, qword [0x04006a6b] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a6b	    0x488905000000	            mov qword [0x04006a72], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a72	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a75	     0xf84c8030000	                            je 0x4006e43	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a7b	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a80	            0x7412	                            je 0x4006a94	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a82	            0xeb29	                           jmp 0x4006aad	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a84	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a89	            0x7409	                            je 0x4006a94	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a8b	    0x488905000000	            mov qword [0x04006a92], rax 	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a92	            0xeb19	                           jmp 0x4006aad	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4006a94	        0x488b4068	            mov rax, qword [rax + 0x68] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a98	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a9b	            0x75e7	                           jne 0x4006a84	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006a9d	    0x48c705000000	               mov qword [0x04006aa8], 0	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006aa8	      0xe996030000	                           jmp 0x4006e43	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4006aad	      0xba05000000	                              mov edx, 5	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006ab2	      0xbe00000000	                              mov esi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006ab7	      0xbf00000000	                              mov edi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006abc	      0xe800000000	                          call 0x4006ac1	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006ac1	          0x4889c7	                            mov rdi, rax	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006ac4	      0xe800000000	                          call 0x4006ac9	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4006ac9	    0x488b3d000000	            mov rdi, qword [0x04006ad0] 	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4006ad0	      0xe800000000	                          call 0x4006ad5	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4006ad5	    0x488b05000000	            mov rax, qword [0x04006adc] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4006adc	    0x4c3ba8b81500	          cmp r13, qword [rax + 0x15b8] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4006ae3	     0xf843e030000	                            je 0x4006e27	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4006ae9	    0x488b3d000000	            mov rdi, qword [0x04006af0] 	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4006af0	      0xe800000000	                          call 0x4006af5	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4006af5	      0xe92d030000	                           jmp 0x4006e27	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4006afa	    0x488b35000000	            mov rsi, qword [0x04006b01] 	       183	buffer.c	FUNCTION_2	CALL_11
0x4006b01	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       183	buffer.c	FUNCTION_2	CALL_11
0x4006b06	      0xe800000000	                          call 0x4006b0b	       183	buffer.c	FUNCTION_2	CALL_11
0x4006b0b	    0xc70500000000	               mov dword [0x04006b15], 0	       184	buffer.c	FUNCTION_2
0x4006b15	    0x488b05000000	            mov rax, qword [0x04006b1c] 	       187	buffer.c	FUNCTION_2
0x4006b1c	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       187	buffer.c	FUNCTION_2
0x4006b26	    0x488b05000000	            mov rax, qword [0x04006b2d] 	       189	buffer.c	FUNCTION_2	IF_6
0x4006b2d	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       189	buffer.c	FUNCTION_2	IF_6
0x4006b34	          0x4885ff	                           test rdi, rdi	       189	buffer.c	FUNCTION_2	IF_6
0x4006b37	     0xf84d6000000	                            je 0x4006c13	       189	buffer.c	FUNCTION_2	IF_6
0x4006b3d	    0x833d00000000	               cmp dword [0x04006b44], 0	       191	buffer.c	FUNCTION_2	IF_6
0x4006b44	     0xf84c9000000	                            je 0x4006c13	       191	buffer.c	FUNCTION_2	IF_6
0x4006b4a	    0x448b35000000	           mov r14d, dword [0x04006b51] 	       195	buffer.c	FUNCTION_2	IF_6
0x4006b51	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       197	buffer.c	FUNCTION_2	IF_6
0x4006b57	        0x8944240c	              mov dword [rsp + 0xc], eax	       197	buffer.c	FUNCTION_2	IF_6
0x4006b5b	    0x448b3d000000	           mov r15d, dword [0x04006b62] 	       201	buffer.c	FUNCTION_2	IF_6
0x4006b62	    0xc70500000000	               mov dword [0x04006b6c], 0	       203	buffer.c	FUNCTION_2	IF_6
0x4006b6c	      0xe800000000	                          call 0x4006b71	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x4006b71	            0x85c0	                           test eax, eax	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4006b73	     0xf8895030000	                            js 0x4006f0e	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4006b79	      0x2500f00000	                         and eax, 0xf000	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x4006b7e	      0x3d00100000	                         cmp eax, 0x1000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4006b83	           0xf94c2	                                 sete dl	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4006b86	      0x3d00c00000	                         cmp eax, 0xc000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4006b8b	           0xf94c0	                                 sete al	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4006b8e	             0x9d0	                             or eax, edx	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x4006b90	        0x440fb6e8	                          movzx r13d, al	       142	buffer.c	FUNCTION_2
0x4006b94	            0x84c0	                             test al, al	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x4006b96	            0x7411	                            je 0x4006ba9	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x4006b98	    0x488b05000000	            mov rax, qword [0x04006b9f] 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4006b9f	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4006ba9	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006bae	      0xe800000000	                          call 0x4006bb3	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006bb3	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006bb5	            0x7412	                            je 0x4006bc9	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006bb7	            0xeb06	                           jmp 0x4006bbf	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006bb9	    0x41bd00000000	                             mov r13d, 0	       142	buffer.c	FUNCTION_2
0x4006bbf	    0xc70500000000	               mov dword [0x04006bc9], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x4006bc9	          0x4585ed	                         test r13d, r13d	       226	buffer.c	FUNCTION_2	IF_6
0x4006bcc	     0xf85de020000	                           jne 0x4006eb0	       226	buffer.c	FUNCTION_2	IF_6
0x4006bd2	      0xe997020000	                           jmp 0x4006e6e	       226	buffer.c	FUNCTION_2	IF_6
0x4006bd7	            0x89ea	                            mov edx, ebp	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4006bd9	          0x4c89e6	                            mov rsi, r12	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4006bdc	      0xbf00000000	                              mov edi, 0	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4006be1	      0xe85a94ffff	                    call sym.read_buffer	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4006be6	        0x8944241c	             mov dword [rsp + 0x1c], eax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4006bea	    0x448935000000	           mov dword [0x04006bf1], r14d 	       235	buffer.c	FUNCTION_2	IF_6
0x4006bf1	    0x44893d000000	           mov dword [0x04006bf8], r15d 	       237	buffer.c	FUNCTION_2	IF_6
0x4006bf8	    0x488b3d000000	            mov rdi, qword [0x04006bff] 	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4006bff	      0xe800000000	                          call 0x4006c04	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4006c04	            0x85c0	                           test eax, eax	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4006c06	     0xf8485000000	                            je 0x4006c91	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4006c0c	      0xe800000000	                          call 0x4006c11	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4006c11	            0xeb7e	                           jmp 0x4006c91	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4006c13	    0x41bd00000000	                             mov r13d, 0	       142	buffer.c	FUNCTION_2
0x4006c19	            0x85db	                           test ebx, ebx	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c1b	            0x7474	                            je 0x4006c91	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c1d	    0x448ba8081400	         mov r13d, dword [rax + 0x1408] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c24	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c2e	        0x4883ec08	                              sub rsp, 8	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c32	            0x89e8	                            mov eax, ebp	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c34	          0x83c805	                               or eax, 5	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c37	              0x50	                                push rax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c38	    0x41b900000000	                              mov r9d, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c3e	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c44	      0xb900000000	                              mov ecx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c49	      0xba00000000	                              mov edx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c4e	      0xbe00000000	                              mov esi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c53	      0xbf00000000	                              mov edi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c58	      0xe800000000	                          call 0x4006c5d	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c5d	        0x8944242c	             mov dword [rsp + 0x2c], eax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4006c61	    0x488b15000000	            mov rdx, qword [0x04006c68] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c68	    0x4489aa081400	         mov dword [rdx + 0x1408], r13d 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4006c6f	        0x4883c410	                           add rsp, 0x10	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4006c73	    0x41bd00000000	                             mov r13d, 0	       142	buffer.c	FUNCTION_2
0x4006c79	          0x83f801	                              cmp eax, 1	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4006c7c	            0x7513	                           jne 0x4006c91	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4006c7e	            0x89ea	                            mov edx, ebp	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4006c80	          0x4c89e6	                            mov rsi, r12	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4006c83	      0xbf01000000	                              mov edi, 1	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4006c88	      0xe8b393ffff	                    call sym.read_buffer	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4006c8d	        0x8944241c	             mov dword [rsp + 0x1c], eax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4006c91	    0x488b3d000000	            mov rdi, qword [0x04006c98] 	       263	buffer.c	FUNCTION_2	IF_15
0x4006c98	        0xf6477c04	               test byte [rdi + 0x7c], 4	       263	buffer.c	FUNCTION_2	IF_15
0x4006c9c	            0x7416	                            je 0x4006cb4	       263	buffer.c	FUNCTION_2	IF_15
0x4006c9e	      0xbe00000000	                              mov esi, 0	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4006ca3	      0xe800000000	                          call 0x4006ca8	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4006ca8	    0x488b3d000000	            mov rdi, qword [0x04006caf] 	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4006caf	      0xe800000000	                          call 0x4006cb4	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4006cb4	    0x8b0500000000	            mov eax, dword [0x04006cba] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cba	            0x85c0	                           test eax, eax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cbc	            0x7416	                            je 0x4006cd4	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cbe	      0xbe69000000	                           mov esi, 0x69	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cc3	    0x488b3d000000	            mov rdi, qword [0x04006cca] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cca	      0xe800000000	                          call 0x4006ccf	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006ccf	          0x4885c0	                           test rax, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cd2	            0x7528	                           jne 0x4006cfc	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4006cd4	    0x833d00000000	               cmp dword [0x04006cdb], 0	       280	buffer.c	FUNCTION_2	IF_16
0x4006cdb	            0x751f	                           jne 0x4006cfc	       280	buffer.c	FUNCTION_2	IF_16
0x4006cdd	      0xe800000000	                          call 0x4006ce2	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006ce2	            0x85c0	                           test eax, eax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006ce4	            0x741d	                            je 0x4006d03	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006ce6	      0xbe69000000	                           mov esi, 0x69	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006ceb	    0x488b3d000000	            mov rdi, qword [0x04006cf2] 	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006cf2	      0xe800000000	                          call 0x4006cf7	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006cf7	          0x4885c0	                           test rax, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006cfa	            0x7407	                            je 0x4006d03	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4006cfc	      0xe800000000	                          call 0x4006d01	       285	buffer.c	FUNCTION_2	CALL_29
0x4006d01	            0xeb27	                           jmp 0x4006d2a	       285	buffer.c	FUNCTION_2	CALL_29
0x4006d03	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d08	           0xf94c2	                                 sete dl	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d0b	            0x85db	                           test ebx, ebx	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d0d	           0xf94c0	                                 sete al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d10	            0x84c2	                             test dl, al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d12	            0x7416	                            je 0x4006d2a	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d14	          0x4585ed	                         test r13d, r13d	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d17	            0x7511	                           jne 0x4006d2a	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d19	      0xbe00000000	                              mov esi, 0	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d1e	    0x488b3d000000	            mov rdi, qword [0x04006d25] 	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d25	      0xe800000000	                          call 0x4006d2a	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4006d2a	    0x488b3d000000	            mov rdi, qword [0x04006d31] 	       288	buffer.c	FUNCTION_2	CALL_31
0x4006d31	      0xe800000000	                          call 0x4006d36	       288	buffer.c	FUNCTION_2	CALL_31
0x4006d36	    0x488b05000000	            mov rax, qword [0x04006d3d] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4006d3d	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4006d44	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       292	buffer.c	FUNCTION_2	CALL_32
0x4006d4b	    0x488990000100	            mov qword [rax + 0x100], rdx	       294	buffer.c	FUNCTION_2	CALL_33
0x4006d52	      0xe800000000	                          call 0x4006d57	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4006d57	            0x85c0	                           test eax, eax	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4006d59	            0x740b	                            je 0x4006d66	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4006d5b	    0x488b05000000	            mov rax, qword [0x04006d62] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4006d62	        0x83487c40	            or dword [rax + 0x7c], 0x40 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4006d66	    0x488b3d000000	            mov rdi, qword [0x04006d6d] 	       308	buffer.c	FUNCTION_2	CALL_35
0x4006d6d	      0xe800000000	                          call 0x4006d72	       308	buffer.c	FUNCTION_2	CALL_35
0x4006d72	    0x488b05000000	            mov rax, qword [0x04006d79] 	       312	buffer.c	FUNCTION_2	IF_20
0x4006d79	    0xf680b4000000	           test byte [rax + 0xb4], 0x80 	       312	buffer.c	FUNCTION_2	IF_20
0x4006d80	            0x7512	                           jne 0x4006d94	       312	buffer.c	FUNCTION_2	IF_20
0x4006d82	    0x48c740780100	               mov qword [rax + 0x78], 1	       314	buffer.c	FUNCTION_2	IF_20
0x4006d8a	    0xc78084000000	               mov dword [rax + 0x84], 0	       316	buffer.c	FUNCTION_2	IF_20
0x4006d94	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       320	buffer.c	FUNCTION_2	CALL_36
0x4006d99	    0x4c8b05000000	              mov r8, qword [0x04006da0]	       320	buffer.c	FUNCTION_2	CALL_36
0x4006da0	      0xb900000000	                              mov ecx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x4006da5	      0xba00000000	                              mov edx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x4006daa	      0xbe00000000	                              mov esi, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x4006daf	      0xbf02000000	                              mov edi, 2	       320	buffer.c	FUNCTION_2	CALL_36
0x4006db4	      0xe800000000	                          call 0x4006db9	       320	buffer.c	FUNCTION_2	CALL_36
0x4006db9	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       325	buffer.c	FUNCTION_2	IF_21
0x4006dbe	            0x7562	                           jne 0x4006e22	       325	buffer.c	FUNCTION_2	IF_21
0x4006dc0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dc5	      0xe800000000	                          call 0x4006dca	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dca	            0x85c0	                           test eax, eax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dcc	            0x7454	                            je 0x4006e22	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dce	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dd3	      0x48837e0800	                  cmp qword [rsi + 8], 0	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dd8	            0x7448	                            je 0x4006e22	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4006dda	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4006ddf	      0xe800000000	                          call 0x4006de4	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4006de4	      0xbf00000000	                              mov edi, 0	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x4006de9	      0xe800000000	                          call 0x4006dee	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x4006dee	    0x4c8b05000000	              mov r8, qword [0x04006df5]	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x4006df5	      0x4183607cf9	       and dword [r8 + 0x7c], 0xfffffff9	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x4006dfa	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006dff	      0xb900000000	                              mov ecx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006e04	      0xba00000000	                              mov edx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006e09	      0xbe00000000	                              mov esi, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006e0e	      0xbf0d000000	                            mov edi, 0xd	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006e13	      0xe800000000	                          call 0x4006e18	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4006e18	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x4006e1d	      0xe800000000	                          call 0x4006e22	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x4006e22	      0x448b74241c	           mov r14d, dword [rsp + 0x1c] 	       352	buffer.c	FUNCTION_2
0x4006e27	          0x4489f0	                           mov eax, r14d	       353	buffer.c	FUNCTION_2
0x4006e2a	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       353	buffer.c	FUNCTION_2
0x4006e2f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       353	buffer.c	FUNCTION_2
0x4006e38	     0xf84f2000000	                            je 0x4006f30	       353	buffer.c	FUNCTION_2
0x4006e3e	      0xe9e8000000	                           jmp 0x4006f2b	       353	buffer.c	FUNCTION_2
0x4006e43	      0xba05000000	                              mov edx, 5	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e48	      0xbe00000000	                              mov esi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e4d	      0xbf00000000	                              mov edi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e52	      0xe800000000	                          call 0x4006e57	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e57	          0x4889c7	                            mov rdi, rax	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e5a	      0xe800000000	                          call 0x4006e5f	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4006e5f	      0xbf02000000	                              mov edi, 2	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4006e64	      0xe800000000	                          call 0x4006e69	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4006e69	      0xe93ffcffff	                           jmp 0x4006aad	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4006e6e	    0x488b05000000	            mov rax, qword [0x04006e75] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e75	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e7c	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e83	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e87	          0x83cd01	                               or ebp, 1	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e8a	              0x55	                                push rbp	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e8b	          0x4d89e1	                             mov r9, r12	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e8e	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e94	      0xb900000000	                              mov ecx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e99	      0xba00000000	                              mov edx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006e9e	      0xe800000000	                          call 0x4006ea3	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ea3	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ea7	        0x4883c410	                           add rsp, 0x10	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006eab	      0xe93afdffff	                           jmp 0x4006bea	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006eb0	    0x488b05000000	            mov rax, qword [0x04006eb7] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006eb7	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ebe	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ec5	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ec9	            0x89e8	                            mov eax, ebp	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ecb	          0x83c841	                            or eax, 0x41	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ece	              0x50	                                push rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ecf	          0x4d89e1	                             mov r9, r12	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ed2	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ed8	      0xb900000000	                              mov ecx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006edd	      0xba00000000	                              mov edx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ee2	      0xe800000000	                          call 0x4006ee7	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006ee7	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4006eeb	    0x488b15000000	            mov rdx, qword [0x04006ef2] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4006ef2	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4006ef6	    0x898a08140000	          mov dword [rdx + 0x1408], ecx 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4006efc	        0x4883c410	                           add rsp, 0x10	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4006f00	          0x83f801	                              cmp eax, 1	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4006f03	     0xf85e1fcffff	                           jne 0x4006bea	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4006f09	      0xe9c9fcffff	                           jmp 0x4006bd7	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4006f0e	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006f13	      0xe800000000	                          call 0x4006f18	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006f18	    0x41bd00000000	                             mov r13d, 0	       142	buffer.c	FUNCTION_2
0x4006f1e	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006f20	     0xf8448ffffff	                            je 0x4006e6e	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006f26	      0xe98efcffff	                           jmp 0x4006bb9	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4006f2b	      0xe800000000	                          call 0x4006f30	       353	buffer.c	FUNCTION_2
0x4006f30	        0x4883c478	                           add rsp, 0x78	       353	buffer.c	FUNCTION_2
0x4006f34	              0x5b	                                 pop rbx	       353	buffer.c	FUNCTION_2
0x4006f35	              0x5d	                                 pop rbp	       353	buffer.c	FUNCTION_2
0x4006f36	            0x415c	                                 pop r12	       353	buffer.c	FUNCTION_2
0x4006f38	            0x415d	                                 pop r13	       353	buffer.c	FUNCTION_2
0x4006f3a	            0x415e	                                 pop r14	       353	buffer.c	FUNCTION_2
0x4006f3c	            0x415f	                                 pop r15	       353	buffer.c	FUNCTION_2
0x4006f3e	              0xc3	                                     ret	       353	buffer.c	FUNCTION_2
buflist_list	CALL,33:IF,7:SWITCH,0:ELSE,4:WHILE,0:FOR,1:DO,1:functions,0	299
0x4002f42	            0x4156	                                push r14	      2952	buffer.c	FUNCTION_45
0x4002f44	            0x4155	                                push r13	      2952	buffer.c	FUNCTION_45
0x4002f46	            0x4154	                                push r12	      2952	buffer.c	FUNCTION_45
0x4002f48	              0x55	                                push rbp	      2952	buffer.c	FUNCTION_45
0x4002f49	              0x53	                                push rbx	      2952	buffer.c	FUNCTION_45
0x4002f4a	    0x488b1d000000	            mov rbx, qword [0x04002f51] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f51	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f54	     0xf84cf040000	                            je 0x4003429	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f5a	    0x8b0500000000	            mov eax, dword [0x04002f60] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f60	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f62	     0xf85c1040000	                           jne 0x4003429	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f68	          0x4889fd	                            mov rbp, rdi	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f6b	    0x41bded030000	                         mov r13d, 0x3ed	      2963	buffer.c	FUNCTION_45	FOR_1
0x4002f71	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4002f78	      0xe800000000	                          call 0x4002f7d	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4002f7d	          0x4189c4	                           mov r12d, eax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4002f80	    0x41be00000000	                             mov r14d, 0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f86	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f88	            0x7416	                            je 0x4002fa0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f8a	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f91	      0xe800000000	                          call 0x4002f96	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f96	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f98	        0x410f95c6	                              setne r14b	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002f9c	        0x450fb6f6	                        movzx r14d, r14b	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4002fa0	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fa7	            0x751d	                           jne 0x4002fc6	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fa9	        0x837d3400	               cmp dword [rbp + 0x34], 0	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fad	            0x7517	                           jne 0x4002fc6	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002faf	      0xbe75000000	                           mov esi, 0x75	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fb4	        0x488b7d00	                    mov rdi, qword [rbp]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fb8	      0xe800000000	                          call 0x4002fbd	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fbd	          0x4885c0	                           test rax, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fc0	     0xf8404040000	                            je 0x40033ca	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4002fc6	      0xbe75000000	                           mov esi, 0x75	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fcb	        0x488b7d00	                    mov rdi, qword [rbp]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fcf	      0xe800000000	                          call 0x4002fd4	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fd4	          0x4885c0	                           test rax, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fd7	            0x740d	                            je 0x4002fe6	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fd9	    0x83bb24140000	             cmp dword [rbx + 0x1424], 0	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fe0	     0xf85e4030000	                           jne 0x40033ca	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4002fe6	      0xbe2b000000	                           mov esi, 0x2b	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4002feb	        0x488b7d00	                    mov rdi, qword [rbp]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4002fef	      0xe800000000	                          call 0x4002ff4	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4002ff4	          0x4885c0	                           test rax, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4002ff7	            0x741a	                            je 0x4003013	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4002ff9	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4002ffd	     0xf85c7030000	                           jne 0x40033ca	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003003	          0x4889df	                            mov rdi, rbx	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003006	      0xe800000000	                          call 0x400300b	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x400300b	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x400300d	     0xf84b7030000	                            je 0x40033ca	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003013	      0xbe61000000	                           mov esi, 0x61	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003018	        0x488b7d00	                    mov rdi, qword [rbp]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x400301c	      0xe800000000	                          call 0x4003021	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003021	          0x4885c0	                           test rax, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003024	            0x7415	                            je 0x400303b	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003026	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400302b	     0xf8499030000	                            je 0x40033ca	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003031	        0x837b7800	               cmp dword [rbx + 0x78], 0	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003035	     0xf848f030000	                            je 0x40033ca	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400303b	      0xbe68000000	                           mov esi, 0x68	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4003040	        0x488b7d00	                    mov rdi, qword [rbp]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4003044	      0xe800000000	                          call 0x4003049	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4003049	          0x4885c0	                           test rax, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x400304c	            0x7415	                            je 0x4003063	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x400304e	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003053	     0xf8471030000	                            je 0x40033ca	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003059	        0x837b7800	               cmp dword [rbx + 0x78], 0	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400305d	     0xf8567030000	                           jne 0x40033ca	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003063	      0xbe52000000	                           mov esi, 0x52	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4003068	        0x488b7d00	                    mov rdi, qword [rbp]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x400306c	      0xe800000000	                          call 0x4003071	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4003071	          0x4885c0	                           test rax, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4003074	            0x7417	                            je 0x400308d	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4003076	          0x4585e4	                         test r12d, r12d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003079	     0xf844b030000	                            je 0x40033ca	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400307f	          0x4585f6	                         test r14d, r14d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003082	     0xf8542030000	                           jne 0x40033ca	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003088	      0xe956030000	                           jmp 0x40033e3	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400308d	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4003092	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4003096	      0xe800000000	                          call 0x400309b	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400309b	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400309e	            0x7417	                            je 0x40030b7	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40030a0	          0x4585e4	                         test r12d, r12d	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030a3	     0xf8421030000	                            je 0x40033ca	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030a9	          0x4585f6	                         test r14d, r14d	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030ac	     0xf8546030000	                           jne 0x40033f8	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030b2	      0xe913030000	                           jmp 0x40033ca	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030b7	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40030bc	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40030c0	      0xe800000000	                          call 0x40030c5	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40030c5	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40030c8	            0x7417	                            je 0x40030e1	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40030ca	          0x4585e4	                         test r12d, r12d	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030cd	     0xf85f7020000	                           jne 0x40033ca	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030d3	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030db	     0xf84e9020000	                            je 0x40033ca	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40030e1	      0xbe2d000000	                           mov esi, 0x2d	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030e6	        0x488b7d00	                    mov rdi, qword [rbp]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030ea	      0xe800000000	                          call 0x40030ef	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030ef	          0x4885c0	                           test rax, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030f2	            0x740d	                            je 0x4003101	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030f4	    0x83bb40150000	             cmp dword [rbx + 0x1540], 0	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x40030fb	     0xf85c9020000	                           jne 0x40033ca	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4003101	      0xbe3d000000	                           mov esi, 0x3d	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003106	        0x488b7d00	                    mov rdi, qword [rbp]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400310a	      0xe800000000	                          call 0x400310f	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400310f	          0x4885c0	                           test rax, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003112	            0x740d	                            je 0x4003121	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003114	    0x83bb60150000	             cmp dword [rbx + 0x1560], 0	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400311b	     0xf84a9020000	                            je 0x40033ca	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003121	      0xbe78000000	                           mov esi, 0x78	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003126	        0x488b7d00	                    mov rdi, qword [rbp]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400312a	      0xe800000000	                          call 0x400312f	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400312f	          0x4885c0	                           test rax, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003132	            0x740a	                            je 0x400313e	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003134	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003138	     0xf848c020000	                            je 0x40033ca	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400313e	      0xbe25000000	                           mov esi, 0x25	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003143	        0x488b7d00	                    mov rdi, qword [rbp]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003147	      0xe800000000	                          call 0x400314c	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400314c	          0x4885c0	                           test rax, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400314f	            0x740d	                            je 0x400315e	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003151	    0x48391d000000	            cmp qword [0x04003158], rbx 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003158	     0xf856c020000	                           jne 0x40033ca	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400315e	      0xbe23000000	                           mov esi, 0x23	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4003163	        0x488b7d00	                    mov rdi, qword [rbp]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4003167	      0xe800000000	                          call 0x400316c	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x400316c	          0x4885c0	                           test rax, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x400316f	            0x7426	                            je 0x4003197	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x4003171	    0x48391d000000	            cmp qword [0x04003178], rbx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003178	     0xf844c020000	                            je 0x40033ca	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400317e	    0x488b05000000	            mov rax, qword [0x04003185] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003185	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400318b	    0x398878010000	           cmp dword [rax + 0x178], ecx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003191	     0xf8533020000	                           jne 0x40033ca	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003197	          0x4889df	                            mov rdi, rbx	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x400319a	      0xe800000000	                          call 0x400319f	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x400319f	          0x4885c0	                           test rax, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40031a2	            0x741e	                            je 0x40031c2	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40031a4	          0x4889df	                            mov rdi, rbx	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031a7	      0xe800000000	                          call 0x40031ac	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031ac	      0xbaff0f0000	                          mov edx, 0xfff	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031b1	          0x4889c6	                            mov rsi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031b4	    0x488b3d000000	            mov rdi, qword [0x040031bb] 	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031bb	      0xe800000000	                          call 0x40031c0	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031c0	            0xeb21	                           jmp 0x40031e3	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40031c2	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031c9	    0x41b801000000	                              mov r8d, 1	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031cf	      0xb900100000	                         mov ecx, 0x1000	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031d4	    0x488b15000000	            mov rdx, qword [0x040031db] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031db	          0x4889df	                            mov rdi, rbx	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031de	      0xe800000000	                          call 0x40031e3	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x40031e3	    0x488b3d000000	            mov rdi, qword [0x040031ea] 	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x40031ea	      0xe800000000	                          call 0x40031ef	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x40031ef	            0x85c0	                           test eax, eax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x40031f1	     0xf85d3010000	                           jne 0x40033ca	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x40031f7	    0x41be78000000	                          mov r14d, 0x78	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x40031fd	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003201	            0x7516	                           jne 0x4003219	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003203	          0x4889df	                            mov rdi, rbx	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003206	      0xe800000000	                          call 0x400320b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400320b	          0x83f801	                              cmp eax, 1	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400320e	          0x4519f6	                          sbb r14d, r14d	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003211	        0x4183e6f5	                    and r14d, 0xfffffff5	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003215	        0x4183c62b	                          add r14d, 0x2b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003219	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003220	      0xe800000000	                          call 0x4003225	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003225	            0x85c0	                           test eax, eax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003227	            0x7422	                            je 0x400324b	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003229	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4003230	      0xe800000000	                          call 0x4003235	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4003235	    0x41be20000000	                          mov r14d, 0x20	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400323b	          0x83f801	                              cmp eax, 1	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400323e	          0x4519e4	                          sbb r12d, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4003241	        0x4183e413	                          and r12d, 0x13	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4003245	        0x4183c43f	                          add r12d, 0x3f	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4003249	            0xeb31	                           jmp 0x400327c	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400324b	    0x41bc46000000	                          mov r12d, 0x46	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x4003251	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x4003259	            0x7521	                           jne 0x400327c	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x400325b	    0x41bc2d000000	                          mov r12d, 0x2d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003261	    0x83bb40150000	             cmp dword [rbx + 0x1540], 0	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003268	            0x7412	                            je 0x400327c	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x400326a	    0x83bb60150000	            cmp dword [rbx + 0x1560], 1 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003271	          0x4519e4	                          sbb r12d, r12d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003274	        0x4183e4e3	                    and r12d, 0xffffffe3	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003278	        0x4183c43d	                          add r12d, 0x3d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x400327c	      0xbf0a000000	                            mov edi, 0xa	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x4003281	      0xe800000000	                          call 0x4003286	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x4003286	    0x488b35000000	            mov rsi, qword [0x0400328d] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400328d	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003292	            0x740e	                            je 0x40032a2	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003294	        0x837b7801	               cmp dword [rbx + 0x78], 1	      3025	buffer.c	FUNCTION_45	FOR_1
0x4003298	            0x19c0	                            sbb eax, eax	      3025	buffer.c	FUNCTION_45	FOR_1
0x400329a	          0x83e007	                              and eax, 7	      3025	buffer.c	FUNCTION_45	FOR_1
0x400329d	          0x83c061	                           add eax, 0x61	      3025	buffer.c	FUNCTION_45	FOR_1
0x40032a0	            0xeb05	                           jmp 0x40032a7	      3025	buffer.c	FUNCTION_45	FOR_1
0x40032a2	      0xb820000000	                           mov eax, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032a7	    0x48391d000000	            cmp qword [0x040032ae], rbx 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032ae	            0x7422	                            je 0x40032d2	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032b0	    0x488b15000000	            mov rdx, qword [0x040032b7] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032b7	    0x8b9278010000	           mov edx, dword [rdx + 0x178] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032bd	    0x3b93b8000000	            cmp edx, dword [rbx + 0xb8] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032c3	        0x410f94c1	                                sete r9b	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032c7	        0x450fb6c9	                          movzx r9d, r9b	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032cb	      0x478d4c4920	            lea r9d, [r9 + r9*2 + 0x20] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032d0	            0xeb06	                           jmp 0x40032d8	      3023	buffer.c	FUNCTION_45	FOR_1
0x40032d2	    0x41b925000000	                           mov r9d, 0x25	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032d8	    0x83bb24140000	            cmp dword [rbx + 0x1424], 1 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032df	            0x19d2	                            sbb edx, edx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032e1	          0x83e255	                           and edx, 0x55	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032e4	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032ea	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032eb	            0x4156	                                push r14	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032ed	            0x4154	                                push r12	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032ef	              0x50	                                push rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032f0	        0x448d4220	                   lea r8d, [rdx + 0x20]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032f4	      0xba00000000	                              mov edx, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032f9	      0xbeed030000	                          mov esi, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40032fe	    0x488b3d000000	            mov rdi, qword [0x04003305] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003305	      0xb800000000	                              mov eax, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400330a	      0xe800000000	                          call 0x400330f	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400330f	        0x4883c420	                           add rsp, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003313	      0x3ded030000	                          cmp eax, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003318	        0x410f4fc5	                         cmovg eax, r13d	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400331c	          0x4189c6	                           mov r14d, eax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400331f	    0x488b3d000000	            mov rdi, qword [0x04003326] 	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003326	      0xe800000000	                          call 0x400332b	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x400332b	      0xba28000000	                           mov edx, 0x28	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003330	            0x29c2	                            sub edx, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003332	            0x89d0	                            mov eax, edx	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003334	        0x458d6601	                     lea r12d, [r14 + 1]	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003338	          0x4d63f6	                        movsxd r14, r14d	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400333b	    0x488b15000000	            mov rdx, qword [0x04003342] 	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003342	      0x42c6043220	              mov byte [rdx + r14], 0x20	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003347	          0x83e801	                              sub eax, 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400334a	          0x4589e6	                          mov r14d, r12d	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400334d	    0x4181fcee0300	                         cmp r12d, 0x3ee	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003354	            0x7f04	                            jg 0x400335a	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003356	            0x85c0	                           test eax, eax	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003358	            0x7fda	                            jg 0x4003334	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400335a	    0x48391d000000	            cmp qword [0x04003361], rbx 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003361	            0x750d	                           jne 0x4003370	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003363	    0x488b05000000	            mov rax, qword [0x0400336a] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400336a	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400336e	            0xeb0b	                           jmp 0x400337b	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003370	          0x4889df	                            mov rdi, rbx	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003373	      0xe800000000	                          call 0x4003378	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003378	          0x4989c6	                            mov r14, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400337b	      0xba05000000	                              mov edx, 5	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003380	      0xbe00000000	                              mov esi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003385	      0xbf00000000	                              mov edi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400338a	      0xe800000000	                          call 0x400338f	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400338f	      0xbe01040000	                          mov esi, 0x401	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003394	          0x4429e6	                           sub esi, r12d	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003397	          0x4863f6	                         movsxd rsi, esi	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400339a	          0x4963fc	                        movsxd rdi, r12d	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400339d	    0x48033d000000	             add rdi, qword [0x040033a4]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40033a4	          0x4c89f1	                            mov rcx, r14	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40033a7	          0x4889c2	                            mov rdx, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40033aa	      0xb800000000	                              mov eax, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40033af	      0xe800000000	                          call 0x40033b4	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40033b4	    0x488b3d000000	            mov rdi, qword [0x040033bb] 	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x40033bb	      0xe800000000	                          call 0x40033c0	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x40033c0	      0xe800000000	                          call 0x40033c5	      3042	buffer.c	FUNCTION_45	FOR_1	CALL_32
0x40033c5	      0xe800000000	                          call 0x40033ca	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x40033ca	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033ce	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033d1	            0x7456	                            je 0x4003429	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033d3	    0x8b0500000000	            mov eax, dword [0x040033d9] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033d9	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033db	     0xf8490fbffff	                            je 0x4002f71	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033e1	            0xeb46	                           jmp 0x4003429	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033e3	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033e8	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033ec	      0xe800000000	                          call 0x40033f1	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033f1	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033f4	            0x75d4	                           jne 0x40033ca	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033f6	            0xeb18	                           jmp 0x4003410	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40033f8	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40033fd	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003401	      0xe800000000	                          call 0x4003406	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003406	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003409	            0x75bf	                           jne 0x40033ca	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400340b	      0xe9d1fcffff	                           jmp 0x40030e1	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003410	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003415	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003419	      0xe800000000	                          call 0x400341e	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400341e	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003421	     0xf84bafcffff	                            je 0x40030e1	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003427	            0xeba1	                           jmp 0x40033ca	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003429	              0x5b	                                 pop rbx	      3045	buffer.c	FUNCTION_45
0x400342a	              0x5d	                                 pop rbp	      3045	buffer.c	FUNCTION_45
0x400342b	            0x415c	                                 pop r12	      3045	buffer.c	FUNCTION_45
0x400342d	            0x415d	                                 pop r13	      3045	buffer.c	FUNCTION_45
0x400342f	            0x415e	                                 pop r14	      3045	buffer.c	FUNCTION_45
0x4003431	              0xc3	                                     ret	      3045	buffer.c	FUNCTION_45
