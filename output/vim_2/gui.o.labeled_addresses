gui_remove_scrollbars	WHILE,0:functions,1:SWITCH,0:ELSE,1:IF,1:FOR,1:CALL,1:DO,0	32
0x4002c01	              0x55	                                push rbp	      3884	gui.c	FUNCTION_60
0x4002c02	              0x53	                                push rbx	      3884	gui.c	FUNCTION_60
0x4002c03	        0x4883ec08	                              sub rsp, 8	      3884	gui.c	FUNCTION_60
0x4002c07	      0xbd00000000	                              mov ebp, 0	      3888	gui.c	FUNCTION_60	FOR_1
0x4002c0c	            0xeb1f	                           jmp 0x4002c2d	      3888	gui.c	FUNCTION_60	FOR_1
0x4002c0e	      0xbe00000000	                              mov esi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4002c13	      0xbf00000000	                              mov edi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4002c18	      0xe800000000	                          call 0x4002c1d	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4002c1d	    0x488b05000000	            mov rax, qword [0x04002c24] 	      3899	gui.c	FUNCTION_60	FOR_1
0x4002c24	    0xc74050ffffff	     mov dword [rax + 0x50], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4002c2b	            0xeb40	                           jmp 0x4002c6d	      3901	gui.c	FUNCTION_60
0x4002c2d	    0x488b1d000000	            mov rbx, qword [0x04002c34] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c34	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c37	            0x7418	                            je 0x4002c51	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c39	      0xba00000000	                              mov edx, 0	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4002c3e	            0x89ee	                            mov esi, ebp	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4002c40	          0x4889df	                            mov rdi, rbx	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4002c43	      0xe8b2d7ffff	               call sym.gui_do_scrollbar	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4002c48	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c4c	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c4f	            0x75e8	                           jne 0x4002c39	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4002c51	          0x4863d5	                         movsxd rdx, ebp	      3899	gui.c	FUNCTION_60	FOR_1
0x4002c54	    0x488b05000000	            mov rax, qword [0x04002c5b] 	      3899	gui.c	FUNCTION_60	FOR_1
0x4002c5b	    0xc7449048ffff	mov dword [rax + rdx*4 + 0x48], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4002c63	          0x83c501	                              add ebp, 1	      3888	gui.c	FUNCTION_60	FOR_1
0x4002c66	          0x83fd02	                              cmp ebp, 2	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4002c69	            0x75c2	                           jne 0x4002c2d	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4002c6b	            0xeba1	                           jmp 0x4002c0e	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4002c6d	        0x4883c408	                              add rsp, 8	      3901	gui.c	FUNCTION_60
0x4002c71	              0x5b	                                 pop rbx	      3901	gui.c	FUNCTION_60
0x4002c72	              0x5d	                                 pop rbp	      3901	gui.c	FUNCTION_60
0x4002c73	              0xc3	                                     ret	      3901	gui.c	FUNCTION_60
gui_get_base_height	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,5:FOR,0:CALL,4:DO,0	7
0x4000a44	    0x8b0500000000	            mov eax, dword [0x04000a4a] 	      1428	gui.c	FUNCTION_19
0x4000a4a	             0x1c0	                            add eax, eax	      1428	gui.c	FUNCTION_19
0x4000a4c	            0x89c2	                            mov edx, eax	      1430	gui.c	FUNCTION_19	IF_1
0x4000a4e	     0x31500000000	             add edx, dword [0x04000a54]	      1430	gui.c	FUNCTION_19	IF_1
0x4000a54	    0x833d00000000	               cmp dword [0x04000a5b], 0	      1430	gui.c	FUNCTION_19	IF_1
0x4000a5b	           0xf45c2	                         cmovne eax, edx	      1430	gui.c	FUNCTION_19	IF_1
0x4000a5e	              0xc3	                                     ret	      1462	gui.c	FUNCTION_19
gui_attempt_start	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,4:DO,0	30
0x40050fe	        0x4883ec28	                           sub rsp, 0x28	       159	gui.c	FUNCTION_2
0x4005102	    0x64488b042528	                mov rax, qword fs:[0x28]	       159	gui.c	FUNCTION_2
0x400510b	      0x4889442418	             mov qword [rsp + 0x18], rax	       159	gui.c	FUNCTION_2
0x4005110	            0x31c0	                            xor eax, eax	       159	gui.c	FUNCTION_2
0x4005112	    0x830500000000	               add dword [0x04005119], 1	       162	gui.c	FUNCTION_2
0x4005119	    0xc70500000000	               mov dword [0x04005123], 1	       163	gui.c	FUNCTION_2
0x4005123	    0xc70500000000	               mov dword [0x0400512d], 0	       166	gui.c	FUNCTION_2
0x400512d	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x4005132	      0xe800000000	                          call 0x4005137	       169	gui.c	FUNCTION_2	CALL_1
0x4005137	    0x8b0500000000	            mov eax, dword [0x0400513d] 	       170	gui.c	FUNCTION_2
0x400513d	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x4005140	    0x890500000000	            mov dword [0x04005146], eax 	       170	gui.c	FUNCTION_2
0x4005146	    0x833d00000000	               cmp dword [0x0400514d], 0	       173	gui.c	FUNCTION_2	IF_1
0x400514d	            0x7428	                            je 0x4005177	       173	gui.c	FUNCTION_2	IF_1
0x400514f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005154	      0x488d7c2408	                      lea rdi, [rsp + 8]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005159	      0xe800000000	                          call 0x400515e	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x400515e	          0x83f801	                              cmp eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005161	            0x750f	                           jne 0x4005172	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4005163	      0x488b742408	                mov rsi, qword [rsp + 8]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005168	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x400516d	      0xe800000000	                          call 0x4005172	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4005172	      0xe800000000	                          call 0x4005177	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4005177	    0x832d00000000	               sub dword [0x0400517e], 1	       187	gui.c	FUNCTION_2
0x400517e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       188	gui.c	FUNCTION_2
0x4005183	    0x644833042528	                xor rax, qword fs:[0x28]	       188	gui.c	FUNCTION_2
0x400518c	            0x7405	                            je 0x4005193	       188	gui.c	FUNCTION_2
0x400518e	      0xe800000000	                          call 0x4005193	       188	gui.c	FUNCTION_2
0x4005193	        0x4883c428	                           add rsp, 0x28	       188	gui.c	FUNCTION_2
0x4005197	              0xc3	                                     ret	       188	gui.c	FUNCTION_2
gui_position_components	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,6:FOR,0:CALL,8:DO,0	41
0x4000040	            0x4154	                                push r12	      1337	gui.c	FUNCTION_17
0x4000042	              0x55	                                push rbp	      1337	gui.c	FUNCTION_17
0x4000043	              0x53	                                push rbx	      1337	gui.c	FUNCTION_17
0x4000044	    0x8b0500000000	            mov eax, dword [0x0400004a] 	      1344	gui.c	FUNCTION_17
0x400004a	          0x83c001	                              add eax, 1	      1344	gui.c	FUNCTION_17
0x400004d	    0x890500000000	            mov dword [0x04000053], eax 	      1344	gui.c	FUNCTION_17
0x4000053	    0x833d00000000	               cmp dword [0x0400005a], 0	      1348	gui.c	FUNCTION_17	IF_1
0x400005a	      0xbb00000000	                              mov ebx, 0	      1348	gui.c	FUNCTION_17	IF_1
0x400005f	     0xf451d000000	          cmovne ebx, dword [0x04000066]	      1348	gui.c	FUNCTION_17	IF_1
0x4000066	          0x4189dc	                           mov r12d, ebx	      1348	gui.c	FUNCTION_17	IF_1
0x4000069	    0x8b0500000000	            mov eax, dword [0x0400006f] 	      1378	gui.c	FUNCTION_17
0x400006f	          0x8d1400	                    lea edx, [rax + rax]	      1378	gui.c	FUNCTION_17
0x4000072	    0x8b0500000000	            mov eax, dword [0x04000078] 	      1378	gui.c	FUNCTION_17
0x4000078	     0xfaf05000000	            imul eax, dword [0x0400007f]	      1378	gui.c	FUNCTION_17
0x400007f	          0x8d1c10	                    lea ebx, [rax + rdx]	      1378	gui.c	FUNCTION_17
0x4000082	    0x8b2d00000000	            mov ebp, dword [0x04000088] 	      1379	gui.c	FUNCTION_17
0x4000088	     0xfaf2d000000	            imul ebp, dword [0x0400008f]	      1379	gui.c	FUNCTION_17
0x400008f	             0x1d5	                            add ebp, edx	      1379	gui.c	FUNCTION_17
0x4000091	            0x89e9	                            mov ecx, ebp	      1381	gui.c	FUNCTION_17	CALL_5
0x4000093	            0x89da	                            mov edx, ebx	      1381	gui.c	FUNCTION_17	CALL_5
0x4000095	      0xbe00000000	                              mov esi, 0	      1381	gui.c	FUNCTION_17	CALL_5
0x400009a	          0x4489e7	                           mov edi, r12d	      1381	gui.c	FUNCTION_17	CALL_5
0x400009d	      0xe800000000	                          call 0x40000a2	      1381	gui.c	FUNCTION_17	CALL_5
0x40000a2	    0x833d00000000	               cmp dword [0x040000a9], 0	      1392	gui.c	FUNCTION_17	IF_6
0x40000a9	            0x7418	                            je 0x40000c3	      1392	gui.c	FUNCTION_17	IF_6
0x40000ab	    0x448b05000000	            mov r8d, dword [0x040000b2] 	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000b2	            0x89d9	                            mov ecx, ebx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000b4	            0x89ea	                            mov edx, ebp	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000b6	          0x4489e6	                           mov esi, r12d	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000b9	      0xbf00000000	                              mov edi, 0	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000be	      0xe800000000	                          call 0x40000c3	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40000c3	    0xc70500000000	               mov dword [0x040000cd], 0	      1398	gui.c	FUNCTION_17
0x40000cd	          0x4401e3	                           add ebx, r12d	      1399	gui.c	FUNCTION_17
0x40000d0	    0x891d00000000	            mov dword [0x040000d6], ebx 	      1399	gui.c	FUNCTION_17
0x40000d6	    0x8b0500000000	            mov eax, dword [0x040000dc] 	      1401	gui.c	FUNCTION_17
0x40000dc	          0x83e801	                              sub eax, 1	      1401	gui.c	FUNCTION_17
0x40000df	    0x890500000000	            mov dword [0x040000e5], eax 	      1401	gui.c	FUNCTION_17
0x40000e5	              0x5b	                                 pop rbx	      1402	gui.c	FUNCTION_17
0x40000e6	              0x5d	                                 pop rbp	      1402	gui.c	FUNCTION_17
0x40000e7	            0x415c	                                 pop r12	      1402	gui.c	FUNCTION_17
0x40000e9	              0xc3	                                     ret	      1402	gui.c	FUNCTION_17
gui_find_scrollbar	WHILE,0:functions,1:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,0:DO,0	26
0x4002cdc	    0x48393d000000	            cmp qword [0x04002ce3], rdi 	      3932	gui.c	FUNCTION_62	IF_1
0x4002ce3	            0x744b	                            je 0x4002d30	      3932	gui.c	FUNCTION_62	IF_1
0x4002ce5	    0x488b05000000	            mov rax, qword [0x04002cec] 	      3934	gui.c	FUNCTION_62
0x4002cec	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x4002cef	            0x7445	                            je 0x4002d36	      3934	gui.c	FUNCTION_62
0x4002cf1	    0x483bb8901800	          cmp rdi, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002cf8	            0x7414	                            je 0x4002d0e	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002cfa	    0x483bb8e01800	          cmp rdi, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d01	            0x7522	                           jne 0x4002d25	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d03	            0xeb19	                           jmp 0x4002d1e	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d05	    0x483bb8901800	          cmp rdi, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002d0c	            0x7507	                           jne 0x4002d15	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002d0e	    0x480590180000	                         add rax, 0x1890	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002d14	              0xc3	                                     ret	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4002d15	    0x483bb8e01800	          cmp rdi, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d1c	            0x7507	                           jne 0x4002d25	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d1e	    0x4805e0180000	                         add rax, 0x18e0	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d24	              0xc3	                                     ret	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4002d25	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	gui.c	FUNCTION_62
0x4002d29	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x4002d2c	            0x75d7	                           jne 0x4002d05	      3934	gui.c	FUNCTION_62
0x4002d2e	            0xf3c3	                                     ret	      3934	gui.c	FUNCTION_62
0x4002d30	      0xb800000000	                              mov eax, 0	      3933	gui.c	FUNCTION_62	IF_1
0x4002d35	              0xc3	                                     ret	      3933	gui.c	FUNCTION_62	IF_1
0x4002d36	      0xb800000000	                              mov eax, 0	      3941	gui.c	FUNCTION_62
0x4002d3b	              0xc3	                                     ret	      3942	gui.c	FUNCTION_62
gui_update_cursor	WHILE,0:functions,0:SWITCH,0:ELSE,7:IF,35:FOR,0:CALL,22:DO,0	348
0x40016ba	            0x4155	                                push r13	      1056	gui.c	FUNCTION_15
0x40016bc	            0x4154	                                push r12	      1056	gui.c	FUNCTION_15
0x40016be	              0x55	                                push rbp	      1056	gui.c	FUNCTION_15
0x40016bf	              0x53	                                push rbx	      1056	gui.c	FUNCTION_15
0x40016c0	        0x4883ec48	                           sub rsp, 0x48	      1056	gui.c	FUNCTION_15
0x40016c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1056	gui.c	FUNCTION_15
0x40016cd	      0x4889442438	             mov qword [rsp + 0x38], rax	      1056	gui.c	FUNCTION_15
0x40016d2	            0x31c0	                            xor eax, eax	      1056	gui.c	FUNCTION_15
0x40016d4	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      1063	gui.c	FUNCTION_15
0x40016db	      0x4889442408	                mov qword [rsp + 8], rax	      1063	gui.c	FUNCTION_15
0x40016e0	      0x4889442410	             mov qword [rsp + 0x10], rax	      1064	gui.c	FUNCTION_15
0x40016e5	    0x833d00000000	               cmp dword [0x040016ec], 0	      1073	gui.c	FUNCTION_15	IF_1
0x40016ec	     0xf84c7050000	                            je 0x4001cb9	      1073	gui.c	FUNCTION_15	IF_1
0x40016f2	            0x89f3	                            mov ebx, esi	      1073	gui.c	FUNCTION_15	IF_1
0x40016f4	    0x8b0500000000	            mov eax, dword [0x040016fa] 	      1073	gui.c	FUNCTION_15	IF_1
0x40016fa	    0x3b0500000000	            cmp eax, dword [0x04001700] 	      1073	gui.c	FUNCTION_15	IF_1
0x4001700	     0xf85b3050000	                           jne 0x4001cb9	      1073	gui.c	FUNCTION_15	IF_1
0x4001706	    0x8b1500000000	            mov edx, dword [0x0400170c] 	      1074	gui.c	FUNCTION_15	IF_1
0x400170c	    0x3b1500000000	            cmp edx, dword [0x04001712] 	      1074	gui.c	FUNCTION_15	IF_1
0x4001712	     0xf85a1050000	                           jne 0x4001cb9	      1074	gui.c	FUNCTION_15	IF_1
0x4001718	    0x3b1500000000	            cmp edx, dword [0x0400171e] 	      1039	gui.c	FUNCTION_14	IF_1
0x400171e	            0x7f09	                            jg 0x4001729	      1039	gui.c	FUNCTION_14	IF_1
0x4001720	          0x8d4aff	                      lea ecx, [rdx - 1]	      1040	gui.c	FUNCTION_14	IF_1
0x4001723	    0x890d00000000	            mov dword [0x04001729], ecx 	      1040	gui.c	FUNCTION_14	IF_1
0x4001729	    0x3b0500000000	            cmp eax, dword [0x0400172f] 	      1041	gui.c	FUNCTION_14	IF_2
0x400172f	            0x7f09	                            jg 0x400173a	      1041	gui.c	FUNCTION_14	IF_2
0x4001731	          0x8d48ff	                      lea ecx, [rax - 1]	      1042	gui.c	FUNCTION_14	IF_2
0x4001734	    0x890d00000000	            mov dword [0x0400173a], ecx 	      1042	gui.c	FUNCTION_14	IF_2
0x400173a	    0x8b0d00000000	            mov ecx, dword [0x04001740] 	      1043	gui.c	FUNCTION_14	IF_3
0x4001740	            0x39ca	                            cmp edx, ecx	      1043	gui.c	FUNCTION_14	IF_3
0x4001742	            0x7e0a	                           jle 0x400174e	      1043	gui.c	FUNCTION_14	IF_3
0x4001744	    0x8b1500000000	            mov edx, dword [0x0400174a] 	      1043	gui.c	FUNCTION_14	IF_3
0x400174a	            0x39d0	                            cmp eax, edx	      1043	gui.c	FUNCTION_14	IF_3
0x400174c	            0x7f09	                            jg 0x4001757	      1043	gui.c	FUNCTION_14	IF_3
0x400174e	    0xc60500000000	                mov byte [0x04001755], 0	      1044	gui.c	FUNCTION_14	IF_3
0x4001755	            0xeb21	                           jmp 0x4001778	      1044	gui.c	FUNCTION_14	IF_3
0x4001757	    0x803d00000000	                cmp byte [0x0400175e], 0	      1078	gui.c	FUNCTION_15	IF_2
0x400175e	            0x7418	                            je 0x4001778	      1078	gui.c	FUNCTION_15	IF_2
0x4001760	            0x85ff	                           test edi, edi	      1078	gui.c	FUNCTION_15	IF_2
0x4001762	            0x7514	                           jne 0x4001778	      1078	gui.c	FUNCTION_15	IF_2
0x4001764	    0x390d00000000	            cmp dword [0x0400176a], ecx 	      1079	gui.c	FUNCTION_15	IF_2
0x400176a	            0x750c	                           jne 0x4001778	      1079	gui.c	FUNCTION_15	IF_2
0x400176c	    0x391500000000	            cmp dword [0x04001772], edx 	      1079	gui.c	FUNCTION_15	IF_2
0x4001772	     0xf8441050000	                            je 0x4001cb9	      1079	gui.c	FUNCTION_15	IF_2
0x4001778	      0xe800000000	                          call 0x400177d	      1081	gui.c	FUNCTION_15	IF_2	CALL_2
0x400177d	    0x8b3d00000000	            mov edi, dword [0x04001783] 	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x4001783	            0x85ff	                           test edi, edi	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x4001785	     0xf882e050000	                            js 0x4001cb9	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x400178b	    0x3b3d00000000	            cmp edi, dword [0x04001791] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001791	            0x750e	                           jne 0x40017a1	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001793	    0x8b0500000000	            mov eax, dword [0x04001799] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x4001799	    0x390500000000	            cmp dword [0x0400179f], eax 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x400179f	            0x740b	                            je 0x40017ac	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40017a1	    0x8b3500000000	            mov esi, dword [0x040017a7] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40017a7	      0xe800000000	                          call 0x40017ac	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40017ac	    0x8b3d00000000	            mov edi, dword [0x040017b2] 	      1088	gui.c	FUNCTION_15	IF_2
0x40017b2	    0x893d00000000	            mov dword [0x040017b8], edi 	      1088	gui.c	FUNCTION_15	IF_2
0x40017b8	    0x8b0500000000	            mov eax, dword [0x040017be] 	      1089	gui.c	FUNCTION_15	IF_2
0x40017be	    0x890500000000	            mov dword [0x040017c4], eax 	      1089	gui.c	FUNCTION_15	IF_2
0x40017c4	    0x833d00000000	               cmp dword [0x040017cb], 0	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40017cb	     0xf84e8040000	                            je 0x4001cb9	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40017d1	    0x48833d000000	               cmp qword [0x040017d9], 0	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40017d9	     0xf84da040000	                            je 0x4001cb9	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x40017df	            0x85db	                           test ebx, ebx	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x40017e1	            0x7407	                            je 0x40017ea	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x40017e3	            0x89fe	                            mov esi, edi	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40017e5	      0xe800000000	                          call 0x40017ea	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40017ea	    0x8b0500000000	            mov eax, dword [0x040017f0] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x40017f0	    0x390500000000	            cmp dword [0x040017f6], eax 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x40017f6	     0xf8dbd040000	                           jge 0x4001cb9	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x40017fc	    0x8b0500000000	            mov eax, dword [0x04001802] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001802	    0x390500000000	            cmp dword [0x04001808], eax 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4001808	     0xf8dab040000	                           jge 0x4001cb9	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x400180e	    0xc60500000000	                mov byte [0x04001815], 1	      1103	gui.c	FUNCTION_15	IF_2
0x4001815	      0xe800000000	                          call 0x400181a	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400181a	            0x85c0	                           test eax, eax	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400181c	            0x7414	                            je 0x4001832	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400181e	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001823	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001828	      0xe800000000	                          call 0x400182d	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400182d	          0x4889c3	                            mov rbx, rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001830	            0xeb18	                           jmp 0x400184a	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4001832	      0xbf00000000	                              mov edi, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001837	      0xe800000000	                          call 0x400183c	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400183c	          0x4863d8	                         movsxd rbx, eax	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400183f	        0x48c1e306	                              shl rbx, 6	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4001843	    0x4881c3000000	                              add rbx, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400184a	    0xf60500000000	           test byte [0x04001851], 0x20 	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x4001851	            0x7405	                            je 0x4001858	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x4001853	          0x8b6b2c	            mov ebp, dword [rbx + 0x2c] 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001856	            0xeb03	                           jmp 0x400185b	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4001858	          0x8b6b28	            mov ebp, dword [rbx + 0x28] 	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x400185b	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      1121	gui.c	FUNCTION_15	IF_2
0x4001862	      0x4889442418	             mov qword [rsp + 0x18], rax	      1121	gui.c	FUNCTION_15	IF_2
0x4001867	      0x4889442420	             mov qword [rsp + 0x20], rax	      1122	gui.c	FUNCTION_15	IF_2
0x400186c	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001870	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001874	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4001878	      0xe800000000	                          call 0x400187d	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x400187d	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001882	            0x740e	                            je 0x4001892	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001884	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x4001889	            0x7407	                            je 0x4001892	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x400188b	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x4001890	            0x750a	                           jne 0x400189c	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x4001892	      0xbf00000000	                              mov edi, 0	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x4001897	      0xe800000000	                          call 0x400189c	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x400189c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40018a1	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40018a7	            0x7417	                            je 0x40018c0	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40018a9	      0x488b542408	                mov rdx, qword [rsp + 8]	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x40018ae	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x40018b3	      0x4889442420	             mov qword [rsp + 0x20], rax	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x40018b8	    0x41bd00000000	                             mov r13d, 0	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x40018be	            0xeb6a	                           jmp 0x400192a	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x40018c0	    0x41bd01000000	                             mov r13d, 1	      1123	gui.c	FUNCTION_15	IF_2
0x40018c6	            0x85ed	                           test ebp, ebp	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x40018c8	            0x7e60	                           jle 0x400192a	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x40018ca	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x40018cf	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x40018d4	            0x89ef	                            mov edi, ebp	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x40018d6	      0xe800000000	                          call 0x40018db	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x40018db	          0x4189c5	                           mov r13d, eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x40018de	      0xe800000000	                          call 0x40018e3	      1149	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_11
0x40018e3	            0x85c0	                           test eax, eax	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x40018e5	            0x7443	                            je 0x400192a	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x40018e7	      0xbf00000000	                              mov edi, 0	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x40018ec	      0xe800000000	                          call 0x40018f1	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x40018f1	            0x85c0	                           test eax, eax	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x40018f3	            0x7e35	                           jle 0x400192a	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x40018f5	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x40018fa	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x40018ff	            0x89c7	                            mov edi, eax	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001901	      0xe800000000	                          call 0x4001906	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4001906	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x400190b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001911	            0x7405	                            je 0x4001918	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001913	      0x4889442420	             mov qword [rsp + 0x20], rax	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4001918	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x400191d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001923	            0x7405	                            je 0x400192a	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4001925	      0x4889442418	             mov qword [rsp + 0x18], rax	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x400192a	    0x48630d000000	         movsxd rcx, dword [0x04001931] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001931	    0x8b0500000000	            mov eax, dword [0x04001937] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001937	    0x488b15000000	            mov rdx, qword [0x0400193e] 	      1173	gui.c	FUNCTION_15	IF_2
0x400193e	           0x3048a	            add eax, dword [rdx + rcx*4]	      1173	gui.c	FUNCTION_15	IF_2
0x4001941	    0x488b15000000	            mov rdx, qword [0x04001948] 	      1173	gui.c	FUNCTION_15	IF_2
0x4001948	         0xfb72c42	           movzx ebp, word [rdx + rax*2]	      1173	gui.c	FUNCTION_15	IF_2
0x400194c	      0xb800000000	                              mov eax, 0	      1069	gui.c	FUNCTION_15
0x4001951	    0x81fdff000000	                           cmp ebp, 0xff	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x4001957	            0x7e54	                           jle 0x40019ad	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x4001959	            0x89ef	                            mov edi, ebp	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x400195b	      0xe800000000	                          call 0x4001960	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x4001960	          0x4885c0	                           test rax, rax	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x4001963	            0x7448	                            je 0x40019ad	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x4001965	           0xfb710	                   movzx edx, word [rax]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x4001968	           0xfbfea	                           movsx ebp, dx	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x400196b	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001974	            0x7514	                           jne 0x400198a	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001976	          0xf6c201	                              test dl, 1	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001979	            0x7406	                            je 0x4001981	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400197b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400197f	            0xeb04	                           jmp 0x4001985	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001981	        0x488b4808	                mov rcx, qword [rax + 8]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4001985	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400198a	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001993	     0xf85d9020000	                           jne 0x4001c72	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4001999	          0xf6c201	                              test dl, 1	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400199c	            0x7406	                            je 0x40019a4	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400199e	        0x488b5008	                mov rdx, qword [rax + 8]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x40019a2	            0xeb04	                           jmp 0x40019a8	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x40019a4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x40019a8	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x40019ad	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x40019b6	            0x7519	                           jne 0x40019d1	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x40019b8	            0x89ea	                            mov edx, ebp	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40019ba	          0x83e201	                              and edx, 1	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40019bd	    0x488b15000000	            mov rdx, qword [0x040019c4] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40019c4	    0x480f44150000	           cmove rdx, qword [0x040019cc]	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40019cc	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40019d1	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x40019da	            0x7519	                           jne 0x40019f5	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x40019dc	            0x89ea	                            mov edx, ebp	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40019de	          0x83e201	                              and edx, 1	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40019e1	    0x488b15000000	            mov rdx, qword [0x040019e8] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40019e8	    0x480f44150000	           cmove rdx, qword [0x040019f0]	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40019f0	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x40019f5	          0x4885c0	                           test rax, rax	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x40019f8	     0xf848d000000	                            je 0x4001a8b	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x40019fe	            0x89e9	                            mov ecx, ebp	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a00	          0x83e101	                              and ecx, 1	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a03	            0x7425	                            je 0x4001a2a	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a05	        0x488b5008	                mov rdx, qword [rax + 8]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a09	    0x488915000000	            mov qword [0x04001a10], rdx 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a10	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a14	    0x488905000000	            mov qword [0x04001a1b], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a1b	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a22	     0xf8580020000	                           jne 0x4001ca8	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a28	            0xeb25	                           jmp 0x4001a4f	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a2a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a2e	    0x488915000000	            mov qword [0x04001a35], rdx 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a35	        0x488b4008	                mov rax, qword [rax + 8]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a39	    0x488905000000	            mov qword [0x04001a40], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x4001a40	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a47	     0xf854a020000	                           jne 0x4001c97	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a4d	            0xeb09	                           jmp 0x4001a58	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a4f	    0x488b15000000	            mov rdx, qword [0x04001a56] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a56	            0xeb07	                           jmp 0x4001a5f	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a58	    0x488b15000000	            mov rdx, qword [0x04001a5f] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a5f	    0x488915000000	            mov qword [0x04001a66], rdx 	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4001a66	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a6c	            0x7556	                           jne 0x4001ac4	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a6e	            0x85c9	                           test ecx, ecx	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a70	            0x7409	                            je 0x4001a7b	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a72	    0x488b05000000	            mov rax, qword [0x04001a79] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a79	            0xeb07	                           jmp 0x4001a82	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a7b	    0x488b05000000	            mov rax, qword [0x04001a82] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a82	    0x488905000000	            mov qword [0x04001a89], rax 	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a89	            0xeb39	                           jmp 0x4001ac4	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001a8b	        0x40f6c501	                             test bpl, 1	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001a8f	            0x7417	                            je 0x4001aa8	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001a91	    0x488b05000000	            mov rax, qword [0x04001a98] 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001a98	    0x488905000000	            mov qword [0x04001a9f], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001a9f	    0x488b05000000	            mov rax, qword [0x04001aa6] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001aa6	            0xeb15	                           jmp 0x4001abd	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001aa8	    0x488b05000000	            mov rax, qword [0x04001aaf] 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001aaf	    0x488905000000	            mov qword [0x04001ab6], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001ab6	    0x488b05000000	            mov rax, qword [0x04001abd] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001abd	    0x488905000000	            mov qword [0x04001ac4], rax 	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4001ac4	        0x41f6c501	                            test r13b, 1	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4001ac8	            0x7414	                            je 0x4001ade	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4001aca	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x4001acf	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x4001ad4	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x4001ad9	      0x4889442418	             mov qword [rsp + 0x18], rax	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x4001ade	    0x833d00000000	               cmp dword [0x04001ae5], 0	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x4001ae5	            0x750f	                           jne 0x4001af6	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x4001ae7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x4001aec	      0xe800000000	                          call 0x4001af1	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x4001af1	      0xe9c3010000	                           jmp 0x4001cb9	      1229	gui.c	FUNCTION_15	IF_2	IF_27
0x4001af6	    0x448b25000000	           mov r12d, dword [0x04001afd] 	      1232	gui.c	FUNCTION_15	IF_2
0x4001afd	            0x8b03	                    mov eax, dword [rbx]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001aff	            0x85c0	                           test eax, eax	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b01	            0x7544	                           jne 0x4001b47	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b03	          0x4489e8	                           mov eax, r13d	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b06	             0x9e8	                             or eax, ebp	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b08	          0x83e0fe	                     and eax, 0xfffffffe	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b0b	    0x890500000000	            mov dword [0x04001b11], eax 	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x4001b11	    0x486315000000	         movsxd rdx, dword [0x04001b18] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b18	    0x8b3d00000000	            mov edi, dword [0x04001b1e] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b1e	    0x488b05000000	            mov rax, qword [0x04001b25] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b25	           0x33c90	            add edi, dword [rax + rdx*4]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b28	    0x41b800000000	                              mov r8d, 0	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b2e	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b33	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b38	      0xbe14000000	                           mov esi, 0x14	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b3d	      0xe8faf4ffff	                 call sym.gui_screenchar	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b42	      0xe922010000	                           jmp 0x4001c69	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x4001b47	          0x83f802	                              cmp eax, 2	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b4a	            0x7520	                           jne 0x4001b6c	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b4c	    0x8b2d00000000	            mov ebp, dword [0x04001b52] 	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b52	    0x8b0500000000	            mov eax, dword [0x04001b58] 	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b58	         0xfaf4308	               imul eax, dword [rbx + 8]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b5c	          0x83c063	                           add eax, 0x63	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b5f	      0xb964000000	                           mov ecx, 0x64	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b64	              0x99	                                     cdq	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b65	            0xf7f9	                                idiv ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b67	          0x4189c5	                           mov r13d, eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b6a	            0xeb1e	                           jmp 0x4001b8a	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x4001b6c	    0x8b0500000000	            mov eax, dword [0x04001b72] 	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b72	         0xfaf4308	               imul eax, dword [rbx + 8]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b76	          0x83c063	                           add eax, 0x63	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b79	      0xb964000000	                           mov ecx, 0x64	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b7e	              0x99	                                     cdq	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b7f	            0xf7f9	                                idiv ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b81	            0x89c5	                            mov ebp, eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b83	    0x448b2d000000	           mov r13d, dword [0x04001b8a] 	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x4001b8a	    0x833d00000000	               cmp dword [0x04001b91], 0	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001b91	     0xf84ef000000	                            je 0x4001c86	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001b97	    0x486315000000	         movsxd rdx, dword [0x04001b9e] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001b9e	    0x488b05000000	            mov rax, qword [0x04001ba5] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ba5	          0x8b0490	            mov eax, dword [rax + rdx*4]	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001ba8	            0x89c6	                            mov esi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001baa	     0x33500000000	             add esi, dword [0x04001bb0]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bb0	     0x30500000000	             add eax, dword [0x04001bb6]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bb6	            0x89c7	                            mov edi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bb8	    0xff1500000000	                 call qword [0x04001bbe]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bbe	          0x83f801	                              cmp eax, 1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bc1	     0xf8ebf000000	                           jle 0x4001c86	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4001bc7	          0x4489e8	                           mov eax, r13d	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001bca	     0x30500000000	             add eax, dword [0x04001bd0]	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001bd0	          0x833b02	                      cmp dword [rbx], 2	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001bd3	        0x440f45e8	                        cmovne r13d, eax	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4001bd7	    0x488b05000000	            mov rax, qword [0x04001bde] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001bde	    0x83b854020000	              cmp dword [rax + 0x254], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001be5	     0xf849b000000	                            je 0x4001c86	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001beb	    0xf60500000000	               test byte [0x04001bf2], 8	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001bf2	            0x740d	                            je 0x4001c01	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001bf4	    0x833d00000000	               cmp dword [0x04001bfb], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001bfb	     0xf8485000000	                            je 0x4001c86	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001c01	    0x830500000000	               add dword [0x04001c08], 1	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4001c08	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c0d	            0x89ee	                            mov esi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c0f	          0x4489ef	                           mov edi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c12	      0xe800000000	                          call 0x4001c17	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c17	    0x832d00000000	               sub dword [0x04001c1e], 1	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x4001c1e	    0x486315000000	         movsxd rdx, dword [0x04001c25] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c25	    0x488b05000000	            mov rax, qword [0x04001c2c] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c2c	        0x488d1490	                  lea rdx, [rax + rdx*4]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c30	    0x8b0500000000	            mov eax, dword [0x04001c36] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c36	            0x89c6	                            mov esi, eax	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c38	             0x332	                    add esi, dword [rdx]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c3a	    0x488b0d000000	            mov rcx, qword [0x04001c41] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c41	         0xfb70c71	           movzx ecx, word [rcx + rsi*2]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c45	    0x890d00000000	            mov dword [0x04001c4b], ecx 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4001c4b	             0x302	                    add eax, dword [rdx]	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c4d	            0x89c7	                            mov edi, eax	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c4f	    0x41b800000000	                              mov r8d, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c55	      0xb900000000	                              mov ecx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c5a	      0xba00000000	                              mov edx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c5f	      0xbe18000000	                           mov esi, 0x18	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c64	      0xe8d3f3ffff	                 call sym.gui_screenchar	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4001c69	    0x448925000000	           mov dword [0x04001c70], r12d 	      1316	gui.c	FUNCTION_15	IF_2
0x4001c70	            0xeb47	                           jmp 0x4001cb9	      1316	gui.c	FUNCTION_15	IF_2
0x4001c72	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001c7b	     0xf857dfdffff	                           jne 0x40019fe	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001c81	      0xe932fdffff	                           jmp 0x40019b8	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4001c86	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c8b	            0x89ee	                            mov esi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c8d	          0x4489ef	                           mov edi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c90	      0xe800000000	                          call 0x4001c95	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c95	            0xeb87	                           jmp 0x4001c1e	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4001c97	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001c9d	     0xf8521feffff	                           jne 0x4001ac4	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001ca3	      0xe9d3fdffff	                           jmp 0x4001a7b	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001ca8	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001cae	     0xf8510feffff	                           jne 0x4001ac4	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001cb4	      0xe9b9fdffff	                           jmp 0x4001a72	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4001cb9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1318	gui.c	FUNCTION_15
0x4001cbe	    0x644833042528	                xor rax, qword fs:[0x28]	      1318	gui.c	FUNCTION_15
0x4001cc7	            0x7405	                            je 0x4001cce	      1318	gui.c	FUNCTION_15
0x4001cc9	      0xe800000000	                          call 0x4001cce	      1318	gui.c	FUNCTION_15
0x4001cce	        0x4883c448	                           add rsp, 0x48	      1318	gui.c	FUNCTION_15
0x4001cd2	              0x5b	                                 pop rbx	      1318	gui.c	FUNCTION_15
0x4001cd3	              0x5d	                                 pop rbp	      1318	gui.c	FUNCTION_15
0x4001cd4	            0x415c	                                 pop r12	      1318	gui.c	FUNCTION_15
0x4001cd6	            0x415d	                                 pop r13	      1318	gui.c	FUNCTION_15
0x4001cd8	              0xc3	                                     ret	      1318	gui.c	FUNCTION_15
gui_find_longest_lnum	WHILE,0:functions,0:SWITCH,0:ELSE,2:IF,3:FOR,1:CALL,4:DO,0	64
0x400013a	            0x4154	                                push r12	      4563	gui.c	FUNCTION_69
0x400013c	              0x55	                                push rbp	      4563	gui.c	FUNCTION_69
0x400013d	              0x53	                                push rbx	      4563	gui.c	FUNCTION_69
0x400013e	      0xbe68000000	                           mov esi, 0x68	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4000143	    0x488b3d000000	            mov rdi, qword [0x0400014a] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x400014a	      0xe800000000	                          call 0x400014f	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x400014f	          0x4885c0	                           test rax, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4000152	     0xf85a2000000	                           jne 0x40001fa	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4000158	    0x488b05000000	            mov rax, qword [0x0400015f] 	      4570	gui.c	FUNCTION_69	IF_1
0x400015f	        0x488b6878	            mov rbp, qword [rax + 0x78] 	      4570	gui.c	FUNCTION_69	IF_1
0x4000163	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4570	gui.c	FUNCTION_69	IF_1
0x4000167	          0x4839d5	                            cmp rbp, rdx	      4570	gui.c	FUNCTION_69	IF_1
0x400016a	     0xf8f8a000000	                            jg 0x40001fa	      4570	gui.c	FUNCTION_69	IF_1
0x4000170	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4571	gui.c	FUNCTION_69	IF_1
0x4000177	          0x4839c2	                            cmp rdx, rax	      4571	gui.c	FUNCTION_69	IF_1
0x400017a	            0x7d7e	                           jge 0x40001fa	      4571	gui.c	FUNCTION_69	IF_1
0x400017c	    0x488b15000000	            mov rdx, qword [0x04000183] 	      4572	gui.c	FUNCTION_69	IF_1
0x4000183	          0x488b12	                    mov rdx, qword [rdx]	      4572	gui.c	FUNCTION_69	IF_1
0x4000186	        0x4883c201	                              add rdx, 1	      4572	gui.c	FUNCTION_69	IF_1
0x400018a	          0x4839d0	                            cmp rax, rdx	      4572	gui.c	FUNCTION_69	IF_1
0x400018d	            0x7f6b	                            jg 0x40001fa	      4572	gui.c	FUNCTION_69	IF_1
0x400018f	          0x4839c5	                            cmp rbp, rax	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000192	            0x7d73	                           jge 0x4000207	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000194	    0x41bc00000000	                             mov r12d, 0	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400019a	      0xbb00000000	                              mov ebx, 0	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400019f	          0x4889ef	                            mov rdi, rbp	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x40001a2	      0xe843ffffff	                call sym.scroll_line_len	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x40001a7	          0x4439e0	                           cmp eax, r12d	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40001aa	            0x7e08	                           jle 0x40001b4	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40001ac	          0x4c63e0	                         movsxd r12, eax	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40001af	          0x4889eb	                            mov rbx, rbp	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40001b2	            0xeb30	                           jmp 0x40001e4	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x40001b4	          0x4439e0	                           cmp eax, r12d	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x40001b7	            0x752b	                           jne 0x40001e4	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x40001b9	    0x488b05000000	            mov rax, qword [0x040001c0] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001c0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001c4	            0x89ea	                            mov edx, ebp	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001c6	            0x29c2	                            sub edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001c8	            0x89d1	                            mov ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001ca	          0xc1f91f	                           sar ecx, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001cd	            0x31ca	                            xor edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001cf	            0x29ca	                            sub edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001d1	            0x89d9	                            mov ecx, ebx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001d3	            0x29c1	                            sub ecx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001d5	            0x89c8	                            mov eax, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001d7	          0xc1f91f	                           sar ecx, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001da	            0x31c8	                            xor eax, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001dc	            0x29c8	                            sub eax, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001de	            0x39c2	                            cmp edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001e0	        0x480f4cdd	                          cmovl rbx, rbp	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40001e4	        0x4883c501	                              add rbp, 1	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40001e8	    0x488b05000000	            mov rax, qword [0x040001ef] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40001ef	    0x4839a8e80000	            cmp qword [rax + 0xe8], rbp 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40001f6	            0x7fa7	                            jg 0x400019f	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40001f8	            0xeb12	                           jmp 0x400020c	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40001fa	    0x488b05000000	            mov rax, qword [0x04000201] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x4000201	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x4000205	            0xeb05	                           jmp 0x400020c	      4597	gui.c	FUNCTION_69	ELSE_2
0x4000207	      0xbb00000000	                              mov ebx, 0	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400020c	          0x4889d8	                            mov rax, rbx	      4600	gui.c	FUNCTION_69	ELSE_2
0x400020f	              0x5b	                                 pop rbx	      4600	gui.c	FUNCTION_69	ELSE_2
0x4000210	              0x5d	                                 pop rbp	      4600	gui.c	FUNCTION_69	ELSE_2
0x4000211	            0x415c	                                 pop r12	      4600	gui.c	FUNCTION_69	ELSE_2
0x4000213	              0xc3	                                     ret	      4600	gui.c	FUNCTION_69	ELSE_2
gui_delete_lines	WHILE,0:functions,0:SWITCH,0:ELSE,2:IF,5:FOR,0:CALL,2:DO,0	36
0x4000bbf	            0x85f6	                           test esi, esi	      2868	gui.c	FUNCTION_43	IF_1
0x4000bc1	            0x7e71	                           jle 0x4000c34	      2868	gui.c	FUNCTION_43	IF_1
0x4000bc3	            0x4154	                                push r12	      2867	gui.c	FUNCTION_43
0x4000bc5	              0x55	                                push rbp	      2867	gui.c	FUNCTION_43
0x4000bc6	              0x53	                                push rbx	      2867	gui.c	FUNCTION_43
0x4000bc7	            0x89f5	                            mov ebp, esi	      2867	gui.c	FUNCTION_43
0x4000bc9	            0x89fb	                            mov ebx, edi	      2867	gui.c	FUNCTION_43
0x4000bcb	        0x448d243e	                   lea r12d, [rsi + rdi]	      2871	gui.c	FUNCTION_43	IF_2
0x4000bcf	    0x8b1500000000	            mov edx, dword [0x04000bd5] 	      2871	gui.c	FUNCTION_43	IF_2
0x4000bd5	          0x4139d4	                           cmp r12d, edx	      2871	gui.c	FUNCTION_43	IF_2
0x4000bd8	            0x7e13	                           jle 0x4000bed	      2871	gui.c	FUNCTION_43	IF_2
0x4000bda	    0x8b0d00000000	            mov ecx, dword [0x04000be0] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000be0	    0x8b3500000000	            mov esi, dword [0x04000be6] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000be6	      0xe800000000	                          call 0x4000beb	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000beb	            0xeb43	                           jmp 0x4000c30	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000bed	      0xe800000000	                          call 0x4000bf2	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x4000bf2	    0x8b0500000000	            mov eax, dword [0x04000bf8] 	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000bf8	            0x39c3	                            cmp ebx, eax	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000bfa	            0x7f34	                            jg 0x4000c30	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000bfc	    0x8b1500000000	            mov edx, dword [0x04000c02] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000c02	    0x3b1500000000	            cmp edx, dword [0x04000c08] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000c08	            0x7c26	                            jl 0x4000c30	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000c0a	    0x3b1500000000	            cmp edx, dword [0x04000c10] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000c10	            0x7f1e	                            jg 0x4000c30	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000c12	          0x4139c4	                           cmp r12d, eax	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000c15	            0x7e09	                           jle 0x4000c20	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000c17	    0xc60500000000	                mov byte [0x04000c1e], 0	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000c1e	            0xeb10	                           jmp 0x4000c30	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x4000c20	    0x3b0500000000	            cmp eax, dword [0x04000c26] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000c26	            0x7f08	                            jg 0x4000c30	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000c28	            0x29e8	                            sub eax, ebp	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000c2a	    0x890500000000	            mov dword [0x04000c30], eax 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000c30	              0x5b	                                 pop rbx	      2891	gui.c	FUNCTION_43
0x4000c31	              0x5d	                                 pop rbp	      2891	gui.c	FUNCTION_43
0x4000c32	            0x415c	                                 pop r12	      2891	gui.c	FUNCTION_43
0x4000c34	            0xf3c3	                                     ret	      2891	gui.c	FUNCTION_43
gui_can_update_cursor	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0:DO,0	2
0x4000c49	    0xc70500000000	               mov dword [0x04000c53], 1	      2005	gui.c	FUNCTION_32
0x4000c53	              0xc3	                                     ret	      2005	gui.c	FUNCTION_32
gui_use_tabline	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	12
0x4002734	    0x8b0500000000	            mov eax, dword [0x0400273a] 	      3682	gui.c	FUNCTION_54	CALL_1
0x400273a	            0x85c0	                           test eax, eax	      3682	gui.c	FUNCTION_54	CALL_1
0x400273c	            0x7422	                            je 0x4002760	      3682	gui.c	FUNCTION_54	CALL_1
0x400273e	        0x4883ec08	                              sub rsp, 8	      3681	gui.c	FUNCTION_54
0x4002742	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x4002747	    0x488b3d000000	            mov rdi, qword [0x0400274e] 	      3682	gui.c	FUNCTION_54	CALL_1
0x400274e	      0xe800000000	                          call 0x4002753	      3682	gui.c	FUNCTION_54	CALL_1
0x4002753	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x4002756	           0xf95c0	                                setne al	      3682	gui.c	FUNCTION_54	CALL_1
0x4002759	           0xfb6c0	                           movzx eax, al	      3682	gui.c	FUNCTION_54	CALL_1
0x400275c	        0x4883c408	                              add rsp, 8	      3683	gui.c	FUNCTION_54
0x4002760	            0xf3c3	                                     ret	      3683	gui.c	FUNCTION_54
gui_handle_drop	WHILE,0:functions,0:SWITCH,0:ELSE,4:IF,11:FOR,1:CALL,27:DO,0	155
0x4005bcc	            0x4157	                                push r15	      5435	gui.c	FUNCTION_93
0x4005bce	            0x4156	                                push r14	      5435	gui.c	FUNCTION_93
0x4005bd0	            0x4155	                                push r13	      5435	gui.c	FUNCTION_93
0x4005bd2	            0x4154	                                push r12	      5435	gui.c	FUNCTION_93
0x4005bd4	              0x55	                                push rbp	      5435	gui.c	FUNCTION_93
0x4005bd5	              0x53	                                push rbx	      5435	gui.c	FUNCTION_93
0x4005bd6	        0x4883ec18	                           sub rsp, 0x18	      5435	gui.c	FUNCTION_93
0x4005bda	    0x64488b042528	                mov rax, qword fs:[0x28]	      5435	gui.c	FUNCTION_93
0x4005be3	      0x4889442408	                mov qword [rsp + 8], rax	      5435	gui.c	FUNCTION_93
0x4005be8	            0x31c0	                            xor eax, eax	      5435	gui.c	FUNCTION_93
0x4005bea	    0x833d00000000	               cmp dword [0x04005bf1], 0	      5445	gui.c	FUNCTION_93	IF_1
0x4005bf1	     0xf85e9010000	                           jne 0x4005de0	      5445	gui.c	FUNCTION_93	IF_1
0x4005bf7	            0x89d3	                            mov ebx, edx	      5445	gui.c	FUNCTION_93	IF_1
0x4005bf9	          0x4989cf	                            mov r15, rcx	      5445	gui.c	FUNCTION_93	IF_1
0x4005bfc	          0x4589c6	                           mov r14d, r8d	      5445	gui.c	FUNCTION_93	IF_1
0x4005bff	    0xc70500000000	               mov dword [0x04005c09], 1	      5447	gui.c	FUNCTION_93
0x4005c09	    0xf60500000000	               test byte [0x04005c10], 8	      5453	gui.c	FUNCTION_93	IF_2
0x4005c10	     0xf8497000000	                            je 0x4005cad	      5453	gui.c	FUNCTION_93	IF_2
0x4005c16	          0x4489c6	                            mov esi, r8d	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4005c19	          0x4889cf	                            mov rdi, rcx	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4005c1c	      0xe800000000	                          call 0x4005c21	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x4005c21	          0x4585f6	                         test r14d, r14d	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c24	            0x7e7a	                           jle 0x4005ca0	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c26	          0x4c89fb	                            mov rbx, r15	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c29	      0xbd00000000	                              mov ebp, 0	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c2e	          0x4989dd	                            mov r13, rbx	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c31	        0x48833b00	                      cmp qword [rbx], 0	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4005c35	            0x745d	                            je 0x4005c94	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x4005c37	            0x85ed	                           test ebp, ebp	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x4005c39	            0x7e0f	                           jle 0x4005c4a	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x4005c3b	      0xbe01000000	                              mov esi, 1	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4005c40	      0xbf00000000	                              mov edi, 0	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4005c45	      0xe800000000	                          call 0x4005c4a	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x4005c4a	      0xbe00000000	                              mov esi, 0	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4005c4f	        0x498b7d00	                    mov rdi, qword [r13]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4005c53	      0xe800000000	                          call 0x4005c58	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4005c58	          0x4989c4	                            mov r12, rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x4005c5b	          0x4885c0	                           test rax, rax	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x4005c5e	            0x7423	                            je 0x4005c83	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x4005c60	      0xb800000000	                              mov eax, 0	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c65	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c6c	          0x4c89e7	                            mov rdi, r12	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c6f	            0xf2ae	              repne scasb al, byte [rdi]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c71	          0x4889c8	                            mov rax, rcx	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c74	          0x48f7d0	                                 not rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c77	        0x488d70ff	                      lea rsi, [rax - 1]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c7b	          0x4c89e7	                            mov rdi, r12	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c7e	      0xe800000000	                          call 0x4005c83	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4005c83	          0x4c89e7	                            mov rdi, r12	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x4005c86	      0xe800000000	                          call 0x4005c8b	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x4005c8b	        0x498b7d00	                    mov rdi, qword [r13]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x4005c8f	      0xe800000000	                          call 0x4005c94	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x4005c94	          0x83c501	                              add ebp, 1	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c97	        0x4883c308	                              add rbx, 8	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c9b	          0x4139ee	                           cmp r14d, ebp	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005c9e	            0x758e	                           jne 0x4005c2e	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4005ca0	          0x4c89ff	                            mov rdi, r15	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x4005ca3	      0xe800000000	                          call 0x4005ca8	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x4005ca8	      0xe929010000	                           jmp 0x4005dd6	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x4005cad	      0xb900000000	                              mov ecx, 0	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cb2	    0x448b05000000	            mov r8d, dword [0x04005cb9] 	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cb9	            0x89f0	                            mov eax, esi	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cbb	          0x4429c0	                            sub eax, r8d	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cbe	              0x99	                                     cdq	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cbf	    0xf7b9d4000000	                 idiv dword [rcx + 0xd4]	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cc5	            0x89c6	                            mov esi, eax	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cc7	          0x890424	                    mov dword [rsp], eax	      5410	gui.c	FUNCTION_92	CALL_1
0x4005cca	            0x89f8	                            mov eax, edi	      5411	gui.c	FUNCTION_92	CALL_2
0x4005ccc	          0x4429c0	                            sub eax, r8d	      5411	gui.c	FUNCTION_92	CALL_2
0x4005ccf	              0x99	                                     cdq	      5411	gui.c	FUNCTION_92	CALL_2
0x4005cd0	    0xf7b9d0000000	                 idiv dword [rcx + 0xd0]	      5411	gui.c	FUNCTION_92	CALL_2
0x4005cd6	        0x89442404	                mov dword [rsp + 4], eax	      5411	gui.c	FUNCTION_92	CALL_2
0x4005cda	            0x85f6	                           test esi, esi	      5414	gui.c	FUNCTION_92	IF_1
0x4005cdc	            0x7827	                            js 0x4005d05	      5414	gui.c	FUNCTION_92	IF_1
0x4005cde	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x4005ce0	            0x7823	                            js 0x4005d05	      5414	gui.c	FUNCTION_92	IF_1
0x4005ce2	      0x488d742404	                      lea rsi, [rsp + 4]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4005ce7	          0x4889e7	                            mov rdi, rsp	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4005cea	      0xe800000000	                          call 0x4005cef	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x4005cef	          0x4885c0	                           test rax, rax	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4005cf2	            0x7411	                            je 0x4005d05	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4005cf4	    0x483b05000000	            cmp rax, qword [0x04005cfb] 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4005cfb	            0x7408	                            je 0x4005d05	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x4005cfd	          0x4889c7	                            mov rdi, rax	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x4005d00	      0xe800000000	                          call 0x4005d05	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x4005d05	          0x4489f6	                           mov esi, r14d	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4005d08	          0x4c89ff	                            mov rdi, r15	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4005d0b	      0xe800000000	                          call 0x4005d10	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x4005d10	      0xbd00000000	                              mov ebp, 0	      5490	gui.c	FUNCTION_93	ELSE_1	ELSE_2
0x4005d15	          0xf6c304	                              test bl, 4	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x4005d18	            0x742f	                            je 0x4005d49	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x4005d1a	          0x498b3f	                    mov rdi, qword [r15]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4005d1d	      0xe800000000	                          call 0x4005d22	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4005d22	          0x4889c5	                            mov rbp, rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4005d25	        0x4183fe01	                             cmp r14d, 1	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4005d29	            0x751e	                           jne 0x4005d49	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4005d2b	          0x498b3f	                    mov rdi, qword [r15]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4005d2e	      0xe800000000	                          call 0x4005d33	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4005d33	            0x85c0	                           test eax, eax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4005d35	            0x7412	                            je 0x4005d49	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4005d37	          0x498b3f	                    mov rdi, qword [r15]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4005d3a	      0xe800000000	                          call 0x4005d3f	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4005d3f	          0x4c89ff	                            mov rdi, r15	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4005d42	      0xe800000000	                          call 0x4005d47	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4005d47	            0xeb13	                           jmp 0x4005d5c	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4005d49	            0x89da	                            mov edx, ebx	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d4b	          0xc1ea04	                              shr edx, 4	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d4e	          0x83e201	                              and edx, 1	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d51	          0x4c89fe	                            mov rsi, r15	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d54	          0x4489f7	                           mov edi, r14d	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d57	      0xe800000000	                          call 0x4005d5c	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x4005d5c	          0x4885ed	                           test rbp, rbp	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4005d5f	            0x7448	                            je 0x4005da9	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x4005d61	          0x4889ef	                            mov rdi, rbp	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4005d64	      0xe800000000	                          call 0x4005d69	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4005d69	            0x85c0	                           test eax, eax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4005d6b	            0x7418	                            je 0x4005d85	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x4005d6d	          0x4889ef	                            mov rdi, rbp	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4005d70	      0xe800000000	                          call 0x4005d75	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4005d75	            0x85c0	                           test eax, eax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4005d77	            0x7528	                           jne 0x4005da1	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4005d79	      0xbf01000000	                              mov edi, 1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4005d7e	      0xe800000000	                          call 0x4005d83	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4005d83	            0xeb1c	                           jmp 0x4005da1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4005d85	      0xbe00000000	                              mov esi, 0	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4005d8a	          0x4889ef	                            mov rdi, rbp	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4005d8d	      0xe800000000	                          call 0x4005d92	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4005d92	          0x83f801	                              cmp eax, 1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4005d95	            0x750a	                           jne 0x4005da1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4005d97	      0xbf01000000	                              mov edi, 1	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x4005d9c	      0xe800000000	                          call 0x4005da1	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x4005da1	          0x4889ef	                            mov rdi, rbp	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x4005da4	      0xe800000000	                          call 0x4005da9	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x4005da9	      0xbf28000000	                           mov edi, 0x28	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4005dae	      0xe800000000	                          call 0x4005db3	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4005db3	      0xbf00000000	                              mov edi, 0	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x4005db8	      0xe800000000	                          call 0x4005dbd	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x4005dbd	      0xe800000000	                          call 0x4005dc2	      5525	gui.c	FUNCTION_93	ELSE_1	CALL_25
0x4005dc2	      0xe800000000	                          call 0x4005dc7	      5527	gui.c	FUNCTION_93	ELSE_1	CALL_26
0x4005dc7	      0xbe00000000	                              mov esi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4005dcc	      0xbf00000000	                              mov edi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4005dd1	      0xe800000000	                          call 0x4005dd6	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4005dd6	    0xc70500000000	               mov dword [0x04005de0], 0	      5531	gui.c	FUNCTION_93
0x4005de0	      0x488b442408	                mov rax, qword [rsp + 8]	      5532	gui.c	FUNCTION_93
0x4005de5	    0x644833042528	                xor rax, qword fs:[0x28]	      5532	gui.c	FUNCTION_93
0x4005dee	            0x7405	                            je 0x4005df5	      5532	gui.c	FUNCTION_93
0x4005df0	      0xe800000000	                          call 0x4005df5	      5532	gui.c	FUNCTION_93
0x4005df5	        0x4883c418	                           add rsp, 0x18	      5532	gui.c	FUNCTION_93
0x4005df9	              0x5b	                                 pop rbx	      5532	gui.c	FUNCTION_93
0x4005dfa	              0x5d	                                 pop rbp	      5532	gui.c	FUNCTION_93
0x4005dfb	            0x415c	                                 pop r12	      5532	gui.c	FUNCTION_93
0x4005dfd	            0x415d	                                 pop r13	      5532	gui.c	FUNCTION_93
0x4005dff	            0x415e	                                 pop r14	      5532	gui.c	FUNCTION_93
0x4005e01	            0x415f	                                 pop r15	      5532	gui.c	FUNCTION_93
0x4005e03	              0xc3	                                     ret	      5532	gui.c	FUNCTION_93
gui_get_base_width	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,0:DO,0	11
0x4000a17	    0x8b0500000000	            mov eax, dword [0x04000a1d] 	      1412	gui.c	FUNCTION_18
0x4000a1d	             0x1c0	                            add eax, eax	      1412	gui.c	FUNCTION_18
0x4000a1f	            0x89c2	                            mov edx, eax	      1414	gui.c	FUNCTION_18	IF_1
0x4000a21	     0x31500000000	             add edx, dword [0x04000a27]	      1414	gui.c	FUNCTION_18	IF_1
0x4000a27	    0x833d00000000	               cmp dword [0x04000a2e], 0	      1414	gui.c	FUNCTION_18	IF_1
0x4000a2e	           0xf45c2	                         cmovne eax, edx	      1414	gui.c	FUNCTION_18	IF_1
0x4000a31	            0x89c2	                            mov edx, eax	      1416	gui.c	FUNCTION_18	IF_2
0x4000a33	     0x31500000000	             add edx, dword [0x04000a39]	      1416	gui.c	FUNCTION_18	IF_2
0x4000a39	    0x833d00000000	               cmp dword [0x04000a40], 0	      1416	gui.c	FUNCTION_18	IF_2
0x4000a40	           0xf45c2	                         cmovne eax, edx	      1416	gui.c	FUNCTION_18	IF_2
0x4000a43	              0xc3	                                     ret	      1418	gui.c	FUNCTION_18
gui_disable_flush	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0:DO,0	2
0x4000c54	    0x830500000000	               add dword [0x04000c5b], 1	      2016	gui.c	FUNCTION_33
0x4000c5b	              0xc3	                                     ret	      2016	gui.c	FUNCTION_33
send_tabline_event	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,5:DO,0	41
0x4002aeb	              0x53	                                push rbx	      3825	gui.c	FUNCTION_58
0x4002aec	        0x4883ec10	                           sub rsp, 0x10	      3825	gui.c	FUNCTION_58
0x4002af0	            0x89fb	                            mov ebx, edi	      3825	gui.c	FUNCTION_58
0x4002af2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3825	gui.c	FUNCTION_58
0x4002afb	      0x4889442408	                mov qword [rsp + 8], rax	      3825	gui.c	FUNCTION_58
0x4002b00	            0x31c0	                            xor eax, eax	      3825	gui.c	FUNCTION_58
0x4002b02	    0x488b3d000000	            mov rdi, qword [0x04002b09] 	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002b09	      0xe800000000	                          call 0x4002b0e	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002b0e	            0x39d8	                            cmp eax, ebx	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002b10	            0x745f	                            je 0x4002b71	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4002b12	    0x8b0500000000	            mov eax, dword [0x04002b18] 	      3832	gui.c	FUNCTION_58	IF_2
0x4002b18	            0x85c0	                           test eax, eax	      3832	gui.c	FUNCTION_58	IF_2
0x4002b1a	            0x7509	                           jne 0x4002b25	      3832	gui.c	FUNCTION_58	IF_2
0x4002b1c	    0x833d00000000	               cmp dword [0x04002b23], 0	      3834	gui.c	FUNCTION_58	IF_2
0x4002b23	            0x741a	                            je 0x4002b3f	      3834	gui.c	FUNCTION_58	IF_2
0x4002b25	    0x488b3d000000	            mov rdi, qword [0x04002b2c] 	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4002b2c	      0xe800000000	                          call 0x4002b31	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4002b31	            0x89c7	                            mov edi, eax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4002b33	      0xe800000000	                          call 0x4002b38	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4002b38	      0xb800000000	                              mov eax, 0	      3840	gui.c	FUNCTION_58	IF_2
0x4002b3d	            0xeb37	                           jmp 0x4002b76	      3840	gui.c	FUNCTION_58	IF_2
0x4002b3f	        0xc604249b	                    mov byte [rsp], 0x9b	      3843	gui.c	FUNCTION_58
0x4002b43	      0xc6442401f0	                mov byte [rsp + 1], 0xf0	      3844	gui.c	FUNCTION_58
0x4002b48	      0xc644240258	                mov byte [rsp + 2], 0x58	      3845	gui.c	FUNCTION_58
0x4002b4d	      0xbe03000000	                              mov esi, 3	      3846	gui.c	FUNCTION_58	CALL_4
0x4002b52	          0x4889e7	                            mov rdi, rsp	      3846	gui.c	FUNCTION_58	CALL_4
0x4002b55	      0xe800000000	                          call 0x4002b5a	      3846	gui.c	FUNCTION_58	CALL_4
0x4002b5a	          0x881c24	                      mov byte [rsp], bl	      3847	gui.c	FUNCTION_58
0x4002b5d	      0xbe01000000	                              mov esi, 1	      3848	gui.c	FUNCTION_58	CALL_5
0x4002b62	          0x4889e7	                            mov rdi, rsp	      3848	gui.c	FUNCTION_58	CALL_5
0x4002b65	      0xe800000000	                          call 0x4002b6a	      3848	gui.c	FUNCTION_58	CALL_5
0x4002b6a	      0xb801000000	                              mov eax, 1	      3849	gui.c	FUNCTION_58
0x4002b6f	            0xeb05	                           jmp 0x4002b76	      3849	gui.c	FUNCTION_58
0x4002b71	      0xb800000000	                              mov eax, 0	      3829	gui.c	FUNCTION_58	IF_1
0x4002b76	      0x488b542408	                mov rdx, qword [rsp + 8]	      3850	gui.c	FUNCTION_58
0x4002b7b	    0x644833142528	                xor rdx, qword fs:[0x28]	      3850	gui.c	FUNCTION_58
0x4002b84	            0x7405	                            je 0x4002b8b	      3850	gui.c	FUNCTION_58
0x4002b86	      0xe800000000	                          call 0x4002b8b	      3850	gui.c	FUNCTION_58
0x4002b8b	        0x4883c410	                           add rsp, 0x10	      3850	gui.c	FUNCTION_58
0x4002b8f	              0x5b	                                 pop rbx	      3850	gui.c	FUNCTION_58
0x4002b90	              0xc3	                                     ret	      3850	gui.c	FUNCTION_58
gui_stop_highlight	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,1:FOR,0:CALL,0:DO,0	7
0x4000ad3	    0x81ffff000000	                           cmp edi, 0xff	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4000ad9	            0x7e0b	                           jle 0x4000ae6	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4000adb	    0xc70500000000	               mov dword [0x04000ae5], 0	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4000ae5	              0xc3	                                     ret	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4000ae6	            0xf7d7	                                 not edi	      1726	gui.c	FUNCTION_27
0x4000ae8	    0x213d00000000	             and dword [0x04000aee], edi	      1726	gui.c	FUNCTION_27
0x4000aee	              0xc3	                                     ret	      1726	gui.c	FUNCTION_27
scroll_line_len	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,1:CALL,3:DO,0	28
0x40000ea	            0x4154	                                push r12	      4534	gui.c	FUNCTION_68
0x40000ec	              0x55	                                push rbp	      4534	gui.c	FUNCTION_68
0x40000ed	              0x53	                                push rbx	      4534	gui.c	FUNCTION_68
0x40000ee	      0xe800000000	                          call 0x40000f3	      4539	gui.c	FUNCTION_68	CALL_1
0x40000f3	          0x4889c3	                            mov rbx, rax	      4539	gui.c	FUNCTION_68	CALL_1
0x40000f6	      0xbd00000000	                              mov ebp, 0	      4540	gui.c	FUNCTION_68
0x40000fb	          0x803800	                       cmp byte [rax], 0	      4541	gui.c	FUNCTION_68	IF_1
0x40000fe	            0x7433	                            je 0x4000133	      4541	gui.c	FUNCTION_68	IF_1
0x4000100	            0x89ee	                            mov esi, ebp	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000102	          0x4889df	                            mov rdi, rbx	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000105	      0xe800000000	                          call 0x400010a	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400010a	          0x4189c4	                           mov r12d, eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400010d	      0xb801000000	                              mov eax, 1	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000112	    0x833d00000000	               cmp dword [0x04000119], 0	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000119	            0x7409	                            je 0x4000124	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400011b	          0x4889df	                            mov rdi, rbx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400011e	    0xff1500000000	                 call qword [0x04000124]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000124	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000126	          0x4801c3	                            add rbx, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000129	          0x803b00	                       cmp byte [rbx], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x400012c	            0x7405	                            je 0x4000133	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x400012e	          0x4401e5	                           add ebp, r12d	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x4000131	            0xebcd	                           jmp 0x4000100	      4549	gui.c	FUNCTION_68	IF_1	FOR_1
0x4000133	            0x89e8	                            mov eax, ebp	      4551	gui.c	FUNCTION_68
0x4000135	              0x5b	                                 pop rbx	      4551	gui.c	FUNCTION_68
0x4000136	              0x5d	                                 pop rbp	      4551	gui.c	FUNCTION_68
0x4000137	            0x415c	                                 pop r12	      4551	gui.c	FUNCTION_68
0x4000139	              0xc3	                                     ret	      4551	gui.c	FUNCTION_68
gui_start_highlight	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,1:FOR,0:CALL,0:DO,0	6
0x4000abb	            0x89f8	                            mov eax, edi	      1715	gui.c	FUNCTION_26	IF_1
0x4000abd	     0xb0500000000	              or eax, dword [0x04000ac3]	      1715	gui.c	FUNCTION_26	IF_1
0x4000ac3	    0x81ff00010000	                          cmp edi, 0x100	      1715	gui.c	FUNCTION_26	IF_1
0x4000ac9	           0xf4cf8	                          cmovl edi, eax	      1715	gui.c	FUNCTION_26	IF_1
0x4000acc	    0x893d00000000	            mov dword [0x04000ad2], edi 	      1715	gui.c	FUNCTION_26	IF_1
0x4000ad2	              0xc3	                                     ret	      1715	gui.c	FUNCTION_26	IF_1
gui_start	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,4:FOR,0:CALL,15:DO,0	160
0x4005198	            0x4156	                                push r14	        76	gui.c	FUNCTION_1
0x400519a	            0x4155	                                push r13	        76	gui.c	FUNCTION_1
0x400519c	            0x4154	                                push r12	        76	gui.c	FUNCTION_1
0x400519e	              0x55	                                push rbp	        76	gui.c	FUNCTION_1
0x400519f	              0x53	                                push rbx	        76	gui.c	FUNCTION_1
0x40051a0	        0x4883ec40	                           sub rsp, 0x40	        76	gui.c	FUNCTION_1
0x40051a4	    0x64488b042528	                mov rax, qword fs:[0x28]	        76	gui.c	FUNCTION_1
0x40051ad	      0x4889442438	             mov qword [rsp + 0x38], rax	        76	gui.c	FUNCTION_1
0x40051b2	            0x31c0	                            xor eax, eax	        76	gui.c	FUNCTION_1
0x40051b4	    0x488b3d000000	            mov rdi, qword [0x040051bb] 	        80	gui.c	FUNCTION_1	CALL_1
0x40051bb	      0xe800000000	                          call 0x40051c0	        80	gui.c	FUNCTION_1	CALL_1
0x40051c0	          0x4889c3	                            mov rbx, rax	        80	gui.c	FUNCTION_1	CALL_1
0x40051c3	      0xbf00000000	                              mov edi, 0	        82	gui.c	FUNCTION_1	CALL_2
0x40051c8	      0xe800000000	                          call 0x40051cd	        82	gui.c	FUNCTION_1	CALL_2
0x40051cd	    0x8b0500000000	            mov eax, dword [0x040051d3] 	        83	gui.c	FUNCTION_1	IF_1
0x40051d3	            0x85c0	                           test eax, eax	        83	gui.c	FUNCTION_1	IF_1
0x40051d5	            0x7405	                            je 0x40051dc	        83	gui.c	FUNCTION_1	IF_1
0x40051d7	      0xe800000000	                          call 0x40051dc	        84	gui.c	FUNCTION_1	CALL_3
0x40051dc	    0xc70500000000	               mov dword [0x040051e6], 0	        85	gui.c	FUNCTION_1
0x40051e6	    0x830500000000	               add dword [0x040051ed], 1	        87	gui.c	FUNCTION_1
0x40051ed	    0x833d00000000	               cmp dword [0x040051f4], 0	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40051f4	     0xf84a7010000	                            je 0x40053a1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40051fa	      0xbe66000000	                           mov esi, 0x66	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x40051ff	    0x488b3d000000	            mov rdi, qword [0x04005206] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005206	      0xe800000000	                          call 0x400520b	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x400520b	          0x4885c0	                           test rax, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x400520e	     0xf858d010000	                           jne 0x40053a1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005214	    0x833d00000000	               cmp dword [0x0400521b], 1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x400521b	     0xf8f80010000	                            jg 0x40053a1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4005221	      0xe800000000	                          call 0x4005226	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4005226	            0x85c0	                           test eax, eax	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4005228	     0xf8573010000	                           jne 0x40053a1	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x400522e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       221	gui.c	FUNCTION_3	CALL_1
0x4005233	      0xe800000000	                          call 0x4005238	       221	gui.c	FUNCTION_3	CALL_1
0x4005238	          0x4189c4	                           mov r12d, eax	       221	gui.c	FUNCTION_3	CALL_1
0x400523b	      0xe800000000	                          call 0x4005240	       222	gui.c	FUNCTION_3	CALL_2
0x4005240	            0x89c5	                            mov ebp, eax	       222	gui.c	FUNCTION_3	CALL_2
0x4005242	            0x85c0	                           test eax, eax	       223	gui.c	FUNCTION_3	IF_1
0x4005244	            0x7921	                           jns 0x4005267	       223	gui.c	FUNCTION_3	IF_1
0x4005246	      0xba05000000	                              mov edx, 5	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x400524b	      0xbe00000000	                              mov esi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005250	      0xbf00000000	                              mov edi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005255	      0xe800000000	                          call 0x400525a	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x400525a	          0x4889c7	                            mov rdi, rax	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x400525d	      0xe800000000	                          call 0x4005262	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005262	      0xe953010000	                           jmp 0x40053ba	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4005267	            0x85c0	                           test eax, eax	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x4005269	     0xf8eb3000000	                           jle 0x4005322	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x400526f	          0x4585e4	                         test r12d, r12d	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4005272	            0x787d	                            js 0x40052f1	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4005274	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4005278	      0xe800000000	                          call 0x400527d	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x400527d	      0x448b6c2410	           mov r13d, dword [rsp + 0x10] 	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x4005282	      0xba09000000	                              mov edx, 9	       334	gui.c	FUNCTION_4	CALL_1
0x4005287	      0x488d742420	                   lea rsi, [rsp + 0x20]	       334	gui.c	FUNCTION_4	CALL_1
0x400528c	          0x4489ef	                           mov edi, r13d	       334	gui.c	FUNCTION_4	CALL_1
0x400528f	      0xe800000000	                          call 0x4005294	       334	gui.c	FUNCTION_4	CALL_1
0x4005294	          0x4989c6	                            mov r14, rax	       334	gui.c	FUNCTION_4	CALL_1
0x4005297	          0x4489ef	                           mov edi, r13d	       336	gui.c	FUNCTION_4	CALL_2
0x400529a	      0xe800000000	                          call 0x400529f	       336	gui.c	FUNCTION_4	CALL_2
0x400529f	          0x4d85f6	                           test r14, r14	       337	gui.c	FUNCTION_4	IF_1
0x40052a2	            0x7852	                            js 0x40052f6	       337	gui.c	FUNCTION_4	IF_1
0x40052a4	    0x42c644342000	          mov byte [rsp + r14 + 0x20], 0	       339	gui.c	FUNCTION_4
0x40052aa	      0x807c24206f	            cmp byte [rsp + 0x20], 0x6f 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052af	            0x750e	                           jne 0x40052bf	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052b1	      0x807c24216b	            cmp byte [rsp + 0x21], 0x6b 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052b6	            0x7507	                           jne 0x40052bf	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052b8	      0x807c242200	                cmp byte [rsp + 0x22], 0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052bd	            0x7432	                            je 0x40052f1	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x40052bf	      0xba00000000	                              mov edx, 0	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40052c4	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40052c9	            0x89ef	                            mov edi, ebp	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40052cb	      0xe800000000	                          call 0x40052d0	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x40052d0	      0xba05000000	                              mov edx, 5	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052d5	      0xbe00000000	                              mov esi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052da	      0xbf00000000	                              mov edi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052df	      0xe800000000	                          call 0x40052e4	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052e4	          0x4889c7	                            mov rdi, rax	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052e7	      0xe800000000	                          call 0x40052ec	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052ec	      0xe9c9000000	                           jmp 0x40053ba	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x40052f1	          0x4585e4	                         test r12d, r12d	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x40052f4	            0x790f	                           jns 0x4005305	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x40052f6	      0xbe01000000	                              mov esi, 1	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x40052fb	      0xbf2c010000	                          mov edi, 0x12c	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4005300	      0xe800000000	                          call 0x4005305	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4005305	    0x833d00000000	               cmp dword [0x0400530c], 0	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x400530c	            0x740a	                            je 0x4005318	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x400530e	      0xbf00000000	                              mov edi, 0	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4005313	      0xe800000000	                          call 0x4005318	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4005318	      0xbf00000000	                              mov edi, 0	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x400531d	      0xe800000000	                          call 0x4005322	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4005322	      0xe800000000	                          call 0x4005327	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4005327	          0x83f801	                              cmp eax, 1	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x400532a	            0x740a	                            je 0x4005336	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x400532c	      0xbf01000000	                              mov edi, 1	       278	gui.c	FUNCTION_3	CALL_15
0x4005331	      0xe800000000	                          call 0x4005336	       278	gui.c	FUNCTION_3	CALL_15
0x4005336	      0xe800000000	                          call 0x400533b	       287	gui.c	FUNCTION_3	CALL_16
0x400533b	          0x4585e4	                         test r12d, r12d	       292	gui.c	FUNCTION_3	IF_9
0x400533e	     0xf88e5000000	                            js 0x4005429	       292	gui.c	FUNCTION_3	IF_9
0x4005344	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	       293	gui.c	FUNCTION_3	CALL_18
0x4005348	      0xe800000000	                          call 0x400534d	       293	gui.c	FUNCTION_3	CALL_18
0x400534d	      0xe8acfdffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x4005352	    0x833d00000000	               cmp dword [0x04005359], 0	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4005359	            0x7415	                            je 0x4005370	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x400535b	      0xba03000000	                              mov edx, 3	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005360	      0xbe00000000	                              mov esi, 0	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005365	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005369	      0xe800000000	                          call 0x400536e	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x400536e	            0xeb13	                           jmp 0x4005383	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4005370	      0xba05000000	                              mov edx, 5	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005375	      0xbe00000000	                              mov esi, 0	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x400537a	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x400537e	      0xe800000000	                          call 0x4005383	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4005383	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4005387	      0xe800000000	                          call 0x400538c	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x400538c	    0x833d00000000	               cmp dword [0x04005393], 0	       314	gui.c	FUNCTION_3	IF_12
0x4005393	            0x7525	                           jne 0x40053ba	       314	gui.c	FUNCTION_3	IF_12
0x4005395	      0xbf01000000	                              mov edi, 1	       315	gui.c	FUNCTION_3	CALL_24
0x400539a	      0xe800000000	                          call 0x400539f	       315	gui.c	FUNCTION_3	CALL_24
0x400539f	            0xeb19	                           jmp 0x40053ba	       315	gui.c	FUNCTION_3	CALL_24
0x40053a1	      0xe800000000	                          call 0x40053a6	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40053a6	          0x83f801	                              cmp eax, 1	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40053a9	            0x740a	                            je 0x40053b5	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x40053ab	      0xbf01000000	                              mov edi, 1	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x40053b0	      0xe800000000	                          call 0x40053b5	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x40053b5	      0xe844fdffff	              call sym.gui_attempt_start	       115	gui.c	FUNCTION_1	ELSE_1	CALL_9
0x40053ba	    0x833d00000000	               cmp dword [0x040053c1], 0	       118	gui.c	FUNCTION_1	IF_4
0x40053c1	            0x7517	                           jne 0x40053da	       118	gui.c	FUNCTION_1	IF_4
0x40053c3	          0x4889df	                            mov rdi, rbx	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x40053c6	      0xe800000000	                          call 0x40053cb	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x40053cb	      0xbf02000000	                              mov edi, 2	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x40053d0	      0xe800000000	                          call 0x40053d5	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x40053d5	      0xe800000000	                          call 0x40053da	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x40053da	          0x4889df	                            mov rdi, rbx	       137	gui.c	FUNCTION_1	CALL_13
0x40053dd	      0xe800000000	                          call 0x40053e2	       137	gui.c	FUNCTION_1	CALL_13
0x40053e2	      0xe800000000	                          call 0x40053e7	       141	gui.c	FUNCTION_1	CALL_14
0x40053e7	    0x833d00000000	               cmp dword [0x040053ee], 1	       142	gui.c	FUNCTION_1	CALL_15
0x40053ee	            0x19ff	                            sbb edi, edi	       142	gui.c	FUNCTION_1	CALL_15
0x40053f0	            0xf7d7	                                 not edi	       142	gui.c	FUNCTION_1	CALL_15
0x40053f2	          0x83c738	                           add edi, 0x38	       142	gui.c	FUNCTION_1	CALL_15
0x40053f5	    0x4c8b05000000	              mov r8, qword [0x040053fc]	       142	gui.c	FUNCTION_1	CALL_15
0x40053fc	      0xb900000000	                              mov ecx, 0	       142	gui.c	FUNCTION_1	CALL_15
0x4005401	      0xba00000000	                              mov edx, 0	       142	gui.c	FUNCTION_1	CALL_15
0x4005406	      0xbe00000000	                              mov esi, 0	       142	gui.c	FUNCTION_1	CALL_15
0x400540b	      0xe800000000	                          call 0x4005410	       142	gui.c	FUNCTION_1	CALL_15
0x4005410	    0x832d00000000	               sub dword [0x04005417], 1	       144	gui.c	FUNCTION_1
0x4005417	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       145	gui.c	FUNCTION_1
0x400541c	    0x644833042528	                xor rax, qword fs:[0x28]	       145	gui.c	FUNCTION_1
0x4005425	            0x7411	                            je 0x4005438	       145	gui.c	FUNCTION_1
0x4005427	            0xeb0a	                           jmp 0x4005433	       145	gui.c	FUNCTION_1
0x4005429	      0xe8d0fcffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x400542e	      0xe959ffffff	                           jmp 0x400538c	       301	gui.c	FUNCTION_3	CALL_20
0x4005433	      0xe800000000	                          call 0x4005438	       145	gui.c	FUNCTION_1
0x4005438	        0x4883c440	                           add rsp, 0x40	       145	gui.c	FUNCTION_1
0x400543c	              0x5b	                                 pop rbx	       145	gui.c	FUNCTION_1
0x400543d	              0x5d	                                 pop rbp	       145	gui.c	FUNCTION_1
0x400543e	            0x415c	                                 pop r12	       145	gui.c	FUNCTION_1
0x4005440	            0x415d	                                 pop r13	       145	gui.c	FUNCTION_1
0x4005442	            0x415e	                                 pop r14	       145	gui.c	FUNCTION_1
0x4005444	              0xc3	                                     ret	       145	gui.c	FUNCTION_1
gui_screenchar	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,3:FOR,0:CALL,5:DO,0	78
0x400103c	            0x4156	                                push r14	      2107	gui.c	FUNCTION_37
0x400103e	            0x4155	                                push r13	      2107	gui.c	FUNCTION_37
0x4001040	            0x4154	                                push r12	      2107	gui.c	FUNCTION_37
0x4001042	              0x55	                                push rbp	      2107	gui.c	FUNCTION_37
0x4001043	              0x53	                                push rbx	      2107	gui.c	FUNCTION_37
0x4001044	        0x4883ec20	                           sub rsp, 0x20	      2107	gui.c	FUNCTION_37
0x4001048	            0x89fb	                            mov ebx, edi	      2107	gui.c	FUNCTION_37
0x400104a	            0x89f5	                            mov ebp, esi	      2107	gui.c	FUNCTION_37
0x400104c	          0x4989d4	                            mov r12, rdx	      2107	gui.c	FUNCTION_37
0x400104f	          0x4989cd	                            mov r13, rcx	      2107	gui.c	FUNCTION_37
0x4001052	          0x4589c6	                           mov r14d, r8d	      2107	gui.c	FUNCTION_37
0x4001055	    0x64488b042528	                mov rax, qword fs:[0x28]	      2107	gui.c	FUNCTION_37
0x400105e	      0x4889442418	             mov qword [rsp + 0x18], rax	      2107	gui.c	FUNCTION_37
0x4001063	            0x31c0	                            xor eax, eax	      2107	gui.c	FUNCTION_37
0x4001065	    0x833d00000000	               cmp dword [0x0400106c], 0	      2112	gui.c	FUNCTION_37	IF_1
0x400106c	            0x7445	                            je 0x40010b3	      2112	gui.c	FUNCTION_37	IF_1
0x400106e	          0x4863d7	                         movsxd rdx, edi	      2112	gui.c	FUNCTION_37	IF_1
0x4001071	      0xb801000000	                              mov eax, 1	      2113	gui.c	FUNCTION_37	IF_1
0x4001076	    0x488b0d000000	            mov rcx, qword [0x0400107d] 	      2112	gui.c	FUNCTION_37	IF_1
0x400107d	        0x803c1100	                 cmp byte [rcx + rdx], 0	      2112	gui.c	FUNCTION_37	IF_1
0x4001081	     0xf84ab000000	                            je 0x4001132	      2112	gui.c	FUNCTION_37	IF_1
0x4001087	    0x488b05000000	            mov rax, qword [0x0400108e] 	      2115	gui.c	FUNCTION_37	IF_2
0x400108e	        0x833c9000	              cmp dword [rax + rdx*4], 0	      2115	gui.c	FUNCTION_37	IF_2
0x4001092	            0x741f	                            je 0x40010b3	      2115	gui.c	FUNCTION_37	IF_2
0x4001094	          0x4889e6	                            mov rsi, rsp	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x4001097	      0xe800000000	                          call 0x400109c	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400109c	          0x4589f1	                           mov r9d, r14d	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x400109f	          0x4d89e8	                             mov r8, r13	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010a2	          0x4c89e1	                            mov rcx, r12	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010a5	            0x89ea	                            mov edx, ebp	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010a7	            0x89c6	                            mov esi, eax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010a9	          0x4889e7	                            mov rdi, rsp	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010ac	      0xe800000000	                          call 0x40010b1	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010b1	            0xeb7f	                           jmp 0x4001132	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x40010b3	    0x8b1500000000	            mov edx, dword [0x040010b9] 	      2120	gui.c	FUNCTION_37	IF_3
0x40010b9	    0x81facc260000	                         cmp edx, 0x26cc	      2120	gui.c	FUNCTION_37	IF_3
0x40010bf	            0x753c	                           jne 0x40010fd	      2120	gui.c	FUNCTION_37	IF_3
0x40010c1	          0x4863c3	                         movsxd rax, ebx	      2120	gui.c	FUNCTION_37	IF_3
0x40010c4	    0x488b15000000	            mov rdx, qword [0x040010cb] 	      2120	gui.c	FUNCTION_37	IF_3
0x40010cb	        0x803c028e	              cmp byte [rdx + rax], 0x8e	      2120	gui.c	FUNCTION_37	IF_3
0x40010cf	            0x7535	                           jne 0x4001106	      2120	gui.c	FUNCTION_37	IF_3
0x40010d1	        0xc604248e	                    mov byte [rsp], 0x8e	      2122	gui.c	FUNCTION_37	IF_3
0x40010d5	    0x488b15000000	            mov rdx, qword [0x040010dc] 	      2123	gui.c	FUNCTION_37	IF_3
0x40010dc	          0x8a0402	                mov al, byte [rdx + rax]	      2123	gui.c	FUNCTION_37	IF_3
0x40010df	        0x88442401	                  mov byte [rsp + 1], al	      2123	gui.c	FUNCTION_37	IF_3
0x40010e3	          0x4589f1	                           mov r9d, r14d	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010e6	          0x4d89e8	                             mov r8, r13	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010e9	          0x4c89e1	                            mov rcx, r12	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010ec	            0x89ea	                            mov edx, ebp	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010ee	      0xbe02000000	                              mov esi, 2	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010f3	          0x4889e7	                            mov rdi, rsp	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010f6	      0xe800000000	                          call 0x40010fb	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010fb	            0xeb35	                           jmp 0x4001132	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x40010fd	      0xb801000000	                              mov eax, 1	      2128	gui.c	FUNCTION_37	CALL_4
0x4001102	            0x85d2	                           test edx, edx	      2128	gui.c	FUNCTION_37	CALL_4
0x4001104	            0x7410	                            je 0x4001116	      2128	gui.c	FUNCTION_37	CALL_4
0x4001106	          0x4863fb	                         movsxd rdi, ebx	      2128	gui.c	FUNCTION_37	CALL_4
0x4001109	    0x48033d000000	             add rdi, qword [0x04001110]	      2128	gui.c	FUNCTION_37	CALL_4
0x4001110	    0xff1500000000	                 call qword [0x04001116]	      2128	gui.c	FUNCTION_37	CALL_4
0x4001116	          0x4863fb	                         movsxd rdi, ebx	      2128	gui.c	FUNCTION_37	CALL_4
0x4001119	    0x48033d000000	             add rdi, qword [0x04001120]	      2128	gui.c	FUNCTION_37	CALL_4
0x4001120	          0x4589f1	                           mov r9d, r14d	      2128	gui.c	FUNCTION_37	CALL_4
0x4001123	          0x4d89e8	                             mov r8, r13	      2128	gui.c	FUNCTION_37	CALL_4
0x4001126	          0x4c89e1	                            mov rcx, r12	      2128	gui.c	FUNCTION_37	CALL_4
0x4001129	            0x89ea	                            mov edx, ebp	      2128	gui.c	FUNCTION_37	CALL_4
0x400112b	            0x89c6	                            mov esi, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x400112d	      0xe800000000	                          call 0x4001132	      2128	gui.c	FUNCTION_37	CALL_4
0x4001132	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2134	gui.c	FUNCTION_37
0x4001137	    0x644833342528	                xor rsi, qword fs:[0x28]	      2134	gui.c	FUNCTION_37
0x4001140	            0x7405	                            je 0x4001147	      2134	gui.c	FUNCTION_37
0x4001142	      0xe800000000	                          call 0x4001147	      2134	gui.c	FUNCTION_37
0x4001147	        0x4883c420	                           add rsp, 0x20	      2134	gui.c	FUNCTION_37
0x400114b	              0x5b	                                 pop rbx	      2134	gui.c	FUNCTION_37
0x400114c	              0x5d	                                 pop rbp	      2134	gui.c	FUNCTION_37
0x400114d	            0x415c	                                 pop r12	      2134	gui.c	FUNCTION_37
0x400114f	            0x415d	                                 pop r13	      2134	gui.c	FUNCTION_37
0x4001151	            0x415e	                                 pop r14	      2134	gui.c	FUNCTION_37
0x4001153	              0xc3	                                     ret	      2134	gui.c	FUNCTION_37
gui_init_which_components	WHILE,0:functions,1:SWITCH,1:ELSE,2:IF,25:FOR,3:CALL,18:DO,0	225
0x400363d	            0x4157	                                push r15	      3438	gui.c	FUNCTION_53
0x400363f	            0x4156	                                push r14	      3438	gui.c	FUNCTION_53
0x4003641	            0x4155	                                push r13	      3438	gui.c	FUNCTION_53
0x4003643	            0x4154	                                push r12	      3438	gui.c	FUNCTION_53
0x4003645	              0x55	                                push rbp	      3438	gui.c	FUNCTION_53
0x4003646	              0x53	                                push rbx	      3438	gui.c	FUNCTION_53
0x4003647	        0x4883ec18	                           sub rsp, 0x18	      3438	gui.c	FUNCTION_53
0x400364b	          0x4885ff	                           test rdi, rdi	      3469	gui.c	FUNCTION_53	IF_1
0x400364e	            0x7459	                            je 0x40036a9	      3469	gui.c	FUNCTION_53	IF_1
0x4003650	          0x4889fb	                            mov rbx, rdi	      3469	gui.c	FUNCTION_53	IF_1
0x4003653	    0x833d00000000	               cmp dword [0x0400365a], 0	      3469	gui.c	FUNCTION_53	IF_1
0x400365a	            0x744d	                            je 0x40036a9	      3469	gui.c	FUNCTION_53	IF_1
0x400365c	      0xbe67000000	                           mov esi, 0x67	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003661	      0xe800000000	                          call 0x4003666	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003666	          0x4889c5	                            mov rbp, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4003669	      0xbe67000000	                           mov esi, 0x67	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x400366e	    0x488b3d000000	            mov rdi, qword [0x04003675] 	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4003675	      0xe800000000	                          call 0x400367a	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x400367a	          0x4885ed	                           test rbp, rbp	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x400367d	           0xf95c2	                                setne dl	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003680	          0x4885c0	                           test rax, rax	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003683	           0xf95c0	                                setne al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003686	            0x38c2	                              cmp dl, al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x4003688	            0x741f	                            je 0x40036a9	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x400368a	    0x488b2d000000	            mov rbp, qword [0x04003691] 	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x4003691	    0x48891d000000	            mov qword [0x04003698], rbx 	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x4003698	      0xbf3f000000	                           mov edi, 0x3f	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x400369d	      0xe800000000	                          call 0x40036a2	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40036a2	    0x48892d000000	            mov qword [0x040036a9], rbp 	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x40036a9	    0xc60500000000	                mov byte [0x040036b0], 0	      3484	gui.c	FUNCTION_53
0x40036b0	    0xc70500000000	               mov dword [0x040036ba], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x40036ba	    0xc70500000000	               mov dword [0x040036c4], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x40036c4	    0xc70500000000	               mov dword [0x040036ce], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x40036ce	    0x488b1d000000	            mov rbx, qword [0x040036d5] 	      3489	gui.c	FUNCTION_53	FOR_2
0x40036d5	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x40036d8	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x40036da	     0xf849b000000	                            je 0x400377b	      3489	gui.c	FUNCTION_53	FOR_2
0x40036e0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3489	gui.c	FUNCTION_53	FOR_2
0x40036e8	    0xc74424080000	                  mov dword [rsp + 8], 0	      3489	gui.c	FUNCTION_53	FOR_2
0x40036f0	          0x83e84c	                           sub eax, 0x4c	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40036f3	            0x3c28	                            cmp al, 0x28	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40036f5	            0x7773	                            ja 0x400376a	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40036f7	           0xfb6c0	                           movzx eax, al	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x40036fa	    0xff24c5000000	                       jmp qword [rax*8]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003701	    0xc74424080100	                  mov dword [rsp + 8], 1	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003709	            0xeb5f	                           jmp 0x400376a	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400370b	    0xc70500000000	               mov dword [0x04003715], 1	      3493	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003715	            0xeb53	                           jmp 0x400376a	      3494	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003717	    0xc70500000000	               mov dword [0x04003721], 1	      3496	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003721	            0xeb47	                           jmp 0x400376a	      3497	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003723	      0xe800000000	                          call 0x4003728	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4003728	            0x85c0	                           test eax, eax	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x400372a	            0x743e	                            je 0x400376a	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x400372c	    0xc70500000000	               mov dword [0x04003736], 1	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x4003736	            0xeb32	                           jmp 0x400376a	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x4003738	      0xe800000000	                          call 0x400373d	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x400373d	            0x85c0	                           test eax, eax	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x400373f	            0x7429	                            je 0x400376a	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4003741	    0xc70500000000	               mov dword [0x0400374b], 1	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x400374b	            0xeb1d	                           jmp 0x400376a	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x400374d	    0xc70500000000	               mov dword [0x04003757], 1	      3507	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003757	            0xeb11	                           jmp 0x400376a	      3508	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003759	    0xc60500000000	                mov byte [0x04003760], 1	      3511	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003760	            0xeb08	                           jmp 0x400376a	      3512	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4003762	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3529	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400376a	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x400376e	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4003771	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4003773	     0xf8577ffffff	                           jne 0x40036f0	      3489	gui.c	FUNCTION_53	FOR_2
0x4003779	            0xeb10	                           jmp 0x400378b	      3489	gui.c	FUNCTION_53	FOR_2
0x400377b	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3455	gui.c	FUNCTION_53
0x4003783	    0xc74424080000	                  mov dword [rsp + 8], 0	      3444	gui.c	FUNCTION_53
0x400378b	    0x833d00000000	               cmp dword [0x04003792], 0	      3537	gui.c	FUNCTION_53	IF_5
0x4003792	     0xf8487020000	                            je 0x4003a1f	      3537	gui.c	FUNCTION_53	IF_5
0x4003798	      0xe8c5efffff	                call sym.gui_has_tabline	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x400379d	            0x89c3	                            mov ebx, eax	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x400379f	      0xe800000000	                          call 0x40037a4	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037a4	            0x85c0	                           test eax, eax	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037a6	           0xf94c2	                                 sete dl	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037a9	            0x85db	                           test ebx, ebx	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037ab	           0xf94c0	                                 sete al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037ae	            0x38c2	                              cmp dl, al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037b0	            0x743d	                            je 0x40037ef	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40037b2	    0x488b2d000000	            mov rbp, qword [0x040037b9] 	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x40037b9	      0xe800000000	                          call 0x40037be	      3551	gui.c	FUNCTION_53	IF_5	IF_6	CALL_8
0x40037be	          0x4863ed	                         movsxd rbp, ebp	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x40037c1	    0x48892d000000	            mov qword [0x040037c8], rbp 	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x40037c8	            0x85db	                           test ebx, ebx	      3540	gui.c	FUNCTION_53	IF_5
0x40037ca	           0xf95c0	                                setne al	      3540	gui.c	FUNCTION_53	IF_5
0x40037cd	           0xfb6c0	                           movzx eax, al	      3540	gui.c	FUNCTION_53	IF_5
0x40037d0	        0x89442404	                mov dword [rsp + 4], eax	      3540	gui.c	FUNCTION_53	IF_5
0x40037d4	      0xe800000000	                          call 0x40037d9	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40037d9	    0x41bf01000000	                             mov r15d, 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x40037df	            0x85c0	                           test eax, eax	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40037e1	            0x751a	                           jne 0x40037fd	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40037e3	    0xc70500000000	               mov dword [0x040037ed], 1	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x40037ed	            0xeb0e	                           jmp 0x40037fd	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x40037ef	    0xc74424040000	                  mov dword [rsp + 4], 0	      3540	gui.c	FUNCTION_53	IF_5
0x40037f7	    0x41bf00000000	                             mov r15d, 0	      3539	gui.c	FUNCTION_53	IF_5
0x40037fd	    0x41be00000000	                             mov r14d, 0	      3539	gui.c	FUNCTION_53	IF_5
0x4003803	    0x41bd00000000	                             mov r13d, 0	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x4003809	          0x4489ed	                           mov ebp, r13d	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x400380c	          0x4d89f4	                            mov r12, r14	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x400380f	    0x418bb6c00000	            mov esi, dword [r14 + 0xc0] 	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003816	    0x423b34ad0000	                  cmp esi, dword [r13*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400381e	            0x7510	                           jne 0x4003830	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003820	          0x4963c5	                        movsxd rax, r13d	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003823	    0x488b15000000	            mov rdx, qword [0x0400382a] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400382a	        0x3b748248	    cmp esi, dword [rdx + rax*4 + 0x48] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400382e	            0x7475	                            je 0x40038a5	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4003830	          0x83fd02	                              cmp ebp, 2	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x4003833	            0x751e	                           jne 0x4003853	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x4003835	      0xbf00000000	                              mov edi, 0	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x400383a	      0xe800000000	                          call 0x400383f	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x400383f	    0x418b8424c000	            mov eax, dword [r12 + 0xc0] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4003847	    0x423b04ad0000	                  cmp eax, dword [r13*4]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400384f	            0x7532	                           jne 0x4003883	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4003851	            0xeb52	                           jmp 0x40038a5	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4003853	    0x488b1d000000	            mov rbx, qword [0x0400385a] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400385a	          0x4885db	                           test rbx, rbx	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400385d	     0xf8478010000	                            je 0x40039db	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003863	    0x418b9424c000	            mov edx, dword [r12 + 0xc0] 	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x400386b	            0x89ee	                            mov esi, ebp	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x400386d	          0x4889df	                            mov rdi, rbx	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4003870	      0xe885cbffff	               call sym.gui_do_scrollbar	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4003875	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003879	          0x4885db	                           test rbx, rbx	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400387c	            0x75e5	                           jne 0x4003863	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400387e	      0xe958010000	                           jmp 0x40039db	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4003883	        0x4183cf01	                              or r15d, 1	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x4003887	            0x85c0	                           test eax, eax	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4003889	     0xf8567010000	                           jne 0x40039f6	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400388f	            0xeb14	                           jmp 0x40038a5	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4003891	        0x4183cf02	                              or r15d, 2	      3586	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	ELSE_2
0x4003895	            0x85c0	                           test eax, eax	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4003897	      0xb801000000	                              mov eax, 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400389c	       0xf44442404	              cmove eax, dword [rsp + 4]	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x40038a1	        0x89442404	                mov dword [rsp + 4], eax	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x40038a5	    0x418b9424c000	            mov edx, dword [r12 + 0xc0] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038ad	          0x4863ed	                         movsxd rbp, ebp	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038b0	    0x488b05000000	            mov rax, qword [0x040038b7] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038b7	        0x8954a848	     mov dword [rax + rbp*4 + 0x48], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038bb	    0x418b8424c000	            mov eax, dword [r12 + 0xc0] 	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038c3	    0x428904ad0000	                  mov dword [r13*4], eax	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038cb	        0x4983c501	                              add r13, 1	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038cf	        0x4983c604	                              add r14, 4	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038d3	        0x4983fd03	                              cmp r13, 3	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038d7	     0xf852cffffff	                           jne 0x4003809	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x40038dd	     0xfbe3d000000	           movsx edi, byte [0x040038e4] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40038e4	    0x3b3d00000000	            cmp edi, dword [0x040038ea] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40038ea	            0x743a	                            je 0x4003926	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x40038ec	    0x488b1d000000	            mov rbx, qword [0x040038f3] 	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x40038f3	      0xe800000000	                          call 0x40038f8	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x40038f8	          0x4863db	                         movsxd rbx, ebx	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x40038fb	    0x48891d000000	            mov qword [0x04003902], rbx 	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x4003902	     0xfb605000000	           movzx eax, byte [0x04003909] 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x4003909	           0xfbed0	                           movsx edx, al	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x400390c	    0x891500000000	            mov dword [0x04003912], edx 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x4003912	        0x4183cf01	                              or r15d, 1	      3604	gui.c	FUNCTION_53	IF_5	IF_14
0x4003916	            0x84c0	                             test al, al	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4003918	      0xb801000000	                              mov eax, 1	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x400391d	       0xf44442404	              cmove eax, dword [rsp + 4]	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4003922	        0x89442404	                mov dword [rsp + 4], eax	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4003926	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x400392a	    0x391d00000000	            cmp dword [0x04003930], ebx 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4003930	            0x7421	                            je 0x4003953	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x4003932	            0x89df	                            mov edi, ebx	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x4003934	      0xe800000000	                          call 0x4003939	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x4003939	    0x891d00000000	            mov dword [0x0400393f], ebx 	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x400393f	        0x4183cf01	                              or r15d, 1	      3615	gui.c	FUNCTION_53	IF_5	IF_16
0x4003943	            0x85db	                           test ebx, ebx	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x4003945	      0xb801000000	                              mov eax, 1	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400394a	       0xf44442404	              cmove eax, dword [rsp + 4]	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x400394f	        0x89442404	                mov dword [rsp + 4], eax	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x4003953	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x4003957	    0x391d00000000	            cmp dword [0x0400395d], ebx 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x400395d	            0x740d	                            je 0x400396c	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x400395f	            0x89df	                            mov edi, ebx	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x4003961	      0xe800000000	                          call 0x4003966	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x4003966	    0x891d00000000	            mov dword [0x0400396c], ebx 	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x400396c	          0x4585ff	                         test r15d, r15d	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x400396f	            0x744d	                            je 0x40039be	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4003971	    0x488b1d000000	            mov rbx, qword [0x04003978] 	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x4003978	    0x488b2d000000	            mov rbp, qword [0x0400397f] 	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x400397f	          0x4489fa	                           mov edx, r15d	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4003982	        0x8b742404	                mov esi, dword [rsp + 4]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4003986	      0xbf00000000	                              mov edi, 0	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x400398b	      0xe800000000	                          call 0x4003990	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4003990	    0x833d00000000	               cmp dword [0x04003997], 0	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4003997	            0x750b	                           jne 0x40039a4	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4003999	        0x4183ff03	                             cmp r15d, 3	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400399d	            0x7405	                            je 0x40039a4	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400399f	      0xe800000000	                          call 0x40039a4	      3660	gui.c	FUNCTION_53	IF_5	IF_21	CALL_16
0x40039a4	        0x41f6c701	                            test r15b, 1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40039a8	            0x7507	                           jne 0x40039b1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40039aa	    0x48892d000000	            mov qword [0x040039b1], rbp 	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x40039b1	        0x41f6c702	                            test r15b, 2	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40039b5	            0x7507	                           jne 0x40039be	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40039b7	    0x48891d000000	            mov qword [0x040039be], rbx 	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x40039be	    0x488b05000000	            mov rax, qword [0x040039c5] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40039c5	    0x8b989c000000	            mov ebx, dword [rax + 0x9c] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40039cb	      0xe800000000	                          call 0x40039d0	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40039d0	            0x39c3	                            cmp ebx, eax	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40039d2	            0x744b	                            je 0x4003a1f	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x40039d4	      0xe800000000	                          call 0x40039d9	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x40039d9	            0xeb44	                           jmp 0x4003a1f	      3672	gui.c	FUNCTION_53
0x40039db	    0x418b8424c000	            mov eax, dword [r12 + 0xc0] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x40039e3	    0x423904ad0000	                  cmp dword [r13*4], eax	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x40039eb	     0xf85a0feffff	                           jne 0x4003891	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x40039f1	      0xe9affeffff	                           jmp 0x40038a5	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x40039f6	    0x488b05000000	            mov rax, qword [0x040039fd] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40039fd	    0x8b1500000000	            mov edx, dword [0x04003a03] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4003a03	          0x895050	             mov dword [rax + 0x50], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4003a06	    0x8b0500000000	            mov eax, dword [0x04003a0c] 	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4003a0c	    0x890500000000	            mov dword [0x04003a12], eax 	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4003a12	    0xc74424040100	                  mov dword [rsp + 4], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4003a1a	      0xe9befeffff	                           jmp 0x40038dd	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4003a1f	        0x4883c418	                           add rsp, 0x18	      3672	gui.c	FUNCTION_53
0x4003a23	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x4003a24	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x4003a25	            0x415c	                                 pop r12	      3672	gui.c	FUNCTION_53
0x4003a27	            0x415d	                                 pop r13	      3672	gui.c	FUNCTION_53
0x4003a29	            0x415e	                                 pop r14	      3672	gui.c	FUNCTION_53
0x4003a2b	            0x415f	                                 pop r15	      3672	gui.c	FUNCTION_53
0x4003a2d	              0xc3	                                     ret	      3672	gui.c	FUNCTION_53
display_errors	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,4:FOR,1:CALL,9:DO,0	64
0x4004fe4	              0x55	                                push rbp	      5078	gui.c	FUNCTION_86
0x4004fe5	              0x53	                                push rbx	      5078	gui.c	FUNCTION_86
0x4004fe6	        0x4883ec08	                              sub rsp, 8	      5078	gui.c	FUNCTION_86
0x4004fea	      0xbf02000000	                              mov edi, 2	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4004fef	      0xe800000000	                          call 0x4004ff4	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4004ff4	            0x85c0	                           test eax, eax	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4004ff6	            0x7411	                            je 0x4005009	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x4004ff8	    0x488b3d000000	            mov rdi, qword [0x04004fff] 	      5082	gui.c	FUNCTION_86	CALL_2
0x4004fff	      0xe800000000	                          call 0x4005004	      5082	gui.c	FUNCTION_86	CALL_2
0x4005004	      0xe9ee000000	                           jmp 0x40050f7	      5082	gui.c	FUNCTION_86	CALL_2
0x4005009	    0x488b2d000000	            mov rbp, qword [0x04005010] 	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005010	          0x4885ed	                           test rbp, rbp	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005013	     0xf84de000000	                            je 0x40050f7	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x4005019	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x400501d	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x400501f	     0xf84c8000000	                            je 0x40050ed	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x4005025	      0xe800000000	                          call 0x400502a	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400502a	          0x488b00	                    mov rax, qword [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400502d	           0xfb6db	                           movzx ebx, bl	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4005030	      0xf644580120	      test byte [rax + rbx*2 + 1], 0x20 	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4005035	     0xf85a2000000	                           jne 0x40050dd	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400503b	      0xb800000000	                              mov eax, 0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005040	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005047	          0x4889ef	                            mov rdi, rbp	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400504a	            0xf2ae	              repne scasb al, byte [rdi]	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400504c	          0x48f7d1	                                 not rcx	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400504f	        0x4883e901	                              sub rcx, 1	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4005053	    0x4881f9d00700	                          cmp rcx, 0x7d0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400505a	            0x762b	                           jbe 0x4005087	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x400505c	    0x48ba2e2e2e28	          movabs rdx, 0x6e757274282e2e2e	       110	string3.h	FUNCTION_100	CALL_3
0x4005066	    0x488995c20700	           mov qword [rbp + 0x7c2], rdx 	       110	string3.h	FUNCTION_100	CALL_3
0x400506d	    0xc785ca070000	     mov dword [rbp + 0x7ca], 0x65746163	       110	string3.h	FUNCTION_100	CALL_3
0x4005077	    0x66c785ce0700	          mov word [rbp + 0x7ce], 0x2964	       110	string3.h	FUNCTION_100	CALL_3
0x4005080	    0xc685d0070000	               mov byte [rbp + 0x7d0], 0	       110	string3.h	FUNCTION_100	CALL_3
0x4005087	      0xba05000000	                              mov edx, 5	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x400508c	      0xbe00000000	                              mov esi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005091	      0xbf00000000	                              mov edi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4005096	      0xe800000000	                          call 0x400509b	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x400509b	          0x4889c3	                            mov rbx, rax	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x400509e	      0xba05000000	                              mov edx, 5	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050a3	      0xbe00000000	                              mov esi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050a8	      0xbf00000000	                              mov edi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050ad	      0xe800000000	                          call 0x40050b2	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050b2	        0x4883ec08	                              sub rsp, 8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050b6	            0x6a00	                                  push 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050b8	    0x41b900000000	                              mov r9d, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050be	    0x41b801000000	                              mov r8d, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050c4	          0x4889d9	                            mov rcx, rbx	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050c7	          0x4889ea	                            mov rdx, rbp	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050ca	          0x4889c6	                            mov rsi, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050cd	      0xbf01000000	                              mov edi, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050d2	      0xe800000000	                          call 0x40050d7	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x40050d7	        0x4883c410	                           add rsp, 0x10	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x40050db	            0xeb10	                           jmp 0x40050ed	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x40050dd	        0x4883c501	                              add rbp, 1	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40050e1	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40050e5	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40050e7	     0xf8540ffffff	                           jne 0x400502d	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40050ed	      0xbf00000000	                              mov edi, 0	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x40050f2	      0xe800000000	                          call 0x40050f7	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x40050f7	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x40050fb	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x40050fc	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x40050fd	              0xc3	                                     ret	      5098	gui.c	FUNCTION_86
gui_prepare	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	6
0x4000759	        0x4883ec08	                              sub rsp, 8	       352	gui.c	FUNCTION_5
0x400075d	    0xc70500000000	               mov dword [0x04000767], 0	       353	gui.c	FUNCTION_5
0x4000767	    0xc70500000000	               mov dword [0x04000771], 0	       354	gui.c	FUNCTION_5
0x4000771	      0xe800000000	                          call 0x4000776	       355	gui.c	FUNCTION_5	CALL_1
0x4000776	        0x4883c408	                              add rsp, 8	       356	gui.c	FUNCTION_5
0x400077a	              0xc3	                                     ret	       356	gui.c	FUNCTION_5
gui_resize_shell	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,6:FOR,0:CALL,9:DO,0	78
0x40030a7	    0x833d00000000	               cmp dword [0x040030ae], 0	      1473	gui.c	FUNCTION_20	IF_1
0x40030ae	     0xf844b010000	                            je 0x40031ff	      1473	gui.c	FUNCTION_20	IF_1
0x40030b4	            0x4154	                                push r12	      1470	gui.c	FUNCTION_20
0x40030b6	              0x55	                                push rbp	      1470	gui.c	FUNCTION_20
0x40030b7	              0x53	                                push rbx	      1470	gui.c	FUNCTION_20
0x40030b8	            0x89fd	                            mov ebp, edi	      1470	gui.c	FUNCTION_20
0x40030ba	          0x4189f4	                           mov r12d, esi	      1470	gui.c	FUNCTION_20
0x40030bd	    0x833d00000000	               cmp dword [0x040030c4], 0	      1480	gui.c	FUNCTION_20	IF_2
0x40030c4	            0x7509	                           jne 0x40030cf	      1480	gui.c	FUNCTION_20	IF_2
0x40030c6	    0x833d00000000	               cmp dword [0x040030cd], 0	      1480	gui.c	FUNCTION_20	IF_2
0x40030cd	            0x7417	                            je 0x40030e6	      1480	gui.c	FUNCTION_20	IF_2
0x40030cf	    0x892d00000000	            mov dword [0x040030d5], ebp 	      1482	gui.c	FUNCTION_20	IF_2
0x40030d5	    0x448925000000	           mov dword [0x040030dc], r12d 	      1483	gui.c	FUNCTION_20	IF_2
0x40030dc	      0xe91a010000	                           jmp 0x40031fb	      1484	gui.c	FUNCTION_20	IF_2
0x40030e1	          0x4189c4	                           mov r12d, eax	      1484	gui.c	FUNCTION_20	IF_2
0x40030e4	            0x89d5	                            mov ebp, edx	      1484	gui.c	FUNCTION_20	IF_2
0x40030e6	    0xc70500000000	               mov dword [0x040030f0], 0	      1488	gui.c	FUNCTION_20
0x40030f0	    0xc70500000000	               mov dword [0x040030fa], 0	      1489	gui.c	FUNCTION_20
0x40030fa	    0xc70500000000	               mov dword [0x04003104], 1	      1490	gui.c	FUNCTION_20
0x4003104	      0xe800000000	                          call 0x4003109	      1493	gui.c	FUNCTION_20	CALL_1
0x4003109	      0xe800000000	                          call 0x400310e	      1495	gui.c	FUNCTION_20	CALL_2
0x400310e	      0xbb00000000	                              mov ebx, 0	      1495	gui.c	FUNCTION_20	CALL_2
0x4003113	            0x89e9	                            mov ecx, ebp	      1495	gui.c	FUNCTION_20	CALL_2
0x4003115	            0x29c1	                            sub ecx, eax	      1495	gui.c	FUNCTION_20	CALL_2
0x4003117	            0x89c8	                            mov eax, ecx	      1495	gui.c	FUNCTION_20	CALL_2
0x4003119	              0x99	                                     cdq	      1495	gui.c	FUNCTION_20	CALL_2
0x400311a	    0xf7bbd0000000	                 idiv dword [rbx + 0xd0]	      1495	gui.c	FUNCTION_20	CALL_2
0x4003120	    0x890500000000	            mov dword [0x04003126], eax 	      1495	gui.c	FUNCTION_20	CALL_2
0x4003126	      0xe800000000	                          call 0x400312b	      1496	gui.c	FUNCTION_20	CALL_3
0x400312b	          0x4489e6	                           mov esi, r12d	      1496	gui.c	FUNCTION_20	CALL_3
0x400312e	            0x29c6	                            sub esi, eax	      1496	gui.c	FUNCTION_20	CALL_3
0x4003130	            0x89f0	                            mov eax, esi	      1496	gui.c	FUNCTION_20	CALL_3
0x4003132	              0x99	                                     cdq	      1496	gui.c	FUNCTION_20	CALL_3
0x4003133	    0xf7bbd4000000	                 idiv dword [rbx + 0xd4]	      1496	gui.c	FUNCTION_20	CALL_3
0x4003139	    0x890500000000	            mov dword [0x0400313f], eax 	      1496	gui.c	FUNCTION_20	CALL_3
0x400313f	            0x89ef	                            mov edi, ebp	      1498	gui.c	FUNCTION_20	CALL_4
0x4003141	      0xe8faceffff	        call sym.gui_position_components	      1498	gui.c	FUNCTION_20	CALL_4
0x4003146	      0xe800000000	                          call 0x400314b	      1499	gui.c	FUNCTION_20	CALL_5
0x400314b	    0x8b0500000000	            mov eax, dword [0x04003151] 	      1505	gui.c	FUNCTION_20	IF_3
0x4003151	      0x3d00030000	                          cmp eax, 0x300	      1505	gui.c	FUNCTION_20	IF_3
0x4003156	            0x7407	                            je 0x400315f	      1505	gui.c	FUNCTION_20	IF_3
0x4003158	      0x3d00080000	                          cmp eax, 0x800	      1505	gui.c	FUNCTION_20	IF_3
0x400315d	            0x750c	                           jne 0x400316b	      1505	gui.c	FUNCTION_20	IF_3
0x400315f	    0x8b0500000000	            mov eax, dword [0x04003165] 	      1506	gui.c	FUNCTION_20	IF_3
0x4003165	    0x890500000000	            mov dword [0x0400316b], eax 	      1506	gui.c	FUNCTION_20	IF_3
0x400316b	    0x8b0500000000	            mov eax, dword [0x04003171] 	      1510	gui.c	FUNCTION_20	IF_4
0x4003171	    0x3b0500000000	            cmp eax, dword [0x04003177] 	      1510	gui.c	FUNCTION_20	IF_4
0x4003177	            0x7525	                           jne 0x400319e	      1510	gui.c	FUNCTION_20	IF_4
0x4003179	    0x8b1500000000	            mov edx, dword [0x0400317f] 	      1510	gui.c	FUNCTION_20	IF_4
0x400317f	    0x3b1500000000	            cmp edx, dword [0x04003185] 	      1510	gui.c	FUNCTION_20	IF_4
0x4003185	            0x7517	                           jne 0x400319e	      1510	gui.c	FUNCTION_20	IF_4
0x4003187	            0x4898	                                    cdqe	      1511	gui.c	FUNCTION_20	IF_4
0x4003189	    0x483b05000000	            cmp rax, qword [0x04003190] 	      1511	gui.c	FUNCTION_20	IF_4
0x4003190	            0x750c	                           jne 0x400319e	      1511	gui.c	FUNCTION_20	IF_4
0x4003192	          0x4863d2	                         movsxd rdx, edx	      1511	gui.c	FUNCTION_20	IF_4
0x4003195	    0x483b15000000	            cmp rdx, qword [0x0400319c] 	      1511	gui.c	FUNCTION_20	IF_4
0x400319c	            0x7405	                            je 0x40031a3	      1511	gui.c	FUNCTION_20	IF_4
0x400319e	      0xe800000000	                          call 0x40031a3	      1512	gui.c	FUNCTION_20	CALL_6
0x40031a3	      0xbf01000000	                              mov edi, 1	      1514	gui.c	FUNCTION_20	CALL_7
0x40031a8	      0xe800000000	                          call 0x40031ad	      1514	gui.c	FUNCTION_20	CALL_7
0x40031ad	      0xbe01000000	                              mov esi, 1	      1515	gui.c	FUNCTION_20	CALL_8
0x40031b2	      0xbf00000000	                              mov edi, 0	      1515	gui.c	FUNCTION_20	CALL_8
0x40031b7	      0xe800000000	                          call 0x40031bc	      1515	gui.c	FUNCTION_20	CALL_8
0x40031bc	    0xc70500000000	               mov dword [0x040031c6], 0	      1520	gui.c	FUNCTION_20
0x40031c6	    0x8b0500000000	            mov eax, dword [0x040031cc] 	      1525	gui.c	FUNCTION_20	IF_5
0x40031cc	            0x85c0	                           test eax, eax	      1525	gui.c	FUNCTION_20	IF_5
0x40031ce	            0x742b	                            je 0x40031fb	      1525	gui.c	FUNCTION_20	IF_5
0x40031d0	    0x8b1500000000	            mov edx, dword [0x040031d6] 	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40031d6	            0x39d5	                            cmp ebp, edx	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40031d8	     0xf8503ffffff	                           jne 0x40030e1	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40031de	          0x4139c4	                           cmp r12d, eax	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40031e1	     0xf85fafeffff	                           jne 0x40030e1	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x40031e7	    0xc70500000000	               mov dword [0x040031f1], 0	      1529	gui.c	FUNCTION_20	IF_5	IF_6
0x40031f1	    0xc70500000000	               mov dword [0x040031fb], 0	      1530	gui.c	FUNCTION_20	IF_5	IF_6
0x40031fb	              0x5b	                                 pop rbx	      1539	gui.c	FUNCTION_20
0x40031fc	              0x5d	                                 pop rbp	      1539	gui.c	FUNCTION_20
0x40031fd	            0x415c	                                 pop r12	      1539	gui.c	FUNCTION_20
0x40031ff	            0xf3c3	                                     ret	      1539	gui.c	FUNCTION_20
gui_wait_for_chars_3	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	4
0x40003ec	        0x4883ec08	                              sub rsp, 8	      2928	gui.c	FUNCTION_45
0x40003f0	      0xe800000000	                          call 0x40003f5	      2929	gui.c	FUNCTION_45	CALL_1
0x40003f5	        0x4883c408	                              add rsp, 8	      2930	gui.c	FUNCTION_45
0x40003f9	              0xc3	                                     ret	      2930	gui.c	FUNCTION_45
gui_do_scrollbar	WHILE,0:functions,0:SWITCH,0:ELSE,2:IF,5:FOR,0:CALL,1:DO,0	67
0x40003fa	        0x4883ec08	                              sub rsp, 8	      4381	gui.c	FUNCTION_66
0x40003fe	    0x488b0d000000	            mov rcx, qword [0x04000405] 	      4382	gui.c	FUNCTION_66
0x4000405	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      4382	gui.c	FUNCTION_66
0x400040b	          0x4189c0	                            mov r8d, eax	      4382	gui.c	FUNCTION_66
0x400040e	        0x41c1e81f	                           shr r8d, 0x1f	      4382	gui.c	FUNCTION_66
0x4000412	          0x4401c0	                            add eax, r8d	      4382	gui.c	FUNCTION_66
0x4000415	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x4000417	     0x381a8000000	             add eax, dword [rcx + 0xa8]	      4382	gui.c	FUNCTION_66
0x400041d	    0x8b8fa8000000	            mov ecx, dword [rdi + 0xa8] 	      4383	gui.c	FUNCTION_66
0x4000423	            0x39c8	                            cmp eax, ecx	      4384	gui.c	FUNCTION_66
0x4000425	     0xf8c94000000	                            jl 0x40004bf	      4384	gui.c	FUNCTION_66
0x400042b	          0x4189c8	                            mov r8d, ecx	      4384	gui.c	FUNCTION_66
0x400042e	    0x440387ac0000	             add r8d, dword [rdi + 0xac]	      4384	gui.c	FUNCTION_66
0x4000435	          0x4439c0	                            cmp eax, r8d	      4384	gui.c	FUNCTION_66
0x4000438	     0xf8e9d000000	                           jle 0x40004db	      4384	gui.c	FUNCTION_66
0x400043e	            0xeb7f	                           jmp 0x40004bf	      4384	gui.c	FUNCTION_66
0x4000440	    0x4c8b0d000000	              mov r9, qword [0x04000447]	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000447	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000449	          0x4d89c8	                              mov r8, r9	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400044c	        0x49c1e83f	                            shr r8, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000450	          0x4d01c8	                              add r8, r9	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000453	          0x49d1f8	                               sar r8, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000456	          0x4c39c0	                             cmp rax, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4000459	            0x7e1d	                           jle 0x4000478	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400045b	            0x85f6	                           test esi, esi	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400045d	            0x7507	                           jne 0x4000466	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400045f	            0x85c9	                           test ecx, ecx	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000461	           0xf95c0	                                setne al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000464	            0xeb06	                           jmp 0x400046c	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000466	          0x4585d2	                         test r10d, r10d	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000469	           0xf94c0	                                 sete al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400046c	            0x84c0	                             test al, al	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400046e	      0xb800000000	                              mov eax, 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000473	           0xf45d0	                         cmovne edx, eax	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000476	            0xeb2b	                           jmp 0x40004a3	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4000478	          0x4585d2	                         test r10d, r10d	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400047b	           0xf94c0	                                 sete al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400047e	          0x83fe01	                              cmp esi, 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000481	            0x750f	                           jne 0x4000492	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000483	     0x38fac000000	             add ecx, dword [rdi + 0xac]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000489	          0x4863c9	                         movsxd rcx, ecx	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400048c	          0x4c39c9	                             cmp rcx, r9	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400048f	           0xf95c0	                                setne al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000492	            0x84c0	                             test al, al	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000494	      0xb800000000	                              mov eax, 0	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4000499	           0xf45d0	                         cmovne edx, eax	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400049c	            0xeb05	                           jmp 0x40004a3	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400049e	      0xba00000000	                              mov edx, 0	      4393	gui.c	FUNCTION_66	IF_1	IF_2
0x40004a3	          0x4863c6	                         movsxd rax, esi	      4412	gui.c	FUNCTION_66	CALL_1
0x40004a6	        0x488d0480	                  lea rax, [rax + rax*4]	      4412	gui.c	FUNCTION_66	CALL_1
0x40004aa	        0x48c1e004	                              shl rax, 4	      4412	gui.c	FUNCTION_66	CALL_1
0x40004ae	    0x488dbc079018	           lea rdi, [rdi + rax + 0x1890]	      4412	gui.c	FUNCTION_66	CALL_1
0x40004b6	            0x89d6	                            mov esi, edx	      4412	gui.c	FUNCTION_66	CALL_1
0x40004b8	      0xe800000000	                          call 0x40004bd	      4412	gui.c	FUNCTION_66	CALL_1
0x40004bd	            0xeb37	                           jmp 0x40004f6	      4413	gui.c	FUNCTION_66
0x40004bf	    0x448b1d000000	           mov r11d, dword [0x040004c6] 	      4388	gui.c	FUNCTION_66	IF_1
0x40004c6	    0x41ba00000000	                             mov r10d, 0	      4388	gui.c	FUNCTION_66	IF_1
0x40004cc	    0x44391d000000	           cmp dword [0x040004d3], r11d 	      4388	gui.c	FUNCTION_66	IF_1
0x40004d3	     0xf8467ffffff	                            je 0x4000440	      4388	gui.c	FUNCTION_66	IF_1
0x40004d9	            0xebc3	                           jmp 0x400049e	      4388	gui.c	FUNCTION_66	IF_1
0x40004db	    0x448b15000000	           mov r10d, dword [0x040004e2] 	      4388	gui.c	FUNCTION_66	IF_1
0x40004e2	    0x443915000000	           cmp dword [0x040004e9], r10d 	      4388	gui.c	FUNCTION_66	IF_1
0x40004e9	            0x75b8	                           jne 0x40004a3	      4388	gui.c	FUNCTION_66	IF_1
0x40004eb	    0x41ba01000000	                             mov r10d, 1	      4384	gui.c	FUNCTION_66
0x40004f1	      0xe94affffff	                           jmp 0x4000440	      4384	gui.c	FUNCTION_66
0x40004f6	        0x4883c408	                              add rsp, 8	      4413	gui.c	FUNCTION_66
0x40004fa	              0xc3	                                     ret	      4413	gui.c	FUNCTION_66
gui_get_color	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,3:DO,0	25
0x4004b0c	    0x48c7c299d4ff	             mov rdx, 0xffffffffffffd499	      4767	gui.c	FUNCTION_75	IF_1
0x4004b13	          0x803f00	                       cmp byte [rdi], 0	      4766	gui.c	FUNCTION_75	IF_1
0x4004b16	            0x744f	                            je 0x4004b67	      4766	gui.c	FUNCTION_75	IF_1
0x4004b18	              0x53	                                push rbx	      4763	gui.c	FUNCTION_75
0x4004b19	          0x4889fb	                            mov rbx, rdi	      4763	gui.c	FUNCTION_75
0x4004b1c	      0xe800000000	                          call 0x4004b21	      4768	gui.c	FUNCTION_75	CALL_1
0x4004b21	          0x4889c2	                            mov rdx, rax	      4776	gui.c	FUNCTION_75
0x4004b24	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x4004b2a	            0x7536	                           jne 0x4004b62	      4770	gui.c	FUNCTION_75	IF_2
0x4004b2c	    0x48c7c299d4ff	             mov rdx, 0xffffffffffffd499	      4776	gui.c	FUNCTION_75
0x4004b33	    0x833d00000000	               cmp dword [0x04004b3a], 0	      4772	gui.c	FUNCTION_75	IF_2
0x4004b3a	            0x7426	                            je 0x4004b62	      4772	gui.c	FUNCTION_75	IF_2
0x4004b3c	      0xba05000000	                              mov edx, 5	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b41	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b46	      0xbf00000000	                              mov edi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b4b	      0xe800000000	                          call 0x4004b50	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b50	          0x4889de	                            mov rsi, rbx	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b53	          0x4889c7	                            mov rdi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b56	      0xe800000000	                          call 0x4004b5b	      4775	gui.c	FUNCTION_75	CALL_3
0x4004b5b	    0x48c7c299d4ff	             mov rdx, 0xffffffffffffd499	      4776	gui.c	FUNCTION_75
0x4004b62	          0x4889d0	                            mov rax, rdx	      4777	gui.c	FUNCTION_75
0x4004b65	              0x5b	                                 pop rbx	      4777	gui.c	FUNCTION_75
0x4004b66	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
0x4004b67	          0x4889d0	                            mov rax, rdx	      4777	gui.c	FUNCTION_75
0x4004b6a	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
gui_update_horiz_scrollbar	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,11:FOR,0:CALL,6:DO,0	113
0x4000214	    0x833d00000000	               cmp dword [0x0400021b], 0	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x400021b	     0xf84c9010000	                            je 0x40003ea	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4000221	            0x4156	                                push r14	      4604	gui.c	ELSE_2	FUNCTION_70
0x4000223	            0x4155	                                push r13	      4604	gui.c	ELSE_2	FUNCTION_70
0x4000225	            0x4154	                                push r12	      4604	gui.c	ELSE_2	FUNCTION_70
0x4000227	              0x55	                                push rbp	      4604	gui.c	ELSE_2	FUNCTION_70
0x4000228	              0x53	                                push rbx	      4604	gui.c	ELSE_2	FUNCTION_70
0x4000229	            0x89fd	                            mov ebp, edi	      4604	gui.c	ELSE_2	FUNCTION_70
0x400022b	            0x85ff	                           test edi, edi	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x400022d	            0x7533	                           jne 0x4000262	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x400022f	    0x833d00000000	               cmp dword [0x04000236], 2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4000236	     0xf84a6010000	                            je 0x40003e2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x400023c	    0x488b05000000	            mov rax, qword [0x04000243] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4000243	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x400024a	     0xf847d010000	                            je 0x40003cd	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4000250	    0x833d00000000	               cmp dword [0x04000257], 0	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4000257	     0xf844f010000	                            je 0x40003ac	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x400025d	      0xe980010000	                           jmp 0x40003e2	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4000262	    0x488b05000000	            mov rax, qword [0x04000269] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000269	    0x488b15000000	            mov rdx, qword [0x04000270] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000270	          0x488b1a	                    mov rbx, qword [rdx]	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000273	        0x48395838	            cmp qword [rax + 0x38], rbx 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000277	            0x7e10	                           jle 0x4000289	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000279	    0x48c705000000	mov qword [0x04000284], 0xffffffffffffffff 	      4622	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000284	      0xe959010000	                           jmp 0x40003e2	      4623	gui.c	ELSE_2	FUNCTION_70	IF_4
0x4000289	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x400028f	          0x4c63e1	                         movsxd r12, ecx	      4626	gui.c	ELSE_2	FUNCTION_70
0x4000292	    0x83b894020000	              cmp dword [rax + 0x294], 0	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x4000299	            0x740e	                            je 0x40002a9	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x400029b	          0x83e901	                              sub ecx, 1	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x400029e	          0x4863c9	                         movsxd rcx, ecx	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x40002a1	    0x41bd00000000	                             mov r13d, 0	      4629	gui.c	ELSE_2	FUNCTION_70	IF_5
0x40002a7	            0xeb6e	                           jmp 0x4000317	      4629	gui.c	ELSE_2	FUNCTION_70	IF_5
0x40002a9	    0x4c63a8940000	         movsxd r13, dword [rax + 0x94] 	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x40002b0	      0xe885feffff	          call sym.gui_find_longest_lnum	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x40002b5	    0x488905000000	            mov qword [0x040002bc], rax 	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x40002bc	          0x4889c7	                            mov rdi, rax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x40002bf	      0xe826feffff	                call sym.scroll_line_len	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x40002c4	          0x4189c6	                           mov r14d, eax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x40002c7	          0x4863d8	                         movsxd rbx, eax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x40002ca	      0xe800000000	                          call 0x40002cf	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x40002cf	            0x85c0	                           test eax, eax	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x40002d1	            0x7417	                            je 0x40002ea	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x40002d3	    0x488b05000000	            mov rax, qword [0x040002da] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x40002da	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x40002e0	          0x4863d0	                         movsxd rdx, eax	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x40002e3	          0x4139c6	                           cmp r14d, eax	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x40002e6	        0x480f4eda	                         cmovle rbx, rdx	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x40002ea	    0x488b05000000	            mov rax, qword [0x040002f1] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x40002f1	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x40002f7	          0x83e901	                              sub ecx, 1	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x40002fa	          0x4863c9	                         movsxd rcx, ecx	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x40002fd	          0x4801cb	                            add rbx, rcx	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x4000300	      0xe800000000	                          call 0x4000305	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x4000305	            0x4898	                                    cdqe	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x4000307	          0x4929c4	                            sub r12, rax	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x400030a	      0xe800000000	                          call 0x400030f	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x400030f	            0x4898	                                    cdqe	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4000311	          0x4829c3	                            sub rbx, rax	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4000314	          0x4889d9	                            mov rcx, rbx	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x4000317	          0x4889ce	                            mov rsi, rcx	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x400031a	          0x4c29e6	                            sub rsi, r12	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x400031d	        0x4883c601	                              add rsi, 1	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4000321	          0x4939f5	                            cmp r13, rsi	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4000324	        0x490f4ef5	                         cmovle rsi, r13	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x4000328	    0x488b05000000	            mov rax, qword [0x0400032f] 	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x400032f	    0x83b854020000	              cmp dword [rax + 0x254], 0	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4000336	            0x7417	                            je 0x400034f	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x4000338	        0x488d5101	                      lea rdx, [rcx + 1]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x400033c	          0x4c29e2	                            sub rdx, r12	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x400033f	          0x4829f2	                            sub rdx, rsi	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4000342	          0x4889d6	                            mov rsi, rdx	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4000345	            0x7908	                           jns 0x400034f	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x4000347	          0x4901d4	                            add r12, rdx	      4674	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x400034a	      0xbe00000000	                              mov esi, 0	      4675	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x400034f	            0x85ed	                           test ebp, ebp	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4000351	            0x751b	                           jne 0x400036e	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4000353	    0x483b35000000	            cmp rsi, qword [0x0400035a] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x400035a	            0x7512	                           jne 0x400036e	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x400035c	    0x4c3b25000000	            cmp r12, qword [0x04000363] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4000363	            0x7509	                           jne 0x400036e	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x4000365	    0x483b0d000000	            cmp rcx, qword [0x0400036c] 	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x400036c	            0x7474	                            je 0x40003e2	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x400036e	    0x488935000000	            mov qword [0x04000375], rsi 	      4683	gui.c	ELSE_2	FUNCTION_70
0x4000375	    0x4c8925000000	            mov qword [0x0400037c], r12 	      4684	gui.c	ELSE_2	FUNCTION_70
0x400037c	    0x48890d000000	            mov qword [0x04000383], rcx 	      4685	gui.c	ELSE_2	FUNCTION_70
0x4000383	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4686	gui.c	ELSE_2	FUNCTION_70
0x4000389	    0x890500000000	            mov dword [0x0400038f], eax 	      4686	gui.c	ELSE_2	FUNCTION_70
0x400038f	          0x4c89e2	                            mov rdx, r12	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4000392	      0xbf00000000	                              mov edi, 0	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x4000397	      0xe800000000	                          call 0x400039c	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x400039c	            0xeb44	                           jmp 0x40003e2	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x400039e	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x40003a4	          0x4c63e1	                         movsxd r12, ecx	      4626	gui.c	ELSE_2	FUNCTION_70
0x40003a7	      0xe9effeffff	                           jmp 0x400029b	      4626	gui.c	ELSE_2	FUNCTION_70
0x40003ac	    0x488b15000000	            mov rdx, qword [0x040003b3] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003b3	          0x488b1a	                    mov rbx, qword [rdx]	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003b6	        0x48395838	            cmp qword [rax + 0x38], rbx 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003ba	            0x7ee2	                           jle 0x400039e	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003bc	      0xe9b8feffff	                           jmp 0x4000279	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003c1	    0x4c63a0ac0000	         movsxd r12, dword [rax + 0xac] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x40003c8	      0xe9dcfeffff	                           jmp 0x40002a9	      4626	gui.c	ELSE_2	FUNCTION_70
0x40003cd	    0x488b15000000	            mov rdx, qword [0x040003d4] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003d4	          0x488b1a	                    mov rbx, qword [rdx]	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003d7	        0x48395838	            cmp qword [rax + 0x38], rbx 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003db	            0x7ee4	                           jle 0x40003c1	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003dd	      0xe997feffff	                           jmp 0x4000279	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x40003e2	              0x5b	                                 pop rbx	      4689	gui.c	ELSE_2	FUNCTION_70
0x40003e3	              0x5d	                                 pop rbp	      4689	gui.c	ELSE_2	FUNCTION_70
0x40003e4	            0x415c	                                 pop r12	      4689	gui.c	ELSE_2	FUNCTION_70
0x40003e6	            0x415d	                                 pop r13	      4689	gui.c	ELSE_2	FUNCTION_70
0x40003e8	            0x415e	                                 pop r14	      4689	gui.c	ELSE_2	FUNCTION_70
0x40003ea	            0xf3c3	                                     ret	      4689	gui.c	ELSE_2	FUNCTION_70
gfp_setname	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,1:FOR,0:CALL,2:DO,0	16
0x40004fb	          0x4889fa	                            mov rdx, rdi	      5030	gui.c	FUNCTION_83
0x40004fe	      0xb800000000	                              mov eax, 0	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000503	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400050a	            0xf2ae	              repne scasb al, byte [rdi]	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400050c	          0x48f7d1	                                 not rcx	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400050f	        0x4883e901	                              sub rcx, 1	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000513	    0x4881f9ff0f00	                          cmp rcx, 0xfff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400051a	            0x7604	                           jbe 0x4000520	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x400051c	          0xc60600	                       mov byte [rsi], 0	      5034	gui.c	FUNCTION_83	IF_1
0x400051f	              0xc3	                                     ret	      5034	gui.c	FUNCTION_83	IF_1
0x4000520	        0x4883ec08	                              sub rsp, 8	      5030	gui.c	FUNCTION_83
0x4000524	          0x4889f7	                            mov rdi, rsi	      5030	gui.c	FUNCTION_83
0x4000527	          0x4889d6	                            mov rsi, rdx	      5030	gui.c	FUNCTION_83
0x400052a	      0xe800000000	                          call 0x400052f	       110	string3.h	FUNCTION_100	CALL_3
0x400052f	        0x4883c408	                              add rsp, 8	      5037	gui.c	FUNCTION_83
0x4000533	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
gui_undraw_cursor	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,5:FOR,0:CALL,6:DO,0	23
0x400165f	    0x803d00000000	                cmp byte [0x04001666], 0	      2630	gui.c	FUNCTION_40	IF_1
0x4001666	            0x7450	                            je 0x40016b8	      2630	gui.c	FUNCTION_40	IF_1
0x4001668	        0x4883ec08	                              sub rsp, 8	      2629	gui.c	FUNCTION_40
0x400166c	    0x8b3500000000	            mov esi, dword [0x04001672] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001672	    0x8b3d00000000	            mov edi, dword [0x04001678] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001678	    0x41b810000000	                           mov r8d, 0x10	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400167e	            0x89f1	                            mov ecx, esi	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001680	            0x89fa	                            mov edx, edi	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001682	      0xe800000000	                          call 0x4001687	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001687	            0x85c0	                           test eax, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4001689	            0x7422	                            je 0x40016ad	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400168b	    0x8b3500000000	            mov esi, dword [0x04001691] 	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4001691	            0x85f6	                           test esi, esi	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4001693	            0x7e18	                           jle 0x40016ad	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4001695	          0x83ee01	                              sub esi, 1	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4001698	    0x8b3d00000000	            mov edi, dword [0x0400169e] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x400169e	    0x41b810000000	                           mov r8d, 0x10	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40016a4	            0x89f1	                            mov ecx, esi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40016a6	            0x89fa	                            mov edx, edi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40016a8	      0xe800000000	                          call 0x40016ad	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40016ad	    0xc60500000000	                mov byte [0x040016b4], 0	      2664	gui.c	FUNCTION_40	IF_1
0x40016b4	        0x4883c408	                              add rsp, 8	      2666	gui.c	FUNCTION_40
0x40016b8	            0xf3c3	                                     ret	      2666	gui.c	FUNCTION_40
gui_mouse_moved	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,7:FOR,0:CALL,11:DO,0	102
0x4004ca3	            0x4154	                                push r12	      4849	gui.c	FUNCTION_79
0x4004ca5	              0x55	                                push rbp	      4849	gui.c	FUNCTION_79
0x4004ca6	              0x53	                                push rbx	      4849	gui.c	FUNCTION_79
0x4004ca7	        0x4883ec10	                           sub rsp, 0x10	      4849	gui.c	FUNCTION_79
0x4004cab	    0x64488b042528	                mov rax, qword fs:[0x28]	      4849	gui.c	FUNCTION_79
0x4004cb4	      0x4889442408	                mov qword [rsp + 8], rax	      4849	gui.c	FUNCTION_79
0x4004cb9	            0x31c0	                            xor eax, eax	      4849	gui.c	FUNCTION_79
0x4004cbb	    0x833d00000000	               cmp dword [0x04004cc2], 0	      4854	gui.c	FUNCTION_79	IF_1
0x4004cc2	     0xf847e010000	                            je 0x4004e46	      4854	gui.c	FUNCTION_79	IF_1
0x4004cc8	            0x89fb	                            mov ebx, edi	      4854	gui.c	FUNCTION_79	IF_1
0x4004cca	            0x89f5	                            mov ebp, esi	      4854	gui.c	FUNCTION_79	IF_1
0x4004ccc	    0x833d00000000	               cmp dword [0x04004cd3], 0	      4854	gui.c	FUNCTION_79	IF_1
0x4004cd3	     0xf856d010000	                           jne 0x4004e46	      4854	gui.c	FUNCTION_79	IF_1
0x4004cd9	      0xe856b8ffff	                         call sym.xy2win	      4859	gui.c	FUNCTION_79	CALL_1
0x4004cde	          0x4989c4	                            mov r12, rax	      4859	gui.c	FUNCTION_79	CALL_1
0x4004ce1	    0x833d00000000	               cmp dword [0x04004ce8], 0	      4863	gui.c	FUNCTION_79	IF_2
0x4004ce8	     0xf8458010000	                            je 0x4004e46	      4863	gui.c	FUNCTION_79	IF_2
0x4004cee	    0x8b0500000000	            mov eax, dword [0x04004cf4] 	      4864	gui.c	FUNCTION_79	IF_2
0x4004cf4	            0x85c0	                           test eax, eax	      4864	gui.c	FUNCTION_79	IF_2
0x4004cf6	     0xf854a010000	                           jne 0x4004e46	      4864	gui.c	FUNCTION_79	IF_2
0x4004cfc	    0x8b0500000000	            mov eax, dword [0x04004d02] 	      4865	gui.c	FUNCTION_79	IF_2
0x4004d02	            0xa811	                           test al, 0x11	      4866	gui.c	FUNCTION_79	IF_2
0x4004d04	     0xf843c010000	                            je 0x4004e46	      4866	gui.c	FUNCTION_79	IF_2
0x4004d0a	      0x3d01020000	                          cmp eax, 0x201	      4866	gui.c	FUNCTION_79	IF_2
0x4004d0f	     0xf8431010000	                            je 0x4004e46	      4866	gui.c	FUNCTION_79	IF_2
0x4004d15	    0x833d00000000	               cmp dword [0x04004d1c], 0	      4867	gui.c	FUNCTION_79	IF_2
0x4004d1c	     0xf8524010000	                           jne 0x4004e46	      4867	gui.c	FUNCTION_79	IF_2
0x4004d22	    0x833d00000000	               cmp dword [0x04004d29], 0	      4868	gui.c	FUNCTION_79	IF_2
0x4004d29	     0xf8517010000	                           jne 0x4004e46	      4868	gui.c	FUNCTION_79	IF_2
0x4004d2f	    0x833d00000000	               cmp dword [0x04004d36], 0	      4869	gui.c	FUNCTION_79	IF_2
0x4004d36	     0xf840a010000	                            je 0x4004e46	      4869	gui.c	FUNCTION_79	IF_2
0x4004d3c	            0x85db	                           test ebx, ebx	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d3e	     0xf8802010000	                            js 0x4004e46	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d44	          0x4863db	                         movsxd rbx, ebx	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d47	    0x486305000000	         movsxd rax, dword [0x04004d4e] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d4e	    0x480faf050000	            imul rax, qword [0x04004d56]	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d56	          0x4839c3	                            cmp rbx, rax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d59	     0xf8fe7000000	                            jg 0x4004e46	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x4004d5f	    0x4c3925000000	            cmp qword [0x04004d66], r12 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x4004d66	     0xf84da000000	                            je 0x4004e46	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x4004d6c	          0x4d85e4	                           test r12, r12	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x4004d6f	     0xf84d1000000	                            je 0x4004e46	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x4004d75	            0x89e8	                            mov eax, ebp	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d77	    0x2b0500000000	             sub eax, dword [0x04004d7d]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d7d	              0x99	                                     cdq	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d7e	    0xf73d00000000	                 idiv dword [0x04004d84]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d84	            0x89c3	                            mov ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d86	      0xe800000000	                          call 0x4004d8b	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d8b	            0x39c3	                            cmp ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d8d	     0xf8cb3000000	                            jl 0x4004e46	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4004d93	    0x833d00000000	               cmp dword [0x04004d9a], 0	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x4004d9a	            0x7411	                            je 0x4004dad	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x4004d9c	        0xc604241b	                    mov byte [rsp], 0x1b	      4893	gui.c	FUNCTION_79	IF_2	IF_6
0x4004da0	      0xbe01000000	                              mov esi, 1	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4004da5	          0x4889e7	                            mov rdi, rsp	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4004da8	      0xe800000000	                          call 0x4004dad	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4004dad	        0xc604249b	                    mov byte [rsp], 0x9b	      4896	gui.c	FUNCTION_79	IF_2
0x4004db1	      0xc6442401fb	                mov byte [rsp + 1], 0xfb	      4897	gui.c	FUNCTION_79	IF_2
0x4004db6	      0xc644240258	                mov byte [rsp + 2], 0x58	      4898	gui.c	FUNCTION_79	IF_2
0x4004dbb	      0xc644240300	                   mov byte [rsp + 3], 0	      4899	gui.c	FUNCTION_79	IF_2
0x4004dc0	    0x418b8c24a801	           mov ecx, dword [r12 + 0x1a8] 	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004dc8	    0x41038c249c00	             add ecx, dword [r12 + 0x9c]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004dd0	    0x41038c24a000	             add ecx, dword [r12 + 0xa0]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004dd8	    0x418b9424a800	            mov edx, dword [r12 + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x4004de0	    0x8d8210270000	                 lea eax, [rdx + 0x2710]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004de6	            0x85d2	                           test edx, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004de8	      0xbaffffffff	                     mov edx, 0xffffffff	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004ded	           0xf44c2	                          cmove eax, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4004df0	      0xbe80000000	                           mov esi, 0x80	      3058	gui.c	FUNCTION_49
0x4004df5	              0x99	                                     cdq	      3058	gui.c	FUNCTION_49
0x4004df6	            0xf7fe	                                idiv esi	      3058	gui.c	FUNCTION_49
0x4004df8	          0x83c021	                           add eax, 0x21	      3058	gui.c	FUNCTION_49
0x4004dfb	        0x88442404	                  mov byte [rsp + 4], al	      3058	gui.c	FUNCTION_49
0x4004dff	          0x8d4221	                   lea eax, [rdx + 0x21]	      3059	gui.c	FUNCTION_49
0x4004e02	        0x88442405	                  mov byte [rsp + 5], al	      3059	gui.c	FUNCTION_49
0x4004e06	            0x89c8	                            mov eax, ecx	      3060	gui.c	FUNCTION_49
0x4004e08	              0x99	                                     cdq	      3060	gui.c	FUNCTION_49
0x4004e09	            0xf7fe	                                idiv esi	      3060	gui.c	FUNCTION_49
0x4004e0b	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x4004e0e	        0x88442406	                  mov byte [rsp + 6], al	      3060	gui.c	FUNCTION_49
0x4004e12	          0x83c221	                           add edx, 0x21	      3061	gui.c	FUNCTION_49
0x4004e15	        0x88542407	                  mov byte [rsp + 7], dl	      3061	gui.c	FUNCTION_49
0x4004e19	      0xbe08000000	                              mov esi, 8	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4004e1e	          0x4889e7	                            mov rdi, rsp	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4004e21	      0xe800000000	                          call 0x4004e26	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4004e26	      0xc644240303	                   mov byte [rsp + 3], 3	      4905	gui.c	FUNCTION_79	IF_2
0x4004e2b	      0xbe08000000	                              mov esi, 8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4004e30	          0x4889e7	                            mov rdi, rsp	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4004e33	      0xe800000000	                          call 0x4004e38	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x4004e38	      0xe800000000	                          call 0x4004e3d	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x4004e3d	            0x85c0	                           test eax, eax	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x4004e3f	            0x7405	                            je 0x4004e46	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x4004e41	      0xe800000000	                          call 0x4004e46	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x4004e46	      0x488b442408	                mov rax, qword [rsp + 8]	      4913	gui.c	FUNCTION_79
0x4004e4b	    0x644833042528	                xor rax, qword fs:[0x28]	      4913	gui.c	FUNCTION_79
0x4004e54	            0x7405	                            je 0x4004e5b	      4913	gui.c	FUNCTION_79
0x4004e56	      0xe800000000	                          call 0x4004e5b	      4913	gui.c	FUNCTION_79
0x4004e5b	        0x4883c410	                           add rsp, 0x10	      4913	gui.c	FUNCTION_79
0x4004e5f	              0x5b	                                 pop rbx	      4913	gui.c	FUNCTION_79
0x4004e60	              0x5d	                                 pop rbp	      4913	gui.c	FUNCTION_79
0x4004e61	            0x415c	                                 pop r12	      4913	gui.c	FUNCTION_79
0x4004e63	              0xc3	                                     ret	      4913	gui.c	FUNCTION_79
gui_xy2colrow	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,5:DO,0	33
0x4001f32	            0x4155	                                push r13	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f34	            0x4154	                                push r12	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f36	              0x55	                                push rbp	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f37	              0x53	                                push rbx	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f38	        0x4883ec08	                              sub rsp, 8	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f3c	            0x89f3	                            mov ebx, esi	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f3e	          0x4889d5	                            mov rbp, rdx	      3395	gui.c	ELSE_9	FUNCTION_51
0x4001f41	    0x41bc00000000	                             mov r12d, 0	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f47	            0x89f8	                            mov eax, edi	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f49	    0x2b0500000000	             sub eax, dword [0x04001f4f]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f4f	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f50	    0x41f7bc24d000	                 idiv dword [r12 + 0xd0]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f58	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f5a	      0xe800000000	                          call 0x4001f5f	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f5f	          0x4189c5	                           mov r13d, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4001f62	            0x89d8	                            mov eax, ebx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f64	    0x2b0500000000	             sub eax, dword [0x04001f6a]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f6a	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f6b	    0x41f7bc24d400	                 idiv dword [r12 + 0xd4]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f73	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f75	      0xe800000000	                          call 0x4001f7a	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f7a	            0x89c3	                            mov ebx, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4001f7c	            0x89c6	                            mov esi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4001f7e	          0x4489ef	                           mov edi, r13d	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4001f81	      0xe800000000	                          call 0x4001f86	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4001f86	          0x894500	                    mov dword [rbp], eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4001f89	            0x89d8	                            mov eax, ebx	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f8b	        0x4883c408	                              add rsp, 8	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f8f	              0x5b	                                 pop rbx	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f90	              0x5d	                                 pop rbp	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f91	            0x415c	                                 pop r12	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f93	            0x415d	                                 pop r13	      3405	gui.c	ELSE_9	FUNCTION_51
0x4001f95	              0xc3	                                     ret	      3405	gui.c	ELSE_9	FUNCTION_51
gui_inchar	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,3:DO,0	24
0x4001ef7	            0x4154	                                push r12	      3045	gui.c	FUNCTION_48
0x4001ef9	              0x55	                                push rbp	      3045	gui.c	FUNCTION_48
0x4001efa	              0x53	                                push rbx	      3045	gui.c	FUNCTION_48
0x4001efb	          0x4989fc	                            mov r12, rdi	      3045	gui.c	FUNCTION_48
0x4001efe	            0x89f5	                            mov ebp, esi	      3045	gui.c	FUNCTION_48
0x4001f00	            0x89cb	                            mov ebx, ecx	      3045	gui.c	FUNCTION_48
0x4001f02	            0x89ce	                            mov esi, ecx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4001f04	          0x4889d7	                            mov rdi, rdx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4001f07	      0xe800000000	                          call 0x4001f0c	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4001f0c	            0x85c0	                           test eax, eax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4001f0e	            0x741d	                            je 0x4001f2d	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4001f10	            0x89df	                            mov edi, ebx	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4001f12	      0xe800000000	                          call 0x4001f17	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4001f17	            0x89c2	                            mov edx, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4001f19	      0xb800000000	                              mov eax, 0	      3049	gui.c	FUNCTION_48
0x4001f1e	            0x85d2	                           test edx, edx	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4001f20	            0x750b	                           jne 0x4001f2d	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4001f22	          0x4863f5	                         movsxd rsi, ebp	      3048	gui.c	FUNCTION_48	CALL_3
0x4001f25	          0x4c89e7	                            mov rdi, r12	      3048	gui.c	FUNCTION_48	CALL_3
0x4001f28	      0xe800000000	                          call 0x4001f2d	      3048	gui.c	FUNCTION_48	CALL_3
0x4001f2d	              0x5b	                                 pop rbx	      3050	gui.c	FUNCTION_48
0x4001f2e	              0x5d	                                 pop rbp	      3050	gui.c	FUNCTION_48
0x4001f2f	            0x415c	                                 pop r12	      3050	gui.c	FUNCTION_48
0x4001f31	              0xc3	                                     ret	      3050	gui.c	FUNCTION_48
gui_wait_for_chars	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,7:FOR,0:CALL,16:DO,0	92
0x4001d81	            0x4154	                                push r12	      2957	gui.c	FUNCTION_47
0x4001d83	              0x55	                                push rbp	      2957	gui.c	FUNCTION_47
0x4001d84	              0x53	                                push rbx	      2957	gui.c	FUNCTION_47
0x4001d85	        0x4883ec20	                           sub rsp, 0x20	      2957	gui.c	FUNCTION_47
0x4001d89	    0x64488b042528	                mov rax, qword fs:[0x28]	      2957	gui.c	FUNCTION_47
0x4001d92	      0x4889442418	             mov qword [rsp + 0x18], rax	      2957	gui.c	FUNCTION_47
0x4001d97	            0x31c0	                            xor eax, eax	      2957	gui.c	FUNCTION_47
0x4001d99	          0x4885ff	                           test rdi, rdi	      2968	gui.c	FUNCTION_47	IF_1
0x4001d9c	            0x7428	                            je 0x4001dc6	      2968	gui.c	FUNCTION_47	IF_1
0x4001d9e	          0x4889fd	                            mov rbp, rdi	      2968	gui.c	FUNCTION_47	IF_1
0x4001da1	          0x4189f4	                           mov r12d, esi	      2968	gui.c	FUNCTION_47	IF_1
0x4001da4	      0xbf00000000	                              mov edi, 0	      2969	gui.c	FUNCTION_47	CALL_1
0x4001da9	      0xe800000000	                          call 0x4001dae	      2969	gui.c	FUNCTION_47	CALL_1
0x4001dae	      0xe800000000	                          call 0x4001db3	      2972	gui.c	FUNCTION_47	CALL_2
0x4001db3	      0xe800000000	                          call 0x4001db8	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x4001db8	      0xbb01000000	                              mov ebx, 1	      2974	gui.c	FUNCTION_47	IF_2
0x4001dbd	            0x85c0	                           test eax, eax	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x4001dbf	            0x741c	                            je 0x4001ddd	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x4001dc1	      0xe9f8000000	                           jmp 0x4001ebe	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x4001dc6	      0xe800000000	                          call 0x4001dcb	      2972	gui.c	FUNCTION_47	CALL_2
0x4001dcb	      0xe800000000	                          call 0x4001dd0	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x4001dd0	            0x85c0	                           test eax, eax	      2974	gui.c	FUNCTION_47	IF_2
0x4001dd2	           0xf95c3	                                setne bl	      2974	gui.c	FUNCTION_47	IF_2
0x4001dd5	           0xfb6db	                           movzx ebx, bl	      2974	gui.c	FUNCTION_47	IF_2
0x4001dd8	      0xe9e1000000	                           jmp 0x4001ebe	      2974	gui.c	FUNCTION_47	IF_2
0x4001ddd	      0xe800000000	                          call 0x4001de2	      2979	gui.c	FUNCTION_47	CALL_4
0x4001de2	          0x4885ed	                           test rbp, rbp	      2981	gui.c	FUNCTION_47	IF_4
0x4001de5	            0x7e2d	                           jle 0x4001e14	      2981	gui.c	FUNCTION_47	IF_4
0x4001de7	      0xe800000000	                          call 0x4001dec	      2985	gui.c	FUNCTION_47	IF_4	CALL_5
0x4001dec	      0xb900000000	                              mov ecx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001df1	      0xba00000000	                              mov edx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001df6	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001dfb	          0x4889ef	                            mov rdi, rbp	      2941	gui.c	FUNCTION_46	CALL_1
0x4001dfe	      0xe800000000	                          call 0x4001e03	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e03	            0x89c3	                            mov ebx, eax	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e05	      0xbf01000000	                              mov edi, 1	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x4001e0a	      0xe800000000	                          call 0x4001e0f	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x4001e0f	      0xe9aa000000	                           jmp 0x4001ebe	      2988	gui.c	FUNCTION_47	IF_4
0x4001e14	      0xbe00000000	                              mov esi, 0	      2992	gui.c	FUNCTION_47	CALL_8
0x4001e19	          0x4889e7	                            mov rdi, rsp	      2992	gui.c	FUNCTION_47	CALL_8
0x4001e1c	      0xe800000000	                          call 0x4001e21	      2992	gui.c	FUNCTION_47	CALL_8
0x4001e21	      0xe800000000	                          call 0x4001e26	      2998	gui.c	FUNCTION_47	CALL_9
0x4001e26	      0xb900000000	                              mov ecx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e2b	      0xba00000000	                              mov edx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e30	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e35	    0x488b3d000000	            mov rdi, qword [0x04001e3c] 	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e3c	      0xe800000000	                          call 0x4001e41	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e41	          0x83f801	                              cmp eax, 1	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4001e44	     0xf8498000000	                            je 0x4001ee2	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4001e4a	      0xe800000000	                          call 0x4001e4f	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4001e4f	            0x85c0	                           test eax, eax	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4001e51	            0x747f	                            je 0x4001ed2	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4001e53	          0x4889e7	                            mov rdi, rsp	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4001e56	      0xe800000000	                          call 0x4001e5b	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4001e5b	    0x483b05000000	            cmp rax, qword [0x04001e62] 	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4001e62	            0x7c6e	                            jl 0x4001ed2	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4001e64	      0xbb00000000	                              mov ebx, 0	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4001e69	    0x443925000000	           cmp dword [0x04001e70], r12d 	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4001e70	            0x7542	                           jne 0x4001eb4	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4001e72	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3017	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4001e77	      0xc6442411fd	            mov byte [rsp + 0x11], 0xfd 	      3018	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4001e7c	      0xc644241260	            mov byte [rsp + 0x12], 0x60 	      3019	gui.c	FUNCTION_47	ELSE_1	IF_6
0x4001e81	      0xbe03000000	                              mov esi, 3	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4001e86	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4001e8b	      0xe800000000	                          call 0x4001e90	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4001e90	            0xeb50	                           jmp 0x4001ee2	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x4001e92	      0xe800000000	                          call 0x4001e97	      3028	gui.c	FUNCTION_47	IF_7	CALL_14
0x4001e97	      0xb900000000	                              mov ecx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001e9c	      0xba00000000	                              mov edx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001ea1	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4001ea6	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      2941	gui.c	FUNCTION_46	CALL_1
0x4001ead	      0xe800000000	                          call 0x4001eb2	      2941	gui.c	FUNCTION_46	CALL_1
0x4001eb2	            0x89c3	                            mov ebx, eax	      2941	gui.c	FUNCTION_46	CALL_1
0x4001eb4	      0xbf01000000	                              mov edi, 1	      3032	gui.c	FUNCTION_47	CALL_16
0x4001eb9	      0xe800000000	                          call 0x4001ebe	      3032	gui.c	FUNCTION_47	CALL_16
0x4001ebe	            0x89d8	                            mov eax, ebx	      3034	gui.c	FUNCTION_47
0x4001ec0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3034	gui.c	FUNCTION_47
0x4001ec5	    0x644833142528	                xor rdx, qword fs:[0x28]	      3034	gui.c	FUNCTION_47
0x4001ece	            0x741e	                            je 0x4001eee	      3034	gui.c	FUNCTION_47
0x4001ed0	            0xeb17	                           jmp 0x4001ee9	      3034	gui.c	FUNCTION_47
0x4001ed2	    0x443b25000000	           cmp r12d, dword [0x04001ed9] 	      3025	gui.c	FUNCTION_47	IF_7
0x4001ed9	            0x74b7	                            je 0x4001e92	      3025	gui.c	FUNCTION_47	IF_7
0x4001edb	      0xbb00000000	                              mov ebx, 0	      3025	gui.c	FUNCTION_47	IF_7
0x4001ee0	            0xebd2	                           jmp 0x4001eb4	      3025	gui.c	FUNCTION_47	IF_7
0x4001ee2	      0xbb01000000	                              mov ebx, 1	      2957	gui.c	FUNCTION_47
0x4001ee7	            0xebcb	                           jmp 0x4001eb4	      2957	gui.c	FUNCTION_47
0x4001ee9	      0xe800000000	                          call 0x4001eee	      3034	gui.c	FUNCTION_47
0x4001eee	        0x4883c420	                           add rsp, 0x20	      3034	gui.c	FUNCTION_47
0x4001ef2	              0x5b	                                 pop rbx	      3034	gui.c	FUNCTION_47
0x4001ef3	              0x5d	                                 pop rbp	      3034	gui.c	FUNCTION_47
0x4001ef4	            0x415c	                                 pop r12	      3034	gui.c	FUNCTION_47
0x4001ef6	              0xc3	                                     ret	      3034	gui.c	FUNCTION_47
gui_clear_block	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,2:DO,0	33
0x4000aef	            0x4155	                                push r13	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000af1	            0x4154	                                push r12	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000af3	              0x55	                                push rbp	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000af4	              0x53	                                push rbx	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000af5	        0x4883ec08	                              sub rsp, 8	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000af9	            0x89fd	                            mov ebp, edi	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000afb	          0x4189f5	                           mov r13d, esi	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000afe	            0x89d3	                            mov ebx, edx	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000b00	          0x4189cc	                           mov r12d, ecx	      1739	gui.c	ELSE_1	FUNCTION_28
0x4000b03	            0x89d6	                            mov esi, edx	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4000b05	      0xe800000000	                          call 0x4000b0a	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4000b0a	          0x4489e1	                           mov ecx, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000b0d	            0x89da	                            mov edx, ebx	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000b0f	          0x4489ee	                           mov esi, r13d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000b12	            0x89ef	                            mov edi, ebp	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000b14	      0xe800000000	                          call 0x4000b19	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000b19	    0x8b0500000000	            mov eax, dword [0x04000b1f] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b1f	            0x39c3	                            cmp ebx, eax	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b21	            0x7c1b	                            jl 0x4000b3e	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b23	            0x39c5	                            cmp ebp, eax	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b25	            0x7f17	                            jg 0x4000b3e	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b27	    0x8b0500000000	            mov eax, dword [0x04000b2d] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b2d	          0x4139c4	                           cmp r12d, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b30	            0x7c0c	                            jl 0x4000b3e	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b32	          0x4139c5	                           cmp r13d, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b35	            0x7f07	                            jg 0x4000b3e	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b37	    0xc60500000000	                mov byte [0x04000b3e], 0	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000b3e	        0x4883c408	                              add rsp, 8	      1749	gui.c	ELSE_1	FUNCTION_28
0x4000b42	              0x5b	                                 pop rbx	      1749	gui.c	ELSE_1	FUNCTION_28
0x4000b43	              0x5d	                                 pop rbp	      1749	gui.c	ELSE_1	FUNCTION_28
0x4000b44	            0x415c	                                 pop r12	      1749	gui.c	ELSE_1	FUNCTION_28
0x4000b46	            0x415d	                                 pop r13	      1749	gui.c	ELSE_1	FUNCTION_28
0x4000b48	              0xc3	                                     ret	      1749	gui.c	ELSE_1	FUNCTION_28
gui_exit	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,2:DO,0	8
0x40008df	              0x53	                                push rbx	       797	gui.c	FUNCTION_8
0x40008e0	            0x89fb	                            mov ebx, edi	       797	gui.c	FUNCTION_8
0x40008e2	      0xe800000000	                          call 0x40008e7	       800	gui.c	FUNCTION_8	CALL_1
0x40008e7	    0xc70500000000	               mov dword [0x040008f1], 0	       801	gui.c	FUNCTION_8
0x40008f1	            0x89df	                            mov edi, ebx	       802	gui.c	FUNCTION_8	CALL_2
0x40008f3	      0xe800000000	                          call 0x40008f8	       802	gui.c	FUNCTION_8	CALL_2
0x40008f8	              0x5b	                                 pop rbx	       803	gui.c	FUNCTION_8
0x40008f9	              0xc3	                                     ret	       803	gui.c	FUNCTION_8
gui_update_tabline	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,4:FOR,0:CALL,6:DO,0	37
0x40035cd	              0x55	                                push rbp	      3705	gui.c	FUNCTION_56
0x40035ce	              0x53	                                push rbx	      3705	gui.c	FUNCTION_56
0x40035cf	        0x4883ec08	                              sub rsp, 8	      3705	gui.c	FUNCTION_56
0x40035d3	      0xe88af1ffff	                call sym.gui_has_tabline	      3706	gui.c	FUNCTION_56	CALL_1
0x40035d8	            0x89c3	                            mov ebx, eax	      3706	gui.c	FUNCTION_56	CALL_1
0x40035da	      0xe800000000	                          call 0x40035df	      3707	gui.c	FUNCTION_56	CALL_2
0x40035df	    0x833d00000000	               cmp dword [0x040035e6], 0	      3709	gui.c	FUNCTION_56	IF_1
0x40035e6	            0x754e	                           jne 0x4003636	      3709	gui.c	FUNCTION_56	IF_1
0x40035e8	            0x89c5	                            mov ebp, eax	      3709	gui.c	FUNCTION_56	IF_1
0x40035ea	    0x833d00000000	               cmp dword [0x040035f1], 0	      3709	gui.c	FUNCTION_56	IF_1
0x40035f1	            0x7543	                           jne 0x4003636	      3709	gui.c	FUNCTION_56	IF_1
0x40035f3	      0xe800000000	                          call 0x40035f8	      3713	gui.c	FUNCTION_56	IF_1	CALL_3
0x40035f8	            0x85db	                           test ebx, ebx	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x40035fa	           0xf94c2	                                 sete dl	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x40035fd	            0x85ed	                           test ebp, ebp	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x40035ff	           0xf94c0	                                 sete al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003602	            0x38c2	                              cmp dl, al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003604	            0x741e	                            je 0x4003624	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4003606	            0x89df	                            mov edi, ebx	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4003608	      0xe800000000	                          call 0x400360d	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x400360d	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x400360f	            0x7519	                           jne 0x400362a	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003611	      0xba01000000	                              mov edx, 1	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003616	            0x89de	                            mov esi, ebx	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003618	      0xbf00000000	                              mov edi, 0	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x400361d	      0xe800000000	                          call 0x4003622	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4003622	            0xeb12	                           jmp 0x4003636	      3725	gui.c	FUNCTION_56
0x4003624	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003626	            0x740e	                            je 0x4003636	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4003628	            0xeb07	                           jmp 0x4003631	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x400362a	      0xe800000000	                          call 0x400362f	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x400362f	            0xebe0	                           jmp 0x4003611	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x4003631	      0xe800000000	                          call 0x4003636	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x4003636	        0x4883c408	                              add rsp, 8	      3725	gui.c	FUNCTION_56
0x400363a	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x400363b	              0x5d	                                 pop rbp	      3725	gui.c	FUNCTION_56
0x400363c	              0xc3	                                     ret	      3725	gui.c	FUNCTION_56
gui_focus_change	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,3:DO,0	32
0x4004c27	              0x53	                                push rbx	      4816	gui.c	FUNCTION_78
0x4004c28	        0x4883ec10	                           sub rsp, 0x10	      4816	gui.c	FUNCTION_78
0x4004c2c	            0x89fb	                            mov ebx, edi	      4816	gui.c	FUNCTION_78
0x4004c2e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4816	gui.c	FUNCTION_78
0x4004c37	      0x4889442408	                mov qword [rsp + 8], rax	      4816	gui.c	FUNCTION_78
0x4004c3c	            0x31c0	                            xor eax, eax	      4816	gui.c	FUNCTION_78
0x4004c3e	    0x893d00000000	            mov dword [0x04004c44], edi 	      4822	gui.c	FUNCTION_78
0x4004c44	      0xbe00000000	                              mov esi, 0	      4823	gui.c	FUNCTION_78	CALL_1
0x4004c49	      0xbf01000000	                              mov edi, 1	      4823	gui.c	FUNCTION_78	CALL_1
0x4004c4e	      0xe800000000	                          call 0x4004c53	      4823	gui.c	FUNCTION_78	CALL_1
0x4004c53	            0x89df	                            mov edi, ebx	      4826	gui.c	FUNCTION_78	CALL_2
0x4004c55	      0xe800000000	                          call 0x4004c5a	      4826	gui.c	FUNCTION_78	CALL_2
0x4004c5a	    0x8b0500000000	            mov eax, dword [0x04004c60] 	      4832	gui.c	FUNCTION_78	IF_1
0x4004c60	            0x85c0	                           test eax, eax	      4832	gui.c	FUNCTION_78	IF_1
0x4004c62	            0x7524	                           jne 0x4004c88	      4832	gui.c	FUNCTION_78	IF_1
0x4004c64	        0xc604249b	                    mov byte [rsp], 0x9b	      4836	gui.c	FUNCTION_78	IF_1
0x4004c68	      0xc6442401fd	                mov byte [rsp + 1], 0xfd	      4837	gui.c	FUNCTION_78	IF_1
0x4004c6d	          0x83fb01	                              cmp ebx, 1	      4838	gui.c	FUNCTION_78	IF_1
0x4004c70	            0x19c0	                            sbb eax, eax	      4838	gui.c	FUNCTION_78	IF_1
0x4004c72	            0xf7d0	                                 not eax	      4838	gui.c	FUNCTION_78	IF_1
0x4004c74	          0x83c063	                           add eax, 0x63	      4838	gui.c	FUNCTION_78	IF_1
0x4004c77	        0x88442402	                  mov byte [rsp + 2], al	      4838	gui.c	FUNCTION_78	IF_1
0x4004c7b	      0xbe03000000	                              mov esi, 3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x4004c80	          0x4889e7	                            mov rdi, rsp	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x4004c83	      0xe800000000	                          call 0x4004c88	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x4004c88	      0x488b442408	                mov rax, qword [rsp + 8]	      4842	gui.c	FUNCTION_78
0x4004c8d	    0x644833042528	                xor rax, qword fs:[0x28]	      4842	gui.c	FUNCTION_78
0x4004c96	            0x7405	                            je 0x4004c9d	      4842	gui.c	FUNCTION_78
0x4004c98	      0xe800000000	                          call 0x4004c9d	      4842	gui.c	FUNCTION_78
0x4004c9d	        0x4883c410	                           add rsp, 0x10	      4842	gui.c	FUNCTION_78
0x4004ca1	              0x5b	                                 pop rbx	      4842	gui.c	FUNCTION_78
0x4004ca2	              0xc3	                                     ret	      4842	gui.c	FUNCTION_78
concat_esc	WHILE,2:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,3:DO,0	46
0x40006d4	            0x4155	                                push r13	      5246	gui.c	FUNCTION_90
0x40006d6	            0x4154	                                push r12	      5246	gui.c	FUNCTION_90
0x40006d8	              0x55	                                push rbp	      5246	gui.c	FUNCTION_90
0x40006d9	              0x53	                                push rbx	      5246	gui.c	FUNCTION_90
0x40006da	        0x4883ec08	                              sub rsp, 8	      5246	gui.c	FUNCTION_90
0x40006de	          0x4989fc	                            mov r12, rdi	      5246	gui.c	FUNCTION_90
0x40006e1	          0x4889f3	                            mov rbx, rsi	      5246	gui.c	FUNCTION_90
0x40006e4	          0x4189d5	                           mov r13d, edx	      5246	gui.c	FUNCTION_90
0x40006e7	            0xeb60	                           jmp 0x4000749	      5247	gui.c	FUNCTION_90	WHILE_1
0x40006e9	          0x4889df	                            mov rdi, rbx	      5250	gui.c	FUNCTION_90	WHILE_1
0x40006ec	    0xff1500000000	                 call qword [0x040006f2]	      5250	gui.c	FUNCTION_90	WHILE_1
0x40006f2	          0x83f801	                              cmp eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x40006f5	            0x7e26	                           jle 0x400071d	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x40006f7	            0x89c1	                            mov ecx, eax	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x40006f9	          0x83e901	                              sub ecx, 1	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x40006fc	            0x7845	                            js 0x4000743	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x40006fe	          0x8d40ff	                      lea eax, [rax - 1]	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000701	      0x488d6c0301	                lea rbp, [rbx + rax + 1]	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000706	        0x4883c301	                              add rbx, 1	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x400070a	         0xfb673ff	               movzx esi, byte [rbx - 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x400070e	          0x4c89e7	                            mov rdi, r12	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4000711	      0xe800000000	                          call 0x4000716	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4000716	          0x4839eb	                            cmp rbx, rbp	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000719	            0x75eb	                           jne 0x4000706	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x400071b	            0xeb29	                           jmp 0x4000746	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x400071d	           0xfb603	                   movzx eax, byte [rbx]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000720	          0x4439e8	                           cmp eax, r13d	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000723	            0x750d	                           jne 0x4000732	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4000725	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400072a	          0x4c89e7	                            mov rdi, r12	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400072d	      0xe800000000	                          call 0x4000732	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4000732	           0xfb633	                   movzx esi, byte [rbx]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4000735	          0x4c89e7	                            mov rdi, r12	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4000738	      0xe800000000	                          call 0x400073d	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x400073d	        0x488d6b01	                      lea rbp, [rbx + 1]	      5262	gui.c	FUNCTION_90	WHILE_1
0x4000741	            0xeb03	                           jmp 0x4000746	      5262	gui.c	FUNCTION_90	WHILE_1
0x4000743	          0x4889dd	                            mov rbp, rbx	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000746	          0x4889eb	                            mov rbx, rbp	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4000749	          0x803b00	                       cmp byte [rbx], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x400074c	            0x759b	                           jne 0x40006e9	      5247	gui.c	FUNCTION_90	WHILE_1
0x400074e	        0x4883c408	                              add rsp, 8	      5264	gui.c	FUNCTION_90
0x4000752	              0x5b	                                 pop rbx	      5264	gui.c	FUNCTION_90
0x4000753	              0x5d	                                 pop rbp	      5264	gui.c	FUNCTION_90
0x4000754	            0x415c	                                 pop r12	      5264	gui.c	FUNCTION_90
0x4000756	            0x415d	                                 pop r13	      5264	gui.c	FUNCTION_90
0x4000758	              0xc3	                                     ret	      5264	gui.c	FUNCTION_90
get_tabline_label	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,8:FOR,1:CALL,16:DO,0	191
0x40027a1	            0x4157	                                push r15	      3734	gui.c	FUNCTION_57
0x40027a3	            0x4156	                                push r14	      3734	gui.c	FUNCTION_57
0x40027a5	            0x4155	                                push r13	      3734	gui.c	FUNCTION_57
0x40027a7	            0x4154	                                push r12	      3734	gui.c	FUNCTION_57
0x40027a9	              0x55	                                push rbp	      3734	gui.c	FUNCTION_57
0x40027aa	              0x53	                                push rbx	      3734	gui.c	FUNCTION_57
0x40027ab	    0x4881ec181000	                         sub rsp, 0x1018	      3734	gui.c	FUNCTION_57
0x40027b2	          0x4889fb	                            mov rbx, rdi	      3734	gui.c	FUNCTION_57
0x40027b5	          0x4189f4	                           mov r12d, esi	      3734	gui.c	FUNCTION_57
0x40027b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3734	gui.c	FUNCTION_57
0x40027c1	    0x488984240810	          mov qword [rsp + 0x1008], rax 	      3734	gui.c	FUNCTION_57
0x40027c9	            0x31c0	                            xor eax, eax	      3734	gui.c	FUNCTION_57
0x40027cb	            0x85f6	                           test esi, esi	      3742	gui.c	FUNCTION_57
0x40027cd	            0x741b	                            je 0x40027ea	      3742	gui.c	FUNCTION_57
0x40027cf	    0x488b05000000	            mov rax, qword [0x040027d6] 	      3743	gui.c	FUNCTION_57	IF_1
0x40027d6	    0x41bd00000000	                             mov r13d, 0	      3742	gui.c	FUNCTION_57
0x40027dc	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x40027df	     0xf8463010000	                            je 0x4002948	      3743	gui.c	FUNCTION_57	IF_1
0x40027e5	      0xe9a7020000	                           jmp 0x4002a91	      3743	gui.c	FUNCTION_57	IF_1
0x40027ea	    0x488b05000000	            mov rax, qword [0x040027f1] 	      3743	gui.c	FUNCTION_57	IF_1
0x40027f1	    0x41bd00000000	                             mov r13d, 0	      3742	gui.c	FUNCTION_57
0x40027f7	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x40027fa	     0xf8448010000	                            je 0x4002948	      3743	gui.c	FUNCTION_57	IF_1
0x4002800	      0xe9a4020000	                           jmp 0x4002aa9	      3743	gui.c	FUNCTION_57	IF_1
0x4002805	    0xc70500000000	               mov dword [0x0400280f], 0	      3752	gui.c	FUNCTION_57	IF_1
0x400280f	          0x4889df	                            mov rdi, rbx	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002812	      0xe800000000	                          call 0x4002817	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002817	          0x4863f0	                         movsxd rsi, eax	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400281a	    0x488935000000	            mov qword [0x04002821], rsi 	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4002821	      0xbf09000000	                              mov edi, 9	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4002826	      0xe800000000	                          call 0x400282b	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x400282b	      0xbe00000000	                              mov esi, 0	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002830	          0x4c89f7	                            mov rdi, r14	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002833	      0xe800000000	                          call 0x4002838	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4002838	          0x4189c0	                            mov r8d, eax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x400283b	    0x488b2d000000	            mov rbp, qword [0x04002842] 	      3760	gui.c	FUNCTION_57	IF_1
0x4002842	    0x488b05000000	            mov rax, qword [0x04002849] 	      3760	gui.c	FUNCTION_57	IF_1
0x4002849	        0x48894520	            mov qword [rbp + 0x20], rax 	      3760	gui.c	FUNCTION_57	IF_1
0x400284d	    0x488b05000000	            mov rax, qword [0x04002854] 	      3761	gui.c	FUNCTION_57	IF_1
0x4002854	        0x48894528	            mov qword [rbp + 0x28], rax 	      3761	gui.c	FUNCTION_57	IF_1
0x4002858	    0x488b05000000	            mov rax, qword [0x0400285f] 	      3762	gui.c	FUNCTION_57	IF_1
0x400285f	        0x48894510	            mov qword [rbp + 0x10], rax 	      3762	gui.c	FUNCTION_57	IF_1
0x4002863	    0x48891d000000	            mov qword [0x0400286a], rbx 	      3764	gui.c	FUNCTION_57	IF_1
0x400286a	        0x488b4308	                mov rax, qword [rbx + 8]	      3765	gui.c	FUNCTION_57	IF_1
0x400286e	    0x488905000000	            mov qword [0x04002875], rax 	      3765	gui.c	FUNCTION_57	IF_1
0x4002875	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3766	gui.c	FUNCTION_57	IF_1
0x4002879	    0x488905000000	            mov qword [0x04002880], rax 	      3766	gui.c	FUNCTION_57	IF_1
0x4002880	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3767	gui.c	FUNCTION_57	IF_1
0x4002884	    0x488905000000	            mov qword [0x0400288b], rax 	      3767	gui.c	FUNCTION_57	IF_1
0x400288b	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3768	gui.c	FUNCTION_57	IF_1
0x400288f	    0x48893d000000	            mov qword [0x04002896], rdi 	      3768	gui.c	FUNCTION_57	IF_1
0x4002896	        0x488b4708	                mov rax, qword [rdi + 8]	      3769	gui.c	FUNCTION_57	IF_1
0x400289a	    0x488905000000	            mov qword [0x040028a1], rax 	      3769	gui.c	FUNCTION_57	IF_1
0x40028a1	        0x4883ec08	                              sub rsp, 8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028a5	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028a7	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028a9	    0x488b05000000	            mov rax, qword [0x040028b0] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028b0	              0x50	                                push rax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028b1	    0x41b900000000	                              mov r9d, 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028b7	        0x498b4d00	                    mov rcx, qword [r13]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028bb	      0xba00100000	                         mov edx, 0x1000	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028c0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028c5	      0xe800000000	                          call 0x40028ca	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40028ca	        0x4883c420	                           add rsp, 0x20	       110	string3.h	FUNCTION_100	CALL_3
0x40028ce	          0x4889e6	                            mov rsi, rsp	       110	string3.h	FUNCTION_100	CALL_3
0x40028d1	    0x488b3d000000	            mov rdi, qword [0x040028d8] 	       110	string3.h	FUNCTION_100	CALL_3
0x40028d8	      0xe800000000	                          call 0x40028dd	       110	string3.h	FUNCTION_100	CALL_3
0x40028dd	    0x48892d000000	            mov qword [0x040028e4], rbp 	      3777	gui.c	FUNCTION_57	IF_1
0x40028e4	        0x488b4508	                mov rax, qword [rbp + 8]	      3778	gui.c	FUNCTION_57	IF_1
0x40028e8	    0x488905000000	            mov qword [0x040028ef], rax 	      3778	gui.c	FUNCTION_57	IF_1
0x40028ef	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3779	gui.c	FUNCTION_57	IF_1
0x40028f3	    0x488905000000	            mov qword [0x040028fa], rax 	      3779	gui.c	FUNCTION_57	IF_1
0x40028fa	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      3780	gui.c	FUNCTION_57	IF_1
0x40028fe	    0x488905000000	            mov qword [0x04002905], rax 	      3780	gui.c	FUNCTION_57	IF_1
0x4002905	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3781	gui.c	FUNCTION_57	IF_1
0x4002909	    0x488905000000	            mov qword [0x04002910], rax 	      3781	gui.c	FUNCTION_57	IF_1
0x4002910	        0x488b4008	                mov rax, qword [rax + 8]	      3782	gui.c	FUNCTION_57	IF_1
0x4002914	    0x488905000000	            mov qword [0x0400291b], rax 	      3782	gui.c	FUNCTION_57	IF_1
0x400291b	    0x833d00000000	               cmp dword [0x04002922], 0	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4002922	            0x741d	                            je 0x4002941	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4002924	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400292a	      0xb901000000	                              mov ecx, 1	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400292f	      0xba00000000	                              mov edx, 0	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002934	      0xbeffffffff	                     mov esi, 0xffffffff	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002939	          0x4c89f7	                            mov rdi, r14	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400293c	      0xe800000000	                          call 0x4002941	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4002941	    0x44093d000000	             or dword [0x04002948], r15d	      3787	gui.c	FUNCTION_57	IF_1
0x4002948	        0x498b4500	                    mov rax, qword [r13]	      3792	gui.c	FUNCTION_57	IF_3
0x400294c	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x400294f	            0x7410	                            je 0x4002961	      3792	gui.c	FUNCTION_57	IF_3
0x4002951	    0x488b05000000	            mov rax, qword [0x04002958] 	      3792	gui.c	FUNCTION_57	IF_3
0x4002958	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x400295b	     0xf8560010000	                           jne 0x4002ac1	      3792	gui.c	FUNCTION_57	IF_3
0x4002961	    0x483b1d000000	            cmp rbx, qword [0x04002968] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002968	            0x740a	                            je 0x4002974	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400296a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400296e	        0x488b7808	                mov rdi, qword [rax + 8]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002972	            0xeb07	                           jmp 0x400297b	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002974	    0x488b3d000000	            mov rdi, qword [0x0400297b] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400297b	      0xe800000000	                          call 0x4002980	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4002980	          0x4585e4	                         test r12d, r12d	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002983	            0x750c	                           jne 0x4002991	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4002985	    0x488b3d000000	            mov rdi, qword [0x0400298c] 	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x400298c	      0xe800000000	                          call 0x4002991	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x4002991	    0x483b1d000000	            cmp rbx, qword [0x04002998] 	      3799	gui.c	FUNCTION_57	IF_3
0x4002998	            0x7406	                            je 0x40029a0	      3799	gui.c	FUNCTION_57	IF_3
0x400299a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3799	gui.c	FUNCTION_57	IF_3
0x400299e	            0xeb07	                           jmp 0x40029a7	      3799	gui.c	FUNCTION_57	IF_3
0x40029a0	    0x488b1d000000	            mov rbx, qword [0x040029a7] 	      3799	gui.c	FUNCTION_57	IF_3
0x40029a7	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029aa	     0xf8411010000	                            je 0x4002ac1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029b0	      0xbd00000000	                              mov ebp, 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029b5	    0x41bc00000000	                             mov r12d, 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029bb	    0x41bd01000000	                             mov r13d, 1	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40029c1	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x40029c5	      0xe800000000	                          call 0x40029ca	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x40029ca	            0x85c0	                           test eax, eax	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40029cc	        0x450f45e5	                       cmovne r12d, r13d	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40029d0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029d4	          0x83c501	                              add ebp, 1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029d7	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029da	            0x75e5	                           jne 0x40029c1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40029dc	          0x4585e4	                         test r12d, r12d	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40029df	            0x7509	                           jne 0x40029ea	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40029e1	          0x83fd01	                              cmp ebp, 1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40029e4	     0xf8ed7000000	                           jle 0x4002ac1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40029ea	          0x83fd01	                              cmp ebp, 1	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x40029ed	            0x7e1b	                           jle 0x4002a0a	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x40029ef	            0x89e9	                            mov ecx, ebp	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40029f1	      0xba00000000	                              mov edx, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40029f6	      0xbe28000000	                           mov esi, 0x28	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40029fb	          0x4889e7	                            mov rdi, rsp	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40029fe	      0xb800000000	                              mov eax, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002a03	      0xe800000000	                          call 0x4002a08	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002a08	            0xeb04	                           jmp 0x4002a0e	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4002a0a	        0xc6042400	                       mov byte [rsp], 0	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x4002a0e	          0x4585e4	                         test r12d, r12d	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002a11	            0x7412	                            je 0x4002a25	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4002a13	      0xba28000000	                           mov edx, 0x28	       148	string3.h	FUNCTION_104	CALL_3
0x4002a18	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_104	CALL_3
0x4002a1d	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_104	CALL_3
0x4002a20	      0xe800000000	                          call 0x4002a25	       148	string3.h	FUNCTION_104	CALL_3
0x4002a25	      0xba28000000	                           mov edx, 0x28	       148	string3.h	FUNCTION_104	CALL_3
0x4002a2a	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_104	CALL_3
0x4002a2f	          0x4889e7	                            mov rdi, rsp	       148	string3.h	FUNCTION_104	CALL_3
0x4002a32	      0xe800000000	                          call 0x4002a37	       148	string3.h	FUNCTION_104	CALL_3
0x4002a37	    0x488b35000000	            mov rsi, qword [0x04002a3e] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a3e	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a45	      0xbb00000000	                              mov ebx, 0	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a4a	          0x4c89e1	                            mov rcx, r12	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a4d	          0x4889f7	                            mov rdi, rsi	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a50	            0x89d8	                            mov eax, ebx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a52	            0xf2ae	              repne scasb al, byte [rdi]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a54	          0x4889ca	                            mov rdx, rcx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a57	          0x48f7d2	                                 not rdx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a5a	          0x4c89e1	                            mov rcx, r12	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a5d	          0x4889e7	                            mov rdi, rsp	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a60	            0xf2ae	              repne scasb al, byte [rdi]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a62	          0x48f7d1	                                 not rcx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4002a65	      0x488d7c0eff	                lea rdi, [rsi + rcx - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4002a6a	      0xe800000000	                          call 0x4002a6f	        59	string3.h	FUNCTION_95	CALL_3
0x4002a6f	          0x4c89e1	                            mov rcx, r12	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a72	          0x4889e7	                            mov rdi, rsp	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a75	            0x89d8	                            mov eax, ebx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a77	            0xf2ae	              repne scasb al, byte [rdi]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a79	          0x48f7d1	                                 not rcx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a7c	        0x4a8d1421	                    lea rdx, [rcx + r12]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4002a80	          0x4889e6	                            mov rsi, rsp	        59	string3.h	FUNCTION_95	CALL_3
0x4002a83	    0x488b3d000000	            mov rdi, qword [0x04002a8a] 	        59	string3.h	FUNCTION_95	CALL_3
0x4002a8a	      0xe800000000	                          call 0x4002a8f	        59	string3.h	FUNCTION_95	CALL_3
0x4002a8f	            0xeb30	                           jmp 0x4002ac1	      3816	gui.c	FUNCTION_57
0x4002a91	    0x448b3d000000	           mov r15d, dword [0x04002a98] 	      3746	gui.c	FUNCTION_57	IF_1
0x4002a98	    0x41bd00000000	                             mov r13d, 0	      3742	gui.c	FUNCTION_57
0x4002a9e	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4002aa4	      0xe95cfdffff	                           jmp 0x4002805	      3749	gui.c	FUNCTION_57	IF_1
0x4002aa9	    0x448b3d000000	           mov r15d, dword [0x04002ab0] 	      3746	gui.c	FUNCTION_57	IF_1
0x4002ab0	    0x41bd00000000	                             mov r13d, 0	      3742	gui.c	FUNCTION_57
0x4002ab6	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4002abc	      0xe944fdffff	                           jmp 0x4002805	      3749	gui.c	FUNCTION_57	IF_1
0x4002ac1	    0x488b84240810	          mov rax, qword [rsp + 0x1008] 	      3816	gui.c	FUNCTION_57
0x4002ac9	    0x644833042528	                xor rax, qword fs:[0x28]	      3816	gui.c	FUNCTION_57
0x4002ad2	            0x7405	                            je 0x4002ad9	      3816	gui.c	FUNCTION_57
0x4002ad4	      0xe800000000	                          call 0x4002ad9	      3816	gui.c	FUNCTION_57
0x4002ad9	    0x4881c4181000	                         add rsp, 0x1018	      3816	gui.c	FUNCTION_57
0x4002ae0	              0x5b	                                 pop rbx	      3816	gui.c	FUNCTION_57
0x4002ae1	              0x5d	                                 pop rbp	      3816	gui.c	FUNCTION_57
0x4002ae2	            0x415c	                                 pop r12	      3816	gui.c	FUNCTION_57
0x4002ae4	            0x415d	                                 pop r13	      3816	gui.c	FUNCTION_57
0x4002ae6	            0x415e	                                 pop r14	      3816	gui.c	FUNCTION_57
0x4002ae8	            0x415f	                                 pop r15	      3816	gui.c	FUNCTION_57
0x4002aea	              0xc3	                                     ret	      3816	gui.c	FUNCTION_57
gui_get_shellsize	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0:DO,0	6
0x4000a5f	    0x486305000000	         movsxd rax, dword [0x04000a66] 	      1556	gui.c	FUNCTION_22
0x4000a66	    0x488905000000	            mov qword [0x04000a6d], rax 	      1556	gui.c	FUNCTION_22
0x4000a6d	    0x486305000000	         movsxd rax, dword [0x04000a74] 	      1557	gui.c	FUNCTION_22
0x4000a74	    0x488905000000	            mov qword [0x04000a7b], rax 	      1557	gui.c	FUNCTION_22
0x4000a7b	      0xb801000000	                              mov eax, 1	      1559	gui.c	FUNCTION_22
0x4000a80	              0xc3	                                     ret	      1559	gui.c	FUNCTION_22
gui_menu_cb	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,3:DO,0	28
0x40026c4	              0x53	                                push rbx	      3413	gui.c	FUNCTION_52
0x40026c5	        0x4883ec10	                           sub rsp, 0x10	      3413	gui.c	FUNCTION_52
0x40026c9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3413	gui.c	FUNCTION_52
0x40026d2	      0x4889442408	                mov qword [rsp + 8], rax	      3413	gui.c	FUNCTION_52
0x40026d7	            0x31c0	                            xor eax, eax	      3413	gui.c	FUNCTION_52
0x40026d9	    0x8b0500000000	            mov eax, dword [0x040026df] 	      3417	gui.c	FUNCTION_52	IF_1
0x40026df	            0x85c0	                           test eax, eax	      3417	gui.c	FUNCTION_52	IF_1
0x40026e1	            0x7536	                           jne 0x4002719	      3417	gui.c	FUNCTION_52	IF_1
0x40026e3	          0x4889fb	                            mov rbx, rdi	      3417	gui.c	FUNCTION_52	IF_1
0x40026e6	        0xc604249b	                    mov byte [rsp], 0x9b	      3420	gui.c	FUNCTION_52
0x40026ea	      0xc6442401fa	                mov byte [rsp + 1], 0xfa	      3421	gui.c	FUNCTION_52
0x40026ef	      0xc644240258	                mov byte [rsp + 2], 0x58	      3422	gui.c	FUNCTION_52
0x40026f4	      0xbe03000000	                              mov esi, 3	      3423	gui.c	FUNCTION_52	CALL_1
0x40026f9	          0x4889e7	                            mov rdi, rsp	      3423	gui.c	FUNCTION_52	CALL_1
0x40026fc	      0xe800000000	                          call 0x4002701	      3423	gui.c	FUNCTION_52	CALL_1
0x4002701	          0x4889e6	                            mov rsi, rsp	      3424	gui.c	FUNCTION_52	CALL_2
0x4002704	          0x4889df	                            mov rdi, rbx	      3424	gui.c	FUNCTION_52	CALL_2
0x4002707	      0xe800000000	                          call 0x400270c	      3424	gui.c	FUNCTION_52	CALL_2
0x400270c	      0xbe08000000	                              mov esi, 8	      3425	gui.c	FUNCTION_52	CALL_3
0x4002711	          0x4889e7	                            mov rdi, rsp	      3425	gui.c	FUNCTION_52	CALL_3
0x4002714	      0xe800000000	                          call 0x4002719	      3425	gui.c	FUNCTION_52	CALL_3
0x4002719	      0x488b442408	                mov rax, qword [rsp + 8]	      3426	gui.c	FUNCTION_52
0x400271e	    0x644833042528	                xor rax, qword fs:[0x28]	      3426	gui.c	FUNCTION_52
0x4002727	            0x7405	                            je 0x400272e	      3426	gui.c	FUNCTION_52
0x4002729	      0xe800000000	                          call 0x400272e	      3426	gui.c	FUNCTION_52
0x400272e	        0x4883c410	                           add rsp, 0x10	      3426	gui.c	FUNCTION_52
0x4002732	              0x5b	                                 pop rbx	      3426	gui.c	FUNCTION_52
0x4002733	              0xc3	                                     ret	      3426	gui.c	FUNCTION_52
gui_enable_flush	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0:DO,0	2
0x4000c5c	    0x832d00000000	               sub dword [0x04000c63], 1	      2025	gui.c	FUNCTION_34
0x4000c63	              0xc3	                                     ret	      2025	gui.c	FUNCTION_34
gui_init_check	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,5:DO,0	53
0x400077b	        0x4883ec08	                              sub rsp, 8	       366	gui.c	FUNCTION_6
0x400077f	    0x8b0500000000	            mov eax, dword [0x04000785] 	       369	gui.c	FUNCTION_6	IF_1
0x4000785	          0x83f802	                              cmp eax, 2	       369	gui.c	FUNCTION_6	IF_1
0x4000788	            0x742b	                            je 0x40007b5	       369	gui.c	FUNCTION_6	IF_1
0x400078a	            0x85c0	                           test eax, eax	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x400078c	            0x751c	                           jne 0x40007aa	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x400078e	      0xba05000000	                              mov edx, 5	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x4000793	      0xbe00000000	                              mov esi, 0	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x4000798	      0xbf00000000	                              mov edi, 0	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x400079d	      0xe800000000	                          call 0x40007a2	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x40007a2	          0x4889c7	                            mov rdi, rax	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x40007a5	      0xe800000000	                          call 0x40007aa	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x40007aa	    0x8b0500000000	            mov eax, dword [0x040007b0] 	       373	gui.c	FUNCTION_6	IF_1
0x40007b0	      0xe925010000	                           jmp 0x40008da	       373	gui.c	FUNCTION_6	IF_1
0x40007b5	    0xc70500000000	               mov dword [0x040007bf], 0	       376	gui.c	FUNCTION_6
0x40007bf	    0xc70500000000	               mov dword [0x040007c9], 0	       377	gui.c	FUNCTION_6
0x40007c9	    0xc70500000000	               mov dword [0x040007d3], 1	       378	gui.c	FUNCTION_6
0x40007d3	    0xc70500000000	     mov dword [0x040007dd], 0xffffffff 	       379	gui.c	FUNCTION_6
0x40007dd	    0x48c705000000	               mov qword [0x040007e8], 0	       380	gui.c	FUNCTION_6
0x40007e8	    0xc70500000000	               mov dword [0x040007f2], 0	       381	gui.c	FUNCTION_6
0x40007f2	    0xc70500000000	               mov dword [0x040007fc], 0	       382	gui.c	FUNCTION_6
0x40007fc	    0xc70500000000	               mov dword [0x04000806], 0	       383	gui.c	FUNCTION_6
0x4000806	    0x488b05000000	            mov rax, qword [0x0400080d] 	       384	gui.c	FUNCTION_6
0x400080d	    0x890500000000	            mov dword [0x04000813], eax 	       384	gui.c	FUNCTION_6
0x4000813	    0x488b15000000	            mov rdx, qword [0x0400081a] 	       385	gui.c	FUNCTION_6
0x400081a	    0x891500000000	            mov dword [0x04000820], edx 	       385	gui.c	FUNCTION_6
0x4000820	    0xc60500000000	                mov byte [0x04000827], 0	       387	gui.c	FUNCTION_6
0x4000827	    0xc70500000000	               mov dword [0x04000831], 0	       388	gui.c	FUNCTION_6
0x4000831	          0x83ea01	                              sub edx, 1	       389	gui.c	FUNCTION_6
0x4000834	    0x891500000000	            mov dword [0x0400083a], edx 	       389	gui.c	FUNCTION_6
0x400083a	    0xc70500000000	               mov dword [0x04000844], 0	       390	gui.c	FUNCTION_6
0x4000844	          0x83e801	                              sub eax, 1	       391	gui.c	FUNCTION_6
0x4000847	    0x890500000000	            mov dword [0x0400084d], eax 	       391	gui.c	FUNCTION_6
0x400084d	    0xc70500000000	               mov dword [0x04000857], 0	       392	gui.c	FUNCTION_6
0x4000857	    0xc70500000000	               mov dword [0x04000861], 1	       393	gui.c	FUNCTION_6
0x4000861	    0xc70500000000	               mov dword [0x0400086b], 1	       394	gui.c	FUNCTION_6
0x400086b	    0xc70500000000	               mov dword [0x04000875], 0	       395	gui.c	FUNCTION_6
0x4000875	    0xc70500000000	               mov dword [0x0400087f], 0	       396	gui.c	FUNCTION_6
0x400087f	    0x48c705000000	               mov qword [0x0400088a], 0	       398	gui.c	FUNCTION_6
0x400088a	    0x48c705000000	               mov qword [0x04000895], 0	       408	gui.c	FUNCTION_6
0x4000895	    0xc60500000000	                mov byte [0x0400089c], 1	       424	gui.c	FUNCTION_6
0x400089c	    0xc70500000000	           mov dword [0x040008a6], 0x10 	       440	gui.c	FUNCTION_6
0x40008a6	    0xc70500000000	           mov dword [0x040008b0], 0x10 	       440	gui.c	FUNCTION_6
0x40008b0	    0xc70500000000	     mov dword [0x040008ba], 0xffffffff 	       441	gui.c	FUNCTION_6
0x40008ba	    0x833d00000000	               cmp dword [0x040008c1], 0	       453	gui.c	FUNCTION_6	CALL_4
0x40008c1	            0x740c	                            je 0x40008cf	       453	gui.c	FUNCTION_6	CALL_4
0x40008c3	      0xbf01000000	                              mov edi, 1	       453	gui.c	FUNCTION_6	CALL_4
0x40008c8	      0xe800000000	                          call 0x40008cd	       453	gui.c	FUNCTION_6	CALL_4
0x40008cd	            0xeb05	                           jmp 0x40008d4	       453	gui.c	FUNCTION_6	CALL_4
0x40008cf	      0xe800000000	                          call 0x40008d4	       453	gui.c	FUNCTION_6	CALL_4
0x40008d4	    0x890500000000	            mov dword [0x040008da], eax 	       453	gui.c	FUNCTION_6	CALL_4
0x40008da	        0x4883c408	                              add rsp, 8	       459	gui.c	FUNCTION_6
0x40008de	              0xc3	                                     ret	       459	gui.c	FUNCTION_6
gui_may_update_scrollbars	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,3:DO,0	15
0x400451a	    0x833d00000000	               cmp dword [0x04004521], 0	      4167	gui.c	FUNCTION_64	IF_1
0x4004521	            0x7435	                            je 0x4004558	      4167	gui.c	FUNCTION_64	IF_1
0x4004523	    0x833d00000000	               cmp dword [0x0400452a], 0	      4167	gui.c	FUNCTION_64	IF_1
0x400452a	            0x752c	                           jne 0x4004558	      4167	gui.c	FUNCTION_64	IF_1
0x400452c	        0x4883ec08	                              sub rsp, 8	      4166	gui.c	FUNCTION_64
0x4004530	      0xe800000000	                          call 0x4004535	      4169	gui.c	FUNCTION_64	IF_1	CALL_1
0x4004535	      0xbf00000000	                              mov edi, 0	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x400453a	      0xe800000000	                          call 0x400453f	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x400453f	      0xbf01000000	                              mov edi, 1	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x4004544	      0xe800000000	                          call 0x4004549	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x4004549	    0xc70500000000	               mov dword [0x04004553], 1	      4173	gui.c	FUNCTION_64
0x4004553	        0x4883c408	                              add rsp, 8	      4174	gui.c	FUNCTION_64
0x4004557	              0xc3	                                     ret	      4174	gui.c	FUNCTION_64
0x4004558	    0xc70500000000	               mov dword [0x04004562], 1	      4173	gui.c	FUNCTION_64
0x4004562	              0xc3	                                     ret	      4173	gui.c	FUNCTION_64
gui_do_horiz_scroll	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,5:FOR,0:CALL,5:DO,0	49
0x4004737	    0x488b15000000	            mov rdx, qword [0x0400473e] 	      4698	gui.c	FUNCTION_71	IF_1
0x400473e	    0x8b8294020000	           mov eax, dword [rdx + 0x294] 	      4698	gui.c	FUNCTION_71	IF_1
0x4004744	            0x85c0	                           test eax, eax	      4698	gui.c	FUNCTION_71	IF_1
0x4004746	     0xf85a3000000	                           jne 0x40047ef	      4698	gui.c	FUNCTION_71	IF_1
0x400474c	    0x39ba94000000	            cmp dword [rdx + 0x94], edi 	      4701	gui.c	FUNCTION_71	IF_2
0x4004752	     0xf84a3000000	                            je 0x40047fb	      4701	gui.c	FUNCTION_71	IF_2
0x4004758	              0x55	                                push rbp	      4696	gui.c	FUNCTION_71
0x4004759	              0x53	                                push rbx	      4696	gui.c	FUNCTION_71
0x400475a	        0x4883ec08	                              sub rsp, 8	      4696	gui.c	FUNCTION_71
0x400475e	            0x89f5	                            mov ebp, esi	      4696	gui.c	FUNCTION_71
0x4004760	          0x4889fb	                            mov rbx, rdi	      4696	gui.c	FUNCTION_71
0x4004763	    0x89ba94000000	             mov dword [rdx + 0x94], edi	      4704	gui.c	FUNCTION_71
0x4004769	      0xbe68000000	                           mov esi, 0x68	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x400476e	    0x488b3d000000	            mov rdi, qword [0x04004775] 	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4004775	      0xe800000000	                          call 0x400477a	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x400477a	          0x4885c0	                           test rax, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x400477d	            0x7569	                           jne 0x40047e8	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x400477f	      0xe800000000	                          call 0x4004784	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4004784	            0x85c0	                           test eax, eax	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4004786	            0x7560	                           jne 0x40047e8	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4004788	    0x488b05000000	            mov rax, qword [0x0400478f] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x400478f	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4004793	      0xe852b9ffff	                call sym.scroll_line_len	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4004798	            0x39c3	                            cmp ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x400479a	            0x7e4c	                           jle 0x40047e8	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x400479c	            0x85ed	                           test ebp, ebp	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x400479e	            0x7420	                            je 0x40047c0	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x40047a0	    0x488b1d000000	            mov rbx, qword [0x040047a7] 	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x40047a7	      0xe88eb9ffff	          call sym.gui_find_longest_lnum	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x40047ac	        0x48894338	             mov qword [rbx + 0x38], rax	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x40047b0	    0x488b05000000	            mov rax, qword [0x040047b7] 	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x40047b7	    0xc74040000000	               mov dword [rax + 0x40], 0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x40047be	            0xeb28	                           jmp 0x40047e8	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x40047c0	    0x488b05000000	            mov rax, qword [0x040047c7] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047c7	    0x488b15000000	            mov rdx, qword [0x040047ce] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047ce	        0x48395078	            cmp qword [rax + 0x78], rdx 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047d2	            0x7f14	                            jg 0x40047e8	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047d4	    0x483b90e80000	            cmp rdx, qword [rax + 0xe8] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047db	            0x7d0b	                           jge 0x40047e8	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047dd	        0x48895038	             mov qword [rax + 0x38], rdx	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047e1	    0xc74040000000	               mov dword [rax + 0x40], 0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x40047e8	      0xe800000000	                          call 0x40047ed	      4726	gui.c	FUNCTION_71	CALL_5
0x40047ed	            0xeb06	                           jmp 0x40047f5	      4726	gui.c	FUNCTION_71	CALL_5
0x40047ef	      0xb800000000	                              mov eax, 0	      4699	gui.c	FUNCTION_71	IF_1
0x40047f4	              0xc3	                                     ret	      4699	gui.c	FUNCTION_71	IF_1
0x40047f5	        0x4883c408	                              add rsp, 8	      4727	gui.c	FUNCTION_71
0x40047f9	              0x5b	                                 pop rbx	      4727	gui.c	FUNCTION_71
0x40047fa	              0x5d	                                 pop rbp	      4727	gui.c	FUNCTION_71
0x40047fb	            0xf3c3	                                     ret	      4727	gui.c	FUNCTION_71
gui_create_scrollbar	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	21
0x4002c74	        0x4883ec08	                              sub rsp, 8	      3905	gui.c	FUNCTION_61
0x4002c78	    0x8b0500000000	            mov eax, dword [0x04002c7e] 	      3908	gui.c	FUNCTION_61
0x4002c7e	          0x8d4801	                      lea ecx, [rax + 1]	      3908	gui.c	FUNCTION_61
0x4002c81	    0x890d00000000	            mov dword [0x04002c87], ecx 	      3908	gui.c	FUNCTION_61
0x4002c87	            0x4898	                                    cdqe	      3908	gui.c	FUNCTION_61
0x4002c89	          0x488907	                    mov qword [rdi], rax	      3908	gui.c	FUNCTION_61
0x4002c8c	        0x48895708	                mov qword [rdi + 8], rdx	      3909	gui.c	FUNCTION_61
0x4002c90	          0x897710	             mov dword [rdi + 0x10], esi	      3910	gui.c	FUNCTION_61
0x4002c93	    0x48c747180000	               mov qword [rdi + 0x18], 0	      3911	gui.c	FUNCTION_61
0x4002c9b	    0x48c747200100	               mov qword [rdi + 0x20], 1	      3915	gui.c	FUNCTION_61
0x4002ca3	    0x48c747280100	               mov qword [rdi + 0x28], 1	      3916	gui.c	FUNCTION_61
0x4002cab	    0xc74730000000	               mov dword [rdi + 0x30], 0	      3917	gui.c	FUNCTION_61
0x4002cb2	    0xc74734000000	               mov dword [rdi + 0x34], 0	      3918	gui.c	FUNCTION_61
0x4002cb9	    0xc74738000000	               mov dword [rdi + 0x38], 0	      3919	gui.c	FUNCTION_61
0x4002cc0	    0xc7473c000000	               mov dword [rdi + 0x3c], 0	      3920	gui.c	FUNCTION_61
0x4002cc7	          0x4885d2	                           test rdx, rdx	      3921	gui.c	FUNCTION_61	CALL_1
0x4002cca	        0x400f94c6	                                sete sil	      3921	gui.c	FUNCTION_61	CALL_1
0x4002cce	        0x400fb6f6	                          movzx esi, sil	      3921	gui.c	FUNCTION_61	CALL_1
0x4002cd2	      0xe800000000	                          call 0x4002cd7	      3921	gui.c	FUNCTION_61	CALL_1
0x4002cd7	        0x4883c408	                              add rsp, 8	      3922	gui.c	FUNCTION_61
0x4002cdb	              0xc3	                                     ret	      3922	gui.c	FUNCTION_61
gui_update_screen	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,5:FOR,0:CALL,12:DO,0	78
0x40054fd	              0x55	                                push rbp	      5127	gui.c	FUNCTION_88
0x40054fe	              0x53	                                push rbx	      5127	gui.c	FUNCTION_88
0x40054ff	        0x4883ec08	                              sub rsp, 8	      5127	gui.c	FUNCTION_88
0x4005503	      0xe800000000	                          call 0x4005508	      5134	gui.c	FUNCTION_88	CALL_1
0x4005508	      0xe800000000	                          call 0x400550d	      5135	gui.c	FUNCTION_88	CALL_2
0x400550d	    0x833d00000000	               cmp dword [0x04005514], 0	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4005514	     0xf85fd000000	                           jne 0x4005617	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x400551a	      0xe800000000	                          call 0x400551f	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x400551f	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4005521	            0x7515	                           jne 0x4005538	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4005523	    0x488b05000000	            mov rax, qword [0x0400552a] 	      5140	gui.c	FUNCTION_88	IF_1
0x400552a	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5140	gui.c	FUNCTION_88	IF_1
0x4005532	     0xf8edf000000	                           jle 0x4005617	      5140	gui.c	FUNCTION_88	IF_1
0x4005538	    0x488b05000000	            mov rax, qword [0x0400553f] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400553f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4005543	    0x483915000000	            cmp qword [0x0400554a], rdx 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400554a	            0x7511	                           jne 0x400555d	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400554c	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4005550	    0x483905000000	            cmp qword [0x04005557], rax 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4005557	     0xf84ba000000	                            je 0x4005617	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400555d	      0xe800000000	                          call 0x4005562	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4005562	            0x85c0	                           test eax, eax	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4005564	            0x7420	                            je 0x4005586	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4005566	    0x4c8b05000000	              mov r8, qword [0x0400556d]	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x400556d	      0xb900000000	                              mov ecx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4005572	      0xba00000000	                              mov edx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4005577	      0xbe00000000	                              mov esi, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x400557c	      0xbf1e000000	                           mov edi, 0x1e	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4005581	      0xe800000000	                          call 0x4005586	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4005586	    0x488b05000000	            mov rax, qword [0x0400558d] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x400558d	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4005595	     0xf8e9e000000	                           jle 0x4005639	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x400559b	    0x488b2d000000	            mov rbp, qword [0x040055a2] 	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x40055a2	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x40055a6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x40055aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x40055ae	    0x488905000000	            mov qword [0x040055b5], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x40055b5	    0x488915000000	            mov qword [0x040055bc], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x40055bc	      0xbf00000000	                              mov edi, 0	      5157	gui.c	FUNCTION_88	CALL_7
0x40055c1	      0xe800000000	                          call 0x40055c6	      5157	gui.c	FUNCTION_88	CALL_7
0x40055c6	      0xe800000000	                          call 0x40055cb	      5158	gui.c	FUNCTION_88	CALL_8
0x40055cb	          0x4839dd	                            cmp rbp, rbx	      5161	gui.c	FUNCTION_88	IF_4
0x40055ce	            0x7558	                           jne 0x4005628	      5161	gui.c	FUNCTION_88	IF_4
0x40055d0	    0x488b3d000000	            mov rdi, qword [0x040055d7] 	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40055d7	      0xe800000000	                          call 0x40055dc	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40055dc	            0x85c0	                           test eax, eax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40055de	            0x7509	                           jne 0x40055e9	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40055e0	    0x833d00000000	               cmp dword [0x040055e7], 0	      5163	gui.c	FUNCTION_88	IF_4
0x40055e7	            0x741d	                            je 0x4005606	      5163	gui.c	FUNCTION_88	IF_4
0x40055e9	          0x4889de	                            mov rsi, rbx	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x40055ec	    0x488b3d000000	            mov rdi, qword [0x040055f3] 	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x40055f3	      0xe800000000	                          call 0x40055f8	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x40055f8	    0x488b05000000	            mov rax, qword [0x040055ff] 	      5168	gui.c	FUNCTION_88	IF_4
0x40055ff	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffef	      5168	gui.c	FUNCTION_88	IF_4
0x4005606	      0xbe00000000	                              mov esi, 0	      5171	gui.c	FUNCTION_88	CALL_12
0x400560b	      0xbf01000000	                              mov edi, 1	      5171	gui.c	FUNCTION_88	CALL_12
0x4005610	      0xe800000000	                          call 0x4005615	      5171	gui.c	FUNCTION_88	CALL_12
0x4005615	            0xeb49	                           jmp 0x4005660	      5172	gui.c	FUNCTION_88
0x4005617	      0xbf00000000	                              mov edi, 0	      5157	gui.c	FUNCTION_88	CALL_7
0x400561c	      0xe800000000	                          call 0x4005621	      5157	gui.c	FUNCTION_88	CALL_7
0x4005621	      0xe800000000	                          call 0x4005626	      5158	gui.c	FUNCTION_88	CALL_8
0x4005626	            0xebde	                           jmp 0x4005606	      5158	gui.c	FUNCTION_88	CALL_8
0x4005628	          0x4889ee	                            mov rsi, rbp	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x400562b	    0x488b3d000000	            mov rdi, qword [0x04005632] 	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4005632	      0xe800000000	                          call 0x4005637	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4005637	            0xebb0	                           jmp 0x40055e9	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4005639	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x400563d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x4005641	    0x488905000000	            mov qword [0x04005648], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x4005648	    0x488915000000	            mov qword [0x0400564f], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x400564f	      0xbf00000000	                              mov edi, 0	      5157	gui.c	FUNCTION_88	CALL_7
0x4005654	      0xe800000000	                          call 0x4005659	      5157	gui.c	FUNCTION_88	CALL_7
0x4005659	      0xe800000000	                          call 0x400565e	      5158	gui.c	FUNCTION_88	CALL_8
0x400565e	            0xeba6	                           jmp 0x4005606	      5158	gui.c	FUNCTION_88	CALL_8
0x4005660	        0x4883c408	                              add rsp, 8	      5172	gui.c	FUNCTION_88
0x4005664	              0x5b	                                 pop rbx	      5172	gui.c	FUNCTION_88
0x4005665	              0x5d	                                 pop rbp	      5172	gui.c	FUNCTION_88
0x4005666	              0xc3	                                     ret	      5172	gui.c	FUNCTION_88
gui_write	WHILE,2:functions,0:SWITCH,1:ELSE,12:IF,21:FOR,1:CALL,31:DO,0	340
0x4003f81	            0x4157	                                push r15	      1765	gui.c	FUNCTION_30
0x4003f83	            0x4156	                                push r14	      1765	gui.c	FUNCTION_30
0x4003f85	            0x4155	                                push r13	      1765	gui.c	FUNCTION_30
0x4003f87	            0x4154	                                push r12	      1765	gui.c	FUNCTION_30
0x4003f89	              0x55	                                push rbp	      1765	gui.c	FUNCTION_30
0x4003f8a	              0x53	                                push rbx	      1765	gui.c	FUNCTION_30
0x4003f8b	        0x4883ec28	                           sub rsp, 0x28	      1765	gui.c	FUNCTION_30
0x4003f8f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1765	gui.c	FUNCTION_30
0x4003f98	      0x4889442418	             mov qword [rsp + 0x18], rax	      1765	gui.c	FUNCTION_30
0x4003f9d	            0x31c0	                            xor eax, eax	      1765	gui.c	FUNCTION_30
0x4003f9f	            0x85f6	                           test esi, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fa1	     0xf843e050000	                            je 0x40044e5	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fa7	          0x4989fe	                            mov r14, rdi	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003faa	          0x4189f7	                           mov r15d, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fad	    0xc74424080000	                  mov dword [rsp + 8], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fb5	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fbd	    0xc74424040000	                  mov dword [rsp + 4], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fc5	    0xc70424000000	                      mov dword [rsp], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003fcc	        0x410fb606	                   movzx eax, byte [r14]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fd0	            0x3c1b	                            cmp al, 0x1b	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fd2	     0xf85fd010000	                           jne 0x40041d5	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fd8	      0x41807e017c	                cmp byte [r14 + 1], 0x7c	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fdd	     0xf857e020000	                           jne 0x4004261	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fe3	        0x498d4602	                      lea rax, [r14 + 2]	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fe7	      0x4889442410	             mov qword [rsp + 0x10], rax	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003fec	      0x410fb65602	               movzx edx, byte [r14 + 2]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ff1	           0xfb6c2	                           movzx eax, dl	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ff4	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ff7	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ffa	            0x7612	                           jbe 0x400400e	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ffc	          0x80fa2d	                            cmp dl, 0x2d	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003fff	            0x7555	                           jne 0x4004056	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004001	      0x410fb64603	               movzx eax, byte [r14 + 3]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004006	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4004009	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x400400c	            0x7748	                            ja 0x4004056	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x400400e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4004013	      0xe800000000	                          call 0x4004018	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4004018	          0x890424	                    mov dword [rsp], eax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x400401b	          0x4963df	                        movsxd rbx, r15d	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x400401e	          0x4c01f3	                            add rbx, r14	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004021	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004026	          0x4839c3	                            cmp rbx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4004029	     0xf82dc030000	                            jb 0x400440b	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x400402f	          0x80383b	                    cmp byte [rax], 0x3b	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004032	            0x7522	                           jne 0x4004056	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004034	        0x4883c001	                              add rax, 1	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4004038	      0x4889442410	             mov qword [rsp + 0x10], rax	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x400403d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4004042	      0xe800000000	                          call 0x4004047	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4004047	        0x89442404	                mov dword [rsp + 4], eax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x400404b	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004050	     0xf82b5030000	                            jb 0x400440b	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4004056	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400405b	           0xfb600	                   movzx eax, byte [rax]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400405e	          0x83e824	                           sub eax, 0x24	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004061	            0x3c4f	                            cmp al, 0x4f	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004063	     0xf873a010000	                            ja 0x40041a3	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004069	           0xfb6c0	                           movzx eax, al	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400406c	    0xff24c5000000	                       jmp qword [rax*8]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004073	      0xbf0f270000	                         mov edi, 0x270f	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4004078	      0xe800000000	                          call 0x400407d	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x400407d	      0xe800000000	                          call 0x4004082	      1819	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_13
0x4004082	    0xc60500000000	                mov byte [0x04004089], 0	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004089	    0xc74424080100	                  mov dword [rsp + 8], 1	      1821	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004091	      0xe920010000	                           jmp 0x40041b6	      1822	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004096	          0x8b0424	                    mov eax, dword [rsp]	      1029	gui.c	FUNCTION_13
0x4004099	    0x890500000000	            mov dword [0x0400409f], eax 	      1029	gui.c	FUNCTION_13
0x400409f	        0x8b442404	                mov eax, dword [rsp + 4]	      1030	gui.c	FUNCTION_13
0x40040a3	    0x890500000000	            mov dword [0x040040a9], eax 	      1030	gui.c	FUNCTION_13
0x40040a9	      0xe908010000	                           jmp 0x40041b6	      1030	gui.c	FUNCTION_13
0x40040ae	          0x8b0424	                    mov eax, dword [rsp]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040b1	        0x8b742404	                mov esi, dword [rsp + 4]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040b5	            0x39f0	                            cmp eax, esi	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040b7	            0x7d11	                           jge 0x40040ca	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040b9	    0x890500000000	            mov dword [0x040040bf], eax 	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040bf	    0x893500000000	            mov dword [0x040040c5], esi 	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040c5	      0xe9ec000000	                           jmp 0x40041b6	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x40040ca	        0x8b442404	                mov eax, dword [rsp + 4]	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x40040ce	    0x890500000000	            mov dword [0x040040d4], eax 	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x40040d4	          0x8b0424	                    mov eax, dword [rsp]	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x40040d7	    0x890500000000	            mov dword [0x040040dd], eax 	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x40040dd	      0xe9d4000000	                           jmp 0x40041b6	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x40040e2	          0x8b0424	                    mov eax, dword [rsp]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040e5	        0x8b742404	                mov esi, dword [rsp + 4]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040e9	            0x39f0	                            cmp eax, esi	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040eb	            0x7d11	                           jge 0x40040fe	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040ed	    0x890500000000	            mov dword [0x040040f3], eax 	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040f3	    0x893500000000	            mov dword [0x040040f9], esi 	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040f9	      0xe9b8000000	                           jmp 0x40041b6	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x40040fe	        0x8b442404	                mov eax, dword [rsp + 4]	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004102	    0x890500000000	            mov dword [0x04004108], eax 	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004108	          0x8b0424	                    mov eax, dword [rsp]	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x400410b	    0x890500000000	            mov dword [0x04004111], eax 	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004111	      0xe9a0000000	                           jmp 0x40041b6	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004116	      0xbe01000000	                              mov esi, 1	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x400411b	    0x8b3d00000000	            mov edi, dword [0x04004121] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004121	      0xe899caffff	               call sym.gui_delete_lines	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4004126	      0xe98b000000	                           jmp 0x40041b6	      1855	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400412b	          0x8b3424	                    mov esi, dword [rsp]	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x400412e	    0x8b3d00000000	            mov edi, dword [0x04004134] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004134	      0xe886caffff	               call sym.gui_delete_lines	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004139	            0xeb7b	                           jmp 0x40041b6	      1858	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400413b	      0xbe01000000	                              mov esi, 1	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004140	    0x8b3d00000000	            mov edi, dword [0x04004146] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4004146	      0xe8fec9ffff	               call sym.gui_insert_lines	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x400414b	            0xeb69	                           jmp 0x40041b6	      1861	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400414d	          0x8b3424	                    mov esi, dword [rsp]	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004150	    0x8b3d00000000	            mov edi, dword [0x04004156] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4004156	      0xe8eec9ffff	               call sym.gui_insert_lines	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x400415b	            0xeb59	                           jmp 0x40041b6	      1864	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400415d	    0x8b3d00000000	            mov edi, dword [0x04004163] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004163	    0x8b0500000000	            mov eax, dword [0x04004169] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004169	          0x8d48ff	                      lea ecx, [rax - 1]	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x400416c	            0x89fa	                            mov edx, edi	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x400416e	    0x8b3500000000	            mov esi, dword [0x04004174] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004174	      0xe800000000	                          call 0x4004179	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4004179	            0xeb3b	                           jmp 0x40041b6	      1868	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400417b	          0x8b3c24	                    mov edi, dword [rsp]	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x400417e	      0xe800000000	                          call 0x4004183	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x4004183	            0xeb31	                           jmp 0x40041b6	      1871	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4004185	          0x8b3c24	                    mov edi, dword [rsp]	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x4004188	      0xe800000000	                          call 0x400418d	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x400418d	            0xeb27	                           jmp 0x40041b6	      1874	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400418f	          0x8b0424	                    mov eax, dword [rsp]	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004192	            0x85c0	                           test eax, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004194	      0xbf14000000	                           mov edi, 0x14	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4004199	           0xf45f8	                         cmovne edi, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x400419c	      0xe800000000	                          call 0x40041a1	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x40041a1	            0xeb13	                           jmp 0x40041b6	      1877	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40041a3	        0x498d4601	                      lea rax, [r14 + 1]	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40041a7	      0x4889442410	             mov qword [rsp + 0x10], rax	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40041ac	            0xeb08	                           jmp 0x40041b6	      1880	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40041ae	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x40041b6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041bb	        0x4883c001	                              add rax, 1	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041bf	      0x4889442410	             mov qword [rsp + 0x10], rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041c4	          0x4889c2	                            mov rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041c7	          0x4c29f2	                            sub rdx, r14	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041ca	          0x4129d7	                           sub r15d, edx	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041cd	          0x4989c6	                            mov r14, rax	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041d0	      0xe92d020000	                           jmp 0x4004402	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40041d5	          0x8d50ff	                      lea edx, [rax - 1]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40041d8	          0x80fa01	                               cmp dl, 1	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40041db	     0xf868d000000	                           jbe 0x400426e	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40041e1	            0x3c1f	                            cmp al, 0x1f	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40041e3	     0xf8785000000	                            ja 0x400426e	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40041e9	            0x3c0a	                             cmp al, 0xa	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40041eb	            0x7535	                           jne 0x4004222	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40041ed	    0xc70500000000	               mov dword [0x040041f7], 0	      1901	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40041f7	    0x8b0500000000	            mov eax, dword [0x040041fd] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x40041fd	    0x3b0500000000	            cmp eax, dword [0x04004203] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004203	            0x7d0b	                           jge 0x4004210	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004205	          0x83c001	                              add eax, 1	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004208	    0x890500000000	            mov dword [0x0400420e], eax 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x400420e	            0xeb51	                           jmp 0x4004261	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4004210	      0xbe01000000	                              mov esi, 1	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004215	    0x8b3d00000000	            mov edi, dword [0x0400421b] 	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x400421b	      0xe89fc9ffff	               call sym.gui_delete_lines	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004220	            0xeb3f	                           jmp 0x4004261	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4004222	            0x3c0d	                             cmp al, 0xd	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004224	            0x750c	                           jne 0x4004232	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004226	    0xc70500000000	               mov dword [0x04004230], 0	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004230	            0xeb2f	                           jmp 0x4004261	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4004232	            0x3c08	                               cmp al, 8	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4004234	            0x7515	                           jne 0x400424b	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4004236	    0x8b0500000000	            mov eax, dword [0x0400423c] 	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400423c	            0x85c0	                           test eax, eax	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400423e	            0x7421	                            je 0x4004261	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004240	          0x83e801	                              sub eax, 1	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004243	    0x890500000000	            mov dword [0x04004249], eax 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4004249	            0xeb16	                           jmp 0x4004261	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x400424b	            0x3c0c	                             cmp al, 0xc	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x400424d	            0x7509	                           jne 0x4004258	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x400424f	    0x830500000000	               add dword [0x04004256], 1	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004256	            0xeb09	                           jmp 0x4004261	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x4004258	            0x3c07	                               cmp al, 7	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x400425a	            0x7505	                           jne 0x4004261	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x400425c	      0xe800000000	                          call 0x4004261	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
0x4004261	        0x4183ef01	                             sub r15d, 1	      1926	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004265	        0x4983c601	                              add r14, 1	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4004269	      0xe994010000	                           jmp 0x4004402	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x400426e	      0x4c89742410	             mov qword [rsp + 0x10], r14	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4004273	          0x4585ff	                         test r15d, r15d	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004276	            0x7e33	                           jle 0x40042ab	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004278	        0x410fb606	                   movzx eax, byte [r14]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400427c	          0x8d50ff	                      lea edx, [rax - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400427f	          0x80fa01	                               cmp dl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004282	            0x7604	                           jbe 0x4004288	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004284	            0x3c1f	                            cmp al, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004286	            0x7623	                           jbe 0x40042ab	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004288	        0x498d4601	                      lea rax, [r14 + 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400428c	      0x4889442410	             mov qword [rsp + 0x10], rax	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004291	        0x4183ef01	                             sub r15d, 1	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004295	            0x7414	                            je 0x40042ab	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4004297	           0xfb610	                   movzx edx, byte [rax]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400429a	        0x4883c001	                              add rax, 1	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x400429e	          0x8d4aff	                      lea ecx, [rdx - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40042a1	          0x80f901	                               cmp cl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40042a4	            0x76e6	                           jbe 0x400428c	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40042a6	          0x80fa1f	                            cmp dl, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40042a9	            0x77e1	                            ja 0x400428c	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x40042ab	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40042b0	          0x4c29f0	                            sub rax, r14	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40042b3	          0x4189c5	                           mov r13d, eax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x40042b6	            0x85c0	                           test eax, eax	      2046	gui.c	FUNCTION_36	IF_1
0x40042b8	     0xf843f010000	                            je 0x40043fd	      2046	gui.c	FUNCTION_36	IF_1
0x40042be	            0x85c0	                           test eax, eax	      2049	gui.c	FUNCTION_36	IF_2
0x40042c0	            0x7918	                           jns 0x40042da	      2049	gui.c	FUNCTION_36	IF_2
0x40042c2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2050	gui.c	FUNCTION_36	CALL_1
0x40042c9	          0x4c89f7	                            mov rdi, r14	      2050	gui.c	FUNCTION_36	CALL_1
0x40042cc	      0xb800000000	                              mov eax, 0	      2050	gui.c	FUNCTION_36	CALL_1
0x40042d1	            0xf2ae	              repne scasb al, byte [rdi]	      2050	gui.c	FUNCTION_36	CALL_1
0x40042d3	          0x48f7d1	                                 not rcx	      2050	gui.c	FUNCTION_36	CALL_1
0x40042d6	        0x448d69ff	                     lea r13d, [rcx - 1]	      2050	gui.c	FUNCTION_36	CALL_1
0x40042da	          0x4585ed	                         test r13d, r13d	      2052	gui.c	FUNCTION_36	WHILE_1
0x40042dd	     0xf8e1a010000	                           jle 0x40043fd	      2052	gui.c	FUNCTION_36	WHILE_1
0x40042e3	    0x833d00000000	               cmp dword [0x040042ea], 0	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40042ea	            0x7456	                            je 0x4004342	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x40042ec	          0x4585ed	                         test r13d, r13d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40042ef	            0x7e43	                           jle 0x4004334	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40042f1	    0x41bc00000000	                             mov r12d, 0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40042f7	      0xbd00000000	                              mov ebp, 0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40042fc	          0x4863dd	                         movsxd rbx, ebp	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x40042ff	          0x4c01f3	                            add rbx, r14	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004302	          0x4889df	                            mov rdi, rbx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004305	    0xff1500000000	                 call qword [0x0400430b]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400430b	          0x4101c4	                           add r12d, eax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400430e	          0x4489e0	                           mov eax, r12d	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004311	     0x30500000000	             add eax, dword [0x04004317]	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004317	            0x4898	                                    cdqe	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004319	    0x483b05000000	            cmp rax, qword [0x04004320] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004320	            0x7f17	                            jg 0x4004339	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4004322	          0x4889df	                            mov rdi, rbx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004325	    0xff1500000000	                 call qword [0x0400432b]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400432b	             0x1c5	                            add ebp, eax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400432d	          0x4439ed	                           cmp ebp, r13d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004330	            0x7cca	                            jl 0x40042fc	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004332	            0xeb05	                           jmp 0x4004339	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004334	      0xbd00000000	                              mov ebp, 0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004339	          0x4439ed	                           cmp ebp, r13d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x400433c	        0x410f4fed	                         cmovg ebp, r13d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004340	            0xeb1e	                           jmp 0x4004360	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4004342	    0x8b1500000000	            mov edx, dword [0x04004348] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004348	    0x488b2d000000	            mov rbp, qword [0x0400434f] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x400434f	        0x428d042a	                    lea eax, [rdx + r13]	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004353	            0x4898	                                    cdqe	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004355	          0x4839e8	                            cmp rax, rbp	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004358	     0xf8e2e010000	                           jle 0x400448c	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x400435e	            0x29d5	                            sub ebp, edx	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4004360	    0x41b900000000	                              mov r9d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004366	    0x41b800000000	                              mov r8d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x400436c	      0xb900000000	                              mov ecx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004371	      0xba00000000	                              mov edx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004376	            0x89ee	                            mov esi, ebp	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004378	          0x4c89f7	                            mov rdi, r14	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x400437b	      0xe800000000	                          call 0x4004380	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004380	          0x4863c5	                         movsxd rax, ebp	      2078	gui.c	FUNCTION_36	WHILE_1
0x4004383	          0x4901c6	                            add r14, rax	      2078	gui.c	FUNCTION_36	WHILE_1
0x4004386	          0x4129ed	                           sub r13d, ebp	      2079	gui.c	FUNCTION_36	WHILE_1
0x4004389	          0x4585ed	                         test r13d, r13d	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x400438c	     0xf8e3a010000	                           jle 0x40044cc	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004392	    0x486305000000	         movsxd rax, dword [0x04004399] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4004399	    0x483b05000000	            cmp rax, qword [0x040043a0] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x40043a0	            0x7d41	                           jge 0x40043e3	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x40043a2	    0x41b900000000	                              mov r9d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043a8	    0x41b800000000	                              mov r8d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043ae	      0xb900000000	                              mov ecx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043b3	      0xba00000000	                              mov edx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043b8	      0xbe01000000	                              mov esi, 1	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043bd	      0xbf00000000	                              mov edi, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043c2	      0xe800000000	                          call 0x40043c7	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x40043c7	    0x486305000000	         movsxd rax, dword [0x040043ce] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043ce	    0x483b05000000	            cmp rax, qword [0x040043d5] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043d5	     0xf8c08ffffff	                            jl 0x40042e3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043db	            0xeb06	                           jmp 0x40043e3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043dd	    0x41bd00000000	                             mov r13d, 0	      2079	gui.c	FUNCTION_36	WHILE_1
0x40043e3	    0xc70500000000	               mov dword [0x040043ed], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043ed	    0x830500000000	               add dword [0x040043f4], 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40043f4	          0x4585ed	                         test r13d, r13d	      2052	gui.c	FUNCTION_36	WHILE_1
0x40043f7	     0xf8fe6feffff	                            jg 0x40042e3	      2052	gui.c	FUNCTION_36	WHILE_1
0x40043fd	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      1950	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4004402	          0x4585ff	                         test r15d, r15d	      1797	gui.c	FUNCTION_30	WHILE_1
0x4004405	     0xf85c1fbffff	                           jne 0x4003fcc	      1797	gui.c	FUNCTION_30	WHILE_1
0x400440b	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      1956	gui.c	FUNCTION_30	IF_19
0x4004410	            0x740f	                            je 0x4004421	      1956	gui.c	FUNCTION_30	IF_19
0x4004412	      0xbe01000000	                              mov esi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4004417	      0xbf01000000	                              mov edi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x400441c	      0xe800000000	                          call 0x4004421	      1957	gui.c	FUNCTION_30	CALL_28
0x4004421	    0x488b05000000	            mov rax, qword [0x04004428] 	      1961	gui.c	FUNCTION_30	IF_20
0x4004428	    0x483905000000	            cmp qword [0x0400442f], rax 	      1961	gui.c	FUNCTION_30	IF_20
0x400442f	            0x740c	                            je 0x400443d	      1961	gui.c	FUNCTION_30	IF_20
0x4004431	    0xc70500000000	     mov dword [0x0400443b], 0xffffffff 	      1962	gui.c	FUNCTION_30	IF_20
0x400443b	            0xeb07	                           jmp 0x4004444	      1962	gui.c	FUNCTION_30	IF_20
0x400443d	      0x837c240800	                  cmp dword [rsp + 8], 0	      1968	gui.c	FUNCTION_30	IF_21
0x4004442	            0x740b	                            je 0x400444f	      1968	gui.c	FUNCTION_30	IF_21
0x4004444	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1969	gui.c	FUNCTION_30	CALL_29
0x4004448	      0xe800000000	                          call 0x400444d	      1969	gui.c	FUNCTION_30	CALL_29
0x400444d	            0xeb0a	                           jmp 0x4004459	      1969	gui.c	FUNCTION_30	CALL_29
0x400444f	      0xbf00000000	                              mov edi, 0	      1971	gui.c	FUNCTION_30	CALL_30
0x4004454	      0xe8bbbdffff	     call sym.gui_update_horiz_scrollbar	      1971	gui.c	FUNCTION_30	CALL_30
0x4004459	    0x488b05000000	            mov rax, qword [0x04004460] 	      1972	gui.c	FUNCTION_30
0x4004460	    0x488905000000	            mov qword [0x04004467], rax 	      1972	gui.c	FUNCTION_30
0x4004467	    0xc70500000000	     mov dword [0x04004471], 0xffffffff 	      1979	gui.c	FUNCTION_30
0x4004471	      0xe800000000	                          call 0x4004476	      1982	gui.c	FUNCTION_30	CALL_31
0x4004476	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1983	gui.c	FUNCTION_30
0x400447b	    0x644833042528	                xor rax, qword fs:[0x28]	      1983	gui.c	FUNCTION_30
0x4004484	     0xf8481000000	                            je 0x400450b	      1983	gui.c	FUNCTION_30
0x400448a	            0xeb7a	                           jmp 0x4004506	      1983	gui.c	FUNCTION_30
0x400448c	    0x41b900000000	                              mov r9d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004492	    0x41b800000000	                              mov r8d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4004498	      0xb900000000	                              mov ecx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x400449d	      0xba00000000	                              mov edx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x40044a2	          0x4489ee	                           mov esi, r13d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x40044a5	          0x4c89f7	                            mov rdi, r14	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x40044a8	      0xe800000000	                          call 0x40044ad	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x40044ad	          0x4d63ed	                        movsxd r13, r13d	      2078	gui.c	FUNCTION_36	WHILE_1
0x40044b0	          0x4d01ee	                            add r14, r13	      2078	gui.c	FUNCTION_36	WHILE_1
0x40044b3	    0x486305000000	         movsxd rax, dword [0x040044ba] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044ba	    0x483b05000000	            cmp rax, qword [0x040044c1] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044c1	     0xf8c36ffffff	                            jl 0x40043fd	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044c7	      0xe911ffffff	                           jmp 0x40043dd	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044cc	    0x486305000000	         movsxd rax, dword [0x040044d3] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044d3	    0x483b05000000	            cmp rax, qword [0x040044da] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044da	     0xf8c1dffffff	                            jl 0x40043fd	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044e0	      0xe9fefeffff	                           jmp 0x40043e3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40044e5	    0xc74424080000	                  mov dword [rsp + 8], 0	      1769	gui.c	FUNCTION_30
0x40044ed	    0x488b05000000	            mov rax, qword [0x040044f4] 	      1961	gui.c	FUNCTION_30	IF_20
0x40044f4	    0x483905000000	            cmp qword [0x040044fb], rax 	      1961	gui.c	FUNCTION_30	IF_20
0x40044fb	     0xf8530ffffff	                           jne 0x4004431	      1961	gui.c	FUNCTION_30	IF_20
0x4004501	      0xe949ffffff	                           jmp 0x400444f	      1961	gui.c	FUNCTION_30	IF_20
0x4004506	      0xe800000000	                          call 0x400450b	      1983	gui.c	FUNCTION_30
0x400450b	        0x4883c428	                           add rsp, 0x28	      1983	gui.c	FUNCTION_30
0x400450f	              0x5b	                                 pop rbx	      1983	gui.c	FUNCTION_30
0x4004510	              0x5d	                                 pop rbp	      1983	gui.c	FUNCTION_30
0x4004511	            0x415c	                                 pop r12	      1983	gui.c	FUNCTION_30
0x4004513	            0x415d	                                 pop r13	      1983	gui.c	FUNCTION_30
0x4004515	            0x415e	                                 pop r14	      1983	gui.c	FUNCTION_30
0x4004517	            0x415f	                                 pop r15	      1983	gui.c	FUNCTION_30
0x4004519	              0xc3	                                     ret	      1983	gui.c	FUNCTION_30
no_console_input	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,2:DO,0	19
0x40054ba	        0x4883ec08	                              sub rsp, 8	      5110	gui.c	FUNCTION_87
0x40054be	    0x833d00000000	               cmp dword [0x040054c5], 0	      5113	gui.c	FUNCTION_87	CALL_2
0x40054c5	            0x740a	                            je 0x40054d1	      5113	gui.c	FUNCTION_87	CALL_2
0x40054c7	    0x8b1500000000	            mov edx, dword [0x040054cd] 	      5111	gui.c	FUNCTION_87
0x40054cd	            0x85d2	                           test edx, edx	      5111	gui.c	FUNCTION_87
0x40054cf	            0x7425	                            je 0x40054f6	      5111	gui.c	FUNCTION_87
0x40054d1	      0xbf00000000	                              mov edi, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x40054d6	      0xe800000000	                          call 0x40054db	      5113	gui.c	FUNCTION_87	CALL_2
0x40054db	      0xba00000000	                              mov edx, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x40054e0	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x40054e2	            0x7512	                           jne 0x40054f6	      5113	gui.c	FUNCTION_87	CALL_2
0x40054e4	      0xbf02000000	                              mov edi, 2	      5113	gui.c	FUNCTION_87	CALL_2
0x40054e9	      0xe800000000	                          call 0x40054ee	      5113	gui.c	FUNCTION_87	CALL_2
0x40054ee	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x40054f0	           0xf94c2	                                 sete dl	      5113	gui.c	FUNCTION_87	CALL_2
0x40054f3	           0xfb6d2	                           movzx edx, dl	      5113	gui.c	FUNCTION_87	CALL_2
0x40054f6	            0x89d0	                            mov eax, edx	      5116	gui.c	FUNCTION_87
0x40054f8	        0x4883c408	                              add rsp, 8	      5116	gui.c	FUNCTION_87
0x40054fc	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
gui_update_cursor_later	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,2:DO,0	5
0x4000c36	        0x4883ec08	                              sub rsp, 8	      1757	gui.c	FUNCTION_29
0x4000c3a	      0xbf00000000	                              mov edi, 0	      1758	gui.c	FUNCTION_29	CALL_2
0x4000c3f	      0xe800000000	                          call 0x4000c44	      1758	gui.c	FUNCTION_29	CALL_2
0x4000c44	        0x4883c408	                              add rsp, 8	      1759	gui.c	FUNCTION_29
0x4000c48	              0xc3	                                     ret	      1759	gui.c	FUNCTION_29
xy2win	WHILE,0:functions,0:SWITCH,0:ELSE,5:IF,7:FOR,0:CALL,11:DO,0	110
0x4000534	              0x55	                                push rbp	      4949	gui.c	FUNCTION_81
0x4000535	              0x53	                                push rbx	      4949	gui.c	FUNCTION_81
0x4000536	        0x4883ec18	                           sub rsp, 0x18	      4949	gui.c	FUNCTION_81
0x400053a	            0x89f3	                            mov ebx, esi	      4949	gui.c	FUNCTION_81
0x400053c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4949	gui.c	FUNCTION_81
0x4000545	      0x4889442408	                mov qword [rsp + 8], rax	      4949	gui.c	FUNCTION_81
0x400054a	            0x31c0	                            xor eax, eax	      4949	gui.c	FUNCTION_81
0x400054c	      0xbe00000000	                              mov esi, 0	      4954	gui.c	FUNCTION_81	CALL_1
0x4000551	    0x448b05000000	            mov r8d, dword [0x04000558] 	      4954	gui.c	FUNCTION_81	CALL_1
0x4000558	            0x89d8	                            mov eax, ebx	      4954	gui.c	FUNCTION_81	CALL_1
0x400055a	          0x4429c0	                            sub eax, r8d	      4954	gui.c	FUNCTION_81	CALL_1
0x400055d	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x400055e	    0xf7bed4000000	                 idiv dword [rsi + 0xd4]	      4954	gui.c	FUNCTION_81	CALL_1
0x4000564	            0x89c1	                            mov ecx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x4000566	          0x890424	                    mov dword [rsp], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x4000569	            0x89f8	                            mov eax, edi	      4955	gui.c	FUNCTION_81	CALL_2
0x400056b	          0x4429c0	                            sub eax, r8d	      4955	gui.c	FUNCTION_81	CALL_2
0x400056e	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x400056f	    0xf7bed0000000	                 idiv dword [rsi + 0xd0]	      4955	gui.c	FUNCTION_81	CALL_2
0x4000575	        0x89442404	                mov dword [rsp + 4], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x4000579	          0xc1e91f	                           shr ecx, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x400057c	            0x84c9	                             test cl, cl	      4956	gui.c	FUNCTION_81	IF_1
0x400057e	     0xf851b010000	                           jne 0x400069f	      4956	gui.c	FUNCTION_81	IF_1
0x4000584	          0xc1e81f	                           shr eax, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x4000587	            0x84c0	                             test al, al	      4956	gui.c	FUNCTION_81	IF_1
0x4000589	     0xf8510010000	                           jne 0x400069f	      4956	gui.c	FUNCTION_81	IF_1
0x400058f	      0x488d742404	                      lea rsi, [rsp + 4]	      4958	gui.c	FUNCTION_81	CALL_3
0x4000594	          0x4889e7	                            mov rdi, rsp	      4958	gui.c	FUNCTION_81	CALL_3
0x4000597	      0xe800000000	                          call 0x400059c	      4958	gui.c	FUNCTION_81	CALL_3
0x400059c	          0x4889c5	                            mov rbp, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x400059f	          0x4885c0	                           test rax, rax	      4959	gui.c	FUNCTION_81	IF_2
0x40005a2	     0xf84fe000000	                            je 0x40006a6	      4959	gui.c	FUNCTION_81	IF_2
0x40005a8	    0x8b0500000000	            mov eax, dword [0x040005ae] 	      4962	gui.c	FUNCTION_81	IF_3
0x40005ae	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x40005b3	            0x7407	                            je 0x40005bc	      4962	gui.c	FUNCTION_81	IF_3
0x40005b5	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x40005ba	            0x753b	                           jne 0x40005f7	      4962	gui.c	FUNCTION_81	IF_3
0x40005bc	            0x89d8	                            mov eax, ebx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005be	    0x2b0500000000	             sub eax, dword [0x040005c4]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005c4	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005c5	    0xf73d00000000	                 idiv dword [0x040005cb]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005cb	    0x3b0500000000	            cmp eax, dword [0x040005d1] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005d1	            0x7c12	                            jl 0x40005e5	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40005d3	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x40005d8	      0xe800000000	                          call 0x40005dd	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x40005dd	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x40005e0	      0xe9c6000000	                           jmp 0x40006ab	      4980	gui.c	FUNCTION_81
0x40005e5	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x40005ea	      0xe800000000	                          call 0x40005ef	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x40005ef	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x40005f2	      0xe9b4000000	                           jmp 0x40006ab	      4980	gui.c	FUNCTION_81
0x40005f7	    0x8b8da0000000	            mov ecx, dword [rbp + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40005fd	          0x8b1424	                    mov edx, dword [rsp]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000600	            0x39d1	                            cmp ecx, edx	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000602	            0x7d12	                           jge 0x4000616	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000604	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4000609	      0xe800000000	                          call 0x400060e	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400060e	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x4000611	      0xe995000000	                           jmp 0x40006ab	      4980	gui.c	FUNCTION_81
0x4000616	            0xa808	                              test al, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000618	            0x7576	                           jne 0x4000690	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400061a	    0x83bdb0000000	               cmp dword [rbp + 0xb0], 0	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000621	            0x7e41	                           jle 0x4000664	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000623	        0x8b442404	                mov eax, dword [rsp + 4]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000627	    0x3985ac000000	            cmp dword [rbp + 0xac], eax 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400062d	            0x7535	                           jne 0x4000664	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400062f	            0x39d1	                            cmp ecx, edx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4000631	     0xf8586000000	                           jne 0x40006bd	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4000637	          0x4889ef	                            mov rdi, rbp	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400063a	      0xe800000000	                          call 0x400063f	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400063f	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4000641	            0x7518	                           jne 0x400065b	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4000643	    0x833d00000000	               cmp dword [0x0400064a], 0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400064a	            0x750f	                           jne 0x400065b	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400064c	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000651	      0xe800000000	                          call 0x4000656	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4000656	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x4000659	            0xeb50	                           jmp 0x40006ab	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400065b	    0xf60500000000	               test byte [0x04000662], 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000662	            0x752c	                           jne 0x4000690	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000664	    0x83bda4000000	               cmp dword [rbp + 0xa4], 0	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400066b	            0x7e23	                           jle 0x4000690	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400066d	          0x8b0424	                    mov eax, dword [rsp]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000670	    0x3985a0000000	            cmp dword [rbp + 0xa0], eax 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000676	            0x7518	                           jne 0x4000690	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000678	    0x833d00000000	               cmp dword [0x0400067f], 0	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400067f	            0x750f	                           jne 0x4000690	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000681	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000686	      0xe800000000	                          call 0x400068b	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400068b	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x400068e	            0xeb1b	                           jmp 0x40006ab	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4000690	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x4000695	      0xe800000000	                          call 0x400069a	      4978	gui.c	FUNCTION_81	CALL_11
0x400069a	          0x4889e8	                            mov rax, rbp	      4980	gui.c	FUNCTION_81
0x400069d	            0xeb0c	                           jmp 0x40006ab	      4980	gui.c	FUNCTION_81
0x400069f	      0xb800000000	                              mov eax, 0	      4957	gui.c	FUNCTION_81	IF_1
0x40006a4	            0xeb05	                           jmp 0x40006ab	      4957	gui.c	FUNCTION_81	IF_1
0x40006a6	      0xb800000000	                              mov eax, 0	      4960	gui.c	FUNCTION_81	IF_2
0x40006ab	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4981	gui.c	FUNCTION_81
0x40006b0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4981	gui.c	FUNCTION_81
0x40006b9	            0x7412	                            je 0x40006cd	      4981	gui.c	FUNCTION_81
0x40006bb	            0xeb0b	                           jmp 0x40006c8	      4981	gui.c	FUNCTION_81
0x40006bd	    0x833d00000000	               cmp dword [0x040006c4], 0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40006c4	            0x75ca	                           jne 0x4000690	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40006c6	            0xeb84	                           jmp 0x400064c	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40006c8	      0xe800000000	                          call 0x40006cd	      4981	gui.c	FUNCTION_81
0x40006cd	        0x4883c418	                           add rsp, 0x18	      4981	gui.c	FUNCTION_81
0x40006d1	              0x5b	                                 pop rbx	      4981	gui.c	FUNCTION_81
0x40006d2	              0x5d	                                 pop rbp	      4981	gui.c	FUNCTION_81
0x40006d3	              0xc3	                                     ret	      4981	gui.c	FUNCTION_81
gui_redraw_block	WHILE,1:functions,0:SWITCH,0:ELSE,5:IF,17:FOR,4:CALL,10:DO,0	334
0x4001154	            0x4157	                                push r15	      2708	gui.c	FUNCTION_42
0x4001156	            0x4156	                                push r14	      2708	gui.c	FUNCTION_42
0x4001158	            0x4155	                                push r13	      2708	gui.c	FUNCTION_42
0x400115a	            0x4154	                                push r12	      2708	gui.c	FUNCTION_42
0x400115c	              0x55	                                push rbp	      2708	gui.c	FUNCTION_42
0x400115d	              0x53	                                push rbx	      2708	gui.c	FUNCTION_42
0x400115e	        0x4883ec48	                           sub rsp, 0x48	      2708	gui.c	FUNCTION_42
0x4001162	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2722	gui.c	FUNCTION_42	IF_1
0x400116a	    0x833d00000000	               cmp dword [0x04001171], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4001171	     0xf84d5040000	                            je 0x400164c	      2721	gui.c	FUNCTION_42	IF_1
0x4001177	    0x48833d000000	               cmp qword [0x0400117f], 0	      2721	gui.c	FUNCTION_42	IF_1
0x400117f	     0xf84c7040000	                            je 0x400164c	      2721	gui.c	FUNCTION_42	IF_1
0x4001185	      0x4489442408	                mov dword [rsp + 8], r8d	      2721	gui.c	FUNCTION_42	IF_1
0x400118a	          0x4189cc	                           mov r12d, ecx	      2721	gui.c	FUNCTION_42	IF_1
0x400118d	            0x89d5	                            mov ebp, edx	      2721	gui.c	FUNCTION_42	IF_1
0x400118f	            0x89fb	                            mov ebx, edi	      2721	gui.c	FUNCTION_42	IF_1
0x4001191	            0x89f7	                            mov edi, esi	      2726	gui.c	FUNCTION_42	CALL_1
0x4001193	      0xe800000000	                          call 0x4001198	      2726	gui.c	FUNCTION_42	CALL_1
0x4001198	          0x4189c7	                           mov r15d, eax	      2726	gui.c	FUNCTION_42	CALL_1
0x400119b	        0x89442430	             mov dword [rsp + 0x30], eax	      2726	gui.c	FUNCTION_42	CALL_1
0x400119f	          0x4489e7	                           mov edi, r12d	      2727	gui.c	FUNCTION_42	CALL_2
0x40011a2	      0xe800000000	                          call 0x40011a7	      2727	gui.c	FUNCTION_42	CALL_2
0x40011a7	          0x4189c6	                           mov r14d, eax	      2727	gui.c	FUNCTION_42	CALL_2
0x40011aa	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2727	gui.c	FUNCTION_42	CALL_2
0x40011ae	            0x89df	                            mov edi, ebx	      2728	gui.c	FUNCTION_42	CALL_3
0x40011b0	      0xe800000000	                          call 0x40011b5	      2728	gui.c	FUNCTION_42	CALL_3
0x40011b5	            0x89c3	                            mov ebx, eax	      2728	gui.c	FUNCTION_42	CALL_3
0x40011b7	            0x89ef	                            mov edi, ebp	      2729	gui.c	FUNCTION_42	CALL_4
0x40011b9	      0xe800000000	                          call 0x40011be	      2729	gui.c	FUNCTION_42	CALL_4
0x40011be	            0x89c6	                            mov esi, eax	      2729	gui.c	FUNCTION_42	CALL_4
0x40011c0	        0x89442418	             mov dword [rsp + 0x18], eax	      2729	gui.c	FUNCTION_42	CALL_4
0x40011c4	    0x8b0500000000	            mov eax, dword [0x040011ca] 	      2732	gui.c	FUNCTION_42
0x40011ca	        0x89442434	             mov dword [rsp + 0x34], eax	      2732	gui.c	FUNCTION_42
0x40011ce	    0x8b0500000000	            mov eax, dword [0x040011d4] 	      2733	gui.c	FUNCTION_42
0x40011d4	        0x89442438	             mov dword [rsp + 0x38], eax	      2733	gui.c	FUNCTION_42
0x40011d8	    0x8b0500000000	            mov eax, dword [0x040011de] 	      2734	gui.c	FUNCTION_42
0x40011de	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2734	gui.c	FUNCTION_42
0x40011e2	    0x891d00000000	            mov dword [0x040011e8], ebx 	      2740	gui.c	FUNCTION_42	FOR_1
0x40011e8	            0x39f3	                            cmp ebx, esi	      2740	gui.c	FUNCTION_42	FOR_1
0x40011ea	     0xf8f08040000	                            jg 0x40015f8	      2740	gui.c	FUNCTION_42	FOR_1
0x40011f0	          0x4963c6	                        movsxd rax, r14d	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x40011f3	      0x4889442420	             mov qword [rsp + 0x20], rax	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x40011f8	          0x4489f8	                           mov eax, r15d	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x40011fb	            0x4898	                                    cdqe	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x40011fd	      0x4889442428	             mov qword [rsp + 0x28], rax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4001202	          0x4863db	                         movsxd rbx, ebx	      2747	gui.c	FUNCTION_42	FOR_1
0x4001205	    0x488b05000000	            mov rax, qword [0x0400120c] 	      2747	gui.c	FUNCTION_42	FOR_1
0x400120c	        0x448b2498	           mov r12d, dword [rax + rbx*4]	      2747	gui.c	FUNCTION_42	FOR_1
0x4001210	    0x833d00000000	               cmp dword [0x04001217], 0	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x4001217	            0x7453	                            je 0x400126c	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x4001219	      0x448b742430	           mov r14d, dword [rsp + 0x30] 	      2745	gui.c	FUNCTION_42	FOR_1
0x400121e	          0x4489f3	                           mov ebx, r14d	      2745	gui.c	FUNCTION_42	FOR_1
0x4001221	          0x4585f6	                         test r14d, r14d	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4001224	            0x7e1f	                           jle 0x4001245	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4001226	    0x488b3d000000	            mov rdi, qword [0x0400122d] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x400122d	          0x4963c4	                        movsxd rax, r12d	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4001230	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4001235	          0x4801c6	                            add rsi, rax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4001238	          0x4801fe	                            add rsi, rdi	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x400123b	          0x4801c7	                            add rdi, rax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x400123e	      0xe800000000	                          call 0x4001243	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4001243	            0x29c3	                            sub ebx, eax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x4001245	    0x488b3d000000	            mov rdi, qword [0x0400124c] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400124c	          0x4d63e4	                        movsxd r12, r12d	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x400124f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4001254	        0x4a8d3420	                    lea rsi, [rax + r12]	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4001258	          0x4801fe	                            add rsi, rdi	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400125b	          0x4c01e7	                            add rdi, r12	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400125e	      0xe800000000	                          call 0x4001263	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4001263	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x4001267	          0x8d2c06	                    lea ebp, [rsi + rax]	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400126a	            0xeb58	                           jmp 0x40012c4	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x400126c	    0x833d00000000	               cmp dword [0x04001273], 0	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x4001273	            0x7441	                            je 0x40012b6	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x4001275	    0x488b15000000	            mov rdx, qword [0x0400127c] 	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400127c	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001280	            0x89f0	                            mov eax, esi	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001282	          0x4401e0	                           add eax, r12d	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001285	            0x4898	                                    cdqe	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001287	        0x803c0201	                 cmp byte [rdx + rax], 1	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400128b	            0x89f0	                            mov eax, esi	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x400128d	          0x83d800	                              sbb eax, 0	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001290	            0x89c3	                            mov ebx, eax	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x4001292	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4001296	          0x8d6e01	                      lea ebp, [rsi + 1]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x4001299	          0x4863c5	                         movsxd rax, ebp	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x400129c	    0x483b05000000	            cmp rax, qword [0x040012a3] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x40012a3	            0x7d1b	                           jge 0x40012c0	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x40012a5	            0x89f0	                            mov eax, esi	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x40012a7	          0x4401e0	                           add eax, r12d	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x40012aa	            0x4898	                                    cdqe	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x40012ac	      0x807c020100	             cmp byte [rdx + rax + 1], 0	      2746	gui.c	FUNCTION_42	FOR_1
0x40012b1	           0xf45ee	                         cmovne ebp, esi	      2746	gui.c	FUNCTION_42	FOR_1
0x40012b4	            0xeb0e	                           jmp 0x40012c4	      2746	gui.c	FUNCTION_42	FOR_1
0x40012b6	        0x8b6c241c	            mov ebp, dword [rsp + 0x1c] 	      2746	gui.c	FUNCTION_42	FOR_1
0x40012ba	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      2745	gui.c	FUNCTION_42	FOR_1
0x40012be	            0xeb04	                           jmp 0x40012c4	      2745	gui.c	FUNCTION_42	FOR_1
0x40012c0	        0x8b6c241c	            mov ebp, dword [rsp + 0x1c] 	      2746	gui.c	FUNCTION_42	FOR_1
0x40012c4	    0x891d00000000	            mov dword [0x040012ca], ebx 	      2766	gui.c	FUNCTION_42	FOR_1
0x40012ca	    0x486315000000	         movsxd rdx, dword [0x040012d1] 	      2767	gui.c	FUNCTION_42	FOR_1
0x40012d1	    0x488b05000000	            mov rax, qword [0x040012d8] 	      2767	gui.c	FUNCTION_42	FOR_1
0x40012d8	            0x89d9	                            mov ecx, ebx	      2767	gui.c	FUNCTION_42	FOR_1
0x40012da	           0x30c90	            add ecx, dword [rax + rdx*4]	      2767	gui.c	FUNCTION_42	FOR_1
0x40012dd	          0x4189ce	                           mov r14d, ecx	      2767	gui.c	FUNCTION_42	FOR_1
0x40012e0	            0x29dd	                            sub ebp, ebx	      2768	gui.c	FUNCTION_42	FOR_1
0x40012e2	          0x83c501	                              add ebp, 1	      2768	gui.c	FUNCTION_42	FOR_1
0x40012e5	            0x85db	                           test ebx, ebx	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x40012e7	     0xf8e83000000	                           jle 0x4001370	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x40012ed	    0x488b15000000	            mov rdx, qword [0x040012f4] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40012f4	        0x448d41ff	                      lea r8d, [rcx - 1]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40012f8	          0x4d63c0	                          movsxd r8, r8d	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x40012fb	      0x420fb73442	            movzx esi, word [rdx + r8*2]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001300	          0x4c63c9	                          movsxd r9, ecx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001303	    0x66423b744202	          cmp si, word [rdx + r8*2 + 2] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001309	     0xf8511030000	                           jne 0x4001620	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400130f	    0x488b3d000000	            mov rdi, qword [0x04001316] 	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001316	      0x42803c0720	               cmp byte [rdi + r8], 0x20	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400131b	     0xf8407030000	                            je 0x4001628	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001321	    0x41bf00000000	                             mov r15d, 0	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001327	            0xeb1d	                           jmp 0x4001346	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001329	          0x4489f8	                           mov eax, r15d	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400132c	            0xf7d0	                                 not eax	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400132e	             0x1c8	                            add eax, ecx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001330	            0x4898	                                    cdqe	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001332	        0x66393442	              cmp word [rdx + rax*2], si	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001336	     0xf85f2020000	                           jne 0x400162e	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x400133c	        0x803c0720	              cmp byte [rdi + rax], 0x20	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001340	     0xf84e8020000	                            je 0x400162e	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x4001346	        0x4183c701	                             add r15d, 1	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x400134a	          0x4439fb	                           cmp ebx, r15d	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x400134d	            0x75da	                           jne 0x4001329	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x400134f	          0x4189df	                           mov r15d, ebx	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4001352	      0xe9d7020000	                           jmp 0x400162e	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4001357	    0x488b05000000	            mov rax, qword [0x0400135e] 	      2777	gui.c	FUNCTION_42	FOR_1
0x400135e	    0x42807c08ff20	          cmp byte [rax + r9 - 1], 0x20 	      2777	gui.c	FUNCTION_42	FOR_1
0x4001364	           0xf95c0	                                setne al	      2777	gui.c	FUNCTION_42	FOR_1
0x4001367	           0xfb6c0	                           movzx eax, al	      2777	gui.c	FUNCTION_42	FOR_1
0x400136a	        0x89442414	             mov dword [rsp + 0x14], eax	      2777	gui.c	FUNCTION_42	FOR_1
0x400136e	            0xeb0e	                           jmp 0x400137e	      2777	gui.c	FUNCTION_42	FOR_1
0x4001370	    0x41bf00000000	                             mov r15d, 0	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4001376	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2777	gui.c	FUNCTION_42	FOR_1
0x400137e	            0x85ed	                           test ebp, ebp	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4001380	     0xf8e57020000	                           jle 0x40015dd	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4001386	    0x488b35000000	            mov rsi, qword [0x0400138d] 	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x400138d	          0x4d63ce	                         movsxd r9, r14d	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4001390	      0x460fb7044e	            movzx r8d, word [rsi + r9*2]	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4001395	        0x410fb7c0	                          movzx eax, r8w	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x4001399	    0x890500000000	            mov dword [0x0400139f], eax 	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x400139f	            0x85ed	                           test ebp, ebp	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013a1	     0xf8e1e020000	                           jle 0x40015c5	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013a7	    0x8b0d00000000	            mov ecx, dword [0x040013ad] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013ad	    0x488b3d000000	            mov rdi, qword [0x040013b4] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013b4	          0x4489f0	                           mov eax, r14d	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013b7	      0xbb00000000	                              mov ebx, 0	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013bc	            0x85c9	                           test ecx, ecx	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013be	            0x7409	                            je 0x40013c9	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013c0	          0x4863d0	                         movsxd rdx, eax	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013c3	        0x803c1700	                 cmp byte [rdi + rdx], 0	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013c7	            0x740a	                            je 0x40013d3	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x40013c9	          0x4863d0	                         movsxd rdx, eax	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40013cc	      0x66443b0456	             cmp r8w, word [rsi + rdx*2]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40013d1	            0x750e	                           jne 0x40013e1	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x40013d3	          0x83c301	                              add ebx, 1	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013d6	          0x83c001	                              add eax, 1	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013d9	            0x39eb	                            cmp ebx, ebp	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013db	            0x75df	                           jne 0x40013bc	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013dd	            0x89eb	                            mov ebx, ebp	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013df	            0xeb08	                           jmp 0x40013e9	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40013e1	            0x85db	                           test ebx, ebx	      2156	gui.c	FUNCTION_38	IF_1
0x40013e3	     0xf8ee1010000	                           jle 0x40015ca	      2156	gui.c	FUNCTION_38	IF_1
0x40013e9	            0x85c9	                           test ecx, ecx	      2159	gui.c	FUNCTION_38	IF_2
0x40013eb	     0xf84c8000000	                            je 0x40014b9	      2159	gui.c	FUNCTION_38	IF_2
0x40013f1	          0x8d049b	                  lea eax, [rbx + rbx*4]	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40013f4	        0x8d7c8301	              lea edi, [rbx + rax*4 + 1]	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40013f8	      0xe800000000	                          call 0x40013fd	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x40013fd	        0x48890424	                    mov qword [rsp], rax	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x4001401	          0x4885c0	                           test rax, rax	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x4001404	     0xf84c0010000	                            je 0x40015ca	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x400140a	        0x428d3c33	                    lea edi, [rbx + r14]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400140e	          0x4439f7	                           cmp edi, r14d	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001411	            0x7e65	                           jle 0x4001478	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001413	          0x4589f4	                          mov r12d, r14d	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001416	    0x41bd00000000	                             mov r13d, 0	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400141c	        0x896c240c	              mov dword [rsp + 0xc], ebp	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001420	        0x895c2410	             mov dword [rsp + 0x10], ebx	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001424	          0x4889c3	                            mov rbx, rax	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001427	            0x89fd	                            mov ebp, edi	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001429	          0x4963c4	                        movsxd rax, r12d	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x400142c	    0x488b15000000	            mov rdx, qword [0x04001433] 	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4001433	         0xfb61402	             movzx edx, byte [rdx + rax]	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4001437	            0x84d2	                             test dl, dl	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x4001439	            0x742a	                            je 0x4001465	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x400143b	    0x488b0d000000	            mov rcx, qword [0x04001442] 	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4001442	        0x833c8100	              cmp dword [rcx + rax*4], 0	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4001446	            0x750c	                           jne 0x4001454	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4001448	          0x4963c5	                        movsxd rax, r13d	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x400144b	          0x881403	                mov byte [rbx + rax], dl	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x400144e	        0x458d6d01	                     lea r13d, [r13 + 1]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4001452	            0xeb11	                           jmp 0x4001465	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x4001454	          0x4963f5	                        movsxd rsi, r13d	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4001457	          0x4801de	                            add rsi, rbx	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400145a	          0x4489e7	                           mov edi, r12d	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x400145d	      0xe800000000	                          call 0x4001462	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4001462	          0x4101c5	                           add r13d, eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x4001465	        0x4183c401	                             add r12d, 1	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001469	          0x4139ec	                           cmp r12d, ebp	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400146c	            0x7cbb	                            jl 0x4001429	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400146e	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001472	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001476	            0xeb06	                           jmp 0x400147e	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x4001478	    0x41bd00000000	                             mov r13d, 0	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x400147e	          0x4963c5	                        movsxd rax, r13d	      2176	gui.c	FUNCTION_38	IF_2
0x4001481	        0x488b3c24	                    mov rdi, qword [rsp]	      2176	gui.c	FUNCTION_38	IF_2
0x4001485	        0xc6040700	                 mov byte [rdi + rax], 0	      2176	gui.c	FUNCTION_38	IF_2
0x4001489	          0x4589f9	                           mov r9d, r15d	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400148c	    0x41b800000000	                              mov r8d, 0	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4001492	      0xb900000000	                              mov ecx, 0	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x4001497	        0x8b542408	                mov edx, dword [rsp + 8]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400149b	          0x4489ee	                           mov esi, r13d	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x400149e	          0x4989fd	                            mov r13, rdi	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x40014a1	      0xe800000000	                          call 0x40014a6	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x40014a6	          0x4189c4	                           mov r12d, eax	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x40014a9	          0x4c89ef	                            mov rdi, r13	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x40014ac	      0xe800000000	                          call 0x40014b1	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x40014b1	          0x4489e0	                           mov eax, r12d	      2180	gui.c	FUNCTION_38	IF_2
0x40014b4	      0xe9f9000000	                           jmp 0x40015b2	      2180	gui.c	FUNCTION_38	IF_2
0x40014b9	    0x813d00000000	         cmp dword [0x040014c3], 0x26cc 	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40014c3	     0xf85cd000000	                           jne 0x4001596	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x40014c9	        0x8d7c1b01	                lea edi, [rbx + rbx + 1]	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40014cd	      0xe800000000	                          call 0x40014d2	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40014d2	          0x4989c4	                            mov r12, rax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x40014d5	          0x4885c0	                           test rax, rax	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40014d8	     0xf84ec000000	                            je 0x40015ca	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x40014de	        0x468d0c33	                    lea r9d, [rbx + r14]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014e2	          0x4539f1	                           cmp r9d, r14d	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014e5	            0x7e78	                           jle 0x400155f	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014e7	          0x4489f0	                           mov eax, r14d	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014ea	      0xbe00000000	                              mov esi, 0	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014ef	          0x8d7e01	                      lea edi, [rsi + 1]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014f2	          0x4863c8	                         movsxd rcx, eax	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014f5	    0x488b15000000	            mov rdx, qword [0x040014fc] 	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x40014fc	      0x440fb6040a	             movzx r8d, byte [rdx + rcx]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001501	          0x4863d6	                         movsxd rdx, esi	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001504	        0x45880414	               mov byte [r12 + rdx], r8b	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001508	    0x4c8b05000000	              mov r8, qword [0x0400150f]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400150f	      0x410fb61408	              movzx edx, byte [r8 + rcx]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001514	          0x80fa8e	                            cmp dl, 0x8e	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001517	            0x7517	                           jne 0x4001530	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001519	          0x83c602	                              add esi, 2	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400151c	    0x488b15000000	            mov rdx, qword [0x04001523] 	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001523	         0xfb6140a	             movzx edx, byte [rdx + rcx]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001527	          0x4863ff	                         movsxd rdi, edi	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400152a	        0x4188143c	                mov byte [r12 + rdi], dl	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x400152e	            0xeb25	                           jmp 0x4001555	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x4001530	           0xfb6d2	                           movzx edx, dl	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x4001533	    0x80ba00000000	                       cmp byte [rdx], 2	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400153a	            0x7517	                           jne 0x4001553	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x400153c	          0x83c602	                              add esi, 2	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400153f	          0x83c001	                              add eax, 1	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4001542	          0x4863d0	                         movsxd rdx, eax	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4001545	      0x410fb61410	              movzx edx, byte [r8 + rdx]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400154a	          0x4863ff	                         movsxd rdi, edi	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x400154d	        0x4188143c	                mov byte [r12 + rdi], dl	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4001551	            0xeb02	                           jmp 0x4001555	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x4001553	            0x89fe	                            mov esi, edi	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001555	          0x83c001	                              add eax, 1	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001558	          0x4439c8	                            cmp eax, r9d	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x400155b	            0x7c92	                            jl 0x40014ef	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x400155d	            0xeb05	                           jmp 0x4001564	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x400155f	      0xbe00000000	                              mov esi, 0	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x4001564	          0x4863c6	                         movsxd rax, esi	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x4001567	      0x41c6040400	                 mov byte [r12 + rax], 0	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x400156c	          0x4589f9	                           mov r9d, r15d	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x400156f	    0x41b800000000	                              mov r8d, 0	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x4001575	      0xb900000000	                              mov ecx, 0	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x400157a	        0x8b542408	                mov edx, dword [rsp + 8]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x400157e	          0x4c89e7	                            mov rdi, r12	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x4001581	      0xe800000000	                          call 0x4001586	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x4001586	          0x4189c5	                           mov r13d, eax	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x4001589	          0x4c89e7	                            mov rdi, r12	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x400158c	      0xe800000000	                          call 0x4001591	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x4001591	          0x4489e8	                           mov eax, r13d	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x4001594	            0xeb1c	                           jmp 0x40015b2	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x4001596	          0x4c01cf	                             add rdi, r9	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x4001599	          0x4589f9	                           mov r9d, r15d	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x400159c	    0x41b800000000	                              mov r8d, 0	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40015a2	      0xb900000000	                              mov ecx, 0	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40015a7	        0x8b542408	                mov edx, dword [rsp + 8]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40015ab	            0x89de	                            mov esi, ebx	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40015ad	      0xe800000000	                          call 0x40015b2	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x40015b2	            0x85c0	                           test eax, eax	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015b4	            0x7514	                           jne 0x40015ca	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015b6	          0x4529fe	                          sub r14d, r15d	      2844	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015b9	          0x4401fd	                           add ebp, r15d	      2845	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015bc	    0x44293d000000	            sub dword [0x040015c3], r15d	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015c3	            0xeb0a	                           jmp 0x40015cf	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x40015c5	      0xbb00000000	                              mov ebx, 0	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x40015ca	          0x4101de	                           add r14d, ebx	      2850	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x40015cd	            0x29dd	                            sub ebp, ebx	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x40015cf	    0x41bf00000000	                             mov r15d, 0	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x40015d5	            0x85ed	                           test ebp, ebp	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40015d7	     0xf8fa9fdffff	                            jg 0x4001386	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x40015dd	    0x8b0500000000	            mov eax, dword [0x040015e3] 	      2740	gui.c	FUNCTION_42	FOR_1
0x40015e3	          0x8d5801	                      lea ebx, [rax + 1]	      2740	gui.c	FUNCTION_42	FOR_1
0x40015e6	    0x891d00000000	            mov dword [0x040015ec], ebx 	      2740	gui.c	FUNCTION_42	FOR_1
0x40015ec	        0x395c2418	            cmp dword [rsp + 0x18], ebx 	      2740	gui.c	FUNCTION_42	FOR_1
0x40015f0	     0xf8d0cfcffff	                           jge 0x4001202	      2740	gui.c	FUNCTION_42	FOR_1
0x40015f6	            0xeb08	                           jmp 0x4001600	      2740	gui.c	FUNCTION_42	FOR_1
0x40015f8	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2715	gui.c	FUNCTION_42
0x4001600	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2858	gui.c	FUNCTION_42
0x4001604	    0x890500000000	            mov dword [0x0400160a], eax 	      2858	gui.c	FUNCTION_42
0x400160a	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2859	gui.c	FUNCTION_42
0x400160e	    0x890500000000	            mov dword [0x04001614], eax 	      2859	gui.c	FUNCTION_42
0x4001614	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2860	gui.c	FUNCTION_42
0x4001618	    0x890500000000	            mov dword [0x0400161e], eax 	      2860	gui.c	FUNCTION_42
0x400161e	            0xeb2c	                           jmp 0x400164c	      2862	gui.c	FUNCTION_42
0x4001620	    0x41bf00000000	                             mov r15d, 0	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4001626	            0xeb06	                           jmp 0x400162e	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x4001628	    0x41bf00000000	                             mov r15d, 0	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x400162e	    0x6642833c4200	                cmp word [rdx + r8*2], 0	      2776	gui.c	FUNCTION_42	FOR_1
0x4001634	            0x7409	                            je 0x400163f	      2776	gui.c	FUNCTION_42	FOR_1
0x4001636	          0x4585ff	                         test r15d, r15d	      2776	gui.c	FUNCTION_42	FOR_1
0x4001639	     0xf8418fdffff	                            je 0x4001357	      2776	gui.c	FUNCTION_42	FOR_1
0x400163f	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2777	gui.c	FUNCTION_42	FOR_1
0x4001647	      0xe932fdffff	                           jmp 0x400137e	      2777	gui.c	FUNCTION_42	FOR_1
0x400164c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2863	gui.c	FUNCTION_42
0x4001650	        0x4883c448	                           add rsp, 0x48	      2863	gui.c	FUNCTION_42
0x4001654	              0x5b	                                 pop rbx	      2863	gui.c	FUNCTION_42
0x4001655	              0x5d	                                 pop rbp	      2863	gui.c	FUNCTION_42
0x4001656	            0x415c	                                 pop r12	      2863	gui.c	FUNCTION_42
0x4001658	            0x415d	                                 pop r13	      2863	gui.c	FUNCTION_42
0x400165a	            0x415e	                                 pop r14	      2863	gui.c	FUNCTION_42
0x400165c	            0x415f	                                 pop r15	      2863	gui.c	FUNCTION_42
0x400165e	              0xc3	                                     ret	      2863	gui.c	FUNCTION_42
gui_dont_update_cursor	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,1:DO,0	11
0x4001cd9	    0x833d00000000	               cmp dword [0x04001ce0], 0	      1993	gui.c	FUNCTION_31	IF_1
0x4001ce0	            0x741b	                            je 0x4001cfd	      1993	gui.c	FUNCTION_31	IF_1
0x4001ce2	            0x85ff	                           test edi, edi	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4001ce4	            0x7419	                            je 0x4001cff	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4001ce6	        0x4883ec08	                              sub rsp, 8	      1992	gui.c	FUNCTION_31
0x4001cea	      0xe800000000	                          call 0x4001cef	      1997	gui.c	FUNCTION_31	IF_1	CALL_1
0x4001cef	    0xc70500000000	               mov dword [0x04001cf9], 0	      1998	gui.c	FUNCTION_31	IF_1
0x4001cf9	        0x4883c408	                              add rsp, 8	      2000	gui.c	FUNCTION_31
0x4001cfd	            0xf3c3	                                     ret	      2000	gui.c	FUNCTION_31
0x4001cff	    0xc70500000000	               mov dword [0x04001d09], 0	      1998	gui.c	FUNCTION_31	IF_1
0x4001d09	              0xc3	                                     ret	      1998	gui.c	FUNCTION_31	IF_1
gui_insert_lines	WHILE,0:functions,0:SWITCH,0:ELSE,2:IF,5:FOR,0:CALL,2:DO,0	34
0x4000b49	            0x85f6	                           test esi, esi	      2896	gui.c	FUNCTION_44	IF_1
0x4000b4b	            0x7e70	                           jle 0x4000bbd	      2896	gui.c	FUNCTION_44	IF_1
0x4000b4d	              0x53	                                push rbx	      2895	gui.c	FUNCTION_44
0x4000b4e	            0x89f3	                            mov ebx, esi	      2895	gui.c	FUNCTION_44
0x4000b50	    0x8b1500000000	            mov edx, dword [0x04000b56] 	      2899	gui.c	FUNCTION_44	IF_2
0x4000b56	          0x8d043e	                    lea eax, [rsi + rdi]	      2899	gui.c	FUNCTION_44	IF_2
0x4000b59	            0x39d0	                            cmp eax, edx	      2899	gui.c	FUNCTION_44	IF_2
0x4000b5b	            0x7e13	                           jle 0x4000b70	      2899	gui.c	FUNCTION_44	IF_2
0x4000b5d	    0x8b0d00000000	            mov ecx, dword [0x04000b63] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4000b63	    0x8b3500000000	            mov esi, dword [0x04000b69] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4000b69	      0xe800000000	                          call 0x4000b6e	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4000b6e	            0xeb4c	                           jmp 0x4000bbc	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4000b70	      0xe800000000	                          call 0x4000b75	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4000b75	    0x8b3500000000	            mov esi, dword [0x04000b7b] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b7b	    0x3b3500000000	            cmp esi, dword [0x04000b81] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b81	            0x7c39	                            jl 0x4000bbc	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b83	    0x8b0500000000	            mov eax, dword [0x04000b89] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b89	    0x3b0500000000	            cmp eax, dword [0x04000b8f] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b8f	            0x7c2b	                            jl 0x4000bbc	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b91	    0x3b0500000000	            cmp eax, dword [0x04000b97] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b97	            0x7f23	                            jg 0x4000bbc	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4000b99	    0x8b0500000000	            mov eax, dword [0x04000b9f] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000b9f	            0x89c2	                            mov edx, eax	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000ba1	            0x29da	                            sub edx, ebx	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000ba3	            0x39d6	                            cmp esi, edx	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000ba5	            0x7f0a	                            jg 0x4000bb1	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000ba7	             0x1de	                            add esi, ebx	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000ba9	    0x893500000000	            mov dword [0x04000baf], esi 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000baf	            0xeb0b	                           jmp 0x4000bbc	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4000bb1	            0x39c6	                            cmp esi, eax	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4000bb3	            0x7f07	                            jg 0x4000bbc	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4000bb5	    0xc60500000000	                mov byte [0x04000bbc], 0	      2914	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4000bbc	              0x5b	                                 pop rbx	      2917	gui.c	FUNCTION_44
0x4000bbd	            0xf3c3	                                     ret	      2917	gui.c	FUNCTION_44
gui_init_font	WHILE,1:functions,0:SWITCH,0:ELSE,3:IF,8:FOR,0:CALL,10:DO,0	46
0x4003501	    0x4881ec680100	                          sub rsp, 0x168	       850	gui.c	FUNCTION_10
0x4003508	      0x48897c2408	                mov qword [rsp + 8], rdi	       850	gui.c	FUNCTION_10
0x400350d	    0x64488b042528	                mov rax, qword fs:[0x28]	       850	gui.c	FUNCTION_10
0x4003516	    0x488984245801	            mov qword [rsp + 0x158], rax	       850	gui.c	FUNCTION_10
0x400351e	            0x31c0	                            xor eax, eax	       850	gui.c	FUNCTION_10
0x4003520	    0x8b0500000000	            mov eax, dword [0x04003526] 	       856	gui.c	FUNCTION_10	IF_1
0x4003526	            0x85c0	                           test eax, eax	       856	gui.c	FUNCTION_10	IF_1
0x4003528	            0x7470	                            je 0x400359a	       856	gui.c	FUNCTION_10	IF_1
0x400352a	      0xc644241000	                mov byte [rsp + 0x10], 0	       859	gui.c	FUNCTION_10
0x400352f	          0x803f00	                       cmp byte [rdi], 0	       860	gui.c	FUNCTION_10	IF_2
0x4003532	            0x7439	                            je 0x400356d	       860	gui.c	FUNCTION_10	IF_2
0x4003534	      0xb900000000	                              mov ecx, 0	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003539	      0xba40010000	                          mov edx, 0x140	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x400353e	      0x488d742410	                   lea rsi, [rsp + 0x10]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003543	      0x488d7c2408	                      lea rdi, [rsp + 8]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4003548	      0xe800000000	                          call 0x400354d	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x400354d	      0xbe00000000	                              mov esi, 0	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003552	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003557	      0xe800000000	                          call 0x400355c	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x400355c	          0x83f801	                              cmp eax, 1	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x400355f	            0x7420	                            je 0x4003581	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4003561	      0x488b442408	                mov rax, qword [rsp + 8]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4003566	          0x803800	                       cmp byte [rax], 0	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4003569	            0x75c9	                           jne 0x4003534	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x400356b	            0xeb42	                           jmp 0x40035af	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x400356d	      0xbe00000000	                              mov esi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4003572	      0xbf00000000	                              mov edi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4003577	      0xe800000000	                          call 0x400357c	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x400357c	          0x83f801	                              cmp eax, 1	       907	gui.c	FUNCTION_10	IF_7
0x400357f	            0x7519	                           jne 0x400359a	       907	gui.c	FUNCTION_10	IF_7
0x4003581	      0xba0f000000	                            mov edx, 0xf	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003586	      0xbe01000000	                              mov esi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x400358b	      0xbf01000000	                              mov edi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003590	      0xe800000000	                          call 0x4003595	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4003595	      0xb801000000	                              mov eax, 1	       921	gui.c	FUNCTION_10
0x400359a	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	       922	gui.c	FUNCTION_10
0x40035a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       922	gui.c	FUNCTION_10
0x40035ab	            0x7418	                            je 0x40035c5	       922	gui.c	FUNCTION_10
0x40035ad	            0xeb11	                           jmp 0x40035c0	       922	gui.c	FUNCTION_10
0x40035af	    0x48833d000000	               cmp qword [0x040035b7], 0	       897	gui.c	FUNCTION_10	IF_6
0x40035b7	            0x74b4	                            je 0x400356d	       897	gui.c	FUNCTION_10	IF_6
0x40035b9	      0xb800000000	                              mov eax, 0	       897	gui.c	FUNCTION_10	IF_6
0x40035be	            0xebda	                           jmp 0x400359a	       897	gui.c	FUNCTION_10	IF_6
0x40035c0	      0xe800000000	                          call 0x40035c5	       922	gui.c	FUNCTION_10
0x40035c5	    0x4881c4680100	                          add rsp, 0x168	       922	gui.c	FUNCTION_10
0x40035cc	              0xc3	                                     ret	       922	gui.c	FUNCTION_10
gui_check_colors	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,2:DO,0	27
0x4004b6b	        0x4883ec08	                              sub rsp, 8	      4734	gui.c	FUNCTION_72
0x4004b6f	    0x488b05000000	            mov rax, qword [0x04004b76] 	      4735	gui.c	FUNCTION_72	IF_1
0x4004b76	    0x483905000000	            cmp qword [0x04004b7d], rax 	      4735	gui.c	FUNCTION_72	IF_1
0x4004b7d	            0x7408	                            je 0x4004b87	      4735	gui.c	FUNCTION_72	IF_1
0x4004b7f	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4735	gui.c	FUNCTION_72	IF_1
0x4004b85	            0x755e	                           jne 0x4004be5	      4735	gui.c	FUNCTION_72	IF_1
0x4004b87	      0xbf00000000	                              mov edi, 0	      4753	gui.c	FUNCTION_74	CALL_1
0x4004b8c	      0xe800000000	                          call 0x4004b91	      4753	gui.c	FUNCTION_74	CALL_1
0x4004b91	    0x488905000000	            mov qword [0x04004b98], rax 	      4753	gui.c	FUNCTION_74	CALL_1
0x4004b98	      0xbf00000000	                              mov edi, 0	      4754	gui.c	FUNCTION_74	CALL_3
0x4004b9d	      0xe800000000	                          call 0x4004ba2	      4754	gui.c	FUNCTION_74	CALL_3
0x4004ba2	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x4004ba5	      0xe800000000	                          call 0x4004baa	      4754	gui.c	FUNCTION_74	CALL_3
0x4004baa	    0x488b05000000	            mov rax, qword [0x04004bb1] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4004bb1	    0x483905000000	            cmp qword [0x04004bb8], rax 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4004bb8	            0x7408	                            je 0x4004bc2	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4004bba	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4004bc0	            0x7523	                           jne 0x4004be5	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4004bc2	      0xbf00000000	                              mov edi, 0	      4746	gui.c	FUNCTION_73	CALL_1
0x4004bc7	      0xe800000000	                          call 0x4004bcc	      4746	gui.c	FUNCTION_73	CALL_1
0x4004bcc	    0x488905000000	            mov qword [0x04004bd3], rax 	      4746	gui.c	FUNCTION_73	CALL_1
0x4004bd3	      0xbf00000000	                              mov edi, 0	      4747	gui.c	FUNCTION_73	CALL_3
0x4004bd8	      0xe800000000	                          call 0x4004bdd	      4747	gui.c	FUNCTION_73	CALL_3
0x4004bdd	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x4004be0	      0xe800000000	                          call 0x4004be5	      4747	gui.c	FUNCTION_73	CALL_3
0x4004be5	        0x4883c408	                              add rsp, 8	      4741	gui.c	FUNCTION_72
0x4004be9	              0xc3	                                     ret	      4741	gui.c	FUNCTION_72
gui_reset_scroll_region	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,0:DO,0	9
0x4000a81	    0xc70500000000	               mov dword [0x04000a8b], 0	      1705	gui.c	FUNCTION_25
0x4000a8b	    0x8b0500000000	            mov eax, dword [0x04000a91] 	      1706	gui.c	FUNCTION_25
0x4000a91	          0x83e801	                              sub eax, 1	      1706	gui.c	FUNCTION_25
0x4000a94	    0x890500000000	            mov dword [0x04000a9a], eax 	      1706	gui.c	FUNCTION_25
0x4000a9a	    0xc70500000000	               mov dword [0x04000aa4], 0	      1707	gui.c	FUNCTION_25
0x4000aa4	    0x8b0500000000	            mov eax, dword [0x04000aaa] 	      1708	gui.c	FUNCTION_25
0x4000aaa	          0x83e801	                              sub eax, 1	      1708	gui.c	FUNCTION_25
0x4000aad	    0x890500000000	            mov dword [0x04000ab3], eax 	      1708	gui.c	FUNCTION_25
0x4000ab3	              0xc3	                                     ret	      1708	gui.c	FUNCTION_25
gui_mouse_correct	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,4:FOR,0:CALL,8:DO,0	64
0x4004e64	              0x53	                                push rbx	      4920	gui.c	FUNCTION_80
0x4004e65	        0x4883ec10	                           sub rsp, 0x10	      4920	gui.c	FUNCTION_80
0x4004e69	    0x64488b042528	                mov rax, qword fs:[0x28]	      4920	gui.c	FUNCTION_80
0x4004e72	      0x4889442408	                mov qword [rsp + 8], rax	      4920	gui.c	FUNCTION_80
0x4004e77	            0x31c0	                            xor eax, eax	      4920	gui.c	FUNCTION_80
0x4004e79	    0xc70500000000	               mov dword [0x04004e83], 0	      4924	gui.c	FUNCTION_80
0x4004e83	    0x833d00000000	               cmp dword [0x04004e8a], 0	      4926	gui.c	FUNCTION_80	IF_1
0x4004e8a	     0xf84cf000000	                            je 0x4004f5f	      4926	gui.c	FUNCTION_80	IF_1
0x4004e90	    0x833d00000000	               cmp dword [0x04004e97], 0	      4926	gui.c	FUNCTION_80	IF_1
0x4004e97	     0xf84c2000000	                            je 0x4004f5f	      4926	gui.c	FUNCTION_80	IF_1
0x4004e9d	      0x488d742404	                      lea rsi, [rsp + 4]	      4929	gui.c	FUNCTION_80	CALL_1
0x4004ea2	          0x4889e7	                            mov rdi, rsp	      4929	gui.c	FUNCTION_80	CALL_1
0x4004ea5	      0xe800000000	                          call 0x4004eaa	      4929	gui.c	FUNCTION_80	CALL_1
0x4004eaa	          0x8b0424	                    mov eax, dword [rsp]	      4931	gui.c	FUNCTION_80	IF_2
0x4004ead	            0x85c0	                           test eax, eax	      4931	gui.c	FUNCTION_80	IF_2
0x4004eaf	     0xf88aa000000	                            js 0x4004f5f	      4931	gui.c	FUNCTION_80	IF_2
0x4004eb5	            0x4898	                                    cdqe	      4931	gui.c	FUNCTION_80	IF_2
0x4004eb7	    0x486315000000	         movsxd rdx, dword [0x04004ebe] 	      4931	gui.c	FUNCTION_80	IF_2
0x4004ebe	    0x480faf150000	            imul rdx, qword [0x04004ec6]	      4931	gui.c	FUNCTION_80	IF_2
0x4004ec6	          0x4839d0	                            cmp rax, rdx	      4931	gui.c	FUNCTION_80	IF_2
0x4004ec9	     0xf8f90000000	                            jg 0x4004f5f	      4931	gui.c	FUNCTION_80	IF_2
0x4004ecf	        0x8b442404	                mov eax, dword [rsp + 4]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ed3	            0x85c0	                           test eax, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ed5	     0xf8884000000	                            js 0x4004f5f	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004edb	    0x2b0500000000	             sub eax, dword [0x04004ee1]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ee1	              0x99	                                     cdq	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ee2	    0xf73d00000000	                 idiv dword [0x04004ee8]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ee8	            0x89c3	                            mov ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004eea	      0xe800000000	                          call 0x4004eef	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004eef	            0x39c3	                            cmp ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ef1	            0x7c6c	                            jl 0x4004f5f	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4004ef3	        0x8b742404	                mov esi, dword [rsp + 4]	      4934	gui.c	FUNCTION_80	CALL_4
0x4004ef7	          0x8b3c24	                    mov edi, dword [rsp]	      4934	gui.c	FUNCTION_80	CALL_4
0x4004efa	      0xe835b6ffff	                         call sym.xy2win	      4934	gui.c	FUNCTION_80	CALL_4
0x4004eff	    0x483905000000	            cmp qword [0x04004f06], rax 	      4935	gui.c	FUNCTION_80	IF_4
0x4004f06	            0x7457	                            je 0x4004f5f	      4935	gui.c	FUNCTION_80	IF_4
0x4004f08	          0x4885c0	                           test rax, rax	      4935	gui.c	FUNCTION_80	IF_4
0x4004f0b	            0x7452	                            je 0x4004f5f	      4935	gui.c	FUNCTION_80	IF_4
0x4004f0d	      0xe800000000	                          call 0x4004f12	      4937	gui.c	FUNCTION_80	IF_4	CALL_5
0x4004f12	    0x488b0d000000	            mov rcx, qword [0x04004f19] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x4004f19	    0x8b0500000000	            mov eax, dword [0x04004f1f] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x4004f1f	    0x8bb1a8010000	           mov esi, dword [rcx + 0x1a8] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f25	     0x3b19c000000	             add esi, dword [rcx + 0x9c]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f2b	     0x3b1dc000000	             add esi, dword [rcx + 0xdc]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f31	            0x89f2	                            mov edx, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f33	           0xfafd0	                           imul edx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f36	            0x89c6	                            mov esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f38	          0xc1ee1f	                           shr esi, 0x1f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f3b	             0x1c6	                            add esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f3d	            0x89f0	                            mov eax, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f3f	            0xd1f8	                              sar eax, 1	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f41	          0x8d3402	                    lea esi, [rdx + rax]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f44	    0x8bb9ac000000	            mov edi, dword [rcx + 0xac] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f4a	     0x3b9a8000000	             add edi, dword [rcx + 0xa8]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f50	     0xfaf3d000000	            imul edi, dword [0x04004f57]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f57	          0x83ef03	                              sub edi, 3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f5a	      0xe800000000	                          call 0x4004f5f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4004f5f	      0x488b442408	                mov rax, qword [rsp + 8]	      4942	gui.c	FUNCTION_80
0x4004f64	    0x644833042528	                xor rax, qword fs:[0x28]	      4942	gui.c	FUNCTION_80
0x4004f6d	            0x7405	                            je 0x4004f74	      4942	gui.c	FUNCTION_80
0x4004f6f	      0xe800000000	                          call 0x4004f74	      4942	gui.c	FUNCTION_80
0x4004f74	        0x4883c410	                           add rsp, 0x10	      4942	gui.c	FUNCTION_80
0x4004f78	              0x5b	                                 pop rbx	      4942	gui.c	FUNCTION_80
0x4004f79	              0xc3	                                     ret	      4942	gui.c	FUNCTION_80
gui_find_bitmap	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,2:FOR,0:CALL,3:DO,0	30
0x4004f7a	          0x4989fa	                            mov r10, rdi	      5045	gui.c	FUNCTION_84
0x4004f7d	      0xb800000000	                              mov eax, 0	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f82	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f89	            0xf2ae	              repne scasb al, byte [rdi]	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f8b	          0x4889c8	                            mov rax, rcx	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f8e	          0x48f7d0	                                 not rax	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f91	        0x4c8d48ff	                       lea r9, [rax - 1]	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004f95	      0xb800000000	                              mov eax, 0	      5047	gui.c	FUNCTION_84	IF_1
0x4004f9a	    0x4981f9f20f00	                           cmp r9, 0xff2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004fa1	            0x773f	                            ja 0x4004fe2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4004fa3	              0x53	                                push rbx	      5045	gui.c	FUNCTION_84
0x4004fa4	          0x4989d0	                             mov r8, rdx	      5045	gui.c	FUNCTION_84
0x4004fa7	          0x4889f3	                            mov rbx, rsi	      5045	gui.c	FUNCTION_84
0x4004faa	          0x4c89d1	                            mov rcx, r10	      5045	gui.c	FUNCTION_84
0x4004fad	      0xba00000000	                              mov edx, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x4004fb2	      0xbe00100000	                         mov esi, 0x1000	      5048	gui.c	FUNCTION_84	CALL_2
0x4004fb7	          0x4889df	                            mov rdi, rbx	      5048	gui.c	FUNCTION_84	CALL_2
0x4004fba	      0xe800000000	                          call 0x4004fbf	      5048	gui.c	FUNCTION_84	CALL_2
0x4004fbf	          0x4889d9	                            mov rcx, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fc2	      0xba00000000	                              mov edx, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fc7	      0xbe00000000	                              mov esi, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fcc	          0x4889df	                            mov rdi, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fcf	      0xe800000000	                          call 0x4004fd4	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fd4	            0x85c0	                           test eax, eax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fd6	            0x7409	                            je 0x4004fe1	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4004fd8	          0x803b00	                       cmp byte [rbx], 0	      5047	gui.c	FUNCTION_84	IF_1
0x4004fdb	           0xf95c0	                                setne al	      5047	gui.c	FUNCTION_84	IF_1
0x4004fde	           0xfb6c0	                           movzx eax, al	      5047	gui.c	FUNCTION_84	IF_1
0x4004fe1	              0x5b	                                 pop rbx	      5053	gui.c	FUNCTION_84
0x4004fe2	            0xf3c3	                                     ret	      5053	gui.c	FUNCTION_84
gui_drag_scrollbar	WHILE,0:functions,0:SWITCH,0:ELSE,9:IF,28:FOR,1:CALL,22:DO,0	190
0x40047fd	          0x4885ff	                           test rdi, rdi	      3975	gui.c	FUNCTION_63	IF_1
0x4004800	     0xf8404030000	                            je 0x4004b0a	      3975	gui.c	FUNCTION_63	IF_1
0x4004806	            0x4156	                                push r14	      3961	gui.c	FUNCTION_63
0x4004808	            0x4155	                                push r13	      3961	gui.c	FUNCTION_63
0x400480a	            0x4154	                                push r12	      3961	gui.c	FUNCTION_63
0x400480c	              0x55	                                push rbp	      3961	gui.c	FUNCTION_63
0x400480d	              0x53	                                push rbx	      3961	gui.c	FUNCTION_63
0x400480e	          0x4889fb	                            mov rbx, rdi	      3961	gui.c	FUNCTION_63
0x4004811	    0x8b0500000000	            mov eax, dword [0x04004817] 	      3979	gui.c	FUNCTION_63	IF_2
0x4004817	            0x85c0	                           test eax, eax	      3979	gui.c	FUNCTION_63	IF_2
0x4004819	     0xf85e3020000	                           jne 0x4004b02	      3979	gui.c	FUNCTION_63	IF_2
0x400481f	    0x488b05000000	            mov rax, qword [0x04004826] 	      3965	gui.c	FUNCTION_63
0x4004826	    0x833d00000000	               cmp dword [0x0400482d], 0	      3983	gui.c	FUNCTION_63	IF_3
0x400482d	            0x740a	                            je 0x4004839	      3983	gui.c	FUNCTION_63	IF_3
0x400482f	        0x483b4708	                cmp rax, qword [rdi + 8]	      3983	gui.c	FUNCTION_63	IF_3
0x4004833	     0xf85c9020000	                           jne 0x4004b02	      3983	gui.c	FUNCTION_63	IF_3
0x4004839	    0x448ba0940000	           mov r12d, dword [rax + 0x94] 	      3965	gui.c	FUNCTION_63
0x4004840	        0x4c8b6878	            mov r13, qword [rax + 0x78] 	      3966	gui.c	FUNCTION_63
0x4004844	    0x448bb0840000	           mov r14d, dword [rax + 0x84] 	      3968	gui.c	FUNCTION_63
0x400484b	            0x85d2	                           test edx, edx	      3987	gui.c	FUNCTION_63	IF_4
0x400484d	            0x7437	                            je 0x4004886	      3987	gui.c	FUNCTION_63	IF_4
0x400484f	        0x488b4308	                mov rax, qword [rbx + 8]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004853	          0x4885c0	                           test rax, rax	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004856	            0x750c	                           jne 0x4004864	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4004858	    0xc70500000000	               mov dword [0x04004862], 2	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4004862	            0xeb15	                           jmp 0x4004879	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4004864	    0x480590180000	                         add rax, 0x1890	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x400486a	          0x4839c3	                            cmp rbx, rax	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x400486d	           0xf95c0	                                setne al	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004870	           0xfb6c0	                           movzx eax, al	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004873	    0x890500000000	            mov dword [0x04004879], eax 	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4004879	        0x488b4308	                mov rax, qword [rbx + 8]	      3995	gui.c	FUNCTION_63	IF_4
0x400487d	    0x488905000000	            mov qword [0x04004884], rax 	      3995	gui.c	FUNCTION_63	IF_4
0x4004884	            0xeb15	                           jmp 0x400489b	      3995	gui.c	FUNCTION_63	IF_4
0x4004886	    0xc70500000000	     mov dword [0x04004890], 0xffffffff 	      3999	gui.c	FUNCTION_63	ELSE_3
0x4004890	    0x48c705000000	               mov qword [0x0400489b], 0	      4003	gui.c	FUNCTION_63	ELSE_3
0x400489b	        0x488b4308	                mov rax, qword [rbx + 8]	      4008	gui.c	FUNCTION_63	IF_7
0x400489f	    0x488d90901800	                 lea rdx, [rax + 0x1890]	      4009	gui.c	FUNCTION_63	IF_7
0x40048a6	          0x4885c0	                           test rax, rax	      4009	gui.c	FUNCTION_63	IF_7
0x40048a9	        0x480f45da	                         cmovne rbx, rdx	      4009	gui.c	FUNCTION_63	IF_7
0x40048ad	          0x4885f6	                           test rsi, rsi	      4009	gui.c	FUNCTION_63	IF_7
0x40048b0	      0xbd00000000	                              mov ebp, 0	      4009	gui.c	FUNCTION_63	IF_7
0x40048b5	        0x480f48f5	                          cmovs rsi, rbp	      4009	gui.c	FUNCTION_63	IF_7
0x40048b9	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      4020	gui.c	FUNCTION_63	IF_10
0x40048bd	        0x482b6b20	             sub rbp, qword [rbx + 0x20]	      4020	gui.c	FUNCTION_63	IF_10
0x40048c1	        0x4883c501	                              add rbp, 1	      4020	gui.c	FUNCTION_63	IF_10
0x40048c5	          0x4839f5	                            cmp rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x40048c8	        0x480f4fee	                          cmovg rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x40048cc	        0x48896b18	             mov qword [rbx + 0x18], rbp	      4024	gui.c	FUNCTION_63
0x40048d0	    0x833d00000000	               cmp dword [0x040048d7], 0	      4030	gui.c	FUNCTION_63	IF_11
0x40048d7	     0xf8525020000	                           jne 0x4004b02	      4030	gui.c	FUNCTION_63	IF_11
0x40048dd	        0x488b4b08	                mov rcx, qword [rbx + 8]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048e1	          0x4885c9	                           test rcx, rcx	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048e4	            0x7409	                            je 0x40048ef	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048e6	    0x483b0d000000	            cmp rcx, qword [0x040048ed] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048ed	            0x7547	                           jne 0x4004936	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048ef	      0xe800000000	                          call 0x40048f4	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048f4	            0x85c0	                           test eax, eax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048f6	     0xf8506020000	                           jne 0x4004b02	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x40048fc	        0x488b4b08	                mov rcx, qword [rbx + 8]	      4041	gui.c	FUNCTION_63	IF_13
0x4004900	          0x4885c9	                           test rcx, rcx	      4041	gui.c	FUNCTION_63	IF_13
0x4004903	            0x7531	                           jne 0x4004936	      4041	gui.c	FUNCTION_63	IF_13
0x4004905	    0x488b05000000	            mov rax, qword [0x0400490c] 	      4041	gui.c	FUNCTION_63	IF_13
0x400490c	    0x83b854020000	              cmp dword [rax + 0x254], 0	      4041	gui.c	FUNCTION_63	IF_13
0x4004913	     0xf84cc010000	                            je 0x4004ae5	      4041	gui.c	FUNCTION_63	IF_13
0x4004919	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4043	gui.c	FUNCTION_63	IF_13
0x400491d	        0x4883c001	                              add rax, 1	      4043	gui.c	FUNCTION_63	IF_13
0x4004921	        0x482b4320	             sub rax, qword [rbx + 0x20]	      4043	gui.c	FUNCTION_63	IF_13
0x4004925	          0x4829e8	                            sub rax, rbp	      4043	gui.c	FUNCTION_63	IF_13
0x4004928	      0xbd00000000	                              mov ebp, 0	      4043	gui.c	FUNCTION_63	IF_13
0x400492d	        0x480f49e8	                         cmovns rbp, rax	      4043	gui.c	FUNCTION_63	IF_13
0x4004931	      0xe9af010000	                           jmp 0x4004ae5	      4043	gui.c	FUNCTION_63	IF_13
0x4004936	    0x488b05000000	            mov rax, qword [0x0400493d] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400493d	          0x4885c0	                           test rax, rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004940	            0x741d	                            je 0x400495f	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004942	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004945	            0x7418	                            je 0x400495f	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004947	      0xba00000000	                              mov edx, 0	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400494c	          0x83c201	                              add edx, 1	      4053	gui.c	FUNCTION_63	IF_15	FOR_1
0x400494f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004953	          0x4885c0	                           test rax, rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004956	            0x740c	                            je 0x4004964	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4004958	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400495b	            0x75ef	                           jne 0x400494c	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400495d	            0xeb05	                           jmp 0x4004964	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x400495f	      0xba00000000	                              mov edx, 0	      4051	gui.c	FUNCTION_63	IF_15
0x4004964	          0x4885c0	                           test rax, rax	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x4004967	     0xf8495010000	                            je 0x4004b02	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x400496d	    0x891500000000	            mov dword [0x04004973], edx 	      4058	gui.c	FUNCTION_63	IF_15
0x4004973	    0x48892d000000	            mov qword [0x0400497a], rbp 	      4059	gui.c	FUNCTION_63	IF_15
0x400497a	    0x8b0500000000	            mov eax, dword [0x04004980] 	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004980	            0xa801	                              test al, 1	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004982	            0x740c	                            je 0x4004990	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4004984	      0xe800000000	                          call 0x4004989	      4062	gui.c	FUNCTION_63	IF_15	IF_17	CALL_2
0x4004989	      0xe800000000	                          call 0x400498e	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x400498e	            0xeb27	                           jmp 0x40049b7	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4004990	            0xa810	                           test al, 0x10	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004992	            0x740c	                            je 0x40049a0	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4004994	      0xe800000000	                          call 0x4004999	      4067	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_4
0x4004999	      0xe800000000	                          call 0x400499e	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x400499e	            0xeb17	                           jmp 0x40049b7	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x40049a0	            0xa808	                              test al, 8	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x40049a2	            0x7413	                            je 0x40049b7	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x40049a4	    0x833d00000000	               cmp dword [0x040049ab], 0	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x40049ab	            0x750a	                           jne 0x40049b7	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x40049ad	      0xe800000000	                          call 0x40049b2	      4074	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_6
0x40049b2	      0xe800000000	                          call 0x40049b7	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x40049b7	        0x488b4308	                mov rax, qword [rbx + 8]	      4080	gui.c	FUNCTION_63	IF_15
0x40049bb	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      4080	gui.c	FUNCTION_63	IF_15
0x40049bf	        0x488d77ff	                      lea rsi, [rdi - 1]	      4080	gui.c	FUNCTION_63	IF_15
0x40049c3	        0x48897318	             mov qword [rbx + 0x18], rsi	      4080	gui.c	FUNCTION_63	IF_15
0x40049c7	    0x833d00000000	               cmp dword [0x040049ce], 0	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40049ce	     0xf8495000000	                            je 0x4004a69	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40049d4	    0x833d00000000	               cmp dword [0x040049db], 0	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40049db	     0xf8488000000	                            je 0x4004a69	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x40049e1	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x40049e5	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x40049e9	    0x488db8e01800	                 lea rdi, [rax + 0x18e0]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x40049f0	          0x4839fb	                            cmp rbx, rdi	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x40049f3	        0x400f95c7	                               setne dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x40049f7	        0x400fb6ff	                          movzx edi, dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x40049fb	    0x4c8d04bd0000	                         lea r8, [rdi*4]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a03	          0x4c01c7	                             add rdi, r8	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a06	        0x48c1e704	                              shl rdi, 4	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a0a	    0x488dbc389018	           lea rdi, [rax + rdi + 0x1890]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a12	      0xe800000000	                          call 0x4004a17	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a17	            0xeb50	                           jmp 0x4004a69	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4004a19	      0xbe00000000	                              mov esi, 0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004a1e	          0x4889ef	                            mov rdi, rbp	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004a21	      0xe800000000	                          call 0x4004a26	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004a26	            0xeb27	                           jmp 0x4004a4f	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4004a28	            0xa810	                           test al, 0x10	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004a2a	            0x7407	                            je 0x4004a33	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004a2c	      0xe800000000	                          call 0x4004a31	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004a31	            0xeb1c	                           jmp 0x4004a4f	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4004a33	            0xa808	                              test al, 8	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4004a35	            0x7418	                            je 0x4004a4f	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4004a37	    0x833d00000000	               cmp dword [0x04004a3e], 0	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4004a3e	            0x750f	                           jne 0x4004a4f	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4004a40	      0xbe00000000	                              mov esi, 0	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4004a45	      0xe800000000	                          call 0x4004a4a	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4004a4a	      0xe800000000	                          call 0x4004a4f	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x4004a4f	    0x488b3d000000	            mov rdi, qword [0x04004a56] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4004a56	    0x443ba7940000	           cmp r12d, dword [rdi + 0x94] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4004a5d	            0x740a	                            je 0x4004a69	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4004a5f	      0xe800000000	                          call 0x4004a64	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x4004a64	      0xe800000000	                          call 0x4004a69	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x4004a69	    0x488b05000000	            mov rax, qword [0x04004a70] 	      4134	gui.c	FUNCTION_63	IF_27
0x4004a70	    0x83b888020000	              cmp dword [rax + 0x288], 0	      4134	gui.c	FUNCTION_63	IF_27
0x4004a77	            0x745b	                            je 0x4004ad4	      4134	gui.c	FUNCTION_63	IF_27
0x4004a79	        0x488b5308	                mov rdx, qword [rbx + 8]	      4135	gui.c	FUNCTION_63	IF_27
0x4004a7d	          0x4885d2	                           test rdx, rdx	      4135	gui.c	FUNCTION_63	IF_27
0x4004a80	            0x7509	                           jne 0x4004a8b	      4135	gui.c	FUNCTION_63	IF_27
0x4004a82	    0x443ba0940000	           cmp r12d, dword [rax + 0x94] 	      4135	gui.c	FUNCTION_63	IF_27
0x4004a89	            0x7514	                           jne 0x4004a9f	      4135	gui.c	FUNCTION_63	IF_27
0x4004a8b	          0x4839d0	                            cmp rax, rdx	      4136	gui.c	FUNCTION_63	IF_27
0x4004a8e	            0x7544	                           jne 0x4004ad4	      4136	gui.c	FUNCTION_63	IF_27
0x4004a90	        0x4c3b6878	            cmp r13, qword [rax + 0x78] 	      4136	gui.c	FUNCTION_63	IF_27
0x4004a94	            0x7509	                           jne 0x4004a9f	      4136	gui.c	FUNCTION_63	IF_27
0x4004a96	    0x443bb0840000	           cmp r14d, dword [rax + 0x84] 	      4138	gui.c	FUNCTION_63	IF_27
0x4004a9d	            0x7435	                            je 0x4004ad4	      4138	gui.c	FUNCTION_63	IF_27
0x4004a9f	      0xbf01000000	                              mov edi, 1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4004aa4	      0xe800000000	                          call 0x4004aa9	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4004aa9	    0x488b1d000000	            mov rbx, qword [0x04004ab0] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004ab0	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004ab3	            0x741a	                            je 0x4004acf	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004ab5	    0x83bb28010000	              cmp dword [rbx + 0x128], 0	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x4004abc	            0x7e08	                           jle 0x4004ac6	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x4004abe	          0x4889df	                            mov rdi, rbx	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x4004ac1	      0xe800000000	                          call 0x4004ac6	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x4004ac6	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004aca	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004acd	            0x75e6	                           jne 0x4004ab5	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4004acf	      0xe800000000	                          call 0x4004ad4	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x4004ad4	      0xbe01000000	                              mov esi, 1	      4149	gui.c	FUNCTION_63	CALL_19
0x4004ad9	      0xbf00000000	                              mov edi, 0	      4149	gui.c	FUNCTION_63	CALL_19
0x4004ade	      0xe800000000	                          call 0x4004ae3	      4149	gui.c	FUNCTION_63	CALL_19
0x4004ae3	            0xeb1d	                           jmp 0x4004b02	      4149	gui.c	FUNCTION_63	CALL_19
0x4004ae5	          0x4889ef	                            mov rdi, rbp	      4103	gui.c	FUNCTION_63	ELSE_7
0x4004ae8	    0x48892d000000	            mov qword [0x04004aef], rbp 	      4103	gui.c	FUNCTION_63	ELSE_7
0x4004aef	    0x8b0500000000	            mov eax, dword [0x04004af5] 	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004af5	            0xa801	                              test al, 1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004af7	     0xf842bffffff	                            je 0x4004a28	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004afd	      0xe917ffffff	                           jmp 0x4004a19	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4004b02	              0x5b	                                 pop rbx	      4155	gui.c	FUNCTION_63
0x4004b03	              0x5d	                                 pop rbp	      4155	gui.c	FUNCTION_63
0x4004b04	            0x415c	                                 pop r12	      4155	gui.c	FUNCTION_63
0x4004b06	            0x415d	                                 pop r13	      4155	gui.c	FUNCTION_63
0x4004b08	            0x415e	                                 pop r14	      4155	gui.c	FUNCTION_63
0x4004b0a	            0xf3c3	                                     ret	      4155	gui.c	FUNCTION_63
gui_may_flush	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,1:DO,0	6
0x4000c64	    0x833d00000000	               cmp dword [0x04000c6b], 0	      2034	gui.c	FUNCTION_35	IF_1
0x4000c6b	            0x750d	                           jne 0x4000c7a	      2034	gui.c	FUNCTION_35	IF_1
0x4000c6d	        0x4883ec08	                              sub rsp, 8	      2033	gui.c	FUNCTION_35
0x4000c71	      0xe800000000	                          call 0x4000c76	      2035	gui.c	FUNCTION_35	CALL_1
0x4000c76	        0x4883c408	                              add rsp, 8	      2036	gui.c	FUNCTION_35
0x4000c7a	            0xf3c3	                                     ret	      2036	gui.c	FUNCTION_35
gui_outstr_nowrap	WHILE,0:functions,0:SWITCH,0:ELSE,20:IF,54:FOR,1:CALL,28:DO,0	233
0x4000c7c	            0x4157	                                push r15	      2234	gui.c	FUNCTION_39
0x4000c7e	            0x4156	                                push r14	      2234	gui.c	FUNCTION_39
0x4000c80	            0x4155	                                push r13	      2234	gui.c	FUNCTION_39
0x4000c82	            0x4154	                                push r12	      2234	gui.c	FUNCTION_39
0x4000c84	              0x55	                                push rbp	      2234	gui.c	FUNCTION_39
0x4000c85	              0x53	                                push rbx	      2234	gui.c	FUNCTION_39
0x4000c86	        0x4883ec28	                           sub rsp, 0x28	      2234	gui.c	FUNCTION_39
0x4000c8a	        0x48893c24	                    mov qword [rsp], rdi	      2234	gui.c	FUNCTION_39
0x4000c8e	          0x4189f5	                           mov r13d, esi	      2234	gui.c	FUNCTION_39
0x4000c91	          0x4189d4	                           mov r12d, edx	      2234	gui.c	FUNCTION_39
0x4000c94	          0x4989ce	                            mov r14, rcx	      2234	gui.c	FUNCTION_39
0x4000c97	          0x4d89c7	                             mov r15, r8	      2234	gui.c	FUNCTION_39
0x4000c9a	      0x44894c2410	             mov dword [rsp + 0x10], r9d	      2234	gui.c	FUNCTION_39
0x4000c9f	            0x85f6	                           test esi, esi	      2259	gui.c	FUNCTION_39	IF_1
0x4000ca1	            0x7915	                           jns 0x4000cb8	      2259	gui.c	FUNCTION_39	IF_1
0x4000ca3	      0xb800000000	                              mov eax, 0	      2260	gui.c	FUNCTION_39	CALL_1
0x4000ca8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2260	gui.c	FUNCTION_39	CALL_1
0x4000caf	            0xf2ae	              repne scasb al, byte [rdi]	      2260	gui.c	FUNCTION_39	CALL_1
0x4000cb1	          0x48f7d1	                                 not rcx	      2260	gui.c	FUNCTION_39	CALL_1
0x4000cb4	        0x448d69ff	                     lea r13d, [rcx - 1]	      2260	gui.c	FUNCTION_39	CALL_1
0x4000cb8	      0xb801000000	                              mov eax, 1	      2262	gui.c	FUNCTION_39	IF_2
0x4000cbd	          0x4585ed	                         test r13d, r13d	      2261	gui.c	FUNCTION_39	IF_2
0x4000cc0	     0xf8467030000	                            je 0x400102d	      2261	gui.c	FUNCTION_39	IF_2
0x4000cc6	    0x8b0500000000	            mov eax, dword [0x04000ccc] 	      2251	gui.c	FUNCTION_39
0x4000ccc	        0x89442414	             mov dword [rsp + 0x14], eax	      2251	gui.c	FUNCTION_39
0x4000cd0	        0x488b0424	                    mov rax, qword [rsp]	      2265	gui.c	FUNCTION_39	IF_3
0x4000cd4	           0xfb600	                   movzx eax, byte [rax]	      2265	gui.c	FUNCTION_39	IF_3
0x4000cd7	          0x8d50ff	                      lea edx, [rax - 1]	      2265	gui.c	FUNCTION_39	IF_3
0x4000cda	          0x80fa01	                               cmp dl, 1	      2265	gui.c	FUNCTION_39	IF_3
0x4000cdd	            0x7749	                            ja 0x4000d28	      2265	gui.c	FUNCTION_39	IF_3
0x4000cdf	            0x3c02	                               cmp al, 2	      2255	gui.c	FUNCTION_39
0x4000ce1	           0xf94c0	                                 sete al	      2255	gui.c	FUNCTION_39
0x4000ce4	           0xfb6c0	                           movzx eax, al	      2255	gui.c	FUNCTION_39
0x4000ce7	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2255	gui.c	FUNCTION_39
0x4000ceb	        0x4183fd01	                             cmp r13d, 1	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4000cef	     0xf859a020000	                           jne 0x4000f8f	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4000cf5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4000cf9	            0x85c0	                           test eax, eax	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4000cfb	     0xf8e8e020000	                           jle 0x4000f8f	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x4000d01	          0x83e801	                              sub eax, 1	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4000d04	        0x89442414	             mov dword [rsp + 0x14], eax	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x4000d08	    0xc74424180100	               mov dword [rsp + 0x18], 1	      2280	gui.c	FUNCTION_39	IF_3
0x4000d10	      0xbd00000000	                              mov ebp, 0	      2281	gui.c	FUNCTION_39	IF_3
0x4000d15	    0x41bd02000000	                             mov r13d, 2	      2279	gui.c	FUNCTION_39	IF_3
0x4000d1b	    0x48c704240000	                      mov qword [rsp], 0	      2276	gui.c	FUNCTION_39	IF_3
0x4000d23	      0xe999020000	                           jmp 0x4000fc1	      2276	gui.c	FUNCTION_39	IF_3
0x4000d28	    0x8b3d00000000	            mov edi, dword [0x04000d2e] 	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000d2e	    0x81ffff000000	                           cmp edi, 0xff	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000d34	            0x7e24	                           jle 0x4000d5a	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x4000d36	      0xe800000000	                          call 0x4000d3b	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x4000d3b	          0x4885c0	                           test rax, rax	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4000d3e	     0xf8468020000	                            je 0x4000fac	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4000d44	        0x480fbf28	                   movsx rbp, word [rax]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x4000d48	    0x488b15000000	            mov rdx, qword [0x04000d4f] 	      2363	gui.c	FUNCTION_39
0x4000d4f	        0x41f6c404	                            test r12b, 4	      2364	gui.c	FUNCTION_39	IF_20
0x4000d53	            0x741d	                            je 0x4000d72	      2364	gui.c	FUNCTION_39	IF_20
0x4000d55	      0xe983020000	                           jmp 0x4000fdd	      2364	gui.c	FUNCTION_39	IF_20
0x4000d5a	          0x4863ef	                         movsxd rbp, edi	      2294	gui.c	FUNCTION_39	ELSE_3
0x4000d5d	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2255	gui.c	FUNCTION_39
0x4000d65	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2253	gui.c	FUNCTION_39
0x4000d6d	      0xe94f020000	                           jmp 0x4000fc1	      2253	gui.c	FUNCTION_39
0x4000d72	        0x4c8b7008	                mov r14, qword [rax + 8]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4000d76	    0x4981fe99d4ff	             cmp r14, 0xffffffffffffd499	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4000d7d	    0x4c0f44350000	           cmove r14, qword [0x04000d85]	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x4000d85	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4000d89	    0x4981ff99d4ff	             cmp r15, 0xffffffffffffd499	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4000d90	        0x4c0f44fa	                          cmove r15, rdx	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x4000d94	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4000d98	      0x4889442408	                mov qword [rsp + 8], rax	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x4000d9d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4000da3	            0x7532	                           jne 0x4000dd7	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4000da5	      0x4c89742408	                mov qword [rsp + 8], r14	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4000daa	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4000db2	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x4000dba	      0xbb00000000	                              mov ebx, 0	      2360	gui.c	FUNCTION_39
0x4000dbf	            0xeb53	                           jmp 0x4000e14	      2360	gui.c	FUNCTION_39
0x4000dc1	    0x4c8b35000000	            mov r14, qword [0x04000dc8] 	      2385	gui.c	FUNCTION_39	ELSE_16
0x4000dc8	      0x4c89742408	                mov qword [rsp + 8], r14	      2386	gui.c	FUNCTION_39	ELSE_16
0x4000dcd	          0x4989c7	                            mov r15, rax	      2385	gui.c	FUNCTION_39	ELSE_16
0x4000dd0	      0xbb00000000	                              mov ebx, 0	      2360	gui.c	FUNCTION_39
0x4000dd5	            0xeb3d	                           jmp 0x4000e14	      2360	gui.c	FUNCTION_39
0x4000dd7	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2360	gui.c	FUNCTION_39
0x4000ddf	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2360	gui.c	FUNCTION_39
0x4000de7	      0xbb00000000	                              mov ebx, 0	      2360	gui.c	FUNCTION_39
0x4000dec	            0xeb26	                           jmp 0x4000e14	      2360	gui.c	FUNCTION_39
0x4000dee	      0x4c89742408	                mov qword [rsp + 8], r14	      2369	gui.c	FUNCTION_39	IF_20
0x4000df3	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2255	gui.c	FUNCTION_39
0x4000dfb	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2253	gui.c	FUNCTION_39
0x4000e03	      0xbb20000000	                           mov ebx, 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x4000e08	            0xeb0a	                           jmp 0x4000e14	      2366	gui.c	FUNCTION_39	IF_20
0x4000e0a	      0x4c89742408	                mov qword [rsp + 8], r14	      2369	gui.c	FUNCTION_39	IF_20
0x4000e0f	      0xbb20000000	                           mov ebx, 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x4000e14	        0x40f6c521	                          test bpl, 0x21	      2389	gui.c	FUNCTION_39	IF_25
0x4000e18	            0x7412	                            je 0x4000e2c	      2389	gui.c	FUNCTION_39	IF_25
0x4000e1a	          0x4c89ff	                            mov rdi, r15	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000e1d	      0xe800000000	                          call 0x4000e22	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x4000e22	          0x4c89f7	                            mov rdi, r14	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000e25	      0xe800000000	                          call 0x4000e2a	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000e2a	            0xeb10	                           jmp 0x4000e3c	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x4000e2c	          0x4c89f7	                            mov rdi, r14	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x4000e2f	      0xe800000000	                          call 0x4000e34	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x4000e34	          0x4c89ff	                            mov rdi, r15	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4000e37	      0xe800000000	                          call 0x4000e3c	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x4000e3c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2407	gui.c	FUNCTION_39	CALL_11
0x4000e41	      0xe800000000	                          call 0x4000e46	      2407	gui.c	FUNCTION_39	CALL_11
0x4000e46	          0x4589e6	                          mov r14d, r12d	      2410	gui.c	FUNCTION_39	IF_26
0x4000e49	        0x4183e610	                          and r14d, 0x10	      2410	gui.c	FUNCTION_39	IF_26
0x4000e4d	            0x750d	                           jne 0x4000e5c	      2410	gui.c	FUNCTION_39	IF_26
0x4000e4f	    0x8b3d00000000	            mov edi, dword [0x04000e55] 	      2411	gui.c	FUNCTION_39	CALL_12
0x4000e55	            0x89fe	                            mov esi, edi	      2411	gui.c	FUNCTION_39	CALL_12
0x4000e57	      0xe800000000	                          call 0x4000e5c	      2411	gui.c	FUNCTION_39	CALL_12
0x4000e5c	          0x4889ea	                            mov rdx, rbp	      2415	gui.c	FUNCTION_39	IF_27
0x4000e5f	          0x83e222	                           and edx, 0x22	      2415	gui.c	FUNCTION_39	IF_27
0x4000e62	            0x89d8	                            mov eax, ebx	      2416	gui.c	FUNCTION_39	IF_27
0x4000e64	          0x83c802	                               or eax, 2	      2416	gui.c	FUNCTION_39	IF_27
0x4000e67	          0x4885d2	                           test rdx, rdx	      2416	gui.c	FUNCTION_39	IF_27
0x4000e6a	           0xf45d8	                         cmovne ebx, eax	      2416	gui.c	FUNCTION_39	IF_27
0x4000e6d	      0x837c241000	               cmp dword [rsp + 0x10], 0	      2423	gui.c	FUNCTION_39	IF_28
0x4000e72	            0x7416	                            je 0x4000e8a	      2423	gui.c	FUNCTION_39	IF_28
0x4000e74	            0x89d8	                            mov eax, ebx	      2423	gui.c	FUNCTION_39	IF_28
0x4000e76	          0x83e002	                              and eax, 2	      2423	gui.c	FUNCTION_39	IF_28
0x4000e79	     0xf8506010000	                           jne 0x4000f85	      2423	gui.c	FUNCTION_39	IF_28
0x4000e7f	        0x40f6c504	                             test bpl, 4	      2423	gui.c	FUNCTION_39	IF_28
0x4000e83	            0x7416	                            je 0x4000e9b	      2423	gui.c	FUNCTION_39	IF_28
0x4000e85	      0xe9a3010000	                           jmp 0x400102d	      2423	gui.c	FUNCTION_39	IF_28
0x4000e8a	          0x4889ea	                            mov rdx, rbp	      2429	gui.c	FUNCTION_39	IF_29
0x4000e8d	          0x83e204	                              and edx, 4	      2429	gui.c	FUNCTION_39	IF_29
0x4000e90	            0x89d8	                            mov eax, ebx	      2430	gui.c	FUNCTION_39	IF_29
0x4000e92	          0x83c810	                            or eax, 0x10	      2430	gui.c	FUNCTION_39	IF_29
0x4000e95	          0x4885d2	                           test rdx, rdx	      2430	gui.c	FUNCTION_39	IF_29
0x4000e98	           0xf45d8	                         cmovne ebx, eax	      2430	gui.c	FUNCTION_39	IF_29
0x4000e9b	          0x4889ea	                            mov rdx, rbp	      2433	gui.c	FUNCTION_39	IF_30
0x4000e9e	          0x83e208	                              and edx, 8	      2433	gui.c	FUNCTION_39	IF_30
0x4000ea1	            0x89d8	                            mov eax, ebx	      2434	gui.c	FUNCTION_39	IF_30
0x4000ea3	          0x83c804	                               or eax, 4	      2434	gui.c	FUNCTION_39	IF_30
0x4000ea6	          0x4885d2	                           test rdx, rdx	      2434	gui.c	FUNCTION_39	IF_30
0x4000ea9	           0xf45d8	                         cmovne ebx, eax	      2434	gui.c	FUNCTION_39	IF_30
0x4000eac	          0x4889ea	                            mov rdx, rbp	      2442	gui.c	FUNCTION_39	IF_32
0x4000eaf	          0x83e210	                           and edx, 0x10	      2442	gui.c	FUNCTION_39	IF_32
0x4000eb2	            0x89d8	                            mov eax, ebx	      2443	gui.c	FUNCTION_39	IF_32
0x4000eb4	          0x83c808	                               or eax, 8	      2443	gui.c	FUNCTION_39	IF_32
0x4000eb7	          0x4885d2	                           test rdx, rdx	      2443	gui.c	FUNCTION_39	IF_32
0x4000eba	           0xf45d8	                         cmovne ebx, eax	      2443	gui.c	FUNCTION_39	IF_32
0x4000ebd	    0x81e580000000	                           and ebp, 0x80	      2446	gui.c	FUNCTION_39	IF_33
0x4000ec3	            0x89d8	                            mov eax, ebx	      2447	gui.c	FUNCTION_39	IF_33
0x4000ec5	          0x83c840	                            or eax, 0x40	      2447	gui.c	FUNCTION_39	IF_33
0x4000ec8	          0x4885ed	                           test rbp, rbp	      2447	gui.c	FUNCTION_39	IF_33
0x4000ecb	           0xf45d8	                         cmovne ebx, eax	      2447	gui.c	FUNCTION_39	IF_33
0x4000ece	          0x4489e0	                           mov eax, r12d	      2450	gui.c	FUNCTION_39	IF_34
0x4000ed1	          0x83e008	                              and eax, 8	      2450	gui.c	FUNCTION_39	IF_34
0x4000ed4	          0x4189d8	                            mov r8d, ebx	      2451	gui.c	FUNCTION_39	IF_34
0x4000ed7	        0x4183c801	                               or r8d, 1	      2451	gui.c	FUNCTION_39	IF_34
0x4000edb	            0x85c0	                           test eax, eax	      2451	gui.c	FUNCTION_39	IF_34
0x4000edd	        0x440f44c3	                          cmove r8d, ebx	      2458	gui.c	FUNCTION_39	CALL_13
0x4000ee1	          0x4489e9	                           mov ecx, r13d	      2458	gui.c	FUNCTION_39	CALL_13
0x4000ee4	        0x488b1424	                    mov rdx, qword [rsp]	      2458	gui.c	FUNCTION_39	CALL_13
0x4000ee8	      0x448b7c2414	           mov r15d, dword [rsp + 0x14] 	      2458	gui.c	FUNCTION_39	CALL_13
0x4000eed	          0x4489fe	                           mov esi, r15d	      2458	gui.c	FUNCTION_39	CALL_13
0x4000ef0	    0x8b3d00000000	            mov edi, dword [0x04000ef6] 	      2458	gui.c	FUNCTION_39	CALL_13
0x4000ef6	      0xe800000000	                          call 0x4000efb	      2458	gui.c	FUNCTION_39	CALL_13
0x4000efb	            0x89c3	                            mov ebx, eax	      2458	gui.c	FUNCTION_39	CALL_13
0x4000efd	        0x41f6c40c	                          test r12b, 0xc	      2593	gui.c	FUNCTION_39	IF_49
0x4000f01	     0xf85cc000000	                           jne 0x4000fd3	      2593	gui.c	FUNCTION_39	IF_49
0x4000f07	          0x4489f8	                           mov eax, r15d	      2594	gui.c	FUNCTION_39	IF_49
0x4000f0a	             0x1d8	                            add eax, ebx	      2594	gui.c	FUNCTION_39	IF_49
0x4000f0c	    0x890500000000	            mov dword [0x04000f12], eax 	      2594	gui.c	FUNCTION_39	IF_49
0x4000f12	          0x4585f6	                         test r14d, r14d	      2597	gui.c	FUNCTION_39	IF_50
0x4000f15	     0xf85e6000000	                           jne 0x4001001	      2597	gui.c	FUNCTION_39	IF_50
0x4000f1b	    0x8b0500000000	            mov eax, dword [0x04000f21] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f21	    0x390500000000	            cmp dword [0x04000f27], eax 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f27	            0x751b	                           jne 0x4000f44	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f29	    0x8b0500000000	            mov eax, dword [0x04000f2f] 	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f2f	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f33	            0x39f0	                            cmp eax, esi	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f35	            0x7c0d	                            jl 0x4000f44	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f37	             0x1f3	                            add ebx, esi	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f39	            0x39d8	                            cmp eax, ebx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f3b	            0x7d07	                           jge 0x4000f44	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f3d	    0xc60500000000	                mov byte [0x04000f44], 0	      2606	gui.c	FUNCTION_39	IF_51	IF_52
0x4000f44	      0x837c241800	               cmp dword [rsp + 0x18], 0	      2610	gui.c	FUNCTION_39	IF_53
0x4000f49	            0x7415	                            je 0x4000f60	      2610	gui.c	FUNCTION_39	IF_53
0x4000f4b	    0x8b1500000000	            mov edx, dword [0x04000f51] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4000f51	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4000f55	    0x8b3d00000000	            mov edi, dword [0x04000f5b] 	      2612	gui.c	FUNCTION_39	CALL_27
0x4000f5b	      0xe800000000	                          call 0x4000f60	      2612	gui.c	FUNCTION_39	CALL_27
0x4000f60	      0xb801000000	                              mov eax, 1	      2620	gui.c	FUNCTION_39
0x4000f65	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      2615	gui.c	FUNCTION_39	IF_54
0x4000f6a	     0xf84bd000000	                            je 0x400102d	      2615	gui.c	FUNCTION_39	IF_54
0x4000f70	    0x8b3d00000000	            mov edi, dword [0x04000f76] 	      2616	gui.c	FUNCTION_39	CALL_28
0x4000f76	      0xe800000000	                          call 0x4000f7b	      2616	gui.c	FUNCTION_39	CALL_28
0x4000f7b	      0xb801000000	                              mov eax, 1	      2620	gui.c	FUNCTION_39
0x4000f80	      0xe9a8000000	                           jmp 0x400102d	      2620	gui.c	FUNCTION_39
0x4000f85	      0xb800000000	                              mov eax, 0	      2424	gui.c	FUNCTION_39	IF_28
0x4000f8a	      0xe99e000000	                           jmp 0x400102d	      2424	gui.c	FUNCTION_39	IF_28
0x4000f8f	    0xc74424180100	               mov dword [rsp + 0x18], 1	      2280	gui.c	FUNCTION_39	IF_3
0x4000f97	      0xbd00000000	                              mov ebp, 0	      2281	gui.c	FUNCTION_39	IF_3
0x4000f9c	    0x41bd02000000	                             mov r13d, 2	      2279	gui.c	FUNCTION_39	IF_3
0x4000fa2	    0x48c704240000	                      mov qword [rsp], 0	      2276	gui.c	FUNCTION_39	IF_3
0x4000faa	            0xeb15	                           jmp 0x4000fc1	      2276	gui.c	FUNCTION_39	IF_3
0x4000fac	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2255	gui.c	FUNCTION_39
0x4000fb4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2253	gui.c	FUNCTION_39
0x4000fbc	      0xbd00000000	                              mov ebp, 0	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x4000fc1	    0x488b05000000	            mov rax, qword [0x04000fc8] 	      2363	gui.c	FUNCTION_39
0x4000fc8	        0x41f6c404	                            test r12b, 4	      2364	gui.c	FUNCTION_39	IF_20
0x4000fcc	            0x7521	                           jne 0x4000fef	      2364	gui.c	FUNCTION_39	IF_20
0x4000fce	      0xe9eefdffff	                           jmp 0x4000dc1	      2364	gui.c	FUNCTION_39	IF_20
0x4000fd3	          0x4585f6	                         test r14d, r14d	      2597	gui.c	FUNCTION_39	IF_50
0x4000fd6	            0x753f	                           jne 0x4001017	      2597	gui.c	FUNCTION_39	IF_50
0x4000fd8	      0xe967ffffff	                           jmp 0x4000f44	      2597	gui.c	FUNCTION_39	IF_50
0x4000fdd	    0x833d00000000	               cmp dword [0x04000fe4], 0	      2364	gui.c	FUNCTION_39	IF_20
0x4000fe4	     0xf8504feffff	                           jne 0x4000dee	      2364	gui.c	FUNCTION_39	IF_20
0x4000fea	      0xe983fdffff	                           jmp 0x4000d72	      2364	gui.c	FUNCTION_39	IF_20
0x4000fef	    0x833d00000000	               cmp dword [0x04000ff6], 0	      2364	gui.c	FUNCTION_39	IF_20
0x4000ff6	     0xf850efeffff	                           jne 0x4000e0a	      2364	gui.c	FUNCTION_39	IF_20
0x4000ffc	      0xe9c0fdffff	                           jmp 0x4000dc1	      2364	gui.c	FUNCTION_39	IF_20
0x4001001	            0x89da	                            mov edx, ebx	      2598	gui.c	FUNCTION_39	CALL_26
0x4001003	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2598	gui.c	FUNCTION_39	CALL_26
0x4001007	    0x8b3d00000000	            mov edi, dword [0x0400100d] 	      2598	gui.c	FUNCTION_39	CALL_26
0x400100d	      0xe800000000	                          call 0x4001012	      2598	gui.c	FUNCTION_39	CALL_26
0x4001012	      0xe904ffffff	                           jmp 0x4000f1b	      2598	gui.c	FUNCTION_39	CALL_26
0x4001017	            0x89c2	                            mov edx, eax	      2598	gui.c	FUNCTION_39	CALL_26
0x4001019	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2598	gui.c	FUNCTION_39	CALL_26
0x400101d	    0x8b3d00000000	            mov edi, dword [0x04001023] 	      2598	gui.c	FUNCTION_39	CALL_26
0x4001023	      0xe800000000	                          call 0x4001028	      2598	gui.c	FUNCTION_39	CALL_26
0x4001028	      0xe917ffffff	                           jmp 0x4000f44	      2598	gui.c	FUNCTION_39	CALL_26
0x400102d	        0x4883c428	                           add rsp, 0x28	      2621	gui.c	FUNCTION_39
0x4001031	              0x5b	                                 pop rbx	      2621	gui.c	FUNCTION_39
0x4001032	              0x5d	                                 pop rbp	      2621	gui.c	FUNCTION_39
0x4001033	            0x415c	                                 pop r12	      2621	gui.c	FUNCTION_39
0x4001035	            0x415d	                                 pop r13	      2621	gui.c	FUNCTION_39
0x4001037	            0x415e	                                 pop r14	      2621	gui.c	FUNCTION_39
0x4001039	            0x415f	                                 pop r15	      2621	gui.c	FUNCTION_39
0x400103b	              0xc3	                                     ret	      2621	gui.c	FUNCTION_39
gui_set_shellsize	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,13:FOR,0:CALL,21:DO,0	183
0x4003220	            0x4157	                                push r15	      1573	gui.c	FUNCTION_23
0x4003222	            0x4156	                                push r14	      1573	gui.c	FUNCTION_23
0x4003224	            0x4155	                                push r13	      1573	gui.c	FUNCTION_23
0x4003226	            0x4154	                                push r12	      1573	gui.c	FUNCTION_23
0x4003228	              0x55	                                push rbp	      1573	gui.c	FUNCTION_23
0x4003229	              0x53	                                push rbx	      1573	gui.c	FUNCTION_23
0x400322a	        0x4883ec38	                           sub rsp, 0x38	      1573	gui.c	FUNCTION_23
0x400322e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1573	gui.c	FUNCTION_23
0x4003237	      0x4889442428	             mov qword [rsp + 0x28], rax	      1573	gui.c	FUNCTION_23
0x400323c	            0x31c0	                            xor eax, eax	      1573	gui.c	FUNCTION_23
0x400323e	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x4003246	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x400324e	    0x833d00000000	               cmp dword [0x04003255], 0	      1588	gui.c	FUNCTION_23	IF_1
0x4003255	     0xf8482020000	                            je 0x40034dd	      1588	gui.c	FUNCTION_23	IF_1
0x400325b	          0x4189fc	                           mov r12d, edi	      1588	gui.c	FUNCTION_23	IF_1
0x400325e	            0x89f5	                            mov ebp, esi	      1588	gui.c	FUNCTION_23	IF_1
0x4003260	          0x4189d5	                           mov r13d, edx	      1588	gui.c	FUNCTION_23	IF_1
0x4003263	            0x85ff	                           test edi, edi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003265	            0x7529	                           jne 0x4003290	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003267	      0xbe6b000000	                           mov esi, 0x6b	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400326c	    0x488b3d000000	            mov rdi, qword [0x04003273] 	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003273	      0xe800000000	                          call 0x4003278	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4003278	          0x4885c0	                           test rax, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400327b	            0x7509	                           jne 0x4003286	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400327d	      0xe800000000	                          call 0x4003282	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003282	            0x85c0	                           test eax, eax	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003284	            0x740a	                            je 0x4003290	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4003286	      0xe800000000	                          call 0x400328b	      1597	gui.c	FUNCTION_23	IF_2	CALL_3
0x400328b	      0xe94d020000	                           jmp 0x40034dd	      1598	gui.c	FUNCTION_23	IF_2
0x4003290	      0xe800000000	                          call 0x4003295	      1602	gui.c	FUNCTION_23	CALL_4
0x4003295	          0x4189c6	                           mov r14d, eax	      1602	gui.c	FUNCTION_23	CALL_4
0x4003298	      0xe800000000	                          call 0x400329d	      1603	gui.c	FUNCTION_23	CALL_5
0x400329d	          0x4189c7	                           mov r15d, eax	      1603	gui.c	FUNCTION_23	CALL_5
0x40032a0	            0x85ed	                           test ebp, ebp	      1604	gui.c	FUNCTION_23	IF_3
0x40032a2	            0x740f	                            je 0x40032b3	      1604	gui.c	FUNCTION_23	IF_3
0x40032a4	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1606	gui.c	FUNCTION_23	CALL_6
0x40032a9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1606	gui.c	FUNCTION_23	CALL_6
0x40032ae	      0xe800000000	                          call 0x40032b3	      1606	gui.c	FUNCTION_23	CALL_6
0x40032b3	    0x8b1d00000000	            mov ebx, dword [0x040032b9] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x40032b9	     0xfaf1d000000	            imul ebx, dword [0x040032c0]	      1618	gui.c	FUNCTION_23	ELSE_1
0x40032c0	          0x4401f3	                           add ebx, r14d	      1618	gui.c	FUNCTION_23	ELSE_1
0x40032c3	    0x8b0500000000	            mov eax, dword [0x040032c9] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x40032c9	     0xfaf05000000	            imul eax, dword [0x040032d0]	      1619	gui.c	FUNCTION_23	ELSE_1
0x40032d0	          0x4401f8	                           add eax, r15d	      1619	gui.c	FUNCTION_23	ELSE_1
0x40032d3	        0x89442404	                mov dword [rsp + 4], eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x40032d7	            0x85ed	                           test ebp, ebp	      1622	gui.c	FUNCTION_23	IF_5
0x40032d9	     0xf84ca000000	                            je 0x40033a9	      1622	gui.c	FUNCTION_23	IF_5
0x40032df	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x40032e4	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x40032e9	      0xe800000000	                          call 0x40032ee	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x40032ee	    0xc74424080000	                  mov dword [rsp + 8], 0	      1584	gui.c	FUNCTION_23
0x40032f6	        0x41f6c502	                            test r13b, 2	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x40032fa	     0xf84ce010000	                            je 0x40034ce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003300	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003304	            0x39c3	                            cmp ebx, eax	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4003306	     0xf8ec2010000	                           jle 0x40034ce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x400330c	    0x8b1d00000000	            mov ebx, dword [0x04003312] 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003312	          0x4429f0	                           sub eax, r14d	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003315	              0x99	                                     cdq	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003316	            0xf7fb	                                idiv ebx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003318	          0x4863d0	                         movsxd rdx, eax	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400331b	        0x4883fa0c	                            cmp rdx, 0xc	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400331f	      0xb80c000000	                            mov eax, 0xc	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003324	        0x480f4dc2	                         cmovge rax, rdx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4003328	    0x488905000000	            mov qword [0x0400332f], rax 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400332f	           0xfafc3	                           imul eax, ebx	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4003332	        0x428d1c30	                    lea ebx, [rax + r14]	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x4003336	    0xc74424080100	                  mov dword [rsp + 8], 1	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x400333e	      0xe98b010000	                           jmp 0x40034ce	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x4003343	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x4003347	        0x39442404	                cmp dword [rsp + 4], eax	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x400334b	            0x7e31	                           jle 0x400337e	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x400334d	          0x4429f8	                           sub eax, r15d	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003350	              0x99	                                     cdq	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003351	    0xf73d00000000	                 idiv dword [0x04003357]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003357	            0x4898	                                    cdqe	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003359	    0x488905000000	            mov qword [0x04003360], rax 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4003360	      0xe800000000	                          call 0x4003365	      1638	gui.c	FUNCTION_23	IF_5	IF_8	CALL_9
0x4003365	    0x8b0500000000	            mov eax, dword [0x0400336b] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x400336b	     0xfaf05000000	            imul eax, dword [0x04003372]	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003372	          0x4401f8	                           add eax, r15d	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003375	        0x89442404	                mov dword [rsp + 4], eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4003379	      0x8344240801	                  add dword [rsp + 8], 1	      1641	gui.c	FUNCTION_23	IF_5	IF_8
0x400337e	      0x837c240802	                  cmp dword [rsp + 8], 2	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003383	            0x741e	                            je 0x40033a3	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003385	            0x89d8	                            mov eax, ebx	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003387	     0x30500000000	             add eax, dword [0x0400338d]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x400338d	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003391	            0x7c16	                            jl 0x40033a9	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4003393	        0x8b442404	                mov eax, dword [rsp + 4]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x4003397	     0x30500000000	             add eax, dword [0x0400339d]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x400339d	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40033a1	            0x7c06	                            jl 0x40033a9	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40033a3	    0x41bc00000000	                             mov r12d, 0	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x40033a9	      0xe800000000	                          call 0x40033ae	      1651	gui.c	FUNCTION_23	CALL_10
0x40033ae	    0x488b05000000	            mov rax, qword [0x040033b5] 	      1652	gui.c	FUNCTION_23
0x40033b5	    0x890500000000	            mov dword [0x040033bb], eax 	      1652	gui.c	FUNCTION_23
0x40033bb	    0x488b05000000	            mov rax, qword [0x040033c2] 	      1653	gui.c	FUNCTION_23
0x40033c2	    0x890500000000	            mov dword [0x040033c8], eax 	      1653	gui.c	FUNCTION_23
0x40033c8	    0x8b0500000000	            mov eax, dword [0x040033ce] 	      1655	gui.c	FUNCTION_23
0x40033ce	          0x8d0440	                  lea eax, [rax + rax*2]	      1655	gui.c	FUNCTION_23
0x40033d1	        0x418d0486	                  lea eax, [r14 + rax*4]	      1655	gui.c	FUNCTION_23
0x40033d5	        0x89442408	                mov dword [rsp + 8], eax	      1655	gui.c	FUNCTION_23
0x40033d9	    0x8b0500000000	            mov eax, dword [0x040033df] 	      1656	gui.c	FUNCTION_23
0x40033df	        0x418d0447	                  lea eax, [r15 + rax*2]	      1656	gui.c	FUNCTION_23
0x40033e3	        0x8944240c	              mov dword [rsp + 0xc], eax	      1656	gui.c	FUNCTION_23
0x40033e7	      0xe800000000	                          call 0x40033ec	      1657	gui.c	FUNCTION_23	CALL_11
0x40033ec	     0xfaf05000000	            imul eax, dword [0x040033f3]	      1657	gui.c	FUNCTION_23	CALL_11
0x40033f3	         0x344240c	              add eax, dword [rsp + 0xc]	      1657	gui.c	FUNCTION_23	CALL_11
0x40033f7	        0x8944240c	              mov dword [rsp + 0xc], eax	      1657	gui.c	FUNCTION_23	CALL_11
0x40033fb	          0x4585e4	                         test r12d, r12d	      1660	gui.c	FUNCTION_23	IF_10
0x40033fe	            0x743e	                            je 0x400343e	      1660	gui.c	FUNCTION_23	IF_10
0x4003400	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4003405	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x400340a	      0xe800000000	                          call 0x400340f	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x400340f	            0x89d8	                            mov eax, ebx	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003411	     0x30500000000	             add eax, dword [0x04003417]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4003417	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x400341b	            0x7c13	                            jl 0x4003430	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x400341d	    0x8b0500000000	            mov eax, dword [0x04003423] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003423	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003427	          0x8d0441	                  lea eax, [rcx + rax*2]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x400342a	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x400342e	            0x7d0e	                           jge 0x400343e	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4003430	      0xe800000000	                          call 0x4003435	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003435	            0x85c0	                           test eax, eax	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003437	            0x7405	                            je 0x400343e	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4003439	      0xe800000000	                          call 0x400343e	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x400343e	        0x4883ec08	                              sub rsp, 8	      1672	gui.c	FUNCTION_23	CALL_15
0x4003442	            0x4155	                                push r13	      1672	gui.c	FUNCTION_23	CALL_15
0x4003444	          0x4589f9	                           mov r9d, r15d	      1672	gui.c	FUNCTION_23	CALL_15
0x4003447	          0x4589f0	                           mov r8d, r14d	      1672	gui.c	FUNCTION_23	CALL_15
0x400344a	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1672	gui.c	FUNCTION_23	CALL_15
0x400344e	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1672	gui.c	FUNCTION_23	CALL_15
0x4003452	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1672	gui.c	FUNCTION_23	CALL_15
0x4003456	            0x89df	                            mov edi, ebx	      1672	gui.c	FUNCTION_23	CALL_15
0x4003458	      0xe800000000	                          call 0x400345d	      1672	gui.c	FUNCTION_23	CALL_15
0x400345d	        0x4883c410	                           add rsp, 0x10	      1675	gui.c	FUNCTION_23	IF_12
0x4003461	            0x85ed	                           test ebp, ebp	      1675	gui.c	FUNCTION_23	IF_12
0x4003463	            0x7451	                            je 0x40034b6	      1675	gui.c	FUNCTION_23	IF_12
0x4003465	      0x837c242000	               cmp dword [rsp + 0x20], 0	      1675	gui.c	FUNCTION_23	IF_12
0x400346a	            0x784a	                            js 0x40034b6	      1675	gui.c	FUNCTION_23	IF_12
0x400346c	      0x837c242400	               cmp dword [rsp + 0x24], 0	      1675	gui.c	FUNCTION_23	IF_12
0x4003471	            0x7843	                            js 0x40034b6	      1675	gui.c	FUNCTION_23	IF_12
0x4003473	      0xe800000000	                          call 0x4003478	      1680	gui.c	FUNCTION_23	IF_12	CALL_16
0x4003478	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400347d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003482	      0xe800000000	                          call 0x4003487	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003487	          0x83f801	                              cmp eax, 1	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400348a	            0x752a	                           jne 0x40034b6	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400348c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003490	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003492	            0x7807	                            js 0x400349b	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003494	      0x837c242400	               cmp dword [rsp + 0x24], 0	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4003499	            0x791b	                           jns 0x40034b6	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400349b	      0xbf00000000	                              mov edi, 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034a0	      0x837c242400	               cmp dword [rsp + 0x24], 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034a5	            0x89fe	                            mov esi, edi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034a7	       0xf49742424	          cmovns esi, dword [rsp + 0x24]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034ac	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034ae	           0xf49f8	                         cmovns edi, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034b1	      0xe800000000	                          call 0x40034b6	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x40034b6	            0x89df	                            mov edi, ebx	      1685	gui.c	FUNCTION_23	CALL_19
0x40034b8	      0xe883cbffff	        call sym.gui_position_components	      1685	gui.c	FUNCTION_23	CALL_19
0x40034bd	      0xbf01000000	                              mov edi, 1	      1686	gui.c	FUNCTION_23	CALL_20
0x40034c2	      0xe800000000	                          call 0x40034c7	      1686	gui.c	FUNCTION_23	CALL_20
0x40034c7	      0xe800000000	                          call 0x40034cc	      1687	gui.c	FUNCTION_23	CALL_21
0x40034cc	            0xeb0f	                           jmp 0x40034dd	      1687	gui.c	FUNCTION_23	CALL_21
0x40034ce	        0x41f6c501	                            test r13b, 1	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40034d2	     0xf856bfeffff	                           jne 0x4003343	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40034d8	      0xe9a8feffff	                           jmp 0x4003385	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40034dd	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1688	gui.c	FUNCTION_23
0x40034e2	    0x644833042528	                xor rax, qword fs:[0x28]	      1688	gui.c	FUNCTION_23
0x40034eb	            0x7405	                            je 0x40034f2	      1688	gui.c	FUNCTION_23
0x40034ed	      0xe800000000	                          call 0x40034f2	      1688	gui.c	FUNCTION_23
0x40034f2	        0x4883c438	                           add rsp, 0x38	      1688	gui.c	FUNCTION_23
0x40034f6	              0x5b	                                 pop rbx	      1688	gui.c	FUNCTION_23
0x40034f7	              0x5d	                                 pop rbp	      1688	gui.c	FUNCTION_23
0x40034f8	            0x415c	                                 pop r12	      1688	gui.c	FUNCTION_23
0x40034fa	            0x415d	                                 pop r13	      1688	gui.c	FUNCTION_23
0x40034fc	            0x415e	                                 pop r14	      1688	gui.c	FUNCTION_23
0x40034fe	            0x415f	                                 pop r15	      1688	gui.c	FUNCTION_23
0x4003500	              0xc3	                                     ret	      1688	gui.c	FUNCTION_23
gui_new_shellsize	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	2
0x4000ab4	      0xe800000000	                          call 0x4000ab9	      1696	gui.c	FUNCTION_24	CALL_1
0x4000ab9	            0xf3c3	                                     ret	      1696	gui.c	FUNCTION_24	CALL_1
gui_redraw	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,6:DO,0	37
0x4001d0a	              0x53	                                push rbx	      2674	gui.c	FUNCTION_41
0x4001d0b	    0x448b0d000000	            mov r9d, dword [0x04001d12] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4001d12	    0x448b05000000	            mov r8d, dword [0x04001d19] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4001d19	    0x8b1d00000000	            mov ebx, dword [0x04001d1f] 	      2678	gui.c	FUNCTION_41	CALL_2
0x4001d1f	        0x8d4417ff	                lea eax, [rdi + rdx - 1]	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d23	          0x4429c8	                            sub eax, r9d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d26	              0x99	                                     cdq	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d27	            0xf7fb	                                idiv ebx	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d29	          0x4189c2	                           mov r10d, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d2c	        0x8d440eff	                lea eax, [rsi + rcx - 1]	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d30	          0x4429c8	                            sub eax, r9d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d33	              0x99	                                     cdq	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d34	          0x41f7f8	                                idiv r8d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d37	          0x4189c3	                           mov r11d, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d3a	            0x89f8	                            mov eax, edi	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d3c	          0x4429c8	                            sub eax, r9d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d3f	              0x99	                                     cdq	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d40	            0xf7fb	                                idiv ebx	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d42	            0x89c7	                            mov edi, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d44	            0x89f0	                            mov eax, esi	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d46	          0x4429c8	                            sub eax, r9d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d49	              0x99	                                     cdq	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d4a	          0x41f7f8	                                idiv r8d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d4d	    0x41b810000000	                           mov r8d, 0x10	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d53	          0x4489d1	                           mov ecx, r10d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d56	          0x4489da	                           mov edx, r11d	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d59	            0x89fe	                            mov esi, edi	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d5b	            0x89c7	                            mov edi, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d5d	      0xe800000000	                          call 0x4001d62	      2682	gui.c	FUNCTION_41	CALL_5
0x4001d62	    0x8b0500000000	            mov eax, dword [0x04001d68] 	      2691	gui.c	FUNCTION_41	IF_1
0x4001d68	    0x390500000000	            cmp dword [0x04001d6e], eax 	      2691	gui.c	FUNCTION_41	IF_1
0x4001d6e	            0x750f	                           jne 0x4001d7f	      2691	gui.c	FUNCTION_41	IF_1
0x4001d70	      0xbe01000000	                              mov esi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x4001d75	      0xbf01000000	                              mov edi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x4001d7a	      0xe800000000	                          call 0x4001d7f	      2692	gui.c	FUNCTION_41	CALL_6
0x4001d7f	              0x5b	                                 pop rbx	      2693	gui.c	FUNCTION_41
0x4001d80	              0xc3	                                     ret	      2693	gui.c	FUNCTION_41
ex_gui	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,3:FOR,0:CALL,7:DO,0	37
0x4005445	              0x53	                                push rbx	      4989	gui.c	FUNCTION_82
0x4005446	          0x4889fb	                            mov rbx, rdi	      4989	gui.c	FUNCTION_82
0x4005449	          0x488b07	                    mov rax, qword [rdi]	      4990	gui.c	FUNCTION_82
0x400544c	          0x80382d	                    cmp byte [rax], 0x2d	      4997	gui.c	FUNCTION_82	IF_1
0x400544f	            0x7538	                           jne 0x4005489	      4997	gui.c	FUNCTION_82	IF_1
0x4005451	         0xfb65001	               movzx edx, byte [rax + 1]	      4998	gui.c	FUNCTION_82	IF_1
0x4005455	            0x89d1	                            mov ecx, edx	      4998	gui.c	FUNCTION_82	IF_1
0x4005457	          0x83e1fb	                     and ecx, 0xfffffffb	      4998	gui.c	FUNCTION_82	IF_1
0x400545a	          0x80f962	                            cmp cl, 0x62	      4998	gui.c	FUNCTION_82	IF_1
0x400545d	            0x752a	                           jne 0x4005489	      4998	gui.c	FUNCTION_82	IF_1
0x400545f	         0xfb64002	               movzx eax, byte [rax + 2]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4005463	            0xa8df	                           test al, 0xdf	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4005465	            0x7404	                            je 0x400546b	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4005467	            0x3c09	                               cmp al, 9	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4005469	            0x751e	                           jne 0x4005489	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x400546b	          0x80fa62	                            cmp dl, 0x62	      5001	gui.c	FUNCTION_82	IF_1
0x400546e	           0xf94c0	                                 sete al	      5001	gui.c	FUNCTION_82	IF_1
0x4005471	           0xfb6c0	                           movzx eax, al	      5001	gui.c	FUNCTION_82	IF_1
0x4005474	    0x890500000000	            mov dword [0x0400547a], eax 	      5001	gui.c	FUNCTION_82	IF_1
0x400547a	          0x488b03	                    mov rax, qword [rbx]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x400547d	        0x488d7802	                      lea rdi, [rax + 2]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4005481	      0xe800000000	                          call 0x4005486	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4005486	          0x488903	                    mov qword [rbx], rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4005489	    0x833d00000000	               cmp dword [0x04005490], 0	      5004	gui.c	FUNCTION_82	IF_2
0x4005490	            0x750f	                           jne 0x40054a1	      5004	gui.c	FUNCTION_82	IF_2
0x4005492	      0xe800000000	                          call 0x4005497	      5008	gui.c	FUNCTION_82	IF_2	CALL_3
0x4005497	      0xe800000000	                          call 0x400549c	      5009	gui.c	FUNCTION_82	IF_2	CALL_4
0x400549c	      0xe800000000	                          call 0x40054a1	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x40054a1	          0x488b03	                    mov rax, qword [rbx]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40054a4	           0xfb638	                   movzx edi, byte [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40054a7	      0xe800000000	                          call 0x40054ac	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40054ac	            0x85c0	                           test eax, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40054ae	            0x7508	                           jne 0x40054b8	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x40054b0	          0x4889df	                            mov rdi, rbx	      5015	gui.c	FUNCTION_82	CALL_7
0x40054b3	      0xe800000000	                          call 0x40054b8	      5015	gui.c	FUNCTION_82	CALL_7
0x40054b8	              0x5b	                                 pop rbx	      5016	gui.c	FUNCTION_82
0x40054b9	              0xc3	                                     ret	      5016	gui.c	FUNCTION_82
send_tabline_menu_event	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,2:DO,0	30
0x4002b91	              0x55	                                push rbp	      3857	gui.c	FUNCTION_59
0x4002b92	              0x53	                                push rbx	      3857	gui.c	FUNCTION_59
0x4002b93	        0x4883ec18	                           sub rsp, 0x18	      3857	gui.c	FUNCTION_59
0x4002b97	    0x64488b042528	                mov rax, qword fs:[0x28]	      3857	gui.c	FUNCTION_59
0x4002ba0	      0x4889442408	                mov qword [rsp + 8], rax	      3857	gui.c	FUNCTION_59
0x4002ba5	            0x31c0	                            xor eax, eax	      3857	gui.c	FUNCTION_59
0x4002ba7	    0x8b0500000000	            mov eax, dword [0x04002bad] 	      3861	gui.c	FUNCTION_59	IF_1
0x4002bad	            0x85c0	                           test eax, eax	      3861	gui.c	FUNCTION_59	IF_1
0x4002baf	            0x7534	                           jne 0x4002be5	      3861	gui.c	FUNCTION_59	IF_1
0x4002bb1	            0x89fd	                            mov ebp, edi	      3861	gui.c	FUNCTION_59	IF_1
0x4002bb3	            0x89f3	                            mov ebx, esi	      3861	gui.c	FUNCTION_59	IF_1
0x4002bb5	        0xc604249b	                    mov byte [rsp], 0x9b	      3864	gui.c	FUNCTION_59
0x4002bb9	      0xc6442401ef	                mov byte [rsp + 1], 0xef	      3865	gui.c	FUNCTION_59
0x4002bbe	      0xc644240258	                mov byte [rsp + 2], 0x58	      3866	gui.c	FUNCTION_59
0x4002bc3	      0xbe03000000	                              mov esi, 3	      3867	gui.c	FUNCTION_59	CALL_1
0x4002bc8	          0x4889e7	                            mov rdi, rsp	      3867	gui.c	FUNCTION_59	CALL_1
0x4002bcb	      0xe800000000	                          call 0x4002bd0	      3867	gui.c	FUNCTION_59	CALL_1
0x4002bd0	        0x40882c24	                     mov byte [rsp], bpl	      3868	gui.c	FUNCTION_59
0x4002bd4	        0x885c2401	                  mov byte [rsp + 1], bl	      3869	gui.c	FUNCTION_59
0x4002bd8	      0xbe02000000	                              mov esi, 2	      3870	gui.c	FUNCTION_59	CALL_2
0x4002bdd	          0x4889e7	                            mov rdi, rsp	      3870	gui.c	FUNCTION_59	CALL_2
0x4002be0	      0xe800000000	                          call 0x4002be5	      3870	gui.c	FUNCTION_59	CALL_2
0x4002be5	      0x488b442408	                mov rax, qword [rsp + 8]	      3871	gui.c	FUNCTION_59
0x4002bea	    0x644833042528	                xor rax, qword fs:[0x28]	      3871	gui.c	FUNCTION_59
0x4002bf3	            0x7405	                            je 0x4002bfa	      3871	gui.c	FUNCTION_59
0x4002bf5	      0xe800000000	                          call 0x4002bfa	      3871	gui.c	FUNCTION_59
0x4002bfa	        0x4883c418	                           add rsp, 0x18	      3871	gui.c	FUNCTION_59
0x4002bfe	              0x5b	                                 pop rbx	      3871	gui.c	FUNCTION_59
0x4002bff	              0x5d	                                 pop rbp	      3871	gui.c	FUNCTION_59
0x4002c00	              0xc3	                                     ret	      3871	gui.c	FUNCTION_59
gui_has_tabline	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,1:DO,0	17
0x4002762	        0x4883ec08	                              sub rsp, 8	      3691	gui.c	FUNCTION_55
0x4002766	      0xe800000000	                          call 0x400276b	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x400276b	            0x85c0	                           test eax, eax	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x400276d	            0x742d	                            je 0x400279c	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x400276f	    0x488b15000000	            mov rdx, qword [0x04002776] 	      3693	gui.c	FUNCTION_55	IF_1
0x4002776	      0xb800000000	                              mov eax, 0	      3695	gui.c	FUNCTION_55	IF_1
0x400277b	          0x4885d2	                           test rdx, rdx	      3693	gui.c	FUNCTION_55	IF_1
0x400277e	            0x741c	                            je 0x400279c	      3693	gui.c	FUNCTION_55	IF_1
0x4002780	      0xb801000000	                              mov eax, 1	      3696	gui.c	FUNCTION_55
0x4002785	        0x4883fa01	                              cmp rdx, 1	      3694	gui.c	FUNCTION_55	IF_1
0x4002789	            0x7511	                           jne 0x400279c	      3694	gui.c	FUNCTION_55	IF_1
0x400278b	    0x488b05000000	            mov rax, qword [0x04002792] 	      3694	gui.c	FUNCTION_55	IF_1
0x4002792	        0x48833800	                      cmp qword [rax], 0	      3695	gui.c	FUNCTION_55	IF_1
0x4002796	           0xf95c0	                                setne al	      3695	gui.c	FUNCTION_55	IF_1
0x4002799	           0xfb6c0	                           movzx eax, al	      3695	gui.c	FUNCTION_55	IF_1
0x400279c	        0x4883c408	                              add rsp, 8	      3697	gui.c	FUNCTION_55
0x40027a0	              0xc3	                                     ret	      3697	gui.c	FUNCTION_55
gui_position_menu	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,1:DO,0	1
0x4000a15	            0xf3c3	                                     ret	      1323	gui.c	FUNCTION_16
gui_send_mouse_event	WHILE,0:functions,0:SWITCH,2:ELSE,9:IF,32:FOR,0:CALL,26:DO,0	468
0x4001f96	            0x4157	                                push r15	      3087	gui.c	FUNCTION_50
0x4001f98	            0x4156	                                push r14	      3087	gui.c	FUNCTION_50
0x4001f9a	            0x4155	                                push r13	      3087	gui.c	FUNCTION_50
0x4001f9c	            0x4154	                                push r12	      3087	gui.c	FUNCTION_50
0x4001f9e	              0x55	                                push rbp	      3087	gui.c	FUNCTION_50
0x4001f9f	              0x53	                                push rbx	      3087	gui.c	FUNCTION_50
0x4001fa0	        0x4883ec48	                           sub rsp, 0x48	      3087	gui.c	FUNCTION_50
0x4001fa4	          0x4189f5	                           mov r13d, esi	      3087	gui.c	FUNCTION_50
0x4001fa7	          0x4189d4	                           mov r12d, edx	      3087	gui.c	FUNCTION_50
0x4001faa	          0x4489c5	                            mov ebp, r8d	      3087	gui.c	FUNCTION_50
0x4001fad	    0x64488b042528	                mov rax, qword fs:[0x28]	      3087	gui.c	FUNCTION_50
0x4001fb6	      0x4889442438	             mov qword [rsp + 0x38], rax	      3087	gui.c	FUNCTION_50
0x4001fbb	            0x31c0	                            xor eax, eax	      3087	gui.c	FUNCTION_50
0x4001fbd	    0x81ff00030000	                          cmp edi, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fc3	            0x745e	                            je 0x4002023	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fc5	            0x89fb	                            mov ebx, edi	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fc7	          0x4189ce	                           mov r14d, ecx	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fca	    0x81ff00030000	                          cmp edi, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fd0	            0x7f1a	                            jg 0x4001fec	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fd2	    0x81ff00010000	                          cmp edi, 0x100	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fd8	            0x7434	                            je 0x400200e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fda	      0xba4c000000	                           mov edx, 0x4c	      3114	gui.c	FUNCTION_50	SWITCH_1
0x4001fdf	    0x81ff00020000	                          cmp edi, 0x200	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fe5	            0x7441	                            je 0x4002028	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fe7	      0xe917010000	                           jmp 0x4002103	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001fec	    0x81ff00050000	                          cmp edi, 0x500	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001ff2	            0x7421	                            je 0x4002015	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001ff4	    0x81ff00060000	                          cmp edi, 0x600	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001ffa	            0x7420	                            je 0x400201c	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4001ffc	      0xba5c000000	                           mov edx, 0x5c	      3108	gui.c	FUNCTION_50	SWITCH_1
0x4002001	    0x81ff00040000	                          cmp edi, 0x400	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4002007	            0x741f	                            je 0x4002028	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4002009	      0xe9f5000000	                           jmp 0x4002103	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400200e	      0xba4b000000	                           mov edx, 0x4b	      3111	gui.c	FUNCTION_50	SWITCH_1
0x4002013	            0xeb13	                           jmp 0x4002028	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4002015	      0xba4d000000	                           mov edx, 0x4d	      3117	gui.c	FUNCTION_50	SWITCH_1
0x400201a	            0xeb0c	                           jmp 0x4002028	      3118	gui.c	FUNCTION_50	SWITCH_1
0x400201c	      0xba4e000000	                           mov edx, 0x4e	      3120	gui.c	FUNCTION_50	SWITCH_1
0x4002021	            0xeb05	                           jmp 0x4002028	      3120	gui.c	FUNCTION_50	SWITCH_1
0x4002023	      0xba59000000	                           mov edx, 0x59	      3105	gui.c	FUNCTION_50	SWITCH_1
0x4002028	    0x8b0500000000	            mov eax, dword [0x0400202e] 	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x400202e	            0x85c0	                           test eax, eax	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4002030	     0xf856a060000	                           jne 0x40026a0	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4002036	      0xc64424239b	            mov byte [rsp + 0x23], 0x9b 	      3127	gui.c	FUNCTION_50	SWITCH_1
0x400203b	      0xc6442424fd	            mov byte [rsp + 0x24], 0xfd 	      3128	gui.c	FUNCTION_50	SWITCH_1
0x4002040	        0x88542425	               mov byte [rsp + 0x25], dl	      3129	gui.c	FUNCTION_50	SWITCH_1
0x4002044	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4002049	          0x4489e6	                           mov esi, r12d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400204c	          0x4489ef	                           mov edi, r13d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x400204f	      0xe800000000	                          call 0x4002054	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x4002054	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002058	          0x8d4a7f	                   lea ecx, [rdx + 0x7f]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400205b	            0x85d2	                           test edx, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400205d	           0xf49ca	                         cmovns ecx, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002060	          0xc1f907	                              sar ecx, 7	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002063	          0x83c121	                           add ecx, 0x21	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4002066	        0x884c2426	               mov byte [rsp + 0x26], cl	      3134	gui.c	FUNCTION_50	SWITCH_1
0x400206a	            0x89d1	                            mov ecx, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400206c	          0xc1f91f	                           sar ecx, 0x1f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400206f	          0xc1e919	                           shr ecx, 0x19	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002072	             0x1ca	                            add edx, ecx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002074	          0x83e27f	                           and edx, 0x7f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002077	            0x29ca	                            sub edx, ecx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002079	          0x83c221	                           add edx, 0x21	      3135	gui.c	FUNCTION_50	SWITCH_1
0x400207c	        0x88542427	               mov byte [rsp + 0x27], dl	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4002080	          0x8d507f	                   lea edx, [rax + 0x7f]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002083	            0x85c0	                           test eax, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002085	           0xf49d0	                         cmovns edx, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002088	          0xc1fa07	                              sar edx, 7	      3136	gui.c	FUNCTION_50	SWITCH_1
0x400208b	          0x83c221	                           add edx, 0x21	      3136	gui.c	FUNCTION_50	SWITCH_1
0x400208e	        0x88542428	               mov byte [rsp + 0x28], dl	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4002092	              0x99	                                     cdq	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002093	          0xc1ea19	                           shr edx, 0x19	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002096	             0x1d0	                            add eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4002098	          0x83e07f	                           and eax, 0x7f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x400209b	            0x29d0	                            sub eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x400209d	          0x83c021	                           add eax, 0x21	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40020a0	        0x88442429	               mov byte [rsp + 0x29], al	      3137	gui.c	FUNCTION_50	SWITCH_1
0x40020a4	            0x85ed	                           test ebp, ebp	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x40020a6	            0x7514	                           jne 0x40020bc	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x40020a8	      0xbe07000000	                              mov esi, 7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40020ad	      0x488d7c2423	                   lea rdi, [rsp + 0x23]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40020b2	      0xe800000000	                          call 0x40020b7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40020b7	      0xe9e4050000	                           jmp 0x40026a0	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x40020bc	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3143	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020c1	      0xc6442421fc	            mov byte [rsp + 0x21], 0xfc 	      3144	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020c6	            0x89e8	                            mov eax, ebp	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x40020c8	          0x83e004	                              and eax, 4	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x40020cb	          0x83f801	                              cmp eax, 1	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020ce	            0x19c0	                            sbb eax, eax	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020d0	            0xf7d0	                                 not eax	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020d2	          0x83e002	                              and eax, 2	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020d5	        0x88442422	               mov byte [rsp + 0x22], al	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x40020d9	        0x40f6c510	                          test bpl, 0x10	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x40020dd	            0x7405	                            je 0x40020e4	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x40020df	      0x804c242204	                 or byte [rsp + 0x22], 4	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x40020e4	        0x40f6c508	                             test bpl, 8	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40020e8	            0x7405	                            je 0x40020ef	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40020ea	      0x804c242208	                 or byte [rsp + 0x22], 8	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x40020ef	      0xbe0a000000	                            mov esi, 0xa	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40020f4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40020f9	      0xe800000000	                          call 0x40020fe	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x40020fe	      0xe99d050000	                           jmp 0x40026a0	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4002103	    0x66833d000000	                cmp word [0x0400210b], 1	      3160	gui.c	FUNCTION_50	IF_6
0x400210b	            0x753a	                           jne 0x4002147	      3160	gui.c	FUNCTION_50	IF_6
0x400210d	      0xb900000000	                              mov ecx, 0	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002112	    0x8b3500000000	            mov esi, dword [0x04002118] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002118	          0x4489e0	                           mov eax, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400211b	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400211d	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400211e	    0xf7b9d4000000	                 idiv dword [rcx + 0xd4]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002124	          0x4189c4	                           mov r12d, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002127	          0x4489e8	                           mov eax, r13d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400212a	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400212c	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400212d	    0xf7b9d0000000	                 idiv dword [rcx + 0xd0]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002133	            0x89c6	                            mov esi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002135	          0x4489f1	                           mov ecx, r14d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002138	          0x4489e2	                           mov edx, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400213b	            0x89df	                            mov edi, ebx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x400213d	      0xe800000000	                          call 0x4002142	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4002142	      0xe959050000	                           jmp 0x40026a0	      3163	gui.c	FUNCTION_50	IF_6
0x4002147	      0xe800000000	                          call 0x400214c	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400214c	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400214f	     0xf84a6000000	                            je 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002155	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002158	            0x7f47	                            jg 0x40021a1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400215a	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400215d	     0xf84c8000000	                            je 0x400222b	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002163	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002166	            0x7f20	                            jg 0x4002188	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002168	          0x83f802	                              cmp eax, 2	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400216b	     0xf8482000000	                            je 0x40021f3	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002171	          0x83f804	                              cmp eax, 4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002174	     0xf84e4000000	                            je 0x400225e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400217a	          0x83f801	                              cmp eax, 1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400217d	     0xf85d3000000	                           jne 0x4002256	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002183	      0xe9d6000000	                           jmp 0x400225e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002188	          0x83f828	                           cmp eax, 0x28	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400218b	     0xf849a000000	                            je 0x400222b	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002191	          0x83f830	                           cmp eax, 0x30	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002194	            0x7465	                            je 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002196	          0x83f810	                           cmp eax, 0x10	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4002199	     0xf85b7000000	                           jne 0x4002256	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400219f	            0xeb5a	                           jmp 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021a1	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021a6	     0xf84b2000000	                            je 0x400225e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021ac	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021b1	            0x7f19	                            jg 0x40021cc	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021b3	      0x3dd0000000	                           cmp eax, 0xd0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021b8	            0x7441	                            je 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021ba	      0x3df0000000	                           cmp eax, 0xf0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021bf	            0x743a	                            je 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021c1	          0x83f870	                           cmp eax, 0x70	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021c4	     0xf858c000000	                           jne 0x4002256	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021ca	            0xeb2f	                           jmp 0x40021fb	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021cc	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021d1	            0x7430	                            je 0x4002203	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021d3	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021d8	            0x7f09	                            jg 0x40021e3	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021da	      0x3d01020000	                          cmp eax, 0x201	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021df	            0x7422	                            je 0x4002203	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021e1	            0xeb73	                           jmp 0x4002256	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021e3	      0x3d00100000	                         cmp eax, 0x1000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021e8	            0x7409	                            je 0x40021f3	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021ea	      0x3d00200000	                         cmp eax, 0x2000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021ef	            0x746d	                            je 0x400225e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021f1	            0xeb63	                           jmp 0x4002256	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40021f3	    0x41bf76000000	                          mov r15d, 0x76	      3175	gui.c	FUNCTION_50	SWITCH_2
0x40021f9	            0xeb69	                           jmp 0x4002264	      3175	gui.c	FUNCTION_50	SWITCH_2
0x40021fb	    0x41bf69000000	                          mov r15d, 0x69	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4002201	            0xeb61	                           jmp 0x4002264	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4002203	          0x4489e0	                           mov eax, r12d	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4002206	    0x2b0500000000	             sub eax, dword [0x0400220c]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400220c	              0x99	                                     cdq	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x400220d	    0xf73d00000000	                 idiv dword [0x04002213]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4002213	    0x3b0500000000	            cmp eax, dword [0x04002219] 	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x4002219	        0x410f9cc7	                               setl r15b	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x400221d	        0x450fb6ff	                        movzx r15d, r15b	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x4002221	    0x468d3cbd6e00	                lea r15d, [r15*4 + 0x6e]	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x4002229	            0xeb39	                           jmp 0x4002264	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x400222b	          0x4489e0	                           mov eax, r12d	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400222e	    0x2b0500000000	             sub eax, dword [0x04002234]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002234	              0x99	                                     cdq	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002235	    0xf73d00000000	                 idiv dword [0x0400223b]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400223b	    0x3b0500000000	            cmp eax, dword [0x04002241] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002241	            0x7d0b	                           jge 0x400224e	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4002243	    0x41bf20000000	                          mov r15d, 0x20	      3202	gui.c	FUNCTION_50	SWITCH_2	IF_8
0x4002249	          0x83fb01	                              cmp ebx, 1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400224c	            0x7516	                           jne 0x4002264	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x400224e	    0x41bf63000000	                          mov r15d, 0x63	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x4002254	            0xeb0e	                           jmp 0x4002264	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x4002256	    0x41bf20000000	                          mov r15d, 0x20	      3208	gui.c	FUNCTION_50	SWITCH_2
0x400225c	            0xeb06	                           jmp 0x4002264	      3209	gui.c	FUNCTION_50	SWITCH_2
0x400225e	    0x41bf6e000000	                          mov r15d, 0x6e	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4002264	    0x8b0500000000	            mov eax, dword [0x0400226a] 	      3217	gui.c	FUNCTION_50	IF_9
0x400226a	            0x89c2	                            mov edx, eax	      3217	gui.c	FUNCTION_50	IF_9
0x400226c	          0x80e6fe	                            and dh, 0xfe	      3217	gui.c	FUNCTION_50	IF_9
0x400226f	          0x83fa01	                              cmp edx, 1	      3217	gui.c	FUNCTION_50	IF_9
0x4002272	            0x7404	                            je 0x4002278	      3217	gui.c	FUNCTION_50	IF_9
0x4002274	            0xa810	                           test al, 0x10	      3217	gui.c	FUNCTION_50	IF_9
0x4002276	            0x7449	                            je 0x40022c1	      3217	gui.c	FUNCTION_50	IF_9
0x4002278	          0x4489e0	                           mov eax, r12d	      3219	gui.c	FUNCTION_50	IF_9
0x400227b	    0x2b0500000000	             sub eax, dword [0x04002281]	      3219	gui.c	FUNCTION_50	IF_9
0x4002281	              0x99	                                     cdq	      3219	gui.c	FUNCTION_50	IF_9
0x4002282	    0xf73d00000000	                 idiv dword [0x04002288]	      3219	gui.c	FUNCTION_50	IF_9
0x4002288	    0x488b15000000	            mov rdx, qword [0x0400228f] 	      3219	gui.c	FUNCTION_50	IF_9
0x400228f	    0x8b929c000000	            mov edx, dword [rdx + 0x9c] 	      3219	gui.c	FUNCTION_50	IF_9
0x4002295	    0x488b0d000000	            mov rcx, qword [0x0400229c] 	      3219	gui.c	FUNCTION_50	IF_9
0x400229c	           0x3510c	              add edx, dword [rcx + 0xc]	      3219	gui.c	FUNCTION_50	IF_9
0x400229f	            0x39d0	                            cmp eax, edx	      3219	gui.c	FUNCTION_50	IF_9
0x40022a1	            0x7c1e	                            jl 0x40022c1	      3219	gui.c	FUNCTION_50	IF_9
0x40022a3	          0x83fb43	                           cmp ebx, 0x43	      3219	gui.c	FUNCTION_50	IF_9
0x40022a6	            0x7419	                            je 0x40022c1	      3219	gui.c	FUNCTION_50	IF_9
0x40022a8	    0x833d00000000	               cmp dword [0x040022af], 0	      3221	gui.c	FUNCTION_50	IF_9
0x40022af	            0x7510	                           jne 0x40022c1	      3221	gui.c	FUNCTION_50	IF_9
0x40022b1	    0x833d00000000	               cmp dword [0x040022b8], 0	      3225	gui.c	FUNCTION_50	IF_9
0x40022b8	      0xb820000000	                           mov eax, 0x20	      3225	gui.c	FUNCTION_50	IF_9
0x40022bd	        0x440f44f8	                         cmove r15d, eax	      3225	gui.c	FUNCTION_50	IF_9
0x40022c1	            0x89e8	                            mov eax, ebp	      3230	gui.c	FUNCTION_50	IF_10
0x40022c3	          0x83e014	                           and eax, 0x14	      3230	gui.c	FUNCTION_50	IF_10
0x40022c6	        0x8944240c	              mov dword [rsp + 0xc], eax	      3230	gui.c	FUNCTION_50	IF_10
0x40022ca	          0x83f814	                           cmp eax, 0x14	      3231	gui.c	FUNCTION_50	IF_10
0x40022cd	      0xb878000000	                           mov eax, 0x78	      3231	gui.c	FUNCTION_50	IF_10
0x40022d2	        0x440f44f8	                         cmove r15d, eax	      3231	gui.c	FUNCTION_50	IF_10
0x40022d6	    0x833d00000000	               cmp dword [0x040022dd], 0	      3236	gui.c	FUNCTION_50	IF_11
0x40022dd	     0xf855b030000	                           jne 0x400263e	      3236	gui.c	FUNCTION_50	IF_11
0x40022e3	          0x4489ff	                           mov edi, r15d	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40022e6	      0xe800000000	                          call 0x40022eb	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40022eb	        0x4183ff63	                          cmp r15d, 0x63	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40022ef	            0x7410	                            je 0x4002301	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40022f1	    0xc74424080000	                  mov dword [rsp + 8], 0	      3096	gui.c	FUNCTION_50
0x40022f9	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x40022fb	     0xf8558010000	                           jne 0x4002459	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002301	        0x4183ff78	                          cmp r15d, 0x78	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002305	            0x7508	                           jne 0x400230f	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002307	            0xeb1c	                           jmp 0x4002325	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002309	    0x41bf20000000	                          mov r15d, 0x20	      3237	gui.c	FUNCTION_50	IF_11
0x400230f	    0x833d00000000	               cmp dword [0x04002316], 0	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002316	            0x740d	                            je 0x4002325	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002318	    0xf60500000000	               test byte [0x0400231f], 1	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400231f	     0xf857b030000	                           jne 0x40026a0	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4002325	      0xe800000000	                          call 0x400232a	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x400232a	            0x85db	                           test ebx, ebx	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400232c	           0xf94c1	                                 sete cl	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400232f	      0x837c240c04	                cmp dword [rsp + 0xc], 4	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4002334	           0xf94c2	                                 sete dl	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4002337	            0x84d1	                             test cl, dl	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x4002339	            0x7409	                            je 0x4002344	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400233b	            0x85c0	                           test eax, eax	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400233d	            0x7405	                            je 0x4002344	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x400233f	          0x83e5fb	                     and ebp, 0xfffffffb	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x4002342	            0xeb09	                           jmp 0x400234d	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x4002344	          0x83fb02	                              cmp ebx, 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4002347	     0xf8596000000	                           jne 0x40023e3	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x400234d	    0x66833d000000	                cmp word [0x04002355], 0	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4002355	            0x754c	                           jne 0x40023a3	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4002357	    0xf60500000000	               test byte [0x0400235e], 8	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x400235e	            0x7412	                            je 0x4002372	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4002360	    0x8b0500000000	            mov eax, dword [0x04002366] 	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4002366	        0x8944241c	             mov dword [rsp + 0x1c], eax	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x400236a	    0x8b3500000000	            mov esi, dword [0x04002370] 	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4002370	            0xeb23	                           jmp 0x4002395	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4002372	    0x488b05000000	            mov rax, qword [0x04002379] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002379	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x400237f	        0x8954241c	             mov dword [rsp + 0x1c], edx	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4002383	    0x8bb0a8010000	           mov esi, dword [rax + 0x1a8] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4002389	     0x3b09c000000	             add esi, dword [rax + 0x9c]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x400238f	     0x3b0dc000000	             add esi, dword [rax + 0xdc]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4002395	      0xba00000000	                              mov edx, 0	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x400239a	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x400239e	      0xe800000000	                          call 0x40023a3	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x40023a3	      0xb900000000	                              mov ecx, 0	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023a8	    0x8b3d00000000	            mov edi, dword [0x040023ae] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023ae	          0x4489e0	                           mov eax, r12d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023b1	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023b3	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023b4	    0xf7b9d4000000	                 idiv dword [rcx + 0xd4]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023ba	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023bc	          0x4489e8	                           mov eax, r13d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023bf	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023c1	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023c2	    0xf7b9d0000000	                 idiv dword [rcx + 0xd0]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023c8	          0x4489f1	                           mov ecx, r14d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023cb	            0x89f2	                            mov edx, esi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023cd	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023cf	      0xbf02000000	                              mov edi, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023d4	      0xe800000000	                          call 0x40023d9	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023d9	      0xbb02000000	                              mov ebx, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023de	      0xe97a020000	                           jmp 0x400265d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x40023e3	            0x85db	                           test ebx, ebx	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x40023e5	            0x7534	                           jne 0x400241b	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x40023e7	      0xb900000000	                              mov ecx, 0	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023ec	    0x8b3d00000000	            mov edi, dword [0x040023f2] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023f2	          0x4489e0	                           mov eax, r12d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023f5	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023f7	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023f8	    0xf7b9d4000000	                 idiv dword [rcx + 0xd4]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40023fe	            0x89c6	                            mov esi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002400	          0x4489e8	                           mov eax, r13d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002403	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002405	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002406	    0xf7b9d0000000	                 idiv dword [rcx + 0xd0]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400240c	            0x89c7	                            mov edi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400240e	          0x4489f2	                           mov edx, r14d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002411	      0xe800000000	                          call 0x4002416	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x4002416	      0xe942020000	                           jmp 0x400265d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x400241b	    0xc74424080000	                  mov dword [rsp + 8], 0	      3096	gui.c	FUNCTION_50
0x4002423	    0x41be00000000	                             mov r14d, 0	      3301	gui.c	FUNCTION_50	IF_12
0x4002429	          0x83fb01	                              cmp ebx, 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x400242c	            0x742b	                            je 0x4002459	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x400242e	          0x4489ff	                           mov edi, r15d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002431	      0xe800000000	                          call 0x4002436	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002436	          0x83fb03	                              cmp ebx, 3	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002439	     0xf8461020000	                            je 0x40026a0	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x400243f	            0x85c0	                           test eax, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002441	     0xf8459020000	                            je 0x40026a0	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4002447	    0x41be00000000	                             mov r14d, 0	      3301	gui.c	FUNCTION_50	IF_12
0x400244d	        0x4183ff63	                          cmp r15d, 0x63	      3301	gui.c	FUNCTION_50	IF_12
0x4002451	      0xb800000000	                              mov eax, 0	      3301	gui.c	FUNCTION_50	IF_12
0x4002456	           0xf45d8	                         cmovne ebx, eax	      3301	gui.c	FUNCTION_50	IF_12
0x4002459	    0x66833d000000	                cmp word [0x04002461], 0	      3304	gui.c	FUNCTION_50	IF_22
0x4002461	            0x7411	                            je 0x4002474	      3304	gui.c	FUNCTION_50	IF_22
0x4002463	      0x837c240800	                  cmp dword [rsp + 8], 0	      3304	gui.c	FUNCTION_50	IF_22
0x4002468	            0x750a	                           jne 0x4002474	      3304	gui.c	FUNCTION_50	IF_22
0x400246a	      0xbf00000000	                              mov edi, 0	      3305	gui.c	FUNCTION_50	CALL_22
0x400246f	      0xe800000000	                          call 0x4002474	      3305	gui.c	FUNCTION_50	CALL_22
0x4002474	    0x8b0500000000	            mov eax, dword [0x0400247a] 	      3309	gui.c	FUNCTION_50	IF_23
0x400247a	            0x85c0	                           test eax, eax	      3309	gui.c	FUNCTION_50	IF_23
0x400247c	     0xf851e020000	                           jne 0x40026a0	      3309	gui.c	FUNCTION_50	IF_23
0x4002482	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      3312	gui.c	FUNCTION_50	CALL_23
0x4002487	          0x4489e6	                           mov esi, r12d	      3312	gui.c	FUNCTION_50	CALL_23
0x400248a	          0x4489ef	                           mov edi, r13d	      3312	gui.c	FUNCTION_50	CALL_23
0x400248d	      0xe800000000	                          call 0x4002492	      3312	gui.c	FUNCTION_50	CALL_23
0x4002492	          0x4189c5	                           mov r13d, eax	      3312	gui.c	FUNCTION_50	CALL_23
0x4002495	          0x83fb43	                           cmp ebx, 0x43	      3318	gui.c	FUNCTION_50	IF_24
0x4002498	            0x753e	                           jne 0x40024d8	      3318	gui.c	FUNCTION_50	IF_24
0x400249a	    0x3b0500000000	            cmp eax, dword [0x040024a0] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x40024a0	            0x7510	                           jne 0x40024b2	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x40024a2	    0x8b0500000000	            mov eax, dword [0x040024a8] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x40024a8	        0x3944241c	            cmp dword [rsp + 0x1c], eax 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x40024ac	     0xf84ee010000	                            je 0x40026a0	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x40024b2	          0x4585e4	                         test r12d, r12d	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x40024b5	      0xb8ffffffff	                     mov eax, 0xffffffff	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x40024ba	        0x440f48e8	                         cmovs r13d, eax	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x40024be	    0x488b05000000	            mov rax, qword [0x040024c5] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024c5	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024c9	    0x483b15000000	            cmp rdx, qword [0x040024d0] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024d0	     0xf85b6010000	                           jne 0x400268c	      3332	gui.c	FUNCTION_50	IF_27
0x40024d6	            0xeb18	                           jmp 0x40024f0	      3332	gui.c	FUNCTION_50	IF_27
0x40024d8	    0x488b05000000	            mov rax, qword [0x040024df] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024df	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024e3	    0x483b15000000	            cmp rdx, qword [0x040024ea] 	      3332	gui.c	FUNCTION_50	IF_27
0x40024ea	     0xf857a010000	                           jne 0x400266a	      3332	gui.c	FUNCTION_50	IF_27
0x40024f0	    0x8b3500000000	            mov esi, dword [0x040024f6] 	      3334	gui.c	FUNCTION_50	IF_27
0x40024f6	    0x39b084000000	            cmp dword [rax + 0x84], esi 	      3334	gui.c	FUNCTION_50	IF_27
0x40024fc	     0xf8568010000	                           jne 0x400266a	      3334	gui.c	FUNCTION_50	IF_27
0x4002502	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x4002507	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x400250c	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x4002511	            0x89d9	                            mov ecx, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x4002513	          0x83e1bf	                     and ecx, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x4002516	          0x83f903	                              cmp ecx, 3	      3342	gui.c	FUNCTION_50	IF_28
0x4002519	     0xf8487000000	                            je 0x40025a6	      3342	gui.c	FUNCTION_50	IF_28
0x400251f	          0x4585f6	                         test r14d, r14d	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4002522	            0x7445	                            je 0x4002569	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4002524	    0x3b1d00000000	            cmp ebx, dword [0x0400252a] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400252a	            0x7515	                           jne 0x4002541	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400252c	    0x443b2d000000	           cmp r13d, dword [0x04002533] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002533	            0x750c	                           jne 0x4002541	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002535	    0x8b3500000000	            mov esi, dword [0x0400253b] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400253b	        0x3974241c	            cmp dword [rsp + 0x1c], esi 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400253f	            0x740c	                            je 0x400254d	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4002541	    0xc70500000000	               mov dword [0x0400254b], 1	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400254b	            0xeb26	                           jmp 0x4002573	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x400254d	    0x8b3500000000	            mov esi, dword [0x04002553] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002553	          0x8d4e01	                      lea ecx, [rsi + 1]	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002556	          0x83f905	                              cmp ecx, 5	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002559	      0xbe01000000	                              mov esi, 1	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x400255e	           0xf4dce	                         cmovge ecx, esi	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002561	    0x890d00000000	            mov dword [0x04002567], ecx 	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002567	            0xeb0a	                           jmp 0x4002573	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4002569	    0xc70500000000	               mov dword [0x04002573], 1	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4002573	    0x891d00000000	            mov dword [0x04002579], ebx 	      3357	gui.c	FUNCTION_50	IF_28
0x4002579	    0x488915000000	            mov qword [0x04002580], rdx 	      3358	gui.c	FUNCTION_50	IF_28
0x4002580	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3360	gui.c	FUNCTION_50	IF_28
0x4002586	    0x890500000000	            mov dword [0x0400258c], eax 	      3360	gui.c	FUNCTION_50	IF_28
0x400258c	    0x8b0500000000	            mov eax, dword [0x04002592] 	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002592	          0x83e801	                              sub eax, 1	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002595	          0xc1e006	                              shl eax, 6	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4002598	          0x83c820	                            or eax, 0x20	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x400259b	          0x83e33f	                           and ebx, 0x3f	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x400259e	             0x9d8	                             or eax, ebx	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x40025a0	        0x88442423	               mov byte [rsp + 0x23], al	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x40025a4	            0xeb04	                           jmp 0x40025aa	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x40025a6	        0x885c2423	               mov byte [rsp + 0x23], bl	      3367	gui.c	FUNCTION_50	ELSE_8
0x40025aa	      0x40086c2423	               or byte [rsp + 0x23], bpl	      3369	gui.c	FUNCTION_50
0x40025af	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3370	gui.c	FUNCTION_50	CALL_25
0x40025b3	          0x8d507f	                   lea edx, [rax + 0x7f]	      3058	gui.c	FUNCTION_49
0x40025b6	            0x85c0	                           test eax, eax	      3058	gui.c	FUNCTION_49
0x40025b8	           0xf49d0	                         cmovns edx, eax	      3058	gui.c	FUNCTION_49
0x40025bb	          0xc1fa07	                              sar edx, 7	      3058	gui.c	FUNCTION_49
0x40025be	          0x83c221	                           add edx, 0x21	      3058	gui.c	FUNCTION_49
0x40025c1	        0x88542424	               mov byte [rsp + 0x24], dl	      3058	gui.c	FUNCTION_49
0x40025c5	              0x99	                                     cdq	      3059	gui.c	FUNCTION_49
0x40025c6	          0xc1ea19	                           shr edx, 0x19	      3059	gui.c	FUNCTION_49
0x40025c9	             0x1d0	                            add eax, edx	      3059	gui.c	FUNCTION_49
0x40025cb	          0x83e07f	                           and eax, 0x7f	      3059	gui.c	FUNCTION_49
0x40025ce	            0x29d0	                            sub eax, edx	      3059	gui.c	FUNCTION_49
0x40025d0	          0x83c021	                           add eax, 0x21	      3059	gui.c	FUNCTION_49
0x40025d3	        0x88442425	               mov byte [rsp + 0x25], al	      3059	gui.c	FUNCTION_49
0x40025d7	        0x418d457f	                   lea eax, [r13 + 0x7f]	      3060	gui.c	FUNCTION_49
0x40025db	          0x4585ed	                         test r13d, r13d	      3060	gui.c	FUNCTION_49
0x40025de	        0x410f49c5	                        cmovns eax, r13d	      3060	gui.c	FUNCTION_49
0x40025e2	          0xc1f807	                              sar eax, 7	      3060	gui.c	FUNCTION_49
0x40025e5	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x40025e8	        0x88442426	               mov byte [rsp + 0x26], al	      3060	gui.c	FUNCTION_49
0x40025ec	          0x4489ea	                           mov edx, r13d	      3061	gui.c	FUNCTION_49
0x40025ef	          0xc1fa1f	                           sar edx, 0x1f	      3061	gui.c	FUNCTION_49
0x40025f2	          0xc1ea19	                           shr edx, 0x19	      3061	gui.c	FUNCTION_49
0x40025f5	      0x418d441500	                    lea eax, [r13 + rdx]	      3061	gui.c	FUNCTION_49
0x40025fa	          0x83e07f	                           and eax, 0x7f	      3061	gui.c	FUNCTION_49
0x40025fd	            0x29d0	                            sub eax, edx	      3061	gui.c	FUNCTION_49
0x40025ff	          0x83c021	                           add eax, 0x21	      3061	gui.c	FUNCTION_49
0x4002602	        0x88442427	               mov byte [rsp + 0x27], al	      3061	gui.c	FUNCTION_49
0x4002606	      0xbe08000000	                              mov esi, 8	      3371	gui.c	FUNCTION_50	CALL_26
0x400260b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3371	gui.c	FUNCTION_50	CALL_26
0x4002610	      0xe800000000	                          call 0x4002615	      3371	gui.c	FUNCTION_50	CALL_26
0x4002615	          0x4585ed	                         test r13d, r13d	      3374	gui.c	FUNCTION_50	IF_32
0x4002618	      0xb800000000	                              mov eax, 0	      3374	gui.c	FUNCTION_50	IF_32
0x400261d	        0x440f48e8	                         cmovs r13d, eax	      3374	gui.c	FUNCTION_50	IF_32
0x4002621	    0x44892d000000	           mov dword [0x04002628], r13d 	      3374	gui.c	FUNCTION_50	IF_32
0x4002628	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3377	gui.c	FUNCTION_50	ELSE_9
0x400262c	    0x890500000000	            mov dword [0x04002632], eax 	      3377	gui.c	FUNCTION_50	ELSE_9
0x4002632	    0xc70500000000	     mov dword [0x0400263c], 0xffffffff 	      3384	gui.c	FUNCTION_50	ELSE_9
0x400263c	            0xeb62	                           jmp 0x40026a0	      3384	gui.c	FUNCTION_50	ELSE_9
0x400263e	      0xbf20000000	                           mov edi, 0x20	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002643	      0xe800000000	                          call 0x4002648	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002648	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400264a	     0xf84b9fcffff	                            je 0x4002309	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4002650	    0xc74424080000	                  mov dword [rsp + 8], 0	      3096	gui.c	FUNCTION_50
0x4002658	      0xe9fcfdffff	                           jmp 0x4002459	      3096	gui.c	FUNCTION_50
0x400265d	    0xc74424080100	                  mov dword [rsp + 8], 1	      3096	gui.c	FUNCTION_50
0x4002665	      0xe9c4fdffff	                           jmp 0x400242e	      3096	gui.c	FUNCTION_50
0x400266a	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x400266f	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x4002674	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x4002679	            0x89d9	                            mov ecx, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x400267b	          0x83e1bf	                     and ecx, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x400267e	          0x83f903	                              cmp ecx, 3	      3342	gui.c	FUNCTION_50	IF_28
0x4002681	     0xf841fffffff	                            je 0x40025a6	      3342	gui.c	FUNCTION_50	IF_28
0x4002687	      0xe9ddfeffff	                           jmp 0x4002569	      3342	gui.c	FUNCTION_50	IF_28
0x400268c	      0xc64424209b	            mov byte [rsp + 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x4002691	      0xc6442421fb	            mov byte [rsp + 0x21], 0xfb 	      3340	gui.c	FUNCTION_50
0x4002696	      0xc644242258	            mov byte [rsp + 0x22], 0x58 	      3341	gui.c	FUNCTION_50
0x400269b	      0xe906ffffff	                           jmp 0x40025a6	      3341	gui.c	FUNCTION_50
0x40026a0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026a5	    0x644833042528	                xor rax, qword fs:[0x28]	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026ae	            0x7405	                            je 0x40026b5	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026b0	      0xe800000000	                          call 0x40026b5	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026b5	        0x4883c448	                           add rsp, 0x48	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026b9	              0x5b	                                 pop rbx	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026ba	              0x5d	                                 pop rbp	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026bb	            0x415c	                                 pop r12	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026bd	            0x415d	                                 pop r13	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026bf	            0x415e	                                 pop r14	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026c1	            0x415f	                                 pop r15	      3386	gui.c	FUNCTION_50	ELSE_9
0x40026c3	              0xc3	                                     ret	      3386	gui.c	FUNCTION_50	ELSE_9
gui_may_resize_shell	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,1:DO,0	8
0x4003201	    0x8b3500000000	            mov esi, dword [0x04003207] 	      1547	gui.c	FUNCTION_21	IF_1
0x4003207	            0x85f6	                           test esi, esi	      1547	gui.c	FUNCTION_21	IF_1
0x4003209	            0x7413	                            je 0x400321e	      1547	gui.c	FUNCTION_21	IF_1
0x400320b	        0x4883ec08	                              sub rsp, 8	      1546	gui.c	FUNCTION_21
0x400320f	    0x8b3d00000000	            mov edi, dword [0x04003215] 	      1550	gui.c	FUNCTION_21	CALL_1
0x4003215	      0xe800000000	                          call 0x400321a	      1550	gui.c	FUNCTION_21	CALL_1
0x400321a	        0x4883c408	                              add rsp, 8	      1551	gui.c	FUNCTION_21
0x400321e	            0xf3c3	                                     ret	      1551	gui.c	FUNCTION_21
gui_get_lightness	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,0:FOR,0:CALL,1:DO,0	18
0x4004bea	        0x4883ec08	                              sub rsp, 8	      4784	gui.c	FUNCTION_76
0x4004bee	      0xe800000000	                          call 0x4004bf3	      4785	gui.c	FUNCTION_76	CALL_1
0x4004bf3	          0x4889c2	                            mov rdx, rax	      4787	gui.c	FUNCTION_76
0x4004bf6	        0x48c1ea10	                           shr rdx, 0x10	      4787	gui.c	FUNCTION_76
0x4004bfa	           0xfb6d2	                           movzx edx, dl	      4787	gui.c	FUNCTION_76
0x4004bfd	    0x69ca2b010000	                    imul ecx, edx, 0x12b	      4787	gui.c	FUNCTION_76
0x4004c03	           0xfb6d4	                           movzx edx, ah	      4787	gui.c	FUNCTION_76
0x4004c06	    0x69d24b020000	                    imul edx, edx, 0x24b	      4787	gui.c	FUNCTION_76
0x4004c0c	             0x1ca	                            add edx, ecx	      4787	gui.c	FUNCTION_76
0x4004c0e	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4004c11	          0x6bc072	                     imul eax, eax, 0x72	      4787	gui.c	FUNCTION_76
0x4004c14	             0x1d0	                            add eax, edx	      4787	gui.c	FUNCTION_76
0x4004c16	      0xbad34d6210	                     mov edx, 0x10624dd3	      4787	gui.c	FUNCTION_76
0x4004c1b	            0xf7ea	                                imul edx	      4787	gui.c	FUNCTION_76
0x4004c1d	            0x89d0	                            mov eax, edx	      4787	gui.c	FUNCTION_76
0x4004c1f	          0xc1f806	                              sar eax, 6	      4787	gui.c	FUNCTION_76
0x4004c22	        0x4883c408	                              add rsp, 8	      4790	gui.c	FUNCTION_76
0x4004c26	              0xc3	                                     ret	      4790	gui.c	FUNCTION_76
gui_do_findrepl	WHILE,0:functions,0:SWITCH,0:ELSE,4:IF,16:FOR,0:CALL,32:DO,0	195
0x400587b	            0x4157	                                push r15	      5276	gui.c	FUNCTION_91
0x400587d	            0x4156	                                push r14	      5276	gui.c	FUNCTION_91
0x400587f	            0x4155	                                push r13	      5276	gui.c	FUNCTION_91
0x4005881	            0x4154	                                push r12	      5276	gui.c	FUNCTION_91
0x4005883	              0x55	                                push rbp	      5276	gui.c	FUNCTION_91
0x4005884	              0x53	                                push rbx	      5276	gui.c	FUNCTION_91
0x4005885	    0x4881ecf80000	                           sub rsp, 0xf8	      5276	gui.c	FUNCTION_91
0x400588c	      0x4889542408	                mov qword [rsp + 8], rdx	      5276	gui.c	FUNCTION_91
0x4005891	    0x64488b042528	                mov rax, qword fs:[0x28]	      5276	gui.c	FUNCTION_91
0x400589a	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      5276	gui.c	FUNCTION_91
0x40058a2	            0x31c0	                            xor eax, eax	      5276	gui.c	FUNCTION_91
0x40058a4	    0x8b0500000000	            mov eax, dword [0x040058aa] 	      5288	gui.c	FUNCTION_91	IF_1
0x40058aa	            0x85c0	                           test eax, eax	      5288	gui.c	FUNCTION_91	IF_1
0x40058ac	     0xf85bb020000	                           jne 0x4005b6d	      5288	gui.c	FUNCTION_91	IF_1
0x40058b2	            0x89fb	                            mov ebx, edi	      5288	gui.c	FUNCTION_91	IF_1
0x40058b4	          0x4989f5	                            mov r13, rsi	      5288	gui.c	FUNCTION_91	IF_1
0x40058b7	          0x4189cc	                           mov r12d, ecx	      5288	gui.c	FUNCTION_91	IF_1
0x40058ba	    0x448b35000000	           mov r14d, dword [0x040058c1] 	      5288	gui.c	FUNCTION_91	IF_1
0x40058c1	          0x4585f6	                         test r14d, r14d	      5288	gui.c	FUNCTION_91	IF_1
0x40058c4	     0xf85a8020000	                           jne 0x4005b72	      5288	gui.c	FUNCTION_91	IF_1
0x40058ca	            0x89fd	                            mov ebp, edi	      5279	gui.c	FUNCTION_91
0x40058cc	          0x83e507	                              and ebp, 7	      5279	gui.c	FUNCTION_91
0x40058cf	    0x448b3d000000	           mov r15d, dword [0x040058d6] 	      5282	gui.c	FUNCTION_91
0x40058d6	          0x8d45fd	                      lea eax, [rbp - 3]	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058d9	          0x83f801	                              cmp eax, 1	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058dc	            0x7712	                            ja 0x40058f0	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058de	      0xe800000000	                          call 0x40058e3	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058e3	            0x89c2	                            mov edx, eax	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058e5	          0x4489f0	                           mov eax, r14d	      5293	gui.c	FUNCTION_91	IF_2
0x40058e8	            0x85d2	                           test edx, edx	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058ea	     0xf8582020000	                           jne 0x4005b72	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40058f0	    0xc70500000000	               mov dword [0x040058fa], 1	      5295	gui.c	FUNCTION_91
0x40058fa	      0xba64000000	                           mov edx, 0x64	      5297	gui.c	FUNCTION_91	CALL_2
0x40058ff	      0xbe01000000	                              mov esi, 1	      5297	gui.c	FUNCTION_91	CALL_2
0x4005904	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5297	gui.c	FUNCTION_91	CALL_2
0x4005909	      0xe800000000	                          call 0x400590e	      5297	gui.c	FUNCTION_91	CALL_2
0x400590e	          0x83fd04	                              cmp ebp, 4	      5298	gui.c	FUNCTION_91	IF_3
0x4005911	            0x750f	                           jne 0x4005922	      5298	gui.c	FUNCTION_91	IF_3
0x4005913	      0xbe00000000	                              mov esi, 0	      5299	gui.c	FUNCTION_91	CALL_3
0x4005918	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5299	gui.c	FUNCTION_91	CALL_3
0x400591d	      0xe800000000	                          call 0x4005922	      5299	gui.c	FUNCTION_91	CALL_3
0x4005922	      0xbe00000000	                              mov esi, 0	      5301	gui.c	FUNCTION_91	CALL_4
0x4005927	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5301	gui.c	FUNCTION_91	CALL_4
0x400592c	      0xe800000000	                          call 0x4005931	      5301	gui.c	FUNCTION_91	CALL_4
0x4005931	          0xf6c310	                           test bl, 0x10	      5302	gui.c	FUNCTION_91	IF_4
0x4005934	            0x7411	                            je 0x4005947	      5302	gui.c	FUNCTION_91	IF_4
0x4005936	      0xbe00000000	                              mov esi, 0	      5303	gui.c	FUNCTION_91	CALL_5
0x400593b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5303	gui.c	FUNCTION_91	CALL_5
0x4005940	      0xe800000000	                          call 0x4005945	      5303	gui.c	FUNCTION_91	CALL_5
0x4005945	            0xeb0f	                           jmp 0x4005956	      5303	gui.c	FUNCTION_91	CALL_5
0x4005947	      0xbe00000000	                              mov esi, 0	      5305	gui.c	FUNCTION_91	CALL_6
0x400594c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5305	gui.c	FUNCTION_91	CALL_6
0x4005951	      0xe800000000	                          call 0x4005956	      5305	gui.c	FUNCTION_91	CALL_6
0x4005956	          0x83e308	                              and ebx, 8	      5306	gui.c	FUNCTION_91	IF_5
0x4005959	            0x740f	                            je 0x400596a	      5306	gui.c	FUNCTION_91	IF_5
0x400595b	      0xbe00000000	                              mov esi, 0	      5307	gui.c	FUNCTION_91	CALL_7
0x4005960	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5307	gui.c	FUNCTION_91	CALL_7
0x4005965	      0xe800000000	                          call 0x400596a	      5307	gui.c	FUNCTION_91	CALL_7
0x400596a	          0x83fd04	                              cmp ebp, 4	      5308	gui.c	FUNCTION_91	IF_6
0x400596d	            0x7405	                            je 0x4005974	      5308	gui.c	FUNCTION_91	IF_6
0x400596f	          0x4585e4	                         test r12d, r12d	      5308	gui.c	FUNCTION_91	IF_6
0x4005972	            0x7414	                            je 0x4005988	      5308	gui.c	FUNCTION_91	IF_6
0x4005974	      0xba2f000000	                           mov edx, 0x2f	      5309	gui.c	FUNCTION_91	CALL_8
0x4005979	          0x4c89ee	                            mov rsi, r13	      5309	gui.c	FUNCTION_91	CALL_8
0x400597c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5309	gui.c	FUNCTION_91	CALL_8
0x4005981	      0xe84eadffff	                     call sym.concat_esc	      5309	gui.c	FUNCTION_91	CALL_8
0x4005986	            0xeb12	                           jmp 0x400599a	      5309	gui.c	FUNCTION_91	CALL_8
0x4005988	      0xba3f000000	                           mov edx, 0x3f	      5311	gui.c	FUNCTION_91	CALL_9
0x400598d	          0x4c89ee	                            mov rsi, r13	      5311	gui.c	FUNCTION_91	CALL_9
0x4005990	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5311	gui.c	FUNCTION_91	CALL_9
0x4005995	      0xe83aadffff	                     call sym.concat_esc	      5311	gui.c	FUNCTION_91	CALL_9
0x400599a	            0x85db	                           test ebx, ebx	      5312	gui.c	FUNCTION_91	IF_7
0x400599c	            0x740f	                            je 0x40059ad	      5312	gui.c	FUNCTION_91	IF_7
0x400599e	      0xbe00000000	                              mov esi, 0	      5313	gui.c	FUNCTION_91	CALL_10
0x40059a3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5313	gui.c	FUNCTION_91	CALL_10
0x40059a8	      0xe800000000	                          call 0x40059ad	      5313	gui.c	FUNCTION_91	CALL_10
0x40059ad	          0x83fd04	                              cmp ebp, 4	      5315	gui.c	FUNCTION_91	IF_8
0x40059b0	     0xf85dc010000	                           jne 0x4005b92	      5315	gui.c	FUNCTION_91	IF_8
0x40059b6	      0xbe00000000	                              mov esi, 0	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40059bb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40059c0	      0xe800000000	                          call 0x40059c5	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x40059c5	      0xbe00000000	                              mov esi, 0	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40059ca	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40059cf	      0xe800000000	                          call 0x40059d4	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40059d4	          0x4889c3	                            mov rbx, rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x40059d7	          0x4885c0	                           test rax, rax	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40059da	            0x740d	                            je 0x40059e9	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x40059dc	          0x4889c6	                            mov rsi, rax	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40059df	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40059e4	      0xe800000000	                          call 0x40059e9	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x40059e9	          0x4889df	                            mov rdi, rbx	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40059ec	      0xe800000000	                          call 0x40059f1	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x40059f1	      0xbe00000000	                              mov esi, 0	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40059f6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x40059fb	      0xe800000000	                          call 0x4005a00	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x4005a00	      0xbe00000000	                              mov esi, 0	      5325	gui.c	FUNCTION_91	CALL_16
0x4005a05	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5325	gui.c	FUNCTION_91	CALL_16
0x4005a0a	      0xe800000000	                          call 0x4005a0f	      5325	gui.c	FUNCTION_91	CALL_16
0x4005a0f	          0x83fd03	                              cmp ebp, 3	      5327	gui.c	FUNCTION_91	IF_10
0x4005a12	     0xf85b9000000	                           jne 0x4005ad1	      5327	gui.c	FUNCTION_91	IF_10
0x4005a18	      0xbe03000000	                              mov esi, 3	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4005a1d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4005a22	      0xe800000000	                          call 0x4005a27	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4005a27	      0x4889442430	             mov qword [rsp + 0x30], rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x4005a2c	    0xc78424d80000	               mov dword [rsp + 0xd8], 0	      5332	gui.c	FUNCTION_91	IF_10
0x4005a37	          0x4885c0	                           test rax, rax	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x4005a3a	     0xf8447010000	                            je 0x4005b87	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x4005a40	      0xe800000000	                          call 0x4005a45	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x4005a45	          0x4889c3	                            mov rbx, rax	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x4005a48	      0xba00000000	                              mov edx, 0	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a4d	          0x4889c6	                            mov rsi, rax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a50	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a55	      0xe800000000	                          call 0x4005a5a	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a5a	            0x85c0	                           test eax, eax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a5c	            0x7448	                            je 0x4005aa6	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x4005a5e	      0x483b5c2438	            cmp rbx, qword [rsp + 0x38] 	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4005a63	            0x7541	                           jne 0x4005aa6	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4005a65	      0xe800000000	                          call 0x4005a6a	      5341	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_20
0x4005a6a	      0xe800000000	                          call 0x4005a6f	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x4005a6f	          0x83f801	                              cmp eax, 1	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x4005a72	            0x754e	                           jne 0x4005ac2	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x4005a74	      0xbf00000000	                              mov edi, 0	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x4005a79	      0xe800000000	                          call 0x4005a7e	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x4005a7e	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4005a86	      0x482b7c2438	             sub rdi, qword [rsp + 0x38]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4005a8b	      0xba00000000	                              mov edx, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4005a90	      0xbe00000000	                              mov esi, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4005a95	      0xe800000000	                          call 0x4005a9a	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4005a9a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x4005a9f	      0xe800000000	                          call 0x4005aa4	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x4005aa4	            0xeb1c	                           jmp 0x4005ac2	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x4005aa6	      0xba05000000	                              mov edx, 5	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005aab	      0xbe00000000	                              mov esi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005ab0	      0xbf00000000	                              mov edi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005ab5	      0xe800000000	                          call 0x4005aba	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005aba	          0x4889c7	                            mov rdi, rax	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005abd	      0xe800000000	                          call 0x4005ac2	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4005ac2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4005ac7	      0xe800000000	                          call 0x4005acc	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4005acc	      0xe9b6000000	                           jmp 0x4005b87	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4005ad1	      0xbf00000000	                              mov edi, 0	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4005ad6	      0xe800000000	                          call 0x4005adb	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4005adb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4005ae0	      0xe800000000	                          call 0x4005ae5	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4005ae5	            0xeb3c	                           jmp 0x4005b23	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x4005ae7	    0x8b1d00000000	            mov ebx, dword [0x04005aed] 	      5373	gui.c	FUNCTION_91	ELSE_4
0x4005aed	        0x4183fc01	                             cmp r12d, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005af1	            0x19f6	                            sbb esi, esi	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005af3	          0x83e610	                           and esi, 0x10	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005af6	          0x83c62f	                           add esi, 0x2f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005af9	        0x4883ec08	                              sub rsp, 8	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005afd	            0x6a00	                                  push 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005aff	    0x41b900000000	                              mov r9d, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005b05	      0xb901000000	                              mov ecx, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005b0a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005b0f	      0xbf00000000	                              mov edi, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005b14	      0xe800000000	                          call 0x4005b19	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4005b19	    0x891d00000000	            mov dword [0x04005b1f], ebx 	      5376	gui.c	FUNCTION_91	ELSE_4
0x4005b1f	        0x4883c410	                           add rsp, 0x10	      5376	gui.c	FUNCTION_91	ELSE_4
0x4005b23	    0x44893d000000	           mov dword [0x04005b2a], r15d 	      5381	gui.c	FUNCTION_91
0x4005b2a	    0xf60500000000	           test byte [0x04005b31], 0x11 	      5383	gui.c	FUNCTION_91	IF_16
0x4005b31	            0x7419	                            je 0x4005b4c	      5383	gui.c	FUNCTION_91	IF_16
0x4005b33	      0xe800000000	                          call 0x4005b38	      5385	gui.c	FUNCTION_91	IF_16	CALL_31
0x4005b38	    0xc70500000000	               mov dword [0x04005b42], 0	      5386	gui.c	FUNCTION_91	IF_16
0x4005b42	    0xc70500000000	               mov dword [0x04005b4c], 0	      5387	gui.c	FUNCTION_91	IF_16
0x4005b4c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5390	gui.c	FUNCTION_91	CALL_32
0x4005b51	      0xe800000000	                          call 0x4005b56	      5390	gui.c	FUNCTION_91	CALL_32
0x4005b56	    0xc70500000000	               mov dword [0x04005b60], 0	      5391	gui.c	FUNCTION_91
0x4005b60	      0x837c241000	               cmp dword [rsp + 0x10], 0	      5392	gui.c	FUNCTION_91
0x4005b65	           0xf9fc0	                                 setg al	      5392	gui.c	FUNCTION_91
0x4005b68	           0xfb6c0	                           movzx eax, al	      5392	gui.c	FUNCTION_91
0x4005b6b	            0xeb05	                           jmp 0x4005b72	      5392	gui.c	FUNCTION_91
0x4005b6d	      0xb800000000	                              mov eax, 0	      5289	gui.c	FUNCTION_91	IF_1
0x4005b72	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      5393	gui.c	FUNCTION_91
0x4005b7a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5393	gui.c	FUNCTION_91
0x4005b83	            0x7435	                            je 0x4005bba	      5393	gui.c	FUNCTION_91
0x4005b85	            0xeb2e	                           jmp 0x4005bb5	      5393	gui.c	FUNCTION_91
0x4005b87	    0x41b80c030000	                          mov r8d, 0x30c	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x4005b8d	      0xe955ffffff	                           jmp 0x4005ae7	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x4005b92	      0xbe00000000	                              mov esi, 0	      5325	gui.c	FUNCTION_91	CALL_16
0x4005b97	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5325	gui.c	FUNCTION_91	CALL_16
0x4005b9c	      0xe800000000	                          call 0x4005ba1	      5325	gui.c	FUNCTION_91	CALL_16
0x4005ba1	    0x41b80c020000	                          mov r8d, 0x20c	      5367	gui.c	FUNCTION_91	ELSE_4
0x4005ba7	          0x83fd03	                              cmp ebp, 3	      5327	gui.c	FUNCTION_91	IF_10
0x4005baa	     0xf8537ffffff	                           jne 0x4005ae7	      5327	gui.c	FUNCTION_91	IF_10
0x4005bb0	      0xe963feffff	                           jmp 0x4005a18	      5327	gui.c	FUNCTION_91	IF_10
0x4005bb5	      0xe800000000	                          call 0x4005bba	      5393	gui.c	FUNCTION_91
0x4005bba	    0x4881c4f80000	                           add rsp, 0xf8	      5393	gui.c	FUNCTION_91
0x4005bc1	              0x5b	                                 pop rbx	      5393	gui.c	FUNCTION_91
0x4005bc2	              0x5d	                                 pop rbp	      5393	gui.c	FUNCTION_91
0x4005bc3	            0x415c	                                 pop r12	      5393	gui.c	FUNCTION_91
0x4005bc5	            0x415d	                                 pop r13	      5393	gui.c	FUNCTION_91
0x4005bc7	            0x415e	                                 pop r14	      5393	gui.c	FUNCTION_91
0x4005bc9	            0x415f	                                 pop r15	      5393	gui.c	FUNCTION_91
0x4005bcb	              0xc3	                                     ret	      5393	gui.c	FUNCTION_91
gui_do_scroll	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,12:FOR,1:CALL,14:DO,0	116
0x4004563	            0x4157	                                push r15	      4422	gui.c	FUNCTION_67
0x4004565	            0x4156	                                push r14	      4422	gui.c	FUNCTION_67
0x4004567	            0x4155	                                push r13	      4422	gui.c	FUNCTION_67
0x4004569	            0x4154	                                push r12	      4422	gui.c	FUNCTION_67
0x400456b	              0x55	                                push rbp	      4422	gui.c	FUNCTION_67
0x400456c	              0x53	                                push rbx	      4422	gui.c	FUNCTION_67
0x400456d	        0x4883ec18	                           sub rsp, 0x18	      4422	gui.c	FUNCTION_67
0x4004571	    0x488b1d000000	            mov rbx, qword [0x04004578] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004578	    0x8b1500000000	            mov edx, dword [0x0400457e] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x400457e	          0x4885db	                           test rbx, rbx	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004581	            0x7419	                            je 0x400459c	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004583	            0x85d2	                           test edx, edx	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004585	            0x7e15	                           jle 0x400459c	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004587	      0xb800000000	                              mov eax, 0	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x400458c	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004590	          0x83c001	                              add eax, 1	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x4004593	          0x4885db	                           test rbx, rbx	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004596	            0x7404	                            je 0x400459c	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x4004598	            0x39d0	                            cmp eax, edx	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x400459a	            0x7cf0	                            jl 0x400458c	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x400459c	          0x4885db	                           test rbx, rbx	      4435	gui.c	FUNCTION_67	IF_2
0x400459f	     0xf847e010000	                            je 0x4004723	      4435	gui.c	FUNCTION_67	IF_2
0x40045a5	        0x488b6b78	            mov rbp, qword [rbx + 0x78] 	      4442	gui.c	FUNCTION_67
0x40045a9	    0x488b05000000	            mov rax, qword [0x040045b0] 	      4442	gui.c	FUNCTION_67
0x40045b0	        0x488d7801	                      lea rdi, [rax + 1]	      4442	gui.c	FUNCTION_67
0x40045b4	      0xb800000000	                              mov eax, 0	      4444	gui.c	FUNCTION_67	IF_3
0x40045b9	          0x4829ef	                            sub rdi, rbp	      4443	gui.c	FUNCTION_67	IF_3
0x40045bc	     0xf8466010000	                            je 0x4004728	      4443	gui.c	FUNCTION_67	IF_3
0x40045c2	    0x4c8b25000000	            mov r12, qword [0x040045c9] 	      4446	gui.c	FUNCTION_67
0x40045c9	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      4449	gui.c	FUNCTION_67
0x40045d0	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	      4451	gui.c	FUNCTION_67
0x40045d4	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      4451	gui.c	FUNCTION_67
0x40045d7	        0x8944240c	              mov dword [rsp + 0xc], eax	      4451	gui.c	FUNCTION_67
0x40045db	        0x448b7b44	           mov r15d, dword [rbx + 0x44] 	      4451	gui.c	FUNCTION_67
0x40045df	    0x48891d000000	            mov qword [0x040045e6], rbx 	      4452	gui.c	FUNCTION_67
0x40045e6	        0x488b4308	                mov rax, qword [rbx + 8]	      4453	gui.c	FUNCTION_67
0x40045ea	    0x488905000000	            mov qword [0x040045f1], rax 	      4453	gui.c	FUNCTION_67
0x40045f1	          0x4885ff	                           test rdi, rdi	      4454	gui.c	FUNCTION_67	IF_4
0x40045f4	            0x791a	                           jns 0x4004610	      4454	gui.c	FUNCTION_67	IF_4
0x40045f6	    0x48833d000000	               cmp qword [0x040045fe], 0	      4455	gui.c	FUNCTION_67	CALL_2
0x40045fe	        0x400f94c6	                                sete sil	      4455	gui.c	FUNCTION_67	CALL_2
0x4004602	        0x400fb6f6	                          movzx esi, sil	      4455	gui.c	FUNCTION_67	CALL_2
0x4004606	          0x48f7df	                                 neg rdi	      4455	gui.c	FUNCTION_67	CALL_2
0x4004609	      0xe800000000	                          call 0x400460e	      4455	gui.c	FUNCTION_67	CALL_2
0x400460e	            0xeb15	                           jmp 0x4004625	      4455	gui.c	FUNCTION_67	CALL_2
0x4004610	    0x48833d000000	               cmp qword [0x04004618], 0	      4457	gui.c	FUNCTION_67	CALL_3
0x4004618	        0x400f94c6	                                sete sil	      4457	gui.c	FUNCTION_67	CALL_3
0x400461c	        0x400fb6f6	                          movzx esi, sil	      4457	gui.c	FUNCTION_67	CALL_3
0x4004620	      0xe800000000	                          call 0x4004625	      4457	gui.c	FUNCTION_67	CALL_3
0x4004625	    0x833d00000000	cmp dword [0x0400462c], 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x400462c	            0x750b	                           jne 0x4004639	      4461	gui.c	FUNCTION_67	IF_5
0x400462e	    0x48c705000000	               mov qword [0x04004639], 0	      4462	gui.c	FUNCTION_67	IF_5
0x4004639	        0x483b6b78	            cmp rbp, qword [rbx + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x400463d	            0x7509	                           jne 0x4004648	      4464	gui.c	FUNCTION_67	IF_6
0x400463f	    0x443bb3840000	           cmp r14d, dword [rbx + 0x84] 	      4466	gui.c	FUNCTION_67	IF_6
0x4004646	            0x742d	                            je 0x4004675	      4466	gui.c	FUNCTION_67	IF_6
0x4004648	    0x48833d000000	               cmp qword [0x04004650], 0	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4004650	            0x740a	                            je 0x400465c	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4004652	      0xe800000000	                          call 0x4004657	      4472	gui.c	FUNCTION_67	IF_6	IF_7	CALL_4
0x4004657	      0xe800000000	                          call 0x400465c	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x400465c	        0x4c3b6b38	            cmp r13, qword [rbx + 0x38] 	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4004660	            0x7408	                            je 0x400466a	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4004662	          0x8b7b48	            mov edi, dword [rbx + 0x48] 	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4004665	      0xe800000000	                          call 0x400466a	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x400466a	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4477	gui.c	FUNCTION_67	IF_6
0x400466e	    0x488983500500	            mov qword [rbx + 0x550], rax	      4477	gui.c	FUNCTION_67	IF_6
0x4004675	      0xe800000000	                          call 0x400467a	      4481	gui.c	FUNCTION_67	CALL_7
0x400467a	    0x4c8925000000	            mov qword [0x04004681], r12 	      4483	gui.c	FUNCTION_67
0x4004681	      0x498b442408	                mov rax, qword [r12 + 8]	      4484	gui.c	FUNCTION_67
0x4004686	    0x488905000000	            mov qword [0x0400468d], rax 	      4484	gui.c	FUNCTION_67
0x400468d	        0x483b6b78	            cmp rbp, qword [rbx + 0x78] 	      4490	gui.c	FUNCTION_67	IF_9
0x4004691	            0x7512	                           jne 0x40046a5	      4490	gui.c	FUNCTION_67	IF_9
0x4004693	    0x83bb28010000	              cmp dword [rbx + 0x128], 0	      4491	gui.c	FUNCTION_67	IF_9
0x400469a	            0x7509	                           jne 0x40046a5	      4491	gui.c	FUNCTION_67	IF_9
0x400469c	    0x443bb3840000	           cmp r14d, dword [rbx + 0x84] 	      4493	gui.c	FUNCTION_67	IF_9
0x40046a3	            0x743d	                            je 0x40046e2	      4493	gui.c	FUNCTION_67	IF_9
0x40046a5	      0xe800000000	                          call 0x40046aa	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40046aa	      0xba0a000000	                            mov edx, 0xa	      4497	gui.c	FUNCTION_67	IF_9
0x40046af	            0x85c0	                           test eax, eax	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40046b1	            0x740f	                            je 0x40046c2	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x40046b3	    0xc783f8000000	               mov dword [rbx + 0xf8], 0	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x40046bd	      0xba28000000	                           mov edx, 0x28	      4502	gui.c	FUNCTION_67	IF_9	IF_10
0x40046c2	    0x3b9328010000	           cmp edx, dword [rbx + 0x128] 	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40046c8	            0x7e06	                           jle 0x40046d0	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x40046ca	    0x899328010000	            mov dword [rbx + 0x128], edx	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x40046d0	      0xe800000000	                          call 0x40046d5	      4510	gui.c	FUNCTION_67	IF_9	CALL_9
0x40046d5	          0x4889df	                            mov rdi, rbx	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x40046d8	      0xe800000000	                          call 0x40046dd	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x40046dd	      0xe800000000	                          call 0x40046e2	      4512	gui.c	FUNCTION_67	IF_9	CALL_11
0x40046e2	      0xe800000000	                          call 0x40046e7	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40046e7	            0x85c0	                           test eax, eax	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40046e9	            0x7405	                            je 0x40046f0	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x40046eb	      0xe800000000	                          call 0x40046f0	      4518	gui.c	FUNCTION_67	CALL_13
0x40046f0	    0x488b15000000	            mov rdx, qword [0x040046f7] 	      4521	gui.c	FUNCTION_67	CALL_14
0x40046f7	      0xb800000000	                              mov eax, 0	      4521	gui.c	FUNCTION_67	CALL_14
0x40046fc	          0x4839da	                            cmp rdx, rbx	      4521	gui.c	FUNCTION_67	CALL_14
0x40046ff	            0x7527	                           jne 0x4004728	      4521	gui.c	FUNCTION_67	CALL_14
0x4004701	      0xb801000000	                              mov eax, 1	      4521	gui.c	FUNCTION_67	CALL_14
0x4004706	        0x4c3b6a38	            cmp r13, qword [rdx + 0x38] 	      4521	gui.c	FUNCTION_67	CALL_14
0x400470a	            0x751c	                           jne 0x4004728	      4521	gui.c	FUNCTION_67	CALL_14
0x400470c	        0x49c1e720	                           shl r15, 0x20	      4521	gui.c	FUNCTION_67	CALL_14
0x4004710	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4521	gui.c	FUNCTION_67	CALL_14
0x4004714	          0x4909c7	                             or r15, rax	      4521	gui.c	FUNCTION_67	CALL_14
0x4004717	        0x4c397a40	            cmp qword [rdx + 0x40], r15 	      4437	gui.c	FUNCTION_67	IF_2
0x400471b	           0xf95c0	                                setne al	      4437	gui.c	FUNCTION_67	IF_2
0x400471e	           0xfb6c0	                           movzx eax, al	      4437	gui.c	FUNCTION_67	IF_2
0x4004721	            0xeb05	                           jmp 0x4004728	      4437	gui.c	FUNCTION_67	IF_2
0x4004723	      0xb800000000	                              mov eax, 0	      4437	gui.c	FUNCTION_67	IF_2
0x4004728	        0x4883c418	                           add rsp, 0x18	      4522	gui.c	FUNCTION_67
0x400472c	              0x5b	                                 pop rbx	      4522	gui.c	FUNCTION_67
0x400472d	              0x5d	                                 pop rbp	      4522	gui.c	FUNCTION_67
0x400472e	            0x415c	                                 pop r12	      4522	gui.c	FUNCTION_67
0x4004730	            0x415d	                                 pop r13	      4522	gui.c	FUNCTION_67
0x4004732	            0x415e	                                 pop r14	      4522	gui.c	FUNCTION_67
0x4004734	            0x415f	                                 pop r15	      4522	gui.c	FUNCTION_67
0x4004736	              0xc3	                                     ret	      4522	gui.c	FUNCTION_67
gui_shell_closed	WHILE,0:functions,0:SWITCH,0:ELSE,0:IF,1:FOR,0:CALL,3:DO,0	30
0x4005667	    0x4881ec080100	                          sub rsp, 0x108	       816	gui.c	FUNCTION_9
0x400566e	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	gui.c	FUNCTION_9
0x4005677	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       816	gui.c	FUNCTION_9
0x400567f	            0x31c0	                            xor eax, eax	       816	gui.c	FUNCTION_9
0x4005681	          0x4889e7	                            mov rdi, rsp	       819	gui.c	FUNCTION_9
0x4005684	      0xbe00000000	                              mov esi, 0	       819	gui.c	FUNCTION_9
0x4005689	      0xb91e000000	                           mov ecx, 0x1e	       819	gui.c	FUNCTION_9
0x400568e	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       819	gui.c	FUNCTION_9
0x4005691	    0xc70500000000	               mov dword [0x0400569b], 1	       822	gui.c	FUNCTION_9
0x400569b	    0xc70500000000	               mov dword [0x040056a5], 1	       824	gui.c	FUNCTION_9
0x40056a5	    0xc70500000000	               mov dword [0x040056af], 1	       827	gui.c	FUNCTION_9
0x40056af	      0xbe00000000	                              mov esi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x40056b4	      0xbf00000000	                              mov edi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x40056b9	      0xe800000000	                          call 0x40056be	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x40056be	            0x85c0	                           test eax, eax	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x40056c0	            0x750a	                           jne 0x40056cc	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x40056c2	      0xbf00000000	                              mov edi, 0	       832	gui.c	FUNCTION_9	CALL_2
0x40056c7	      0xe800000000	                          call 0x40056cc	       832	gui.c	FUNCTION_9	CALL_2
0x40056cc	    0xc70500000000	               mov dword [0x040056d6], 0	       834	gui.c	FUNCTION_9
0x40056d6	      0xbf00000000	                              mov edi, 0	       835	gui.c	FUNCTION_9
0x40056db	          0x4889e6	                            mov rsi, rsp	       835	gui.c	FUNCTION_9
0x40056de	      0xb91e000000	                           mov ecx, 0x1e	       835	gui.c	FUNCTION_9
0x40056e3	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       835	gui.c	FUNCTION_9
0x40056e6	      0xe800000000	                          call 0x40056eb	       836	gui.c	FUNCTION_9	CALL_3
0x40056eb	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       837	gui.c	FUNCTION_9
0x40056f3	    0x644833042528	                xor rax, qword fs:[0x28]	       837	gui.c	FUNCTION_9
0x40056fc	            0x7405	                            je 0x4005703	       837	gui.c	FUNCTION_9
0x40056fe	      0xe800000000	                          call 0x4005703	       837	gui.c	FUNCTION_9
0x4005703	    0x4881c4080100	                          add rsp, 0x108	       837	gui.c	FUNCTION_9
0x400570a	              0xc3	                                     ret	       837	gui.c	FUNCTION_9
gui_get_wide_font	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,5:FOR,1:CALL,6:DO,0	59
0x40008fa	              0x53	                                push rbx	       980	gui.c	FUNCTION_12
0x40008fb	    0x4881ec600100	                          sub rsp, 0x160	       980	gui.c	FUNCTION_12
0x4000902	    0x64488b042528	                mov rax, qword fs:[0x28]	       980	gui.c	FUNCTION_12
0x400090b	    0x488984245801	            mov qword [rsp + 0x158], rax	       980	gui.c	FUNCTION_12
0x4000913	            0x31c0	                            xor eax, eax	       980	gui.c	FUNCTION_12
0x4000915	      0xb801000000	                              mov eax, 1	       986	gui.c	FUNCTION_12	IF_1
0x400091a	    0x833d00000000	               cmp dword [0x04000921], 0	       985	gui.c	FUNCTION_12	IF_1
0x4000921	     0xf84ab000000	                            je 0x40009d2	       985	gui.c	FUNCTION_12	IF_1
0x4000927	    0x488b05000000	            mov rax, qword [0x0400092e] 	       988	gui.c	FUNCTION_12	IF_2
0x400092e	          0x4885c0	                           test rax, rax	       988	gui.c	FUNCTION_12	IF_2
0x4000931	     0xf84b0000000	                            je 0x40009e7	       988	gui.c	FUNCTION_12	IF_2
0x4000937	          0x803800	                       cmp byte [rax], 0	       988	gui.c	FUNCTION_12	IF_2
0x400093a	     0xf84a7000000	                            je 0x40009e7	       988	gui.c	FUNCTION_12	IF_2
0x4000940	      0x4889442408	                mov qword [rsp + 8], rax	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000945	            0xeb30	                           jmp 0x4000977	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000947	      0xb900000000	                              mov ecx, 0	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x400094c	      0xba40010000	                          mov edx, 0x140	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000951	      0x488d742410	                   lea rsi, [rsp + 0x10]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000956	      0x488d7c2408	                      lea rdi, [rsp + 8]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x400095b	      0xe800000000	                          call 0x4000960	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0x4000960	      0xbe00000000	                              mov esi, 0	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000965	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x400096a	      0xe800000000	                          call 0x400096f	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x400096f	          0x4889c3	                            mov rbx, rax	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0x4000972	          0x4885c0	                           test rax, rax	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0x4000975	            0x7511	                           jne 0x4000988	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0x4000977	      0x488b442408	                mov rax, qword [rsp + 8]	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x400097c	          0x803800	                       cmp byte [rax], 0	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x400097f	            0x75c6	                           jne 0x4000947	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0x4000981	      0xb800000000	                              mov eax, 0	       999	gui.c	FUNCTION_12	IF_2	IF_4
0x4000986	            0xeb4a	                           jmp 0x40009d2	       999	gui.c	FUNCTION_12	IF_2	IF_4
0x4000988	    0x488b3d000000	            mov rdi, qword [0x0400098f] 	      1002	gui.c	FUNCTION_12	CALL_3
0x400098f	      0xe800000000	                          call 0x4000994	      1002	gui.c	FUNCTION_12	CALL_3
0x4000994	    0x488b35000000	            mov rsi, qword [0x0400099b] 	      1005	gui.c	FUNCTION_12	IF_5
0x400099b	          0x4885f6	                           test rsi, rsi	      1005	gui.c	FUNCTION_12	IF_5
0x400099e	            0x7426	                            je 0x40009c6	      1005	gui.c	FUNCTION_12	IF_5
0x40009a0	          0x4889df	                            mov rdi, rbx	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x40009a3	      0xe800000000	                          call 0x40009a8	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x40009a8	            0x85c0	                           test eax, eax	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x40009aa	            0x741a	                            je 0x40009c6	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0x40009ac	    0x48c705000000	               mov qword [0x040009b7], 0	      1008	gui.c	FUNCTION_12	IF_5
0x40009b7	          0x4889df	                            mov rdi, rbx	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x40009ba	      0xe800000000	                          call 0x40009bf	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x40009bf	      0xb801000000	                              mov eax, 1	      1022	gui.c	FUNCTION_12
0x40009c4	            0xeb0c	                           jmp 0x40009d2	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0x40009c6	    0x48891d000000	            mov qword [0x040009cd], rbx 	      1013	gui.c	FUNCTION_12	ELSE_1
0x40009cd	      0xb801000000	                              mov eax, 1	      1022	gui.c	FUNCTION_12
0x40009d2	    0x488b94245801	           mov rdx, qword [rsp + 0x158] 	      1023	gui.c	FUNCTION_12
0x40009da	    0x644833142528	                xor rdx, qword fs:[0x28]	      1023	gui.c	FUNCTION_12
0x40009e3	            0x741a	                            je 0x40009ff	      1023	gui.c	FUNCTION_12
0x40009e5	            0xeb13	                           jmp 0x40009fa	      1023	gui.c	FUNCTION_12
0x40009e7	    0x488b3d000000	            mov rdi, qword [0x040009ee] 	      1002	gui.c	FUNCTION_12	CALL_3
0x40009ee	      0xe800000000	                          call 0x40009f3	      1002	gui.c	FUNCTION_12	CALL_3
0x40009f3	      0xbb00000000	                              mov ebx, 0	      1002	gui.c	FUNCTION_12	CALL_3
0x40009f8	            0xebcc	                           jmp 0x40009c6	      1002	gui.c	FUNCTION_12	CALL_3
0x40009fa	      0xe800000000	                          call 0x40009ff	      1023	gui.c	FUNCTION_12
0x40009ff	    0x4881c4600100	                          add rsp, 0x160	      1023	gui.c	FUNCTION_12
0x4000a06	              0x5b	                                 pop rbx	      1023	gui.c	FUNCTION_12
0x4000a07	              0xc3	                                     ret	      1023	gui.c	FUNCTION_12
get_find_dialog_text	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,7:FOR,1:CALL,10:DO,0	114
0x400570b	            0x4156	                                push r14	      5188	gui.c	FUNCTION_89
0x400570d	            0x4155	                                push r13	      5188	gui.c	FUNCTION_89
0x400570f	            0x4154	                                push r12	      5188	gui.c	FUNCTION_89
0x4005711	              0x55	                                push rbp	      5188	gui.c	FUNCTION_89
0x4005712	              0x53	                                push rbx	      5188	gui.c	FUNCTION_89
0x4005713	          0x4889fd	                            mov rbp, rdi	      5188	gui.c	FUNCTION_89
0x4005716	          0x4989f5	                            mov r13, rsi	      5188	gui.c	FUNCTION_89
0x4005719	          0x4989d6	                            mov r14, rdx	      5188	gui.c	FUNCTION_89
0x400571c	          0x803f00	                       cmp byte [rdi], 0	      5191	gui.c	FUNCTION_89	IF_1
0x400571f	            0x7508	                           jne 0x4005729	      5191	gui.c	FUNCTION_89	IF_1
0x4005721	      0xe800000000	                          call 0x4005726	      5192	gui.c	FUNCTION_89	CALL_1
0x4005726	          0x4889c5	                            mov rbp, rax	      5192	gui.c	FUNCTION_89	CALL_1
0x4005729	          0x4885ed	                           test rbp, rbp	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x400572c	     0xf843d010000	                            je 0x400586f	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x4005732	          0x4889ef	                            mov rdi, rbp	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x4005735	      0xe800000000	                          call 0x400573a	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x400573a	          0x4889c5	                            mov rbp, rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x400573d	          0x4885c0	                           test rax, rax	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x4005740	     0xf8429010000	                            je 0x400586f	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x4005746	      0xb800000000	                              mov eax, 0	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x400574b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4005752	          0x4889ef	                            mov rdi, rbp	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4005755	            0xf2ae	              repne scasb al, byte [rdi]	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4005757	          0x48f7d1	                                 not rcx	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x400575a	        0x488d59ff	                      lea rbx, [rcx - 1]	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x400575e	          0x4189dc	                           mov r12d, ebx	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x4005761	          0x83fb01	                              cmp ebx, 1	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005764	            0x7e6c	                           jle 0x40057d2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005766	      0xbf00000000	                              mov edi, 0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400576b	      0xb902000000	                              mov ecx, 2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005770	          0x4889ee	                            mov rsi, rbp	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005773	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005775	           0xf97c2	                                 seta dl	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x4005778	           0xf92c0	                                 setb al	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400577b	            0x38c2	                              cmp dl, al	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400577d	            0x751c	                           jne 0x400579b	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x400577f	          0x8d53ff	                      lea edx, [rbx - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4005782	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4005785	        0x488d7502	                      lea rsi, [rbp + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x4005789	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x400578c	      0xe800000000	                          call 0x4005791	        59	string3.h	FUNCTION_95	CALL_3
0x4005791	        0x448d63fe	                     lea r12d, [rbx - 2]	      5207	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4
0x4005795	        0x4183fc01	                             cmp r12d, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4005799	            0x7e37	                           jle 0x40057d2	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400579b	        0x807d005c	                    cmp byte [rbp], 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400579f	            0x7531	                           jne 0x40057d2	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057a1	         0xfb64501	               movzx eax, byte [rbp + 1]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057a5	            0x89c2	                            mov edx, eax	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057a7	          0x83e2df	                     and edx, 0xffffffdf	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057aa	          0x80fa43	                            cmp dl, 0x43	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057ad	            0x7523	                           jne 0x40057d2	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057af	            0x3c43	                            cmp al, 0x43	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057b1	           0xf94c0	                                 sete al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057b4	           0xfb6c0	                           movzx eax, al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057b7	          0x418906	                    mov dword [r14], eax	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057ba	      0x418d5424ff	                      lea edx, [r12 - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x40057bf	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x40057c2	        0x488d7502	                      lea rsi, [rbp + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x40057c6	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x40057c9	      0xe800000000	                          call 0x40057ce	        59	string3.h	FUNCTION_95	CALL_3
0x40057ce	        0x4183ec02	                             sub r12d, 2	      5215	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40057d2	        0x4183fc03	                             cmp r12d, 3	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40057d6	            0x7e58	                           jle 0x4005830	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40057d8	      0xbf00000000	                              mov edi, 0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057dd	      0xb902000000	                              mov ecx, 2	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057e2	          0x4889ee	                            mov rsi, rbp	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057e7	           0xf97c2	                                 seta dl	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057ea	           0xf92c0	                                 setb al	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057ed	            0x38c2	                              cmp dl, al	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057ef	            0x753f	                           jne 0x4005830	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x40057f1	          0x4963dc	                        movsxd rbx, r12d	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40057f4	      0x488d741dfe	                lea rsi, [rbp + rbx - 2]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40057f9	      0xbf00000000	                              mov edi, 0	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x40057fe	      0xb902000000	                              mov ecx, 2	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4005803	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4005805	           0xf97c2	                                 seta dl	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4005808	           0xf92c0	                                 setb al	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x400580b	            0x38c2	                              cmp dl, al	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x400580d	            0x7521	                           jne 0x4005830	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x400580f	    0x41c745000100	                      mov dword [r13], 1	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4005817	      0x418d5424fc	                      lea edx, [r12 - 4]	        59	string3.h	FUNCTION_95	CALL_3
0x400581c	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x400581f	        0x488d7502	                      lea rsi, [rbp + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x4005823	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x4005826	      0xe800000000	                          call 0x400582b	        59	string3.h	FUNCTION_95	CALL_3
0x400582b	      0xc6441dfc00	             mov byte [rbp + rbx - 4], 0	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4005830	      0xb800000000	                              mov eax, 0	      5188	gui.c	FUNCTION_89
0x4005835	            0xeb30	                           jmp 0x4005867	      5188	gui.c	FUNCTION_89
0x4005837	          0x4863d0	                         movsxd rdx, eax	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400583a	      0x488d7c1500	                    lea rdi, [rbp + rdx]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400583f	          0x803f5c	                    cmp byte [rdi], 0x5c	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005842	            0x7521	                           jne 0x4005865	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005844	      0x488d741501	                lea rsi, [rbp + rdx + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005849	           0xfb616	                   movzx edx, byte [rsi]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400584c	          0x83e2ef	                     and edx, 0xffffffef	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400584f	          0x80fa2f	                            cmp dl, 0x2f	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005852	            0x7511	                           jne 0x4005865	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005854	          0x4489e2	                           mov edx, r12d	        59	string3.h	FUNCTION_95	CALL_3
0x4005857	            0x29c2	                            sub edx, eax	        59	string3.h	FUNCTION_95	CALL_3
0x4005859	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x400585c	      0xe800000000	                          call 0x4005861	        59	string3.h	FUNCTION_95	CALL_3
0x4005861	        0x4183ec01	                             sub r12d, 1	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005865	            0x89d8	                            mov eax, ebx	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4005867	          0x8d5801	                      lea ebx, [rax + 1]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400586a	          0x4139dc	                           cmp r12d, ebx	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400586d	            0x7fc8	                            jg 0x4005837	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400586f	          0x4889e8	                            mov rax, rbp	      5239	gui.c	FUNCTION_89
0x4005872	              0x5b	                                 pop rbx	      5239	gui.c	FUNCTION_89
0x4005873	              0x5d	                                 pop rbp	      5239	gui.c	FUNCTION_89
0x4005874	            0x415c	                                 pop r12	      5239	gui.c	FUNCTION_89
0x4005876	            0x415d	                                 pop r13	      5239	gui.c	FUNCTION_89
0x4005878	            0x415e	                                 pop r14	      5239	gui.c	FUNCTION_89
0x400587a	              0xc3	                                     ret	      5239	gui.c	FUNCTION_89
gui_update_scrollbars	WHILE,0:functions,0:SWITCH,0:ELSE,1:IF,25:FOR,1:CALL,13:DO,0	201
0x4002d3c	            0x4157	                                push r15	      4179	gui.c	FUNCTION_65
0x4002d3e	            0x4156	                                push r14	      4179	gui.c	FUNCTION_65
0x4002d40	            0x4155	                                push r13	      4179	gui.c	FUNCTION_65
0x4002d42	            0x4154	                                push r12	      4179	gui.c	FUNCTION_65
0x4002d44	              0x55	                                push rbp	      4179	gui.c	FUNCTION_65
0x4002d45	              0x53	                                push rbx	      4179	gui.c	FUNCTION_65
0x4002d46	        0x4883ec18	                           sub rsp, 0x18	      4179	gui.c	FUNCTION_65
0x4002d4a	          0x4189fe	                           mov r14d, edi	      4179	gui.c	FUNCTION_65
0x4002d4d	      0xe8c2d4ffff	     call sym.gui_update_horiz_scrollbar	      4188	gui.c	FUNCTION_65	CALL_1
0x4002d52	    0x48833d000000	               cmp qword [0x04002d5a], 0	      4193	gui.c	FUNCTION_65	IF_1
0x4002d5a	     0xf8438030000	                            je 0x4003098	      4193	gui.c	FUNCTION_65	IF_1
0x4002d60	          0x4585f6	                         test r14d, r14d	      4202	gui.c	FUNCTION_65	IF_2
0x4002d63	            0x7561	                           jne 0x4002dc6	      4202	gui.c	FUNCTION_65	IF_2
0x4002d65	    0x8b0500000000	            mov eax, dword [0x04002d6b] 	      4202	gui.c	FUNCTION_65	IF_2
0x4002d6b	          0x83f801	                              cmp eax, 1	      4202	gui.c	FUNCTION_65	IF_2
0x4002d6e	            0x7756	                            ja 0x4002dc6	      4202	gui.c	FUNCTION_65	IF_2
0x4002d70	    0x833d00000000	               cmp dword [0x04002d77], 0	      4203	gui.c	FUNCTION_65	IF_2
0x4002d77	            0x744d	                            je 0x4002dc6	      4203	gui.c	FUNCTION_65	IF_2
0x4002d79	    0x833d00000000	               cmp dword [0x04002d80], 0	      4204	gui.c	FUNCTION_65	IF_2
0x4002d80	            0x7444	                            je 0x4002dc6	      4204	gui.c	FUNCTION_65	IF_2
0x4002d82	    0x488b3d000000	            mov rdi, qword [0x04002d89] 	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x4002d89	          0x4885ff	                           test rdi, rdi	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x4002d8c	            0x7438	                            je 0x4002dc6	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x4002d8e	    0x488b8fb81800	          mov rcx, qword [rdi + 0x18b8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002d95	    0x488b97b01800	          mov rdx, qword [rdi + 0x18b0] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002d9c	    0x488bb7a81800	          mov rsi, qword [rdi + 0x18a8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002da3	    0x41b801000000	                              mov r8d, 1	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002da9	          0x4129c0	                            sub r8d, eax	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002dac	          0x4489c0	                            mov eax, r8d	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002daf	            0x4898	                                    cdqe	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002db1	        0x488d0480	                  lea rax, [rax + rax*4]	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002db5	        0x48c1e004	                              shl rax, 4	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002db9	    0x488dbc079018	           lea rdi, [rdi + rax + 0x1890]	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002dc1	      0xe800000000	                          call 0x4002dc6	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x4002dc6	    0x8b0500000000	            mov eax, dword [0x04002dcc] 	      4220	gui.c	FUNCTION_65
0x4002dcc	          0x83c001	                              add eax, 1	      4220	gui.c	FUNCTION_65
0x4002dcf	    0x890500000000	            mov dword [0x04002dd5], eax 	      4220	gui.c	FUNCTION_65
0x4002dd5	    0x488b1d000000	            mov rbx, qword [0x04002ddc] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4002ddc	          0x4885db	                           test rbx, rbx	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4002ddf	     0xf8489020000	                            je 0x400306e	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4002de5	    0x41bf00000000	                             mov r15d, 0	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4002deb	        0x488b5308	                mov rdx, qword [rbx + 8]	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4002def	          0x4885d2	                           test rdx, rdx	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4002df2	     0xf8469020000	                            je 0x4003061	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x4002df8	          0x4585f6	                         test r14d, r14d	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002dfb	            0x7516	                           jne 0x4002e13	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002dfd	    0x833d00000000	               cmp dword [0x04002e04], 1	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002e04	            0x770d	                            ja 0x4002e13	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002e06	    0x483b1d000000	            cmp rbx, qword [0x04002e0d] 	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002e0d	     0xf844e020000	                            je 0x4003061	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x4002e13	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e19	          0x4863c1	                         movsxd rax, ecx	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e1c	          0x4889c5	                            mov rbp, rax	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e1f	          0x48032a	                    add rbp, qword [rdx]	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e22	        0x4883ed02	                              sub rbp, 2	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e26	        0x490f48ef	                          cmovs rbp, r15	      4235	gui.c	FUNCTION_65	FOR_1
0x4002e2a	        0x4c8d6501	                      lea r12, [rbp + 1]	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4002e2e	          0x4c39e0	                            cmp rax, r12	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4002e31	        0x4c0f4ee0	                         cmovle r12, rax	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x4002e35	          0x4d85e4	                           test r12, r12	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e38	            0x7e10	                           jle 0x4002e4a	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e3a	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e41	        0x4883e802	                              sub rax, 2	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e45	          0x4839e8	                            cmp rax, rbp	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e48	            0x7e49	                           jle 0x4002e93	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e4a	    0xc783c4180000	            mov dword [rbx + 0x18c4], 0 	      4270	gui.c	FUNCTION_65	FOR_1	IF_11
0x4002e54	    0x833d00000000	               cmp dword [0x04002e5b], 0	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4002e5b	            0x7412	                            je 0x4002e6f	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x4002e5d	      0xba00000000	                              mov edx, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4002e62	      0xbe00000000	                              mov esi, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4002e67	          0x4889df	                            mov rdi, rbx	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4002e6a	      0xe88bd5ffff	               call sym.gui_do_scrollbar	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x4002e6f	    0x833d00000000	               cmp dword [0x04002e76], 0	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x4002e76	     0xf84e5010000	                            je 0x4003061	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x4002e7c	      0xba00000000	                              mov edx, 0	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x4002e81	      0xbe01000000	                              mov esi, 1	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x4002e86	          0x4889df	                            mov rdi, rbx	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x4002e89	      0xe86cd5ffff	               call sym.gui_do_scrollbar	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x4002e8e	      0xe9ce010000	                           jmp 0x4003061	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x4002e93	          0x4989ed	                            mov r13, rbp	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4002e96	          0x4d29e5	                            sub r13, r12	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4002e99	        0x4983c501	                              add r13, 1	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x4002e9d	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4239	gui.c	FUNCTION_65	FOR_1
0x4002ea1	        0x4883e801	                              sub rax, 1	      4239	gui.c	FUNCTION_65	FOR_1
0x4002ea5	          0x4c39e8	                            cmp rax, r13	      4239	gui.c	FUNCTION_65	FOR_1
0x4002ea8	        0x4c0f4ee8	                         cmovle r13, rax	      4239	gui.c	FUNCTION_65	FOR_1
0x4002eac	          0x4d85ed	                           test r13, r13	      4239	gui.c	FUNCTION_65	FOR_1
0x4002eaf	        0x4d0f48ef	                          cmovs r13, r15	      4239	gui.c	FUNCTION_65	FOR_1
0x4002eb3	          0x4585f6	                         test r14d, r14d	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002eb6	            0x7546	                           jne 0x4002efe	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002eb8	    0x3b8bc4180000	          cmp ecx, dword [rbx + 0x18c4] 	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ebe	            0x753e	                           jne 0x4002efe	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ec0	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ec6	    0x3983c0180000	          cmp dword [rbx + 0x18c0], eax 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ecc	            0x7530	                           jne 0x4002efe	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ece	    0x8b83a4000000	            mov eax, dword [rbx + 0xa4] 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ed4	    0x3983cc180000	          cmp dword [rbx + 0x18cc], eax 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002eda	            0x7522	                           jne 0x4002efe	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002edc	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ee2	    0x3983c8180000	          cmp dword [rbx + 0x18c8], eax 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ee8	            0x7514	                           jne 0x4002efe	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002eea	    0x488b05000000	            mov rax, qword [0x04002ef1] 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ef1	    0x483905000000	            cmp qword [0x04002ef8], rax 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002ef8	     0xf84d3000000	                            je 0x4002fd1	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002efe	    0x898bc4180000	          mov dword [rbx + 0x18c4], ecx 	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f04	    0x8b939c000000	            mov edx, dword [rbx + 0x9c] 	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f0a	    0x8993c0180000	          mov dword [rbx + 0x18c0], edx 	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f10	    0x8b83a4000000	            mov eax, dword [rbx + 0xa4] 	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f16	    0x8983cc180000	          mov dword [rbx + 0x18cc], eax 	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f1c	    0x8bb3ac000000	            mov esi, dword [rbx + 0xac] 	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f22	    0x89b3c8180000	          mov dword [rbx + 0x18c8], esi 	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f28	    0x8b3500000000	            mov esi, dword [0x04002f2e] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f2e	             0x1c1	                            add ecx, eax	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f30	           0xfafce	                           imul ecx, esi	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f33	        0x894c2408	                mov dword [rsp + 8], ecx	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f37	           0xfaff2	                           imul esi, edx	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f3a	        0x8974240c	              mov dword [rsp + 0xc], esi	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f3e	    0x8b0500000000	            mov eax, dword [0x04002f44] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f44	            0x85d2	                           test edx, edx	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x4002f46	            0x7408	                            je 0x4002f50	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x4002f48	             0x1c6	                            add esi, eax	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f4a	        0x8974240c	              mov dword [rsp + 0xc], esi	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f4e	            0xeb04	                           jmp 0x4002f54	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x4002f50	         0x1442408	                add dword [rsp + 8], eax	      4317	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x4002f54	    0x833d00000000	               cmp dword [0x04002f5b], 0	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x4002f5b	            0x7433	                            je 0x4002f90	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x4002f5d	    0x488dbb901800	                 lea rdi, [rbx + 0x1890]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f64	      0x448b442408	                mov r8d, dword [rsp + 8]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f69	    0x8b0d00000000	            mov ecx, dword [0x04002f6f] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f6f	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f73	    0x8b3500000000	            mov esi, dword [0x04002f79] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f79	      0xe800000000	                          call 0x4002f7e	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x4002f7e	      0xba01000000	                              mov edx, 1	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4002f83	      0xbe00000000	                              mov esi, 0	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4002f88	          0x4889df	                            mov rdi, rbx	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4002f8b	      0xe86ad4ffff	               call sym.gui_do_scrollbar	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x4002f90	    0x833d00000000	               cmp dword [0x04002f97], 0	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x4002f97	            0x7433	                            je 0x4002fcc	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x4002f99	    0x488dbbe01800	                 lea rdi, [rbx + 0x18e0]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002fa0	      0x448b442408	                mov r8d, dword [rsp + 8]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002fa5	    0x8b0d00000000	            mov ecx, dword [0x04002fab] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002fab	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002faf	    0x8b3500000000	            mov esi, dword [0x04002fb5] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002fb5	      0xe800000000	                          call 0x4002fba	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x4002fba	      0xba01000000	                              mov edx, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4002fbf	      0xbe01000000	                              mov esi, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4002fc4	          0x4889df	                            mov rdi, rbx	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4002fc7	      0xe82ed4ffff	               call sym.gui_do_scrollbar	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x4002fcc	          0x4585f6	                         test r14d, r14d	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fcf	            0x751b	                           jne 0x4002fec	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fd1	    0x4c3baba81800	          cmp r13, qword [rbx + 0x18a8] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fd8	            0x7512	                           jne 0x4002fec	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fda	    0x4c39a3b01800	          cmp qword [rbx + 0x18b0], r12 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fe1	            0x7509	                           jne 0x4002fec	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fe3	    0x4839abb81800	          cmp qword [rbx + 0x18b8], rbp 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fea	            0x7475	                            je 0x4003061	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002fec	    0x4c89aba81800	          mov qword [rbx + 0x18a8], r13 	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002ff3	    0x4c89a3b01800	          mov qword [rbx + 0x18b0], r12 	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4002ffa	    0x4889abb81800	          mov qword [rbx + 0x18b8], rbp 	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x4003001	    0x833d00000000	               cmp dword [0x04003008], 0	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x4003008	            0x7427	                            je 0x4003031	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x400300a	    0x833d00000000	               cmp dword [0x04003011], 0	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x4003011	            0x7509	                           jne 0x400301c	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x4003013	    0x483b1d000000	            cmp rbx, qword [0x0400301a] 	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x400301a	            0x7471	                            je 0x400308d	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x400301c	    0x488dbb901800	                 lea rdi, [rbx + 0x1890]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x4003023	          0x4889e9	                            mov rcx, rbp	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x4003026	          0x4c89e2	                            mov rdx, r12	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x4003029	          0x4c89ee	                            mov rsi, r13	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x400302c	      0xe800000000	                          call 0x4003031	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x4003031	    0x833d00000000	               cmp dword [0x04003038], 0	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003038	            0x7427	                            je 0x4003061	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400303a	    0x833d00000000	               cmp dword [0x04003041], 1	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003041	            0x7509	                           jne 0x400304c	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003043	    0x483b1d000000	            cmp rbx, qword [0x0400304a] 	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400304a	            0x7415	                            je 0x4003061	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x400304c	    0x488dbbe01800	                 lea rdi, [rbx + 0x18e0]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4003053	          0x4889e9	                            mov rcx, rbp	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4003056	          0x4c89e2	                            mov rdx, r12	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4003059	          0x4c89ee	                            mov rsi, r13	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x400305c	      0xe800000000	                          call 0x4003061	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x4003061	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4003065	          0x4885db	                           test rbx, rbx	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x4003068	     0xf857dfdffff	                           jne 0x4002deb	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x400306e	    0x488b05000000	            mov rax, qword [0x04003075] 	      4367	gui.c	FUNCTION_65
0x4003075	    0x488905000000	            mov qword [0x0400307c], rax 	      4367	gui.c	FUNCTION_65
0x400307c	    0x8b0500000000	            mov eax, dword [0x04003082] 	      4368	gui.c	FUNCTION_65
0x4003082	          0x83e801	                              sub eax, 1	      4368	gui.c	FUNCTION_65
0x4003085	    0x890500000000	            mov dword [0x0400308b], eax 	      4368	gui.c	FUNCTION_65
0x400308b	            0xeb0b	                           jmp 0x4003098	      4368	gui.c	FUNCTION_65
0x400308d	    0x833d00000000	               cmp dword [0x04003094], 0	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003094	            0x74cb	                            je 0x4003061	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003096	            0xebb4	                           jmp 0x400304c	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x4003098	        0x4883c418	                           add rsp, 0x18	      4369	gui.c	FUNCTION_65
0x400309c	              0x5b	                                 pop rbx	      4369	gui.c	FUNCTION_65
0x400309d	              0x5d	                                 pop rbp	      4369	gui.c	FUNCTION_65
0x400309e	            0x415c	                                 pop r12	      4369	gui.c	FUNCTION_65
0x40030a0	            0x415d	                                 pop r13	      4369	gui.c	FUNCTION_65
0x40030a2	            0x415e	                                 pop r14	      4369	gui.c	FUNCTION_65
0x40030a4	            0x415f	                                 pop r15	      4369	gui.c	FUNCTION_65
0x40030a6	              0xc3	                                     ret	      4369	gui.c	FUNCTION_65
