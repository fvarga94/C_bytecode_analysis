status_match_len	functions,0:IF,1:DO,0:ELSE,0:CALL,4:FOR,0:WHILE,1:SWITCH,0	61
0x4001620	            0x4155	                                push r13	      6587	screen.c	FUNCTION_39
0x4001622	            0x4154	                                push r12	      6587	screen.c	FUNCTION_39
0x4001624	          0x4989fc	                            mov r12, rdi	      6587	screen.c	FUNCTION_39
0x4001627	              0x55	                                push rbp	      6587	screen.c	FUNCTION_39
0x4001628	              0x53	                                push rbx	      6587	screen.c	FUNCTION_39
0x4001629	          0x4889f3	                            mov rbx, rsi	      6587	screen.c	FUNCTION_39
0x400162c	        0x4883ec08	                              sub rsp, 8	      6587	screen.c	FUNCTION_39
0x4001630	            0x8b07	                    mov eax, dword [rdi]	      6591	screen.c	FUNCTION_39
0x4001632	          0x83f80b	                            cmp eax, 0xb	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x4001635	            0x7471	                            je 0x40016a8	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x4001637	          0x83f815	                           cmp eax, 0x15	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x400163a	            0x746c	                            je 0x40016a8	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x400163c	            0x31ed	                            xor ebp, ebp	      6599	screen.c	FUNCTION_39	WHILE_1
0x400163e	            0x31c0	                            xor eax, eax	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001640	          0x803b00	                       cmp byte [rbx], 0	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001643	      0x4d8d6c2428	                   lea r13, [r12 + 0x28]	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001648	            0x750e	                           jne 0x4001658	      6599	screen.c	FUNCTION_39	WHILE_1
0x400164a	            0xeb4d	                           jmp 0x4001699	      6599	screen.c	FUNCTION_39	WHILE_1
0x400164c	         0xf1f4000	                         nop dword [rax]	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001650	          0x4801c3	                            add rbx, rax	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001653	          0x803b00	                       cmp byte [rbx], 0	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001656	            0x743f	                            je 0x4001697	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001658	          0x4889da	                            mov rdx, rbx	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x400165b	          0x4c89ee	                            mov rsi, r13	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x400165e	          0x4c89e7	                            mov rdi, r12	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x4001661	      0xe83affffff	  call sym.skip_status_match_char.isra.7	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x4001666	            0x4898	                                    cdqe	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x4001668	          0x4801c3	                            add rbx, rax	      6601	screen.c	FUNCTION_39	WHILE_1	CALL_2
0x400166b	          0x4889df	                            mov rdi, rbx	      6602	screen.c	FUNCTION_39	WHILE_1	CALL_3
0x400166e	      0xe800000000	                          call 0x4001673	      6602	screen.c	FUNCTION_39	WHILE_1	CALL_3
0x4001673	    0x8b1500000000	            mov edx, dword [0x04001679] 	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001679	             0x1c5	                            add ebp, eax	      6602	screen.c	FUNCTION_39	WHILE_1	CALL_3
0x400167b	      0xb801000000	                              mov eax, 1	      6602	screen.c	FUNCTION_39	WHILE_1	CALL_3
0x4001680	            0x85d2	                           test edx, edx	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001682	            0x74cc	                            je 0x4001650	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001684	          0x4889df	                            mov rdi, rbx	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001687	    0xff1500000000	                 call qword [0x0400168d]	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x400168d	            0x4898	                                    cdqe	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x400168f	          0x4801c3	                            add rbx, rax	      6603	screen.c	FUNCTION_39	WHILE_1	CALL_4
0x4001692	          0x803b00	                       cmp byte [rbx], 0	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001695	            0x75c1	                           jne 0x4001658	      6599	screen.c	FUNCTION_39	WHILE_1
0x4001697	            0x89e8	                            mov eax, ebp	      6602	screen.c	FUNCTION_39	WHILE_1	CALL_3
0x4001699	        0x4883c408	                              add rsp, 8	      6607	screen.c	FUNCTION_39
0x400169d	              0x5b	                                 pop rbx	      6607	screen.c	FUNCTION_39
0x400169e	              0x5d	                                 pop rbp	      6607	screen.c	FUNCTION_39
0x400169f	            0x415c	                                 pop r12	      6607	screen.c	FUNCTION_39
0x40016a1	            0x415d	                                 pop r13	      6607	screen.c	FUNCTION_39
0x40016a3	              0xc3	                                     ret	      6607	screen.c	FUNCTION_39
0x40016a4	         0xf1f4000	                         nop dword [rax]	      6607	screen.c	FUNCTION_39
0x40016a8	          0x4889df	                            mov rdi, rbx	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x40016ab	      0xe800000000	                          call 0x40016b0	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x40016b0	            0x89c2	                            mov edx, eax	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x40016b2	      0xb801000000	                              mov eax, 1	      6596	screen.c	FUNCTION_39	IF_1
0x40016b7	            0x85d2	                           test edx, edx	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x40016b9	            0x7481	                            je 0x400163c	      6595	screen.c	FUNCTION_39	IF_1	CALL_1
0x40016bb	        0x4883c408	                              add rsp, 8	      6607	screen.c	FUNCTION_39
0x40016bf	              0x5b	                                 pop rbx	      6607	screen.c	FUNCTION_39
0x40016c0	              0x5d	                                 pop rbp	      6607	screen.c	FUNCTION_39
0x40016c1	            0x415c	                                 pop r12	      6607	screen.c	FUNCTION_39
0x40016c3	            0x415d	                                 pop r13	      6607	screen.c	FUNCTION_39
0x40016c5	              0xc3	                                     ret	      6607	screen.c	FUNCTION_39
update_screen	functions,3:IF,26:DO,0:ELSE,2:CALL,29:FOR,0:WHILE,0:SWITCH,0	417
0x40121c0	            0x4157	                                push r15	       534	screen.c	FUNCTION_12
0x40121c2	            0x4156	                                push r14	       534	screen.c	FUNCTION_12
0x40121c4	            0x4155	                                push r13	       534	screen.c	FUNCTION_12
0x40121c6	            0x4154	                                push r12	       534	screen.c	FUNCTION_12
0x40121c8	              0x55	                                push rbp	       534	screen.c	FUNCTION_12
0x40121c9	              0x53	                                push rbx	       534	screen.c	FUNCTION_12
0x40121ca	            0x89fb	                            mov ebx, edi	       534	screen.c	FUNCTION_12
0x40121cc	      0xbf01000000	                              mov edi, 1	      8743	screen.c	FUNCTION_68	CALL_1
0x40121d1	        0x4883ec08	                              sub rsp, 8	       534	screen.c	FUNCTION_12
0x40121d5	      0xe800000000	                          call 0x40121da	      8743	screen.c	FUNCTION_68	CALL_1
0x40121da	    0x48833d000000	               cmp qword [0x040121e2], 0	       549	screen.c	FUNCTION_12	IF_1	CALL_1
0x40121e2	     0xf84a3030000	                            je 0x401258b	       549	screen.c	FUNCTION_12	IF_1	CALL_1
0x40121e8	            0x31ed	                            xor ebp, ebp	       546	screen.c	FUNCTION_12
0x40121ea	          0x83fb05	                              cmp ebx, 5	       552	screen.c	FUNCTION_12	IF_2
0x40121ed	     0xf84ed030000	                            je 0x40125e0	       552	screen.c	FUNCTION_12	IF_2
0x40121f3	    0x8b0500000000	            mov eax, dword [0x040121f9] 	       558	screen.c	FUNCTION_12	IF_3
0x40121f9	            0x85c0	                           test eax, eax	       558	screen.c	FUNCTION_12	IF_3
0x40121fb	            0x740f	                            je 0x401220c	       558	screen.c	FUNCTION_12	IF_3
0x40121fd	            0x39c3	                            cmp ebx, eax	       558	screen.c	FUNCTION_12	IF_3
0x40121ff	    0xc70500000000	               mov dword [0x04012209], 0	       567	screen.c	FUNCTION_12	IF_3
0x4012209	           0xf4cd8	                          cmovl ebx, eax	       567	screen.c	FUNCTION_12	IF_3
0x401220c	    0x488b3d000000	            mov rdi, qword [0x04012213] 	       571	screen.c	FUNCTION_12	IF_5
0x4012213	    0x448b8ff80000	            mov r9d, dword [rdi + 0xf8] 	       571	screen.c	FUNCTION_12	IF_5
0x401221a	          0x4585c9	                           test r9d, r9d	       571	screen.c	FUNCTION_12	IF_5
0x401221d	     0xf853d030000	                           jne 0x4012560	       571	screen.c	FUNCTION_12	IF_5
0x4012223	          0x83fb27	                           cmp ebx, 0x27	       571	screen.c	FUNCTION_12	IF_5
0x4012226	     0xf8e21050000	                           jle 0x401274d	       571	screen.c	FUNCTION_12	IF_5
0x401222c	      0xe800000000	                          call 0x4012231	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012231	            0x85c0	                           test eax, eax	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012233	     0xf8467030000	                            je 0x40125a0	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012239	    0x8b0500000000	            mov eax, dword [0x0401223f] 	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x401223f	            0x85c0	                           test eax, eax	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012241	     0xf8559030000	                           jne 0x40125a0	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012247	    0x668305000000	                add word [0x0401224f], 1	       591	screen.c	FUNCTION_12
0x401224f	            0x85ed	                           test ebp, ebp	       594	screen.c	FUNCTION_12	IF_8
0x4012251	    0xc70500000000	               mov dword [0x0401225b], 1	       589	screen.c	FUNCTION_12
0x401225b	            0x7407	                            je 0x4012264	       594	screen.c	FUNCTION_12	IF_8
0x401225d	    0x830500000000	               add dword [0x04012264], 1	       595	screen.c	FUNCTION_12	IF_8
0x4012264	    0x486305000000	         movsxd rax, dword [0x0401226b] 	       600	screen.c	FUNCTION_12	IF_9
0x401226b	            0x85c0	                           test eax, eax	       600	screen.c	FUNCTION_12	IF_9
0x401226d	     0xf8585030000	                           jne 0x40125f8	       600	screen.c	FUNCTION_12	IF_9
0x4012273	      0xe800000000	                          call 0x4012278	       641	screen.c	FUNCTION_12	CALL_7
0x4012278	    0x8b3500000000	            mov esi, dword [0x0401227e] 	       644	screen.c	FUNCTION_12	IF_14
0x401227e	            0x85f6	                           test esi, esi	       644	screen.c	FUNCTION_12	IF_14
0x4012280	     0xf85f2040000	                           jne 0x4012778	       644	screen.c	FUNCTION_12	IF_14
0x4012286	          0x83fb32	                           cmp ebx, 0x32	       647	screen.c	FUNCTION_12	IF_15
0x4012289	     0xf84d9050000	                            je 0x4012868	       647	screen.c	FUNCTION_12	IF_15
0x401228f	          0x83fb27	                           cmp ebx, 0x27	       647	screen.c	FUNCTION_12	IF_15
0x4012292	        0x410f9fc6	                               setg r14b	       647	screen.c	FUNCTION_12	IF_15
0x4012296	    0x8b0d00000000	            mov ecx, dword [0x0401229c] 	       655	screen.c	FUNCTION_12	IF_16
0x401229c	            0x85c9	                           test ecx, ecx	       655	screen.c	FUNCTION_12	IF_16
0x401229e	     0xf85de040000	                           jne 0x4012782	       655	screen.c	FUNCTION_12	IF_16
0x40122a4	    0x488b3d000000	            mov rdi, qword [0x040122ab] 	       661	screen.c	FUNCTION_12	IF_17
0x40122ab	    0x83bf28010000	          cmp dword [rdi + 0x128], 0x27 	       661	screen.c	FUNCTION_12	IF_17
0x40122b2	            0x7f2d	                            jg 0x40122e1	       661	screen.c	FUNCTION_12	IF_17
0x40122b4	            0x31c0	                            xor eax, eax	       663	screen.c	FUNCTION_12	IF_17	CALL_11
0x40122b6	    0x4883bf380200	              cmp qword [rdi + 0x238], 0	       663	screen.c	FUNCTION_12	IF_17	CALL_11
0x40122be	    0x448b97240100	          mov r10d, dword [rdi + 0x124] 	       662	screen.c	FUNCTION_12	IF_17
0x40122c5	     0xf85e1040000	                           jne 0x40127ac	       663	screen.c	FUNCTION_12	IF_17	CALL_11
0x40122cb	          0x4439d0	                           cmp eax, r10d	       662	screen.c	FUNCTION_12	IF_17
0x40122ce	            0x7411	                            je 0x40122e1	       662	screen.c	FUNCTION_12	IF_17
0x40122d0	    0x488b05000000	            mov rax, qword [0x040122d7] 	       664	screen.c	FUNCTION_12	IF_17
0x40122d7	    0xc78028010000	          mov dword [rax + 0x128], 0x28 	       664	screen.c	FUNCTION_12	IF_17
0x40122e1	          0x83fb14	                           cmp ebx, 0x14	       670	screen.c	FUNCTION_12	IF_18
0x40122e4	     0xf8416050000	                            je 0x4012800	       670	screen.c	FUNCTION_12	IF_18
0x40122ea	    0x488b05000000	            mov rax, qword [0x040122f1] 	       672	screen.c	FUNCTION_12	IF_19
0x40122f1	    0x3b9828010000	           cmp ebx, dword [rax + 0x128] 	       672	screen.c	FUNCTION_12	IF_19
0x40122f7	            0x7e0f	                           jle 0x4012308	       672	screen.c	FUNCTION_12	IF_19
0x40122f9	          0x83fb0a	                            cmp ebx, 0xa	       673	screen.c	FUNCTION_12	IF_19
0x40122fc	     0xf84b4040000	                            je 0x40127b6	       673	screen.c	FUNCTION_12	IF_19
0x4012302	    0x899828010000	            mov dword [rax + 0x128], ebx	       687	screen.c	FUNCTION_12	IF_19
0x4012308	    0x8b0500000000	            mov eax, dword [0x0401230e] 	       690	screen.c	FUNCTION_12	IF_20
0x401230e	            0x85c0	                           test eax, eax	       690	screen.c	FUNCTION_12	IF_20
0x4012310	     0xf85aa020000	                           jne 0x40125c0	       690	screen.c	FUNCTION_12	IF_20
0x4012316	          0x4584f6	                         test r14b, r14b	       690	screen.c	FUNCTION_12	IF_20
0x4012319	     0xf85a1020000	                           jne 0x40125c0	       690	screen.c	FUNCTION_12	IF_20
0x401231f	    0x488b1d000000	            mov rbx, qword [0x04012326] 	       698	screen.c	FUNCTION_12
0x4012326	          0x4885db	                           test rbx, rbx	       698	screen.c	FUNCTION_12
0x4012329	     0xf8476050000	                            je 0x40128a5	       698	screen.c	FUNCTION_12
0x401232f	          0x4889d9	                            mov rcx, rbx	       698	screen.c	FUNCTION_12
0x4012332	    0x660f1f440000	                    nop word [rax + rax]	       698	screen.c	FUNCTION_12
0x4012338	        0x488b5308	                mov rdx, qword [rbx + 8]	       700	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0x401233c	          0x4989ce	                            mov r14, rcx	       700	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0x401233f	    0x8b820c010000	           mov eax, dword [rdx + 0x10c] 	       700	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0x4012345	            0x85c0	                           test eax, eax	       700	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0x4012347	            0x7447	                            je 0x4012390	       700	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0x4012349	          0x4839d9	                            cmp rcx, rbx	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0x401234c	            0x7425	                            je 0x4012373	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0x401234e	        0x483b5108	                cmp rdx, qword [rcx + 8]	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012352	            0x743c	                            je 0x4012390	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012354	          0x4889c8	                            mov rax, rcx	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012357	            0xeb11	                           jmp 0x401236a	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012359	     0xf1f80000000	                         nop dword [rax]	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012360	        0x483b5008	                cmp rdx, qword [rax + 8]	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x4012364	     0xf8466020000	                            je 0x40125d0	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0x401236a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0x401236e	          0x4839d8	                            cmp rax, rbx	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0x4012371	            0x75ed	                           jne 0x4012360	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0x4012373	          0x4889df	                            mov rdi, rbx	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x4012376	      0xe800000000	                          call 0x401237b	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x401237b	            0x85c0	                           test eax, eax	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x401237d	    0x4c8b35000000	            mov r14, qword [0x04012384] 	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x4012384	     0xf8506050000	                           jne 0x4012890	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x401238a	    0x660f1f440000	                    nop word [rax + rax]	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0x4012390	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       698	screen.c	FUNCTION_12
0x4012394	          0x4c89f1	                            mov rcx, r14	       698	screen.c	FUNCTION_12
0x4012397	          0x4885db	                           test rbx, rbx	       698	screen.c	FUNCTION_12
0x401239a	            0x759c	                           jne 0x4012338	       698	screen.c	FUNCTION_12
0x401239c	          0x4d85f6	                           test r14, r14	       724	screen.c	FUNCTION_12
0x401239f	    0x48c705000000	               mov qword [0x040123aa], 0	       722	screen.c	FUNCTION_12
0x40123aa	     0xf847d050000	                            je 0x401292d	       724	screen.c	FUNCTION_12
0x40123b0	          0x4531ff	                          xor r15d, r15d	       724	screen.c	FUNCTION_12
0x40123b3	            0xeb20	                           jmp 0x40123d5	       724	screen.c	FUNCTION_12
0x40123b5	           0xf1f00	                         nop dword [rax]	       724	screen.c	FUNCTION_12
0x40123b8	    0x458b8e400100	           mov r9d, dword [r14 + 0x140] 	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x40123bf	          0x4585c9	                           test r9d, r9d	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x40123c2	     0xf8591000000	                           jne 0x4012459	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x40123c8	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	       724	screen.c	FUNCTION_12
0x40123cc	          0x4d85f6	                           test r14, r14	       724	screen.c	FUNCTION_12
0x40123cf	     0xf84b3000000	                            je 0x4012488	       724	screen.c	FUNCTION_12
0x40123d5	    0x418b86280100	           mov eax, dword [r14 + 0x128] 	       726	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0x40123dc	            0x85c0	                           test eax, eax	       726	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0x40123de	            0x74d8	                            je 0x40123b8	       726	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0x40123e0	      0xe800000000	                          call 0x40123e5	       728	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_1
0x40123e5	          0x4585ff	                         test r15d, r15d	       730	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0x40123e8	            0x7557	                           jne 0x4012441	       730	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0x40123ea	    0x8b0500000000	            mov eax, dword [0x040123f0] 	      7709	screen.c	FUNCTION_52	IF_1
0x40123f0	            0x85c0	                           test eax, eax	      7709	screen.c	FUNCTION_52	IF_1
0x40123f2	            0x740e	                            je 0x4012402	      7709	screen.c	FUNCTION_52	IF_1
0x40123f4	    0x8b0500000000	            mov eax, dword [0x040123fa] 	      7709	screen.c	FUNCTION_52	IF_1
0x40123fa	            0x85c0	                           test eax, eax	      7709	screen.c	FUNCTION_52	IF_1
0x40123fc	     0xf84bb020000	                            je 0x40126bd	      7709	screen.c	FUNCTION_52	IF_1
0x4012402	    0x448b3d000000	           mov r15d, dword [0x04012409] 	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x4012409	          0x4585ff	                         test r15d, r15d	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x401240c	     0xf8503030000	                           jne 0x4012715	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x4012412	    0x448b1d000000	           mov r11d, dword [0x04012419] 	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x4012419	          0x4585db	                         test r11d, r11d	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x401241c	     0xf850f030000	                           jne 0x4012731	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x4012422	    0x448b15000000	           mov r10d, dword [0x04012429] 	       747	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012429	    0x41bf01000000	                             mov r15d, 1	       732	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0x401242f	          0x4585d2	                         test r10d, r10d	       747	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012432	            0x740d	                            je 0x4012441	       747	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012434	    0x4c3935000000	            cmp qword [0x0401243b], r14 	       747	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x401243b	     0xf84cf040000	                            je 0x4012910	       747	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012441	          0x4c89f7	                            mov rdi, r14	       757	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_8
0x4012444	      0xe877d7ffff	                     call sym.win_update	       757	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_8
0x4012449	    0x458b8e400100	           mov r9d, dword [r14 + 0x140] 	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x4012450	          0x4585c9	                           test r9d, r9d	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x4012453	     0xf846fffffff	                            je 0x40123c8	       761	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0x4012459	      0xe800000000	                          call 0x401245e	       763	screen.c	FUNCTION_12	FUNCTION_3	IF_6	CALL_9
0x401245e	    0x448b05000000	            mov r8d, dword [0x04012465] 	      6873	screen.c	FUNCTION_42	IF_1
0x4012465	          0x4585c0	                           test r8d, r8d	      6873	screen.c	FUNCTION_42	IF_1
0x4012468	     0xf855affffff	                           jne 0x40123c8	      6873	screen.c	FUNCTION_42	IF_1
0x401246e	          0x4c89f7	                            mov rdi, r14	      6873	screen.c	FUNCTION_42	IF_1
0x4012471	      0xe8ea69ffff	        call sym.win_redr_status.part.21	      6873	screen.c	FUNCTION_42	IF_1
0x4012476	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	       724	screen.c	FUNCTION_12
0x401247a	          0x4d85f6	                           test r14, r14	       724	screen.c	FUNCTION_12
0x401247d	     0xf8552ffffff	                           jne 0x40123d5	       724	screen.c	FUNCTION_12
0x4012483	       0xf1f440000	                   nop dword [rax + rax]	       724	screen.c	FUNCTION_12
0x4012488	    0x488b3d000000	            mov rdi, qword [0x0401248f] 	      7726	screen.c	FUNCTION_53	IF_1
0x401248f	          0x4885ff	                           test rdi, rdi	      7726	screen.c	FUNCTION_53	IF_1
0x4012492	            0x7410	                            je 0x40124a4	      7726	screen.c	FUNCTION_53	IF_1
0x4012494	      0xe800000000	                          call 0x4012499	      7728	screen.c	FUNCTION_53	IF_1	CALL_1
0x4012499	    0x48c705000000	               mov qword [0x040124a4], 0	      7729	screen.c	FUNCTION_53	IF_1
0x40124a4	      0xe800000000	                          call 0x40124a9	       772	screen.c	FUNCTION_12	IF_21	CALL_15
0x40124a9	            0x85c0	                           test eax, eax	       772	screen.c	FUNCTION_12	IF_21	CALL_15
0x40124ab	     0xf85bd020000	                           jne 0x401276e	       772	screen.c	FUNCTION_12	IF_21	CALL_15
0x40124b1	    0x488b05000000	            mov rax, qword [0x040124b8] 	       778	screen.c	FUNCTION_12	CALL_17
0x40124b8	          0x4885c0	                           test rax, rax	       778	screen.c	FUNCTION_12	CALL_17
0x40124bb	            0x741a	                            je 0x40124d7	       778	screen.c	FUNCTION_12	CALL_17
0x40124bd	           0xf1f00	                         nop dword [rax]	       778	screen.c	FUNCTION_12	CALL_17
0x40124c0	        0x488b5008	                mov rdx, qword [rax + 8]	       779	screen.c	FUNCTION_12
0x40124c4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       778	screen.c	FUNCTION_12	CALL_17
0x40124c8	          0x4885c0	                           test rax, rax	       778	screen.c	FUNCTION_12	CALL_17
0x40124cb	    0xc7820c010000	              mov dword [rdx + 0x10c], 0	       779	screen.c	FUNCTION_12
0x40124d5	            0x75e9	                           jne 0x40124c0	       778	screen.c	FUNCTION_12	CALL_17
0x40124d7	    0xc70500000000	               mov dword [0x040124e1], 0	       781	screen.c	FUNCTION_12
0x40124e1	      0xe800000000	                          call 0x40124e6	       783	screen.c	FUNCTION_12	CALL_18
0x40124e6	    0x8b3d00000000	            mov edi, dword [0x040124ec] 	       788	screen.c	FUNCTION_12	IF_22
0x40124ec	            0x85ff	                           test edi, edi	       788	screen.c	FUNCTION_12	IF_22
0x40124ee	            0x750a	                           jne 0x40124fa	       788	screen.c	FUNCTION_12	IF_22
0x40124f0	    0x8b3500000000	            mov esi, dword [0x040124f6] 	       788	screen.c	FUNCTION_12	IF_22
0x40124f6	            0x85f6	                           test esi, esi	       788	screen.c	FUNCTION_12	IF_22
0x40124f8	            0x7405	                            je 0x40124ff	       788	screen.c	FUNCTION_12	IF_22
0x40124fa	      0xe800000000	                          call 0x40124ff	       789	screen.c	FUNCTION_12	CALL_19
0x40124ff	            0x85ed	                           test ebp, ebp	       791	screen.c	FUNCTION_12	IF_23
0x4012501	     0xf85e5000000	                           jne 0x40125ec	       791	screen.c	FUNCTION_12	IF_23
0x4012507	    0x8b0d00000000	            mov ecx, dword [0x0401250d] 	       795	screen.c	FUNCTION_12	IF_24
0x401250d	            0x85c9	                           test ecx, ecx	       795	screen.c	FUNCTION_12	IF_24
0x401250f	     0xf844f020000	                            je 0x4012764	       795	screen.c	FUNCTION_12	IF_24
0x4012515	    0x8b1500000000	            mov edx, dword [0x0401251b] 	       802	screen.c	FUNCTION_12	IF_25
0x401251b	    0xc70500000000	               mov dword [0x04012525], 1	       797	screen.c	FUNCTION_12
0x4012525	      0xb801000000	                              mov eax, 1	       827	screen.c	FUNCTION_12
0x401252a	            0x85d2	                           test edx, edx	       802	screen.c	FUNCTION_12	IF_25
0x401252c	            0x745f	                            je 0x401258d	       802	screen.c	FUNCTION_12	IF_25
0x401252e	            0x85db	                           test ebx, ebx	       804	screen.c	FUNCTION_12	IF_25	IF_26	CALL_21
0x4012530	            0x740d	                            je 0x401253f	       804	screen.c	FUNCTION_12	IF_25	IF_26	CALL_21
0x4012532	      0xe800000000	                          call 0x4012537	       804	screen.c	FUNCTION_12	IF_25	IF_26	CALL_21
0x4012537	            0x85c0	                           test eax, eax	       804	screen.c	FUNCTION_12	IF_25	IF_26	CALL_21
0x4012539	     0xf8478030000	                            je 0x40128b7	       804	screen.c	FUNCTION_12	IF_25	IF_26	CALL_21
0x401253f	      0xe800000000	                          call 0x4012544	       823	screen.c	FUNCTION_12	IF_25	CALL_28
0x4012544	            0x31ff	                            xor edi, edi	       824	screen.c	FUNCTION_12	IF_25	CALL_29
0x4012546	      0xe800000000	                          call 0x401254b	       824	screen.c	FUNCTION_12	IF_25	CALL_29
0x401254b	        0x4883c408	                              add rsp, 8	       828	screen.c	FUNCTION_12
0x401254f	      0xb801000000	                              mov eax, 1	       827	screen.c	FUNCTION_12
0x4012554	              0x5b	                                 pop rbx	       828	screen.c	FUNCTION_12
0x4012555	              0x5d	                                 pop rbp	       828	screen.c	FUNCTION_12
0x4012556	            0x415c	                                 pop r12	       828	screen.c	FUNCTION_12
0x4012558	            0x415d	                                 pop r13	       828	screen.c	FUNCTION_12
0x401255a	            0x415e	                                 pop r14	       828	screen.c	FUNCTION_12
0x401255c	            0x415f	                                 pop r15	       828	screen.c	FUNCTION_12
0x401255e	              0xc3	                                     ret	       828	screen.c	FUNCTION_12
0x401255f	              0x90	                                     nop	       828	screen.c	FUNCTION_12
0x4012560	      0xe800000000	                          call 0x4012565	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012565	            0x85c0	                           test eax, eax	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012567	            0x7410	                            je 0x4012579	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012569	    0x448b05000000	            mov r8d, dword [0x04012570] 	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012570	          0x4585c0	                           test r8d, r8d	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012573	     0xf84cefcffff	                            je 0x4012247	       580	screen.c	FUNCTION_12	IF_6	CALL_3
0x4012579	            0x89df	                            mov edi, ebx	       582	screen.c	FUNCTION_12	IF_6	CALL_4
0x401257b	      0xe800000000	                          call 0x4012580	       582	screen.c	FUNCTION_12	IF_6	CALL_4
0x4012580	          0x83fb19	                           cmp ebx, 0x19	       584	screen.c	FUNCTION_12	IF_6	IF_7
0x4012583	    0x891d00000000	            mov dword [0x04012589], ebx 	       583	screen.c	FUNCTION_12	IF_6
0x4012589	            0x7f22	                            jg 0x40125ad	       584	screen.c	FUNCTION_12	IF_6	IF_7
0x401258b	            0x31c0	                            xor eax, eax	       586	screen.c	FUNCTION_12	IF_6
0x401258d	        0x4883c408	                              add rsp, 8	       828	screen.c	FUNCTION_12
0x4012591	              0x5b	                                 pop rbx	       828	screen.c	FUNCTION_12
0x4012592	              0x5d	                                 pop rbp	       828	screen.c	FUNCTION_12
0x4012593	            0x415c	                                 pop r12	       828	screen.c	FUNCTION_12
0x4012595	            0x415d	                                 pop r13	       828	screen.c	FUNCTION_12
0x4012597	            0x415e	                                 pop r14	       828	screen.c	FUNCTION_12
0x4012599	            0x415f	                                 pop r15	       828	screen.c	FUNCTION_12
0x401259b	              0xc3	                                     ret	       828	screen.c	FUNCTION_12
0x401259c	         0xf1f4000	                         nop dword [rax]	       828	screen.c	FUNCTION_12
0x40125a0	            0x89df	                            mov edi, ebx	       582	screen.c	FUNCTION_12	IF_6	CALL_4
0x40125a2	      0xe800000000	                          call 0x40125a7	       582	screen.c	FUNCTION_12	IF_6	CALL_4
0x40125a7	    0x891d00000000	            mov dword [0x040125ad], ebx 	       583	screen.c	FUNCTION_12	IF_6
0x40125ad	    0x488b05000000	            mov rax, qword [0x040125b4] 	       585	screen.c	FUNCTION_12	IF_6	IF_7
0x40125b4	    0xc780f8000000	               mov dword [rax + 0xf8], 0	       585	screen.c	FUNCTION_12	IF_6	IF_7
0x40125be	            0xebcb	                           jmp 0x401258b	       585	screen.c	FUNCTION_12	IF_6	IF_7
0x40125c0	      0xe8eb61ffff	                   call sym.draw_tabline	       691	screen.c	FUNCTION_12	CALL_13
0x40125c5	      0xe955fdffff	                           jmp 0x401231f	       691	screen.c	FUNCTION_12	CALL_13
0x40125ca	    0x660f1f440000	                    nop word [rax + rax]	       691	screen.c	FUNCTION_12	CALL_13
0x40125d0	          0x4989ce	                            mov r14, rcx	       691	screen.c	FUNCTION_12	CALL_13
0x40125d3	      0xe9b8fdffff	                           jmp 0x4012390	       691	screen.c	FUNCTION_12	CALL_13
0x40125d8	     0xf1f84000000	                   nop dword [rax + rax]	       691	screen.c	FUNCTION_12	CALL_13
0x40125e0	      0xbd01000000	                              mov ebp, 1	       554	screen.c	FUNCTION_12	IF_2
0x40125e5	            0x31db	                            xor ebx, ebx	       555	screen.c	FUNCTION_12	IF_2
0x40125e7	      0xe907fcffff	                           jmp 0x40121f3	       555	screen.c	FUNCTION_12	IF_2
0x40125ec	    0x832d00000000	               sub dword [0x040125f3], 1	       792	screen.c	FUNCTION_12	IF_23
0x40125f3	      0xe90fffffff	                           jmp 0x4012507	       792	screen.c	FUNCTION_12	IF_23
0x40125f8	    0x488b35000000	            mov rsi, qword [0x040125ff] 	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x40125ff	    0xc70500000000	               mov dword [0x04012609], 1	       602	screen.c	FUNCTION_12	IF_9
0x4012609	        0x488d56fc	                      lea rdx, [rsi - 4]	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x401260d	          0x4839c2	                            cmp rdx, rax	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012610	     0xf8e78010000	                           jle 0x401278e	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012616	          0x83fb32	                           cmp ebx, 0x32	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012619	     0xf846f010000	                            je 0x401278e	       605	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x401261f	            0x31ff	                            xor edi, edi	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	CALL_5
0x4012621	      0xe800000000	                          call 0x4012626	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	CALL_5
0x4012626	    0x8b0d00000000	            mov ecx, dword [0x0401262c] 	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x401262c	    0x8b1500000000	            mov edx, dword [0x04012632] 	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x4012632	            0x31f6	                            xor esi, esi	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x4012634	          0x4531c9	                            xor r9d, r9d	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x4012637	          0x4531c0	                            xor r8d, r8d	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x401263a	            0x31ff	                            xor edi, edi	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x401263c	      0xe800000000	                          call 0x4012641	       608	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_6
0x4012641	            0x85c0	                           test eax, eax	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12
0x4012643	      0xb832000000	                           mov eax, 0x32	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12
0x4012648	    0x8b3500000000	            mov esi, dword [0x0401264e] 	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12
0x401264e	           0xf44d8	                          cmove ebx, eax	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12
0x4012651	    0x488b05000000	            mov rax, qword [0x04012658] 	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012658	          0x4885c0	                           test rax, rax	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x401265b	     0xf849a000000	                            je 0x40126fb	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012661	     0xf1f80000000	                         nop dword [rax]	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x4012668	    0x8b90a8010000	           mov edx, dword [rax + 0x1a8] 	       613	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0x401266e	     0x3909c000000	             add edx, dword [rax + 0x9c]	       613	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0x4012674	            0x39f2	                            cmp edx, esi	       613	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0x4012676	            0x7d76	                           jge 0x40126ee	       613	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0x4012678	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0x401267e	             0x1d1	                            add ecx, edx	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0x4012680	            0x39f1	                            cmp ecx, esi	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0x4012682	            0x7e4c	                           jle 0x40126d0	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0x4012684	    0x83b828010000	          cmp dword [rax + 0x128], 0x1d 	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x401268b	            0x7f43	                            jg 0x40126d0	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x401268d	    0x8bb8f8000000	            mov edi, dword [rax + 0xf8] 	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x4012693	            0x85ff	                           test edi, edi	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x4012695	            0x7e39	                           jle 0x40126d0	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x4012697	    0x488bb8000100	           mov rdi, qword [rax + 0x100] 	       618	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x401269e	          0x488b3f	                    mov rdi, qword [rdi]	       618	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126a1	        0x48397878	            cmp qword [rax + 0x78], rdi 	       618	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126a5	            0x7529	                           jne 0x40126d0	       618	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126a7	            0x89f7	                            mov edi, esi	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0x40126a9	    0xc78028010000	          mov dword [rax + 0x128], 0x1e 	       621	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126b3	            0x29d7	                            sub edi, edx	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0x40126b5	    0x89b82c010000	            mov dword [rax + 0x12c], edi	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0x40126bb	            0xeb31	                           jmp 0x40126ee	       621	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126bd	      0xe82edffeff	         call sym.start_search_hl.part.1	       621	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126c2	      0xe93bfdffff	                           jmp 0x4012402	       621	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126c7	    0x660f1f840000	                    nop word [rax + rax]	       621	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0x40126d0	     0x388a4000000	             add ecx, dword [rax + 0xa4]	       626	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0x40126d6	    0xc78028010000	          mov dword [rax + 0x128], 0x28 	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1
0x40126e0	            0x39f1	                            cmp ecx, esi	       626	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0x40126e2	            0x7f0a	                            jg 0x40126ee	       626	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0x40126e4	    0xc78040010000	              mov dword [rax + 0x140], 1	       628	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3
0x40126ee	        0x488b4020	            mov rax, qword [rax + 0x20] 	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x40126f2	          0x4885c0	                           test rax, rax	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x40126f5	     0xf856dffffff	                           jne 0x4012668	       611	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0x40126fb	            0x85ed	                           test ebp, ebp	       632	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0x40126fd	            0x750a	                           jne 0x4012709	       632	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0x40126ff	    0xc70500000000	               mov dword [0x04012709], 1	       633	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0x4012709	    0xc70500000000	               mov dword [0x04012713], 1	       634	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1
0x4012713	            0xeb7e	                           jmp 0x4012793	       634	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1
0x4012715	      0xe800000000	                          call 0x401271a	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x401271a	            0x85c0	                           test eax, eax	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x401271c	     0xf84f0fcffff	                            je 0x4012412	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x4012722	      0xbf00000000	                              mov edi, 0	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_4
0x4012727	      0xe800000000	                          call 0x401272c	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_4
0x401272c	      0xe9e1fcffff	                           jmp 0x4012412	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_4
0x4012731	      0xe800000000	                          call 0x4012736	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x4012736	            0x85c0	                           test eax, eax	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x4012738	     0xf84e4fcffff	                            je 0x4012422	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0x401273e	      0xbf00000000	                              mov edi, 0	       741	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_6
0x4012743	      0xe800000000	                          call 0x4012748	       741	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_6
0x4012748	      0xe9d5fcffff	                           jmp 0x4012422	       741	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_6
0x401274d	      0xe800000000	                          call 0x4012752	       573	screen.c	FUNCTION_12	IF_5	CALL_2
0x4012752	            0x85c0	                           test eax, eax	       573	screen.c	FUNCTION_12	IF_5	CALL_2
0x4012754	     0xf8506feffff	                           jne 0x4012560	       573	screen.c	FUNCTION_12	IF_5	CALL_2
0x401275a	      0xbb28000000	                           mov ebx, 0x28	       576	screen.c	FUNCTION_12	IF_5
0x401275f	      0xe9c8faffff	                           jmp 0x401222c	       576	screen.c	FUNCTION_12	IF_5
0x4012764	      0xe800000000	                          call 0x4012769	       796	screen.c	FUNCTION_12	CALL_20
0x4012769	      0xe9a7fdffff	                           jmp 0x4012515	       796	screen.c	FUNCTION_12	CALL_20
0x401276e	      0xe800000000	                          call 0x4012773	       773	screen.c	FUNCTION_12	CALL_16
0x4012773	      0xe939fdffff	                           jmp 0x40124b1	       773	screen.c	FUNCTION_12	CALL_16
0x4012778	      0xe800000000	                          call 0x401277d	       645	screen.c	FUNCTION_12	CALL_8
0x401277d	      0xe904fbffff	                           jmp 0x4012286	       645	screen.c	FUNCTION_12	CALL_8
0x4012782	            0x31ff	                            xor edi, edi	       656	screen.c	FUNCTION_12	CALL_10
0x4012784	      0xe800000000	                          call 0x4012789	       656	screen.c	FUNCTION_12	CALL_10
0x4012789	      0xe916fbffff	                           jmp 0x40122a4	       656	screen.c	FUNCTION_12	CALL_10
0x401278e	      0xbb32000000	                           mov ebx, 0x32	       656	screen.c	FUNCTION_12	CALL_10
0x4012793	    0xc70500000000	               mov dword [0x0401279d], 0	       636	screen.c	FUNCTION_12	IF_9
0x401279d	    0xc70500000000	               mov dword [0x040127a7], 0	       637	screen.c	FUNCTION_12	IF_9
0x40127a7	      0xe9c7faffff	                           jmp 0x4012273	       637	screen.c	FUNCTION_12	IF_9
0x40127ac	      0xe800000000	                          call 0x40127b1	       663	screen.c	FUNCTION_12	IF_17	CALL_11
0x40127b1	      0xe915fbffff	                           jmp 0x40122cb	       663	screen.c	FUNCTION_12	IF_17	CALL_11
0x40127b6	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	       674	screen.c	FUNCTION_12	IF_19
0x40127bd	        0x807a0a00	                 cmp byte [rdx + 0xa], 0	       674	screen.c	FUNCTION_12	IF_19
0x40127c1	     0xf843bfbffff	                            je 0x4012302	       674	screen.c	FUNCTION_12	IF_19
0x40127c7	    0x8bb088000000	            mov esi, dword [rax + 0x88] 	       676	screen.c	FUNCTION_12	IF_19
0x40127cd	    0x39b084000000	            cmp dword [rax + 0x84], esi 	       676	screen.c	FUNCTION_12	IF_19
0x40127d3	     0xf8529fbffff	                           jne 0x4012302	       676	screen.c	FUNCTION_12	IF_19
0x40127d9	    0x8bb090000000	            mov esi, dword [rax + 0x90] 	       677	screen.c	FUNCTION_12	IF_19
0x40127df	    0x39b08c000000	            cmp dword [rax + 0x8c], esi 	       677	screen.c	FUNCTION_12	IF_19
0x40127e5	     0xf8517fbffff	                           jne 0x4012302	       677	screen.c	FUNCTION_12	IF_19
0x40127eb	          0x488b32	                    mov rsi, qword [rdx]	       679	screen.c	FUNCTION_12	IF_19
0x40127ee	        0x48397078	            cmp qword [rax + 0x78], rsi 	       679	screen.c	FUNCTION_12	IF_19
0x40127f2	     0xf850afbffff	                           jne 0x4012302	       679	screen.c	FUNCTION_12	IF_19
0x40127f8	      0xe90bfbffff	                           jmp 0x4012308	       679	screen.c	FUNCTION_12	IF_19
0x40127fd	           0xf1f00	                         nop dword [rax]	       679	screen.c	FUNCTION_12	IF_19
0x4012800	      0xe800000000	                          call 0x4012805	       671	screen.c	FUNCTION_12	CALL_12
0x4012805	    0x488b05000000	            mov rax, qword [0x0401280c] 	       672	screen.c	FUNCTION_12	IF_19
0x401280c	    0x83b828010000	          cmp dword [rax + 0x128], 0x13 	       672	screen.c	FUNCTION_12	IF_19
0x4012813	     0xf8feffaffff	                            jg 0x4012308	       672	screen.c	FUNCTION_12	IF_19
0x4012819	    0x8b1500000000	            mov edx, dword [0x0401281f] 	       681	screen.c	FUNCTION_12	IF_19
0x401281f	            0x85d2	                           test edx, edx	       681	screen.c	FUNCTION_12	IF_19
0x4012821	     0xf84dbfaffff	                            je 0x4012302	       681	screen.c	FUNCTION_12	IF_19
0x4012827	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       682	screen.c	FUNCTION_12	IF_19
0x401282b	        0x48397058	            cmp qword [rax + 0x58], rsi 	       682	screen.c	FUNCTION_12	IF_19
0x401282f	     0xf85cdfaffff	                           jne 0x4012302	       682	screen.c	FUNCTION_12	IF_19
0x4012835	         0xfbe5050	           movsx edx, byte [rax + 0x50] 	       683	screen.c	FUNCTION_12	IF_19
0x4012839	    0x3b1500000000	            cmp edx, dword [0x0401283f] 	       683	screen.c	FUNCTION_12	IF_19
0x401283f	     0xf85bdfaffff	                           jne 0x4012302	       683	screen.c	FUNCTION_12	IF_19
0x4012845	    0xf680b4000000	               test byte [rax + 0xb4], 4	       684	screen.c	FUNCTION_12	IF_19
0x401284c	     0xf84b0faffff	                            je 0x4012302	       684	screen.c	FUNCTION_12	IF_19
0x4012852	          0x8b7048	            mov esi, dword [rax + 0x48] 	       685	screen.c	FUNCTION_12	IF_19
0x4012855	          0x397074	            cmp dword [rax + 0x74], esi 	       685	screen.c	FUNCTION_12	IF_19
0x4012858	     0xf85a4faffff	                           jne 0x4012302	       685	screen.c	FUNCTION_12	IF_19
0x401285e	      0xe9a5faffff	                           jmp 0x4012308	       685	screen.c	FUNCTION_12	IF_19
0x4012863	       0xf1f440000	                   nop dword [rax + rax]	       685	screen.c	FUNCTION_12	IF_19
0x4012868	      0xe800000000	                          call 0x401286d	       649	screen.c	FUNCTION_12	IF_15	CALL_9
0x401286d	    0x41be01000000	                             mov r14d, 1	       652	screen.c	FUNCTION_12	IF_15
0x4012873	    0xc70500000000	               mov dword [0x0401287d], 0	       652	screen.c	FUNCTION_12	IF_15
0x401287d	      0xbb28000000	                           mov ebx, 0x28	       650	screen.c	FUNCTION_12	IF_15
0x4012882	      0xe90ffaffff	                           jmp 0x4012296	       650	screen.c	FUNCTION_12	IF_15
0x4012887	    0x660f1f840000	                    nop word [rax + rax]	       650	screen.c	FUNCTION_12	IF_15
0x4012890	        0x488b7b08	                mov rdi, qword [rbx + 8]	       709	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0x4012894	      0xe800000000	                          call 0x4012899	       709	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0x4012899	    0x4c8b35000000	            mov r14, qword [0x040128a0] 	       709	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0x40128a0	      0xe9ebfaffff	                           jmp 0x4012390	       709	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0x40128a5	    0x48c705000000	               mov qword [0x040128b0], 0	       722	screen.c	FUNCTION_12
0x40128b0	            0x31db	                            xor ebx, ebx	       542	screen.c	FUNCTION_12
0x40128b2	      0xe9edfbffff	                           jmp 0x40124a4	       542	screen.c	FUNCTION_12
0x40128b7	      0xe800000000	                          call 0x40128bc	       806	screen.c	FUNCTION_12	IF_25	IF_26	CALL_22
0x40128bc	      0xe800000000	                          call 0x40128c1	       807	screen.c	FUNCTION_12	IF_25	IF_26	CALL_23
0x40128c1	      0xe800000000	                          call 0x40128c6	       808	screen.c	FUNCTION_12	IF_25	IF_26	CALL_24
0x40128c6	          0x4489ee	                           mov esi, r13d	       815	screen.c	FUNCTION_12	IF_25	IF_26	CALL_25
0x40128c9	          0x4489e7	                           mov edi, r12d	       815	screen.c	FUNCTION_12	IF_25	IF_26	CALL_25
0x40128cc	    0x448925000000	           mov dword [0x040128d3], r12d 	       812	screen.c	FUNCTION_12	IF_25	IF_26
0x40128d3	    0x44892d000000	           mov dword [0x040128da], r13d 	       813	screen.c	FUNCTION_12	IF_25	IF_26
0x40128da	      0xe800000000	                          call 0x40128df	       815	screen.c	FUNCTION_12	IF_25	IF_26	CALL_25
0x40128df	            0x31f6	                            xor esi, esi	       817	screen.c	FUNCTION_12	IF_25	IF_26	CALL_26
0x40128e1	            0x31ff	                            xor edi, edi	       817	screen.c	FUNCTION_12	IF_25	IF_26	CALL_26
0x40128e3	    0x890500000000	            mov dword [0x040128e9], eax 	       815	screen.c	FUNCTION_12	IF_25	IF_26	CALL_25
0x40128e9	      0xe800000000	                          call 0x40128ee	       817	screen.c	FUNCTION_12	IF_25	IF_26	CALL_26
0x40128ee	      0xe800000000	                          call 0x40128f3	       818	screen.c	FUNCTION_12	IF_25	IF_26	CALL_27
0x40128f3	    0x8b0500000000	            mov eax, dword [0x040128f9] 	       819	screen.c	FUNCTION_12	IF_25	IF_26
0x40128f9	    0x890500000000	            mov dword [0x040128ff], eax 	       819	screen.c	FUNCTION_12	IF_25	IF_26
0x40128ff	    0x8b0500000000	            mov eax, dword [0x04012905] 	       820	screen.c	FUNCTION_12	IF_25	IF_26
0x4012905	    0x890500000000	            mov dword [0x0401290b], eax 	       820	screen.c	FUNCTION_12	IF_25	IF_26
0x401290b	      0xe934fcffff	                           jmp 0x4012544	       820	screen.c	FUNCTION_12	IF_25	IF_26
0x4012910	    0x448b25000000	           mov r12d, dword [0x04012917] 	       749	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012917	    0x448b2d000000	           mov r13d, dword [0x0401291e] 	       750	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x401291e	      0xbb01000000	                              mov ebx, 1	       752	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5
0x4012923	      0xe800000000	                          call 0x4012928	       751	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5	CALL_7
0x4012928	      0xe914fbffff	                           jmp 0x4012441	       751	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_5	CALL_7
0x401292d	            0x31db	                            xor ebx, ebx	       542	screen.c	FUNCTION_12
0x401292f	      0xe970fbffff	                           jmp 0x40124a4	       542	screen.c	FUNCTION_12
status_redraw_all	functions,0:IF,1:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	18
0x4001b70	    0x488b15000000	            mov rdx, qword [0x04001b77] 	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b77	          0x4885d2	                           test rdx, rdx	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b7a	            0x750d	                           jne 0x4001b89	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b7c	            0xeb32	                           jmp 0x4001bb0	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b7e	            0x6690	                                     nop	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b80	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b84	          0x4885d2	                           test rdx, rdx	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b87	            0x7427	                            je 0x4001bb0	      6496	screen.c	FUNCTION_34	CALL_1
0x4001b89	    0x8b82a4000000	            mov eax, dword [rdx + 0xa4] 	      6497	screen.c	FUNCTION_34	IF_1
0x4001b8f	            0x85c0	                           test eax, eax	      6497	screen.c	FUNCTION_34	IF_1
0x4001b91	            0x74ed	                            je 0x4001b80	      6497	screen.c	FUNCTION_34	IF_1
0x4001b93	    0xc78240010000	              mov dword [rdx + 0x140], 1	      6499	screen.c	FUNCTION_34	IF_1
0x4001b9d	      0xbf0a000000	                            mov edi, 0xa	      6500	screen.c	FUNCTION_34	IF_1	CALL_2
0x4001ba2	      0xe800000000	                          call 0x4001ba7	      6500	screen.c	FUNCTION_34	IF_1	CALL_2
0x4001ba7	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      6496	screen.c	FUNCTION_34	CALL_1
0x4001bab	          0x4885d2	                           test rdx, rdx	      6496	screen.c	FUNCTION_34	CALL_1
0x4001bae	            0x75d9	                           jne 0x4001b89	      6496	screen.c	FUNCTION_34	CALL_1
0x4001bb0	            0xf3c3	                                     ret	      6496	screen.c	FUNCTION_34	CALL_1
win_update	functions,0:IF,142:DO,0:ELSE,46:CALL,82:FOR,13:WHILE,5:SWITCH,0	2159
0x400fbc0	            0x4157	                                push r15	      1104	screen.c	FUNCTION_20
0x400fbc2	            0x4156	                                push r14	      1104	screen.c	FUNCTION_20
0x400fbc4	            0x4155	                                push r13	      1104	screen.c	FUNCTION_20
0x400fbc6	            0x4154	                                push r12	      1104	screen.c	FUNCTION_20
0x400fbc8	              0x55	                                push rbp	      1104	screen.c	FUNCTION_20
0x400fbc9	              0x53	                                push rbx	      1104	screen.c	FUNCTION_20
0x400fbca	          0x4889fb	                            mov rbx, rdi	      1104	screen.c	FUNCTION_20
0x400fbcd	    0x4881ecf80000	                           sub rsp, 0xf8	      1104	screen.c	FUNCTION_20
0x400fbd4	    0x8baf28010000	           mov ebp, dword [rdi + 0x128] 	      1154	screen.c	FUNCTION_20
0x400fbda	    0x64488b042528	                mov rax, qword fs:[0x28]	      1104	screen.c	FUNCTION_20
0x400fbe3	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      1104	screen.c	FUNCTION_20
0x400fbeb	            0x31c0	                            xor eax, eax	      1104	screen.c	FUNCTION_20
0x400fbed	        0x488b4708	                mov rax, qword [rdi + 8]	      1105	screen.c	FUNCTION_20
0x400fbf1	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1145	screen.c	FUNCTION_20
0x400fbfd	          0x83fd28	                           cmp ebp, 0x28	      1156	screen.c	FUNCTION_20	IF_1
0x400fc00	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1146	screen.c	FUNCTION_20
0x400fc0c	        0x48890424	                    mov qword [rsp], rax	      1105	screen.c	FUNCTION_20
0x400fc10	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	      1132	screen.c	FUNCTION_20
0x400fc17	      0x4889442418	             mov qword [rsp + 0x18], rax	      1132	screen.c	FUNCTION_20
0x400fc1c	            0x7462	                            je 0x400fc80	      1156	screen.c	FUNCTION_20	IF_1
0x400fc1e	    0x8b83a8010000	           mov eax, dword [rbx + 0x1a8] 	      1163	screen.c	FUNCTION_20	IF_2	CALL_1
0x400fc24	     0x383a0000000	             add eax, dword [rbx + 0xa0]	      1163	screen.c	FUNCTION_20	IF_2	CALL_1
0x400fc2a	            0x741c	                            je 0x400fc48	      1163	screen.c	FUNCTION_20	IF_2	CALL_1
0x400fc2c	    0x448ba3ac0000	           mov r12d, dword [rbx + 0xac] 	      1170	screen.c	FUNCTION_20	IF_3
0x400fc33	          0x4585e4	                         test r12d, r12d	      1170	screen.c	FUNCTION_20	IF_3
0x400fc36	            0x7568	                           jne 0x400fca0	      1170	screen.c	FUNCTION_20	IF_3
0x400fc38	    0x448b9bb00000	           mov r11d, dword [rbx + 0xb0] 	      6568	screen.c	FUNCTION_38	IF_1
0x400fc3f	          0x4585db	                         test r11d, r11d	      6568	screen.c	FUNCTION_38	IF_1
0x400fc42	     0xf8590000000	                           jne 0x400fcd8	      6568	screen.c	FUNCTION_38	IF_1
0x400fc48	    0xc78328010000	              mov dword [rbx + 0x128], 0	      1165	screen.c	FUNCTION_20	IF_2
0x400fc52	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      2355	screen.c	FUNCTION_20
0x400fc5a	    0x644833042528	                xor rax, qword fs:[0x28]	      2355	screen.c	FUNCTION_20
0x400fc63	     0xf8559240000	                           jne 0x40120c2	      2355	screen.c	FUNCTION_20
0x400fc69	    0x4881c4f80000	                           add rsp, 0xf8	      2355	screen.c	FUNCTION_20
0x400fc70	              0x5b	                                 pop rbx	      2355	screen.c	FUNCTION_20
0x400fc71	              0x5d	                                 pop rbp	      2355	screen.c	FUNCTION_20
0x400fc72	            0x415c	                                 pop r12	      2355	screen.c	FUNCTION_20
0x400fc74	            0x415d	                                 pop r13	      2355	screen.c	FUNCTION_20
0x400fc76	            0x415e	                                 pop r14	      2355	screen.c	FUNCTION_20
0x400fc78	            0x415f	                                 pop r15	      2355	screen.c	FUNCTION_20
0x400fc7a	              0xc3	                                     ret	      2355	screen.c	FUNCTION_20
0x400fc7b	       0xf1f440000	                   nop dword [rax + rax]	      2355	screen.c	FUNCTION_20
0x400fc80	    0xc78740010000	              mov dword [rdi + 0x140], 1	      1158	screen.c	FUNCTION_20	IF_1
0x400fc8a	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	      1159	screen.c	FUNCTION_20	IF_1
0x400fc94	            0xeb88	                           jmp 0x400fc1e	      1159	screen.c	FUNCTION_20	IF_1
0x400fc96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1159	screen.c	FUNCTION_20	IF_1
0x400fca0	          0x4889df	                            mov rdi, rbx	      1180	screen.c	FUNCTION_20	IF_4	CALL_3
0x400fca3	      0xe800000000	                          call 0x400fca8	      1180	screen.c	FUNCTION_20	IF_4	CALL_3
0x400fca8	            0x85c0	                           test eax, eax	      1180	screen.c	FUNCTION_20	IF_4	CALL_3
0x400fcaa	        0x8944246c	             mov dword [rsp + 0x6c], eax	      1180	screen.c	FUNCTION_20	IF_4	CALL_3
0x400fcae	            0x7440	                            je 0x400fcf0	      1180	screen.c	FUNCTION_20	IF_4	CALL_3
0x400fcb0	          0x4889df	                            mov rdi, rbx	      1182	screen.c	FUNCTION_20	IF_4	CALL_4
0x400fcb3	      0xe800000000	                          call 0x400fcb8	      1182	screen.c	FUNCTION_20	IF_4	CALL_4
0x400fcb8	          0x4889df	                            mov rdi, rbx	      1185	screen.c	FUNCTION_20	IF_4	IF_5	CALL_5
0x400fcbb	      0xe800000000	                          call 0x400fcc0	      1185	screen.c	FUNCTION_20	IF_4	IF_5	CALL_5
0x400fcc0	            0x85c0	                           test eax, eax	      1185	screen.c	FUNCTION_20	IF_4	IF_5	CALL_5
0x400fcc2	            0x7e84	                           jle 0x400fc48	      1185	screen.c	FUNCTION_20	IF_4	IF_5	CALL_5
0x400fcc4	          0x4889df	                            mov rdi, rbx	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcc7	      0xe8946fffff	             call sym.redraw_win_toolbar	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fccc	      0xe977ffffff	                           jmp 0x400fc48	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcd1	     0xf1f80000000	                         nop dword [rax]	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcd8	            0x31f6	                            xor esi, esi	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcda	          0x4889df	                            mov rdi, rbx	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcdd	      0xe89e57ffff	          call sym.draw_vsep_win.part.18	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fce2	      0xe961ffffff	                           jmp 0x400fc48	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fce7	    0x660f1f840000	                    nop word [rax + rax]	      1186	screen.c	FUNCTION_20	IF_4	CALL_6
0x400fcf0	    0x488bb3501500	          mov rsi, qword [rbx + 0x1550] 	      1194	screen.c	FUNCTION_20	CALL_7
0x400fcf7	        0x488d7b08	                      lea rdi, [rbx + 8]	      1194	screen.c	FUNCTION_20	CALL_7
0x400fcfb	      0xe88009ffff	          call sym.init_search_hl.isra.3	      1194	screen.c	FUNCTION_20	CALL_7
0x400fd00	            0x31c0	                            xor eax, eax	      1200	screen.c	FUNCTION_20	CALL_8
0x400fd02	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	      1200	screen.c	FUNCTION_20	CALL_8
0x400fd0a	     0xf8513110000	                           jne 0x4010e23	      1200	screen.c	FUNCTION_20	CALL_8
0x400fd10	    0x3b8324010000	           cmp eax, dword [rbx + 0x124] 	      1201	screen.c	FUNCTION_20	IF_6
0x400fd16	     0xf8414110000	                            je 0x4010e30	      1201	screen.c	FUNCTION_20	IF_6
0x400fd1c	    0x898324010000	            mov dword [rbx + 0x124], eax	      1204	screen.c	FUNCTION_20	IF_6
0x400fd22	      0xb828000000	                           mov eax, 0x28	      1107	screen.c	FUNCTION_20
0x400fd27	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1107	screen.c	FUNCTION_20
0x400fd2f	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1107	screen.c	FUNCTION_20
0x400fd37	      0xbd28000000	                           mov ebp, 0x28	      1107	screen.c	FUNCTION_20
0x400fd3c	    0x448b05000000	            mov r8d, dword [0x0400fd43] 	      1371	screen.c	FUNCTION_20	IF_30
0x400fd43	          0x4585c0	                           test r8d, r8d	      1371	screen.c	FUNCTION_20	IF_30
0x400fd46	            0x740a	                            je 0x400fd52	      1371	screen.c	FUNCTION_20	IF_30
0x400fd48	    0xc70500000000	               mov dword [0x0400fd52], 2	      1372	screen.c	FUNCTION_20	IF_30
0x400fd52	          0x83f823	                           cmp eax, 0x23	      1382	screen.c	FUNCTION_20	IF_31
0x400fd55	     0xf8685030000	                           jbe 0x40100e0	      1382	screen.c	FUNCTION_20	IF_31
0x400fd5b	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1596	screen.c	FUNCTION_20	ELSE_16
0x400fd61	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1596	screen.c	FUNCTION_20	ELSE_16
0x400fd69	          0x4531ff	                          xor r15d, r15d	      1115	screen.c	FUNCTION_20
0x400fd6c	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1113	screen.c	FUNCTION_20
0x400fd74	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1595	screen.c	FUNCTION_20	ELSE_16
0x400fd7c	        0x89442468	             mov dword [rsp + 0x68], eax	      1596	screen.c	FUNCTION_20	ELSE_16
0x400fd80	          0x83fd23	                           cmp ebp, 0x23	      1599	screen.c	FUNCTION_20	IF_57
0x400fd83	     0xf8417130000	                            je 0x40110a0	      1599	screen.c	FUNCTION_20	IF_57
0x400fd89	    0x448b0d000000	            mov r9d, dword [0x0400fd90] 	      1608	screen.c	FUNCTION_20	IF_58
0x400fd90	          0x4585c9	                           test r9d, r9d	      1608	screen.c	FUNCTION_20	IF_58
0x400fd93	     0xf8447040000	                            je 0x40101e0	      1608	screen.c	FUNCTION_20	IF_58
0x400fd99	    0x488b05000000	            mov rax, qword [0x0400fda0] 	      1608	screen.c	FUNCTION_20	IF_58
0x400fda0	        0x488b3c24	                    mov rdi, qword [rsp]	      1608	screen.c	FUNCTION_20	IF_58
0x400fda4	        0x4c8b6358	            mov r12, qword [rbx + 0x58] 	      1608	screen.c	FUNCTION_20	IF_58
0x400fda8	        0x483b7808	                cmp rdi, qword [rax + 8]	      1608	screen.c	FUNCTION_20	IF_58
0x400fdac	     0xf84d6180000	                            je 0x4011688	      1608	screen.c	FUNCTION_20	IF_58
0x400fdb2	          0x4d85e4	                           test r12, r12	      1609	screen.c	FUNCTION_20	IF_58
0x400fdb5	            0x7409	                            je 0x400fdc0	      1609	screen.c	FUNCTION_20	IF_58
0x400fdb7	          0x83fd28	                           cmp ebp, 0x28	      1609	screen.c	FUNCTION_20	IF_58
0x400fdba	     0xf85c8180000	                           jne 0x4011688	      1609	screen.c	FUNCTION_20	IF_58
0x400fdc0	        0x488b3c24	                    mov rdi, qword [rsp]	      1794	screen.c	FUNCTION_20	IF_90
0x400fdc4	        0x483b7808	                cmp rdi, qword [rax + 8]	      1794	screen.c	FUNCTION_20	IF_90
0x400fdc8	     0xf846f1a0000	                            je 0x401183d	      1794	screen.c	FUNCTION_20	IF_90
0x400fdce	        0xc6435000	                mov byte [rbx + 0x50], 0	      1804	screen.c	FUNCTION_20	ELSE_25
0x400fdd2	    0x48c743580000	               mov qword [rbx + 0x58], 0	      1805	screen.c	FUNCTION_20	ELSE_25
0x400fdda	    0x48c743680000	               mov qword [rbx + 0x68], 0	      1806	screen.c	FUNCTION_20	ELSE_25
0x400fde2	    0xc74370000000	               mov dword [rbx + 0x70], 0	      1807	screen.c	FUNCTION_20	ELSE_25
0x400fde9	    0x8b0500000000	            mov eax, dword [0x0400fdef] 	      1812	screen.c	FUNCTION_20
0x400fdef	    0x488b3d000000	            mov rdi, qword [0x0400fdf6] 	      1817	screen.c	FUNCTION_20	CALL_30
0x400fdf6	          0x4c89ee	                            mov rsi, r13	      1817	screen.c	FUNCTION_20	CALL_30
0x400fdf9	    0xc70500000000	               mov dword [0x0400fe03], 0	      1813	screen.c	FUNCTION_20
0x400fe03	        0x89442474	             mov dword [rsp + 0x74], eax	      1812	screen.c	FUNCTION_20
0x400fe07	      0xe800000000	                          call 0x400fe0c	      1817	screen.c	FUNCTION_20	CALL_30
0x400fe0c	          0x4c89ef	                            mov rdi, r13	      1818	screen.c	FUNCTION_20	CALL_31
0x400fe0f	      0xe800000000	                          call 0x400fe14	      1818	screen.c	FUNCTION_20	CALL_31
0x400fe14	          0x4889df	                            mov rdi, rbx	      1829	screen.c	FUNCTION_20	IF_91	CALL_32
0x400fe17	    0xc70500000000	               mov dword [0x0400fe21], 0	      1821	screen.c	FUNCTION_20
0x400fe21	      0xe800000000	                          call 0x400fe26	      1829	screen.c	FUNCTION_20	IF_91	CALL_32
0x400fe26	            0x85c0	                           test eax, eax	      1829	screen.c	FUNCTION_20	IF_91	CALL_32
0x400fe28	            0x7e08	                           jle 0x400fe32	      1829	screen.c	FUNCTION_20	IF_91	CALL_32
0x400fe2a	          0x4889df	                            mov rdi, rbx	      1830	screen.c	FUNCTION_20	CALL_33
0x400fe2d	      0xe82e6effff	             call sym.redraw_win_toolbar	      1830	screen.c	FUNCTION_20	CALL_33
0x400fe32	    0x488d83540200	                  lea rax, [rbx + 0x254]	      1830	screen.c	FUNCTION_20	CALL_33
0x400fe39	        0x4c8b7b78	            mov r15, qword [rbx + 0x78] 	      1839	screen.c	FUNCTION_20
0x400fe3d	          0x4531f6	                          xor r14d, r14d	      1839	screen.c	FUNCTION_20
0x400fe40	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1839	screen.c	FUNCTION_20
0x400fe49	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1839	screen.c	FUNCTION_20
0x400fe51	            0x31ed	                            xor ebp, ebp	      1838	screen.c	FUNCTION_20
0x400fe53	      0x4889442458	             mov qword [rsp + 0x58], rax	      1838	screen.c	FUNCTION_20
0x400fe58	    0x488d83ac0000	                   lea rax, [rbx + 0xac]	      1838	screen.c	FUNCTION_20
0x400fe5f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1143	screen.c	FUNCTION_20
0x400fe68	    0xc74424200100	               mov dword [rsp + 0x20], 1	      1142	screen.c	FUNCTION_20
0x400fe70	          0x4531ed	                          xor r13d, r13d	      1837	screen.c	FUNCTION_20
0x400fe73	      0x4889442460	             mov qword [rsp + 0x60], rax	      1837	screen.c	FUNCTION_20
0x400fe78	      0xe91c010000	                           jmp 0x400ff99	      1837	screen.c	FUNCTION_20
0x400fe7d	           0xf1f00	                         nop dword [rax]	      1837	screen.c	FUNCTION_20
0x400fe80	      0x443b6c2438	           cmp r13d, dword [rsp + 0x38] 	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe85	           0xf9dc1	                                setge cl	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe88	      0x443b6c2468	           cmp r13d, dword [rsp + 0x68] 	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe8d	           0xf9cc2	                                 setl dl	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe90	            0x84d1	                             test cl, dl	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe92	     0xf852e010000	                           jne 0x400ffc6	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe98	      0x448b5c243c	           mov r11d, dword [rsp + 0x3c] 	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fe9d	          0x4585db	                         test r11d, r11d	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fea0	     0xf8520010000	                           jne 0x400ffc6	      1873	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fea6	    0x3bbbf8000000	            cmp edi, dword [rbx + 0xf8] 	      1875	screen.c	FUNCTION_20	FOR_8	IF_94
0x400feac	     0xf8d14010000	                           jge 0x400ffc6	      1875	screen.c	FUNCTION_20	FOR_8	IF_94
0x400feb2	    0x488bb3000100	           mov rsi, qword [rbx + 0x100] 	      1876	screen.c	FUNCTION_20	FOR_8	IF_94
0x400feb9	    0x420fb7543608	        movzx edx, word [rsi + r14 + 8] 	      1876	screen.c	FUNCTION_20	FOR_8	IF_94
0x400febf	          0x4401ea	                           add edx, r13d	      1876	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fec2	        0x39542470	            cmp dword [rsp + 0x70], edx 	      1876	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fec6	     0xf8cfa000000	                            jl 0x400ffc6	      1876	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fecc	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1877	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fed4	          0x4885c9	                           test rcx, rcx	      1877	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fed7	     0xf843e130000	                            je 0x401121b	      1877	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fedd	          0x4939cf	                            cmp r15, rcx	      1878	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fee0	     0xf8462090000	                            je 0x4010848	      1878	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fee6	     0xf8c2f130000	                            jl 0x401121b	      1879	screen.c	FUNCTION_20	FOR_8	IF_94
0x400feec	    0x4c3bbc249000	            cmp r15, qword [rsp + 0x90] 	      1882	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fef4	     0xf8c3e090000	                            jl 0x4010838	      1882	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fefa	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1882	screen.c	FUNCTION_20	FOR_8	IF_94
0x400fefe	          0x83f803	                              cmp eax, 3	      1882	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff01	     0xf8431090000	                            je 0x4010838	      1882	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff07	          0x83f802	                              cmp eax, 2	      1883	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff0a	     0xf8425210000	                            je 0x4012035	      1883	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff10	    0x4883bb501500	             cmp qword [rbx + 0x1550], 0	      1895	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff18	            0x7412	                            je 0x400ff2c	      1895	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff1a	        0x488b0424	                    mov rax, qword [rsp]	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff1e	    0x4883b8200100	              cmp qword [rax + 0x120], 0	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff26	     0xf859a000000	                           jne 0x400ffc6	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff2c	    0x488bb3000100	           mov rsi, qword [rbx + 0x100] 	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff33	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff39	    0x420fb7443608	        movzx eax, word [rsi + r14 + 8] 	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff3f	          0x4401e8	                           add eax, r13d	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff42	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff46	          0x83c101	                              add ecx, 1	      1896	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ff49	            0x39c7	                            cmp edi, eax	      2162	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_122
0x400ff4b	            0x89ca	                            mov edx, ecx	      2162	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_122
0x400ff4d	     0xf8c17210000	                            jl 0x401206a	      2162	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_122
0x400ff53	          0x4863f9	                         movsxd rdi, ecx	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff56	    0xc74424200100	               mov dword [rsp + 0x20], 1	      2170	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff5e	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff66	        0x488d3c7f	                  lea rdi, [rdi + rdi*2]	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff6a	      0x4c8b7cfef8	        mov r15, qword [rsi + rdi*8 - 8]	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff6f	        0x4983c701	                              add r15, 1	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff73	       0xf1f440000	                   nop dword [rax + rax]	      2165	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x400ff78	        0x488b3c24	                    mov rdi, qword [rsp]	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff7c	    0x488344243001	               add qword [rsp + 0x30], 1	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff82	        0x4983c618	                           add r14, 0x18	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff86	        0x894c2428	             mov dword [rsp + 0x28], ecx	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff8a	          0x4489ed	                           mov ebp, r13d	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff8d	          0x4c3b3f	                    cmp r15, qword [rdi]	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff90	     0xf8f8e140000	                            jg 0x4011424	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff96	          0x4189c5	                           mov r13d, eax	      2174	screen.c	FUNCTION_20	FOR_8	IF_123
0x400ff99	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1844	screen.c	FUNCTION_20	FOR_8	IF_92
0x400ff9f	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      1844	screen.c	FUNCTION_20	FOR_8	IF_92
0x400ffa3	          0x4139c5	                           cmp r13d, eax	      1844	screen.c	FUNCTION_20	FOR_8	IF_92
0x400ffa6	            0x89fa	                            mov edx, edi	      1844	screen.c	FUNCTION_20	FOR_8	IF_92
0x400ffa8	     0xf846e130000	                            je 0x401131c	      1844	screen.c	FUNCTION_20	FOR_8	IF_92
0x400ffae	        0x488b0c24	                    mov rcx, qword [rsp]	      1851	screen.c	FUNCTION_20	FOR_8	IF_93
0x400ffb2	          0x4c3b39	                    cmp r15, qword [rcx]	      1851	screen.c	FUNCTION_20	FOR_8	IF_93
0x400ffb5	     0xf8f74130000	                            jg 0x401132f	      1851	screen.c	FUNCTION_20	FOR_8	IF_93
0x400ffbb	      0x44396c242c	           cmp dword [rsp + 0x2c], r13d 	      1870	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ffc0	     0xf8ebafeffff	                           jle 0x400fe80	      1870	screen.c	FUNCTION_20	FOR_8	IF_94
0x400ffc6	    0x4c3bbc248800	            cmp r15, qword [rsp + 0x88] 	      1901	screen.c	FUNCTION_20	FOR_8	IF_94	IF_95
0x400ffce	     0xf8474080000	                            je 0x4010848	      1901	screen.c	FUNCTION_20	FOR_8	IF_94	IF_95
0x400ffd4	      0xba00000000	                              mov edx, 0	      2079	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_45
0x400ffd9	          0x4c89fe	                            mov rsi, r15	      2079	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_45
0x400ffdc	          0x4889df	                            mov rdi, rbx	      2079	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_45
0x400ffdf	      0xe800000000	                          call 0x400ffe4	      2079	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_45
0x400ffe4	          0x4885c0	                           test rax, rax	      2080	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x400ffe7	      0x4889442408	                mov qword [rsp + 8], rax	      2079	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_45
0x400ffec	     0xf85de020000	                           jne 0x40102d0	      2080	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x400fff2	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      2093	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x400fff6	    0x3b83f8000000	            cmp eax, dword [rbx + 0xf8] 	      2093	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x400fffc	            0x7d19	                           jge 0x4010017	      2093	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x400fffe	          0x4c89f0	                            mov rax, r14	      2094	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010001	    0x480383000100	            add rax, qword [rbx + 0x100]	      2094	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010008	        0x80780a00	                 cmp byte [rax + 0xa], 0	      2094	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x401000c	            0x7409	                            je 0x4010017	      2094	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x401000e	          0x4c3b38	                    cmp r15, qword [rax]	      2095	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010011	     0xf84410b0000	                            je 0x4010b58	      2095	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010017	          0x4c89fe	                            mov rsi, r15	      2111	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_48
0x401001a	          0x4889df	                            mov rdi, rbx	      2111	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_48
0x401001d	      0xe84e0fffff	              call sym.prepare_search_hl	      2111	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_48
0x4010022	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x4010027	          0x4885c0	                           test rax, rax	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x401002a	            0x7410	                            je 0x401003c	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x401002c	          0x4889c5	                            mov rbp, rax	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x401002f	        0x4883c501	                              add rbp, 1	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x4010033	          0x4939ef	                            cmp r15, rbp	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x4010036	     0xf8f74090000	                            jg 0x40109b0	      2115	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118
0x401003c	    0x4883bc248800	               cmp qword [rsp + 0x88], 0	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x4010045	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x401004b	          0x4489ea	                           mov edx, r13d	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x401004e	          0x4c89fe	                            mov rsi, r15	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x4010051	          0x4889df	                            mov rdi, rbx	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x4010054	        0x410f94c0	                                sete r8b	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x4010058	        0x450fb6c0	                          movzx r8d, r8b	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x401005c	      0xe87f9fffff	                       call sym.win_line	      2123	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_51
0x4010061	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      2126	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x4010068	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      2127	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x401006d	    0xc74424200200	               mov dword [rsp + 0x20], 2	      2130	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x4010075	    0x42c644320b00	           mov byte [rdx + r14 + 0xb], 0	      2126	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x401007b	          0x4c89f2	                            mov rdx, r14	      2127	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x401007e	    0x480393000100	            add rdx, qword [rbx + 0x100]	      2127	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x4010085	        0x4c897a10	             mov qword [rdx + 0x10], r15	      2127	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36
0x4010089	        0xc6420a01	                 mov byte [rdx + 0xa], 1	      2136	screen.c	FUNCTION_20	FOR_8	IF_94
0x401008d	    0x3b83a0000000	            cmp eax, dword [rbx + 0xa0] 	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x4010093	          0x4c893a	                    mov qword [rdx], r15	      2135	screen.c	FUNCTION_20	FOR_8	IF_94
0x4010096	     0xf8fe40b0000	                            jg 0x4010c80	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x401009c	    0x8b939c000000	            mov edx, dword [rbx + 0x9c] 	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x40100a2	             0x1c2	                            add edx, eax	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x40100a4	          0x4863d2	                         movsxd rdx, edx	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x40100a7	    0x483b15000000	            cmp rdx, qword [0x040100ae] 	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x40100ae	     0xf8dcc0b0000	                           jge 0x4010c80	      2141	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x40100b4	    0x833d00000000	cmp dword [0x040100bb], 0xffffffffffffffff	      2149	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40100bb	     0xf841f080000	                            je 0x40108e0	      2149	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40100c1	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      2149	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40100c5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100ca	          0x83c101	                              add ecx, 1	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100cd	      0x4d8d7c3f01	                lea r15, [r15 + rdi + 1]	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100d2	            0x89ca	                            mov edx, ecx	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100d4	      0xe99ffeffff	                           jmp 0x400ff78	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100d9	     0xf1f80000000	                         nop dword [rax]	      2153	screen.c	FUNCTION_20	FOR_8	IF_94
0x40100e0	    0x48b800041002	                 movabs rax, 0x802100400	      1382	screen.c	FUNCTION_20	IF_31
0x40100ea	        0x480fa3e8	                             bt rax, rbp	      1382	screen.c	FUNCTION_20	IF_31
0x40100ee	     0xf8367fcffff	                           jae 0x400fd5b	      1382	screen.c	FUNCTION_20	IF_31
0x40100f4	    0x8bbb8c000000	            mov edi, dword [rbx + 0x8c] 	      1385	screen.c	FUNCTION_20	IF_31
0x40100fa	            0x85ff	                           test edi, edi	      1385	screen.c	FUNCTION_20	IF_31
0x40100fc	     0xf8559fcffff	                           jne 0x400fd5b	      1385	screen.c	FUNCTION_20	IF_31
0x4010102	    0x8bb390000000	            mov esi, dword [rbx + 0x90] 	      1385	screen.c	FUNCTION_20	IF_31
0x4010108	            0x85f6	                           test esi, esi	      1385	screen.c	FUNCTION_20	IF_31
0x401010a	     0xf854bfcffff	                           jne 0x400fd5b	      1385	screen.c	FUNCTION_20	IF_31
0x4010110	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1389	screen.c	FUNCTION_20	IF_31	IF_32
0x4010118	          0x4885c0	                           test rax, rax	      1389	screen.c	FUNCTION_20	IF_31	IF_32
0x401011b	            0x740a	                            je 0x4010127	      1389	screen.c	FUNCTION_20	IF_31	IF_32
0x401011d	        0x483b4378	            cmp rax, qword [rbx + 0x78] 	      1389	screen.c	FUNCTION_20	IF_31	IF_32
0x4010121	     0xf84411c0000	                            je 0x4011d68	      1389	screen.c	FUNCTION_20	IF_31	IF_32
0x4010127	    0x488bbb000100	           mov rdi, qword [rbx + 0x100] 	      1396	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x401012e	        0x807f0a00	                 cmp byte [rdi + 0xa], 0	      1396	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4010132	            0x7413	                            je 0x4010147	      1396	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4010134	          0x488b07	                    mov rax, qword [rdi]	      1397	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4010137	        0x48394378	            cmp qword [rbx + 0x78], rax 	      1397	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x401013b	     0xf8c4d1b0000	                            jl 0x4011c8e	      1397	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4010141	     0xf84351b0000	                            je 0x4011c7c	      1399	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4010147	    0x8b8bf8000000	            mov ecx, dword [rbx + 0xf8] 	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x401014d	          0x4531e4	                          xor r12d, r12d	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010150	          0x4531ed	                          xor r13d, r13d	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010153	        0x488d470a	                    lea rax, [rdi + 0xa]	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010157	            0x85c9	                           test ecx, ecx	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010159	            0x7e2c	                           jle 0x4010187	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x401015b	       0xf1f440000	                   nop dword [rax + rax]	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010160	          0x803800	                       cmp byte [rax], 0	      1485	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4010163	            0x740e	                            je 0x4010173	      1485	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4010165	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1486	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4010169	        0x483970f6	              cmp qword [rax - 0xa], rsi	      1486	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x401016d	     0xf844c190000	                            je 0x4011abf	      1486	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4010173	         0xfb750fe	               movzx edx, word [rax - 2]	      1491	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010177	        0x4183c401	                             add r12d, 1	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x401017b	        0x4883c018	                           add rax, 0x18	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x401017f	          0x4101d5	                           add r13d, edx	      1491	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010182	          0x4139cc	                           cmp r12d, ecx	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010185	            0x75d9	                           jne 0x4010160	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010187	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x401018d	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010195	        0x89442468	             mov dword [rsp + 0x68], eax	      1483	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x4010199	    0x488b05000000	            mov rax, qword [0x040101a0] 	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101a0	    0x483905000000	            cmp qword [0x040101a7], rax 	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101a7	     0xf841b1d0000	                            je 0x4011ec8	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101ad	          0x4531ff	                          xor r15d, r15d	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101b0	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101b8	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1572	screen.c	FUNCTION_20	IF_31	IF_52	IF_53
0x40101c0	    0x833d00000000	               cmp dword [0x040101c7], 1	      1589	screen.c	FUNCTION_20	IF_31	IF_56
0x40101c7	     0xf85b3fbffff	                           jne 0x400fd80	      1589	screen.c	FUNCTION_20	IF_31	IF_56
0x40101cd	    0xc70500000000	               mov dword [0x040101d7], 0	      1590	screen.c	FUNCTION_20	IF_31	IF_56
0x40101d7	      0xe9a4fbffff	                           jmp 0x400fd80	      1590	screen.c	FUNCTION_20	IF_31	IF_56
0x40101dc	         0xf1f4000	                         nop dword [rax]	      1590	screen.c	FUNCTION_20	IF_31	IF_56
0x40101e0	        0x4c8b6358	            mov r12, qword [rbx + 0x58] 	      1609	screen.c	FUNCTION_20	IF_58
0x40101e4	          0x4d85e4	                           test r12, r12	      1609	screen.c	FUNCTION_20	IF_58
0x40101e7	     0xf84e1fbffff	                            je 0x400fdce	      1609	screen.c	FUNCTION_20	IF_58
0x40101ed	          0x83fd28	                           cmp ebp, 0x28	      1609	screen.c	FUNCTION_20	IF_58
0x40101f0	     0xf84d8fbffff	                            je 0x400fdce	      1609	screen.c	FUNCTION_20	IF_58
0x40101f6	        0x488b6b68	            mov rbp, qword [rbx + 0x68] 	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x40101fa	          0x4c39e5	                            cmp rbp, r12	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x40101fd	            0x7e09	                           jle 0x4010208	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x40101ff	          0x4889e8	                            mov rax, rbp	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x4010202	          0x4c89e5	                            mov rbp, r12	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x4010205	          0x4989c4	                            mov r12, rax	      1716	screen.c	FUNCTION_20	IF_58	ELSE_20	IF_79
0x4010208	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1731	screen.c	FUNCTION_20	IF_58	IF_80
0x401020c	          0x4989e8	                             mov r8, rbp	      1731	screen.c	FUNCTION_20	IF_58	IF_80
0x401020f	          0x4839f5	                            cmp rbp, rsi	      1731	screen.c	FUNCTION_20	IF_58	IF_80
0x4010212	        0x4c0f4cc6	                           cmovl r8, rsi	      1731	screen.c	FUNCTION_20	IF_58	IF_80
0x4010216	    0xf683b4000000	           test byte [rbx + 0xb4], 0x20 	      1738	screen.c	FUNCTION_20	IF_58	IF_81
0x401021d	            0x7419	                            je 0x4010238	      1738	screen.c	FUNCTION_20	IF_58	IF_81
0x401021f	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	      1740	screen.c	FUNCTION_20	IF_58	IF_81	IF_82
0x4010226	        0x488d50ff	                      lea rdx, [rax - 1]	      1741	screen.c	FUNCTION_20	IF_58	IF_81	IF_82
0x401022a	          0x4c39c0	                             cmp rax, r8	      1741	screen.c	FUNCTION_20	IF_58	IF_81	IF_82
0x401022d	        0x4c0f4ec2	                          cmovle r8, rdx	      1741	screen.c	FUNCTION_20	IF_58	IF_81	IF_82
0x4010231	          0x4939c4	                            cmp r12, rax	      1743	screen.c	FUNCTION_20	IF_58	IF_81	IF_83
0x4010234	        0x4c0f4de2	                         cmovge r12, rdx	      1743	screen.c	FUNCTION_20	IF_58	IF_81	IF_83
0x4010238	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      1755	screen.c	FUNCTION_20	IF_58	IF_84
0x401023c	            0x85ed	                           test ebp, ebp	      1755	screen.c	FUNCTION_20	IF_58	IF_84
0x401023e	     0xf84df060000	                            je 0x4010923	      1755	screen.c	FUNCTION_20	IF_58	IF_84
0x4010244	          0x4585ff	                         test r15d, r15d	      1763	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22
0x4010247	      0xb800000000	                              mov eax, 0	      1763	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22
0x401024c	       0xf4544242c	          cmovne eax, dword [rsp + 0x2c]	      1763	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22
0x4010251	          0x4939f0	                             cmp r8, rsi	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010254	    0x8bbbf8000000	            mov edi, dword [rbx + 0xf8] 	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401025a	        0x89442438	             mov dword [rsp + 0x38], eax	      1763	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22
0x401025e	     0xf8ed6110000	                           jle 0x401143a	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010264	            0x85ff	                           test edi, edi	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010266	     0xf8ead060000	                           jle 0x4010919	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401026c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010273	            0x31c9	                            xor ecx, ecx	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010275	            0x31d2	                            xor edx, edx	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010277	        0x4883c008	                              add rax, 8	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401027b	       0xf1f440000	                   nop dword [rax + rax]	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010280	        0x80780200	                   cmp byte [rax + 2], 0	      1766	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x4010284	            0x7435	                            je 0x40102bb	      1766	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x4010286	        0x440fb710	                  movzx r10d, word [rax]	      1767	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x401028a	      0x4401542438	            add dword [rsp + 0x38], r10d	      1767	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x401028f	          0x83c201	                              add edx, 1	      1770	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010292	            0x39fa	                            cmp edx, edi	      1772	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_88
0x4010294	     0xf8d66060000	                           jge 0x4010900	      1772	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_88
0x401029a	        0x80781a00	                cmp byte [rax + 0x1a], 0	      1772	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_88
0x401029e	     0xf845c060000	                            je 0x4010900	      1772	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_88
0x40102a4	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1773	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_88
0x40102a8	          0x4939f0	                             cmp r8, rsi	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x40102ab	     0xf8e8d110000	                           jle 0x401143e	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x40102b1	        0x4883c018	                           add rax, 0x18	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x40102b5	        0x80780200	                   cmp byte [rax + 2], 0	      1766	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x40102b9	            0x75cb	                           jne 0x4010286	      1766	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	IF_86
0x40102bb	          0x4585ff	                         test r15d, r15d	      1768	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102be	            0x75cf	                           jne 0x401028f	      1768	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102c0	        0x440fb710	                  movzx r10d, word [rax]	      1769	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102c4	          0x4401d1	                           add ecx, r10d	      1769	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102c7	            0xebc6	                           jmp 0x401028f	      1769	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102c9	     0xf1f80000000	                         nop dword [rax]	      1769	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_23	IF_87
0x40102d0	      0x498d4407ff	                lea rax, [r15 + rax - 1]	      2650	screen.c	FUNCTION_25
0x40102d5	    0x488b35000000	            mov rsi, qword [0x040102dc] 	      2656	screen.c	FUNCTION_25
0x40102dc	    0x8b1500000000	            mov edx, dword [0x040102e2] 	      2674	screen.c	FUNCTION_25	IF_1
0x40102e2	      0x4889442440	             mov qword [rsp + 0x40], rax	      2650	screen.c	FUNCTION_25
0x40102e7	    0x488b05000000	            mov rax, qword [0x040102ee] 	      2656	screen.c	FUNCTION_25
0x40102ee	          0x4829c6	                            sub rsi, rax	      2656	screen.c	FUNCTION_25
0x40102f1	            0x85d2	                           test edx, edx	      2674	screen.c	FUNCTION_25	IF_1
0x40102f3	      0x4889742420	             mov qword [rsp + 0x20], rsi	      2656	screen.c	FUNCTION_25
0x40102f8	          0x4189f4	                           mov r12d, esi	      2656	screen.c	FUNCTION_25
0x40102fb	     0xf847f060000	                            je 0x4010980	      2674	screen.c	FUNCTION_25	IF_1
0x4010301	    0x483b1d000000	            cmp rbx, qword [0x04010308] 	      2674	screen.c	FUNCTION_25	IF_1
0x4010308	     0xf84160f0000	                            je 0x4011224	      2674	screen.c	FUNCTION_25	IF_1
0x401030e	    0x8b83c8010000	           mov eax, dword [rbx + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x4010314	    0x488b15000000	            mov rdx, qword [0x0401031b] 	      2628	screen.c	FUNCTION_24
0x401031b	            0x31ed	                            xor ebp, ebp	      2667	screen.c	FUNCTION_25
0x401031d	            0x89d1	                            mov ecx, edx	      2629	screen.c	FUNCTION_24
0x401031f	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2630	screen.c	FUNCTION_24
0x4010325	             0x1e9	                            add ecx, ebp	      2632	screen.c	FUNCTION_24	IF_1
0x4010327	    0x4c8d9424b000	                   lea r10, [rsp + 0xb0]	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x401032f	          0x4189d0	                            mov r8d, edx	      2632	screen.c	FUNCTION_24	IF_1
0x4010332	          0x4129c8	                            sub r8d, ecx	      2632	screen.c	FUNCTION_24	IF_1
0x4010335	          0x4139c0	                            cmp r8d, eax	      2632	screen.c	FUNCTION_24	IF_1
0x4010338	        0x440f4fc0	                          cmovg r8d, eax	      2632	screen.c	FUNCTION_24	IF_1
0x401033c	          0x4585c0	                           test r8d, r8d	      2691	screen.c	FUNCTION_25	IF_3
0x401033f	      0x4489442448	             mov dword [rsp + 0x48], r8d	      2691	screen.c	FUNCTION_25	IF_3
0x4010344	     0xf8ea9000000	                           jle 0x40103f3	      2691	screen.c	FUNCTION_25	IF_3
0x401034a	          0x4c89d7	                            mov rdi, r10	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x401034d	          0x4c89f9	                            mov rcx, r15	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x4010350	      0xba01000000	                              mov edx, 1	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x4010355	          0x4889de	                            mov rsi, rbx	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x4010358	      0x4c89542450	             mov qword [rsp + 0x50], r10	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x401035d	      0xe8befffeff	                call sym.fill_foldcolumn	      2693	screen.c	FUNCTION_25	IF_3	CALL_3
0x4010362	    0x8bbb54020000	           mov edi, dword [rbx + 0x254] 	      2695	screen.c	FUNCTION_25	IF_3	IF_4
0x4010368	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2695	screen.c	FUNCTION_25	IF_3	IF_4
0x401036d	      0x448b442448	            mov r8d, dword [rsp + 0x48] 	      2695	screen.c	FUNCTION_25	IF_3	IF_4
0x4010372	            0x85ff	                           test edi, edi	      2695	screen.c	FUNCTION_25	IF_3	IF_4
0x4010374	     0xf8496070000	                            je 0x4010b10	      2695	screen.c	FUNCTION_25	IF_3	IF_4
0x401037a	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x401037e	     0x3bbac000000	             add edi, dword [rbx + 0xac]	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4010384	          0x4489c2	                            mov edx, r8d	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4010387	    0x8b0d00000000	            mov ecx, dword [0x0401038d] 	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x401038d	          0x4c89d6	                            mov rsi, r10	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4010390	      0x4489442450	             mov dword [rsp + 0x50], r8d	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4010395	      0x4c89542448	             mov qword [rsp + 0x48], r10	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x401039a	          0x4429c7	                            sub edi, r8d	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x401039d	            0x29ef	                            sub edi, ebp	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x401039f	      0xe8fcfefeff	                 call sym.copy_text_attr	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103a4	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103a9	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103ae	            0x31d2	                            xor edx, edx	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103b0	        0x418d70ff	                       lea esi, [r8 - 1]	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103b4	        0x4883c601	                              add rsi, 1	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103b8	     0xf1f84000000	                   nop dword [rax + rax]	      2699	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x40103c0	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103c6	      0x410fb60c12	             movzx ecx, byte [r10 + rdx]	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103cb	    0x488b3d000000	            mov rdi, qword [0x040103d2] 	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103d2	          0x4401e0	                           add eax, r12d	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103d5	            0x29d0	                            sub eax, edx	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103d7	        0x4883c201	                              add rdx, 1	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103db	          0x83e801	                              sub eax, 1	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103de	            0x29e8	                            sub eax, ebp	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103e0	          0x4839f2	                            cmp rdx, rsi	      2702	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103e3	            0x4898	                                    cdqe	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103e5	          0x880c07	                mov byte [rdi + rax], cl	      2703	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103e8	            0x75d6	                           jne 0x40103c0	      2702	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103ea	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2702	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x40103f0	          0x4401c5	                            add ebp, r8d	      2708	screen.c	FUNCTION_25	IF_3
0x40103f3	    0x8bb354020000	           mov esi, dword [rbx + 0x254] 	      2731	screen.c	FUNCTION_25	CALL_9
0x40103f9	            0x29ea	                            sub edx, ebp	      2731	screen.c	FUNCTION_25	CALL_9
0x40103fb	            0x85f6	                           test esi, esi	      2731	screen.c	FUNCTION_25	CALL_9
0x40103fd	     0xf853d050000	                           jne 0x4010940	      2731	screen.c	FUNCTION_25	CALL_9
0x4010403	            0x85d2	                           test edx, edx	      2731	screen.c	FUNCTION_25	CALL_9
0x4010405	            0x7e2d	                           jle 0x4010434	      2731	screen.c	FUNCTION_25	CALL_9
0x4010407	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2731	screen.c	FUNCTION_25	CALL_9
0x401040b	    0x488b0d000000	            mov rcx, qword [0x04010412] 	      2731	screen.c	FUNCTION_25	CALL_9
0x4010412	     0xfb735000000	           movzx esi, word [0x04010419] 	      2731	screen.c	FUNCTION_25	CALL_9
0x4010419	             0x1e8	                            add eax, ebp	      2731	screen.c	FUNCTION_25	CALL_9
0x401041b	            0x4898	                                    cdqe	      2731	screen.c	FUNCTION_25	CALL_9
0x401041d	        0x488d0c41	                  lea rcx, [rcx + rax*2]	      2731	screen.c	FUNCTION_25	CALL_9
0x4010421	            0x31c0	                            xor eax, eax	      2731	screen.c	FUNCTION_25	CALL_9
0x4010423	       0xf1f440000	                   nop dword [rax + rax]	      2731	screen.c	FUNCTION_25	CALL_9
0x4010428	        0x66893441	              mov word [rcx + rax*2], si	      2731	screen.c	FUNCTION_25	CALL_9
0x401042c	        0x4883c001	                              add rax, 1	      2731	screen.c	FUNCTION_25	CALL_9
0x4010430	            0x39c2	                            cmp edx, eax	      2731	screen.c	FUNCTION_25	CALL_9
0x4010432	            0x7ff4	                            jg 0x4010428	      2731	screen.c	FUNCTION_25	CALL_9
0x4010434	          0x4889df	                            mov rdi, rbx	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x4010437	      0x4c89542448	             mov qword [rsp + 0x48], r10	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x401043c	      0xe800000000	                          call 0x4010441	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x4010441	            0x85c0	                           test eax, eax	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x4010443	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x4010448	            0x745b	                            je 0x40104a5	      2735	screen.c	FUNCTION_25	IF_5	CALL_10
0x401044a	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2737	screen.c	FUNCTION_25	IF_5
0x4010450	            0x89d0	                            mov eax, edx	      2737	screen.c	FUNCTION_25	IF_5
0x4010452	            0x29e8	                            sub eax, ebp	      2737	screen.c	FUNCTION_25	IF_5
0x4010454	            0x85c0	                           test eax, eax	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x4010456	     0xf8e11010000	                           jle 0x401056d	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x401045c	          0x83f802	                              cmp eax, 2	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x401045f	      0xb902000000	                              mov ecx, 2	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x4010464	      0x4c89542450	             mov qword [rsp + 0x50], r10	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x4010469	           0xf4fc1	                          cmovg eax, ecx	      2738	screen.c	FUNCTION_25	IF_5	IF_6
0x401046c	    0x8b8b54020000	           mov ecx, dword [rbx + 0x254] 	      2743	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x4010472	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010476	            0x85c9	                           test ecx, ecx	      2743	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x4010478	     0xf8472070000	                            je 0x4010bf0	      2743	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x401047e	             0x1d7	                            add edi, edx	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010480	    0x8b0d00000000	            mov ecx, dword [0x04010486] 	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010486	            0x89c2	                            mov edx, eax	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010488	            0x29c7	                            sub edi, eax	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x401048a	      0xbe00000000	                              mov esi, 0	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x401048f	        0x89442448	             mov dword [rsp + 0x48], eax	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010493	            0x29ef	                            sub edi, ebp	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x4010495	      0xe806fefeff	                 call sym.copy_text_attr	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x401049a	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x401049e	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2745	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x40104a3	             0x1c5	                            add ebp, eax	      2750	screen.c	FUNCTION_25	IF_5	IF_6
0x40104a5	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	      2758	screen.c	FUNCTION_25	IF_9
0x40104ad	     0xf84ba000000	                            je 0x401056d	      2758	screen.c	FUNCTION_25	IF_9
0x40104b3	    0x448b9bac0000	           mov r11d, dword [rbx + 0xac] 	      2760	screen.c	FUNCTION_25	IF_9
0x40104ba	          0x4129eb	                           sub r11d, ebp	      2760	screen.c	FUNCTION_25	IF_9
0x40104bd	          0x4585db	                         test r11d, r11d	      2761	screen.c	FUNCTION_25	IF_9	IF_10
0x40104c0	      0x44895c2448	            mov dword [rsp + 0x48], r11d	      2761	screen.c	FUNCTION_25	IF_9	IF_10
0x40104c5	     0xf8ea2000000	                           jle 0x401056d	      2761	screen.c	FUNCTION_25	IF_9	IF_10
0x40104cb	          0x4889df	                            mov rdi, rbx	      2763	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x40104ce	      0x4c89542450	             mov qword [rsp + 0x50], r10	      2763	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x40104d3	      0xe800000000	                          call 0x40104d8	      2763	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x40104d8	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	      2763	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x40104dc	          0x4189c0	                            mov r8d, eax	      2763	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x40104df	          0x8d4001	                      lea eax, [rax + 1]	      2767	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x40104e2	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104e7	            0x39c7	                            cmp edi, eax	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104e9	           0xf4ec7	                         cmovle eax, edi	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104ec	        0x89442448	             mov dword [rsp + 0x48], eax	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104f0	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104f6	            0x85c0	                           test eax, eax	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104f8	     0xf8422070000	                            je 0x4010c20	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x40104fe	    0x8b833c020000	           mov eax, dword [rbx + 0x23c] 	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x4010504	            0x85c0	                           test eax, eax	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x4010506	     0xf8514070000	                           jne 0x4010c20	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x401050c	          0x4d89f9	                             mov r9, r15	      2770	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x401050f	      0xb900000000	                              mov ecx, 0	      2765	screen.c	FUNCTION_25	IF_9	IF_10
0x4010514	          0x4c89d7	                            mov rdi, r10	        33	stdio2.h	FUNCTION_116	CALL_2
0x4010517	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_2
0x4010519	      0xba33000000	                           mov edx, 0x33	        33	stdio2.h	FUNCTION_116	CALL_2
0x401051e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_2
0x4010523	      0x4c89542450	             mov qword [rsp + 0x50], r10	        33	stdio2.h	FUNCTION_116	CALL_2
0x4010528	      0xe800000000	                          call 0x401052d	        33	stdio2.h	FUNCTION_116	CALL_2
0x401052d	    0x448b93540200	          mov r10d, dword [rbx + 0x254] 	      2788	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x4010534	          0x4585d2	                         test r10d, r10d	      2788	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x4010537	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2788	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x401053c	     0xf844b080000	                            je 0x4010d8d	      2788	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x4010542	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x4010546	     0x3bbac000000	             add edi, dword [rbx + 0xac]	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x401054c	          0x4c89d6	                            mov rsi, r10	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x401054f	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x4010553	    0x8b0d00000000	            mov ecx, dword [0x04010559] 	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x4010559	            0x29c7	                            sub edi, eax	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x401055b	            0x89c2	                            mov edx, eax	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x401055d	            0x29ef	                            sub edi, ebp	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x401055f	      0xe83cfdfeff	                 call sym.copy_text_attr	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x4010564	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2790	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x4010569	         0x36c2448	             add ebp, dword [rsp + 0x48]	      2795	screen.c	FUNCTION_25	IF_9	IF_10
0x401056d	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      2802	screen.c	FUNCTION_25	CALL_23
0x4010572	          0x4d89d0	                             mov r8, r10	      2802	screen.c	FUNCTION_25	CALL_23
0x4010575	      0xb900000000	                              mov ecx, 0	      2802	screen.c	FUNCTION_25	CALL_23
0x401057a	          0x4c89fe	                            mov rsi, r15	      2802	screen.c	FUNCTION_25	CALL_23
0x401057d	          0x4889df	                            mov rdi, rbx	      2802	screen.c	FUNCTION_25	CALL_23
0x4010580	      0x4c89542450	             mov qword [rsp + 0x50], r10	      2802	screen.c	FUNCTION_25	CALL_23
0x4010585	      0xe800000000	                          call 0x401058a	      2802	screen.c	FUNCTION_25	CALL_23
0x401058a	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      2811	screen.c	FUNCTION_25	CALL_24
0x401058f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      2811	screen.c	FUNCTION_25	CALL_24
0x4010594	            0x89e9	                            mov ecx, ebp	      2811	screen.c	FUNCTION_25	CALL_24
0x4010596	          0x4889c2	                            mov rdx, rax	      2811	screen.c	FUNCTION_25	CALL_24
0x4010599	      0x4889442448	             mov qword [rsp + 0x48], rax	      2811	screen.c	FUNCTION_25	CALL_24
0x401059e	      0xe88d01ffff	      call sym.text_to_screenline.isra.4	      2811	screen.c	FUNCTION_25	CALL_24
0x40105a3	    0x8b9354020000	           mov edx, dword [rbx + 0x254] 	      2815	screen.c	FUNCTION_25	IF_15
0x40105a9	            0x89c1	                            mov ecx, eax	      2816	screen.c	FUNCTION_25	IF_15
0x40105ab	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      2816	screen.c	FUNCTION_25	IF_15
0x40105b0	            0x29e9	                            sub ecx, ebp	      2816	screen.c	FUNCTION_25	IF_15
0x40105b2	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2816	screen.c	FUNCTION_25	IF_15
0x40105b7	            0x85d2	                           test edx, edx	      2816	screen.c	FUNCTION_25	IF_15
0x40105b9	           0xf45c1	                         cmovne eax, ecx	      2816	screen.c	FUNCTION_25	IF_15
0x40105bc	          0x8d4801	                      lea ecx, [rax + 1]	      2816	screen.c	FUNCTION_25	IF_15
0x40105bf	         0x3442420	             add eax, dword [rsp + 0x20]	      2816	screen.c	FUNCTION_25	IF_15
0x40105c3	            0xeb40	                           jmp 0x4010605	      2816	screen.c	FUNCTION_25	IF_15
0x40105c5	           0xf1f00	                         nop dword [rax]	      2816	screen.c	FUNCTION_25	IF_15
0x40105c8	    0x8b3500000000	            mov esi, dword [0x040105ce] 	      2827	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105ce	          0x4863d0	                         movsxd rdx, eax	      2829	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105d1	          0x83fe7f	                           cmp esi, 0x7f	      2827	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105d4	            0x7e6a	                           jle 0x4010640	      2827	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105d6	    0x488b3d000000	            mov rdi, qword [0x040105dd] 	      2829	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105dd	          0x893497	            mov dword [rdi + rdx*4], esi	      2829	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105e0	    0x488b35000000	            mov rsi, qword [0x040105e7] 	      2830	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105e7	    0xc70496000000	              mov dword [rsi + rdx*4], 0	      2830	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105ee	    0x488b35000000	            mov rsi, qword [0x040105f5] 	      2831	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105f5	        0xc6041680	              mov byte [rsi + rdx], 0x80	      2831	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105f9	    0x8b9354020000	           mov edx, dword [rbx + 0x254] 	      2831	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x40105ff	          0x83c101	                              add ecx, 1	      2831	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x4010602	          0x83c001	                              add eax, 1	      2831	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x4010605	    0x8bbbac000000	            mov edi, dword [rbx + 0xac] 	      2818	screen.c	FUNCTION_25	WHILE_1
0x401060b	            0x85d2	                           test edx, edx	      2820	screen.c	FUNCTION_25	WHILE_1
0x401060d	          0x8d71ff	                      lea esi, [rcx - 1]	      2820	screen.c	FUNCTION_25	WHILE_1
0x4010610	           0xf45d5	                         cmovne edx, ebp	      2820	screen.c	FUNCTION_25	WHILE_1
0x4010613	            0x29d7	                            sub edi, edx	      2818	screen.c	FUNCTION_25	WHILE_1
0x4010615	            0x39f7	                            cmp edi, esi	      2818	screen.c	FUNCTION_25	WHILE_1
0x4010617	            0x7e4f	                           jle 0x4010668	      2818	screen.c	FUNCTION_25	WHILE_1
0x4010619	    0x448b0d000000	            mov r9d, dword [0x04010620] 	      2825	screen.c	FUNCTION_25	WHILE_1	IF_16
0x4010620	          0x4585c9	                           test r9d, r9d	      2825	screen.c	FUNCTION_25	WHILE_1	IF_16
0x4010623	            0x75a3	                           jne 0x40105c8	      2825	screen.c	FUNCTION_25	WHILE_1	IF_16
0x4010625	    0x8b3d00000000	            mov edi, dword [0x0401062b] 	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x401062b	    0x488b35000000	            mov rsi, qword [0x04010632] 	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x4010632	          0x4863d0	                         movsxd rdx, eax	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x4010635	        0x40883c16	               mov byte [rsi + rdx], dil	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x4010639	            0xebbe	                           jmp 0x40105f9	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x401063b	       0xf1f440000	                   nop dword [rax + rax]	      2842	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x4010640	    0x488b35000000	            mov rsi, qword [0x04010647] 	      2835	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x4010647	    0xc70496000000	              mov dword [rsi + rdx*4], 0	      2835	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x401064e	    0x488b35000000	            mov rsi, qword [0x04010655] 	      2836	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x4010655	    0x8b3d00000000	            mov edi, dword [0x0401065b] 	      2836	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x401065b	        0x40883c16	               mov byte [rsi + rdx], dil	      2836	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x401065f	            0xeb98	                           jmp 0x40105f9	      2836	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x4010661	     0xf1f80000000	                         nop dword [rax]	      2836	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x4010668	          0x4d39d0	                             cmp r8, r10	      2845	screen.c	FUNCTION_25	IF_18
0x401066b	            0x7408	                            je 0x4010675	      2845	screen.c	FUNCTION_25	IF_18
0x401066d	          0x4c89c7	                             mov rdi, r8	      2846	screen.c	FUNCTION_25	CALL_25
0x4010670	      0xe800000000	                          call 0x4010675	      2846	screen.c	FUNCTION_25	CALL_25
0x4010675	    0x8b3d00000000	            mov edi, dword [0x0401067b] 	      2852	screen.c	FUNCTION_25	IF_19
0x401067b	            0x85ff	                           test edi, edi	      2852	screen.c	FUNCTION_25	IF_19
0x401067d	            0x7415	                            je 0x4010694	      2852	screen.c	FUNCTION_25	IF_19
0x401067f	    0x488b05000000	            mov rax, qword [0x04010686] 	      2852	screen.c	FUNCTION_25	IF_19
0x4010686	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2852	screen.c	FUNCTION_25	IF_19
0x401068a	        0x483b7808	                cmp rdi, qword [rax + 8]	      2852	screen.c	FUNCTION_25	IF_19
0x401068e	     0xf84d10b0000	                            je 0x4011265	      2852	screen.c	FUNCTION_25	IF_19
0x4010694	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2852	screen.c	FUNCTION_25	IF_19
0x401069a	    0x488bb3380500	           mov rsi, qword [rbx + 0x538] 	      2902	screen.c	FUNCTION_25	IF_25
0x40106a1	          0x4885f6	                           test rsi, rsi	      2902	screen.c	FUNCTION_25	IF_25
0x40106a4	     0xf84a1000000	                            je 0x401074b	      2902	screen.c	FUNCTION_25	IF_25
0x40106aa	            0x8b06	                    mov eax, dword [rsi]	      2905	screen.c	FUNCTION_25	IF_25
0x40106ac	            0x85c0	                           test eax, eax	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106ae	     0xf8897000000	                            js 0x401074b	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106b4	      0xb904000000	                              mov ecx, 4	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106b9	      0x44896c2448	            mov dword [rsp + 0x48], r13d	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106be	      0x4c89742450	             mov qword [rsp + 0x50], r14	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106c3	          0x4189ed	                           mov r13d, ebp	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106c6	          0x4889dd	                            mov rbp, rbx	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106c9	          0x4889cb	                            mov rbx, rcx	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106cc	            0xeb1b	                           jmp 0x40106e9	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106ce	            0x6690	                                     nop	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106d0	    0x2b8598000000	             sub eax, dword [rbp + 0x98]	      2912	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x40106d6	            0x85c0	                           test eax, eax	      2915	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x40106d8	            0x7804	                            js 0x40106de	      2915	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x40106da	            0x39d0	                            cmp eax, edx	      2915	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x40106dc	            0x7c22	                            jl 0x4010700	      2915	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x40106de	          0x8b041e	              mov eax, dword [rsi + rbx]	      2919	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106e1	        0x4883c304	                              add rbx, 4	      2919	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106e5	            0x85c0	                           test eax, eax	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106e7	            0x7852	                            js 0x401073b	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106e9	    0x8b8d94020000	           mov ecx, dword [rbp + 0x294] 	      2911	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x40106ef	          0x4401e8	                           add eax, r13d	      2910	screen.c	FUNCTION_25	IF_25	WHILE_2
0x40106f2	            0x85c9	                           test ecx, ecx	      2911	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x40106f4	            0x75da	                           jne 0x40106d0	      2911	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x40106f6	    0x2b8594000000	             sub eax, dword [rbp + 0x94]	      2914	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x40106fc	            0xebd8	                           jmp 0x40106d6	      2914	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x40106fe	            0x6690	                                     nop	      2914	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x4010700	    0x488b15000000	            mov rdx, qword [0x04010707] 	      2917	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x4010707	          0x4401e0	                           add eax, r12d	      2917	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x401070a	    0x8b3500000000	            mov esi, dword [0x04010710] 	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x4010710	            0x4898	                                    cdqe	      2917	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x4010712	        0x4c8d3442	                  lea r14, [rdx + rax*2]	      2917	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x4010716	        0x410fb73e	                   movzx edi, word [r14]	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x401071a	      0xe800000000	                          call 0x401071f	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x401071f	    0x488bb5380500	           mov rsi, qword [rbp + 0x538] 	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x4010726	        0x66418906	                      mov word [r14], ax	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x401072a	    0x8b95ac000000	            mov edx, dword [rbp + 0xac] 	      2916	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x4010730	          0x8b041e	              mov eax, dword [rsi + rbx]	      2919	screen.c	FUNCTION_25	IF_25	WHILE_2
0x4010733	        0x4883c304	                              add rbx, 4	      2919	screen.c	FUNCTION_25	IF_25	WHILE_2
0x4010737	            0x85c0	                           test eax, eax	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x4010739	            0x79ae	                           jns 0x40106e9	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x401073b	          0x4889eb	                            mov rbx, rbp	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x401073e	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x4010743	          0x4489ed	                           mov ebp, r13d	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x4010746	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	      2908	screen.c	FUNCTION_25	IF_25	WHILE_2
0x401074b	    0x8b836c020000	           mov eax, dword [rbx + 0x26c] 	      2924	screen.c	FUNCTION_25	IF_28
0x4010751	            0x85c0	                           test eax, eax	      2924	screen.c	FUNCTION_25	IF_28
0x4010753	            0x7426	                            je 0x401077b	      2924	screen.c	FUNCTION_25	IF_28
0x4010755	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      2927	screen.c	FUNCTION_25	IF_28	IF_29
0x401075b	     0x3abd8000000	             add ebp, dword [rbx + 0xd8]	      2926	screen.c	FUNCTION_25	IF_28
0x4010761	            0x85c0	                           test eax, eax	      2927	screen.c	FUNCTION_25	IF_28	IF_29
0x4010763	     0xf84df030000	                            je 0x4010b48	      2927	screen.c	FUNCTION_25	IF_28	IF_29
0x4010769	    0x2bab98000000	             sub ebp, dword [rbx + 0x98]	      2928	screen.c	FUNCTION_25	IF_28	IF_29
0x401076f	            0x85ed	                           test ebp, ebp	      2931	screen.c	FUNCTION_25	IF_28	IF_30
0x4010771	            0x7808	                            js 0x401077b	      2931	screen.c	FUNCTION_25	IF_28	IF_30
0x4010773	            0x39d5	                            cmp ebp, edx	      2931	screen.c	FUNCTION_25	IF_28	IF_30
0x4010775	     0xf8c54060000	                            jl 0x4010dcf	      2931	screen.c	FUNCTION_25	IF_28	IF_30
0x401077b	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2937	screen.c	FUNCTION_25	CALL_38
0x4010781	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2937	screen.c	FUNCTION_25	CALL_38
0x4010787	          0x4531c0	                            xor r8d, r8d	      2937	screen.c	FUNCTION_25	CALL_38
0x401078a	    0x8bb3a8000000	            mov esi, dword [rbx + 0xa8] 	      2937	screen.c	FUNCTION_25	CALL_38
0x4010790	            0x89d1	                            mov ecx, edx	      2937	screen.c	FUNCTION_25	CALL_38
0x4010792	          0x4401ef	                           add edi, r13d	      2937	screen.c	FUNCTION_25	CALL_38
0x4010795	      0xe800000000	                          call 0x401079a	      2937	screen.c	FUNCTION_25	CALL_38
0x401079a	    0x483b1d000000	            cmp rbx, qword [0x040107a1] 	      2944	screen.c	FUNCTION_25	IF_31
0x40107a1	     0xf8409040000	                            je 0x4010bb0	      2944	screen.c	FUNCTION_25	IF_31
0x40107a7	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      2085	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107ae	    0x48836c240801	                  sub qword [rsp + 8], 1	      2084	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107b4	        0x418d4501	                      lea eax, [r13 + 1]	      2083	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107b8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2084	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107bd	    0xc74424200300	               mov dword [rsp + 0x20], 3	      2088	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107c5	    0x42c644320b01	           mov byte [rdx + r14 + 0xb], 1	      2085	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107cb	          0x4c89f2	                            mov rdx, r14	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107ce	    0x480393000100	            add rdx, qword [rbx + 0x100]	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107d5	          0x4c01f9	                            add rcx, r15	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107d8	        0x48894a10	             mov qword [rdx + 0x10], rcx	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107dc	      0xe9a8f8ffff	                           jmp 0x4010089	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107e1	     0xf1f80000000	                         nop dword [rax]	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107e8	      0x4c897c2408	                mov qword [rsp + 8], r15	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107ed	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107f2	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      2086	screen.c	FUNCTION_20	FOR_8	IF_94	IF_116
0x40107f7	    0xc744243c0f27	         mov dword [rsp + 0x3c], 0x270f 	      1976	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x40107ff	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	      1981	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103
0x4010804	          0x4129ea	                           sub r10d, ebp	      1981	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103
0x4010807	     0xf88e0080000	                            js 0x40110ed	      1981	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103
0x401080d	     0xf8433090000	                            je 0x4011146	      1999	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106
0x4010813	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      2004	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	IF_107
0x4010819	      0x438d541500	                    lea edx, [r13 + r10]	      2004	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	IF_107
0x401081e	          0x83e802	                              sub eax, 2	      2004	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	IF_107
0x4010821	            0x39c2	                            cmp edx, eax	      2004	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	IF_107
0x4010823	     0xf8ccf0d0000	                            jl 0x40115f8	      2004	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	IF_107
0x4010829	    0x48c784249000	     mov qword [rsp + 0x90], 0x7fffffff 	      1988	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4010835	           0xf1f00	                         nop dword [rax]	      1988	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4010838	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1988	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4010840	      0xe98ff7ffff	                           jmp 0x400ffd4	      1988	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4010845	           0xf1f00	                         nop dword [rax]	      1988	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4010848	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	      1912	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010850	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	      1912	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010857	            0x74df	                            je 0x4010838	      1912	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010859	    0x448b15000000	           mov r10d, dword [0x04010860] 	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010860	          0x4585d2	                         test r10d, r10d	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010863	            0x7809	                            js 0x401086e	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010865	        0x498d4701	                      lea rax, [r15 + 1]	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x4010869	          0x4839c1	                            cmp rcx, rax	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x401086c	            0x74ca	                            je 0x4010838	      1913	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96
0x401086e	    0x8bb3f8000000	            mov esi, dword [rbx + 0xf8] 	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010874	        0x39742428	            cmp dword [rsp + 0x28], esi 	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010878	     0xf8da2010000	                           jge 0x4010a20	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x401087e	    0x488bbb000100	           mov rdi, qword [rbx + 0x100] 	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010885	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x401088a	            0x31ed	                            xor ebp, ebp	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x401088c	        0x4a8d0437	                    lea rax, [rdi + r14]	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010890	            0xeb37	                           jmp 0x40108c9	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010892	    0x660f1f440000	                    nop word [rax + rax]	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x4010898	          0x483b08	                    cmp rcx, qword [rax]	      1928	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_97
0x401089b	     0xf848f010000	                            je 0x4010a30	      1928	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_97
0x40108a1	         0xfb75008	               movzx edx, word [rax + 8]	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108a5	             0x1d5	                            add ebp, edx	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108a7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1933	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98
0x40108ab	        0x4883c201	                              add rdx, 1	      1933	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98
0x40108af	          0x4839d1	                            cmp rcx, rdx	      1933	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98
0x40108b2	     0xf8415010000	                            je 0x40109cd	      1933	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98
0x40108b8	        0x4183c401	                             add r12d, 1	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108bc	        0x4883c018	                           add rax, 0x18	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108c0	          0x4139f4	                           cmp r12d, esi	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108c3	     0xf8457010000	                            je 0x4010a20	      1923	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108c9	        0x80780a00	                 cmp byte [rax + 0xa], 0	      1927	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_97
0x40108cd	            0x75c9	                           jne 0x4010898	      1927	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_97
0x40108cf	         0xfb75008	               movzx edx, word [rax + 8]	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108d3	             0x1d5	                            add ebp, edx	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108d5	            0xebe1	                           jmp 0x40108b8	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108d7	    0x660f1f840000	                    nop word [rax + rax]	      1930	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9
0x40108e0	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40108e7	            0x89c1	                            mov ecx, eax	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40108e9	          0x4429e9	                           sub ecx, r13d	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40108ec	    0x6642894c3208	            mov word [rdx + r14 + 8], cx	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40108f2	      0xe9caf7ffff	                           jmp 0x40100c1	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x40108f7	    0x660f1f840000	                    nop word [rax + rax]	      2150	screen.c	FUNCTION_20	FOR_8	IF_94	IF_121
0x4010900	        0x4883c601	                              add rsi, 1	      1776	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3	ELSE_24
0x4010904	          0x4939f0	                             cmp r8, rsi	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010907	     0xf8e310b0000	                           jle 0x401143e	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401090d	        0x4883c018	                           add rax, 0x18	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010911	            0x39fa	                            cmp edx, edi	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010913	     0xf8567f9ffff	                           jne 0x4010280	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x4010919	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1779	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24
0x401091f	        0x89442468	             mov dword [rsp + 0x68], eax	      1779	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24
0x4010923	          0x4585c9	                           test r9d, r9d	      1794	screen.c	FUNCTION_20	IF_90
0x4010926	     0xf84a2f4ffff	                            je 0x400fdce	      1794	screen.c	FUNCTION_20	IF_90
0x401092c	    0x488b05000000	            mov rax, qword [0x04010933] 	      1794	screen.c	FUNCTION_20	IF_90
0x4010933	      0xe988f4ffff	                           jmp 0x400fdc0	      1794	screen.c	FUNCTION_20	IF_90
0x4010938	     0xf1f84000000	                   nop dword [rax + rax]	      1794	screen.c	FUNCTION_20	IF_90
0x4010940	            0x85d2	                           test edx, edx	      2731	screen.c	FUNCTION_25	CALL_9
0x4010942	     0xf8eecfaffff	                           jle 0x4010434	      2731	screen.c	FUNCTION_25	CALL_9
0x4010948	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      2731	screen.c	FUNCTION_25	CALL_9
0x401094d	    0x488b0d000000	            mov rcx, qword [0x04010954] 	      2731	screen.c	FUNCTION_25	CALL_9
0x4010954	     0xfb735000000	           movzx esi, word [0x0401095b] 	      2731	screen.c	FUNCTION_25	CALL_9
0x401095b	        0x488d0c41	                  lea rcx, [rcx + rax*2]	      2731	screen.c	FUNCTION_25	CALL_9
0x401095f	            0x31c0	                            xor eax, eax	      2731	screen.c	FUNCTION_25	CALL_9
0x4010961	     0xf1f80000000	                         nop dword [rax]	      2731	screen.c	FUNCTION_25	CALL_9
0x4010968	        0x66893441	              mov word [rcx + rax*2], si	      2731	screen.c	FUNCTION_25	CALL_9
0x401096c	        0x4883c001	                              add rax, 1	      2731	screen.c	FUNCTION_25	CALL_9
0x4010970	            0x39c2	                            cmp edx, eax	      2731	screen.c	FUNCTION_25	CALL_9
0x4010972	            0x7ff4	                            jg 0x4010968	      2731	screen.c	FUNCTION_25	CALL_9
0x4010974	      0xe9bbfaffff	                           jmp 0x4010434	      2731	screen.c	FUNCTION_25	CALL_9
0x4010979	     0xf1f80000000	                         nop dword [rax]	      2731	screen.c	FUNCTION_25	CALL_9
0x4010980	            0x31ed	                            xor ebp, ebp	      2667	screen.c	FUNCTION_25
0x4010982	    0x483b1d000000	            cmp rbx, qword [0x04010989] 	      2629	screen.c	FUNCTION_24
0x4010989	    0x8b83c8010000	           mov eax, dword [rbx + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x401098f	    0x488b15000000	            mov rdx, qword [0x04010996] 	      2628	screen.c	FUNCTION_24
0x4010996	     0xf8581f9ffff	                           jne 0x401031d	      2629	screen.c	FUNCTION_24
0x401099c	          0x4885d2	                           test rdx, rdx	      2629	screen.c	FUNCTION_24
0x401099f	      0xb901000000	                              mov ecx, 1	      2629	screen.c	FUNCTION_24
0x40109a4	     0xf8475f9ffff	                            je 0x401031f	      2629	screen.c	FUNCTION_24
0x40109aa	      0xe96ef9ffff	                           jmp 0x401031d	      2629	screen.c	FUNCTION_24
0x40109af	              0x90	                                     nop	      2629	screen.c	FUNCTION_24
0x40109b0	          0x4889df	                            mov rdi, rbx	      2116	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118	CALL_49
0x40109b3	      0xe800000000	                          call 0x40109b8	      2116	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118	CALL_49
0x40109b8	            0x85c0	                           test eax, eax	      2116	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118	CALL_49
0x40109ba	     0xf847cf6ffff	                            je 0x401003c	      2116	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	IF_118	CALL_49
0x40109c0	          0x4889ef	                            mov rdi, rbp	      2117	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_50
0x40109c3	      0xe800000000	                          call 0x40109c8	      2117	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_50
0x40109c8	      0xe96ff6ffff	                           jmp 0x401003c	      2117	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_36	CALL_50
0x40109cd	        0x4183c401	                             add r12d, 1	      1937	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98
0x40109d1	          0x4139f4	                           cmp r12d, esi	      1938	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109d4	            0x7d4a	                           jge 0x4010a20	      1938	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109d6	          0x4963c4	                        movsxd rax, r12d	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109d9	        0x488d1440	                  lea rdx, [rax + rax*2]	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109dd	        0x48c1e203	                              shl rdx, 3	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109e1	        0x488d0417	                    lea rax, [rdi + rdx]	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109e5	        0x80780a00	                 cmp byte [rax + 0xa], 0	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109e9	            0x7545	                           jne 0x4010a30	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109eb	        0x4883c008	                              add rax, 8	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109ef	      0x488d541722	            lea rdx, [rdi + rdx + 0x22] 	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109f4	            0xeb1a	                           jmp 0x4010a10	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x40109f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a00	           0xfb63a	                   movzx edi, byte [rdx]	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a03	        0x4883c018	                           add rax, 0x18	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a07	        0x4883c218	                           add rdx, 0x18	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a0b	          0x4084ff	                           test dil, dil	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a0e	            0x7520	                           jne 0x4010a30	      1939	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a10	           0xfb738	                   movzx edi, word [rax]	      1940	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a13	        0x4183c401	                             add r12d, 1	      1940	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a17	             0x1fd	                            add ebp, edi	      1940	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a19	          0x4139f4	                           cmp r12d, esi	      1938	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a1c	            0x75e2	                           jne 0x4010a00	      1938	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a1e	            0x6690	                                     nop	      1938	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	FOR_9	IF_98	WHILE_4
0x4010a20	    0xc74424700000	               mov dword [rsp + 0x70], 0	      1951	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	IF_99
0x4010a28	      0xe90bfeffff	                           jmp 0x4010838	      1951	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	IF_99
0x4010a2d	           0xf1f00	                         nop dword [rax]	      1951	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	IF_99
0x4010a30	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1957	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26
0x4010a35	          0x4939cf	                            cmp r15, rcx	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a38	    0x4c89bc249800	             mov qword [rsp + 0x98], r15	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a40	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a48	          0x4c89fe	                            mov rsi, r15	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a4b	      0x4889442408	                mov qword [rsp + 8], rax	      1957	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26
0x4010a50	     0xf8da9fdffff	                           jge 0x40107ff	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a56	      0x4c897c2440	             mov qword [rsp + 0x40], r15	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a5b	      0x4c89742448	             mov qword [rsp + 0x48], r14	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a60	          0x4531f6	                          xor r14d, r14d	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a63	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a68	            0xeb44	                           jmp 0x4010aae	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a6a	    0x660f1f440000	                    nop word [rax + rax]	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a70	        0x4183c601	                             add r14d, 1	      1962	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100
0x4010a74	          0x4489e8	                           mov eax, r13d	      1973	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x4010a77	        0x4983c701	                              add r15, 1	      1972	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a7b	            0xf7d0	                                 not eax	      1973	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x4010a7d	     0x383a0000000	             add eax, dword [rbx + 0xa0]	      1973	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x4010a83	          0x4139c6	                           cmp r14d, eax	      1973	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x4010a86	     0xf8d5cfdffff	                           jge 0x40107e8	      1973	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_102
0x4010a8c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a94	        0x488d7001	                      lea rsi, [rax + 1]	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010a98	    0x4839b4249000	            cmp qword [rsp + 0x90], rsi 	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010aa0	    0x4889b4249800	             mov qword [rsp + 0x98], rsi	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010aa8	     0xf8e08030000	                           jle 0x4010db6	      1958	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10
0x4010aae	    0x488d8c249800	                   lea rcx, [rsp + 0x98]	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010ab6	          0x4531c9	                            xor r9d, r9d	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010ab9	            0x31d2	                            xor edx, edx	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010abb	    0x41b801000000	                              mov r8d, 1	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010ac1	          0x4889df	                            mov rdi, rbx	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010ac4	      0xe800000000	                          call 0x4010ac9	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010ac9	            0x85c0	                           test eax, eax	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010acb	            0x75a3	                           jne 0x4010a70	      1961	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	IF_100	CALL_38
0x4010acd	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1966	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101
0x4010ad1	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1966	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101
0x4010ad9	      0xba01000000	                              mov edx, 1	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010ade	          0x4839f0	                            cmp rax, rsi	      1966	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101
0x4010ae1	            0x740d	                            je 0x4010af0	      1966	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101
0x4010ae3	          0x4889df	                            mov rdi, rbx	      1971	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	CALL_40
0x4010ae6	      0xe800000000	                          call 0x4010aeb	      1971	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	CALL_40
0x4010aeb	          0x4101c6	                           add r14d, eax	      1971	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	CALL_40
0x4010aee	            0xeb84	                           jmp 0x4010a74	      1971	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	CALL_40
0x4010af0	          0x4889c6	                            mov rsi, rax	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010af3	          0x4889df	                            mov rdi, rbx	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010af6	      0xe800000000	                          call 0x4010afb	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010afb	     0x38384000000	             add eax, dword [rbx + 0x84]	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010b01	          0x4101c6	                           add r14d, eax	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010b04	      0xe96bffffff	                           jmp 0x4010a74	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010b09	     0xf1f80000000	                         nop dword [rax]	      1967	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	FOR_10	ELSE_27	IF_101	CALL_39
0x4010b10	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b14	    0x8b0d00000000	            mov ecx, dword [0x04010b1a] 	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b1a	          0x4489c2	                            mov edx, r8d	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b1d	          0x4c89d6	                            mov rsi, r10	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b20	      0x4489442450	             mov dword [rsp + 0x50], r8d	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b25	      0x4c89542448	             mov qword [rsp + 0x48], r10	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b2a	        0x8d7c0500	                    lea edi, [rbp + rax]	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b2e	      0xe86df7feff	                 call sym.copy_text_attr	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b33	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b38	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b3d	      0xe9a8f8ffff	                           jmp 0x40103ea	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b42	    0x660f1f440000	                    nop word [rax + rax]	      2707	screen.c	FUNCTION_25	IF_3	CALL_7
0x4010b48	    0x2bab94000000	             sub ebp, dword [rbx + 0x94]	      2930	screen.c	FUNCTION_25	IF_28	ELSE_11
0x4010b4e	      0xe91cfcffff	                           jmp 0x401076f	      2930	screen.c	FUNCTION_25	IF_28	ELSE_11
0x4010b53	       0xf1f440000	                   nop dword [rax + rax]	      2930	screen.c	FUNCTION_25	IF_28	ELSE_11
0x4010b58	        0x4c3b7b78	            cmp r15, qword [rbx + 0x78] 	      2096	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b5c	     0xf8eb5f4ffff	                           jle 0x4010017	      2096	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b62	    0xf60500000000	               test byte [0x04010b69], 3	      2097	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b69	     0xf85a8f4ffff	                           jne 0x4010017	      2097	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b6f	         0xfb74008	               movzx eax, word [rax + 8]	      2098	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b73	          0x4401e8	                           add eax, r13d	      2098	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b76	    0x3b83a0000000	            cmp eax, dword [rbx + 0xa0] 	      2098	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b7c	     0xf8e95f4ffff	                           jle 0x4010017	      2098	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b82	          0x4c89fe	                            mov rsi, r15	      2100	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117	CALL_47
0x4010b85	          0x4889df	                            mov rdi, rbx	      2100	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117	CALL_47
0x4010b88	      0xe800000000	                          call 0x4010b8d	      2100	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117	CALL_47
0x4010b8d	            0x85c0	                           test eax, eax	      2100	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117	CALL_47
0x4010b8f	     0xf8582f4ffff	                           jne 0x4010017	      2100	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117	CALL_47
0x4010b95	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b9b	          0x4c89f2	                            mov rdx, r14	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010b9e	    0x480393000100	            add rdx, qword [rbx + 0x100]	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010ba5	          0x83c001	                              add eax, 1	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010ba8	      0xe9dcf4ffff	                           jmp 0x4010089	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010bad	           0xf1f00	                         nop dword [rax]	      2106	screen.c	FUNCTION_20	FOR_8	IF_94	ELSE_35	IF_117
0x4010bb0	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2945	screen.c	FUNCTION_25	IF_31
0x4010bb4	          0x4939c7	                            cmp r15, rax	      2946	screen.c	FUNCTION_25	IF_31
0x4010bb7	     0xf8feafbffff	                            jg 0x40107a7	      2946	screen.c	FUNCTION_25	IF_31
0x4010bbd	      0x4839442440	            cmp qword [rsp + 0x40], rax 	      2946	screen.c	FUNCTION_25	IF_31
0x4010bc2	     0xf8cdffbffff	                            jl 0x40107a7	      2946	screen.c	FUNCTION_25	IF_31
0x4010bc8	    0x4489abd40000	            mov dword [rbx + 0xd4], r13d	      2948	screen.c	FUNCTION_25	IF_31
0x4010bcf	    0xc783cc000000	               mov dword [rbx + 0xcc], 1	      2949	screen.c	FUNCTION_25	IF_31
0x4010bd9	    0xc783d0000000	               mov dword [rbx + 0xd0], 1	      2950	screen.c	FUNCTION_25	IF_31
0x4010be3	    0x838bb4000000	             or dword [rbx + 0xb4], 0x18	      2951	screen.c	FUNCTION_25	IF_31
0x4010bea	      0xe9b8fbffff	                           jmp 0x40107a7	      2951	screen.c	FUNCTION_25	IF_31
0x4010bef	              0x90	                                     nop	      2951	screen.c	FUNCTION_25	IF_31
0x4010bf0	    0x8b0d00000000	            mov ecx, dword [0x04010bf6] 	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010bf6	            0x89c2	                            mov edx, eax	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010bf8	             0x1ef	                            add edi, ebp	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010bfa	      0xbe00000000	                              mov esi, 0	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010bff	        0x89442448	             mov dword [rsp + 0x48], eax	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c03	      0xe898f6feff	                 call sym.copy_text_attr	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c08	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c0d	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c11	      0xe98df8ffff	                           jmp 0x40104a3	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2749	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x4010c20	          0x4c89fe	                            mov rsi, r15	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c23	          0x4889df	                            mov rdi, rbx	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c26	      0x4c89542478	             mov qword [rsp + 0x78], r10	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c2b	      0x4489442450	             mov dword [rsp + 0x50], r8d	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c30	      0xe800000000	                          call 0x4010c35	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c35	            0x4899	                                     cqo	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c37	      0xb900000000	                              mov ecx, 0	      2765	screen.c	FUNCTION_25	IF_9	IF_10
0x4010c3c	      0x448b442450	            mov r8d, dword [rsp + 0x50] 	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c41	          0x4831d0	                            xor rax, rdx	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c44	      0x4c8b542478	            mov r10, qword [rsp + 0x78] 	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c49	          0x4989c1	                             mov r9, rax	      2776	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x4010c4c	          0x4929d1	                             sub r9, rdx	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c4f	     0xf85bff8ffff	                           jne 0x4010514	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c55	    0x8b8338020000	           mov eax, dword [rbx + 0x238] 	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c5b	            0x85c0	                           test eax, eax	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c5d	     0xf84b1f8ffff	                            je 0x4010514	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c63	    0x448b9b3c0200	          mov r11d, dword [rbx + 0x23c] 	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c6a	      0xb800000000	                              mov eax, 0	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c6f	          0x4585db	                         test r11d, r11d	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c72	        0x4d0f45cf	                          cmovne r9, r15	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c76	        0x480f45c8	                         cmovne rcx, rax	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c7a	      0xe995f8ffff	                           jmp 0x4010514	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c7f	              0x90	                                     nop	      2777	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x4010c80	    0x833d00000000	cmp dword [0x04010c87], 0xffffffffffffffff	      2144	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	IF_120
0x4010c87	          0x4189c4	                           mov r12d, eax	      2144	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	IF_120
0x4010c8a	     0xf840c0e0000	                            je 0x4011a9c	      2144	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	IF_120
0x4010c90	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2146	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x4010c94	          0x4489ed	                           mov ebp, r13d	      2147	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x4010c97	          0x4531ed	                          xor r13d, r13d	      1127	screen.c	FUNCTION_20
0x4010c9a	          0x83c201	                              add edx, 1	      2146	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119
0x4010c9d	    0x3b93f8000000	            cmp edx, dword [rbx + 0xf8] 	      2204	screen.c	FUNCTION_20	IF_127
0x4010ca3	            0x7e06	                           jle 0x4010cab	      2204	screen.c	FUNCTION_20	IF_127
0x4010ca5	    0x8993f8000000	             mov dword [rbx + 0xf8], edx	      2205	screen.c	FUNCTION_20	IF_127
0x4010cab	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010cb1	     0xf8549010000	                           jne 0x4010e00	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010cb7	      0x448b74246c	           mov r14d, dword [rsp + 0x6c] 	      2223	screen.c	FUNCTION_20	IF_129
0x4010cbc	    0xc783f0000000	               mov dword [rbx + 0xf0], 0	      2219	screen.c	FUNCTION_20
0x4010cc6	    0xc783f4000000	               mov dword [rbx + 0xf4], 0	      2221	screen.c	FUNCTION_20
0x4010cd0	          0x4585f6	                         test r14d, r14d	      2223	screen.c	FUNCTION_20	IF_129
0x4010cd3	            0x756b	                           jne 0x4010d40	      2223	screen.c	FUNCTION_20	IF_129
0x4010cd5	        0x4c3b7b78	            cmp r15, qword [rbx + 0x78] 	      2225	screen.c	FUNCTION_20	IF_129	IF_130
0x4010cd9	     0xf85dd030000	                           jne 0x40110bc	      2225	screen.c	FUNCTION_20	IF_129	IF_130
0x4010cdf	        0x498d4701	                      lea rax, [r15 + 1]	      2231	screen.c	FUNCTION_20	IF_129	IF_130
0x4010ce3	    0x488983e80000	             mov qword [rbx + 0xe8], rax	      2231	screen.c	FUNCTION_20	IF_129	IF_130
0x4010cea	            0x31ff	                            xor edi, edi	      2307	screen.c	FUNCTION_20	CALL_80
0x4010cec	      0xe800000000	                          call 0x4010cf1	      2307	screen.c	FUNCTION_20	CALL_80
0x4010cf1	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      2313	screen.c	FUNCTION_20
0x4010cf7	    0x833d00000000	cmp dword [0x04010cfe], 0xffffffffffffffff	      2317	screen.c	FUNCTION_20	IF_139
0x4010cfe	    0xc78328010000	              mov dword [rbx + 0x128], 0	      2311	screen.c	FUNCTION_20
0x4010d08	    0x898388000000	             mov dword [rbx + 0x88], eax	      2313	screen.c	FUNCTION_20
0x4010d0e	    0x8b838c000000	            mov eax, dword [rbx + 0x8c] 	      2314	screen.c	FUNCTION_20
0x4010d14	    0x898390000000	             mov dword [rbx + 0x90], eax	      2314	screen.c	FUNCTION_20
0x4010d1a	     0xf84d0020000	                            je 0x4010ff0	      2317	screen.c	FUNCTION_20	IF_139
0x4010d20	    0x8b0500000000	            mov eax, dword [0x04010d26] 	      2352	screen.c	FUNCTION_20	IF_142
0x4010d26	            0x85c0	                           test eax, eax	      2352	screen.c	FUNCTION_20	IF_142
0x4010d28	     0xf8524efffff	                           jne 0x400fc52	      2352	screen.c	FUNCTION_20	IF_142
0x4010d2e	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      2353	screen.c	FUNCTION_20	IF_142
0x4010d32	    0x890500000000	            mov dword [0x04010d38], eax 	      2353	screen.c	FUNCTION_20	IF_142
0x4010d38	      0xe915efffff	                           jmp 0x400fc52	      2353	screen.c	FUNCTION_20	IF_142
0x4010d3d	           0xf1f00	                         nop dword [rax]	      2353	screen.c	FUNCTION_20	IF_142
0x4010d40	    0x448b8bb00000	            mov r9d, dword [rbx + 0xb0] 	      6568	screen.c	FUNCTION_38	IF_1
0x4010d47	          0x4585c9	                           test r9d, r9d	      6568	screen.c	FUNCTION_38	IF_1
0x4010d4a	     0xf85e3070000	                           jne 0x4011533	      6568	screen.c	FUNCTION_38	IF_1
0x4010d50	          0x4585ed	                         test r13d, r13d	      2277	screen.c	FUNCTION_20	ELSE_44	IF_134
0x4010d53	     0xf854e070000	                           jne 0x40114a7	      2277	screen.c	FUNCTION_20	ELSE_44	IF_134
0x4010d59	    0x833d00000000	cmp dword [0x04010d60], 0xffffffffffffffff	      2298	screen.c	FUNCTION_20	ELSE_44	ELSE_46	IF_138
0x4010d60	     0xf84320a0000	                            je 0x4011798	      2298	screen.c	FUNCTION_20	ELSE_44	ELSE_46	IF_138
0x4010d66	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d6d	    0x41b901000000	                              mov r9d, 1	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d73	          0x4489e1	                           mov ecx, r12d	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d76	      0xba20000000	                           mov edx, 0x20	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d7b	      0xbe7e000000	                           mov esi, 0x7e	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d80	          0x4889df	                            mov rdi, rbx	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d83	      0xe86847ffff	                   call sym.win_draw_end	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d88	      0xe95dffffff	                           jmp 0x4010cea	      2303	screen.c	FUNCTION_20	ELSE_44	CALL_79
0x4010d8d	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010d91	    0x8b0d00000000	            mov ecx, dword [0x04010d97] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010d97	          0x4c89d6	                            mov rsi, r10	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010d9a	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010d9e	      0x4c89542450	             mov qword [rsp + 0x50], r10	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010da3	        0x8d7c0500	                    lea edi, [rbp + rax]	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010da7	      0xe8f4f4feff	                 call sym.copy_text_attr	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dac	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010db1	      0xe9b3f7ffff	                           jmp 0x4010569	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010db6	      0x448974243c	            mov dword [rsp + 0x3c], r14d	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dbb	      0x4c897c2408	                mov qword [rsp + 8], r15	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dc0	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dc5	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dca	      0xe930faffff	                           jmp 0x40107ff	      2794	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x4010dcf	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2933	screen.c	FUNCTION_25	IF_28	CALL_36
0x4010dd3	    0x488b15000000	            mov rdx, qword [0x04010dda] 	      2933	screen.c	FUNCTION_25	IF_28	CALL_36
0x4010dda	    0x8b3500000000	            mov esi, dword [0x04010de0] 	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010de0	             0x1e8	                            add eax, ebp	      2933	screen.c	FUNCTION_25	IF_28	CALL_36
0x4010de2	            0x4898	                                    cdqe	      2933	screen.c	FUNCTION_25	IF_28	CALL_36
0x4010de4	        0x488d2c42	                  lea rbp, [rdx + rax*2]	      2933	screen.c	FUNCTION_25	IF_28	CALL_36
0x4010de8	         0xfb77d00	                   movzx edi, word [rbp]	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010dec	      0xe800000000	                          call 0x4010df1	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010df1	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010df7	        0x66894500	                      mov word [rbp], ax	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010dfb	      0xe97bf9ffff	                           jmp 0x401077b	      2932	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x4010e00	          0x4889df	                            mov rdi, rbx	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010e03	      0xe800000000	                          call 0x4010e08	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010e08	            0x85c0	                           test eax, eax	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010e0a	     0xf84a7feffff	                            je 0x4010cb7	      2211	screen.c	FUNCTION_20	IF_128	CALL_57
0x4010e10	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2212	screen.c	FUNCTION_20	CALL_58
0x4010e15	        0x4883c701	                              add rdi, 1	      2212	screen.c	FUNCTION_20	CALL_58
0x4010e19	      0xe800000000	                          call 0x4010e1e	      2212	screen.c	FUNCTION_20	CALL_58
0x4010e1e	      0xe994feffff	                           jmp 0x4010cb7	      2212	screen.c	FUNCTION_20	CALL_58
0x4010e23	          0x4889df	                            mov rdi, rbx	      1200	screen.c	FUNCTION_20	CALL_8
0x4010e26	      0xe800000000	                          call 0x4010e2b	      1200	screen.c	FUNCTION_20	CALL_8
0x4010e2b	      0xe9e0eeffff	                           jmp 0x400fd10	      1200	screen.c	FUNCTION_20	CALL_8
0x4010e30	        0x488b0424	                    mov rax, qword [rsp]	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e34	    0x8b880c010000	           mov ecx, dword [rax + 0x10c] 	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e3a	            0x85c9	                           test ecx, ecx	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e3c	     0xf84ce040000	                            je 0x4011310	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e42	        0x488b0424	                    mov rax, qword [rsp]	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e46	    0x4883b8200100	              cmp qword [rax + 0x120], 0	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e4e	     0xf84bc040000	                            je 0x4011310	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e54	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e5b	          0x4885c0	                           test rax, rax	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e5e	     0xf85beeeffff	                           jne 0x400fd22	      1209	screen.c	FUNCTION_20	ELSE_1	IF_7
0x4010e64	    0x488b93380100	           mov rdx, qword [rbx + 0x138] 	      1225	screen.c	FUNCTION_20	ELSE_2	IF_8
0x4010e6b	    0x488984248800	             mov qword [rsp + 0x88], rax	      1224	screen.c	FUNCTION_20	ELSE_2
0x4010e73	          0x4885d2	                           test rdx, rdx	      1225	screen.c	FUNCTION_20	ELSE_2	IF_8
0x4010e76	     0xf84c6070000	                            je 0x4011642	      1225	screen.c	FUNCTION_20	ELSE_2	IF_8
0x4010e7c	        0x4883c201	                              add rdx, 1	      1226	screen.c	FUNCTION_20	ELSE_2	IF_8
0x4010e80	    0x488994249000	             mov qword [rsp + 0x90], rdx	      1226	screen.c	FUNCTION_20	ELSE_2	IF_8
0x4010e88	            0x85c9	                           test ecx, ecx	      1231	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9
0x4010e8a	    0x48c783300100	              mov qword [rbx + 0x130], 0	      1229	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x4010e95	    0x48c783380100	              mov qword [rbx + 0x138], 0	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x4010ea0	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1119	screen.c	FUNCTION_20
0x4010ea8	     0xf84a5000000	                            je 0x4010f53	      1231	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9
0x4010eae	          0x4885c0	                           test rax, rax	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010eb1	     0xf84ad0d0000	                            je 0x4011c64	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010eb7	        0x488b3c24	                    mov rdi, qword [rsp]	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010ebb	    0x488b97100100	           mov rdx, qword [rdi + 0x110] 	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010ec2	          0x4839c2	                            cmp rdx, rax	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010ec5	            0x7d3b	                           jge 0x4010f02	      1233	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010ec7	          0x4889df	                            mov rdi, rbx	      1239	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11	CALL_9
0x4010eca	    0x488994248800	             mov qword [rsp + 0x88], rdx	      1235	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10
0x4010ed2	      0xe800000000	                          call 0x4010ed7	      1239	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11	CALL_9
0x4010ed7	            0x85c0	                           test eax, eax	      1239	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11	CALL_9
0x4010ed9	            0x7427	                            je 0x4010f02	      1239	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11	CALL_9
0x4010edb	        0x488b3c24	                    mov rdi, qword [rsp]	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010edf	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010ee7	      0xba01000000	                              mov edx, 1	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010eec	    0x482b87201a00	           sub rax, qword [rdi + 0x1a20]	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010ef3	          0x4885c0	                           test rax, rax	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010ef6	        0x480f4ec2	                         cmovle rax, rdx	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010efa	    0x488984248800	             mov qword [rsp + 0x88], rax	      1241	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_10	IF_11
0x4010f02	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f0a	          0x4885c0	                           test rax, rax	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f0d	     0xf85210b0000	                           jne 0x4011a34	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f13	        0x488b0424	                    mov rax, qword [rsp]	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f17	    0x488b90180100	           mov rdx, qword [rax + 0x118] 	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f1e	    0x488994249000	             mov qword [rsp + 0x90], rdx	      1248	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4010f26	    0x488b3d000000	            mov rdi, qword [0x04010f2d] 	      1257	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14
0x4010f2d	          0x4885ff	                           test rdi, rdi	      1257	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14
0x4010f30	     0xf84c3080000	                            je 0x40117f9	      1257	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14
0x4010f36	      0xe800000000	                          call 0x4010f3b	      1258	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14	CALL_10
0x4010f3b	            0x85c0	                           test eax, eax	      1258	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14	CALL_10
0x4010f3d	     0xf84b6080000	                            je 0x40117f9	      1258	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14	CALL_10
0x4010f43	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1258	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_14	CALL_10
0x4010f4b	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      1268	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15
0x4010f53	          0x4885c0	                           test rax, rax	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x4010f56	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1107	screen.c	FUNCTION_20
0x4010f5e	     0xf8509090000	                           jne 0x401186d	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x4010f64	          0x83fd1e	                           cmp ebp, 0x1e	      1347	screen.c	FUNCTION_20	IF_27
0x4010f67	     0xf8534120000	                           jne 0x40121a1	      1347	screen.c	FUNCTION_20	IF_27
0x4010f6d	    0x8bbbf8000000	            mov edi, dword [rbx + 0xf8] 	      1350	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010f73	            0x85ff	                           test edi, edi	      1350	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010f75	            0x7e49	                           jle 0x4010fc0	      1350	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010f77	    0x488b8b000100	           mov rcx, qword [rbx + 0x100] 	      1352	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010f7e	    0x4863b32c0100	        movsxd rsi, dword [rbx + 0x12c] 	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f85	         0xfb75108	               movzx edx, word [rcx + 8]	      1352	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010f89	          0x4839d6	                            cmp rsi, rdx	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f8c	     0xf8ed3050000	                           jle 0x4011565	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f92	          0x83ef01	                              sub edi, 1	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f95	        0x488d4120	                   lea rax, [rcx + 0x20]	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f99	        0x488d3c7f	                  lea rdi, [rdi + rdi*2]	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010f9d	      0x488d7cf920	          lea rdi, [rcx + rdi*8 + 0x20] 	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010fa2	            0xeb17	                           jmp 0x4010fbb	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010fa4	         0xf1f4000	                         nop dword [rax]	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010fa8	           0xfb708	                   movzx ecx, word [rax]	      1352	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010fab	        0x4883c018	                           add rax, 0x18	      1352	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010faf	          0x4801ca	                            add rdx, rcx	      1352	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010fb2	          0x4839f2	                            cmp rdx, rsi	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010fb5	     0xf8daa050000	                           jge 0x4011565	      1353	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4010fbb	          0x4839f8	                            cmp rax, rdi	      1350	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010fbe	            0x75e8	                           jne 0x4010fa8	      1350	screen.c	FUNCTION_20	IF_27	FOR_2
0x4010fc0	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	      1359	screen.c	FUNCTION_20	IF_27	IF_29
0x4010fc5	          0x4585c9	                           test r9d, r9d	      1359	screen.c	FUNCTION_20	IF_27	IF_29
0x4010fc8	     0xf8575050000	                           jne 0x4011543	      1359	screen.c	FUNCTION_20	IF_27	IF_29
0x4010fce	    0x8b3500000000	            mov esi, dword [0x04010fd4] 	      1371	screen.c	FUNCTION_20	IF_30
0x4010fd4	      0xbd28000000	                           mov ebp, 0x28	      1361	screen.c	FUNCTION_20	IF_27	IF_29
0x4010fd9	            0x85f6	                           test esi, esi	      1371	screen.c	FUNCTION_20	IF_30
0x4010fdb	     0xf847aedffff	                            je 0x400fd5b	      1371	screen.c	FUNCTION_20	IF_30
0x4010fe1	      0xb828000000	                           mov eax, 0x28	      1371	screen.c	FUNCTION_20	IF_30
0x4010fe6	      0xbd28000000	                           mov ebp, 0x28	      1361	screen.c	FUNCTION_20	IF_27	IF_29
0x4010feb	      0xe958edffff	                           jmp 0x400fd48	      1361	screen.c	FUNCTION_20	IF_27	IF_29
0x4010ff0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2331	screen.c	FUNCTION_20	IF_139
0x4010ff6	            0x89c2	                            mov edx, eax	      2331	screen.c	FUNCTION_20	IF_139
0x4010ff8	          0x83ca20	                            or edx, 0x20	      2331	screen.c	FUNCTION_20	IF_139
0x4010ffb	    0x483b1d000000	            cmp rbx, qword [0x04011002] 	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x4011002	    0x8993b4000000	             mov dword [rbx + 0xb4], edx	      2331	screen.c	FUNCTION_20	IF_139
0x4011008	     0xf8512fdffff	                           jne 0x4010d20	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x401100e	      0x4863542418	         movsxd rdx, dword [rsp + 0x18] 	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x4011013	    0x483993e80000	            cmp qword [rbx + 0xe8], rdx 	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x401101a	     0xf8400fdffff	                            je 0x4010d20	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x4011020	    0x8b3d00000000	            mov edi, dword [0x04011026] 	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x4011026	            0x85ff	                           test edi, edi	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x4011028	     0xf85f2fcffff	                           jne 0x4010d20	      2332	screen.c	FUNCTION_20	IF_139	IF_140
0x401102e	            0x247f	                            and al, 0x7f	      2335	screen.c	FUNCTION_20	IF_139	IF_140
0x4011030	    0xc70500000000	               mov dword [0x0401103a], 1	      2334	screen.c	FUNCTION_20	IF_139	IF_140
0x401103a	          0x83c820	                            or eax, 0x20	      2335	screen.c	FUNCTION_20	IF_139	IF_140
0x401103d	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2335	screen.c	FUNCTION_20	IF_139	IF_140
0x4011043	      0xe800000000	                          call 0x4011048	      2336	screen.c	FUNCTION_20	IF_139	IF_140	CALL_81
0x4011048	    0x833d00000000	               cmp dword [0x0401104f], 0	      2337	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x401104f	            0x743a	                            je 0x401108b	      2337	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x4011051	    0x488b05000000	            mov rax, qword [0x04011058] 	      2340	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x4011058	    0x488b3d000000	            mov rdi, qword [0x0401105f] 	      2342	screen.c	FUNCTION_20	IF_139	IF_140	IF_141	CALL_82
0x401105f	    0x8b980c010000	           mov ebx, dword [rax + 0x10c] 	      2340	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x4011065	    0xc7800c010000	              mov dword [rax + 0x10c], 0	      2341	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x401106f	      0xe84cebffff	                     call sym.win_update	      2342	screen.c	FUNCTION_20	IF_139	IF_140	IF_141	CALL_82
0x4011074	    0x488b05000000	            mov rax, qword [0x0401107b] 	      2344	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x401107b	    0xc70500000000	               mov dword [0x04011085], 0	      2343	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x4011085	    0x89980c010000	            mov dword [rax + 0x10c], ebx	      2344	screen.c	FUNCTION_20	IF_139	IF_140	IF_141
0x401108b	    0xc70500000000	               mov dword [0x04011095], 0	      2346	screen.c	FUNCTION_20	IF_139	IF_140
0x4011095	      0xe986fcffff	                           jmp 0x4010d20	      2346	screen.c	FUNCTION_20	IF_139	IF_140
0x401109a	    0x660f1f440000	                    nop word [rax + rax]	      2346	screen.c	FUNCTION_20	IF_139	IF_140
0x40110a0	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1603	screen.c	FUNCTION_20	IF_57
0x40110a6	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1602	screen.c	FUNCTION_20	IF_57
0x40110ae	      0xbd28000000	                           mov ebp, 0x28	      1604	screen.c	FUNCTION_20	IF_57
0x40110b3	        0x89442468	             mov dword [rsp + 0x68], eax	      1603	screen.c	FUNCTION_20	IF_57
0x40110b7	      0xe9cdecffff	                           jmp 0x400fd89	      1603	screen.c	FUNCTION_20	IF_57
0x40110bc	          0x4c89fe	                            mov rsi, r15	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110bf	          0x4889df	                            mov rdi, rbx	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110c2	      0xe800000000	                          call 0x40110c7	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110c7	    0x448b83a00000	            mov r8d, dword [rbx + 0xa0] 	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110ce	          0x4489c2	                            mov edx, r8d	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110d1	            0x29ea	                            sub edx, ebp	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110d3	            0x39d0	                            cmp eax, edx	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110d5	     0xf8c93040000	                            jl 0x401156e	      2234	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131	CALL_59
0x40110db	    0x4c89bbe80000	             mov qword [rbx + 0xe8], r15	      2237	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131
0x40110e2	    0x8993f4000000	             mov dword [rbx + 0xf4], edx	      2238	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131
0x40110e8	      0xe9fdfbffff	                           jmp 0x4010cea	      2238	screen.c	FUNCTION_20	IF_129	ELSE_40	IF_131
0x40110ed	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x40110f3	          0x4489ea	                           mov edx, r13d	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x40110f6	          0x4429d2	                           sub edx, r10d	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x40110f9	          0x83e802	                              sub eax, 2	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x40110fc	            0x39c2	                            cmp edx, eax	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x40110fe	     0xf8d25f7ffff	                           jge 0x4010829	      1987	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	IF_104
0x4011104	            0x31ff	                            xor edi, edi	      1991	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	CALL_41
0x4011106	      0x4489542440	            mov dword [rsp + 0x40], r10d	      1991	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	CALL_41
0x401110b	      0xe800000000	                          call 0x4011110	      1991	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	CALL_41
0x4011110	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011115	          0x4531c9	                            xor r9d, r9d	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011118	          0x4531c0	                            xor r8d, r8d	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x401111b	            0x31c9	                            xor ecx, ecx	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x401111d	          0x4489ee	                           mov esi, r13d	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011120	          0x4889df	                            mov rdi, rbx	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011123	          0x4489d2	                           mov edx, r10d	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011126	            0xf7da	                                 neg edx	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011128	      0xe800000000	                          call 0x401112d	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x401112d	            0x85c0	                           test eax, eax	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x401112f	     0xf84f4f6ffff	                            je 0x4010829	      1992	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	IF_105	CALL_42
0x4011135	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      1996	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	ELSE_30
0x401113a	    0x440393a00000	            add r10d, dword [rbx + 0xa0]	      1996	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	ELSE_30
0x4011141	      0x4489542470	            mov dword [rsp + 0x70], r10d	      1996	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_103	ELSE_29	ELSE_30
0x4011146	    0x4881bc249000	     cmp qword [rsp + 0x90], 0x7fffffff 	      2021	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110
0x4011152	     0xf84e0f6ffff	                            je 0x4010838	      2021	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110
0x4011158	          0x4963cc	                        movsxd rcx, r12d	      2021	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110
0x401115b	      0x48394c2408	                cmp qword [rsp + 8], rcx	      2021	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110
0x4011160	     0xf84d2f6ffff	                            je 0x4010838	      2021	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110
0x4011166	     0xf8dd9010000	                           jge 0x4011345	      2023	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111
0x401116c	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2025	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111
0x4011170	          0x4401ed	                           add ebp, r13d	      2025	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111
0x4011173	    0x4439a3f80000	           cmp dword [rbx + 0xf8], r12d 	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x401117a	     0xf8e020e0000	                           jle 0x4011f82	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x4011180	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x4011185	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x401118c	          0x4829f9	                            sub rcx, rdi	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x401118f	        0x488d047f	                  lea rax, [rdi + rdi*2]	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x4011193	        0x488d3449	                  lea rsi, [rcx + rcx*2]	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x4011197	        0x48c1e003	                              shl rax, 3	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x401119b	        0x48c1e603	                              shl rsi, 3	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x401119f	            0xeb22	                           jmp 0x40111c3	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40111a1	     0xf1f80000000	                         nop dword [rax]	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40111a8	        0x4883c701	                              add rdi, 1	      2044	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111ac	        0x4183c401	                             add r12d, 1	      2045	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111b0	        0x4883c018	                           add rax, 0x18	      2045	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111b4	    0x4439a3f80000	           cmp dword [rbx + 0xf8], r12d 	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40111bb	            0x89cd	                            mov ebp, ecx	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40111bd	     0xf8ee1050000	                           jle 0x40117a4	      2031	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40111c3	        0x488d0c02	                    lea rcx, [rdx + rax]	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111c7	          0x4801f1	                            add rcx, rsi	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111ca	          0x4c8b01	                     mov r8, qword [rcx]	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111cd	        0x4c890402	               mov qword [rdx + rax], r8	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111d1	        0x4c8b4108	                 mov r8, qword [rcx + 8]	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111d5	      0x4c89440208	           mov qword [rdx + rax + 8], r8	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111da	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111de	      0x48894c0210	       mov qword [rdx + rax + 0x10], rcx	      2036	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11
0x40111e3	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      2038	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111ea	       0xfb74c0208	        movzx ecx, word [rdx + rax + 8] 	      2038	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111ef	             0x1e9	                            add ecx, ebp	      2038	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111f1	    0x3b8ba0000000	            cmp ecx, dword [rbx + 0xa0] 	      2038	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111f7	            0x7eaf	                           jle 0x40111a8	      2038	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111f9	          0x4189fc	                           mov r12d, edi	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111fc	            0x89e9	                            mov ecx, ebp	      2042	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x40111fe	        0x4183c401	                             add r12d, 1	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x4011202	    0x4489a3f80000	            mov dword [rbx + 0xf8], r12d	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x4011209	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x401120d	            0x39c8	                            cmp eax, ecx	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x401120f	           0xf4ec8	                         cmovle ecx, eax	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x4011212	        0x894c2470	             mov dword [rsp + 0x70], ecx	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x4011216	      0xe91df6ffff	                           jmp 0x4010838	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x401121b	            0x89c7	                            mov edi, eax	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x401121d	            0x89d0	                            mov eax, edx	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x401121f	      0xe91eedffff	                           jmp 0x400ff42	      2041	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_113
0x4011224	      0x48634c2420	         movsxd rcx, dword [rsp + 0x20] 	      2676	screen.c	FUNCTION_25	IF_1
0x4011229	      0xbd01000000	                              mov ebp, 1	      2682	screen.c	FUNCTION_25	IF_1
0x401122e	          0x881408	                mov byte [rax + rcx], dl	      2676	screen.c	FUNCTION_25	IF_1
0x4011231	    0x448b05000000	            mov r8d, dword [0x04011238] 	      2679	screen.c	FUNCTION_25	IF_1	IF_2
0x4011238	    0x8b1500000000	            mov edx, dword [0x0401123e] 	      2677	screen.c	FUNCTION_25	IF_1	CALL_1
0x401123e	    0x488b05000000	            mov rax, qword [0x04011245] 	      2677	screen.c	FUNCTION_25	IF_1	CALL_1
0x4011245	          0x4585c0	                           test r8d, r8d	      2679	screen.c	FUNCTION_25	IF_1	IF_2
0x4011248	        0x66891448	              mov word [rax + rcx*2], dx	      2677	screen.c	FUNCTION_25	IF_1	CALL_1
0x401124c	     0xf8430f7ffff	                            je 0x4010982	      2679	screen.c	FUNCTION_25	IF_1	IF_2
0x4011252	    0x488b05000000	            mov rax, qword [0x04011259] 	      2680	screen.c	FUNCTION_25	IF_1	IF_2
0x4011259	    0xc70488000000	              mov dword [rax + rcx*4], 0	      2680	screen.c	FUNCTION_25	IF_1	IF_2
0x4011260	      0xe91df7ffff	                           jmp 0x4010982	      2680	screen.c	FUNCTION_25	IF_1	IF_2
0x4011265	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011269	    0x488b0d000000	            mov rcx, qword [0x04011270] 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011270	          0x4839ca	                            cmp rdx, rcx	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011273	     0xf84da030000	                            je 0x4011653	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011279	     0xf8cfb030000	                            jl 0x401167a	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x401127f	        0x488d7038	                   lea rsi, [rax + 0x38]	      2864	screen.c	FUNCTION_25	IF_19	ELSE_7
0x4011283	          0x4889ca	                            mov rdx, rcx	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011286	      0xb800000000	                              mov eax, 0	      2863	screen.c	FUNCTION_25	IF_19	ELSE_7
0x401128b	          0x4939d7	                            cmp r15, rdx	      2866	screen.c	FUNCTION_25	IF_19	IF_21
0x401128e	     0xf8c00f4ffff	                            jl 0x4010694	      2866	screen.c	FUNCTION_25	IF_19	IF_21
0x4011294	          0x488b0e	                    mov rcx, qword [rsi]	      2867	screen.c	FUNCTION_25	IF_19	IF_21
0x4011297	      0x48394c2440	            cmp qword [rsp + 0x40], rcx 	      2867	screen.c	FUNCTION_25	IF_19	IF_21
0x401129c	     0xf8ff2f3ffff	                            jg 0x4010694	      2867	screen.c	FUNCTION_25	IF_19	IF_21
0x40112a2	    0x448b05000000	            mov r8d, dword [0x040112a9] 	      2868	screen.c	FUNCTION_25	IF_19	IF_21
0x40112a9	        0x4183f876	                           cmp r8d, 0x76	      2868	screen.c	FUNCTION_25	IF_19	IF_21
0x40112ad	     0xf84540b0000	                            je 0x4011e07	      2868	screen.c	FUNCTION_25	IF_19	IF_21
0x40112b3	        0x4183f816	                           cmp r8d, 0x16	      2877	screen.c	FUNCTION_25	IF_19	IF_21	IF_22
0x40112b7	     0xf84570c0000	                            je 0x4011f14	      2877	screen.c	FUNCTION_25	IF_19	IF_21	IF_22
0x40112bd	    0x8bb354020000	           mov esi, dword [rbx + 0x254] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112c3	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112c9	            0x85f6	                           test esi, esi	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112cb	            0x89d1	                            mov ecx, edx	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112cd	     0xf85ad0b0000	                           jne 0x4011e80	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112d3	            0x29e9	                            sub ecx, ebp	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112d5	            0x85c9	                           test ecx, ecx	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112d7	     0xf8ebdf3ffff	                           jle 0x401069a	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112dd	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112e1	    0x488b35000000	            mov rsi, qword [0x040112e8] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112e8	     0xfb73d000000	           movzx edi, word [0x040112ef] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112ef	             0x1e8	                            add eax, ebp	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112f1	            0x4898	                                    cdqe	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112f3	        0x488d3446	                  lea rsi, [rsi + rax*2]	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112f7	            0x31c0	                            xor eax, eax	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112f9	        0x66893c46	              mov word [rsi + rax*2], di	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x40112fd	        0x4883c001	                              add rax, 1	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011301	            0x39c1	                            cmp ecx, eax	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011303	            0x7ff4	                            jg 0x40112f9	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011305	      0xe990f3ffff	                           jmp 0x401069a	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x401130a	    0x660f1f440000	                    nop word [rax + rax]	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011310	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011317	      0xe948fbffff	                           jmp 0x4010e64	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x401131c	          0x4189c4	                           mov r12d, eax	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x401131f	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011327	          0x4531ed	                          xor r13d, r13d	      1127	screen.c	FUNCTION_20
0x401132a	      0xe96ef9ffff	                           jmp 0x4010c9d	      1127	screen.c	FUNCTION_20
0x401132f	          0x4589ec	                          mov r12d, r13d	      1127	screen.c	FUNCTION_20
0x4011332	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      1127	screen.c	FUNCTION_20
0x401133a	    0x41bd01000000	                             mov r13d, 1	      1853	screen.c	FUNCTION_20	FOR_8	IF_93
0x4011340	      0xe958f9ffff	                           jmp 0x4010c9d	      1853	screen.c	FUNCTION_20	FOR_8	IF_93
0x4011345	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2053	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34
0x401134a	    0x8bbbf8000000	            mov edi, dword [rbx + 0xf8] 	      2054	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34
0x4011350	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      2055	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	IF_115
0x4011356	          0x4929cc	                            sub r12, rcx	      2053	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34
0x4011359	          0x4401e7	                           add edi, r12d	      2054	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34
0x401135c	            0x39c7	                            cmp edi, eax	      2055	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	IF_115
0x401135e	    0x89bbf8000000	             mov dword [rbx + 0xf8], edi	      2054	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34
0x4011364	            0x7e08	                           jle 0x401136e	      2055	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	IF_115
0x4011366	    0x8983f8000000	             mov dword [rbx + 0xf8], eax	      2056	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	IF_115
0x401136c	            0x89c7	                            mov edi, eax	      2056	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	IF_115
0x401136e	          0x4863d7	                         movsxd rdx, edi	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011371	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011376	          0x4889d6	                            mov rsi, rdx	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011379	          0x4c29e6	                            sub rsi, r12	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x401137c	          0x4939f2	                            cmp r10, rsi	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x401137f	            0x7f4e	                            jg 0x40113cf	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011381	          0x4829f2	                            sub rdx, rsi	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011384	        0x488d0476	                  lea rax, [rsi + rsi*2]	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011388	        0x4c8d0c52	                   lea r9, [rdx + rdx*2]	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x401138c	        0x48c1e003	                              shl rax, 3	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011390	        0x49c1e103	                               shl r9, 3	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011394	         0xf1f4000	                         nop dword [rax]	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x4011398	    0x488b8b000100	           mov rcx, qword [rbx + 0x100] 	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x401139f	        0x4883ee01	                              sub rsi, 1	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113a3	          0x83ef01	                              sub edi, 1	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113a6	        0x4c8b0401	               mov r8, qword [rcx + rax]	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113aa	        0x4a8d1409	                     lea rdx, [rcx + r9]	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113ae	          0x4801c2	                            add rdx, rax	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113b1	          0x4c8902	                     mov qword [rdx], r8	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113b4	      0x4c8b440108	          mov r8, qword [rcx + rax + 8] 	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113b9	        0x4c894208	                 mov qword [rdx + 8], r8	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113bd	      0x488b4c0110	      mov rcx, qword [rcx + rax + 0x10] 	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113c2	        0x4883e818	                           sub rax, 0x18	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113c6	          0x4c39d6	                            cmp rsi, r10	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113c9	        0x48894a10	             mov qword [rdx + 0x10], rcx	      2058	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113cd	            0x7dc9	                           jge 0x4011398	      2057	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	FOR_12
0x40113cf	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113d3	            0x39fe	                            cmp esi, edi	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113d5	     0xf8f5df4ffff	                            jg 0x4010838	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113db	          0x4863d7	                         movsxd rdx, edi	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113de	            0x29f7	                            sub edi, esi	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113e0	        0x488d0452	                  lea rax, [rdx + rdx*2]	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113e4	          0x4829fa	                            sub rdx, rdi	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113e7	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113eb	        0x48c1e003	                              shl rax, 3	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113ef	    0x488d0cd5e8ff	                 lea rcx, [rdx*8 - 0x18]	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x40113f7	    0x660f1f840000	                    nop word [rax + rax]	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011400	          0x4889c2	                            mov rdx, rax	      2065	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011403	    0x480393000100	            add rdx, qword [rbx + 0x100]	      2065	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x401140a	        0x4883e818	                           sub rax, 0x18	      2065	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x401140e	          0x4531c9	                            xor r9d, r9d	      2065	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011411	          0x4839c1	                            cmp rcx, rax	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011414	      0x6644894a08	                 mov word [rdx + 8], r9w	      2065	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011419	        0xc6420a00	                 mov byte [rdx + 0xa], 0	      2066	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x401141d	            0x75e1	                           jne 0x4011400	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x401141f	      0xe914f4ffff	                           jmp 0x4010838	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011424	          0x4189c4	                           mov r12d, eax	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x4011427	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      2063	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	ELSE_34	WHILE_5
0x401142f	    0x41bd01000000	                             mov r13d, 1	      2176	screen.c	FUNCTION_20	FOR_8	IF_123
0x4011435	      0xe963f8ffff	                           jmp 0x4010c9d	      2176	screen.c	FUNCTION_20	FOR_8	IF_123
0x401143a	            0x31c9	                            xor ecx, ecx	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401143c	            0x31d2	                            xor edx, edx	      1764	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_22	WHILE_3
0x401143e	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1779	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24
0x4011444	         0x34c2438	             add ecx, dword [rsp + 0x38]	      1778	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24
0x4011448	            0x39fa	                            cmp edx, edi	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401144a	        0x89442468	             mov dword [rsp + 0x68], eax	      1779	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24
0x401144e	     0xf8dcff4ffff	                           jge 0x4010923	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011454	          0x83ef01	                              sub edi, 1	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011457	          0x4863f2	                         movsxd rsi, edx	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401145a	    0x4c8b83000100	            mov r8, qword [rbx + 0x100] 	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011461	            0x29d7	                            sub edi, edx	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011463	        0x488d0476	                  lea rax, [rsi + rsi*2]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011467	      0x488d543e01	                lea rdx, [rsi + rdi + 1]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401146c	        0x498d04c0	                   lea rax, [r8 + rax*8]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011470	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011474	        0x498d34d0	                   lea rsi, [r8 + rdx*8]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011478	            0xeb19	                           jmp 0x4011493	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401147a	    0x660f1f440000	                    nop word [rax + rax]	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011480	         0xfb75008	               movzx edx, word [rax + 8]	      1789	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011484	        0x4883c018	                           add rax, 0x18	      1789	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011488	             0x1d1	                            add ecx, edx	      1789	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401148a	          0x4839c6	                            cmp rsi, rax	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x401148d	     0xf8490f4ffff	                            je 0x4010923	      1780	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7
0x4011493	        0x80780a00	                 cmp byte [rax + 0xa], 0	      1782	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x4011497	            0x74e7	                            je 0x4011480	      1782	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x4011499	          0x4c3b20	                    cmp r12, qword [rax]	      1783	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x401149c	            0x7de2	                           jge 0x4011480	      1783	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x401149e	        0x894c2468	             mov dword [rsp + 0x68], ecx	      1783	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x40114a2	      0xe97cf4ffff	                           jmp 0x4010923	      1783	screen.c	FUNCTION_20	IF_58	IF_84	ELSE_24	FOR_7	IF_89
0x40114a7	        0x488b0424	                    mov rax, qword [rsp]	      2279	screen.c	FUNCTION_20	ELSE_44	IF_134
0x40114ab	          0x4889df	                            mov rdi, rbx	      2281	screen.c	FUNCTION_20	ELSE_44	IF_134	CALL_76
0x40114ae	          0x488b30	                    mov rsi, qword [rax]	      2279	screen.c	FUNCTION_20	ELSE_44	IF_134
0x40114b1	        0x4883c601	                              add rsi, 1	      2279	screen.c	FUNCTION_20	ELSE_44	IF_134
0x40114b5	    0x4889b3e80000	             mov qword [rbx + 0xe8], rsi	      2279	screen.c	FUNCTION_20	ELSE_44	IF_134
0x40114bc	      0xe800000000	                          call 0x40114c1	      2281	screen.c	FUNCTION_20	ELSE_44	IF_134	CALL_76
0x40114c1	          0x4863e8	                         movsxd rbp, eax	      2281	screen.c	FUNCTION_20	ELSE_44	IF_134	CALL_76
0x40114c4	          0x4885ed	                           test rbp, rbp	      2282	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x40114c7	     0xf8e99f8ffff	                           jle 0x4010d66	      2282	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x40114cd	    0x448b838c0000	            mov r8d, dword [rbx + 0x8c] 	      2282	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x40114d4	          0x4585c0	                           test r8d, r8d	      2282	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x40114d7	     0xf8589f8ffff	                           jne 0x4010d66	      2282	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x40114dd	    0x8b3d00000000	            mov edi, dword [0x040114e3] 	      2287	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_136	CALL_77
0x40114e3	      0xe800000000	                          call 0x40114e8	      2287	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_136	CALL_77
0x40114e8	    0x48638ba00000	         movsxd rcx, dword [rbx + 0xa0] 	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x40114ef	          0x4963d4	                        movsxd rdx, r12d	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x40114f2	          0x83f801	                              cmp eax, 1	      2290	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	ELSE_45
0x40114f5	      0xbe2d000000	                           mov esi, 0x2d	      2290	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	ELSE_45
0x40114fa	     0xf4e35000000	          cmovle esi, dword [0x04011501]	      2290	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	ELSE_45
0x4011501	          0x4801ea	                            add rdx, rbp	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x4011504	          0x4839ca	                            cmp rdx, rcx	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x4011507	          0x4889c8	                            mov rax, rcx	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x401150a	            0x7e06	                           jle 0x4011512	      2291	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x401150c	          0x4429e0	                           sub eax, r12d	      2292	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x401150f	          0x4863e8	                         movsxd rbp, eax	      2292	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	IF_137
0x4011512	          0x4401e5	                           add ebp, r12d	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x4011515	          0x4489e1	                           mov ecx, r12d	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x4011518	    0x41b919000000	                           mov r9d, 0x19	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x401151e	          0x4189e8	                            mov r8d, ebp	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x4011521	            0x89f2	                            mov edx, esi	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x4011523	          0x4889df	                            mov rdi, rbx	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x4011526	      0xe8c53fffff	                   call sym.win_draw_end	      2293	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135	CALL_78
0x401152b	          0x4189ec	                           mov r12d, ebp	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x401152e	      0xe933f8ffff	                           jmp 0x4010d66	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x4011533	          0x4489e6	                           mov esi, r12d	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x4011536	          0x4889df	                            mov rdi, rbx	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x4011539	      0xe8423fffff	          call sym.draw_vsep_win.part.18	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x401153e	      0xe90df8ffff	                           jmp 0x4010d50	      2294	screen.c	FUNCTION_20	ELSE_44	IF_134	IF_135
0x4011543	    0x8b0d00000000	            mov ecx, dword [0x04011549] 	      1371	screen.c	FUNCTION_20	IF_30
0x4011549	      0xbd0a000000	                            mov ebp, 0xa	      1364	screen.c	FUNCTION_20	IF_27	ELSE_6
0x401154e	            0x85c9	                           test ecx, ecx	      1371	screen.c	FUNCTION_20	IF_30
0x4011550	     0xf849eebffff	                            je 0x40100f4	      1371	screen.c	FUNCTION_20	IF_30
0x4011556	      0xb80a000000	                            mov eax, 0xa	      1371	screen.c	FUNCTION_20	IF_30
0x401155b	      0xbd0a000000	                            mov ebp, 0xa	      1364	screen.c	FUNCTION_20	IF_27	ELSE_6
0x4011560	      0xe9e3e7ffff	                           jmp 0x400fd48	      1364	screen.c	FUNCTION_20	IF_27	ELSE_6
0x4011565	        0x8954242c	             mov dword [rsp + 0x2c], edx	      1355	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x4011569	      0xe952faffff	                           jmp 0x4010fc0	      1356	screen.c	FUNCTION_20	IF_27	FOR_2	IF_28
0x401156e	    0x8b0500000000	            mov eax, dword [0x04011574] 	      2241	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132
0x4011574	            0xa802	                              test al, 2	      2241	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132
0x4011576	     0xf84db040000	                            je 0x4011a57	      2241	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132
0x401157c	    0x448ba3a80100	          mov r12d, dword [rbx + 0x1a8] 	      2243	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_60
0x4011583	    0x4403a39c0000	            add r12d, dword [rbx + 0x9c]	      2243	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_60
0x401158a	    0x8b83a8000000	            mov eax, dword [rbx + 0xa8] 	      2248	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_61
0x4011590	          0x4501c4	                           add r12d, r8d	      2243	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_60
0x4011593	    0x48833d000000	               cmp qword [0x0401159b], 0	      7448	screen.c	FUNCTION_51	IF_1
0x401159b	    0x448b05000000	            mov r8d, dword [0x040115a2] 	      2248	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_61
0x40115a2	      0x458d6c24ff	                     lea r13d, [r12 - 1]	      2243	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_60
0x40115a7	            0x740d	                            je 0x40115b6	      7448	screen.c	FUNCTION_51	IF_1
0x40115a9	    0x443b2d000000	           cmp r13d, dword [0x040115b0] 	      7448	screen.c	FUNCTION_51	IF_1
0x40115b0	     0xf8c2b080000	                            jl 0x4011de1	      7448	screen.c	FUNCTION_51	IF_1
0x40115b6	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115bc	        0x4883ec08	                              sub rsp, 8	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115c0	          0x8d5002	                      lea edx, [rax + 2]	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115c3	            0x4150	                                 push r8	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115c5	    0x41b920000000	                           mov r9d, 0x20	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115cb	    0x41b840000000	                           mov r8d, 0x40	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115d1	          0x4489e6	                           mov esi, r12d	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115d4	          0x4489ef	                           mov edi, r13d	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115d7	             0x1c1	                            add ecx, eax	      2250	screen.c	FUNCTION_20	IF_129	ELSE_41	IF_132	CALL_63
0x40115d9	      0xe800000000	                          call 0x40115de	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x40115de	            0x89ee	                            mov esi, ebp	      2265	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_73
0x40115e0	          0x4889df	                            mov rdi, rbx	      2265	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_73
0x40115e3	      0xe800000000	                          call 0x40115e8	      2265	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_73
0x40115e8	    0x4c89bbe80000	             mov qword [rbx + 0xe8], r15	      2266	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x40115ef	            0x415a	                                 pop r10	      2266	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x40115f1	            0x415b	                                 pop r11	      2266	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x40115f3	      0xe9f2f6ffff	                           jmp 0x4010cea	      2266	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x40115f8	            0x31ff	                            xor edi, edi	      2008	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	CALL_43
0x40115fa	      0x4489542440	            mov dword [rsp + 0x40], r10d	      2008	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	CALL_43
0x40115ff	          0x4401ed	                           add ebp, r13d	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011602	      0xe800000000	                          call 0x4011607	      2008	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	CALL_43
0x4011607	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x401160c	          0x4531c0	                            xor r8d, r8d	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x401160f	            0x31c9	                            xor ecx, ecx	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011611	            0x89ee	                            mov esi, ebp	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011613	          0x4889df	                            mov rdi, rbx	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011616	          0x4489d2	                           mov edx, r10d	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011619	      0xe800000000	                          call 0x401161e	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x401161e	            0x85c0	                           test eax, eax	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011620	     0xf8403f2ffff	                            je 0x4010829	      2009	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	IF_108	CALL_44
0x4011626	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x401162a	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x401162f	            0x89f8	                            mov eax, edi	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x4011631	          0x4401d0	                           add eax, r10d	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x4011634	            0x39ef	                            cmp edi, ebp	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x4011636	           0xf4ec7	                         cmovle eax, edi	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x4011639	        0x8944242c	             mov dword [rsp + 0x2c], eax	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x401163d	      0xe904fbffff	                           jmp 0x4011146	      2015	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	ELSE_30	ELSE_31	IF_106	ELSE_32	ELSE_33	IF_109
0x4011642	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x401164e	      0xe935f8ffff	                           jmp 0x4010e88	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x4011653	    0x8b3500000000	            mov esi, dword [0x04011659] 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011659	          0x397040	            cmp dword [rax + 0x40], esi 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x401165c	            0x7509	                           jne 0x4011667	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x401165e	    0x8b3500000000	            mov esi, dword [0x04011664] 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011664	          0x397044	            cmp dword [rax + 0x44], esi 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011667	            0x7c11	                            jl 0x401167a	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011669	    0x488b35000000	            mov rsi, qword [0x04011670] 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011670	        0x48397040	            cmp qword [rax + 0x40], rsi 	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x4011674	     0xf8505fcffff	                           jne 0x401127f	      2854	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x401167a	        0x4883c038	                           add rax, 0x38	      2857	screen.c	FUNCTION_25	IF_19	IF_20
0x401167e	      0xbe00000000	                              mov esi, 0	      2858	screen.c	FUNCTION_25	IF_19	IF_20
0x4011683	      0xe903fcffff	                           jmp 0x401128b	      2858	screen.c	FUNCTION_25	IF_19	IF_20
0x4011688	         0xfbe5350	           movsx edx, byte [rbx + 0x50] 	      1617	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x401168c	    0x8b3d00000000	            mov edi, dword [0x04011692] 	      1616	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x4011692	            0x39fa	                            cmp edx, edi	      1617	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x4011694	     0xf851e010000	                           jne 0x40117b8	      1617	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x401169a	          0x83fd19	                           cmp ebp, 0x19	      1617	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x401169d	     0xf8415010000	                            je 0x40117b8	      1617	screen.c	FUNCTION_20	IF_58	IF_59	IF_60
0x40116a3	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1651	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_66
0x40116a7	          0x4c39e5	                            cmp rbp, r12	      1651	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_66
0x40116aa	            0x7c12	                            jl 0x40116be	      1651	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_66
0x40116ac	          0x4d85e4	                           test r12, r12	      1660	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	ELSE_19	IF_67
0x40116af	     0xf84bf050000	                            je 0x4011c74	      1660	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	ELSE_19	IF_67
0x40116b5	          0x4889ea	                            mov rdx, rbp	      1660	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	ELSE_19	IF_67
0x40116b8	          0x4c89e5	                            mov rbp, r12	      1660	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	ELSE_19	IF_67
0x40116bb	          0x4989d4	                            mov r12, rdx	      1660	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	ELSE_19	IF_67
0x40116be	    0x488b0d000000	            mov rcx, qword [0x040116c5] 	      1664	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x40116c5	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      1664	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x40116c9	          0x4839d1	                            cmp rcx, rdx	      1664	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x40116cc	     0xf847e050000	                            je 0x4011c50	      1664	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x40116d2	          0x4885d2	                           test rdx, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116d5	            0x7407	                            je 0x40116de	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116d7	          0x4839d5	                            cmp rbp, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116da	        0x480f4fea	                          cmovg rbp, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116de	          0x4839d1	                            cmp rcx, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116e1	        0x480f4dd1	                         cmovge rdx, rcx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116e5	          0x4839cd	                            cmp rbp, rcx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116e8	        0x480f4fe9	                          cmovg rbp, rcx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116ec	          0x4939d4	                            cmp r12, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116ef	        0x4c0f4ce2	                          cmovl r12, rdx	      1668	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68	IF_69
0x40116f3	          0x83ff16	                           cmp edi, 0x16	      1684	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x40116f6	     0xf850cebffff	                           jne 0x4010208	      1684	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x40116fc	    0x8b9030020000	           mov edx, dword [rax + 0x230] 	      1690	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_74
0x4011702	    0x448b35000000	           mov r14d, dword [0x04011709] 	      1688	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011709	            0x85d2	                           test edx, edx	      1690	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_74
0x401170b	            0x740a	                            je 0x4011717	      1690	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_74
0x401170d	    0xc70500000000	               mov dword [0x04011717], 4	      1691	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_74
0x4011717	        0x488d5038	                   lea rdx, [rax + 0x38]	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x401171b	    0x488d8c249800	                   lea rcx, [rsp + 0x98]	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x4011723	          0x4d89e8	                             mov r8, r13	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x4011726	      0xbe00000000	                              mov esi, 0	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x401172b	          0x4889df	                            mov rdi, rbx	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x401172e	      0xe800000000	                          call 0x4011733	      1693	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	CALL_29
0x4011733	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x401173a	    0x8b8c24980000	            mov ecx, dword [rsp + 0x98] 	      1701	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x4011741	    0x448935000000	           mov dword [0x04011748], r14d 	      1695	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011748	          0x8d5001	                      lea edx, [rax + 1]	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x401174b	    0x488b05000000	            mov rax, qword [0x04011752] 	      1698	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_75
0x4011752	    0x899424a00000	             mov dword [rsp + 0xa0], edx	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011759	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011760	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011765	           0xf44d0	                          cmove edx, eax	      1697	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011768	          0x394b60	            cmp dword [rbx + 0x60], ecx 	      1701	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x401176b	     0xf8440060000	                            je 0x4011db1	      1701	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x4011771	    0x488b05000000	            mov rax, qword [0x04011778] 	      1704	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76	IF_77
0x4011778	          0x4839c5	                            cmp rbp, rax	      1704	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76	IF_77
0x401177b	        0x480f4fe8	                          cmovg rbp, rax	      1704	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76	IF_77
0x401177f	          0x4939c4	                            cmp r12, rax	      1704	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76	IF_77
0x4011782	        0x4c0f4ce0	                          cmovl r12, rax	      1704	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76	IF_77
0x4011786	          0x894b60	             mov dword [rbx + 0x60], ecx	      1709	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011789	          0x895364	             mov dword [rbx + 0x64], edx	      1710	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x401178c	    0x448b0d000000	            mov r9d, dword [0x04011793] 	      1710	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011793	      0xe970eaffff	                           jmp 0x4010208	      1710	screen.c	FUNCTION_20	IF_58	IF_59	IF_73
0x4011798	    0x4c89bbe80000	             mov qword [rbx + 0xe8], r15	      2299	screen.c	FUNCTION_20	ELSE_44	ELSE_46	IF_138
0x401179f	      0xe9c2f5ffff	                           jmp 0x4010d66	      2299	screen.c	FUNCTION_20	ELSE_44	ELSE_46	IF_138
0x40117a4	      0x48897c2408	                mov qword [rsp + 8], rdi	      2299	screen.c	FUNCTION_20	ELSE_44	ELSE_46	IF_138
0x40117a9	        0x8b442408	                mov eax, dword [rsp + 8]	      2033	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40117ad	    0x8983f8000000	             mov dword [rbx + 0xf8], eax	      2033	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40117b3	      0xe951faffff	                           jmp 0x4011209	      2034	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111	FOR_11	IF_112
0x40117b8	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117bc	    0x488b35000000	            mov rsi, qword [0x040117c3] 	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117c3	          0x4839f1	                            cmp rcx, rsi	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117c6	            0x7d09	                           jge 0x40117d1	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117c8	          0x4889f2	                            mov rdx, rsi	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117cb	          0x4889ce	                            mov rsi, rcx	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117ce	          0x4889d1	                            mov rcx, rdx	      1624	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_61
0x40117d1	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117d5	          0x4d89e0	                             mov r8, r12	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117d8	          0x4c39e2	                            cmp rdx, r12	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117db	        0x4c0f4ec2	                          cmovle r8, rdx	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117df	        0x4c0f4de2	                         cmovge r12, rdx	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117e3	          0x4939f0	                             cmp r8, rsi	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117e6	        0x490f4ef0	                          cmovle rsi, r8	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117ea	          0x4939cc	                            cmp r12, rcx	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117ed	          0x4889f5	                            mov rbp, rsi	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117f0	        0x4c0f4ce1	                          cmovl r12, rcx	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117f4	      0xe9fafeffff	                           jmp 0x40116f3	      1639	screen.c	FUNCTION_20	IF_58	IF_59	IF_60	IF_64
0x40117f9	    0x4c8ba3501500	          mov r12, qword [rbx + 0x1550] 	      1262	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4
0x4011800	          0x4d85e4	                           test r12, r12	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011803	            0x7423	                            je 0x4011828	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011805	           0xf1f00	                         nop dword [rax]	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011808	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      1265	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15
0x401180d	          0x4885ff	                           test rdi, rdi	      1265	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15
0x4011810	            0x740d	                            je 0x401181f	      1265	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15
0x4011812	      0xe800000000	                          call 0x4011817	      1266	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15	CALL_11
0x4011817	            0x85c0	                           test eax, eax	      1266	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15	CALL_11
0x4011819	     0xf8524f7ffff	                           jne 0x4010f43	      1266	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1	IF_15	CALL_11
0x401181f	        0x4d8b2424	                    mov r12, qword [r12]	      1271	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011823	          0x4d85e4	                           test r12, r12	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011826	            0x75e0	                           jne 0x4011808	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011828	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1263	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	ELSE_4	WHILE_1
0x4011830	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1119	screen.c	FUNCTION_20
0x4011838	      0xe916f7ffff	                           jmp 0x4010f53	      1119	screen.c	FUNCTION_20
0x401183d	    0x8b1500000000	            mov edx, dword [0x04011843] 	      1796	screen.c	FUNCTION_20	IF_90
0x4011843	          0x885350	               mov byte [rbx + 0x50], dl	      1796	screen.c	FUNCTION_20	IF_90
0x4011846	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1797	screen.c	FUNCTION_20	IF_90
0x401184a	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1800	screen.c	FUNCTION_20	IF_90
0x401184d	        0x48895358	             mov qword [rbx + 0x58], rdx	      1797	screen.c	FUNCTION_20	IF_90
0x4011851	    0x488b15000000	            mov rdx, qword [0x04011858] 	      1798	screen.c	FUNCTION_20	IF_90
0x4011858	          0x894374	             mov dword [rbx + 0x74], eax	      1800	screen.c	FUNCTION_20	IF_90
0x401185b	        0x48895368	             mov qword [rbx + 0x68], rdx	      1798	screen.c	FUNCTION_20	IF_90
0x401185f	    0x8b1500000000	            mov edx, dword [0x04011865] 	      1799	screen.c	FUNCTION_20	IF_90
0x4011865	          0x895370	             mov dword [rbx + 0x70], edx	      1799	screen.c	FUNCTION_20	IF_90
0x4011868	      0xe97ce5ffff	                           jmp 0x400fde9	      1800	screen.c	FUNCTION_20	IF_90
0x401186d	          0x4889df	                            mov rdi, rbx	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x4011870	      0xe800000000	                          call 0x4011875	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x4011875	            0x85c0	                           test eax, eax	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x4011877	     0xf8443010000	                            je 0x40119c0	      1277	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_12
0x401187d	    0x8b8bf8000000	            mov ecx, dword [rbx + 0xf8] 	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x4011883	        0x4c8b6b78	            mov r13, qword [rbx + 0x78] 	      1293	screen.c	FUNCTION_20	ELSE_2	IF_16
0x4011887	    0x41bcffffff7f	                    mov r12d, 0x7fffffff	      1294	screen.c	FUNCTION_20	ELSE_2	IF_16
0x401188d	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      1294	screen.c	FUNCTION_20	ELSE_2	IF_16
0x4011895	            0x85c9	                           test ecx, ecx	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x4011897	     0xf8eac000000	                           jle 0x4011949	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x401189d	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x40118a4	    0x4c8b05000000	              mov r8, qword [0x040118ab]	      2629	screen.c	FUNCTION_24
0x40118ab	          0x83e901	                              sub ecx, 1	      2629	screen.c	FUNCTION_24
0x40118ae	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	      2629	screen.c	FUNCTION_24
0x40118b2	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      2629	screen.c	FUNCTION_24
0x40118ba	    0x4c8b9c249000	            mov r11, qword [rsp + 0x90] 	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x40118c2	    0x4c8b35000000	            mov r14, qword [0x040118c9] 	      2629	screen.c	FUNCTION_24
0x40118c9	    0x41bcffffff7f	                    mov r12d, 0x7fffffff	      2629	screen.c	FUNCTION_24
0x40118cf	    0x41bf01000000	                             mov r15d, 1	      2629	screen.c	FUNCTION_24
0x40118d5	          0x4489c7	                            mov edi, r8d	      2629	screen.c	FUNCTION_24
0x40118d8	        0x488d420a	                    lea rax, [rdx + 0xa]	      2629	screen.c	FUNCTION_24
0x40118dc	      0x488d4cca22	          lea rcx, [rdx + rcx*8 + 0x22] 	      2629	screen.c	FUNCTION_24
0x40118e1	            0xeb0e	                           jmp 0x40118f1	      2629	screen.c	FUNCTION_24
0x40118e3	       0xf1f440000	                   nop dword [rax + rax]	      2629	screen.c	FUNCTION_24
0x40118e8	        0x4883c018	                           add rax, 0x18	      2629	screen.c	FUNCTION_24
0x40118ec	          0x4839c8	                            cmp rax, rcx	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x40118ef	            0x7458	                            je 0x4011949	      1295	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1
0x40118f1	          0x803800	                       cmp byte [rax], 0	      1296	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17
0x40118f4	            0x74f2	                            je 0x40118e8	      1296	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17
0x40118f6	        0x488b5006	                mov rdx, qword [rax + 6]	      1298	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_18
0x40118fa	        0x4c8d4a01	                       lea r9, [rdx + 1]	      1299	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_18
0x40118fe	          0x4839f2	                            cmp rdx, rsi	      1299	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_18
0x4011901	        0x4d0f4ce9	                           cmovl r13, r9	      1299	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_18
0x4011905	    0x4981fcffffff	                     cmp r12, 0x7fffffff	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x401190c	            0x75da	                           jne 0x40118e8	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x401190e	        0x4c8b48f6	               mov r9, qword [rax - 0xa]	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x4011912	          0x4d39d9	                             cmp r9, r11	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x4011915	            0x7cd1	                            jl 0x40118e8	      1300	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19
0x4011917	          0x4c39f3	                            cmp rbx, r14	      2629	screen.c	FUNCTION_24
0x401191a	    0x488b93c80100	           mov rdx, qword [rbx + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x4011921	          0x4189fa	                           mov r10d, edi	      2629	screen.c	FUNCTION_24
0x4011924	     0xf8489070000	                            je 0x40120b3	      2629	screen.c	FUNCTION_24
0x401192a	    0x448ba3ac0000	           mov r12d, dword [rbx + 0xac] 	      2632	screen.c	FUNCTION_24	IF_1
0x4011931	          0x4529d4	                          sub r12d, r10d	      2632	screen.c	FUNCTION_24	IF_1
0x4011934	          0x4439e2	                           cmp edx, r12d	      1305	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20	CALL_13
0x4011937	        0x410f4fd4	                         cmovg edx, r12d	      1305	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20	CALL_13
0x401193b	          0x4531e4	                          xor r12d, r12d	      1306	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20
0x401193e	            0x85d2	                           test edx, edx	      1306	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20
0x4011940	        0x410f9fc4	                               setg r12b	      1306	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20
0x4011944	          0x4d01cc	                             add r12, r9	      1306	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20
0x4011947	            0xeb9f	                           jmp 0x40118e8	      1306	screen.c	FUNCTION_20	ELSE_2	IF_16	FOR_1	IF_17	IF_19	IF_20
0x4011949	    0x488d94248800	                   lea rdx, [rsp + 0x88]	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x4011951	          0x4531c9	                            xor r9d, r9d	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x4011954	            0x31c9	                            xor ecx, ecx	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x4011956	    0x41b801000000	                              mov r8d, 1	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x401195c	          0x4889df	                            mov rdi, rbx	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x401195f	      0xe800000000	                          call 0x4011964	      1310	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_14
0x4011964	    0x4c39ac248800	            cmp qword [rsp + 0x88], r13 	      1311	screen.c	FUNCTION_20	ELSE_2	IF_16	IF_21
0x401196c	            0x7e08	                           jle 0x4011976	      1311	screen.c	FUNCTION_20	ELSE_2	IF_16	IF_21
0x401196e	    0x4c89ac248800	             mov qword [rsp + 0x88], r13	      1312	screen.c	FUNCTION_20	ELSE_2	IF_16	IF_21
0x4011976	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      1315	screen.c	FUNCTION_20	ELSE_2	IF_16
0x401197e	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x4011986	          0x4531c9	                            xor r9d, r9d	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x4011989	            0x31d2	                            xor edx, edx	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x401198b	    0x41b801000000	                              mov r8d, 1	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x4011991	          0x4889df	                            mov rdi, rbx	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x4011994	        0x488d70ff	                      lea rsi, [rax - 1]	      1315	screen.c	FUNCTION_20	ELSE_2	IF_16
0x4011998	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      1315	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119a0	      0xe800000000	                          call 0x40119a5	      1316	screen.c	FUNCTION_20	ELSE_2	IF_16	CALL_15
0x40119a5	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      1317	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119ad	        0x4883c001	                              add rax, 1	      1317	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119b1	          0x4c39e0	                            cmp rax, r12	      1317	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119b4	        0x4c0f4de0	                         cmovge r12, rax	      1317	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119b8	    0x4c89a4249000	             mov qword [rsp + 0x90], r12	      1317	screen.c	FUNCTION_20	ELSE_2	IF_16
0x40119c0	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119c8	          0x4885d2	                           test rdx, rdx	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119cb	     0xf84d7070000	                            je 0x40121a8	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119d1	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119d5	          0x4839c2	                            cmp rdx, rax	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119d8	            0x7d73	                           jge 0x4011a4d	      1327	screen.c	FUNCTION_20	ELSE_2	IF_23
0x40119da	    0x483b84249000	            cmp rax, qword [rsp + 0x90] 	      1329	screen.c	FUNCTION_20	ELSE_2	IF_23	IF_24
0x40119e2	     0xf8da8030000	                           jge 0x4011d90	      1329	screen.c	FUNCTION_20	ELSE_2	IF_23	IF_24
0x40119e8	    0x488984248800	             mov qword [rsp + 0x88], rax	      1330	screen.c	FUNCTION_20	ELSE_2	IF_23	IF_24
0x40119f0	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1107	screen.c	FUNCTION_20
0x40119f8	          0x4885c0	                           test rax, rax	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x40119fb	     0xf8463f5ffff	                            je 0x4010f64	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a01	        0x488b0424	                    mov rax, qword [rsp]	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a05	    0x4883b8200100	              cmp qword [rax + 0x120], 0	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a0d	     0xf8451f5ffff	                            je 0x4010f64	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a13	    0x448b93380200	          mov r10d, dword [rbx + 0x238] 	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a1a	          0x4585d2	                         test r10d, r10d	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a1d	     0xf8441f5ffff	                            je 0x4010f64	      1339	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a23	    0x48c784249000	     mov qword [rsp + 0x90], 0x7fffffff 	      1340	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a2f	      0xe930f5ffff	                           jmp 0x4010f64	      1340	screen.c	FUNCTION_20	ELSE_2	IF_26
0x4011a34	        0x488b3c24	                    mov rdi, qword [rsp]	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4011a38	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4011a3f	          0x4839d0	                            cmp rax, rdx	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4011a42	     0xf8ddef4ffff	                           jge 0x4010f26	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4011a48	      0xe9d1f4ffff	                           jmp 0x4010f1e	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_9	IF_13
0x4011a4d	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1107	screen.c	FUNCTION_20
0x4011a55	            0xebaa	                           jmp 0x4011a01	      1107	screen.c	FUNCTION_20
0x4011a57	            0xa801	                              test al, 1	      2256	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x4011a59	     0xf84e3020000	                            je 0x4011d42	      2256	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133
0x4011a5f	    0x8bb3a8010000	           mov esi, dword [rbx + 0x1a8] 	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a65	     0x3b39c000000	             add esi, dword [rbx + 0x9c]	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a6b	        0x4883ec08	                              sub rsp, 8	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a6f	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2263	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_71
0x4011a75	     0x38ba8000000	             add ecx, dword [rbx + 0xa8]	      2263	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_71
0x4011a7b	    0x41b940000000	                           mov r9d, 0x40	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a81	    0x8b0500000000	            mov eax, dword [0x04011a87] 	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a87	          0x4401c6	                            add esi, r8d	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a8a	    0x41b840000000	                           mov r8d, 0x40	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a90	          0x8d51fd	                      lea edx, [rcx - 3]	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a93	          0x8d7eff	                      lea edi, [rsi - 1]	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a96	              0x50	                                push rax	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a97	      0xe93dfbffff	                           jmp 0x40115d9	      2261	screen.c	FUNCTION_20	IF_129	ELSE_42	IF_133	CALL_68
0x4011a9c	          0x4c89f5	                            mov rbp, r14	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011a9f	    0x4803ab000100	            add rbp, qword [rbx + 0x100]	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011aa6	      0xba01000000	                              mov edx, 1	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011aab	          0x4c89fe	                            mov rsi, r15	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011aae	          0x4889df	                            mov rdi, rbx	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011ab1	      0xe800000000	                          call 0x4011ab6	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011ab6	        0x66894508	                  mov word [rbp + 8], ax	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011aba	      0xe9d1f1ffff	                           jmp 0x4010c90	      2145	screen.c	FUNCTION_20	FOR_8	IF_94	IF_119	CALL_52
0x4011abf	          0x4d63e4	                        movsxd r12, r12d	      1488	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4011ac2	        0x4983fcff	             cmp r12, 0xffffffffffffffff	      1493	screen.c	FUNCTION_20	IF_31	ELSE_12	IF_44
0x4011ac6	          0x4d89e6	                            mov r14, r12	      1488	screen.c	FUNCTION_20	IF_31	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_43
0x4011ac9	     0xf8423060000	                            je 0x40120f2	      1493	screen.c	FUNCTION_20	IF_31	ELSE_12	IF_44
0x4011acf	          0x483b37	                    cmp rsi, qword [rdi]	      1508	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_45
0x4011ad2	     0xf8568010000	                           jne 0x4011c40	      1508	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_45
0x4011ad8	    0x4403ab880000	            add r13d, dword [rbx + 0x88]	      1509	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_45
0x4011adf	    0x442bab840000	            sub r13d, dword [rbx + 0x84]	      1513	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13
0x4011ae6	          0x4585ed	                         test r13d, r13d	      1515	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46
0x4011ae9	     0xf8f06010000	                            jg 0x4011bf5	      1515	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46
0x4011aef	            0x31c0	                            xor eax, eax	      1515	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46
0x4011af1	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1113	screen.c	FUNCTION_20
0x4011af9	          0x4585ed	                         test r13d, r13d	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011afc	            0x7408	                            je 0x4011b06	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011afe	            0x84c0	                             test al, al	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b00	     0xf84cf000000	                            je 0x4011bd5	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b06	    0x8b93f8000000	            mov edx, dword [rbx + 0xf8] 	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b0c	            0x85d2	                           test edx, edx	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b0e	     0xf84c1000000	                            je 0x4011bd5	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b14	        0x4b8d3c64	                  lea rdi, [r12 + r12*2]	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b18	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b1f	            0x31d2	                            xor edx, edx	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b21	            0x31f6	                            xor esi, esi	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b23	          0x4531c0	                            xor r8d, r8d	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b26	        0x48c1e703	                              shl rdi, 3	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b2a	            0xeb28	                           jmp 0x4011b54	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b2c	         0xf1f4000	                         nop dword [rax]	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011b30	    0x410fb74c1408	        movzx ecx, word [r12 + rdx + 8] 	      1545	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b36	        0x4983c601	                              add r14, 1	      1548	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011b3a	          0x83c601	                              add esi, 1	      1545	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b3d	        0x4883c218	                           add rdx, 0x18	      1545	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b41	          0x4101c8	                            add r8d, ecx	      1545	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b44	    0x48638bf80000	         movsxd rcx, dword [rbx + 0xf8] 	      1548	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011b4b	          0x4939ce	                            cmp r14, rcx	      1548	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011b4e	     0xf8db0030000	                           jge 0x4011f04	      1548	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011b54	        0x488d0c3a	                    lea rcx, [rdx + rdi]	      1548	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011b58	          0x4585ed	                         test r13d, r13d	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b5b	        0x4c8b0c08	               mov r9, qword [rax + rcx]	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b5f	        0x4c890c10	               mov qword [rax + rdx], r9	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b63	      0x4c8b4c0808	          mov r9, qword [rax + rcx + 8] 	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b68	      0x4c894c1008	           mov qword [rax + rdx + 8], r9	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b6d	      0x4c8b4c0810	       mov r9, qword [rax + rcx + 0x10] 	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b72	      0x4c894c1010	        mov qword [rax + rdx + 0x10], r9	      1536	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6
0x4011b77	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      1540	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b7e	          0x4989c4	                            mov r12, rax	      1540	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b81	            0x7ead	                           jle 0x4011b30	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b83	    0x440fb74c0808	        movzx r9d, word [rax + rcx + 8] 	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b89	        0x438d0c28	                     lea ecx, [r8 + r13]	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b8d	          0x4401c9	                            add ecx, r9d	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b90	    0x3b8ba0000000	            cmp ecx, dword [rbx + 0xa0] 	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b96	            0x7e98	                           jle 0x4011b30	      1539	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b98	          0x83c601	                              add esi, 1	      1542	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011b9b	      0x4489442470	             mov dword [rsp + 0x70], r8d	      1542	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011ba0	    0x89b3f8000000	             mov dword [rbx + 0xf8], esi	      1542	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_49
0x4011ba6	    0x8b83c0010000	           mov eax, dword [rbx + 0x1c0] 	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bac	            0x85c0	                           test eax, eax	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bae	            0x7425	                            je 0x4011bd5	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bb0	        0x8b4c2470	            mov ecx, dword [rsp + 0x70] 	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bb4	            0x85c9	                           test ecx, ecx	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bb6	            0x741d	                            je 0x4011bd5	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bb8	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1559	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51	CALL_26
0x4011bbc	      0xba01000000	                              mov edx, 1	      1559	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51	CALL_26
0x4011bc1	          0x4889df	                            mov rdi, rbx	      1559	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51	CALL_26
0x4011bc4	      0xe800000000	                          call 0x4011bc9	      1559	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51	CALL_26
0x4011bc9	     0x38384000000	             add eax, dword [rbx + 0x84]	      1558	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bcf	    0x664189442408	                  mov word [r12 + 8], ax	      1558	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bd5	          0x4531ff	                          xor r15d, r15d	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011bd8	    0xc7442438e703	          mov dword [rsp + 0x38], 0x3e7 	      1557	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	IF_51
0x4011be0	    0xc74424680000	               mov dword [rsp + 0x68], 0	      1111	screen.c	FUNCTION_20
0x4011be8	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1111	screen.c	FUNCTION_20
0x4011bf0	      0xe9cbe5ffff	                           jmp 0x40101c0	      1111	screen.c	FUNCTION_20
0x4011bf5	            0x31ff	                            xor edi, edi	      1517	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	CALL_24
0x4011bf7	      0xe800000000	                          call 0x4011bfc	      1517	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	CALL_24
0x4011bfc	    0x48391d000000	            cmp qword [0x04011c03], rbx 	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c03	    0x41b900000000	                              mov r9d, 0	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c09	          0x4489ea	                           mov edx, r13d	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c0c	          0x4889df	                            mov rdi, rbx	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c0f	        0x410f94c0	                                sete r8b	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c13	            0x31c9	                            xor ecx, ecx	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c15	            0x31f6	                            xor esi, esi	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c17	        0x450fb6c0	                          movzx r8d, r8b	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c1b	      0xe800000000	                          call 0x4011c20	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c20	          0x83f801	                              cmp eax, 1	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c23	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011c29	     0xf8485020000	                            je 0x4011eb4	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c2f	        0x89442468	             mov dword [rsp + 0x68], eax	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c33	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c3b	      0xe959e5ffff	                           jmp 0x4010199	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011c40	          0x4889df	                            mov rdi, rbx	      1511	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	CALL_23
0x4011c43	      0xe800000000	                          call 0x4011c48	      1511	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	CALL_23
0x4011c48	          0x4101c5	                           add r13d, eax	      1511	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	CALL_23
0x4011c4b	      0xe98ffeffff	                           jmp 0x4011adf	      1511	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	CALL_23
0x4011c50	          0x8b7370	            mov esi, dword [rbx + 0x70] 	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c53	    0x393500000000	            cmp dword [0x04011c59], esi 	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c59	     0xf8573faffff	                           jne 0x40116d2	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c5f	      0xe98ffaffff	                           jmp 0x40116f3	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c64	        0x488b0424	                    mov rax, qword [rsp]	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c68	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c6f	      0xe953f2ffff	                           jmp 0x4010ec7	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c74	          0x4989ec	                            mov r12, rbp	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c77	      0xe942faffff	                           jmp 0x40116be	      1665	screen.c	FUNCTION_20	IF_58	IF_59	ELSE_18	IF_68
0x4011c7c	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      1400	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4011c82	    0x398384000000	            cmp dword [rbx + 0x84], eax 	      1400	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4011c88	     0xf8eb9e4ffff	                           jle 0x4010147	      1400	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33
0x4011c8e	          0x4889df	                            mov rdi, rbx	      1408	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	CALL_17
0x4011c91	      0xe800000000	                          call 0x4011c96	      1408	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	CALL_17
0x4011c96	            0x85c0	                           test eax, eax	      1408	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	CALL_17
0x4011c98	     0xf8421010000	                            je 0x4011dbf	      1408	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	CALL_17
0x4011c9e	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011ca2	    0x4c8ba3000100	           mov r12, qword [rbx + 0x100] 	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011ca9	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011cb1	        0x493b3424	                    cmp rsi, qword [r12]	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011cb5	     0xf8d0c040000	                           jge 0x40120c7	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011cbb	    0x83bba0000000	               cmp dword [rbx + 0xa0], 3	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011cc2	    0x41be01000000	                             mov r14d, 1	      1417	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011cc8	     0xf8e00010000	                           jle 0x4011dce	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011cce	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011cd6	            0xeb15	                           jmp 0x4011ced	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011cd8	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011cde	        0x4983c601	                              add r14, 1	      1417	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011ce2	          0x8d50fe	                      lea edx, [rax - 2]	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011ce5	          0x4863d2	                         movsxd rdx, edx	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011ce8	          0x4939d6	                            cmp r14, rdx	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011ceb	            0x7d3d	                           jge 0x4011d2a	      1418	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	IF_35
0x4011ced	          0x4531c9	                            xor r9d, r9d	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011cf0	            0x31d2	                            xor edx, edx	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011cf2	    0x41b801000000	                              mov r8d, 1	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011cf8	          0x4c89e9	                            mov rcx, r13	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011cfb	          0x4889df	                            mov rdi, rbx	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011cfe	      0xe800000000	                          call 0x4011d03	      1420	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3	CALL_18
0x4011d03	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d0b	    0x4c8ba3000100	           mov r12, qword [rbx + 0x100] 	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d12	        0x488d7001	                      lea rsi, [rax + 1]	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d16	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d1e	        0x49393424	                    cmp qword [r12], rsi	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d22	            0x7fb4	                            jg 0x4011cd8	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d24	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1415	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34	FOR_3
0x4011d2a	          0x8d50fe	                      lea edx, [rax - 2]	      1426	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36
0x4011d2d	          0x4863d2	                         movsxd rdx, edx	      1426	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36
0x4011d30	          0x4939d6	                            cmp r14, rdx	      1426	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36
0x4011d33	     0xf8c75020000	                            jl 0x4011fae	      1426	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36
0x4011d39	        0x89442468	             mov dword [rsp + 0x68], eax	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011d3d	      0xe957e4ffff	                           jmp 0x4010199	      1524	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48
0x4011d42	    0x41b902000000	                              mov r9d, 2	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d48	            0x89e9	                            mov ecx, ebp	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d4a	      0xba20000000	                           mov edx, 0x20	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d4f	      0xbe40000000	                           mov esi, 0x40	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d54	          0x4889df	                            mov rdi, rbx	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d57	      0xe89437ffff	                   call sym.win_draw_end	      2270	screen.c	FUNCTION_20	IF_129	ELSE_43	CALL_74
0x4011d5c	    0x4c89bbe80000	             mov qword [rbx + 0xe8], r15	      2271	screen.c	FUNCTION_20	IF_129	ELSE_43
0x4011d63	      0xe982efffff	                           jmp 0x4010cea	      2271	screen.c	FUNCTION_20	IF_129	ELSE_43
0x4011d68	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      2271	screen.c	FUNCTION_20	IF_129	ELSE_43
0x4011d70	          0x4531ff	                          xor r15d, r15d	      1115	screen.c	FUNCTION_20
0x4011d73	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011d7b	    0xc7442438e703	          mov dword [rsp + 0x38], 0x3e7 	      1518	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47	CALL_25
0x4011d83	    0xc74424680000	               mov dword [rsp + 0x68], 0	      1111	screen.c	FUNCTION_20
0x4011d8b	      0xe930e4ffff	                           jmp 0x40101c0	      1111	screen.c	FUNCTION_20
0x4011d90	          0x4889df	                            mov rdi, rbx	      1332	screen.c	FUNCTION_20	ELSE_2	IF_23	ELSE_5	IF_25	CALL_16
0x4011d93	      0xe800000000	                          call 0x4011d98	      1332	screen.c	FUNCTION_20	ELSE_2	IF_23	ELSE_5	IF_25	CALL_16
0x4011d98	            0x85c0	                           test eax, eax	      1107	screen.c	FUNCTION_20
0x4011d9a	           0xf95c0	                                setne al	      1107	screen.c	FUNCTION_20
0x4011d9d	           0xfb6c0	                           movzx eax, al	      1107	screen.c	FUNCTION_20
0x4011da0	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1107	screen.c	FUNCTION_20
0x4011da4	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1107	screen.c	FUNCTION_20
0x4011dac	      0xe947fcffff	                           jmp 0x40119f8	      1107	screen.c	FUNCTION_20
0x4011db1	          0x395364	            cmp dword [rbx + 0x64], edx 	      1702	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x4011db4	     0xf85b7f9ffff	                           jne 0x4011771	      1702	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x4011dba	      0xe9c7f9ffff	                           jmp 0x4011786	      1702	screen.c	FUNCTION_20	IF_58	IF_59	IF_73	IF_76
0x4011dbf	    0x4c8ba3000100	           mov r12, qword [rbx + 0x100] 	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011dc6	        0x4d8b3424	                    mov r14, qword [r12]	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011dca	        0x4c2b7378	             sub r14, qword [rbx + 0x78]	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011dce	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011dd4	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011ddc	      0xe949ffffff	                           jmp 0x4011d2a	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011de1	            0x89c1	                            mov ecx, eax	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011de3	          0x4489ea	                           mov edx, r13d	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011de6	      0xbe02000000	                              mov esi, 2	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011deb	      0xbf00000000	                              mov edi, 0	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011df0	      0xe8db1bffff	        call sym.screen_puts_len.part.16	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011df5	    0x448b05000000	            mov r8d, dword [0x04011dfc] 	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011dfc	    0x8b83a8000000	            mov eax, dword [rbx + 0xa8] 	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011e02	      0xe9aff7ffff	                           jmp 0x40115b6	      1425	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8
0x4011e07	          0x4939d7	                            cmp r15, rdx	      2869	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e0a	            0x7f10	                            jg 0x4011e1c	      2869	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e0c	     0xf8582e8ffff	                           jne 0x4010694	      2870	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e12	        0x83780800	                  cmp dword [rax + 8], 0	      2871	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e16	     0xf8578e8ffff	                           jne 0x4010694	      2871	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e1c	      0x48394c2440	            cmp qword [rsp + 0x40], rcx 	      2872	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e21	     0xf8c96f4ffff	                            jl 0x40112bd	      2872	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e27	     0xf8567e8ffff	                           jne 0x4010694	      2873	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e2d	    0x488b05000000	            mov rax, qword [0x04011e34] 	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e34	          0x8b5608	                mov edx, dword [rsi + 8]	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e37	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e3c	          0x803865	                    cmp byte [rax], 0x65	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e3f	           0xf94c0	                                 sete al	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e42	           0xfb6c0	                           movzx eax, al	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e45	            0x29c2	                            sub edx, eax	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e47	        0x89542448	             mov dword [rsp + 0x48], edx	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e4b	            0x31d2	                            xor edx, edx	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e4d	      0xe800000000	                          call 0x4011e52	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e52	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e56	          0x4889c7	                            mov rdi, rax	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e59	            0x31c0	                            xor eax, eax	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e5b	            0xf2ae	              repne scasb al, byte [rdi]	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e5d	          0x4889c8	                            mov rax, rcx	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e60	          0x48f7d0	                                 not rax	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e63	        0x4883e801	                              sub rax, 1	      2875	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x4011e67	        0x39442448	            cmp dword [rsp + 0x48], eax 	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e6b	     0xf8c23e8ffff	                            jl 0x4010694	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e71	    0x448b05000000	            mov r8d, dword [0x04011e78] 	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e78	      0xe936f4ffff	                           jmp 0x40112b3	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e7d	           0xf1f00	                         nop dword [rax]	      2874	screen.c	FUNCTION_25	IF_19	IF_21
0x4011e80	            0x29e9	                            sub ecx, ebp	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e82	            0x85c9	                           test ecx, ecx	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e84	     0xf8e10e8ffff	                           jle 0x401069a	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e8a	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e8f	    0x488b35000000	            mov rsi, qword [0x04011e96] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e96	     0xfb73d000000	           movzx edi, word [0x04011e9d] 	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011e9d	        0x488d3446	                  lea rsi, [rsi + rax*2]	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011ea1	            0x31c0	                            xor eax, eax	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011ea3	        0x66893c46	              mov word [rsi + rax*2], di	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011ea7	        0x4883c001	                              add rax, 1	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011eab	            0x39c1	                            cmp ecx, eax	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011ead	            0x7ff4	                            jg 0x4011ea3	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011eaf	      0xe9e6e7ffff	                           jmp 0x401069a	      2895	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x4011eb4	          0x4429e8	                           sub eax, r13d	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011eb7	      0x3de6030000	                          cmp eax, 0x3e6	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011ebc	        0x89442470	             mov dword [rsp + 0x70], eax	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011ec0	           0xf9ec0	                                setle al	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011ec3	      0xe931fcffff	                           jmp 0x4011af9	      1520	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	IF_46	IF_47
0x4011ec8	    0x833d00000000	               cmp dword [0x04011ecf], 1	      1577	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_54
0x4011ecf	     0xf84b4000000	                            je 0x4011f89	      1577	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_54
0x4011ed5	      0xe800000000	                          call 0x4011eda	      1578	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_27
0x4011eda	    0x833d00000000	               cmp dword [0x04011ee1], 0	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011ee1	     0xf84c6e2ffff	                            je 0x40101ad	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011ee7	      0xe8c468ffff	                   call sym.draw_tabline	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011eec	          0x4531ff	                          xor r15d, r15d	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011eef	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011ef7	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011eff	      0xe9bce2ffff	                           jmp 0x40101c0	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011f04	      0x4489442470	             mov dword [rsp + 0x70], r8d	      1581	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	CALL_28
0x4011f09	    0x89b3f8000000	             mov dword [rbx + 0xf8], esi	      1550	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011f0f	      0xe992fcffff	                           jmp 0x4011ba6	      1551	screen.c	FUNCTION_20	IF_31	ELSE_12	ELSE_13	ELSE_15	IF_48	FOR_6	IF_50
0x4011f14	          0x8b7360	            mov esi, dword [rbx + 0x60] 	      2880	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x4011f17	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2880	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x4011f1d	        0x8d443500	                    lea eax, [rbp + rsi]	      2880	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x4011f21	            0x39d0	                            cmp eax, edx	      2880	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x4011f23	     0xf8d71e7ffff	                           jge 0x401069a	      2880	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x4011f29	          0x8b4b64	            mov ecx, dword [rbx + 0x64] 	      2882	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f2c	    0x81f9ffffff7f	                     cmp ecx, 0x7fffffff	      2882	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f32	            0x7408	                            je 0x4011f3c	      2882	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f34	        0x8d7c0d00	                    lea edi, [rbp + rcx]	      2883	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f38	            0x39fa	                            cmp edx, edi	      2883	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f3a	            0x7f04	                            jg 0x4011f40	      2883	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x4011f3c	            0x89d1	                            mov ecx, edx	      2887	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x4011f3e	            0x29e9	                            sub ecx, ebp	      2887	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x4011f40	            0x29f1	                            sub ecx, esi	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f42	    0x83bb54020000	              cmp dword [rbx + 0x254], 0	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f49	     0xf8529010000	                           jne 0x4012078	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f4f	            0x85c9	                           test ecx, ecx	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f51	     0xf8e43e7ffff	                           jle 0x401069a	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f57	         0x3442420	             add eax, dword [rsp + 0x20]	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f5b	    0x488b3d000000	            mov rdi, qword [0x04011f62] 	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f62	     0xfb735000000	           movzx esi, word [0x04011f69] 	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f69	            0x4898	                                    cdqe	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f6b	        0x488d3c47	                  lea rdi, [rdi + rax*2]	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f6f	            0x31c0	                            xor eax, eax	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f71	        0x66893447	              mov word [rdi + rax*2], si	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f75	        0x4883c001	                              add rax, 1	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f79	            0x39c1	                            cmp ecx, eax	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f7b	            0x7ff4	                            jg 0x4011f71	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f7d	      0xe918e7ffff	                           jmp 0x401069a	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4011f82	            0x89e9	                            mov ecx, ebp	      2025	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111
0x4011f84	      0xe920f8ffff	                           jmp 0x40117a9	      2025	screen.c	FUNCTION_20	FOR_8	IF_94	IF_96	ELSE_26	IF_110	IF_111
0x4011f89	    0x833d00000000	               cmp dword [0x04011f90], 0	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011f90	     0xf8551ffffff	                           jne 0x4011ee7	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011f96	    0xc7442470e703	          mov dword [rsp + 0x70], 0x3e7 	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011f9e	          0x4531ff	                          xor r15d, r15d	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011fa1	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011fa9	      0xe91fe2ffff	                           jmp 0x40101cd	      1580	screen.c	FUNCTION_20	IF_31	IF_52	IF_53	IF_55
0x4011fae	        0x498b1424	                    mov rdx, qword [r12]	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fb2	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fb6	          0x4889df	                            mov rdi, rbx	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fb9	        0x4883ea01	                              sub rdx, 1	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fbd	      0xe800000000	                          call 0x4011fc2	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fc2	          0x4189c4	                           mov r12d, eax	      1428	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	CALL_19
0x4011fc5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      1431	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37
0x4011fcc	          0x488b30	                    mov rsi, qword [rax]	      1431	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37
0x4011fcf	        0x483b7378	            cmp rsi, qword [rbx + 0x78] 	      1431	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37
0x4011fd3	            0x7411	                            je 0x4011fe6	      1431	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37
0x4011fd5	          0x4889df	                            mov rdi, rbx	      1432	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37	CALL_20
0x4011fd8	      0xe800000000	                          call 0x4011fdd	      1432	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37	CALL_20
0x4011fdd	    0x2b8388000000	             sub eax, dword [rbx + 0x88]	      1432	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37	CALL_20
0x4011fe3	          0x4101c4	                           add r12d, eax	      1432	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_37	CALL_20
0x4011fe6	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1435	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38
0x4011fec	          0x8d50fe	                      lea edx, [rax - 2]	      1435	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38
0x4011fef	          0x4139d4	                           cmp r12d, edx	      1435	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38
0x4011ff2	     0xf8d41fdffff	                           jge 0x4011d39	      1435	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38
0x4011ff8	          0x4585e4	                         test r12d, r12d	      1442	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_39
0x4011ffb	            0x7e07	                           jle 0x4012004	      1442	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_39
0x4011ffd	            0x31ff	                            xor edi, edi	      1443	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	CALL_21
0x4011fff	      0xe800000000	                          call 0x4012004	      1443	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	CALL_21
0x4012004	          0x4531c0	                            xor r8d, r8d	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012007	    0x48391d000000	            cmp qword [0x0401200e], rbx 	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x401200e	          0x4489e2	                           mov edx, r12d	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012011	          0x4889df	                            mov rdi, rbx	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012014	        0x410f94c0	                                sete r8b	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012018	            0x31c9	                            xor ecx, ecx	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x401201a	            0x31f6	                            xor esi, esi	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x401201c	      0xe800000000	                          call 0x4012021	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012021	          0x83e801	                              sub eax, 1	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012024	     0xf84db000000	                            je 0x4012105	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x401202a	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012030	      0xe904fdffff	                           jmp 0x4011d39	      1444	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	CALL_22
0x4012035	          0x4889df	                            mov rdi, rbx	      1884	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_34
0x4012038	      0xe800000000	                          call 0x401203d	      1884	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_34
0x401203d	            0x85c0	                           test eax, eax	      1884	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_34
0x401203f	     0xf84cbdeffff	                            je 0x400ff10	      1884	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_34
0x4012045	          0x4889df	                            mov rdi, rbx	      1887	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_35
0x4012048	      0xe800000000	                          call 0x401204d	      1887	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_35
0x401204d	            0x85c0	                           test eax, eax	      1885	screen.c	FUNCTION_20	FOR_8	IF_94
0x401204f	     0xf8588000000	                           jne 0x40120dd	      1885	screen.c	FUNCTION_20	FOR_8	IF_94
0x4012055	          0x4c89ff	                            mov rdi, r15	      1890	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_37
0x4012058	      0xe800000000	                          call 0x401205d	      1890	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_37
0x401205d	            0x85c0	                           test eax, eax	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x401205f	     0xf8561dfffff	                           jne 0x400ffc6	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x4012065	      0xe9a6deffff	                           jmp 0x400ff10	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x401206a	          0x4489ed	                           mov ebp, r13d	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x401206d	          0x4189c4	                           mov r12d, eax	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x4012070	          0x4531ed	                          xor r13d, r13d	      1127	screen.c	FUNCTION_20
0x4012073	      0xe925ecffff	                           jmp 0x4010c9d	      1127	screen.c	FUNCTION_20
0x4012078	            0x85c9	                           test ecx, ecx	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x401207a	     0xf8e1ae6ffff	                           jle 0x401069a	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4012080	            0x89d7	                            mov edi, edx	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4012082	     0xfb735000000	           movzx esi, word [0x04012089] 	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4012089	            0x29c7	                            sub edi, eax	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x401208b	            0x89f8	                            mov eax, edi	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x401208d	    0x488b3d000000	            mov rdi, qword [0x04012094] 	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4012094	            0x29c8	                            sub eax, ecx	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x4012096	         0x3442420	             add eax, dword [rsp + 0x20]	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x401209a	            0x4898	                                    cdqe	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x401209c	        0x488d3c47	                  lea rdi, [rdi + rax*2]	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120a0	            0x31c0	                            xor eax, eax	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120a2	        0x66893447	              mov word [rdi + rax*2], si	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120a6	        0x4883c001	                              add rax, 1	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120aa	            0x39c1	                            cmp ecx, eax	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120ac	            0x7ff4	                            jg 0x40120a2	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120ae	      0xe9e7e5ffff	                           jmp 0x401069a	      2888	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x40120b3	          0x4d85c0	                             test r8, r8	      2629	screen.c	FUNCTION_24
0x40120b6	          0x4589fa	                          mov r10d, r15d	      2629	screen.c	FUNCTION_24
0x40120b9	        0x440f45d7	                        cmovne r10d, edi	      2629	screen.c	FUNCTION_24
0x40120bd	      0xe968f8ffff	                           jmp 0x401192a	      2629	screen.c	FUNCTION_24
0x40120c2	      0xe800000000	                          call 0x40120c7	      2355	screen.c	FUNCTION_20
0x40120c7	          0x4531f6	                          xor r14d, r14d	      1414	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34
0x40120ca	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1414	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34
0x40120d0	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1414	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34
0x40120d8	      0xe94dfcffff	                           jmp 0x4011d2a	      1414	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	IF_34
0x40120dd	          0x4889df	                            mov rdi, rbx	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120e0	      0xe800000000	                          call 0x40120e5	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120e5	            0x85c0	                           test eax, eax	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120e7	     0xf85d9deffff	                           jne 0x400ffc6	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120ed	      0xe963ffffff	                           jmp 0x4012055	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120f2	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x40120f8	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x4012100	      0xe934fcffff	                           jmp 0x4011d39	      1888	screen.c	FUNCTION_20	FOR_8	IF_94	CALL_36
0x4012105	    0x8b83f8000000	            mov eax, dword [rbx + 0xf8] 	      1446	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x401210b	          0x4531ff	                          xor r15d, r15d	      1115	screen.c	FUNCTION_20
0x401210e	            0x85c0	                           test eax, eax	      1446	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x4012110	     0xf845dfcffff	                            je 0x4011d73	      1446	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x4012116	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1455	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x401211c	          0x4401f0	                           add eax, r14d	      1455	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x401211f	    0x8983f8000000	             mov dword [rbx + 0xf8], eax	      1455	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x4012125	            0x39d0	                            cmp eax, edx	      1455	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x4012127	            0x7e06	                           jle 0x401212f	      1455	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x4012129	    0x8993f8000000	             mov dword [rbx + 0xf8], edx	      1456	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	IF_42
0x401212f	    0x486393f80000	         movsxd rdx, dword [rbx + 0xf8] 	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012136	          0x4989d0	                             mov r8, rdx	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012139	          0x4889d0	                            mov rax, rdx	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401213c	          0x4d29f0	                             sub r8, r14	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401213f	        0x486bd218	                     imul rdx, rdx, 0x18	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012143	        0x4d6bf6e8	       imul r14, r14, 0xffffffffffffffe8	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012147	            0xeb23	                           jmp 0x401216c	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012149	    0x488bbb000100	           mov rdi, qword [rbx + 0x100] 	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012150	      0xb906000000	                              mov ecx, 6	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012155	          0x83e801	                              sub eax, 1	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012158	        0x4983e801	                               sub r8, 1	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401215c	        0x4a8d3437	                    lea rsi, [rdi + r14]	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012160	          0x4801d7	                            add rdi, rdx	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012163	          0x4801d6	                            add rsi, rdx	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012166	        0x4883ea18	                           sub rdx, 0x18	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401216a	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      1458	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401216c	          0x4d85c0	                             test r8, r8	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401216f	            0x79d8	                           jns 0x4012149	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012171	          0x4863d0	                         movsxd rdx, eax	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012174	        0x486bd218	                     imul rdx, rdx, 0x18	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x4012178	            0xeb13	                           jmp 0x401218d	      1457	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	FOR_4
0x401217a	    0x488b8b000100	           mov rcx, qword [rbx + 0x100] 	      1460	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x4012181	          0x83e801	                              sub eax, 1	      1460	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x4012184	      0xc644110a00	           mov byte [rcx + rdx + 0xa], 0	      1460	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x4012189	        0x4883ea18	                           sub rdx, 0x18	      1460	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x401218d	            0x85c0	                           test eax, eax	      1459	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x401218f	            0x79e9	                           jns 0x401217a	      1459	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x4012191	      0x448964242c	            mov dword [rsp + 0x2c], r12d	      1459	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41	WHILE_2
0x4012196	    0x41bf01000000	                             mov r15d, 1	      1451	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x401219c	      0xe9d2fbffff	                           jmp 0x4011d73	      1451	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x40121a1	            0x89e8	                            mov eax, ebp	      1451	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x40121a3	      0xe994dbffff	                           jmp 0x400fd3c	      1451	screen.c	FUNCTION_20	IF_31	ELSE_7	IF_33	ELSE_8	IF_36	IF_38	IF_40	IF_41
0x40121a8	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1107	screen.c	FUNCTION_20
0x40121b0	      0xe9afedffff	                           jmp 0x4010f64	      1107	screen.c	FUNCTION_20
redraw_buf_later	functions,1:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	24
0x4001920	    0x488b05000000	            mov rax, qword [0x04001927] 	       263	screen.c	FUNCTION_6
0x4001927	          0x4889fa	                            mov rdx, rdi	       260	screen.c	FUNCTION_6
0x400192a	            0x89f1	                            mov ecx, esi	       260	screen.c	FUNCTION_6
0x400192c	          0x4885c0	                           test rax, rax	       263	screen.c	FUNCTION_6
0x400192f	            0x7510	                           jne 0x4001941	       263	screen.c	FUNCTION_6
0x4001931	            0xeb39	                           jmp 0x400196c	       263	screen.c	FUNCTION_6
0x4001933	       0xf1f440000	                   nop dword [rax + rax]	       263	screen.c	FUNCTION_6
0x4001938	        0x488b4020	            mov rax, qword [rax + 0x20] 	       263	screen.c	FUNCTION_6
0x400193c	          0x4885c0	                           test rax, rax	       263	screen.c	FUNCTION_6
0x400193f	            0x742b	                            je 0x400196c	       263	screen.c	FUNCTION_6
0x4001941	        0x48395008	                cmp qword [rax + 8], rdx	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x4001945	            0x75f1	                           jne 0x4001938	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x4001947	    0x8b3500000000	            mov esi, dword [0x0400194d] 	       206	screen.c	FUNCTION_2	IF_1
0x400194d	            0x85f6	                           test esi, esi	       206	screen.c	FUNCTION_2	IF_1
0x400194f	            0x75e7	                           jne 0x4001938	       206	screen.c	FUNCTION_2	IF_1
0x4001951	    0x3b8828010000	           cmp ecx, dword [rax + 0x128] 	       206	screen.c	FUNCTION_2	IF_1
0x4001957	            0x7edf	                           jle 0x4001938	       206	screen.c	FUNCTION_2	IF_1
0x4001959	          0x4889c7	                            mov rdi, rax	       206	screen.c	FUNCTION_2	IF_1
0x400195c	            0x89ce	                            mov esi, ecx	       206	screen.c	FUNCTION_2	IF_1
0x400195e	      0xe8fdfdffff	       call sym.redraw_win_later.part.10	       206	screen.c	FUNCTION_2	IF_1
0x4001963	        0x488b4020	            mov rax, qword [rax + 0x20] 	       263	screen.c	FUNCTION_6
0x4001967	          0x4885c0	                           test rax, rax	       263	screen.c	FUNCTION_6
0x400196a	            0x75d5	                           jne 0x4001941	       263	screen.c	FUNCTION_6
0x400196c	            0xf3c3	                                     ret	       263	screen.c	FUNCTION_6
windgoto	functions,0:IF,35:DO,0:ELSE,11:CALL,15:FOR,1:WHILE,6:SWITCH,0	333
0x40031c0	    0x48833d000000	               cmp qword [0x040031c8], 0	      9251	screen.c	FUNCTION_78	IF_1
0x40031c8	     0xf84c7000000	                            je 0x4003295	      9251	screen.c	FUNCTION_78	IF_1
0x40031ce	            0x4157	                                push r15	      9232	screen.c	FUNCTION_78
0x40031d0	            0x4156	                                push r14	      9232	screen.c	FUNCTION_78
0x40031d2	            0x4155	                                push r13	      9232	screen.c	FUNCTION_78
0x40031d4	            0x4154	                                push r12	      9232	screen.c	FUNCTION_78
0x40031d6	          0x4189f4	                           mov r12d, esi	      9232	screen.c	FUNCTION_78
0x40031d9	              0x55	                                push rbp	      9232	screen.c	FUNCTION_78
0x40031da	              0x53	                                push rbx	      9232	screen.c	FUNCTION_78
0x40031db	        0x4883ec18	                           sub rsp, 0x18	      9232	screen.c	FUNCTION_78
0x40031df	    0x8b2d00000000	            mov ebp, dword [0x040031e5] 	      9254	screen.c	FUNCTION_78	IF_2
0x40031e5	    0x448b3d000000	           mov r15d, dword [0x040031ec] 	      9254	screen.c	FUNCTION_78	IF_2
0x40031ec	            0x39f5	                            cmp ebp, esi	      9254	screen.c	FUNCTION_78	IF_2
0x40031ee	     0xf8404010000	                            je 0x40032f8	      9254	screen.c	FUNCTION_78	IF_2
0x40031f4	    0x8b0500000000	            mov eax, dword [0x040031fa] 	      9259	screen.c	FUNCTION_78	IF_2	IF_4
0x40031fa	            0x85ff	                           test edi, edi	      9259	screen.c	FUNCTION_78	IF_2	IF_4
0x40031fc	      0xbb00000000	                              mov ebx, 0	      9259	screen.c	FUNCTION_78	IF_2	IF_4
0x4003201	           0xf49df	                         cmovns ebx, edi	      9259	screen.c	FUNCTION_78	IF_2	IF_4
0x4003204	    0x448b35000000	           mov r14d, dword [0x0400320b] 	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x400320b	          0x8d50ff	                      lea edx, [rax - 1]	      9260	screen.c	FUNCTION_78	IF_2	IF_4
0x400320e	            0x39d8	                            cmp eax, ebx	      9260	screen.c	FUNCTION_78	IF_2	IF_4
0x4003210	    0x8b0500000000	            mov eax, dword [0x04003216] 	      9261	screen.c	FUNCTION_78	IF_2	IF_5
0x4003216	           0xf4eda	                         cmovle ebx, edx	      9260	screen.c	FUNCTION_78	IF_2	IF_4
0x4003219	          0x8d50ff	                      lea edx, [rax - 1]	      9262	screen.c	FUNCTION_78	IF_2	IF_5
0x400321c	          0x4139c4	                           cmp r12d, eax	      9262	screen.c	FUNCTION_78	IF_2	IF_5
0x400321f	        0x440f4de2	                        cmovge r12d, edx	      9262	screen.c	FUNCTION_78	IF_2	IF_5
0x4003223	          0x4585f6	                         test r14d, r14d	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x4003226	            0x7478	                            je 0x40032a0	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x4003228	    0x488b05000000	            mov rax, qword [0x0400322f] 	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x400322f	          0x803800	                       cmp byte [rax], 0	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x4003232	            0x756c	                           jne 0x40032a0	      9265	screen.c	FUNCTION_78	IF_2	IF_6
0x4003234	          0x4439fb	                           cmp ebx, r15d	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x4003237	     0xf8dcb000000	                           jge 0x4003308	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x400323d	      0xe800000000	                          call 0x4003242	      9467	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_13
0x4003242	    0x448b3d000000	           mov r15d, dword [0x04003249] 	      9467	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_13
0x4003249	          0x4439fb	                           cmp ebx, r15d	      9468	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x400324c	            0x7522	                           jne 0x4003270	      9468	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x400324e	    0x8b0500000000	            mov eax, dword [0x04003254] 	      9468	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003254	          0x4139c4	                           cmp r12d, eax	      9468	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003257	            0x7e17	                           jle 0x4003270	      9468	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003259	    0x488b15000000	            mov rdx, qword [0x04003260] 	      9469	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003260	          0x803a00	                       cmp byte [rdx], 0	      9469	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003263	     0xf8567030000	                           jne 0x40035d0	      9469	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003269	     0xf1f80000000	                         nop dword [rax]	      9469	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x4003270	          0x4489e6	                           mov esi, r12d	      9472	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x4003273	            0x89df	                            mov edi, ebx	      9472	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x4003275	      0xe800000000	                          call 0x400327a	      9472	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x400327a	    0x891d00000000	            mov dword [0x04003280], ebx 	      9474	screen.c	FUNCTION_78	IF_2
0x4003280	    0x448925000000	           mov dword [0x04003287], r12d 	      9475	screen.c	FUNCTION_78	IF_2
0x4003287	        0x4883c418	                           add rsp, 0x18	      9477	screen.c	FUNCTION_78
0x400328b	              0x5b	                                 pop rbx	      9477	screen.c	FUNCTION_78
0x400328c	              0x5d	                                 pop rbp	      9477	screen.c	FUNCTION_78
0x400328d	            0x415c	                                 pop r12	      9477	screen.c	FUNCTION_78
0x400328f	            0x415d	                                 pop r13	      9477	screen.c	FUNCTION_78
0x4003291	            0x415e	                                 pop r14	      9477	screen.c	FUNCTION_78
0x4003293	            0x415f	                                 pop r15	      9477	screen.c	FUNCTION_78
0x4003295	            0xf3c3	                                     ret	      9477	screen.c	FUNCTION_78
0x4003297	    0x660f1f840000	                    nop word [rax + rax]	      9477	screen.c	FUNCTION_78
0x40032a0	          0x4439fb	                           cmp ebx, r15d	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032a3	            0x7ccb	                            jl 0x4003270	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032a5	          0x4863c5	                         movsxd rax, ebp	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032a8	    0x483b05000000	            cmp rax, qword [0x040032af] 	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032af	            0x7d98	                           jge 0x4003249	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032b1	    0x41b907000000	                              mov r9d, 7	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1
0x40032b7	          0x4531c0	                            xor r8d, r8d	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032ba	          0x4439fb	                           cmp ebx, r15d	      9292	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x40032bd	            0x7471	                            je 0x4003330	      9292	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x40032bf	     0xf8ecb000000	                           jle 0x4003390	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032c5	          0x4189da	                           mov r10d, ebx	      9328	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032c8	          0x4529fa	                          sub r10d, r15d	      9328	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032cb	          0x4501d2	                          add r10d, r10d	      9328	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032ce	          0x4585c0	                           test r8d, r8d	      9329	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x40032d1	     0xf84a9020000	                            je 0x4003580	      9329	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x40032d7	          0x4501c2	                           add r10d, r8d	      9331	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x40032da	          0x4489e2	                           mov edx, r12d	      9331	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x40032dd	          0x4531f6	                          xor r14d, r14d	      9332	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x40032e0	          0x4531ed	                          xor r13d, r13d	      9290	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x40032e3	          0x4531db	                          xor r11d, r11d	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032e6	    0xc74424080300	                  mov dword [rsp + 8], 3	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032ee	      0xe9b3000000	                           jmp 0x40033a6	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032f3	       0xf1f440000	                   nop dword [rax + rax]	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40032f8	          0x4139ff	                           cmp r15d, edi	      9254	screen.c	FUNCTION_78	IF_2
0x40032fb	     0xf85f3feffff	                           jne 0x40031f4	      9254	screen.c	FUNCTION_78	IF_2
0x4003301	            0xeb84	                           jmp 0x4003287	      9254	screen.c	FUNCTION_78	IF_2
0x4003303	       0xf1f440000	                   nop dword [rax + rax]	      9254	screen.c	FUNCTION_78	IF_2
0x4003308	          0x4863c5	                         movsxd rax, ebp	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x400330b	    0x483b05000000	            cmp rax, qword [0x04003312] 	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x4003312	     0xf8d25ffffff	                           jge 0x400323d	      9284	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x4003318	    0x41b90c000000	                            mov r9d, 0xc	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1
0x400331e	    0x41b805000000	                              mov r8d, 5	      9266	screen.c	FUNCTION_78	IF_2	IF_6
0x4003324	            0xeb94	                           jmp 0x40032ba	      9266	screen.c	FUNCTION_78	IF_2	IF_6
0x4003326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9266	screen.c	FUNCTION_78	IF_2	IF_6
0x4003330	          0x4139ec	                           cmp r12d, ebp	      9292	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x4003333	            0x7d5b	                           jge 0x4003390	      9292	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x4003335	    0x4c8b2d000000	            mov r13, qword [0x0400333c] 	      9295	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x400333c	      0x41807d0000	                       cmp byte [r13], 0	      9295	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x4003341	     0xf8579030000	                           jne 0x40036c0	      9295	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x4003347	    0x4c8b2d000000	            mov r13, qword [0x0400334e] 	      9298	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_2
0x400334e	      0x41807d0000	                       cmp byte [r13], 0	      9299	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x4003353	     0xf8567030000	                           jne 0x40036c0	      9299	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x4003359	      0xb8e7030000	                          mov eax, 0x3e7	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3
0x400335e	      0x418d542401	                      lea edx, [r12 + 1]	      9303	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x4003363	            0x39d0	                            cmp eax, edx	      9303	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x4003365	     0xf8e3d030000	                           jle 0x40036a8	      9303	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x400336b	          0x4531db	                          xor r11d, r11d	      9306	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x400336e	          0x4585c0	                           test r8d, r8d	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x4003371	          0x4489e2	                           mov edx, r12d	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x4003374	     0xf848f030000	                            je 0x4003709	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x400337a	      0xb801000000	                              mov eax, 1	      9307	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x400337f	    0xc74424080200	                  mov dword [rsp + 8], 2	      9305	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x4003387	        0x468d1400	                    lea r10d, [rax + r8]	      9316	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x400338b	          0x4531f6	                          xor r14d, r14d	      9317	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x400338e	            0xeb16	                           jmp 0x40033a6	      9317	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x4003390	          0x4489e2	                           mov edx, r12d	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x4003393	          0x4189eb	                           mov r11d, ebp	      9254	screen.c	FUNCTION_78	IF_2
0x4003396	          0x4531ed	                          xor r13d, r13d	      9290	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x4003399	            0x29ea	                            sub edx, ebp	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x400339b	          0x4531d2	                          xor r10d, r10d	      9343	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x400339e	    0xc74424080400	                  mov dword [rsp + 8], 4	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x40033a6	            0x85d2	                           test edx, edx	      9351	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x40033a8	     0xf8e7e010000	                           jle 0x400352c	      9351	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x40033ae	          0x4101d2	                           add r10d, edx	      9352	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x40033b1	          0x4539ca	                           cmp r10d, r9d	      9353	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033b4	     0xf8d34020000	                           jge 0x40035ee	      9353	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033ba	    0x488b0d000000	            mov rcx, qword [0x040033c1] 	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033c1	          0x4863c3	                         movsxd rax, ebx	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033c4	          0x8b0c81	            mov ecx, dword [rcx + rax*4]	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033c7	          0x4963c3	                        movsxd rax, r11d	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033ca	          0x4801c8	                            add rax, rcx	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033cd	        0x894c240c	              mov dword [rsp + 0xc], ecx	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033d1	    0x488b0d000000	            mov rcx, qword [0x040033d8] 	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033d8	        0x488d3441	                  lea rsi, [rcx + rax*2]	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033dc	         0xf1f4000	                         nop dword [rax]	      9359	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x40033e0	        0x488d4602	                      lea rax, [rsi + 2]	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033e4	         0xfb778fe	               movzx edi, word [rax - 2]	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033e8	          0x4139fe	                           cmp r14d, edi	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033eb	            0x89f9	                            mov ecx, edi	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033ed	     0xf854d010000	                           jne 0x4003540	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033f3	          0x83ea01	                              sub edx, 1	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033f6	          0x4889c6	                            mov rsi, rax	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033f9	            0x75e5	                           jne 0x40033e0	      9360	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x40033fb	    0x8b1500000000	            mov edx, dword [0x04003401] 	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003401	            0x85d2	                           test edx, edx	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003403	     0xf85dd000000	                           jne 0x40034e6	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003409	      0x837c240801	                  cmp dword [rsp + 8], 1	      9395	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23
0x400340e	     0xf842c020000	                            je 0x4003640	      9395	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23
0x4003414	      0x837c240802	                  cmp dword [rsp + 8], 2	      9405	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x4003419	     0xf8461020000	                            je 0x4003680	      9405	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x400341f	      0x837c240803	                  cmp dword [rsp + 8], 3	      9412	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x4003424	     0xf84d6010000	                            je 0x4003600	      9412	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x400342a	          0x4489e0	                           mov eax, r12d	      9424	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x400342d	            0x29e8	                            sub eax, ebp	      9424	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x400342f	            0x85c0	                           test eax, eax	      9425	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29
0x4003431	     0xf8e43feffff	                           jle 0x400327a	      9425	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29
0x4003437	    0x488b15000000	            mov rdx, qword [0x0400343e] 	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x400343e	           0xfb63a	                   movzx edi, byte [rdx]	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x4003441	          0x4084ff	                           test dil, dil	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x4003444	     0xf8556010000	                           jne 0x40035a0	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x400344a	    0x488b0d000000	            mov rcx, qword [0x04003451] 	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x4003451	          0x4863d3	                         movsxd rdx, ebx	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003454	          0x83e801	                              sub eax, 1	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003457	           0x32c91	            add ebp, dword [rcx + rdx*4]	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x400345a	          0x4863ed	                         movsxd rbp, ebp	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x400345d	      0x4c8d6c2d00	                    lea r13, [rbp + rbp]	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003462	      0x4c8d740501	                lea r14, [rbp + rax + 1]	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003467	            0xeb18	                           jmp 0x4003481	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003469	     0xf1f80000000	                         nop dword [rax]	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003470	        0x4883c501	                              add rbp, 1	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003474	        0x4983c502	                              add r13, 2	      9441	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x4003478	          0x4c39f5	                            cmp rbp, r14	      9442	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x400347b	     0xf84f9fdffff	                            je 0x400327a	      9442	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x4003481	    0x488b05000000	            mov rax, qword [0x04003488] 	      9444	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x4003488	      0x420fb70428	             movzx eax, word [rax + r13]	      9444	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x400348d	    0x3b0500000000	            cmp eax, dword [0x04003493] 	      9444	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x4003493	            0x7405	                            je 0x400349a	      9444	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x4003495	      0xe800000000	                          call 0x400349a	      9445	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_9
0x400349a	      0xe800000000	                          call 0x400349f	      9447	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_10
0x400349f	    0x488b05000000	            mov rax, qword [0x040034a6] 	      9449	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x40034a6	         0xfb63c28	             movzx edi, byte [rax + rbp]	      9449	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x40034aa	      0xe800000000	                          call 0x40034af	      9449	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x40034af	    0x813d00000000	         cmp dword [0x040034b9], 0x26cc 	      9451	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x40034b9	            0x75b5	                           jne 0x4003470	      9451	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x40034bb	    0x488b05000000	            mov rax, qword [0x040034c2] 	      9452	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x40034c2	        0x803c288e	              cmp byte [rax + rbp], 0x8e	      9452	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x40034c6	            0x75a8	                           jne 0x4003470	      9452	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x40034c8	    0x488b05000000	            mov rax, qword [0x040034cf] 	      9453	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x40034cf	         0xfb63c28	             movzx edi, byte [rax + rbp]	      9453	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x40034d3	      0xe800000000	                          call 0x40034d8	      9453	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x40034d8	            0xeb96	                           jmp 0x4003470	      9453	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x40034da	    0x660f1f440000	                    nop word [rax + rax]	      9453	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x40034e0	    0x41bae7030000	                         mov r10d, 0x3e7	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x40034e6	          0x4539dc	                          cmp r12d, r11d	      9380	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x40034e9	            0x7e41	                           jle 0x400352c	      9380	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x40034eb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x40034ef	    0x488b0d000000	            mov rcx, qword [0x040034f6] 	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x40034f6	          0x4401d8	                           add eax, r11d	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x40034f9	        0x448b3481	           mov r14d, dword [rcx + rax*4]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x40034fd	          0x4585f6	                         test r14d, r14d	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003500	     0xf85e8000000	                           jne 0x40035ee	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003506	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x400350a	      0x418d443301	                lea eax, [r11 + rsi + 1]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x400350f	          0x4401e6	                           add esi, r12d	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003512	            0xeb14	                           jmp 0x4003528	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003514	         0xf1f4000	                         nop dword [rax]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003518	            0x89c2	                            mov edx, eax	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x400351a	          0x83c001	                              add eax, 1	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x400351d	          0x8b3c91	            mov edi, dword [rcx + rdx*4]	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003520	            0x85ff	                           test edi, edi	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003522	     0xf85c6000000	                           jne 0x40035ee	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x4003528	            0x39c6	                            cmp esi, eax	      9380	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x400352a	            0x75ec	                           jne 0x4003518	      9380	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x400352c	          0x4539ca	                           cmp r10d, r9d	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x400352f	     0xf8cd4feffff	                            jl 0x4003409	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x4003535	      0xe9b4000000	                           jmp 0x40035ee	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x400353a	    0x660f1f440000	                    nop word [rax + rax]	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x4003540	          0x6685ff	                             test di, di	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003543	     0xf8597000000	                           jne 0x40035e0	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003549	          0x83ea01	                              sub edx, 1	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x400354c	      0x488d545602	              lea rdx, [rsi + rdx*2 + 2]	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003551	            0xeb0c	                           jmp 0x400355f	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003553	       0xf1f440000	                   nop dword [rax + rax]	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003558	           0xfb708	                   movzx ecx, word [rax]	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x400355b	        0x4883c002	                              add rax, 2	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x400355f	          0x6685c9	                             test cx, cx	      9370	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x4003562	            0x757c	                           jne 0x40035e0	      9370	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x4003564	          0x4839c2	                            cmp rdx, rax	      9370	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x4003567	            0x75ef	                           jne 0x4003558	      9370	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x4003569	    0x8b0500000000	            mov eax, dword [0x0400356f] 	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x400356f	          0x4501c2	                           add r10d, r8d	      9369	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x4003572	            0x85c0	                           test eax, eax	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003574	            0x74b6	                            je 0x400352c	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003576	      0xe96bffffff	                           jmp 0x40034e6	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x400357b	       0xf1f440000	                   nop dword [rax + rax]	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003580	          0x4489e2	                           mov edx, r12d	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x4003583	          0x4531ed	                          xor r13d, r13d	      9290	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x4003586	          0x4531db	                          xor r11d, r11d	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x4003589	    0xc74424080300	                  mov dword [rsp + 8], 3	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x4003591	      0xe910feffff	                           jmp 0x40033a6	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x4003596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x40035a0	        0x807a0100	                   cmp byte [rdx + 1], 0	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x40035a4	     0xf85a0feffff	                           jne 0x400344a	      9432	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x40035aa	          0x8d68ff	                      lea ebp, [rax - 1]	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035ad	            0xeb0b	                           jmp 0x40035ba	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035af	              0x90	                                     nop	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035b0	    0x488b05000000	            mov rax, qword [0x040035b7] 	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035b7	           0xfb638	                   movzx edi, byte [rax]	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035ba	          0x83ed01	                              sub ebp, 1	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035bd	      0xe800000000	                          call 0x40035c2	      9435	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x40035c2	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035c5	            0x75e9	                           jne 0x40035b0	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035c7	      0xe9aefcffff	                           jmp 0x400327a	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035cc	         0xf1f4000	                         nop dword [rax]	      9434	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x40035d0	          0x4489e7	                           mov edi, r12d	      9470	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x40035d3	            0x29c7	                            sub edi, eax	      9470	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x40035d5	      0xe800000000	                          call 0x40035da	      9470	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x40035da	      0xe99bfcffff	                           jmp 0x400327a	      9470	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x40035df	              0x90	                                     nop	      9470	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x40035e0	    0x8b0500000000	            mov eax, dword [0x040035e6] 	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x40035e6	            0x85c0	                           test eax, eax	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x40035e8	     0xf85f2feffff	                           jne 0x40034e0	      9377	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x40035ee	          0x4585c0	                           test r8d, r8d	      9466	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x40035f1	     0xf8546fcffff	                           jne 0x400323d	      9466	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x40035f7	      0xe94dfcffff	                           jmp 0x4003249	      9466	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x40035fc	         0xf1f4000	                         nop dword [rax]	      9466	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x4003600	          0x4585c0	                           test r8d, r8d	      9414	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	IF_28
0x4003603	     0xf851d010000	                           jne 0x4003726	      9414	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	IF_28
0x4003609	          0x4439fb	                           cmp ebx, r15d	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x400360c	            0x7e1f	                           jle 0x400362d	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x400360e	            0x6690	                                     nop	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x4003610	      0xbf0a000000	                            mov edi, 0xa	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4	CALL_7
0x4003615	      0xe800000000	                          call 0x400361a	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4	CALL_7
0x400361a	    0x8b0500000000	            mov eax, dword [0x04003620] 	      9419	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x4003620	          0x83c001	                              add eax, 1	      9419	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x4003623	            0x39c3	                            cmp ebx, eax	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x4003625	    0x890500000000	            mov dword [0x0400362b], eax 	      9419	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x400362b	            0x7fe3	                            jg 0x4003610	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x400362d	    0xc70500000000	               mov dword [0x04003637], 0	      9421	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x4003637	            0x31ed	                            xor ebp, ebp	      9421	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x4003639	      0xe9ecfdffff	                           jmp 0x400342a	      9421	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x400363e	            0x6690	                                     nop	      9421	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x4003640	          0x4585c0	                           test r8d, r8d	      9397	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	IF_24
0x4003643	     0xf85a2000000	                           jne 0x40036eb	      9397	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	IF_24
0x4003649	          0x4139ec	                           cmp r12d, ebp	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x400364c	     0xf8dd8fdffff	                           jge 0x400342a	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003652	    0x660f1f440000	                    nop word [rax + rax]	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003658	          0x4c89ef	                            mov rdi, r13	      9401	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3	CALL_3
0x400365b	      0xe800000000	                          call 0x4003660	      9401	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3	CALL_3
0x4003660	    0x8b0500000000	            mov eax, dword [0x04003666] 	      9402	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003666	          0x8d68ff	                      lea ebp, [rax - 1]	      9402	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003669	          0x4139ec	                           cmp r12d, ebp	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x400366c	    0x892d00000000	            mov dword [0x04003672], ebp 	      9402	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003672	            0x7ce4	                            jl 0x4003658	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003674	      0xe9b1fdffff	                           jmp 0x400342a	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003679	     0xf1f80000000	                         nop dword [rax]	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x4003680	          0x4585c0	                           test r8d, r8d	      9407	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	IF_26
0x4003683	     0xf8593000000	                           jne 0x400371c	      9407	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	IF_26
0x4003689	      0xbf0d000000	                            mov edi, 0xd	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_5
0x400368e	            0x31ed	                            xor ebp, ebp	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_5
0x4003690	      0xe800000000	                          call 0x4003695	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_5
0x4003695	    0xc70500000000	               mov dword [0x0400369f], 0	      9410	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x400369f	      0xe986fdffff	                           jmp 0x400342a	      9410	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x40036a4	         0xf1f4000	                         nop dword [rax]	      9410	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x40036a8	          0x4585c0	                           test r8d, r8d	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x40036ab	            0x744e	                            je 0x40036fb	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x40036ad	          0x4589e3	                          mov r11d, r12d	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x40036b0	            0x31d2	                            xor edx, edx	      9314	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x40036b2	    0xc74424080100	                  mov dword [rsp + 8], 1	      9311	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x40036ba	      0xe9c8fcffff	                           jmp 0x4003387	      9311	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x40036bf	              0x90	                                     nop	      9311	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x40036c0	          0x4c89ef	                            mov rdi, r13	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036c3	      0x448944240c	              mov dword [rsp + 0xc], r8d	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036c8	      0x44894c2408	                mov dword [rsp + 8], r9d	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036cd	      0xe800000000	                          call 0x40036d2	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036d2	          0x4189ea	                           mov r10d, ebp	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036d5	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036da	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036df	          0x4529e2	                          sub r10d, r12d	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036e2	        0x410fafc2	                          imul eax, r10d	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036e6	      0xe973fcffff	                           jmp 0x400335e	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x40036eb	      0xe800000000	                          call 0x40036f0	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	CALL_2
0x40036f0	    0x8b2d00000000	            mov ebp, dword [0x040036f6] 	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	CALL_2
0x40036f6	      0xe94effffff	                           jmp 0x4003649	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	CALL_2
0x40036fb	          0x4439c8	                            cmp eax, r9d	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x40036fe	     0xf8c45ffffff	                            jl 0x4003649	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x4003704	      0xe940fbffff	                           jmp 0x4003249	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x4003709	    0x41ba01000000	                             mov r10d, 1	      9307	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x400370f	    0xc74424080200	                  mov dword [rsp + 8], 2	      9305	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x4003717	      0xe98afcffff	                           jmp 0x40033a6	      9305	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x400371c	      0xe800000000	                          call 0x4003721	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_4
0x4003721	      0xe963ffffff	                           jmp 0x4003689	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_4
0x4003726	      0xe800000000	                          call 0x400372b	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	CALL_6
0x400372b	    0x448b3d000000	           mov r15d, dword [0x04003732] 	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	CALL_6
0x4003732	      0xe9d2feffff	                           jmp 0x4003609	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	CALL_6
update_curbuf	functions,0:IF,0:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	8
0x4013010	        0x4883ec08	                              sub rsp, 8	       522	screen.c	FUNCTION_11
0x4013014	          0x4189f8	                            mov r8d, edi	       522	screen.c	FUNCTION_11
0x4013017	            0x89fe	                            mov esi, edi	       255	screen.c	FUNCTION_5	CALL_1
0x4013019	    0x488b3d000000	            mov rdi, qword [0x04013020] 	       255	screen.c	FUNCTION_5	CALL_1
0x4013020	      0xe800000000	                          call 0x4013025	       255	screen.c	FUNCTION_5	CALL_1
0x4013025	        0x4883c408	                              add rsp, 8	       525	screen.c	FUNCTION_11
0x4013029	          0x4489c7	                            mov edi, r8d	       524	screen.c	FUNCTION_11	CALL_2
0x401302c	      0xe98ff1ffff	                   jmp sym.update_screen	       524	screen.c	FUNCTION_11	CALL_2
number_width	functions,0:IF,3:DO,1:ELSE,1:CALL,0:FOR,0:WHILE,0:SWITCH,0	42
0x4009f30	    0x8b973c020000	           mov edx, dword [rdi + 0x23c] 	     11098	screen.c	FUNCTION_101	IF_1
0x4009f36	            0x85d2	                           test edx, edx	     11098	screen.c	FUNCTION_101	IF_1
0x4009f38	            0x740a	                            je 0x4009f44	     11098	screen.c	FUNCTION_101	IF_1
0x4009f3a	    0x8b8738020000	           mov eax, dword [rdi + 0x238] 	     11098	screen.c	FUNCTION_101	IF_1
0x4009f40	            0x85c0	                           test eax, eax	     11098	screen.c	FUNCTION_101	IF_1
0x4009f42	            0x746c	                            je 0x4009fb0	     11098	screen.c	FUNCTION_101	IF_1
0x4009f44	        0x488b4708	                mov rax, qword [rdi + 8]	     11103	screen.c	FUNCTION_101	ELSE_1
0x4009f48	    0x4c8b8f400200	            mov r9, qword [rdi + 0x240] 	     11105	screen.c	FUNCTION_101	IF_2
0x4009f4f	          0x488b08	                    mov rcx, qword [rax]	     11103	screen.c	FUNCTION_101	ELSE_1
0x4009f52	    0x483b8f301900	          cmp rcx, qword [rdi + 0x1930] 	     11105	screen.c	FUNCTION_101	IF_2
0x4009f59	            0x746c	                            je 0x4009fc7	     11105	screen.c	FUNCTION_101	IF_2
0x4009f5b	    0x48898f301900	          mov qword [rdi + 0x1930], rcx 	     11107	screen.c	FUNCTION_101
0x4009f62	            0x31f6	                            xor esi, esi	     11109	screen.c	FUNCTION_101
0x4009f64	    0x49b867666666	           movabs r8, 0x6666666666666667	     11112	screen.c	FUNCTION_101	DO_1
0x4009f6e	            0x6690	                                     nop	     11112	screen.c	FUNCTION_101	DO_1
0x4009f70	          0x4889c8	                            mov rax, rcx	     11112	screen.c	FUNCTION_101	DO_1
0x4009f73	        0x48c1f93f	                           sar rcx, 0x3f	     11112	screen.c	FUNCTION_101	DO_1
0x4009f77	          0x83c601	                              add esi, 1	     11113	screen.c	FUNCTION_101	DO_1
0x4009f7a	          0x49f7e8	                                 imul r8	     11112	screen.c	FUNCTION_101	DO_1
0x4009f7d	        0x48c1fa02	                              sar rdx, 2	     11112	screen.c	FUNCTION_101	DO_1
0x4009f81	          0x4829ca	                            sub rdx, rcx	     11112	screen.c	FUNCTION_101	DO_1
0x4009f84	          0x4885d2	                           test rdx, rdx	     11114	screen.c	FUNCTION_101	DO_1
0x4009f87	          0x4889d1	                            mov rcx, rdx	     11112	screen.c	FUNCTION_101	DO_1
0x4009f8a	            0x7fe4	                            jg 0x4009f70	     11114	screen.c	FUNCTION_101	DO_1
0x4009f8c	        0x498d51ff	                       lea rdx, [r9 - 1]	     11117	screen.c	FUNCTION_101	IF_3
0x4009f90	          0x4863ce	                         movsxd rcx, esi	     11117	screen.c	FUNCTION_101	IF_3
0x4009f93	        0x418d41ff	                       lea eax, [r9 - 1]	     11118	screen.c	FUNCTION_101	IF_3
0x4009f97	    0x4c898f381900	           mov qword [rdi + 0x1938], r9 	     11121	screen.c	FUNCTION_101
0x4009f9e	          0x4839d1	                            cmp rcx, rdx	     11118	screen.c	FUNCTION_101	IF_3
0x4009fa1	           0xf4cf0	                          cmovl esi, eax	     11118	screen.c	FUNCTION_101	IF_3
0x4009fa4	    0x89b740190000	          mov dword [rdi + 0x1940], esi 	     11120	screen.c	FUNCTION_101
0x4009faa	            0x89f0	                            mov eax, esi	     11122	screen.c	FUNCTION_101
0x4009fac	              0xc3	                                     ret	     11123	screen.c	FUNCTION_101
0x4009fad	           0xf1f00	                         nop dword [rax]	     11123	screen.c	FUNCTION_101
0x4009fb0	    0x48638fa00000	         movsxd rcx, dword [rdi + 0xa0] 	     11100	screen.c	FUNCTION_101	IF_1
0x4009fb7	    0x4c8b8f400200	            mov r9, qword [rdi + 0x240] 	     11105	screen.c	FUNCTION_101	IF_2
0x4009fbe	    0x483b8f301900	          cmp rcx, qword [rdi + 0x1930] 	     11105	screen.c	FUNCTION_101	IF_2
0x4009fc5	            0x7594	                           jne 0x4009f5b	     11105	screen.c	FUNCTION_101	IF_2
0x4009fc7	    0x4c398f381900	           cmp qword [rdi + 0x1938], r9 	     11105	screen.c	FUNCTION_101	IF_2
0x4009fce	            0x758b	                           jne 0x4009f5b	     11105	screen.c	FUNCTION_101	IF_2
0x4009fd0	    0x8b8740190000	          mov eax, dword [rdi + 0x1940] 	     11106	screen.c	FUNCTION_101	IF_2
0x4009fd6	              0xc3	                                     ret	     11106	screen.c	FUNCTION_101	IF_2
setcursor_mayforce	functions,0:IF,1:DO,0:ELSE,0:CALL,7:FOR,0:WHILE,0:SWITCH,0	59
0x40093c0	            0x85ff	                           test edi, edi	      9495	screen.c	FUNCTION_80	IF_1	CALL_1
0x40093c2	            0x4154	                                push r12	      9494	screen.c	FUNCTION_80
0x40093c4	              0x55	                                push rbp	      9494	screen.c	FUNCTION_80
0x40093c5	              0x53	                                push rbx	      9494	screen.c	FUNCTION_80
0x40093c6	            0x7509	                           jne 0x40093d1	      9495	screen.c	FUNCTION_80	IF_1	CALL_1
0x40093c8	      0xe800000000	                          call 0x40093cd	      9495	screen.c	FUNCTION_80	IF_1	CALL_1
0x40093cd	            0x85c0	                           test eax, eax	      9495	screen.c	FUNCTION_80	IF_1	CALL_1
0x40093cf	            0x746f	                            je 0x4009440	      9495	screen.c	FUNCTION_80	IF_1	CALL_1
0x40093d1	      0xe800000000	                          call 0x40093d6	      9497	screen.c	FUNCTION_80	IF_1	CALL_2
0x40093d6	    0x488b05000000	            mov rax, qword [0x040093dd] 	      9499	screen.c	FUNCTION_80	IF_1
0x40093dd	    0x8b8854020000	           mov ecx, dword [rax + 0x254] 	      9509	screen.c	FUNCTION_80	IF_1
0x40093e3	    0x8b98a8000000	            mov ebx, dword [rax + 0xa8] 	      9499	screen.c	FUNCTION_80	IF_1
0x40093e9	            0x85c9	                           test ecx, ecx	      9509	screen.c	FUNCTION_80	IF_1
0x40093eb	            0x742b	                            je 0x4009418	      9509	screen.c	FUNCTION_80	IF_1
0x40093ed	    0x8bb0ac000000	            mov esi, dword [rax + 0xac] 	      9503	screen.c	FUNCTION_80	IF_1
0x40093f3	    0x8b1500000000	            mov edx, dword [0x040093f9] 	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x40093f9	      0xbd01000000	                              mov ebp, 1	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x40093fe	    0x2bb0e0000000	             sub esi, dword [rax + 0xe0]	      9503	screen.c	FUNCTION_80	IF_1
0x4009404	            0x85d2	                           test edx, edx	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009406	          0x4189f4	                           mov r12d, esi	      9503	screen.c	FUNCTION_80	IF_1
0x4009409	            0x753d	                           jne 0x4009448	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400940b	          0x4489e6	                           mov esi, r12d	      9509	screen.c	FUNCTION_80	IF_1
0x400940e	            0x29ee	                            sub esi, ebp	      9509	screen.c	FUNCTION_80	IF_1
0x4009410	            0xeb0c	                           jmp 0x400941e	      9509	screen.c	FUNCTION_80	IF_1
0x4009412	    0x660f1f440000	                    nop word [rax + rax]	      9509	screen.c	FUNCTION_80	IF_1
0x4009418	    0x8bb0e0000000	            mov esi, dword [rax + 0xe0] 	      9509	screen.c	FUNCTION_80	IF_1
0x400941e	    0x8bb8a8010000	           mov edi, dword [rax + 0x1a8] 	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x4009424	     0x3b89c000000	             add edi, dword [rax + 0x9c]	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x400942a	             0x1de	                            add esi, ebx	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x400942c	     0x3b8dc000000	             add edi, dword [rax + 0xdc]	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x4009432	              0x5b	                                 pop rbx	      9513	screen.c	FUNCTION_80
0x4009433	              0x5d	                                 pop rbp	      9513	screen.c	FUNCTION_80
0x4009434	            0x415c	                                 pop r12	      9513	screen.c	FUNCTION_80
0x4009436	      0xe9859dffff	                        jmp sym.windgoto	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x400943b	       0xf1f440000	                   nop dword [rax + rax]	      9498	screen.c	FUNCTION_80	IF_1	CALL_4
0x4009440	              0x5b	                                 pop rbx	      9513	screen.c	FUNCTION_80
0x4009441	              0x5d	                                 pop rbp	      9513	screen.c	FUNCTION_80
0x4009442	            0x415c	                                 pop r12	      9513	screen.c	FUNCTION_80
0x4009444	              0xc3	                                     ret	      9513	screen.c	FUNCTION_80
0x4009445	           0xf1f00	                         nop dword [rax]	      9513	screen.c	FUNCTION_80
0x4009448	    0x488b2d000000	            mov rbp, qword [0x0400944f] 	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x400944f	      0xe800000000	                          call 0x4009454	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x4009454	          0x4889c7	                            mov rdi, rax	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x4009457	            0xffd5	                                call rbp	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x4009459	          0x83f802	                              cmp eax, 2	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x400945c	            0x89c5	                            mov ebp, eax	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x400945e	            0x7410	                            je 0x4009470	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x4009460	    0x488b05000000	            mov rax, qword [0x04009467] 	      9506	screen.c	FUNCTION_80	IF_1	CALL_5
0x4009467	      0xbd01000000	                              mov ebp, 1	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400946c	            0xeb9d	                           jmp 0x400940b	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400946e	            0x6690	                                     nop	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009470	      0xe800000000	                          call 0x4009475	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009475	            0x89c7	                            mov edi, eax	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009477	      0xe800000000	                          call 0x400947c	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400947c	            0x85c0	                           test eax, eax	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400947e	    0x488b05000000	            mov rax, qword [0x04009485] 	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009485	            0x7584	                           jne 0x400940b	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x4009487	      0xbd01000000	                              mov ebp, 1	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
0x400948c	      0xe97affffff	                           jmp 0x400940b	      9507	screen.c	FUNCTION_80	IF_1	CALL_7
redraw_block	functions,0:IF,1:DO,0:ELSE,1:CALL,2:FOR,0:WHILE,0:SWITCH,0	22
0x4004d30	            0x4154	                                push r12	      8492	screen.c	FUNCTION_64
0x4004d32	              0x55	                                push rbp	      8492	screen.c	FUNCTION_64
0x4004d33	          0x4989d4	                            mov r12, rdx	      8492	screen.c	FUNCTION_64
0x4004d36	              0x53	                                push rbx	      8492	screen.c	FUNCTION_64
0x4004d37	            0x89f3	                            mov ebx, esi	      8492	screen.c	FUNCTION_64
0x4004d39	          0x83ee01	                              sub esi, 1	      8497	screen.c	FUNCTION_64	CALL_1
0x4004d3c	            0x89fd	                            mov ebp, edi	      8492	screen.c	FUNCTION_64
0x4004d3e	      0xe800000000	                          call 0x4004d43	      8497	screen.c	FUNCTION_64	CALL_1
0x4004d43	            0x31f6	                            xor esi, esi	      8502	screen.c	FUNCTION_64	IF_1
0x4004d45	          0x4d85e4	                           test r12, r12	      8500	screen.c	FUNCTION_64	IF_1
0x4004d48	    0x8b0d00000000	            mov ecx, dword [0x04004d4e] 	      8503	screen.c	FUNCTION_64	IF_1
0x4004d4e	            0x7410	                            je 0x4004d60	      8500	screen.c	FUNCTION_64	IF_1
0x4004d50	    0x418bb424a800	            mov esi, dword [r12 + 0xa8] 	      8507	screen.c	FUNCTION_64	ELSE_1
0x4004d58	    0x418b8c24ac00	            mov ecx, dword [r12 + 0xac] 	      8508	screen.c	FUNCTION_64	ELSE_1
0x4004d60	            0x29eb	                            sub ebx, ebp	      8510	screen.c	FUNCTION_64	CALL_2
0x4004d62	            0x89ef	                            mov edi, ebp	      8510	screen.c	FUNCTION_64	CALL_2
0x4004d64	          0x4531c0	                            xor r8d, r8d	      8510	screen.c	FUNCTION_64	CALL_2
0x4004d67	            0x89da	                            mov edx, ebx	      8510	screen.c	FUNCTION_64	CALL_2
0x4004d69	              0x5b	                                 pop rbx	      8511	screen.c	FUNCTION_64
0x4004d6a	              0x5d	                                 pop rbp	      8511	screen.c	FUNCTION_64
0x4004d6b	            0x415c	                                 pop r12	      8511	screen.c	FUNCTION_64
0x4004d6d	      0xe99efeffff	           jmp sym.screen_draw_rectangle	      8510	screen.c	FUNCTION_64	CALL_2
get_keymap_str	functions,0:IF,4:DO,0:ELSE,1:CALL,4:FOR,0:WHILE,0:SWITCH,0	66
0x4001cc0	        0x4c8b4708	                 mov r8, qword [rdi + 8]	      7087	screen.c	FUNCTION_45	IF_1
0x4001cc4	    0x4983b8781200	              cmp qword [r8 + 0x1278], 1	      7087	screen.c	FUNCTION_45	IF_1
0x4001ccc	            0x740a	                            je 0x4001cd8	      7087	screen.c	FUNCTION_45	IF_1
0x4001cce	            0x31c0	                            xor eax, eax	      7087	screen.c	FUNCTION_45	IF_1
0x4001cd0	              0xc3	                                     ret	      7087	screen.c	FUNCTION_45	IF_1
0x4001cd1	     0xf1f80000000	                         nop dword [rax]	      7087	screen.c	FUNCTION_45	IF_1
0x4001cd8	            0x4157	                                push r15	      7084	screen.c	FUNCTION_45
0x4001cda	            0x4156	                                push r14	      7084	screen.c	FUNCTION_45
0x4001cdc	    0x48b8623a6b65	          movabs rax, 0x70616d79656b3a62	       110	string3.h	FUNCTION_110	CALL_3
0x4001ce6	            0x4155	                                push r13	      7084	screen.c	FUNCTION_45
0x4001ce8	            0x4154	                                push r12	      7084	screen.c	FUNCTION_45
0x4001cea	          0x4189cc	                           mov r12d, ecx	      7084	screen.c	FUNCTION_45
0x4001ced	              0x55	                                push rbp	      7084	screen.c	FUNCTION_45
0x4001cee	              0x53	                                push rbx	      7084	screen.c	FUNCTION_45
0x4001cef	          0x4889d5	                            mov rbp, rdx	      7084	screen.c	FUNCTION_45
0x4001cf2	          0x4889fb	                            mov rbx, rdi	      7084	screen.c	FUNCTION_45
0x4001cf5	        0x4883ec18	                           sub rsp, 0x18	      7084	screen.c	FUNCTION_45
0x4001cf9	    0x4c8b2d000000	            mov r13, qword [0x04001d00] 	      7092	screen.c	FUNCTION_45
0x4001d00	    0x4c8b3d000000	            mov r15, qword [0x04001d07] 	      7093	screen.c	FUNCTION_45
0x4001d07	    0x4c8905000000	              mov qword [0x04001d0e], r8	      7096	screen.c	FUNCTION_45
0x4001d0e	    0x48893d000000	            mov qword [0x04001d15], rdi 	      7097	screen.c	FUNCTION_45
0x4001d15	          0x4889ef	                            mov rdi, rbp	      7100	screen.c	FUNCTION_45	CALL_2
0x4001d18	          0x488902	                    mov qword [rdx], rax	       110	string3.h	FUNCTION_110	CALL_3
0x4001d1b	      0xb865000000	                           mov eax, 0x65	       110	string3.h	FUNCTION_110	CALL_3
0x4001d20	      0x4889742408	                mov qword [rsp + 8], rsi	       110	string3.h	FUNCTION_110	CALL_3
0x4001d25	    0xc742085f6e61	        mov dword [rdx + 8], 0x6d616e5f 	       110	string3.h	FUNCTION_110	CALL_3
0x4001d2c	        0x6689420c	                mov word [rdx + 0xc], ax	       110	string3.h	FUNCTION_110	CALL_3
0x4001d30	            0x31f6	                            xor esi, esi	      7100	screen.c	FUNCTION_45	CALL_2
0x4001d32	            0x31d2	                            xor edx, edx	      7100	screen.c	FUNCTION_45	CALL_2
0x4001d34	    0x830500000000	               add dword [0x04001d3b], 1	      7099	screen.c	FUNCTION_45
0x4001d3b	      0xe800000000	                          call 0x4001d40	      7100	screen.c	FUNCTION_45	CALL_2
0x4001d40	    0x832d00000000	               sub dword [0x04001d47], 1	      7101	screen.c	FUNCTION_45
0x4001d47	          0x4885c0	                           test rax, rax	      7104	screen.c	FUNCTION_45	IF_2
0x4001d4a	          0x4989c6	                            mov r14, rax	      7100	screen.c	FUNCTION_45	CALL_2
0x4001d4d	    0x4c892d000000	            mov qword [0x04001d54], r13 	      7102	screen.c	FUNCTION_45
0x4001d54	    0x4c893d000000	            mov qword [0x04001d5b], r15 	      7103	screen.c	FUNCTION_45
0x4001d5b	            0x7408	                            je 0x4001d65	      7104	screen.c	FUNCTION_45	IF_2
0x4001d5d	          0x803800	                       cmp byte [rax], 0	      7104	screen.c	FUNCTION_45	IF_2
0x4001d60	          0x4889c1	                            mov rcx, rax	      7104	screen.c	FUNCTION_45	IF_2
0x4001d63	            0x7519	                           jne 0x4001d7e	      7104	screen.c	FUNCTION_45	IF_2
0x4001d65	        0x488b4308	                mov rax, qword [rbx + 8]	      7108	screen.c	FUNCTION_45	IF_2	IF_3
0x4001d69	      0xb900000000	                              mov ecx, 0	      7112	screen.c	FUNCTION_45	IF_2	ELSE_1
0x4001d6e	    0xf68088120000	            test byte [rax + 0x1288], 2 	      7108	screen.c	FUNCTION_45	IF_2	IF_3
0x4001d75	            0x7407	                            je 0x4001d7e	      7108	screen.c	FUNCTION_45	IF_2	IF_3
0x4001d77	    0x488b88e81500	          mov rcx, qword [rax + 0x15e8] 	      7109	screen.c	FUNCTION_45	IF_2	IF_3
0x4001d7e	      0x488b542408	                mov rdx, qword [rsp + 8]	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d83	            0x31c0	                            xor eax, eax	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d85	          0x4963f4	                        movsxd rsi, r12d	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d88	          0x4889ef	                            mov rdi, rbp	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d8b	      0xe800000000	                          call 0x4001d90	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d90	          0x4139c4	                           cmp r12d, eax	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d93	            0x7f04	                            jg 0x4001d99	      7114	screen.c	FUNCTION_45	IF_4	CALL_3
0x4001d95	        0xc6450000	                       mov byte [rbp], 0	      7115	screen.c	FUNCTION_45	IF_4
0x4001d99	          0x4c89f7	                            mov rdi, r14	      7117	screen.c	FUNCTION_45	CALL_4
0x4001d9c	      0xe800000000	                          call 0x4001da1	      7117	screen.c	FUNCTION_45	CALL_4
0x4001da1	            0x31c0	                            xor eax, eax	      7120	screen.c	FUNCTION_45
0x4001da3	        0x807d0000	                       cmp byte [rbp], 0	      7120	screen.c	FUNCTION_45
0x4001da7	           0xf95c0	                                setne al	      7120	screen.c	FUNCTION_45
0x4001daa	        0x4883c418	                           add rsp, 0x18	      7121	screen.c	FUNCTION_45
0x4001dae	              0x5b	                                 pop rbx	      7121	screen.c	FUNCTION_45
0x4001daf	              0x5d	                                 pop rbp	      7121	screen.c	FUNCTION_45
0x4001db0	            0x415c	                                 pop r12	      7121	screen.c	FUNCTION_45
0x4001db2	            0x415d	                                 pop r13	      7121	screen.c	FUNCTION_45
0x4001db4	            0x415e	                                 pop r14	      7121	screen.c	FUNCTION_45
0x4001db6	            0x415f	                                 pop r15	      7121	screen.c	FUNCTION_45
0x4001db8	              0xc3	                                     ret	      7121	screen.c	FUNCTION_45
prepare_search_hl	functions,0:IF,7:DO,0:ELSE,2:CALL,3:FOR,1:WHILE,2:SWITCH,0	124
0x4000f70	            0x4157	                                push r15	      7771	screen.c	FUNCTION_55
0x4000f72	            0x4156	                                push r14	      7771	screen.c	FUNCTION_55
0x4000f74	            0x4155	                                push r13	      7771	screen.c	FUNCTION_55
0x4000f76	            0x4154	                                push r12	      7771	screen.c	FUNCTION_55
0x4000f78	          0x4989f4	                            mov r12, rsi	      7771	screen.c	FUNCTION_55
0x4000f7b	              0x55	                                push rbp	      7771	screen.c	FUNCTION_55
0x4000f7c	              0x53	                                push rbx	      7771	screen.c	FUNCTION_55
0x4000f7d	          0x4889fd	                            mov rbp, rdi	      7771	screen.c	FUNCTION_55
0x4000f80	        0x4883ec08	                              sub rsp, 8	      7771	screen.c	FUNCTION_55
0x4000f84	    0x4c8bbf501500	          mov r15, qword [rdi + 0x1550] 	      7785	screen.c	FUNCTION_55
0x4000f8b	    0x488b3d000000	            mov rdi, qword [0x04000f92] 	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x4000f92	          0x4d85ff	                           test r15, r15	      7787	screen.c	FUNCTION_55	WHILE_1
0x4000f95	           0xf95c3	                                setne bl	      7787	screen.c	FUNCTION_55	WHILE_1
0x4000f98	          0x4885ff	                           test rdi, rdi	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x4000f9b	     0xf8421010000	                            je 0x40010c2	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x4000fa1	    0x48833d000000	               cmp qword [0x04000fa9], 0	      7797	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x4000fa9	     0xf8513010000	                           jne 0x40010c2	      7797	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x4000faf	      0xe800000000	                          call 0x4000fb4	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x4000fb4	            0x85c0	                           test eax, eax	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x4000fb6	     0xf8400010000	                            je 0x40010bc	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x4000fbc	    0x41be00000000	                             mov r14d, 0	      7791	screen.c	FUNCTION_55	WHILE_1	IF_1
0x4000fc2	    0x4983be680100	              cmp qword [r14 + 0x168], 0	      7800	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0x4000fca	            0x7549	                           jne 0x4001015	      7800	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0x4000fcc	        0x4c396578	            cmp qword [rbp + 0x78], r12 	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fd0	    0x4d89a6680100	            mov qword [r14 + 0x168], r12	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fd7	            0x7d3c	                           jge 0x4001015	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fd9	          0x4c89e6	                            mov rsi, r12	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fdc	            0xeb1a	                           jmp 0x4000ff8	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fde	            0x6690	                                     nop	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fe0	    0x498b86680100	           mov rax, qword [r14 + 0x168] 	      7804	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fe7	        0x488d70ff	                      lea rsi, [rax - 1]	      7804	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000feb	        0x48397578	            cmp qword [rbp + 0x78], rsi 	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000fef	    0x4989b6680100	            mov qword [r14 + 0x168], rsi	      7804	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000ff6	            0x7d1d	                           jge 0x4001015	      7803	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0x4000ff8	        0x4883ee01	                              sub rsi, 1	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000ffc	          0x4531c9	                            xor r9d, r9d	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000fff	            0x31c9	                            xor ecx, ecx	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001001	            0x31d2	                            xor edx, edx	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001003	    0x41b801000000	                              mov r8d, 1	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001009	          0x4889ef	                            mov rdi, rbp	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x400100c	      0xe800000000	                          call 0x4001011	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001011	            0x85c0	                           test eax, eax	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001013	            0x74cb	                            je 0x4000fe0	      7805	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4001015	            0x84db	                             test bl, bl	      7812	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x4001017	            0x740b	                            je 0x4001024	      7812	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x4001019	    0x41c787f00100	              mov dword [r15 + 0x1f0], 0	      7813	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x4001024	    0x498b96680100	           mov rdx, qword [r14 + 0x168] 	      7813	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x400102b	    0x4981fe000000	                              cmp r14, 0	      7813	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x4001032	    0x41bd00000000	                             mov r13d, 0	      7813	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x4001038	        0x4d0f45ef	                         cmovne r13, r15	      7813	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0x400103c	      0xb801000000	                              mov eax, 1	      7833	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001041	            0x31c9	                            xor ecx, ecx	      7833	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001043	       0xf1f440000	                   nop dword [rax + rax]	      7833	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001048	          0x4c39e2	                            cmp rdx, r12	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400104b	            0x7d5b	                           jge 0x40010a8	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400104d	        0x49833e00	                      cmp qword [r14], 0	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001051	     0xf84c1000000	                            je 0x4001118	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001057	          0x4d89e8	                             mov r8, r13	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x400105a	          0x4c89f6	                            mov rsi, r14	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x400105d	          0x4889ef	                            mov rdi, rbp	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001060	      0xe86bfaffff	                 call sym.next_search_hl	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001065	            0x84db	                             test bl, bl	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001067	     0xf84cb000000	                            je 0x4001138	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400106d	    0x418b97f00100	           mov edx, dword [r15 + 0x1f0] 	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001074	            0x31c0	                            xor eax, eax	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001076	            0x85d2	                           test edx, edx	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001078	           0xf95c0	                                setne al	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400107b	    0x498b96580100	           mov rdx, qword [r14 + 0x158] 	      7823	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x4001082	          0x4885d2	                           test rdx, rdx	      7823	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x4001085	            0x7471	                            je 0x40010f8	      7823	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x4001087	    0x490396a80000	             add rdx, qword [r14 + 0xa8]	      7827	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x400108e	    0x418b8eb00000	            mov ecx, dword [r14 + 0xb0] 	      7828	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x4001095	        0x492b5608	                sub rdx, qword [r14 + 8]	      7827	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x4001099	          0x4c39e2	                            cmp rdx, r12	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400109c	    0x498996680100	            mov qword [r14 + 0x168], rdx	      7825	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0x40010a3	            0x7ca8	                            jl 0x400104d	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x40010a5	           0xf1f00	                         nop dword [rax]	      7816	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x40010a8	    0x4981fe000000	                              cmp r14, 0	      7837	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010af	            0x740b	                            je 0x40010bc	      7837	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010b1	            0x84db	                             test bl, bl	      7837	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010b3	     0xf8487000000	                            je 0x4001140	      7837	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010b9	          0x4d8b3f	                    mov r15, qword [r15]	      7838	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010bc	          0x4d85ff	                           test r15, r15	      7838	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010bf	           0xf95c3	                                setne bl	      7838	screen.c	FUNCTION_55	WHILE_1	IF_7
0x40010c2	          0x4d85ff	                           test r15, r15	      7787	screen.c	FUNCTION_55	WHILE_1
0x40010c5	            0x7479	                            je 0x4001140	      7787	screen.c	FUNCTION_55	WHILE_1
0x40010c7	    0x498bbf080200	           mov rdi, qword [r15 + 0x208] 	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x40010ce	    0x4d8db7080200	                  lea r14, [r15 + 0x208]	      7795	screen.c	FUNCTION_55	WHILE_1	ELSE_1
0x40010d5	          0x4885ff	                           test rdi, rdi	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x40010d8	            0x74ce	                            je 0x40010a8	      7796	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x40010da	    0x4983bf600300	              cmp qword [r15 + 0x360], 0	      7797	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x40010e2	            0x75c4	                           jne 0x40010a8	      7797	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0x40010e4	      0xe800000000	                          call 0x40010e9	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x40010e9	            0x85c0	                           test eax, eax	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x40010eb	            0x74bb	                            je 0x40010a8	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x40010ed	      0xe9d0feffff	                           jmp 0x4000fc2	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x40010f2	    0x660f1f440000	                    nop word [rax + rax]	      7798	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0x40010f8	    0x498bbe680100	           mov rdi, qword [r14 + 0x168] 	      7832	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x40010ff	            0x31c9	                            xor ecx, ecx	      7833	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001101	        0x488d5701	                      lea rdx, [rdi + 1]	      7832	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001105	    0x498996680100	            mov qword [r14 + 0x168], rdx	      7832	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x400110c	      0xe937ffffff	                           jmp 0x4001048	      7832	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001111	     0xf1f80000000	                         nop dword [rax]	      7832	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0x4001118	            0x85c0	                           test eax, eax	      7817	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400111a	            0x748c	                            je 0x40010a8	      7817	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400111c	            0x84db	                             test bl, bl	      7817	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400111e	            0x7488	                            je 0x40010a8	      7817	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001120	          0x4d89e8	                             mov r8, r13	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001123	          0x4c89f6	                            mov rsi, r14	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001126	          0x4889ef	                            mov rdi, rbp	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001129	      0xe8a2f9ffff	                 call sym.next_search_hl	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x400112e	      0xe93affffff	                           jmp 0x400106d	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001133	       0xf1f440000	                   nop dword [rax + rax]	      7819	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0x4001138	            0x31c0	                            xor eax, eax	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400113a	      0xe93cffffff	                           jmp 0x400107b	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x400113f	              0x90	                                     nop	      7822	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0x4001140	        0x4883c408	                              add rsp, 8	      7840	screen.c	FUNCTION_55
0x4001144	              0x5b	                                 pop rbx	      7840	screen.c	FUNCTION_55
0x4001145	              0x5d	                                 pop rbp	      7840	screen.c	FUNCTION_55
0x4001146	            0x415c	                                 pop r12	      7840	screen.c	FUNCTION_55
0x4001148	            0x415d	                                 pop r13	      7840	screen.c	FUNCTION_55
0x400114a	            0x415e	                                 pop r14	      7840	screen.c	FUNCTION_55
0x400114c	            0x415f	                                 pop r15	      7840	screen.c	FUNCTION_55
0x400114e	              0xc3	                                     ret	      7840	screen.c	FUNCTION_55
update_single_line	functions,0:IF,3:DO,0:ELSE,0:CALL,13:FOR,1:WHILE,0:SWITCH,0	105
0x400fa10	            0x4155	                                push r13	       922	screen.c	FUNCTION_17
0x400fa12	            0x4154	                                push r12	       922	screen.c	FUNCTION_17
0x400fa14	              0x55	                                push rbp	       922	screen.c	FUNCTION_17
0x400fa15	              0x53	                                push rbx	       922	screen.c	FUNCTION_17
0x400fa16	          0x4889fd	                            mov rbp, rdi	       922	screen.c	FUNCTION_17
0x400fa19	      0xbf01000000	                              mov edi, 1	      8743	screen.c	FUNCTION_68	CALL_1
0x400fa1e	          0x4889f3	                            mov rbx, rsi	       922	screen.c	FUNCTION_17
0x400fa21	        0x4883ec28	                           sub rsp, 0x28	       922	screen.c	FUNCTION_17
0x400fa25	    0x64488b042528	                mov rax, qword fs:[0x28]	       922	screen.c	FUNCTION_17
0x400fa2e	      0x4889442418	             mov qword [rsp + 0x18], rax	       922	screen.c	FUNCTION_17
0x400fa33	            0x31c0	                            xor eax, eax	       922	screen.c	FUNCTION_17
0x400fa35	      0xe800000000	                          call 0x400fa3a	      8743	screen.c	FUNCTION_68	CALL_1
0x400fa3a	    0x48833d000000	               cmp qword [0x0400fa42], 0	       930	screen.c	FUNCTION_17	IF_1	CALL_1
0x400fa42	            0x740a	                            je 0x400fa4e	       930	screen.c	FUNCTION_17	IF_1	CALL_1
0x400fa44	    0x8b0d00000000	            mov ecx, dword [0x0400fa4a] 	       930	screen.c	FUNCTION_17	IF_1	CALL_1
0x400fa4a	            0x85c9	                           test ecx, ecx	       930	screen.c	FUNCTION_17	IF_1	CALL_1
0x400fa4c	            0x7422	                            je 0x400fa70	       930	screen.c	FUNCTION_17	IF_1	CALL_1
0x400fa4e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       970	screen.c	FUNCTION_17
0x400fa53	    0x644833042528	                xor rax, qword fs:[0x28]	       970	screen.c	FUNCTION_17
0x400fa5c	     0xf8556010000	                           jne 0x400fbb8	       970	screen.c	FUNCTION_17
0x400fa62	        0x4883c428	                           add rsp, 0x28	       970	screen.c	FUNCTION_17
0x400fa66	              0x5b	                                 pop rbx	       970	screen.c	FUNCTION_17
0x400fa67	              0x5d	                                 pop rbp	       970	screen.c	FUNCTION_17
0x400fa68	            0x415c	                                 pop r12	       970	screen.c	FUNCTION_17
0x400fa6a	            0x415d	                                 pop r13	       970	screen.c	FUNCTION_17
0x400fa6c	              0xc3	                                     ret	       970	screen.c	FUNCTION_17
0x400fa6d	           0xf1f00	                         nop dword [rax]	       970	screen.c	FUNCTION_17
0x400fa70	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	       933	screen.c	FUNCTION_17	IF_2
0x400fa74	            0x7f09	                            jg 0x400fa7f	       933	screen.c	FUNCTION_17	IF_2
0x400fa76	    0x483b9de80000	            cmp rbx, qword [rbp + 0xe8] 	       933	screen.c	FUNCTION_17	IF_2
0x400fa7d	            0x7c11	                            jl 0x400fa90	       933	screen.c	FUNCTION_17	IF_2
0x400fa7f	    0xc70500000000	               mov dword [0x0400fa89], 0	       969	screen.c	FUNCTION_17
0x400fa89	            0xebc3	                           jmp 0x400fa4e	       969	screen.c	FUNCTION_17
0x400fa8b	       0xf1f440000	                   nop dword [rax + rax]	       969	screen.c	FUNCTION_17
0x400fa90	      0xba00000000	                              mov edx, 0	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400fa95	          0x4889de	                            mov rsi, rbx	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400fa98	          0x4889ef	                            mov rdi, rbp	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400fa9b	      0xe800000000	                          call 0x400faa0	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400faa0	          0x4885c0	                           test rax, rax	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400faa3	            0x75da	                           jne 0x400fa7f	       934	screen.c	FUNCTION_17	IF_2	CALL_2
0x400faa5	    0x488b3d000000	            mov rdi, qword [0x0400faac] 	       938	screen.c	FUNCTION_17	IF_2	CALL_3
0x400faac	          0x4889e6	                            mov rsi, rsp	       938	screen.c	FUNCTION_17	IF_2	CALL_3
0x400faaf	      0xe800000000	                          call 0x400fab4	       938	screen.c	FUNCTION_17	IF_2	CALL_3
0x400fab4	          0x4889e7	                            mov rdi, rsp	       939	screen.c	FUNCTION_17	IF_2	CALL_4
0x400fab7	      0xe800000000	                          call 0x400fabc	       939	screen.c	FUNCTION_17	IF_2	CALL_4
0x400fabc	      0xe85f0bffff	                 call sym.update_prepare	       941	screen.c	FUNCTION_17	IF_2	CALL_5
0x400fac1	    0x8b85f8000000	            mov eax, dword [rbp + 0xf8] 	       944	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fac7	            0x85c0	                           test eax, eax	       944	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fac9	            0x7e42	                           jle 0x400fb0d	       944	screen.c	FUNCTION_17	IF_2	FOR_1
0x400facb	    0x488b95000100	           mov rdx, qword [rbp + 0x100] 	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fad2	          0x483b1a	                    cmp rbx, qword [rdx]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fad5	            0x7447	                            je 0x400fb1e	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fad7	          0x83e801	                              sub eax, 1	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fada	    0x41bc18000000	                          mov r12d, 0x18	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fae0	          0x4531ed	                          xor r13d, r13d	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fae3	      0x488d4c4003	              lea rcx, [rax + rax*2 + 3]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fae8	        0x48c1e103	                              shl rcx, 3	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400faec	            0xeb11	                           jmp 0x400faff	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400faee	            0x6690	                                     nop	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400faf0	      0x498d442418	                   lea rax, [r12 + 0x18]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400faf5	      0x483b5c02e8	       cmp rbx, qword [rdx + rax - 0x18]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fafa	            0x742c	                            je 0x400fb28	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fafc	          0x4989c4	                            mov r12, rax	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400faff	    0x420fb74422f0	      movzx eax, word [rdx + r12 - 0x10]	       960	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fb05	          0x4101c5	                           add r13d, eax	       960	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fb08	          0x4939cc	                            cmp r12, rcx	       944	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fb0b	            0x75e3	                           jne 0x400faf0	       944	screen.c	FUNCTION_17	IF_2	FOR_1
0x400fb0d	      0xe82ea1ffff	                  call sym.update_finish	       963	screen.c	FUNCTION_17	IF_2	CALL_12
0x400fb12	            0x31ff	                            xor edi, edi	       966	screen.c	FUNCTION_17	IF_2	CALL_13
0x400fb14	      0xe800000000	                          call 0x400fb19	       966	screen.c	FUNCTION_17	IF_2	CALL_13
0x400fb19	      0xe961ffffff	                           jmp 0x400fa7f	       966	screen.c	FUNCTION_17	IF_2	CALL_13
0x400fb1e	          0x4531e4	                          xor r12d, r12d	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x400fb21	          0x4531ed	                          xor r13d, r13d	       943	screen.c	FUNCTION_17	IF_2
0x400fb24	         0xf1f4000	                         nop dword [rax]	       943	screen.c	FUNCTION_17	IF_2
0x400fb28	    0x488bb5501500	          mov rsi, qword [rbp + 0x1550] 	       950	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x400fb2f	        0x488d7d08	                      lea rdi, [rbp + 8]	       950	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x400fb33	    0xc70500000000	         mov dword [0x0400fb3d], 0x270f 	      9222	screen.c	FUNCTION_77
0x400fb3d	    0xc70500000000	         mov dword [0x0400fb47], 0x270f 	      9222	screen.c	FUNCTION_77
0x400fb47	      0xe8340bffff	          call sym.init_search_hl.isra.3	       950	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x400fb4c	    0x8b1500000000	            mov edx, dword [0x0400fb52] 	      7709	screen.c	FUNCTION_52	IF_1
0x400fb52	            0x85d2	                           test edx, edx	      7709	screen.c	FUNCTION_52	IF_1
0x400fb54	            0x740a	                            je 0x400fb60	      7709	screen.c	FUNCTION_52	IF_1
0x400fb56	    0x8b0500000000	            mov eax, dword [0x0400fb5c] 	      7709	screen.c	FUNCTION_52	IF_1
0x400fb5c	            0x85c0	                           test eax, eax	      7709	screen.c	FUNCTION_52	IF_1
0x400fb5e	            0x7451	                            je 0x400fbb1	      7709	screen.c	FUNCTION_52	IF_1
0x400fb60	          0x4889de	                            mov rsi, rbx	       952	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x400fb63	          0x4889ef	                            mov rdi, rbp	       952	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x400fb66	      0xe80514ffff	              call sym.prepare_search_hl	       952	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x400fb6b	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb72	          0x4531c0	                            xor r8d, r8d	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb75	          0x4889ef	                            mov rdi, rbp	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb78	          0x4489ea	                           mov edx, r13d	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb7b	          0x4889de	                            mov rsi, rbx	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb7e	    0x420fb74c2008	        movzx ecx, word [rax + r12 + 8] 	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb84	          0x4401e9	                           add ecx, r13d	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb87	      0xe854a4ffff	                       call sym.win_line	       954	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x400fb8c	    0x488b3d000000	            mov rdi, qword [0x0400fb93] 	      7726	screen.c	FUNCTION_53	IF_1
0x400fb93	          0x4885ff	                           test rdi, rdi	      7726	screen.c	FUNCTION_53	IF_1
0x400fb96	     0xf8471ffffff	                            je 0x400fb0d	      7726	screen.c	FUNCTION_53	IF_1
0x400fb9c	      0xe800000000	                          call 0x400fba1	      7728	screen.c	FUNCTION_53	IF_1	CALL_1
0x400fba1	    0x48c705000000	               mov qword [0x0400fbac], 0	      7729	screen.c	FUNCTION_53	IF_1
0x400fbac	      0xe95cffffff	                           jmp 0x400fb0d	      7729	screen.c	FUNCTION_53	IF_1
0x400fbb1	      0xe83a0affff	         call sym.start_search_hl.part.1	      7729	screen.c	FUNCTION_53	IF_1
0x400fbb6	            0xeba8	                           jmp 0x400fb60	      7729	screen.c	FUNCTION_53	IF_1
0x400fbb8	      0xe800000000	                          call 0x400fbbd	       970	screen.c	FUNCTION_17
screen_screenrow	functions,0:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	2
0x40132d0	    0x8b0500000000	            mov eax, dword [0x040132d6] 	     11144	screen.c	FUNCTION_103
0x40132d6	              0xc3	                                     ret	     11144	screen.c	FUNCTION_103
fillchar_status	functions,0:IF,5:DO,0:ELSE,3:CALL,7:FOR,0:WHILE,0:SWITCH,0	54
0x40001c0	              0x55	                                push rbp	     10706	screen.c	FUNCTION_94
0x40001c1	              0x53	                                push rbx	     10706	screen.c	FUNCTION_94
0x40001c2	          0x4889fd	                            mov rbp, rdi	     10706	screen.c	FUNCTION_94
0x40001c5	          0x4889f3	                            mov rbx, rsi	     10706	screen.c	FUNCTION_94
0x40001c8	        0x4883ec08	                              sub rsp, 8	     10706	screen.c	FUNCTION_94
0x40001cc	        0x488b7e08	                mov rdi, qword [rsi + 8]	     10710	screen.c	FUNCTION_94	IF_1	CALL_1
0x40001d0	      0xe800000000	                          call 0x40001d5	     10710	screen.c	FUNCTION_94	IF_1	CALL_1
0x40001d5	            0x85c0	                           test eax, eax	     10710	screen.c	FUNCTION_94	IF_1	CALL_1
0x40001d7	            0x7457	                            je 0x4000230	     10710	screen.c	FUNCTION_94	IF_1	CALL_1
0x40001d9	    0x483b1d000000	            cmp rbx, qword [0x040001e0] 	     10712	screen.c	FUNCTION_94	IF_1	IF_2
0x40001e0	            0x747e	                            je 0x4000260	     10712	screen.c	FUNCTION_94	IF_1	IF_2
0x40001e2	    0x8b1500000000	            mov edx, dword [0x040001e8] 	     10719	screen.c	FUNCTION_94	IF_1	ELSE_1	CALL_3
0x40001e8	            0x85d2	                           test edx, edx	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x40001ea	          0x895500	                    mov dword [rbp], edx	     10719	screen.c	FUNCTION_94	IF_1	ELSE_1	CALL_3
0x40001ed	    0x8b0500000000	            mov eax, dword [0x040001f3] 	     10720	screen.c	FUNCTION_94	IF_1	ELSE_1
0x40001f3	            0x7457	                            je 0x400024c	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x40001f5	    0x8b0d00000000	            mov ecx, dword [0x040001fb] 	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x40001fb	    0x390d00000000	            cmp dword [0x04000201], ecx 	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x4000201	            0x754e	                           jne 0x4000251	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x4000203	    0x483b1d000000	            cmp rbx, qword [0x0400020a] 	     10739	screen.c	FUNCTION_94	IF_4
0x400020a	            0x7545	                           jne 0x4000251	     10739	screen.c	FUNCTION_94	IF_4
0x400020c	    0x488b0d000000	            mov rcx, qword [0x04000213] 	     10739	screen.c	FUNCTION_94	IF_4
0x4000213	    0x48390d000000	            cmp qword [0x0400021a], rcx 	     10739	screen.c	FUNCTION_94	IF_4
0x400021a	            0x7435	                            je 0x4000251	     10739	screen.c	FUNCTION_94	IF_4
0x400021c	    0x8b3500000000	            mov esi, dword [0x04000222] 	     10740	screen.c	FUNCTION_94	IF_4
0x4000222	    0x393500000000	            cmp dword [0x04000228], esi 	     10740	screen.c	FUNCTION_94	IF_4
0x4000228	            0x7527	                           jne 0x4000251	     10740	screen.c	FUNCTION_94	IF_4
0x400022a	            0xeb47	                           jmp 0x4000273	     10740	screen.c	FUNCTION_94	IF_4
0x400022c	         0xf1f4000	                         nop dword [rax]	     10740	screen.c	FUNCTION_94	IF_4
0x4000230	    0x483b1d000000	            cmp rbx, qword [0x04000237] 	     10725	screen.c	FUNCTION_94	ELSE_2	IF_3
0x4000237	            0x7447	                            je 0x4000280	     10725	screen.c	FUNCTION_94	ELSE_2	IF_3
0x4000239	    0x8b1500000000	            mov edx, dword [0x0400023f] 	     10732	screen.c	FUNCTION_94	ELSE_3	CALL_5
0x400023f	            0x85d2	                           test edx, edx	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x4000241	          0x895500	                    mov dword [rbp], edx	     10732	screen.c	FUNCTION_94	ELSE_3	CALL_5
0x4000244	    0x8b0500000000	            mov eax, dword [0x0400024a] 	     10733	screen.c	FUNCTION_94	ELSE_3
0x400024a	            0x75a9	                           jne 0x40001f5	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x400024c	      0xb83d000000	                           mov eax, 0x3d	     10744	screen.c	FUNCTION_94
0x4000251	        0x4883c408	                              add rsp, 8	     10745	screen.c	FUNCTION_94
0x4000255	              0x5b	                                 pop rbx	     10745	screen.c	FUNCTION_94
0x4000256	              0x5d	                                 pop rbp	     10745	screen.c	FUNCTION_94
0x4000257	              0xc3	                                     ret	     10745	screen.c	FUNCTION_94
0x4000258	     0xf1f84000000	                   nop dword [rax + rax]	     10745	screen.c	FUNCTION_94
0x4000260	    0x8b1500000000	            mov edx, dword [0x04000266] 	     10714	screen.c	FUNCTION_94	IF_1	IF_2	CALL_2
0x4000266	          0x895500	                    mov dword [rbp], edx	     10714	screen.c	FUNCTION_94	IF_1	IF_2	CALL_2
0x4000269	    0x8b0500000000	            mov eax, dword [0x0400026f] 	     10715	screen.c	FUNCTION_94	IF_1	IF_2
0x400026f	            0x85d2	                           test edx, edx	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x4000271	            0x7582	                           jne 0x40001f5	     10738	screen.c	FUNCTION_94	IF_4	CALL_7
0x4000273	      0xb85e000000	                           mov eax, 0x5e	     10743	screen.c	FUNCTION_94	IF_5
0x4000278	            0xebd7	                           jmp 0x4000251	     10743	screen.c	FUNCTION_94	IF_5
0x400027a	    0x660f1f440000	                    nop word [rax + rax]	     10743	screen.c	FUNCTION_94	IF_5
0x4000280	    0x8b1500000000	            mov edx, dword [0x04000286] 	     10727	screen.c	FUNCTION_94	ELSE_2	IF_3	CALL_4
0x4000286	          0x895500	                    mov dword [rbp], edx	     10727	screen.c	FUNCTION_94	ELSE_2	IF_3	CALL_4
0x4000289	    0x8b0500000000	            mov eax, dword [0x0400028f] 	     10728	screen.c	FUNCTION_94	ELSE_2	IF_3
0x400028f	            0xebde	                           jmp 0x400026f	     10728	screen.c	FUNCTION_94	ELSE_2	IF_3
free_screenlines	functions,0:IF,0:DO,0:ELSE,0:CALL,8:FOR,1:WHILE,0:SWITCH,0	32
0x4002420	              0x55	                                push rbp	      9055	screen.c	FUNCTION_70
0x4002421	              0x53	                                push rbx	      9055	screen.c	FUNCTION_70
0x4002422	            0x31db	                            xor ebx, ebx	      9055	screen.c	FUNCTION_70
0x4002424	      0xbd00000000	                              mov ebp, 0	      9055	screen.c	FUNCTION_70
0x4002429	        0x4883ec08	                              sub rsp, 8	      9055	screen.c	FUNCTION_70
0x400242d	    0x488b3d000000	            mov rdi, qword [0x04002434] 	      9059	screen.c	FUNCTION_70	CALL_1
0x4002434	      0xe800000000	                          call 0x4002439	      9059	screen.c	FUNCTION_70	CALL_1
0x4002439	    0x8b0500000000	            mov eax, dword [0x0400243f] 	      9060	screen.c	FUNCTION_70	FOR_1
0x400243f	            0x85c0	                           test eax, eax	      9060	screen.c	FUNCTION_70	FOR_1
0x4002441	            0x7e1d	                           jle 0x4002460	      9060	screen.c	FUNCTION_70	FOR_1
0x4002443	       0xf1f440000	                   nop dword [rax + rax]	      9060	screen.c	FUNCTION_70	FOR_1
0x4002448	        0x488b7d00	                    mov rdi, qword [rbp]	      9061	screen.c	FUNCTION_70	CALL_2
0x400244c	          0x83c301	                              add ebx, 1	      9060	screen.c	FUNCTION_70	FOR_1
0x400244f	        0x4883c508	                              add rbp, 8	      9060	screen.c	FUNCTION_70	FOR_1
0x4002453	      0xe800000000	                          call 0x4002458	      9061	screen.c	FUNCTION_70	CALL_2
0x4002458	    0x391d00000000	            cmp dword [0x0400245e], ebx 	      9060	screen.c	FUNCTION_70	FOR_1
0x400245e	            0x7fe8	                            jg 0x4002448	      9060	screen.c	FUNCTION_70	FOR_1
0x4002460	    0x488b3d000000	            mov rdi, qword [0x04002467] 	      9062	screen.c	FUNCTION_70	CALL_3
0x4002467	      0xe800000000	                          call 0x400246c	      9062	screen.c	FUNCTION_70	CALL_3
0x400246c	    0x488b3d000000	            mov rdi, qword [0x04002473] 	      9064	screen.c	FUNCTION_70	CALL_4
0x4002473	      0xe800000000	                          call 0x4002478	      9064	screen.c	FUNCTION_70	CALL_4
0x4002478	    0x488b3d000000	            mov rdi, qword [0x0400247f] 	      9065	screen.c	FUNCTION_70	CALL_5
0x400247f	      0xe800000000	                          call 0x4002484	      9065	screen.c	FUNCTION_70	CALL_5
0x4002484	    0x488b3d000000	            mov rdi, qword [0x0400248b] 	      9066	screen.c	FUNCTION_70	CALL_6
0x400248b	      0xe800000000	                          call 0x4002490	      9066	screen.c	FUNCTION_70	CALL_6
0x4002490	    0x488b3d000000	            mov rdi, qword [0x04002497] 	      9067	screen.c	FUNCTION_70	CALL_7
0x4002497	      0xe800000000	                          call 0x400249c	      9067	screen.c	FUNCTION_70	CALL_7
0x400249c	    0x488b3d000000	            mov rdi, qword [0x040024a3] 	      9068	screen.c	FUNCTION_70	CALL_8
0x40024a3	        0x4883c408	                              add rsp, 8	      9069	screen.c	FUNCTION_70
0x40024a7	              0x5b	                                 pop rbx	      9069	screen.c	FUNCTION_70
0x40024a8	              0x5d	                                 pop rbp	      9069	screen.c	FUNCTION_70
0x40024a9	      0xe900000000	                           jmp 0x40024ae	      9068	screen.c	FUNCTION_70	CALL_8
unshowmode	functions,0:IF,1:DO,0:ELSE,1:CALL,3:FOR,0:WHILE,0:SWITCH,0	19
0x4009cb0	              0x53	                                push rbx	     10464	screen.c	FUNCTION_89
0x4009cb1	            0x89fb	                            mov ebx, edi	     10464	screen.c	FUNCTION_89
0x4009cb3	      0xe800000000	                          call 0x4009cb8	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cb8	            0x85c0	                           test eax, eax	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cba	            0x7424	                            je 0x4009ce0	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cbc	            0x85db	                           test ebx, ebx	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cbe	            0x7513	                           jne 0x4009cd3	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cc0	      0xe800000000	                          call 0x4009cc5	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cc5	            0x85c0	                           test eax, eax	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cc7	            0x740a	                            je 0x4009cd3	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cc9	    0x8b0500000000	            mov eax, dword [0x04009ccf] 	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009ccf	            0x85c0	                           test eax, eax	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cd1	            0x740d	                            je 0x4009ce0	     10468	screen.c	FUNCTION_89	IF_1	CALL_2
0x4009cd3	              0x5b	                                 pop rbx	     10472	screen.c	FUNCTION_89
0x4009cd4	      0xe917eaffff	                       jmp sym.clearmode	     10471	screen.c	FUNCTION_89	CALL_3
0x4009cd9	     0xf1f80000000	                         nop dword [rax]	     10471	screen.c	FUNCTION_89	CALL_3
0x4009ce0	    0xc70500000000	               mov dword [0x04009cea], 1	     10469	screen.c	FUNCTION_89	IF_1
0x4009cea	              0x5b	                                 pop rbx	     10472	screen.c	FUNCTION_89
0x4009ceb	              0xc3	                                     ret	     10472	screen.c	FUNCTION_89
clearmode	functions,0:IF,1:DO,0:ELSE,0:CALL,4:FOR,0:WHILE,0:SWITCH,0	14
0x40086f0	    0x8b0500000000	            mov eax, dword [0x040086f6] 	     10454	screen.c	FUNCTION_88
0x40086f6	    0xc70500000000	               mov dword [0x04008700], 0	     10453	screen.c	FUNCTION_88
0x4008700	          0x83e801	                              sub eax, 1	     10454	screen.c	FUNCTION_88
0x4008703	    0x890500000000	            mov dword [0x04008709], eax 	     10454	screen.c	FUNCTION_88
0x4008709	    0x8b0500000000	            mov eax, dword [0x0400870f] 	     10481	screen.c	FUNCTION_90	IF_1
0x400870f	            0x85c0	                           test eax, eax	     10481	screen.c	FUNCTION_90	IF_1
0x4008711	            0x750d	                           jne 0x4008720	     10481	screen.c	FUNCTION_90	IF_1
0x4008713	      0xe900000000	                           jmp 0x4008718	     10483	screen.c	FUNCTION_90	CALL_4
0x4008718	     0xf1f84000000	                   nop dword [rax + rax]	     10483	screen.c	FUNCTION_90	CALL_4
0x4008720	        0x4883ec08	                              sub rsp, 8	     10479	screen.c	FUNCTION_90
0x4008724	    0x8b3d00000000	            mov edi, dword [0x0400872a] 	     10482	screen.c	FUNCTION_90	CALL_3
0x400872a	      0xe8a18fffff	                 call sym.recording_mode	     10482	screen.c	FUNCTION_90	CALL_3
0x400872f	        0x4883c408	                              add rsp, 8	     10484	screen.c	FUNCTION_90
0x4008733	      0xe900000000	                           jmp 0x4008738	     10483	screen.c	FUNCTION_90	CALL_4
win_redr_status_matches	functions,0:IF,25:DO,0:ELSE,8:CALL,33:FOR,3:WHILE,2:SWITCH,0	426
0x4007760	            0x4157	                                push r15	      6647	screen.c	FUNCTION_41
0x4007762	            0x4156	                                push r14	      6647	screen.c	FUNCTION_41
0x4007764	            0x4155	                                push r13	      6647	screen.c	FUNCTION_41
0x4007766	            0x4154	                                push r12	      6647	screen.c	FUNCTION_41
0x4007768	              0x55	                                push rbp	      6647	screen.c	FUNCTION_41
0x4007769	              0x53	                                push rbx	      6647	screen.c	FUNCTION_41
0x400776a	        0x4883ec68	                           sub rsp, 0x68	      6647	screen.c	FUNCTION_41
0x400776e	    0x64488b042528	                mov rax, qword fs:[0x28]	      6647	screen.c	FUNCTION_41
0x4007777	      0x4889442458	             mov qword [rsp + 0x58], rax	      6647	screen.c	FUNCTION_41
0x400777c	            0x31c0	                            xor eax, eax	      6647	screen.c	FUNCTION_41
0x400777e	          0x4885d2	                           test rdx, rdx	      6670	screen.c	FUNCTION_41	IF_1
0x4007781	        0x48893c24	                    mov qword [rsp], rdi	      6647	screen.c	FUNCTION_41
0x4007785	        0x89742440	             mov dword [rsp + 0x40], esi	      6647	screen.c	FUNCTION_41
0x4007789	        0x894c2428	             mov dword [rsp + 0x28], ecx	      6647	screen.c	FUNCTION_41
0x400778d	      0x448944242c	             mov dword [rsp + 0x2c], r8d	      6647	screen.c	FUNCTION_41
0x4007792	     0xf846f030000	                            je 0x4007b07	      6670	screen.c	FUNCTION_41	IF_1
0x4007798	    0x8b3500000000	            mov esi, dword [0x0400779e] 	      6674	screen.c	FUNCTION_41	IF_2
0x400779e	          0x4889d3	                            mov rbx, rdx	      6674	screen.c	FUNCTION_41	IF_2
0x40077a1	            0x85f6	                           test esi, esi	      6674	screen.c	FUNCTION_41	IF_2
0x40077a3	     0xf8581030000	                           jne 0x4007b2a	      6674	screen.c	FUNCTION_41	IF_2
0x40077a9	    0x8b0500000000	            mov eax, dword [0x040077af] 	      6678	screen.c	FUNCTION_41	CALL_2
0x40077af	          0x8d7801	                      lea edi, [rax + 1]	      6678	screen.c	FUNCTION_41	CALL_2
0x40077b2	      0xe800000000	                          call 0x40077b7	      6678	screen.c	FUNCTION_41	CALL_2
0x40077b7	          0x4989c5	                            mov r13, rax	      6678	screen.c	FUNCTION_41	CALL_2
0x40077ba	          0x4d85ed	                           test r13, r13	      6679	screen.c	FUNCTION_41	IF_3
0x40077bd	     0xf8444030000	                            je 0x4007b07	      6679	screen.c	FUNCTION_41	IF_3
0x40077c3	      0x4863442428	         movsxd rax, dword [rsp + 0x28] 	      6682	screen.c	FUNCTION_41	IF_4
0x40077c8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6682	screen.c	FUNCTION_41	IF_4
0x40077cb	     0xf84c0040000	                            je 0x4007c91	      6682	screen.c	FUNCTION_41	IF_4
0x40077d1	        0x48c1e003	                              shl rax, 3	      6682	screen.c	FUNCTION_41	IF_4
0x40077d5	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      6656	screen.c	FUNCTION_41
0x40077dd	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      6688	screen.c	FUNCTION_41	CALL_4
0x40077e1	            0x85c9	                           test ecx, ecx	      6688	screen.c	FUNCTION_41	CALL_4
0x40077e3	     0xf8597040000	                           jne 0x4007c80	      6688	screen.c	FUNCTION_41	CALL_4
0x40077e9	        0x488b3403	              mov rsi, qword [rbx + rax]	      6688	screen.c	FUNCTION_41	CALL_4
0x40077ed	        0x488b3c24	                    mov rdi, qword [rsp]	      6688	screen.c	FUNCTION_41	CALL_4
0x40077f1	      0xe82a9effff	               call sym.status_match_len	      6688	screen.c	FUNCTION_41	CALL_4
0x40077f6	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      6689	screen.c	FUNCTION_41	IF_5
0x40077fa	            0x85d2	                           test edx, edx	      6689	screen.c	FUNCTION_41	IF_5
0x40077fc	     0xf85e3030000	                           jne 0x4007be5	      6689	screen.c	FUNCTION_41	IF_5
0x4007802	    0xc70500000000	               mov dword [0x0400780c], 0	      6690	screen.c	FUNCTION_41	IF_5
0x400780c	    0x488b35000000	            mov rsi, qword [0x04007813] 	      6729	screen.c	FUNCTION_41	CALL_11
0x4007813	      0x488d7c2454	                   lea rdi, [rsp + 0x54]	      6729	screen.c	FUNCTION_41	CALL_11
0x4007818	      0xe8a389ffff	                call sym.fillchar_status	      6729	screen.c	FUNCTION_41	CALL_11
0x400781d	        0x89442448	             mov dword [rsp + 0x48], eax	      6729	screen.c	FUNCTION_41	CALL_11
0x4007821	    0x8b0500000000	            mov eax, dword [0x04007827] 	      6731	screen.c	FUNCTION_41	IF_13
0x4007827	            0x85c0	                           test eax, eax	      6731	screen.c	FUNCTION_41	IF_13
0x4007829	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6731	screen.c	FUNCTION_41	IF_13
0x400782d	     0xf8534040000	                           jne 0x4007c67	      6731	screen.c	FUNCTION_41	IF_13
0x4007833	      0x41c6450000	                       mov byte [r13], 0	      6733	screen.c	FUNCTION_41	IF_13
0x4007838	            0x31ed	                            xor ebp, ebp	      6734	screen.c	FUNCTION_41	IF_13
0x400783a	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      6734	screen.c	FUNCTION_41	IF_13
0x400783f	          0x4189ec	                           mov r12d, ebp	      6741	screen.c	FUNCTION_41
0x4007842	    0x48c744243000	               mov qword [rsp + 0x30], 0	      6659	screen.c	FUNCTION_41
0x400784b	    0xc74424440000	               mov dword [rsp + 0x44], 0	      6658	screen.c	FUNCTION_41
0x4007853	    0x48c744243800	               mov qword [rsp + 0x38], 0	      6657	screen.c	FUNCTION_41
0x400785c	        0x488d04c3	                  lea rax, [rbx + rax*8]	      6657	screen.c	FUNCTION_41
0x4007860	      0x4889442420	             mov qword [rsp + 0x20], rax	      6657	screen.c	FUNCTION_41
0x4007865	        0x488b0424	                    mov rax, qword [rsp]	      6657	screen.c	FUNCTION_41
0x4007869	        0x4883c028	                           add rax, 0x28	      6657	screen.c	FUNCTION_41
0x400786d	      0x4889442408	                mov qword [rsp + 8], rax	      6657	screen.c	FUNCTION_41
0x4007872	    0x660f1f440000	                    nop word [rax + rax]	      6657	screen.c	FUNCTION_41
0x4007878	      0x448b5c242c	           mov r11d, dword [rsp + 0x2c] 	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x400787d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007882	          0x4585db	                         test r11d, r11d	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007885	     0xf85bd020000	                           jne 0x4007b48	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x400788b	          0x488b30	                    mov rsi, qword [rax]	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x400788e	        0x488b3c24	                    mov rdi, qword [rsp]	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007892	      0xe8899dffff	               call sym.status_match_len	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007897	      0x428d442002	                lea eax, [rax + r12 + 2]	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x400789c	            0x4898	                                    cdqe	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x400789e	    0x483b05000000	            cmp rax, qword [0x040078a5] 	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x40078a5	     0xf8d17030000	                           jge 0x4007bc2	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x40078ab	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      6746	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078af	        0x394c2428	            cmp dword [rsp + 0x28], ecx 	      6746	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078b3	          0x4863dd	                         movsxd rbx, ebp	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078b6	      0x498d441d00	                    lea rax, [r13 + rbx]	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078bb	          0x4989c6	                            mov r14, rax	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078be	     0xf84ec020000	                            je 0x4007bb0	      6746	screen.c	FUNCTION_41	WHILE_2	IF_14
0x40078c4	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x40078c9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x40078ce	          0x4585ff	                         test r15d, r15d	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x40078d1	     0xf85c9020000	                           jne 0x4007ba0	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x40078d7	          0x4c8b38	                    mov r15, qword [rax]	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x40078da	        0x488b0424	                    mov rax, qword [rsp]	      6755	screen.c	FUNCTION_41	WHILE_2
0x40078de	            0x8b00	                    mov eax, dword [rax]	      6755	screen.c	FUNCTION_41	WHILE_2
0x40078e0	          0x83f80b	                            cmp eax, 0xb	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x40078e3	     0xf8477020000	                            je 0x4007b60	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x40078e9	          0x83f815	                           cmp eax, 0x15	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x40078ec	     0xf846e020000	                            je 0x4007b60	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x40078f2	        0x41803f00	                       cmp byte [r15], 0	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40078f6	          0x4c89f0	                            mov rax, r14	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40078f9	     0xf84a9000000	                            je 0x40079a8	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40078ff	          0x4d89fe	                            mov r14, r15	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007902	            0xeb48	                           jmp 0x400794c	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007904	         0xf1f4000	                         nop dword [rax]	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007908	          0x4c89ff	                            mov rdi, r15	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x400790b	    0xff1500000000	                 call qword [0x04007911]	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007911	          0x83f801	                              cmp eax, 1	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007914	          0x4189c6	                           mov r14d, eax	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007917	            0x7e62	                           jle 0x400797b	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007919	          0x4c63c8	                          movsxd r9, eax	      6773	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0x400791c	      0x498d7c1d00	                    lea rdi, [r13 + rbx]	       126	string3.h	FUNCTION_112	CALL_3
0x4007921	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_112	CALL_3
0x4007924	          0x4c89ca	                             mov rdx, r9	       126	string3.h	FUNCTION_112	CALL_3
0x4007927	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       126	string3.h	FUNCTION_112	CALL_3
0x400792c	          0x4401f5	                           add ebp, r14d	      6775	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x400792f	      0xe800000000	                          call 0x4007934	       126	string3.h	FUNCTION_112	CALL_3
0x4007934	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      6774	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007939	      0x4f8d7c0fff	                 lea r15, [r15 + r9 - 1]	      6774	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x400793e	      0x41807f0100	                   cmp byte [r15 + 1], 0	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007943	        0x4d8d7701	                      lea r14, [r15 + 1]	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007947	            0x7459	                            je 0x40079a2	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007949	          0x4863dd	                         movsxd rbx, ebp	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x400794c	      0x488b742408	                mov rsi, qword [rsp + 8]	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x4007951	        0x488b3c24	                    mov rdi, qword [rsp]	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x4007955	          0x4c89f2	                            mov rdx, r14	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x4007958	      0xe8439cffff	  call sym.skip_status_match_char.isra.7	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x400795d	          0x4863c8	                         movsxd rcx, eax	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x4007960	        0x4d8d3c0e	                    lea r15, [r14 + rcx]	      6768	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0x4007964	          0x4c89ff	                            mov rdi, r15	      6769	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0x4007967	      0xe800000000	                          call 0x400796c	      6769	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0x400796c	    0x448b35000000	           mov r14d, dword [0x04007973] 	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007973	          0x4101c4	                           add r12d, eax	      6769	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0x4007976	          0x4585f6	                         test r14d, r14d	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x4007979	            0x758d	                           jne 0x4007908	      6771	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0x400797b	        0x410fb63f	                   movzx edi, byte [r15]	      6780	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0x400797f	          0x4c01eb	                            add rbx, r13	      6780	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0x4007982	        0x4d8d7701	                      lea r14, [r15 + 1]	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x4007986	      0xe800000000	                          call 0x400798b	      6780	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0x400798b	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_110	CALL_3
0x400798e	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x4007991	      0xe800000000	                          call 0x4007996	       110	string3.h	FUNCTION_110	CALL_3
0x4007996	          0x4829d8	                            sub rax, rbx	      6781	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0x4007999	             0x1c5	                            add ebp, eax	      6781	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0x400799b	      0x41807f0100	                   cmp byte [r15 + 1], 0	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40079a0	            0x75a7	                           jne 0x4007949	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40079a2	          0x4863c5	                         movsxd rax, ebp	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40079a5	          0x4c01e8	                            add rax, r13	      6766	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0x40079a8	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      6785	screen.c	FUNCTION_41	WHILE_2	IF_17
0x40079ac	        0x394c2428	            cmp dword [rsp + 0x28], ecx 	      6785	screen.c	FUNCTION_41	WHILE_2	IF_17
0x40079b0	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      6785	screen.c	FUNCTION_41	WHILE_2	IF_17
0x40079b5	          0xc60020	                    mov byte [rax], 0x20	      6787	screen.c	FUNCTION_41	WHILE_2
0x40079b8	        0x480f44d0	                          cmove rdx, rax	      6785	screen.c	FUNCTION_41	WHILE_2	IF_17
0x40079bc	        0x4183c402	                             add r12d, 2	      6789	screen.c	FUNCTION_41	WHILE_2
0x40079c0	    0x488344242008	               add qword [rsp + 0x20], 8	      6789	screen.c	FUNCTION_41	WHILE_2
0x40079c6	      0x4889542430	             mov qword [rsp + 0x30], rdx	      6785	screen.c	FUNCTION_41	WHILE_2	IF_17
0x40079cb	          0x8d5501	                      lea edx, [rbp + 1]	      6787	screen.c	FUNCTION_41	WHILE_2
0x40079ce	          0x83c502	                              add ebp, 2	      6788	screen.c	FUNCTION_41	WHILE_2
0x40079d1	          0x4863c2	                         movsxd rax, edx	      6788	screen.c	FUNCTION_41	WHILE_2
0x40079d4	            0x89ca	                            mov edx, ecx	      6790	screen.c	FUNCTION_41	WHILE_2	IF_18
0x40079d6	          0x83c201	                              add edx, 1	      6790	screen.c	FUNCTION_41	WHILE_2	IF_18
0x40079d9	        0x39542440	            cmp dword [rsp + 0x40], edx 	      6790	screen.c	FUNCTION_41	WHILE_2	IF_18
0x40079dd	    0x41c644050020	              mov byte [r13 + rax], 0x20	      6788	screen.c	FUNCTION_41	WHILE_2
0x40079e3	        0x8954241c	             mov dword [rsp + 0x1c], edx	      6790	screen.c	FUNCTION_41	WHILE_2	IF_18
0x40079e7	     0xf858bfeffff	                           jne 0x4007878	      6790	screen.c	FUNCTION_41	WHILE_2	IF_18
0x40079ed	          0x4863ed	                         movsxd rbp, ebp	      6800	screen.c	FUNCTION_41
0x40079f0	    0x41c6442d0000	                 mov byte [r13 + rbp], 0	      6800	screen.c	FUNCTION_41
0x40079f6	    0x8b1d00000000	            mov ebx, dword [0x040079fc] 	      6802	screen.c	FUNCTION_41
0x40079fc	            0x89dd	                            mov ebp, ebx	      6803	screen.c	FUNCTION_41	IF_20
0x40079fe	          0x83ed01	                              sub ebp, 1	      6803	screen.c	FUNCTION_41	IF_20
0x4007a01	     0xf88ec000000	                            js 0x4007af3	      6803	screen.c	FUNCTION_41	IF_20
0x4007a07	    0x448b15000000	           mov r10d, dword [0x04007a0e] 	      6805	screen.c	FUNCTION_41	IF_20	IF_21
0x4007a0e	          0x4585d2	                         test r10d, r10d	      6805	screen.c	FUNCTION_41	IF_20	IF_21
0x4007a11	            0x755b	                           jne 0x4007a6e	      6805	screen.c	FUNCTION_41	IF_20	IF_21
0x4007a13	    0x448b0d000000	            mov r9d, dword [0x04007a1a] 	      6807	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0x4007a1a	          0x4585c9	                           test r9d, r9d	      6807	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0x4007a1d	            0x7e30	                           jle 0x4007a4f	      6807	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0x4007a1f	    0x488b0d000000	            mov rcx, qword [0x04007a26] 	      6811	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007a26	          0x4863c3	                         movsxd rax, ebx	      6811	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007a29	        0x488d51ff	                      lea rdx, [rcx - 1]	      6811	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007a2d	          0x4839d0	                            cmp rax, rdx	      6811	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007a30	     0xf8491030000	                            je 0x4007dc7	      6811	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007a36	        0x448d7301	                     lea r14d, [rbx + 1]	      6818	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0x4007a3a	            0x89dd	                            mov ebp, ebx	      6819	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0x4007a3c	    0x448935000000	           mov dword [0x04007a43], r14d 	      6818	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0x4007a43	    0xc70500000000	               mov dword [0x04007a4d], 2	      6821	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0x4007a4d	            0xeb22	                           jmp 0x4007a71	      6821	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0x4007a4f	    0x488b05000000	            mov rax, qword [0x04007a56] 	      6828	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007a56	    0x8bb0a4000000	            mov esi, dword [rax + 0xa4] 	      6828	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007a5c	            0x85f6	                           test esi, esi	      6828	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007a5e	     0xf84a7030000	                            je 0x4007e0b	      6828	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007a64	    0xc70500000000	               mov dword [0x04007a6e], 1	      6836	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8
0x4007a6e	          0x4189de	                           mov r14d, ebx	      6836	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8
0x4007a71	    0x48833d000000	               cmp qword [0x04007a79], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4007a79	            0x740c	                            je 0x4007a87	      7448	screen.c	FUNCTION_51	IF_1
0x4007a7b	    0x3b2d00000000	            cmp ebp, dword [0x04007a81] 	      7448	screen.c	FUNCTION_51	IF_1
0x4007a81	     0xf8c16030000	                            jl 0x4007d9d	      7448	screen.c	FUNCTION_51	IF_1
0x4007a87	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      6841	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a8d	            0x743e	                            je 0x4007acd	      6841	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a8f	        0x8b4c244c	            mov ecx, dword [rsp + 0x4c] 	      6841	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a93	            0x85c9	                           test ecx, ecx	      6841	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a95	            0x7436	                            je 0x4007acd	      6841	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a97	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6843	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a9c	          0xc60000	                       mov byte [rax], 0	      6843	screen.c	FUNCTION_41	IF_20	IF_25
0x4007a9f	    0x48833d000000	               cmp qword [0x04007aa7], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4007aa7	            0x7424	                            je 0x4007acd	      7448	screen.c	FUNCTION_51	IF_1
0x4007aa9	    0x3b2d00000000	            cmp ebp, dword [0x04007aaf] 	      7448	screen.c	FUNCTION_51	IF_1
0x4007aaf	            0x7d1c	                           jge 0x4007acd	      7448	screen.c	FUNCTION_51	IF_1
0x4007ab1	    0x448b05000000	            mov r8d, dword [0x04007ab8] 	      7448	screen.c	FUNCTION_51	IF_1
0x4007ab8	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      7448	screen.c	FUNCTION_51	IF_1
0x4007abc	            0x89ea	                            mov edx, ebp	      7448	screen.c	FUNCTION_51	IF_1
0x4007abe	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      7448	screen.c	FUNCTION_51	IF_1
0x4007ac3	      0xbeffffffff	                     mov esi, 0xffffffff	      7448	screen.c	FUNCTION_51	IF_1
0x4007ac8	      0xe803bfffff	        call sym.screen_puts_len.part.16	      7448	screen.c	FUNCTION_51	IF_1
0x4007acd	        0x4883ec08	                              sub rsp, 8	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ad1	    0x8b0d00000000	            mov ecx, dword [0x04007ad7] 	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ad7	          0x4489e2	                           mov edx, r12d	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ada	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ade	          0x4489f6	                           mov esi, r14d	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ae1	            0x89ef	                            mov edi, ebp	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ae3	              0x50	                                push rax	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ae4	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007ae9	          0x4589c1	                            mov r9d, r8d	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007aec	      0xe800000000	                          call 0x4007af1	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007af1	              0x58	                                 pop rax	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007af2	              0x5a	                                 pop rdx	      6847	screen.c	FUNCTION_41	IF_20	CALL_31
0x4007af3	    0x488b3d000000	            mov rdi, qword [0x04007afa] 	      6850	screen.c	FUNCTION_41	CALL_32
0x4007afa	      0xe800000000	                          call 0x4007aff	      6850	screen.c	FUNCTION_41	CALL_32
0x4007aff	          0x4c89ef	                            mov rdi, r13	      6851	screen.c	FUNCTION_41	CALL_33
0x4007b02	      0xe800000000	                          call 0x4007b07	      6851	screen.c	FUNCTION_41	CALL_33
0x4007b07	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      6852	screen.c	FUNCTION_41
0x4007b0c	    0x644833042528	                xor rax, qword fs:[0x28]	      6852	screen.c	FUNCTION_41
0x4007b15	     0xf853a030000	                           jne 0x4007e55	      6852	screen.c	FUNCTION_41
0x4007b1b	        0x4883c468	                           add rsp, 0x68	      6852	screen.c	FUNCTION_41
0x4007b1f	              0x5b	                                 pop rbx	      6852	screen.c	FUNCTION_41
0x4007b20	              0x5d	                                 pop rbp	      6852	screen.c	FUNCTION_41
0x4007b21	            0x415c	                                 pop r12	      6852	screen.c	FUNCTION_41
0x4007b23	            0x415d	                                 pop r13	      6852	screen.c	FUNCTION_41
0x4007b25	            0x415e	                                 pop r14	      6852	screen.c	FUNCTION_41
0x4007b27	            0x415f	                                 pop r15	      6852	screen.c	FUNCTION_41
0x4007b29	              0xc3	                                     ret	      6852	screen.c	FUNCTION_41
0x4007b2a	    0x488b05000000	            mov rax, qword [0x04007b31] 	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b31	          0x8d1480	                  lea edx, [rax + rax*4]	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b34	        0x8d7c9001	              lea edi, [rax + rdx*4 + 1]	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b38	      0xe800000000	                          call 0x4007b3d	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b3d	          0x4989c5	                            mov r13, rax	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b40	      0xe975fcffff	                           jmp 0x40077ba	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b45	           0xf1f00	                         nop dword [rax]	      6675	screen.c	FUNCTION_41	CALL_1
0x4007b48	          0x488b38	                    mov rdi, qword [rax]	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007b4b	      0xe800000000	                          call 0x4007b50	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007b50	          0x4889c6	                            mov rsi, rax	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007b53	      0xe936fdffff	                           jmp 0x400788e	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007b58	     0xf1f84000000	                   nop dword [rax + rax]	      6744	screen.c	FUNCTION_41	WHILE_2	CALL_14
0x4007b60	          0x4c89ff	                            mov rdi, r15	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x4007b63	      0xe800000000	                          call 0x4007b68	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x4007b68	            0x85c0	                           test eax, eax	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x4007b6a	     0xf8482fdffff	                            je 0x40078f2	      6757	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0x4007b70	      0xbf7c000000	                           mov edi, 0x7c	      6759	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0x4007b75	      0xe800000000	                          call 0x4007b7a	      6759	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0x4007b7a	          0x4c89f7	                            mov rdi, r14	       110	string3.h	FUNCTION_110	CALL_3
0x4007b7d	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x4007b80	      0xe800000000	                          call 0x4007b85	       110	string3.h	FUNCTION_110	CALL_3
0x4007b85	          0x4c29f0	                            sub rax, r14	      6760	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0x4007b88	             0x1c5	                            add ebp, eax	      6761	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007b8a	          0x4101c4	                           add r12d, eax	      6762	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007b8d	          0x4863c5	                         movsxd rax, ebp	      6762	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007b90	          0x4c01e8	                            add rax, r13	      6762	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007b93	      0xe910feffff	                           jmp 0x40079a8	      6762	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007b98	     0xf1f84000000	                   nop dword [rax + rax]	      6762	screen.c	FUNCTION_41	WHILE_2	IF_15
0x4007ba0	          0x488b38	                    mov rdi, qword [rax]	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x4007ba3	      0xe800000000	                          call 0x4007ba8	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x4007ba8	          0x4989c7	                            mov r15, rax	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x4007bab	      0xe92afdffff	                           jmp 0x40078da	      6752	screen.c	FUNCTION_41	WHILE_2	CALL_15
0x4007bb0	      0x4889442438	             mov qword [rsp + 0x38], rax	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x4007bb5	          0x4989c6	                            mov r14, rax	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x4007bb8	      0x4489642444	            mov dword [rsp + 0x44], r12d	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x4007bbd	      0xe902fdffff	                           jmp 0x40078c4	      6748	screen.c	FUNCTION_41	WHILE_2	IF_14
0x4007bc2	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      6794	screen.c	FUNCTION_41	IF_19
0x4007bc6	        0x394c241c	            cmp dword [rsp + 0x1c], ecx 	      6794	screen.c	FUNCTION_41	IF_19
0x4007bca	     0xf841dfeffff	                            je 0x40079ed	      6794	screen.c	FUNCTION_41	IF_19
0x4007bd0	          0x4863c5	                         movsxd rax, ebp	      6796	screen.c	FUNCTION_41	IF_19
0x4007bd3	        0x4183c401	                             add r12d, 1	      6797	screen.c	FUNCTION_41	IF_19
0x4007bd7	          0x83c501	                              add ebp, 1	      6796	screen.c	FUNCTION_41	IF_19
0x4007bda	    0x41c64405003e	              mov byte [r13 + rax], 0x3e	      6796	screen.c	FUNCTION_41	IF_19
0x4007be0	      0xe908feffff	                           jmp 0x40079ed	      6796	screen.c	FUNCTION_41	IF_19
0x4007be5	        0x448d7803	                     lea r15d, [rax + 3]	      6688	screen.c	FUNCTION_41	CALL_4
0x4007be9	    0x8b0500000000	            mov eax, dword [0x04007bef] 	      6691	screen.c	FUNCTION_41	ELSE_2	IF_6
0x4007bef	        0x39442428	            cmp dword [rsp + 0x28], eax 	      6691	screen.c	FUNCTION_41	ELSE_2	IF_6
0x4007bf3	     0xf8daf000000	                           jge 0x4007ca8	      6691	screen.c	FUNCTION_41	ELSE_2	IF_6
0x4007bf9	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      6694	screen.c	FUNCTION_41	ELSE_2	IF_6
0x4007bfd	    0x890500000000	            mov dword [0x04007c03], eax 	      6694	screen.c	FUNCTION_41	ELSE_2	IF_6
0x4007c03	            0x85c0	                           test eax, eax	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c05	        0x488b2c24	                    mov rbp, qword [rsp]	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c09	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c0e	            0x7f41	                            jg 0x4007c51	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c10	      0xe9f7fbffff	                           jmp 0x400780c	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c15	           0xf1f00	                         nop dword [rax]	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c18	      0x488b74c3f8	        mov rsi, qword [rbx + rax*8 - 8]	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c1d	          0x4889ef	                            mov rdi, rbp	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c20	      0xe8fb99ffff	               call sym.status_match_len	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c25	      0x468d7c3802	               lea r15d, [rax + r15 + 2]	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c2a	          0x4963c7	                        movsxd rax, r15d	      6724	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0x4007c2d	    0x483b05000000	            cmp rax, qword [0x04007c34] 	      6724	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0x4007c34	     0xf8dd2fbffff	                           jge 0x400780c	      6724	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0x4007c3a	    0x8b0500000000	            mov eax, dword [0x04007c40] 	      6726	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c40	          0x83e801	                              sub eax, 1	      6726	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c43	            0x85c0	                           test eax, eax	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c45	    0x890500000000	            mov dword [0x04007c4b], eax 	      6726	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c4b	     0xf8ebbfbffff	                           jle 0x400780c	      6721	screen.c	FUNCTION_41	IF_11	WHILE_1
0x4007c51	          0x4585e4	                         test r12d, r12d	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c54	            0x4898	                                    cdqe	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c56	            0x74c0	                            je 0x4007c18	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c58	      0x488b7cc3f8	        mov rdi, qword [rbx + rax*8 - 8]	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c5d	      0xe800000000	                          call 0x4007c62	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c62	          0x4889c6	                            mov rsi, rax	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c65	            0xebb6	                           jmp 0x4007c1d	      6723	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0x4007c67	      0xb83c200000	                         mov eax, 0x203c	       110	string3.h	FUNCTION_110	CALL_3
0x4007c6c	      0x41c6450200	                   mov byte [r13 + 2], 0	       110	string3.h	FUNCTION_110	CALL_3
0x4007c71	      0xbd02000000	                              mov ebp, 2	      6739	screen.c	FUNCTION_41	ELSE_4
0x4007c76	      0x6641894500	                      mov word [r13], ax	       110	string3.h	FUNCTION_110	CALL_3
0x4007c7b	      0xe9bafbffff	                           jmp 0x400783a	       110	string3.h	FUNCTION_110	CALL_3
0x4007c80	        0x488b3c03	              mov rdi, qword [rbx + rax]	      6688	screen.c	FUNCTION_41	CALL_4
0x4007c84	      0xe800000000	                          call 0x4007c89	      6688	screen.c	FUNCTION_41	CALL_4
0x4007c89	          0x4889c6	                            mov rsi, rax	      6688	screen.c	FUNCTION_41	CALL_4
0x4007c8c	      0xe95cfbffff	                           jmp 0x40077ed	      6688	screen.c	FUNCTION_41	CALL_4
0x4007c91	            0x31c0	                            xor eax, eax	      6688	screen.c	FUNCTION_41	CALL_4
0x4007c93	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      6685	screen.c	FUNCTION_41	IF_4
0x4007c9b	    0xc74424280000	               mov dword [rsp + 0x28], 0	      6684	screen.c	FUNCTION_41	IF_4
0x4007ca3	      0xe935fbffff	                           jmp 0x40077dd	      6684	screen.c	FUNCTION_41	IF_4
0x4007ca8	            0x7e64	                           jle 0x4007d0e	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007caa	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cae	          0x4863d0	                         movsxd rdx, eax	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cb1	            0xf7d0	                                 not eax	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cb3	        0x4c8d24d3	                  lea r12, [rbx + rdx*8]	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cb7	      0x48895c2408	                mov qword [rsp + 8], rbx	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cbc	        0x4c8b3424	                    mov r14, qword [rsp]	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cc0	             0x1c8	                            add eax, ecx	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cc2	      0x488d440201	                lea rax, [rdx + rax + 1]	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cc7	        0x488d2cc3	                  lea rbp, [rbx + rax*8]	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007ccb	          0x4c89e3	                            mov rbx, r12	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cce	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cd3	            0xeb1c	                           jmp 0x4007cf1	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cd5	           0xf1f00	                         nop dword [rax]	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cd8	          0x488b33	                    mov rsi, qword [rbx]	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cdb	          0x4c89f7	                            mov rdi, r14	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cde	        0x4883c308	                              add rbx, 8	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007ce2	      0xe83999ffff	               call sym.status_match_len	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007ce7	          0x4839eb	                            cmp rbx, rbp	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cea	      0x468d7c3802	               lea r15d, [rax + r15 + 2]	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cef	            0x7412	                            je 0x4007d03	      6700	screen.c	FUNCTION_41	ELSE_3	FOR_1
0x4007cf1	          0x4585e4	                         test r12d, r12d	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cf4	            0x74e2	                            je 0x4007cd8	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cf6	          0x488b3b	                    mov rdi, qword [rbx]	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cf9	      0xe800000000	                          call 0x4007cfe	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007cfe	          0x4889c6	                            mov rsi, rax	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007d01	            0xebd8	                           jmp 0x4007cdb	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007d03	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007d08	    0x8b0500000000	            mov eax, dword [0x04007d0e] 	      6701	screen.c	FUNCTION_41	ELSE_3	CALL_6
0x4007d0e	        0x418d5702	                      lea edx, [r15 + 2]	      6703	screen.c	FUNCTION_41	ELSE_3	IF_7
0x4007d12	            0x85c0	                           test eax, eax	      6703	screen.c	FUNCTION_41	ELSE_3	IF_7
0x4007d14	        0x440f4ffa	                         cmovg r15d, edx	      6703	screen.c	FUNCTION_41	ELSE_3	IF_7
0x4007d18	          0x4d63ff	                        movsxd r15, r15d	      6705	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d1b	    0x4c3b3d000000	            cmp r15, qword [0x04007d22] 	      6705	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d22	     0xf8ee4faffff	                           jle 0x400780c	      6705	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d28	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	      6707	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d2c	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d30	          0x4863c5	                         movsxd rax, ebp	      6707	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d33	            0x39c8	                            cmp eax, ecx	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d35	    0x890500000000	            mov dword [0x04007d3b], eax 	      6707	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007d3b	     0xf8d06010000	                           jge 0x4007e47	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d41	        0x4c8d24c3	                  lea r12, [rbx + rax*8]	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d45	      0x4c896c2408	                mov qword [rsp + 8], r13	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d4a	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d4f	    0x41bf02000000	                             mov r15d, 2	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d55	        0x4c8b2c24	                    mov r13, qword [rsp]	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d59	            0x89cb	                            mov ebx, ecx	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d5b	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d60	            0xeb28	                           jmp 0x4007d8a	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d62	        0x498b3424	                    mov rsi, qword [r12]	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d66	          0x4c89ef	                            mov rdi, r13	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d69	      0xe8b298ffff	               call sym.status_match_len	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d6e	      0x468d7c3802	               lea r15d, [rax + r15 + 2]	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d73	          0x4963c7	                        movsxd rax, r15d	      6713	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0x4007d76	    0x483b05000000	            cmp rax, qword [0x04007d7d] 	      6713	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0x4007d7d	            0x7d39	                           jge 0x4007db8	      6713	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0x4007d7f	          0x83c501	                              add ebp, 1	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d82	        0x4983c408	                              add r12, 8	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d86	            0x39eb	                            cmp ebx, ebp	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d88	            0x746c	                            je 0x4007df6	      6710	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0x4007d8a	          0x4585f6	                         test r14d, r14d	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d8d	            0x74d3	                            je 0x4007d62	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d8f	        0x498b3c24	                    mov rdi, qword [r12]	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d93	      0xe800000000	                          call 0x4007d98	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d98	          0x4889c6	                            mov rsi, rax	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d9b	            0xebc9	                           jmp 0x4007d66	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007d9d	      0x448b442454	            mov r8d, dword [rsp + 0x54] 	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007da2	            0x31c9	                            xor ecx, ecx	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007da4	            0x89ea	                            mov edx, ebp	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007da6	      0xbeffffffff	                     mov esi, 0xffffffff	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007dab	          0x4c89ef	                            mov rdi, r13	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007dae	      0xe81dbcffff	        call sym.screen_puts_len.part.16	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007db3	      0xe9cffcffff	                           jmp 0x4007a87	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007db8	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007dbd	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007dc2	      0xe945faffff	                           jmp 0x400780c	      6712	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0x4007dc7	        0x4883ec08	                              sub rsp, 8	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007dcb	    0x41b801000000	                              mov r8d, 1	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007dd1	            0x31ff	                            xor edi, edi	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007dd3	            0x6a00	                                  push 0	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007dd5	          0x4531c9	                            xor r9d, r9d	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007dd8	      0xba01000000	                              mov edx, 1	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007ddd	            0x31f6	                            xor esi, esi	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007ddf	          0x4189de	                           mov r14d, ebx	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007de2	      0xe800000000	                          call 0x4007de7	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007de7	              0x5f	                                 pop rdi	      6813	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0x4007de8	    0x830500000000	               add dword [0x04007def], 1	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007def	            0x4158	                                  pop r8	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007df1	      0xe94dfcffff	                           jmp 0x4007a43	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007df6	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007dfb	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007e00	    0x8b0500000000	            mov eax, dword [0x04007e06] 	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007e06	      0xe9f8fdffff	                           jmp 0x4007c03	      6814	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0x4007e0b	    0x488b05000000	            mov rax, qword [0x04007e12] 	      6830	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e12	            0x31ff	                            xor edi, edi	      6834	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24	CALL_27
0x4007e14	    0x48c705000000	               mov qword [0x04007e1f], 2	      6832	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e1f	    0x890500000000	            mov dword [0x04007e25], eax 	      6830	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e25	    0x488b05000000	            mov rax, qword [0x04007e2c] 	      6831	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e2c	    0x48c705000000	               mov qword [0x04007e37], 0	      6833	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e37	    0x890500000000	            mov dword [0x04007e3d], eax 	      6831	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0x4007e3d	      0xe800000000	                          call 0x4007e42	      6834	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24	CALL_27
0x4007e42	      0xe91dfcffff	                           jmp 0x4007a64	      6834	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24	CALL_27
0x4007e47	     0xf85bff9ffff	                           jne 0x400780c	      6716	screen.c	FUNCTION_41	ELSE_3	IF_8	IF_10
0x4007e4d	    0x41bf02000000	                             mov r15d, 2	      6709	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007e53	            0xebab	                           jmp 0x4007e00	      6709	screen.c	FUNCTION_41	ELSE_3	IF_8
0x4007e55	      0xe800000000	                          call 0x4007e5a	      6852	screen.c	FUNCTION_41
win_redraw_last_status	functions,0:IF,2:DO,0:ELSE,2:CALL,2:FOR,1:WHILE,1:SWITCH,0	27
0x4001c10	           0xfb607	                   movzx eax, byte [rdi]	      6542	screen.c	FUNCTION_37	IF_1
0x4001c13	            0x84c0	                             test al, al	      6542	screen.c	FUNCTION_37	IF_1
0x4001c15	            0x7417	                            je 0x4001c2e	      6542	screen.c	FUNCTION_37	IF_1
0x4001c17	            0x3c01	                               cmp al, 1	      6544	screen.c	FUNCTION_37	ELSE_1	IF_2
0x4001c19	            0x7422	                            je 0x4001c3d	      6544	screen.c	FUNCTION_37	ELSE_1	IF_2
0x4001c1b	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      6551	screen.c	FUNCTION_37	ELSE_2
0x4001c1f	              0x90	                                     nop	      6551	screen.c	FUNCTION_37	ELSE_2
0x4001c20	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6552	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0x4001c24	          0x4885c0	                           test rax, rax	      6552	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0x4001c27	            0x74e7	           je sym.win_redraw_last_status	      6552	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0x4001c29	          0x4889c7	                            mov rdi, rax	      6552	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0x4001c2c	            0xebf2	                           jmp 0x4001c20	      6552	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0x4001c2e	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      6543	screen.c	FUNCTION_37	IF_1
0x4001c32	    0xc78040010000	              mov dword [rax + 0x140], 1	      6543	screen.c	FUNCTION_37	IF_1
0x4001c3c	              0xc3	                                     ret	      6543	screen.c	FUNCTION_37	IF_1
0x4001c3d	              0x53	                                push rbx	      6541	screen.c	FUNCTION_37
0x4001c3e	        0x488b5f30	            mov rbx, qword [rdi + 0x30] 	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c42	          0x4885db	                           test rbx, rbx	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c45	            0x741a	                            je 0x4001c61	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c47	    0x660f1f840000	                    nop word [rax + rax]	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c50	          0x4889df	                            mov rdi, rbx	      6547	screen.c	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x4001c53	      0xe800000000	                          call 0x4001c58	      6547	screen.c	FUNCTION_37	ELSE_1	IF_2	CALL_1
0x4001c58	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c5c	          0x4885db	                           test rbx, rbx	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c5f	            0x75ef	                           jne 0x4001c50	      6546	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0x4001c61	              0x5b	                                 pop rbx	      6556	screen.c	FUNCTION_37
0x4001c62	              0xc3	                                     ret	      6556	screen.c	FUNCTION_37
screenalloc	functions,1:IF,23:DO,0:ELSE,4:CALL,38:FOR,7:WHILE,0:SWITCH,0	551
0x4002720	            0x4157	                                push r15	      8759	screen.c	FUNCTION_69
0x4002722	            0x4156	                                push r14	      8759	screen.c	FUNCTION_69
0x4002724	            0x4155	                                push r13	      8759	screen.c	FUNCTION_69
0x4002726	            0x4154	                                push r12	      8759	screen.c	FUNCTION_69
0x4002728	              0x55	                                push rbp	      8759	screen.c	FUNCTION_69
0x4002729	              0x53	                                push rbx	      8759	screen.c	FUNCTION_69
0x400272a	    0x4881ec980000	                           sub rsp, 0x98	      8759	screen.c	FUNCTION_69
0x4002731	    0x64488b042528	                mov rax, qword fs:[0x28]	      8759	screen.c	FUNCTION_69
0x400273a	    0x488984248800	             mov qword [rsp + 0x88], rax	      8759	screen.c	FUNCTION_69
0x4002742	            0x31c0	                            xor eax, eax	      8759	screen.c	FUNCTION_69
0x4002744	      0x4c8d742450	                   lea r14, [rsp + 0x50]	        90	string3.h	FUNCTION_107	CALL_6
0x4002749	        0x897c2424	             mov dword [rsp + 0x24], edi	      8759	screen.c	FUNCTION_69
0x400274d	    0xc744242c0400	               mov dword [rsp + 0x2c], 4	      8759	screen.c	FUNCTION_69
0x4002755	    0x48c704240000	                      mov qword [rsp], 0	      8771	screen.c	FUNCTION_69
0x400275d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      8769	screen.c	FUNCTION_69
0x4002766	    0xc74424280000	               mov dword [rsp + 0x28], 0	      8765	screen.c	FUNCTION_69
0x400276e	    0x488b05000000	            mov rax, qword [0x04002775] 	      8789	screen.c	FUNCTION_69	IF_1
0x4002775	    0x488b15000000	            mov rdx, qword [0x0400277c] 	      8789	screen.c	FUNCTION_69	IF_1
0x400277c	          0x4885c0	                           test rax, rax	      8789	screen.c	FUNCTION_69	IF_1
0x400277f	            0x7417	                            je 0x4002798	      8789	screen.c	FUNCTION_69	IF_1
0x4002781	    0x48630d000000	         movsxd rcx, dword [0x04002788] 	      8790	screen.c	FUNCTION_69	IF_1
0x4002788	    0x488b15000000	            mov rdx, qword [0x0400278f] 	      8790	screen.c	FUNCTION_69	IF_1
0x400278f	          0x4839d1	                            cmp rcx, rdx	      8790	screen.c	FUNCTION_69	IF_1
0x4002792	     0xf847b060000	                            je 0x4002e13	      8790	screen.c	FUNCTION_69	IF_1
0x4002798	          0x4885d2	                           test rdx, rdx	      8798	screen.c	FUNCTION_69	IF_1
0x400279b	     0xf84d5060000	                            je 0x4002e76	      8798	screen.c	FUNCTION_69	IF_1
0x40027a1	    0x48833d000000	               cmp qword [0x040027a9], 0	      8799	screen.c	FUNCTION_69	IF_1
0x40027a9	     0xf84c7060000	                            je 0x4002e76	      8799	screen.c	FUNCTION_69	IF_1
0x40027af	          0x4885c0	                           test rax, rax	      8800	screen.c	FUNCTION_69	IF_1
0x40027b2	    0x8b1500000000	            mov edx, dword [0x040027b8] 	      8800	screen.c	FUNCTION_69	IF_1
0x40027b8	            0x7508	                           jne 0x40027c2	      8800	screen.c	FUNCTION_69	IF_1
0x40027ba	            0x85d2	                           test edx, edx	      8800	screen.c	FUNCTION_69	IF_1
0x40027bc	     0xf84b4060000	                            je 0x4002e76	      8800	screen.c	FUNCTION_69	IF_1
0x40027c2	    0x448b3d000000	           mov r15d, dword [0x040027c9] 	      8808	screen.c	FUNCTION_69	IF_2
0x40027c9	          0x4585ff	                         test r15d, r15d	      8808	screen.c	FUNCTION_69	IF_2
0x40027cc	     0xf85a4060000	                           jne 0x4002e76	      8808	screen.c	FUNCTION_69	IF_2
0x40027d2	    0x830500000000	               add dword [0x040027d9], 1	      8816	screen.c	FUNCTION_69
0x40027d9	    0xc70500000000	               mov dword [0x040027e3], 1	      8810	screen.c	FUNCTION_69
0x40027e3	      0xe800000000	                          call 0x40027e8	      8818	screen.c	FUNCTION_69	CALL_1
0x40027e8	      0xe800000000	                          call 0x40027ed	      8820	screen.c	FUNCTION_69	CALL_2
0x40027ed	    0x488b1d000000	            mov rbx, qword [0x040027f4] 	      8833	screen.c	FUNCTION_69	CALL_3
0x40027f4	          0x4885db	                           test rbx, rbx	      8833	screen.c	FUNCTION_69	CALL_3
0x40027f7	            0x7438	                            je 0x4002831	      8833	screen.c	FUNCTION_69	CALL_3
0x40027f9	     0xf1f80000000	                         nop dword [rax]	      8833	screen.c	FUNCTION_69	CALL_3
0x4002800	    0x48391d000000	            cmp qword [0x04002807], rbx 	      8833	screen.c	FUNCTION_69	CALL_3
0x4002807	     0xf8423040000	                            je 0x4002c30	      8833	screen.c	FUNCTION_69	CALL_3
0x400280d	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      8833	screen.c	FUNCTION_69	CALL_3
0x4002811	            0xeb11	                           jmp 0x4002824	      8833	screen.c	FUNCTION_69	CALL_3
0x4002813	       0xf1f440000	                   nop dword [rax + rax]	      8833	screen.c	FUNCTION_69	CALL_3
0x4002818	          0x4889ef	                            mov rdi, rbp	      8834	screen.c	FUNCTION_69	CALL_4
0x400281b	      0xe800000000	                          call 0x4002820	      8834	screen.c	FUNCTION_69	CALL_4
0x4002820	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      8833	screen.c	FUNCTION_69	CALL_3
0x4002824	          0x4885ed	                           test rbp, rbp	      8833	screen.c	FUNCTION_69	CALL_3
0x4002827	            0x75ef	                           jne 0x4002818	      8833	screen.c	FUNCTION_69	CALL_3
0x4002829	          0x488b1b	                    mov rbx, qword [rbx]	      8833	screen.c	FUNCTION_69	CALL_3
0x400282c	          0x4885db	                           test rbx, rbx	      8833	screen.c	FUNCTION_69	CALL_3
0x400282f	            0x75cf	                           jne 0x4002800	      8833	screen.c	FUNCTION_69	CALL_3
0x4002831	    0x488b3d000000	            mov rdi, qword [0x04002838] 	      8835	screen.c	FUNCTION_69	IF_3
0x4002838	          0x4885ff	                           test rdi, rdi	      8835	screen.c	FUNCTION_69	IF_3
0x400283b	            0x7405	                            je 0x4002842	      8835	screen.c	FUNCTION_69	IF_3
0x400283d	      0xe800000000	                          call 0x4002842	      8836	screen.c	FUNCTION_69	CALL_5
0x4002842	    0x488b05000000	            mov rax, qword [0x04002849] 	      8838	screen.c	FUNCTION_69	CALL_6
0x4002849	            0x31f6	                            xor esi, esi	      8838	screen.c	FUNCTION_69	CALL_6
0x400284b	        0x488d7801	                      lea rdi, [rax + 1]	      8838	screen.c	FUNCTION_69	CALL_6
0x400284f	    0x480faf3d0000	            imul rdi, qword [0x04002857]	      8838	screen.c	FUNCTION_69	CALL_6
0x4002857	      0xe800000000	                          call 0x400285c	      8838	screen.c	FUNCTION_69	CALL_6
0x400285c	    0x448b2d000000	           mov r13d, dword [0x04002863] 	      8842	screen.c	FUNCTION_69	IF_4
0x4002863	          0x4889c3	                            mov rbx, rax	      8838	screen.c	FUNCTION_69	CALL_6
0x4002866	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_107	CALL_6
0x400286b	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_107	CALL_6
0x400286d	          0x4c89f7	                            mov rdi, r14	        90	string3.h	FUNCTION_107	CALL_6
0x4002870	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_107	CALL_6
0x4002873	          0x4585ed	                         test r13d, r13d	      8842	screen.c	FUNCTION_69	IF_4
0x4002876	     0xf852d060000	                           jne 0x4002ea9	      8842	screen.c	FUNCTION_69	IF_4
0x400287c	    0x813d00000000	         cmp dword [0x04002886], 0x26cc 	      8850	screen.c	FUNCTION_69	IF_5
0x4002886	     0xf8497060000	                            je 0x4002f23	      8850	screen.c	FUNCTION_69	IF_5
0x400288c	    0x488b05000000	            mov rax, qword [0x04002893] 	      8854	screen.c	FUNCTION_69	CALL_11
0x4002893	            0x31f6	                            xor esi, esi	      8854	screen.c	FUNCTION_69	CALL_11
0x4002895	        0x488d7801	                      lea rdi, [rax + 1]	      8854	screen.c	FUNCTION_69	CALL_11
0x4002899	    0x480faf3d0000	            imul rdi, qword [0x040028a1]	      8854	screen.c	FUNCTION_69	CALL_11
0x40028a1	          0x4801ff	                            add rdi, rdi	      8854	screen.c	FUNCTION_69	CALL_11
0x40028a4	      0xe800000000	                          call 0x40028a9	      8854	screen.c	FUNCTION_69	CALL_11
0x40028a9	          0x4989c7	                            mov r15, rax	      8854	screen.c	FUNCTION_69	CALL_11
0x40028ac	    0x488b05000000	            mov rax, qword [0x040028b3] 	      8856	screen.c	FUNCTION_69	CALL_12
0x40028b3	            0x31f6	                            xor esi, esi	      8856	screen.c	FUNCTION_69	CALL_12
0x40028b5	    0x488d3c850000	                        lea rdi, [rax*4]	      8856	screen.c	FUNCTION_69	CALL_12
0x40028bd	      0xe800000000	                          call 0x40028c2	      8856	screen.c	FUNCTION_69	CALL_12
0x40028c2	    0x488b3d000000	            mov rdi, qword [0x040028c9] 	      8858	screen.c	FUNCTION_69	CALL_13
0x40028c9	            0x31f6	                            xor esi, esi	      8858	screen.c	FUNCTION_69	CALL_13
0x40028cb	      0x4889442408	                mov qword [rsp + 8], rax	      8856	screen.c	FUNCTION_69	CALL_12
0x40028d0	      0xe800000000	                          call 0x40028d5	      8858	screen.c	FUNCTION_69	CALL_13
0x40028d5	          0x4889c5	                            mov rbp, rax	      8858	screen.c	FUNCTION_69	CALL_13
0x40028d8	    0x488b05000000	            mov rax, qword [0x040028df] 	      8859	screen.c	FUNCTION_69	CALL_14
0x40028df	            0x31f6	                            xor esi, esi	      8859	screen.c	FUNCTION_69	CALL_14
0x40028e1	        0x488d3c00	                    lea rdi, [rax + rax]	      8859	screen.c	FUNCTION_69	CALL_14
0x40028e5	      0xe800000000	                          call 0x40028ea	      8859	screen.c	FUNCTION_69	CALL_14
0x40028ea	    0x4c8b25000000	            mov r12, qword [0x040028f1] 	      8861	screen.c	FUNCTION_69
0x40028f1	      0x4889442418	             mov qword [rsp + 0x18], rax	      8859	screen.c	FUNCTION_69	CALL_14
0x40028f6	          0x4d85e4	                           test r12, r12	      8861	screen.c	FUNCTION_69
0x40028f9	            0x7433	                            je 0x400292e	      8861	screen.c	FUNCTION_69
0x40028fb	    0x4c3925000000	            cmp qword [0x04002902], r12 	      8861	screen.c	FUNCTION_69
0x4002902	     0xf843e060000	                            je 0x4002f46	      8861	screen.c	FUNCTION_69
0x4002908	      0x4d8b6c2420	            mov r13, qword [r12 + 0x20] 	      8861	screen.c	FUNCTION_69
0x400290d	            0xeb11	                           jmp 0x4002920	      8861	screen.c	FUNCTION_69
0x400290f	              0x90	                                     nop	      8861	screen.c	FUNCTION_69
0x4002910	          0x4c89ef	                            mov rdi, r13	      8863	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x4002913	      0xe800000000	                          call 0x4002918	      8863	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x4002918	            0x85c0	                           test eax, eax	      8863	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x400291a	            0x7431	                            je 0x400294d	      8863	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x400291c	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      8861	screen.c	FUNCTION_69
0x4002920	          0x4d85ed	                           test r13, r13	      8861	screen.c	FUNCTION_69
0x4002923	            0x75eb	                           jne 0x4002910	      8861	screen.c	FUNCTION_69
0x4002925	        0x4d8b2424	                    mov r12, qword [r12]	      8861	screen.c	FUNCTION_69
0x4002929	          0x4d85e4	                           test r12, r12	      8861	screen.c	FUNCTION_69
0x400292c	            0x75cd	                           jne 0x40028fb	      8861	screen.c	FUNCTION_69
0x400292e	    0x488b3d000000	            mov rdi, qword [0x04002935] 	      8869	screen.c	FUNCTION_69	IF_6
0x4002935	          0x4885ff	                           test rdi, rdi	      8869	screen.c	FUNCTION_69	IF_6
0x4002938	            0x741b	                            je 0x4002955	      8869	screen.c	FUNCTION_69	IF_6
0x400293a	    0x4883bf000100	              cmp qword [rdi + 0x100], 0	      8869	screen.c	FUNCTION_69	IF_6
0x4002942	            0x7511	                           jne 0x4002955	      8869	screen.c	FUNCTION_69	IF_6
0x4002944	      0xe800000000	                          call 0x4002949	      8870	screen.c	FUNCTION_69	IF_6	CALL_15
0x4002949	            0x85c0	                           test eax, eax	      8870	screen.c	FUNCTION_69	IF_6	CALL_15
0x400294b	            0x7508	                           jne 0x4002955	      8870	screen.c	FUNCTION_69	IF_6	CALL_15
0x400294d	    0xc74424280100	               mov dword [rsp + 0x28], 1	      8871	screen.c	FUNCTION_69	IF_6
0x4002955	    0x488b15000000	            mov rdx, qword [0x0400295c] 	      8875	screen.c	FUNCTION_69	FOR_2
0x400295c	          0x4885d2	                           test rdx, rdx	      8875	screen.c	FUNCTION_69	FOR_2
0x400295f	     0xf8e26060000	                           jle 0x4002f8b	      8875	screen.c	FUNCTION_69	FOR_2
0x4002965	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x400296b	      0xb801000000	                              mov eax, 1	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x4002970	            0x751a	                           jne 0x400298c	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x4002972	      0xe914060000	                           jmp 0x4002f8b	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x4002977	    0x660f1f840000	                    nop word [rax + rax]	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x4002980	        0x4883c001	                              add rax, 1	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x4002984	    0x49837cc6f800	          cmp qword [r14 + rax*8 - 8], 0	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x400298a	            0x7408	                            je 0x4002994	      8876	screen.c	FUNCTION_69	FOR_2	IF_7
0x400298c	          0x4839c2	                            cmp rdx, rax	      8875	screen.c	FUNCTION_69	FOR_2
0x400298f	          0x4889c1	                            mov rcx, rax	      8875	screen.c	FUNCTION_69	FOR_2
0x4002992	            0x75ec	                           jne 0x4002980	      8875	screen.c	FUNCTION_69	FOR_2
0x4002994	          0x4885db	                           test rbx, rbx	      8879	screen.c	FUNCTION_69	IF_8
0x4002997	            0x7421	                            je 0x40029ba	      8879	screen.c	FUNCTION_69	IF_8
0x4002999	    0x448b25000000	           mov r12d, dword [0x040029a0] 	      8881	screen.c	FUNCTION_69	IF_8
0x40029a0	          0x4585e4	                         test r12d, r12d	      8881	screen.c	FUNCTION_69	IF_8
0x40029a3	     0xf8493020000	                            je 0x4002c3c	      8881	screen.c	FUNCTION_69	IF_8
0x40029a9	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      8881	screen.c	FUNCTION_69	IF_8
0x40029af	            0x7409	                            je 0x40029ba	      8881	screen.c	FUNCTION_69	IF_8
0x40029b1	          0x4839d1	                            cmp rcx, rdx	      8881	screen.c	FUNCTION_69	IF_8
0x40029b4	     0xf8482020000	                            je 0x4002c3c	      8881	screen.c	FUNCTION_69	IF_8
0x40029ba	    0x48833d000000	               cmp qword [0x040029c2], 0	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x40029c2	     0xf848a050000	                            je 0x4002f52	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x40029c8	    0x488b05000000	            mov rax, qword [0x040029cf] 	      8893	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x40029cf	        0x488d7801	                      lea rdi, [rax + 1]	      8893	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x40029d3	    0x480faf3d0000	            imul rdi, qword [0x040029db]	      8893	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x40029db	      0xe800000000	                          call 0x40029e0	      8893	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x40029e0	    0xc70500000000	               mov dword [0x040029ea], 1	      8897	screen.c	FUNCTION_69	IF_8	IF_9
0x40029ea	          0x4885db	                           test rbx, rbx	      8899	screen.c	FUNCTION_69	IF_8	CALL_17
0x40029ed	            0x7408	                            je 0x40029f7	      8899	screen.c	FUNCTION_69	IF_8	CALL_17
0x40029ef	          0x4889df	                            mov rdi, rbx	      8899	screen.c	FUNCTION_69	IF_8	CALL_17
0x40029f2	      0xe800000000	                          call 0x40029f7	      8899	screen.c	FUNCTION_69	IF_8	CALL_17
0x40029f7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8901	screen.c	FUNCTION_69	IF_8	CALL_18
0x40029fc	          0x4885c0	                           test rax, rax	      8901	screen.c	FUNCTION_69	IF_8	CALL_18
0x40029ff	            0x7408	                            je 0x4002a09	      8901	screen.c	FUNCTION_69	IF_8	CALL_18
0x4002a01	          0x4889c7	                            mov rdi, rax	      8901	screen.c	FUNCTION_69	IF_8	CALL_18
0x4002a04	      0xe800000000	                          call 0x4002a09	      8901	screen.c	FUNCTION_69	IF_8	CALL_18
0x4002a09	    0x48833d000000	               cmp qword [0x04002a11], 0	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a11	      0xbb01000000	                              mov ebx, 1	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a16	            0x7e30	                           jle 0x4002a48	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a18	     0xf1f84000000	                   nop dword [rax + rax]	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a20	      0x498b7cdef8	        mov rdi, qword [r14 + rbx*8 - 8]	      8903	screen.c	FUNCTION_69	IF_8	CALL_19
0x4002a25	          0x4885ff	                           test rdi, rdi	      8903	screen.c	FUNCTION_69	IF_8	CALL_19
0x4002a28	            0x740e	                            je 0x4002a38	      8903	screen.c	FUNCTION_69	IF_8	CALL_19
0x4002a2a	      0xe800000000	                          call 0x4002a2f	      8903	screen.c	FUNCTION_69	IF_8	CALL_19
0x4002a2f	    0x49c744def800	          mov qword [r14 + rbx*8 - 8], 0	      8903	screen.c	FUNCTION_69	IF_8	CALL_19
0x4002a38	          0x4889d8	                            mov rax, rbx	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a3b	        0x4883c301	                              add rbx, 1	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a3f	    0x483b05000000	            cmp rax, qword [0x04002a46] 	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a46	            0x7cd8	                            jl 0x4002a20	      8902	screen.c	FUNCTION_69	IF_8	FOR_3
0x4002a48	      0x48833c2400	                      cmp qword [rsp], 0	      8904	screen.c	FUNCTION_69	IF_8	CALL_20
0x4002a4d	            0x7409	                            je 0x4002a58	      8904	screen.c	FUNCTION_69	IF_8	CALL_20
0x4002a4f	        0x488b3c24	                    mov rdi, qword [rsp]	      8904	screen.c	FUNCTION_69	IF_8	CALL_20
0x4002a53	      0xe800000000	                          call 0x4002a58	      8904	screen.c	FUNCTION_69	IF_8	CALL_20
0x4002a58	          0x4d85ff	                           test r15, r15	      8906	screen.c	FUNCTION_69	IF_8	CALL_21
0x4002a5b	            0x7408	                            je 0x4002a65	      8906	screen.c	FUNCTION_69	IF_8	CALL_21
0x4002a5d	          0x4c89ff	                            mov rdi, r15	      8906	screen.c	FUNCTION_69	IF_8	CALL_21
0x4002a60	      0xe800000000	                          call 0x4002a65	      8906	screen.c	FUNCTION_69	IF_8	CALL_21
0x4002a65	      0x488b442408	                mov rax, qword [rsp + 8]	      8907	screen.c	FUNCTION_69	IF_8	CALL_22
0x4002a6a	          0x4885c0	                           test rax, rax	      8907	screen.c	FUNCTION_69	IF_8	CALL_22
0x4002a6d	            0x7408	                            je 0x4002a77	      8907	screen.c	FUNCTION_69	IF_8	CALL_22
0x4002a6f	          0x4889c7	                            mov rdi, rax	      8907	screen.c	FUNCTION_69	IF_8	CALL_22
0x4002a72	      0xe800000000	                          call 0x4002a77	      8907	screen.c	FUNCTION_69	IF_8	CALL_22
0x4002a77	          0x4885ed	                           test rbp, rbp	      8908	screen.c	FUNCTION_69	IF_8	CALL_23
0x4002a7a	            0x7408	                            je 0x4002a84	      8908	screen.c	FUNCTION_69	IF_8	CALL_23
0x4002a7c	          0x4889ef	                            mov rdi, rbp	      8908	screen.c	FUNCTION_69	IF_8	CALL_23
0x4002a7f	      0xe800000000	                          call 0x4002a84	      8908	screen.c	FUNCTION_69	IF_8	CALL_23
0x4002a84	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a89	          0x4885c0	                           test rax, rax	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a8c	            0x7411	                            je 0x4002a9f	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a8e	          0x4889c7	                            mov rdi, rax	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a91	      0xe800000000	                          call 0x4002a96	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a96	    0x48c744241800	               mov qword [rsp + 0x18], 0	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002a9f	            0x31ed	                            xor ebp, ebp	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002aa1	    0x48c744240800	                  mov qword [rsp + 8], 0	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002aaa	          0x4531ff	                          xor r15d, r15d	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002aad	    0x48c704240000	                      mov qword [rsp], 0	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002ab5	    0x48c744241000	               mov qword [rsp + 0x10], 0	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002abe	            0x31db	                            xor ebx, ebx	      8909	screen.c	FUNCTION_69	IF_8	CALL_24
0x4002ac0	      0xe800000000	                          call 0x4002ac5	      8990	screen.c	FUNCTION_69	CALL_35
0x4002ac5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8994	screen.c	FUNCTION_69
0x4002aca	    0x488b35000000	            mov rsi, qword [0x04002ad1] 	      8995	screen.c	FUNCTION_69	FOR_7
0x4002ad1	    0x48891d000000	            mov qword [0x04002ad8], rbx 	      8992	screen.c	FUNCTION_69
0x4002ad8	    0x488905000000	            mov qword [0x04002adf], rax 	      8994	screen.c	FUNCTION_69
0x4002adf	            0x31c0	                            xor eax, eax	      8995	screen.c	FUNCTION_69	FOR_7
0x4002ae1	          0x4885f6	                           test rsi, rsi	      8995	screen.c	FUNCTION_69	FOR_7
0x4002ae4	    0x488d0cf50000	                        lea rcx, [rsi*8]	      8995	screen.c	FUNCTION_69	FOR_7
0x4002aec	            0x7e16	                           jle 0x4002b04	      8995	screen.c	FUNCTION_69	FOR_7
0x4002aee	            0x6690	                                     nop	      8995	screen.c	FUNCTION_69	FOR_7
0x4002af0	        0x498b1406	              mov rdx, qword [r14 + rax]	      8996	screen.c	FUNCTION_69	FOR_7
0x4002af4	        0x4883c008	                              add rax, 8	      8996	screen.c	FUNCTION_69	FOR_7
0x4002af8	    0x488990000000	                    mov qword [rax], rdx	      8996	screen.c	FUNCTION_69	FOR_7
0x4002aff	          0x4839c1	                            cmp rcx, rax	      8995	screen.c	FUNCTION_69	FOR_7
0x4002b02	            0x75ec	                           jne 0x4002af0	      8995	screen.c	FUNCTION_69	FOR_7
0x4002b04	        0x488b0424	                    mov rax, qword [rsp]	      8998	screen.c	FUNCTION_69
0x4002b08	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      9014	screen.c	FUNCTION_69	IF_18
0x4002b0c	    0x488b15000000	            mov rdx, qword [0x04002b13] 	      9011	screen.c	FUNCTION_69
0x4002b13	    0x48892d000000	            mov qword [0x04002b1a], rbp 	      9002	screen.c	FUNCTION_69
0x4002b1a	    0x893500000000	            mov dword [0x04002b20], esi 	      8997	screen.c	FUNCTION_69
0x4002b20	    0x8b2d00000000	            mov ebp, dword [0x04002b26] 	      9008	screen.c	FUNCTION_69
0x4002b26	    0x488905000000	            mov qword [0x04002b2d], rax 	      8998	screen.c	FUNCTION_69
0x4002b2d	      0x488b442408	                mov rax, qword [rsp + 8]	      9001	screen.c	FUNCTION_69
0x4002b32	            0x85ff	                           test edi, edi	      9014	screen.c	FUNCTION_69	IF_18
0x4002b34	    0x4c893d000000	            mov qword [0x04002b3b], r15 	      9000	screen.c	FUNCTION_69
0x4002b3b	    0x891500000000	            mov dword [0x04002b41], edx 	      9011	screen.c	FUNCTION_69
0x4002b41	    0xc70500000000	           mov dword [0x04002b4b], 0x32 	      9013	screen.c	FUNCTION_69
0x4002b4b	    0x488905000000	            mov qword [0x04002b52], rax 	      9001	screen.c	FUNCTION_69
0x4002b52	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9003	screen.c	FUNCTION_69
0x4002b57	    0x488905000000	            mov qword [0x04002b5e], rax 	      9003	screen.c	FUNCTION_69
0x4002b5e	    0x488b05000000	            mov rax, qword [0x04002b65] 	      9010	screen.c	FUNCTION_69
0x4002b65	    0x890500000000	            mov dword [0x04002b6b], eax 	      9010	screen.c	FUNCTION_69
0x4002b6b	     0xf852e030000	                           jne 0x4002e9f	      9014	screen.c	FUNCTION_69	IF_18
0x4002b71	    0x8b3500000000	            mov esi, dword [0x04002b77] 	      9018	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b77	            0x85f6	                           test esi, esi	      9018	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b79	            0x746b	                            je 0x4002be6	      9018	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b7b	    0x8b0d00000000	            mov ecx, dword [0x04002b81] 	      9020	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b81	            0x85c9	                           test ecx, ecx	      9020	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b83	            0x7561	                           jne 0x4002be6	      9020	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b85	          0x4885db	                           test rbx, rbx	      9020	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b88	            0x745c	                            je 0x4002be6	      9020	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b8a	          0x4863dd	                         movsxd rbx, ebp	      9021	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b8d	          0x4839d8	                            cmp rax, rbx	      9021	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b90	            0x7454	                            je 0x4002be6	      9021	screen.c	FUNCTION_69	ELSE_3	IF_19
0x4002b92	          0x8d4aff	                      lea ecx, [rdx - 1]	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002b95	          0x8d50ff	                      lea edx, [rax - 1]	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002b98	          0x4531c0	                            xor r8d, r8d	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002b9b	            0x31f6	                            xor esi, esi	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002b9d	            0x31ff	                            xor edi, edi	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002b9f	      0xe800000000	                          call 0x4002ba4	      9023	screen.c	FUNCTION_69	ELSE_3	IF_19	CALL_37
0x4002ba4	    0x48630d000000	         movsxd rcx, dword [0x04002bab] 	      9028	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002bab	    0x488b05000000	            mov rax, qword [0x04002bb2] 	      9028	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002bb2	          0x4839c1	                            cmp rcx, rax	      9028	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002bb5	     0xf8dd7030000	                           jge 0x4002f92	      9028	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002bbb	          0x4839c3	                            cmp rbx, rax	      9030	screen.c	FUNCTION_69	ELSE_3	IF_19	ELSE_4	IF_21
0x4002bbe	            0x7d0a	                           jge 0x4002bca	      9030	screen.c	FUNCTION_69	ELSE_3	IF_19	ELSE_4	IF_21
0x4002bc0	             0x1c8	                            add eax, ecx	      9031	screen.c	FUNCTION_69	ELSE_3	IF_19	ELSE_4	IF_21
0x4002bc2	            0x29e8	                            sub eax, ebp	      9031	screen.c	FUNCTION_69	ELSE_3	IF_19	ELSE_4	IF_21
0x4002bc4	    0x890500000000	            mov dword [0x04002bca], eax 	      9031	screen.c	FUNCTION_69	ELSE_3	IF_19	ELSE_4	IF_21
0x4002bca	    0x486315000000	         movsxd rdx, dword [0x04002bd1] 	      9032	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002bd1	    0x488b05000000	            mov rax, qword [0x04002bd8] 	      9032	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002bd8	          0x4839c2	                            cmp rdx, rax	      9032	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002bdb	            0x7c09	                            jl 0x4002be6	      9032	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002bdd	          0x83e801	                              sub eax, 1	      9033	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002be0	    0x890500000000	            mov dword [0x04002be6], eax 	      9033	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_22
0x4002be6	    0x8b0500000000	            mov eax, dword [0x04002bec] 	      9044	screen.c	FUNCTION_69	IF_23
0x4002bec	    0x832d00000000	               sub dword [0x04002bf3], 1	      9038	screen.c	FUNCTION_69
0x4002bf3	    0xc70500000000	               mov dword [0x04002bfd], 0	      9037	screen.c	FUNCTION_69
0x4002bfd	            0x85c0	                           test eax, eax	      9044	screen.c	FUNCTION_69	IF_23
0x4002bff	     0xf8571020000	                           jne 0x4002e76	      9044	screen.c	FUNCTION_69	IF_23
0x4002c05	      0x836c242c01	               sub dword [rsp + 0x2c], 1	      9044	screen.c	FUNCTION_69	IF_23
0x4002c0a	     0xf8466020000	                            je 0x4002e76	      9044	screen.c	FUNCTION_69	IF_23
0x4002c10	    0x4c8b05000000	              mov r8, qword [0x04002c17]	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c17	            0x31c9	                            xor ecx, ecx	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c19	            0x31d2	                            xor edx, edx	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c1b	            0x31f6	                            xor esi, esi	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c1d	      0xbf5c000000	                           mov edi, 0x5c	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c22	      0xe800000000	                          call 0x4002c27	      9046	screen.c	FUNCTION_69	IF_23	CALL_38
0x4002c27	      0xe942fbffff	                           jmp 0x400276e	      9049	screen.c	FUNCTION_69	IF_23
0x4002c2c	         0xf1f4000	                         nop dword [rax]	      9049	screen.c	FUNCTION_69	IF_23
0x4002c30	    0x488b2d000000	            mov rbp, qword [0x04002c37] 	      8833	screen.c	FUNCTION_69	CALL_3
0x4002c37	      0xe9e8fbffff	                           jmp 0x4002824	      8833	screen.c	FUNCTION_69	CALL_3
0x4002c3c	    0x813d00000000	         cmp dword [0x04002c46], 0x26cc 	      8882	screen.c	FUNCTION_69	IF_8
0x4002c46	            0x750b	                           jne 0x4002c53	      8882	screen.c	FUNCTION_69	IF_8
0x4002c48	      0x48833c2400	                      cmp qword [rsp], 0	      8882	screen.c	FUNCTION_69	IF_8
0x4002c4d	     0xf8467fdffff	                            je 0x40029ba	      8882	screen.c	FUNCTION_69	IF_8
0x4002c53	          0x4d85ff	                           test r15, r15	      8885	screen.c	FUNCTION_69	IF_8
0x4002c56	     0xf845efdffff	                            je 0x40029ba	      8885	screen.c	FUNCTION_69	IF_8
0x4002c5c	    0x48837c240800	                  cmp qword [rsp + 8], 0	      8885	screen.c	FUNCTION_69	IF_8
0x4002c62	     0xf8452fdffff	                            je 0x40029ba	      8885	screen.c	FUNCTION_69	IF_8
0x4002c68	          0x4885ed	                           test rbp, rbp	      8888	screen.c	FUNCTION_69	IF_8
0x4002c6b	           0xf94c2	                                 sete dl	      8888	screen.c	FUNCTION_69	IF_8
0x4002c6e	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      8888	screen.c	FUNCTION_69	IF_8
0x4002c74	           0xf94c0	                                 sete al	      8888	screen.c	FUNCTION_69	IF_8
0x4002c77	             0x8c2	                               or dl, al	      8888	screen.c	FUNCTION_69	IF_8
0x4002c79	     0xf853bfdffff	                           jne 0x40029ba	      8888	screen.c	FUNCTION_69	IF_8
0x4002c7f	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      8888	screen.c	FUNCTION_69	IF_8
0x4002c84	          0x4585db	                         test r11d, r11d	      8888	screen.c	FUNCTION_69	IF_8
0x4002c87	     0xf852dfdffff	                           jne 0x40029ba	      8888	screen.c	FUNCTION_69	IF_8
0x4002c8d	    0x488b05000000	            mov rax, qword [0x04002c94] 	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002c94	    0xc70500000000	               mov dword [0x04002c9e], 0	      8913	screen.c	FUNCTION_69	ELSE_1
0x4002c9e	          0x4885c0	                           test rax, rax	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002ca1	     0xf8ecd020000	                           jle 0x4002f74	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002ca7	          0x4531e4	                          xor r12d, r12d	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002caa	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002caf	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cb4	          0x4d89e7	                            mov r15, r12	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cb7	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cbc	          0x4989ec	                            mov r12, rbp	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cbf	            0xeb18	                           jmp 0x4002cd9	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cc1	    0x488b05000000	            mov rax, qword [0x04002cc8] 	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cc8	        0x4983c701	                              add r15, 1	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002ccc	        0x4983c504	                              add r13, 4	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cd0	          0x4939c7	                            cmp r15, rax	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cd3	     0xf8d8e020000	                           jge 0x4002f67	      8915	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cd9	    0x8b0500000000	            mov eax, dword [0x04002cdf] 	      8917	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cdf	      0x448b4c2424	            mov r9d, dword [rsp + 0x24] 	      8926	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002ce4	          0x4489fb	                           mov ebx, r15d	      8917	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002ce7	        0x410fafc7	                          imul eax, r15d	      8917	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002ceb	          0x4585c9	                           test r9d, r9d	      8926	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002cee	        0x41894500	                    mov dword [r13], eax	      8917	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cf2	      0x43c6043c00	                 mov byte [r12 + r15], 0	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x4002cf7	            0x75c8	                           jne 0x4002cc1	      8926	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002cf9	    0x488b15000000	            mov rdx, qword [0x04002d00] 	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x4002d00	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_107	CALL_6
0x4002d05	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_107	CALL_6
0x4002d08	        0x490fafff	                           imul rdi, r15	        90	string3.h	FUNCTION_107	CALL_6
0x4002d0c	      0x48037c2430	             add rdi, qword [rsp + 0x30]	        90	string3.h	FUNCTION_107	CALL_6
0x4002d11	      0xe800000000	                          call 0x4002d16	        90	string3.h	FUNCTION_107	CALL_6
0x4002d16	    0x448b05000000	            mov r8d, dword [0x04002d1d] 	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x4002d1d	          0x4585c0	                           test r8d, r8d	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x4002d20	     0xf857a020000	                           jne 0x4002fa0	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x4002d26	    0x813d00000000	         cmp dword [0x04002d30], 0x26cc 	      8940	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12
0x4002d30	     0xf84c1030000	                            je 0x40030f7	      8940	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12
0x4002d36	    0x488b05000000	            mov rax, qword [0x04002d3d] 	      8944	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x4002d3d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        90	string3.h	FUNCTION_107	CALL_6
0x4002d42	        0x488d1400	                    lea rdx, [rax + rax]	        90	string3.h	FUNCTION_107	CALL_6
0x4002d46	        0x490fafc7	                           imul rax, r15	        90	string3.h	FUNCTION_107	CALL_6
0x4002d4a	        0x488d3c46	                  lea rdi, [rsi + rax*2]	        90	string3.h	FUNCTION_107	CALL_6
0x4002d4e	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x4002d50	      0xe800000000	                          call 0x4002d55	        90	string3.h	FUNCTION_107	CALL_6
0x4002d55	    0x8b1500000000	            mov edx, dword [0x04002d5b] 	      8946	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002d5b	    0x488b05000000	            mov rax, qword [0x04002d62] 	      8946	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002d62	             0x1da	                            add edx, ebx	      8946	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x4002d64	            0x29c2	                            sub edx, eax	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x4002d66	     0xf885cffffff	                            js 0x4002cc8	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x4002d6c	    0x488b35000000	            mov rsi, qword [0x04002d73] 	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x4002d73	          0x4885f6	                           test rsi, rsi	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x4002d76	     0xf844cffffff	                            je 0x4002cc8	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x4002d7c	    0x48631d000000	         movsxd rbx, dword [0x04002d83] 	      8949	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x4002d83	    0x488b05000000	            mov rax, qword [0x04002d8a] 	      8949	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x4002d8a	          0x4863f8	                         movsxd rdi, eax	      8949	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x4002d8d	          0x4839c3	                            cmp rbx, rax	      8949	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x4002d90	    0x8b0500000000	            mov eax, dword [0x04002d96] 	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002d96	        0x480f4ddf	                         cmovge rbx, rdi	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002d9a	            0x85c0	                           test eax, eax	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002d9c	            0x740e	                            je 0x4002dac	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002d9e	    0x48833d000000	               cmp qword [0x04002da6], 0	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002da6	     0xf8469030000	                            je 0x4003115	      8956	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002dac	    0x48633d000000	         movsxd rdi, dword [0x04002db3] 	      8957	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002db3	          0x4863d2	                         movsxd rdx, edx	      8959	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x4002db6	    0x483b3d000000	            cmp rdi, qword [0x04002dbd] 	      8957	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002dbd	    0x488d2c950000	                        lea rbp, [rdx*4]	      8959	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x4002dc5	     0xf845a030000	                            je 0x4003125	      8957	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x4002dcb	            0x85c0	                           test eax, eax	      8963	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x4002dcd	     0xf853b020000	                           jne 0x400300e	      8963	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x4002dd3	    0x813d00000000	         cmp dword [0x04002ddd], 0x26cc 	      8975	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x4002ddd	     0xf84e2020000	                            je 0x40030c5	      8975	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x4002de3	    0x488b05000000	            mov rax, qword [0x04002dea] 	      8980	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x4002dea	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	        59	string3.h	FUNCTION_105	CALL_3
0x4002def	        0x488d141b	                    lea rdx, [rbx + rbx]	        59	string3.h	FUNCTION_105	CALL_3
0x4002df3	          0x8b3428	              mov esi, dword [rax + rbp]	        59	string3.h	FUNCTION_105	CALL_3
0x4002df6	    0x488b05000000	            mov rax, qword [0x04002dfd] 	        59	string3.h	FUNCTION_105	CALL_3
0x4002dfd	        0x488d3470	                  lea rsi, [rax + rsi*2]	        59	string3.h	FUNCTION_105	CALL_3
0x4002e01	        0x418b4500	                    mov eax, dword [r13]	        59	string3.h	FUNCTION_105	CALL_3
0x4002e05	        0x488d3c41	                  lea rdi, [rcx + rax*2]	        59	string3.h	FUNCTION_105	CALL_3
0x4002e09	      0xe800000000	                          call 0x4002e0e	        59	string3.h	FUNCTION_105	CALL_3
0x4002e0e	      0xe9aefeffff	                           jmp 0x4002cc1	        59	string3.h	FUNCTION_105	CALL_3
0x4002e13	    0x48630d000000	         movsxd rcx, dword [0x04002e1a] 	      8791	screen.c	FUNCTION_69	IF_1
0x4002e1a	    0x483b0d000000	            cmp rcx, qword [0x04002e21] 	      8791	screen.c	FUNCTION_69	IF_1
0x4002e21	     0xf8571f9ffff	                           jne 0x4002798	      8791	screen.c	FUNCTION_69	IF_1
0x4002e27	            0x31c9	                            xor ecx, ecx	      8793	screen.c	FUNCTION_69	IF_1
0x4002e29	    0x48833d000000	               cmp qword [0x04002e31], 0	      8793	screen.c	FUNCTION_69	IF_1
0x4002e31	           0xf95c1	                                setne cl	      8793	screen.c	FUNCTION_69	IF_1
0x4002e34	    0x3b0d00000000	            cmp ecx, dword [0x04002e3a] 	      8793	screen.c	FUNCTION_69	IF_1
0x4002e3a	     0xf8558f9ffff	                           jne 0x4002798	      8793	screen.c	FUNCTION_69	IF_1
0x4002e40	    0x813d00000000	         cmp dword [0x04002e4a], 0x26cc 	      8794	screen.c	FUNCTION_69	IF_1
0x4002e4a	        0x400f95c6	                               setne sil	      8794	screen.c	FUNCTION_69	IF_1
0x4002e4e	    0x48833d000000	               cmp qword [0x04002e56], 0	      8794	screen.c	FUNCTION_69	IF_1
0x4002e56	           0xf95c1	                                setne cl	      8794	screen.c	FUNCTION_69	IF_1
0x4002e59	          0x4038ce	                             cmp sil, cl	      8794	screen.c	FUNCTION_69	IF_1
0x4002e5c	     0xf8436f9ffff	                            je 0x4002798	      8794	screen.c	FUNCTION_69	IF_1
0x4002e62	    0x48630d000000	         movsxd rcx, dword [0x04002e69] 	      8795	screen.c	FUNCTION_69	IF_1
0x4002e69	    0x483b0d000000	            cmp rcx, qword [0x04002e70] 	      8795	screen.c	FUNCTION_69	IF_1
0x4002e70	     0xf8522f9ffff	                           jne 0x4002798	      8795	screen.c	FUNCTION_69	IF_1
0x4002e76	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      9051	screen.c	FUNCTION_69
0x4002e7e	    0x644833042528	                xor rax, qword fs:[0x28]	      9051	screen.c	FUNCTION_69
0x4002e87	     0xf85c1020000	                           jne 0x400314e	      9051	screen.c	FUNCTION_69
0x4002e8d	    0x4881c4980000	                           add rsp, 0x98	      9051	screen.c	FUNCTION_69
0x4002e94	              0x5b	                                 pop rbx	      9051	screen.c	FUNCTION_69
0x4002e95	              0x5d	                                 pop rbp	      9051	screen.c	FUNCTION_69
0x4002e96	            0x415c	                                 pop r12	      9051	screen.c	FUNCTION_69
0x4002e98	            0x415d	                                 pop r13	      9051	screen.c	FUNCTION_69
0x4002e9a	            0x415e	                                 pop r14	      9051	screen.c	FUNCTION_69
0x4002e9c	            0x415f	                                 pop r15	      9051	screen.c	FUNCTION_69
0x4002e9e	              0xc3	                                     ret	      9051	screen.c	FUNCTION_69
0x4002e9f	      0xe87cf6ffff	                   call sym.screenclear2	      9015	screen.c	FUNCTION_69	CALL_36
0x4002ea4	      0xe93dfdffff	                           jmp 0x4002be6	      9015	screen.c	FUNCTION_69	CALL_36
0x4002ea9	    0x488b05000000	            mov rax, qword [0x04002eb0] 	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002eb0	            0x31f6	                            xor esi, esi	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002eb2	        0x488d7801	                      lea rdi, [rax + 1]	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002eb6	    0x480faf3d0000	            imul rdi, qword [0x04002ebe]	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002ebe	        0x48c1e702	                              shl rdi, 2	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002ec2	      0xe800000000	                          call 0x4002ec7	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002ec7	    0x48833d000000	               cmp qword [0x04002ecf], 0	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002ecf	      0x4889442410	             mov qword [rsp + 0x10], rax	      8844	screen.c	FUNCTION_69	IF_4	CALL_8
0x4002ed4	     0xf8ea2f9ffff	                           jle 0x400287c	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002eda	      0xbd01000000	                              mov ebp, 1	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002edf	              0x90	                                     nop	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002ee0	    0x488b05000000	            mov rax, qword [0x04002ee7] 	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002ee7	            0x31f6	                            xor esi, esi	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002ee9	        0x488d7801	                      lea rdi, [rax + 1]	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002eed	    0x480faf3d0000	            imul rdi, qword [0x04002ef5]	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002ef5	        0x48c1e702	                              shl rdi, 2	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002ef9	      0xe800000000	                          call 0x4002efe	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002efe	      0x498944eef8	        mov qword [r14 + rbp*8 - 8], rax	      8847	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x4002f03	          0x4889e8	                            mov rax, rbp	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002f06	        0x4883c501	                              add rbp, 1	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002f0a	    0x483b05000000	            cmp rax, qword [0x04002f11] 	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002f11	            0x7ccd	                            jl 0x4002ee0	      8846	screen.c	FUNCTION_69	IF_4	FOR_1
0x4002f13	    0x813d00000000	         cmp dword [0x04002f1d], 0x26cc 	      8850	screen.c	FUNCTION_69	IF_5
0x4002f1d	     0xf8569f9ffff	                           jne 0x400288c	      8850	screen.c	FUNCTION_69	IF_5
0x4002f23	    0x488b05000000	            mov rax, qword [0x04002f2a] 	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f2a	            0x31f6	                            xor esi, esi	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f2c	        0x488d7801	                      lea rdi, [rax + 1]	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f30	    0x480faf3d0000	            imul rdi, qword [0x04002f38]	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f38	      0xe800000000	                          call 0x4002f3d	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f3d	        0x48890424	                    mov qword [rsp], rax	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f41	      0xe946f9ffff	                           jmp 0x400288c	      8851	screen.c	FUNCTION_69	IF_5	CALL_10
0x4002f46	    0x4c8b2d000000	            mov r13, qword [0x04002f4d] 	      8861	screen.c	FUNCTION_69
0x4002f4d	      0xe9cef9ffff	                           jmp 0x4002920	      8861	screen.c	FUNCTION_69
0x4002f52	    0x448b15000000	           mov r10d, dword [0x04002f59] 	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f59	          0x4585d2	                         test r10d, r10d	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f5c	     0xf8588faffff	                           jne 0x40029ea	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f62	      0xe961faffff	                           jmp 0x40029c8	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f67	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f6c	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f71	          0x4c89e5	                            mov rbp, r12	      8890	screen.c	FUNCTION_69	IF_8	IF_9
0x4002f74	    0x480faf050000	            imul rax, qword [0x04002f7c]	      8987	screen.c	FUNCTION_69	ELSE_1
0x4002f7c	          0x4801d8	                            add rax, rbx	      8987	screen.c	FUNCTION_69	ELSE_1
0x4002f7f	    0x488905000000	            mov qword [0x04002f86], rax 	      8987	screen.c	FUNCTION_69	ELSE_1
0x4002f86	      0xe935fbffff	                           jmp 0x4002ac0	      8987	screen.c	FUNCTION_69	ELSE_1
0x4002f8b	            0x31c9	                            xor ecx, ecx	      8875	screen.c	FUNCTION_69	FOR_2
0x4002f8d	      0xe902faffff	                           jmp 0x4002994	      8875	screen.c	FUNCTION_69	FOR_2
0x4002f92	          0x83e801	                              sub eax, 1	      9029	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002f95	    0x890500000000	            mov dword [0x04002f9b], eax 	      9029	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002f9b	      0xe92afcffff	                           jmp 0x4002bca	      9029	screen.c	FUNCTION_69	ELSE_3	IF_19	IF_20
0x4002fa0	    0x488b05000000	            mov rax, qword [0x04002fa7] 	      8933	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x4002fa7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_107	CALL_6
0x4002fac	    0x488d14850000	                        lea rdx, [rax*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4002fb4	        0x490fafc7	                           imul rax, r15	        90	string3.h	FUNCTION_107	CALL_6
0x4002fb8	        0x488d3c86	                  lea rdi, [rsi + rax*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4002fbc	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x4002fbe	      0xe800000000	                          call 0x4002fc3	        90	string3.h	FUNCTION_107	CALL_6
0x4002fc3	    0x48833d000000	               cmp qword [0x04002fcb], 0	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4002fcb	     0xf8e55fdffff	                           jle 0x4002d26	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4002fd1	      0xbd01000000	                              mov ebp, 1	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4002fd6	    0x488b05000000	            mov rax, qword [0x04002fdd] 	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x4002fdd	      0x498b4ceef8	        mov rcx, qword [r14 + rbp*8 - 8]	        90	string3.h	FUNCTION_107	CALL_6
0x4002fe2	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x4002fe4	    0x488d14850000	                        lea rdx, [rax*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4002fec	        0x490fafc7	                           imul rax, r15	        90	string3.h	FUNCTION_107	CALL_6
0x4002ff0	        0x488d3c81	                  lea rdi, [rcx + rax*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4002ff4	      0xe800000000	                          call 0x4002ff9	        90	string3.h	FUNCTION_107	CALL_6
0x4002ff9	          0x4889e8	                            mov rax, rbp	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4002ffc	        0x4883c501	                              add rbp, 1	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4003000	    0x483b05000000	            cmp rax, qword [0x04003007] 	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4003007	            0x7ccd	                            jl 0x4002fd6	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4003009	      0xe918fdffff	                           jmp 0x4002d26	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x400300e	    0x488b05000000	            mov rax, qword [0x04003015] 	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x4003015	          0x4885c0	                           test rax, rax	      8963	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x4003018	     0xf84b5fdffff	                            je 0x4002dd3	      8963	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x400301e	    0x486315000000	         movsxd rdx, dword [0x04003025] 	      8964	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x4003025	    0x483b15000000	            cmp rdx, qword [0x0400302c] 	      8964	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x400302c	     0xf85a1fdffff	                           jne 0x4002dd3	      8964	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x4003032	    0x488b15000000	            mov rdx, qword [0x04003039] 	      8966	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x4003039	    0x488d349d0000	                        lea rsi, [rbx*4]	      8966	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x4003041	          0x4889f1	                            mov rcx, rsi	      8966	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x4003044	      0x4889742440	             mov qword [rsp + 0x40], rsi	      8966	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x4003049	          0x8b142a	              mov edx, dword [rdx + rbp]	        59	string3.h	FUNCTION_105	CALL_3
0x400304c	        0x488d3490	                  lea rsi, [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4003050	        0x418b4500	                    mov eax, dword [r13]	        59	string3.h	FUNCTION_105	CALL_3
0x4003054	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_105	CALL_3
0x4003059	        0x488d3c82	                  lea rdi, [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x400305d	          0x4889ca	                            mov rdx, rcx	        59	string3.h	FUNCTION_105	CALL_3
0x4003060	      0xe800000000	                          call 0x4003065	        59	string3.h	FUNCTION_105	CALL_3
0x4003065	    0x48833d000000	               cmp qword [0x0400306d], 0	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x400306d	     0xf8e60fdffff	                           jle 0x4002dd3	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x4003073	    0x41b801000000	                              mov r8d, 1	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x4003079	    0x488b05000000	            mov rax, qword [0x04003080] 	      8970	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x4003080	      0x4c89442448	              mov qword [rsp + 0x48], r8	        59	string3.h	FUNCTION_105	CALL_3
0x4003085	          0x8b1428	              mov edx, dword [rax + rbp]	        59	string3.h	FUNCTION_105	CALL_3
0x4003088	    0x4a8b04c50000	                   mov rax, qword [r8*8]	        59	string3.h	FUNCTION_105	CALL_3
0x4003090	        0x488d3490	                  lea rsi, [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4003094	        0x418b5500	                    mov edx, dword [r13]	        59	string3.h	FUNCTION_105	CALL_3
0x4003098	      0x4b8b44c6f8	         mov rax, qword [r14 + r8*8 - 8]	        59	string3.h	FUNCTION_105	CALL_3
0x400309d	        0x488d3c90	                  lea rdi, [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x40030a1	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        59	string3.h	FUNCTION_105	CALL_3
0x40030a6	      0xe800000000	                          call 0x40030ab	        59	string3.h	FUNCTION_105	CALL_3
0x40030ab	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030b0	          0x4c89c0	                             mov rax, r8	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030b3	        0x4983c001	                               add r8, 1	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030b7	    0x483b05000000	            cmp rax, qword [0x040030be] 	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030be	            0x7cb9	                            jl 0x4003079	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030c0	      0xe90efdffff	                           jmp 0x4002dd3	      8969	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x40030c5	    0x488b35000000	            mov rsi, qword [0x040030cc] 	      8975	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x40030cc	          0x4885f6	                           test rsi, rsi	      8975	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x40030cf	     0xf840efdffff	                            je 0x4002de3	      8975	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x40030d5	    0x488b05000000	            mov rax, qword [0x040030dc] 	      8976	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x40030dc	        0x418b7d00	                    mov edi, dword [r13]	        59	string3.h	FUNCTION_105	CALL_3
0x40030e0	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_105	CALL_3
0x40030e3	        0x48033c24	                    add rdi, qword [rsp]	        59	string3.h	FUNCTION_105	CALL_3
0x40030e7	          0x8b0428	              mov eax, dword [rax + rbp]	        59	string3.h	FUNCTION_105	CALL_3
0x40030ea	          0x4801c6	                            add rsi, rax	        59	string3.h	FUNCTION_105	CALL_3
0x40030ed	      0xe800000000	                          call 0x40030f2	        59	string3.h	FUNCTION_105	CALL_3
0x40030f2	      0xe9ecfcffff	                           jmp 0x4002de3	        59	string3.h	FUNCTION_105	CALL_3
0x40030f7	    0x488b15000000	            mov rdx, qword [0x040030fe] 	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x40030fe	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x4003100	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_107	CALL_6
0x4003103	        0x490fafff	                           imul rdi, r15	        90	string3.h	FUNCTION_107	CALL_6
0x4003107	        0x48033c24	                    add rdi, qword [rsp]	        90	string3.h	FUNCTION_107	CALL_6
0x400310b	      0xe800000000	                          call 0x4003110	        90	string3.h	FUNCTION_107	CALL_6
0x4003110	      0xe921fcffff	                           jmp 0x4002d36	        90	string3.h	FUNCTION_107	CALL_6
0x4003115	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_107	CALL_6
0x4003118	    0x488d2c950000	                        lea rbp, [rdx*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4003120	      0xe9aefcffff	                           jmp 0x4002dd3	        90	string3.h	FUNCTION_107	CALL_6
0x4003125	    0x488b05000000	            mov rax, qword [0x0400312c] 	      8959	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x400312c	        0x418b7d00	                    mov edi, dword [r13]	        59	string3.h	FUNCTION_105	CALL_3
0x4003130	      0x48037c2430	             add rdi, qword [rsp + 0x30]	        59	string3.h	FUNCTION_105	CALL_3
0x4003135	          0x8b0490	            mov eax, dword [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4003138	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_105	CALL_3
0x400313b	          0x4801c6	                            add rsi, rax	        59	string3.h	FUNCTION_105	CALL_3
0x400313e	      0xe800000000	                          call 0x4003143	        59	string3.h	FUNCTION_105	CALL_3
0x4003143	    0x8b0500000000	            mov eax, dword [0x04003149] 	        59	string3.h	FUNCTION_105	CALL_3
0x4003149	      0xe97dfcffff	                           jmp 0x4002dcb	        59	string3.h	FUNCTION_105	CALL_3
0x400314e	      0xe800000000	                          call 0x4003153	      9051	screen.c	FUNCTION_69
conceal_check_cursur_line	functions,0:IF,1:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	18
0x4001ad0	    0x488b3d000000	            mov rdi, qword [0x04001ad7] 	       911	screen.c	FUNCTION_16	IF_1	CALL_1
0x4001ad7	    0x4883bfa80200	              cmp qword [rdi + 0x2a8], 0	       911	screen.c	FUNCTION_16	IF_1	CALL_1
0x4001adf	            0x7e0c	                           jle 0x4001aed	       911	screen.c	FUNCTION_16	IF_1	CALL_1
0x4001ae1	    0x488b87a00200	           mov rax, qword [rdi + 0x2a0] 	       890	screen.c	FUNCTION_15	IF_1
0x4001ae8	          0x803800	                       cmp byte [rax], 0	       890	screen.c	FUNCTION_15	IF_1
0x4001aeb	            0x7503	                           jne 0x4001af0	       890	screen.c	FUNCTION_15	IF_1
0x4001aed	              0xc3	                                     ret	       918	screen.c	FUNCTION_16
0x4001aee	            0x6690	                                     nop	       918	screen.c	FUNCTION_16
0x4001af0	        0x4883ec08	                              sub rsp, 8	       910	screen.c	FUNCTION_16
0x4001af4	      0xe8f7fcffff	    call sym.conceal_cursor_line.part.11	       910	screen.c	FUNCTION_16
0x4001af9	            0x85c0	                           test eax, eax	       911	screen.c	FUNCTION_16	IF_1	CALL_1
0x4001afb	            0x7418	                            je 0x4001b15	       911	screen.c	FUNCTION_16	IF_1	CALL_1
0x4001afd	    0xc70500000000	               mov dword [0x04001b07], 1	       913	screen.c	FUNCTION_16	IF_1
0x4001b07	      0xbf01000000	                              mov edi, 1	       916	screen.c	FUNCTION_16	IF_1	CALL_2
0x4001b0c	        0x4883c408	                              add rsp, 8	       918	screen.c	FUNCTION_16
0x4001b10	      0xe900000000	                           jmp 0x4001b15	       916	screen.c	FUNCTION_16	IF_1	CALL_2
0x4001b15	              0x58	                                 pop rax	       918	screen.c	FUNCTION_16
0x4001b16	            0xebd5	                           jmp 0x4001aed	       918	screen.c	FUNCTION_16
screenclear	functions,0:IF,0:DO,0:ELSE,0:CALL,3:FOR,0:WHILE,0:SWITCH,0	7
0x4003180	        0x4883ec08	                              sub rsp, 8	      9073	screen.c	FUNCTION_71
0x4003184	            0x31ff	                            xor edi, edi	      9074	screen.c	FUNCTION_71	CALL_1
0x4003186	      0xe800000000	                          call 0x400318b	      9074	screen.c	FUNCTION_71	CALL_1
0x400318b	            0x31ff	                            xor edi, edi	      9075	screen.c	FUNCTION_71	CALL_2
0x400318d	      0xe800000000	                          call 0x4003192	      9075	screen.c	FUNCTION_71	CALL_2
0x4003192	        0x4883c408	                              add rsp, 8	      9077	screen.c	FUNCTION_71
0x4003196	      0xe985f3ffff	                    jmp sym.screenclear2	      9076	screen.c	FUNCTION_71	CALL_3
win_del_lines	functions,0:IF,6:DO,0:ELSE,1:CALL,6:FOR,0:WHILE,0:SWITCH,0	96
0x4009cf0	            0x4156	                                push r14	      9610	screen.c	FUNCTION_82
0x4009cf2	            0x4155	                                push r13	      9610	screen.c	FUNCTION_82
0x4009cf4	          0x4589c6	                           mov r14d, r8d	      9610	screen.c	FUNCTION_82
0x4009cf7	            0x4154	                                push r12	      9610	screen.c	FUNCTION_82
0x4009cf9	              0x55	                                push rbp	      9610	screen.c	FUNCTION_82
0x4009cfa	          0x4189f4	                           mov r12d, esi	      9610	screen.c	FUNCTION_82
0x4009cfd	              0x53	                                push rbx	      9610	screen.c	FUNCTION_82
0x4009cfe	          0x4889fd	                            mov rbp, rdi	      9610	screen.c	FUNCTION_82
0x4009d01	          0x4589cd	                           mov r13d, r9d	      9610	screen.c	FUNCTION_82
0x4009d04	        0x4883ec10	                           sub rsp, 0x10	      9610	screen.c	FUNCTION_82
0x4009d08	            0x85c9	                           test ecx, ecx	      9613	screen.c	FUNCTION_82	IF_1
0x4009d0a	            0x740a	                            je 0x4009d16	      9613	screen.c	FUNCTION_82	IF_1
0x4009d0c	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	      9614	screen.c	FUNCTION_82	IF_1
0x4009d16	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	      9616	screen.c	FUNCTION_82	IF_2
0x4009d1c	            0x89d3	                            mov ebx, edx	      9616	screen.c	FUNCTION_82	IF_2
0x4009d1e	          0x4429e0	                           sub eax, r12d	      9616	screen.c	FUNCTION_82	IF_2
0x4009d21	            0x39d0	                            cmp eax, edx	      9616	screen.c	FUNCTION_82	IF_2
0x4009d23	           0xf4ed8	                         cmovle ebx, eax	      9616	screen.c	FUNCTION_82	IF_2
0x4009d26	      0xe800000000	                          call 0x4009d2b	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d2b	            0x85c0	                           test eax, eax	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d2d	            0x7431	                            je 0x4009d60	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d2f	            0x85db	                           test ebx, ebx	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d31	            0x7e2d	                           jle 0x4009d60	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d33	          0x4589e9	                           mov r9d, r13d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d36	    0x41b801000000	                              mov r8d, 1	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d3c	          0x4489f1	                           mov ecx, r14d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d3f	            0x89da	                            mov edx, ebx	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d41	          0x4489e6	                           mov esi, r12d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d44	          0x4889ef	                            mov rdi, rbp	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d47	      0xe884e7ffff	           call sym.win_do_lines.part.22	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009d4c	          0x83f802	                              cmp eax, 2	      9620	screen.c	FUNCTION_82	IF_3
0x4009d4f	            0x741f	                            je 0x4009d70	      9620	screen.c	FUNCTION_82	IF_3
0x4009d51	        0x4883c410	                           add rsp, 0x10	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d55	              0x5b	                                 pop rbx	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d56	              0x5d	                                 pop rbp	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d57	            0x415c	                                 pop r12	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d59	            0x415d	                                 pop r13	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d5b	            0x415e	                                 pop r14	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d5d	              0xc3	                                     ret	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d5e	            0x6690	                                     nop	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d60	        0x4883c410	                           add rsp, 0x10	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d64	            0x31c0	                            xor eax, eax	      9610	screen.c	FUNCTION_82
0x4009d66	              0x5b	                                 pop rbx	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d67	              0x5d	                                 pop rbp	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d68	            0x415c	                                 pop r12	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d6a	            0x415d	                                 pop r13	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d6c	            0x415e	                                 pop r14	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d6e	              0xc3	                                     ret	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d6f	              0x90	                                     nop	      9647	screen.c	FUNCTION_82	ELSE_1
0x4009d70	    0x8bb5a8010000	           mov esi, dword [rbp + 0x1a8] 	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d76	     0x3b59c000000	             add esi, dword [rbp + 0x9c]	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d7c	        0x4883ec08	                              sub rsp, 8	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d80	    0x8b0d00000000	            mov ecx, dword [0x04009d86] 	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d86	            0x6a00	                                  push 0	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d88	          0x4531c0	                            xor r8d, r8d	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d8b	            0x89da	                            mov edx, ebx	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d8d	            0x31ff	                            xor edi, edi	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d8f	          0x4589e9	                           mov r9d, r13d	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d92	          0x4401e6	                           add esi, r12d	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d95	      0xe800000000	                          call 0x4009d9a	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d9a	            0x85c0	                           test eax, eax	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d9c	              0x5a	                                 pop rdx	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d9d	              0x59	                                 pop rcx	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009d9e	            0x74c0	                            je 0x4009d60	      9623	screen.c	FUNCTION_82	IF_4	CALL_3
0x4009da0	      0x48837d2000	               cmp qword [rbp + 0x20], 0	      9631	screen.c	FUNCTION_82	IF_5
0x4009da5	    0x488b0d000000	            mov rcx, qword [0x04009dac] 	      9631	screen.c	FUNCTION_82	IF_5
0x4009dac	            0x7452	                            je 0x4009e00	      9631	screen.c	FUNCTION_82	IF_5
0x4009dae	    0x8bb5a8010000	           mov esi, dword [rbp + 0x1a8] 	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009db4	     0x3b59c000000	             add esi, dword [rbp + 0x9c]	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dba	          0x4531c9	                            xor r9d, r9d	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dbd	     0x3b5a0000000	             add esi, dword [rbp + 0xa0]	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dc3	            0x89da	                            mov edx, ebx	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dc5	            0x31ff	                            xor edi, edi	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dc7	          0x4589e8	                           mov r8d, r13d	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dca	            0x29de	                            sub esi, ebx	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dcc	      0xe800000000	                          call 0x4009dd1	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dd1	            0x89c2	                            mov edx, eax	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dd3	      0xb801000000	                              mov eax, 1	      9646	screen.c	FUNCTION_82	ELSE_1
0x4009dd8	            0x85d2	                           test edx, edx	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009dda	     0xf8571ffffff	                           jne 0x4009d51	      9633	screen.c	FUNCTION_82	IF_5	IF_6	CALL_5
0x4009de0	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      9637	screen.c	FUNCTION_82	IF_5	IF_6	CALL_6
0x4009de4	    0xc78540010000	              mov dword [rbp + 0x140], 1	      9636	screen.c	FUNCTION_82	IF_5	IF_6
0x4009dee	        0x8944240c	              mov dword [rsp + 0xc], eax	      9636	screen.c	FUNCTION_82	IF_5	IF_6
0x4009df2	      0xe89979ffff	               call sym.win_rest_invalid	      9637	screen.c	FUNCTION_82	IF_5	IF_6	CALL_6
0x4009df7	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9637	screen.c	FUNCTION_82	IF_5	IF_6	CALL_6
0x4009dfb	      0xe951ffffff	                           jmp 0x4009d51	      9637	screen.c	FUNCTION_82	IF_5	IF_6	CALL_6
0x4009e00	    0x8b85a4000000	            mov eax, dword [rbp + 0xa4] 	      9631	screen.c	FUNCTION_82	IF_5
0x4009e06	            0x85c0	                           test eax, eax	      9631	screen.c	FUNCTION_82	IF_5
0x4009e08	            0x75a4	                           jne 0x4009dae	      9631	screen.c	FUNCTION_82	IF_5
0x4009e0a	    0x486315000000	         movsxd rdx, dword [0x04009e11] 	      9631	screen.c	FUNCTION_82	IF_5
0x4009e11	        0x488d41ff	                      lea rax, [rcx - 1]	      9631	screen.c	FUNCTION_82	IF_5
0x4009e15	          0x4839c2	                            cmp rdx, rax	      9631	screen.c	FUNCTION_82	IF_5
0x4009e18	            0x7c94	                            jl 0x4009dae	      9631	screen.c	FUNCTION_82	IF_5
0x4009e1a	    0xc70500000000	               mov dword [0x04009e24], 1	      9645	screen.c	FUNCTION_82	ELSE_1
0x4009e24	      0xb801000000	                              mov eax, 1	      9646	screen.c	FUNCTION_82	ELSE_1
0x4009e29	      0xe923ffffff	                           jmp 0x4009d51	      9646	screen.c	FUNCTION_82	ELSE_1
screen_ins_lines	functions,0:IF,23:DO,0:ELSE,16:CALL,30:FOR,3:WHILE,2:SWITCH,0	387
0x4007e60	            0x4157	                                push r15	      9784	screen.c	FUNCTION_85
0x4007e62	            0x4156	                                push r14	      9784	screen.c	FUNCTION_85
0x4007e64	            0x4155	                                push r13	      9784	screen.c	FUNCTION_85
0x4007e66	            0x4154	                                push r12	      9784	screen.c	FUNCTION_85
0x4007e68	          0x4189cd	                           mov r13d, ecx	      9784	screen.c	FUNCTION_85
0x4007e6b	              0x55	                                push rbp	      9784	screen.c	FUNCTION_85
0x4007e6c	              0x53	                                push rbx	      9784	screen.c	FUNCTION_85
0x4007e6d	          0x4d89cc	                             mov r12, r9	      9784	screen.c	FUNCTION_85
0x4007e70	            0x89d3	                            mov ebx, edx	      9784	screen.c	FUNCTION_85
0x4007e72	        0x4883ec38	                           sub rsp, 0x38	      9784	screen.c	FUNCTION_85
0x4007e76	        0x897c2414	             mov dword [rsp + 0x14], edi	      9784	screen.c	FUNCTION_85
0x4007e7a	    0x488b3d000000	            mov rdi, qword [0x04007e81] 	      9791	screen.c	FUNCTION_85	CALL_1
0x4007e81	        0x8974240c	              mov dword [rsp + 0xc], esi	      9784	screen.c	FUNCTION_85
0x4007e85	      0x4489442410	             mov dword [rsp + 0x10], r8d	      9784	screen.c	FUNCTION_85
0x4007e8a	      0xe800000000	                          call 0x4007e8f	      9791	screen.c	FUNCTION_85	CALL_1
0x4007e8f	      0xbf01000000	                              mov edi, 1	      8743	screen.c	FUNCTION_68	CALL_1
0x4007e94	            0x89c5	                            mov ebp, eax	      9791	screen.c	FUNCTION_85	CALL_1
0x4007e96	      0xe800000000	                          call 0x4007e9b	      8743	screen.c	FUNCTION_68	CALL_1
0x4007e9b	    0x48833d000000	               cmp qword [0x04007ea3], 0	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007ea3	     0xf8437040000	                            je 0x40082e0	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007ea9	            0x85db	                           test ebx, ebx	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007eab	     0xf8e2f040000	                           jle 0x40082e0	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007eb1	          0x4863d3	                         movsxd rdx, ebx	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007eb4	            0x31c0	                            xor eax, eax	      9807	screen.c	FUNCTION_85	IF_1
0x4007eb6	    0x483b15000000	            cmp rdx, qword [0x04007ebd] 	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007ebd	            0x7f16	                            jg 0x4007ed5	      9801	screen.c	FUNCTION_85	IF_1	CALL_2
0x4007ebf	    0x66833d000000	                cmp word [0x04007ec7], 0	      9803	screen.c	FUNCTION_85	IF_1
0x4007ec7	            0x741f	                            je 0x4007ee8	      9803	screen.c	FUNCTION_85	IF_1
0x4007ec9	    0x448b1d000000	           mov r11d, dword [0x04007ed0] 	      9804	screen.c	FUNCTION_85	IF_1
0x4007ed0	          0x4585db	                         test r11d, r11d	      9804	screen.c	FUNCTION_85	IF_1
0x4007ed3	            0x7e13	                           jle 0x4007ee8	      9804	screen.c	FUNCTION_85	IF_1
0x4007ed5	        0x4883c438	                           add rsp, 0x38	      9979	screen.c	FUNCTION_85
0x4007ed9	              0x5b	                                 pop rbx	      9979	screen.c	FUNCTION_85
0x4007eda	              0x5d	                                 pop rbp	      9979	screen.c	FUNCTION_85
0x4007edb	            0x415c	                                 pop r12	      9979	screen.c	FUNCTION_85
0x4007edd	            0x415d	                                 pop r13	      9979	screen.c	FUNCTION_85
0x4007edf	            0x415e	                                 pop r14	      9979	screen.c	FUNCTION_85
0x4007ee1	            0x415f	                                 pop r15	      9979	screen.c	FUNCTION_85
0x4007ee3	              0xc3	                                     ret	      9979	screen.c	FUNCTION_85
0x4007ee4	         0xf1f4000	                         nop dword [rax]	      9979	screen.c	FUNCTION_85
0x4007ee8	          0x4d85e4	                           test r12, r12	      9835	screen.c	FUNCTION_85	IF_2
0x4007eeb	     0xf843f020000	                            je 0x4008130	      9835	screen.c	FUNCTION_85	IF_2
0x4007ef1	    0x49638424ac00	         movsxd rax, dword [r12 + 0xac] 	      9835	screen.c	FUNCTION_85	IF_2
0x4007ef9	    0x483b05000000	            cmp rax, qword [0x04007f00] 	      9835	screen.c	FUNCTION_85	IF_2
0x4007f00	     0xf842a020000	                            je 0x4008130	      9835	screen.c	FUNCTION_85	IF_2
0x4007f06	    0x488b05000000	            mov rax, qword [0x04007f0d] 	      9835	screen.c	FUNCTION_85	IF_2
0x4007f0d	          0x803800	                       cmp byte [rax], 0	      9835	screen.c	FUNCTION_85	IF_2
0x4007f10	     0xf851a020000	                           jne 0x4008130	      9835	screen.c	FUNCTION_85	IF_2
0x4007f16	    0xc74424280900	               mov dword [rsp + 0x28], 9	      9836	screen.c	FUNCTION_85	IF_2
0x4007f1e	    0x488b05000000	            mov rax, qword [0x04007f25] 	      9867	screen.c	FUNCTION_85	IF_11
0x4007f25	          0x803800	                       cmp byte [rax], 0	      9867	screen.c	FUNCTION_85	IF_11
0x4007f28	     0xf85b8040000	                           jne 0x40083e6	      9867	screen.c	FUNCTION_85	IF_11
0x4007f2e	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      9873	screen.c	FUNCTION_85	IF_12
0x4007f32	         0x36c2414	             add ebp, dword [rsp + 0x14]	      9873	screen.c	FUNCTION_85	IF_12
0x4007f36	            0x85ed	                           test ebp, ebp	      9873	screen.c	FUNCTION_85	IF_12
0x4007f38	            0x7f1e	                            jg 0x4007f58	      9873	screen.c	FUNCTION_85	IF_12
0x4007f3a	          0x4d85e4	                           test r12, r12	      9873	screen.c	FUNCTION_85	IF_12
0x4007f3d	     0xf843f050000	                            je 0x4008482	      9873	screen.c	FUNCTION_85	IF_12
0x4007f43	    0x49638424ac00	         movsxd rax, dword [r12 + 0xac] 	      9873	screen.c	FUNCTION_85	IF_12
0x4007f4b	    0x483b05000000	            cmp rax, qword [0x04007f52] 	      9873	screen.c	FUNCTION_85	IF_12
0x4007f52	     0xf842a050000	                            je 0x4008482	      9873	screen.c	FUNCTION_85	IF_12
0x4007f58	      0xbf00000000	                              mov edi, 0	      9874	screen.c	FUNCTION_85	CALL_6
0x4007f5d	      0xe800000000	                          call 0x4007f62	      9874	screen.c	FUNCTION_85	CALL_6
0x4007f62	            0x31ff	                            xor edi, edi	      9882	screen.c	FUNCTION_85	CALL_8
0x4007f64	    0x3b2d00000000	            cmp ebp, dword [0x04007f6a] 	      9882	screen.c	FUNCTION_85	CALL_8
0x4007f6a	    0x4d8db424ac00	                   lea r14, [r12 + 0xac]	      9882	screen.c	FUNCTION_85	CALL_8
0x4007f72	        0x400f9ec7	                               setle dil	      9882	screen.c	FUNCTION_85	CALL_8
0x4007f76	      0xe800000000	                          call 0x4007f7b	      9882	screen.c	FUNCTION_85	CALL_8
0x4007f7b	    0x488b05000000	            mov rax, qword [0x04007f82] 	      9885	screen.c	FUNCTION_85	IF_13
0x4007f82	    0xc70424000000	                      mov dword [rsp], 0	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x4007f89	          0x803800	                       cmp byte [rax], 0	      9873	screen.c	FUNCTION_85	IF_12
0x4007f8c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9873	screen.c	FUNCTION_85	IF_12
0x4007f90	           0xf44c5	                          cmove eax, ebp	      9873	screen.c	FUNCTION_85	IF_12
0x4007f93	      0x44036c2414	            add r13d, dword [rsp + 0x14]	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007f98	        0x8944240c	              mov dword [rsp + 0xc], eax	      9873	screen.c	FUNCTION_85	IF_12
0x4007f9c	        0x418d45ff	                      lea eax, [r13 - 1]	      9873	screen.c	FUNCTION_85	IF_12
0x4007fa0	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fa5	        0x89442408	                mov dword [rsp + 8], eax	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fa9	            0x29d8	                            sub eax, ebx	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fab	        0x89442404	                mov dword [rsp + 4], eax	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007faf	            0x89d8	                            mov eax, ebx	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fb1	            0xf7d8	                                 neg eax	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fb3	            0x4898	                                    cdqe	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fb5	    0x488d34850000	                        lea rsi, [rax*4]	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fbd	      0x4889442420	             mov qword [rsp + 0x20], rax	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fc2	      0x4889742418	             mov qword [rsp + 0x18], rsi	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fc7	    0x660f1f840000	                    nop word [rax + rax]	      9895	screen.c	FUNCTION_85	ELSE_10
0x4007fd0	          0x4d85e4	                           test r12, r12	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007fd3	     0xf84e7010000	                            je 0x40081c0	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007fd9	    0x49638424ac00	         movsxd rax, dword [r12 + 0xac] 	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007fe1	    0x483b05000000	            cmp rax, qword [0x04007fe8] 	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007fe8	          0x4989c1	                             mov r9, rax	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007feb	     0xf84cf010000	                            je 0x40081c0	      9898	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4007ff1	        0x8b442404	                mov eax, dword [rsp + 4]	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4007ff5	            0x39c5	                            cmp ebp, eax	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4007ff7	          0x4189c7	                           mov r15d, eax	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4007ffa	     0xf8f2b030000	                            jg 0x400832b	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4008000	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008005	          0x4129c5	                           sub r13d, eax	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008008	            0xeb09	                           jmp 0x4008013	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x400800a	    0x660f1f440000	                    nop word [rax + rax]	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008010	          0x4189c7	                           mov r15d, eax	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008013	    0x418b9424a800	            mov edx, dword [r12 + 0xa8] 	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x400801b	      0x438d7c3d00	                    lea edi, [r13 + r15]	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008020	          0x4c89f1	                            mov rcx, r14	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008023	          0x4489fe	                           mov esi, r15d	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x4008026	      0xe8a584ffff	                call sym.linecopy.isra.0	      9903	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	CALL_9
0x400802b	          0x4489f8	                           mov eax, r15d	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x400802e	            0x29d8	                            sub eax, ebx	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4008030	            0x39c5	                            cmp ebp, eax	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4008032	            0x7edc	                           jle 0x4008010	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x4008034	    0x458b8c24ac00	            mov r9d, dword [r12 + 0xac] 	      9902	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	WHILE_1
0x400803c	      0xbf00000000	                              mov edi, 0	      9905	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x4008041	          0x4d63ef	                        movsxd r13, r15d	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008044	      0xe800000000	                          call 0x4008049	      9905	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x4008049	            0x85c0	                           test eax, eax	      9905	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x400804b	     0xf842f020000	                            je 0x4008280	      9905	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x4008051	    0x488b05000000	            mov rax, qword [0x04008058] 	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008058	    0x418bbc24a800	            mov edi, dword [r12 + 0xa8] 	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008060	          0x4489ce	                            mov esi, r9d	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008063	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008067	        0x42033ca8	            add edi, dword [rax + r13*4]	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x400806b	      0xe8f083ffff	                      call sym.lineclear	      9906	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x4008070	    0x488b05000000	            mov rax, qword [0x04008077] 	      9910	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4008077	      0x42c6042800	                 mov byte [rax + r13], 0	      9910	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x400807c	        0x83042401	                      add dword [rsp], 1	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x4008080	      0x836c240801	                  sub dword [rsp + 8], 1	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x4008085	          0x8b0424	                    mov eax, dword [rsp]	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x4008088	      0x836c240401	                  sub dword [rsp + 4], 1	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x400808d	            0x39c3	                            cmp ebx, eax	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x400808f	     0xf8f3bffffff	                            jg 0x4007fd0	      9896	screen.c	FUNCTION_85	ELSE_10	FOR_1
0x4008095	      0xe800000000	                          call 0x400809a	      9930	screen.c	FUNCTION_85	CALL_16
0x400809a	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      9931	screen.c	FUNCTION_85	CALL_17
0x400809e	            0x31f6	                            xor esi, esi	      9931	screen.c	FUNCTION_85	CALL_17
0x40080a0	      0xe800000000	                          call 0x40080a5	      9931	screen.c	FUNCTION_85	CALL_17
0x40080a5	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      9932	screen.c	FUNCTION_85	IF_17
0x40080a9	            0x85c9	                           test ecx, ecx	      9932	screen.c	FUNCTION_85	IF_17
0x40080ab	     0xf8527030000	                           jne 0x40083d8	      9932	screen.c	FUNCTION_85	IF_17
0x40080b1	      0x837c242809	               cmp dword [rsp + 0x28], 9	      9936	screen.c	FUNCTION_85	IF_18
0x40080b6	     0xf84d4030000	                            je 0x4008490	      9936	screen.c	FUNCTION_85	IF_18
0x40080bc	            0x31ed	                            xor ebp, ebp	      9936	screen.c	FUNCTION_85	IF_18
0x40080be	      0x837c242801	               cmp dword [rsp + 0x28], 1	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080c3	     0xf84da030000	                            je 0x40084a3	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080c9	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080ce	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080d3	            0xeb41	                           jmp 0x4008116	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080d5	           0xf1f00	                         nop dword [rax]	      9938	screen.c	FUNCTION_85	ELSE_14	IF_19
0x40080d8	            0x85ed	                           test ebp, ebp	      9949	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	IF_21
0x40080da	            0x740f	                            je 0x40080eb	      9949	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	IF_21
0x40080dc	          0x4585ed	                         test r13d, r13d	      9949	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	IF_21
0x40080df	            0x740a	                            je 0x40080eb	      9949	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	IF_21
0x40080e1	            0x31f6	                            xor esi, esi	      9950	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	CALL_22
0x40080e3	          0x4489ef	                           mov edi, r13d	      9950	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	CALL_22
0x40080e6	      0xe800000000	                          call 0x40080eb	      9950	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	CALL_22
0x40080eb	    0x488b3d000000	            mov rdi, qword [0x040080f2] 	      9951	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	CALL_23
0x40080f2	      0xe800000000	                          call 0x40080f7	      9951	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20	CALL_23
0x40080f7	          0x83c501	                              add ebp, 1	      9945	screen.c	FUNCTION_85	ELSE_15	FOR_2
0x40080fa	    0xc70500000000	         mov dword [0x04008104], 0x270f 	      9222	screen.c	FUNCTION_77
0x4008104	    0xc70500000000	         mov dword [0x0400810e], 0x270f 	      9222	screen.c	FUNCTION_77
0x400810e	            0x39eb	                            cmp ebx, ebp	      9945	screen.c	FUNCTION_85	ELSE_15	FOR_2
0x4008110	     0xf8ee2010000	                           jle 0x40082f8	      9945	screen.c	FUNCTION_85	ELSE_15	FOR_2
0x4008116	        0x4183fc03	                             cmp r12d, 3	      9947	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20
0x400811a	            0x74bc	                            je 0x40080d8	      9947	screen.c	FUNCTION_85	ELSE_15	FOR_2	IF_20
0x400811c	    0x488b3d000000	            mov rdi, qword [0x04008123] 	      9954	screen.c	FUNCTION_85	ELSE_15	FOR_2	CALL_24
0x4008123	      0xe800000000	                          call 0x4008128	      9954	screen.c	FUNCTION_85	ELSE_15	FOR_2	CALL_24
0x4008128	            0xebcd	                           jmp 0x40080f7	      9954	screen.c	FUNCTION_85	ELSE_15	FOR_2	CALL_24
0x400812a	    0x660f1f440000	                    nop word [rax + rax]	      9954	screen.c	FUNCTION_85	ELSE_15	FOR_2	CALL_24
0x4008130	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9834	screen.c	FUNCTION_85
0x4008134	    0x488b3d000000	            mov rdi, qword [0x0400813b] 	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x400813b	             0x1d8	                            add eax, ebx	      9834	screen.c	FUNCTION_85
0x400813d	          0x4439e8	                           cmp eax, r13d	      9834	screen.c	FUNCTION_85
0x4008140	        0x410f9dc0	                               setge r8b	      9834	screen.c	FUNCTION_85
0x4008144	      0xe800000000	                          call 0x4008149	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x4008149	            0x85c0	                           test eax, eax	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x400814b	            0x7436	                            je 0x4008183	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x400814d	          0x4584c0	                           test r8b, r8b	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x4008150	            0x7431	                            je 0x4008183	      9837	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x4008152	        0x4883ec08	                              sub rsp, 8	      9860	screen.c	FUNCTION_85	CALL_4
0x4008156	          0x4531c9	                            xor r9d, r9d	      9860	screen.c	FUNCTION_85	CALL_4
0x4008159	          0x4531c0	                            xor r8d, r8d	      9860	screen.c	FUNCTION_85	CALL_4
0x400815c	            0x4154	                                push r12	      9860	screen.c	FUNCTION_85	CALL_4
0x400815e	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      9860	screen.c	FUNCTION_85	CALL_4
0x4008162	          0x4489e9	                           mov ecx, r13d	      9860	screen.c	FUNCTION_85	CALL_4
0x4008165	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      9860	screen.c	FUNCTION_85	CALL_4
0x4008169	            0x89da	                            mov edx, ebx	      9860	screen.c	FUNCTION_85	CALL_4
0x400816b	      0xe800000000	                          call 0x4008170	      9860	screen.c	FUNCTION_85	CALL_4
0x4008170	            0x4158	                                  pop r8	      9860	screen.c	FUNCTION_85	CALL_4
0x4008172	            0x4159	                                  pop r9	      9860	screen.c	FUNCTION_85	CALL_4
0x4008174	        0x4883c438	                           add rsp, 0x38	      9979	screen.c	FUNCTION_85
0x4008178	              0x5b	                                 pop rbx	      9979	screen.c	FUNCTION_85
0x4008179	              0x5d	                                 pop rbp	      9979	screen.c	FUNCTION_85
0x400817a	            0x415c	                                 pop r12	      9979	screen.c	FUNCTION_85
0x400817c	            0x415d	                                 pop r13	      9979	screen.c	FUNCTION_85
0x400817e	            0x415e	                                 pop r14	      9979	screen.c	FUNCTION_85
0x4008180	            0x415f	                                 pop r15	      9979	screen.c	FUNCTION_85
0x4008182	              0xc3	                                     ret	      9979	screen.c	FUNCTION_85
0x4008183	    0x488b05000000	            mov rax, qword [0x0400818a] 	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x400818a	          0x803800	                       cmp byte [rax], 0	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x400818d	     0xf84a2010000	                            je 0x4008335	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x4008193	          0x83fb01	                              cmp ebx, 1	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x4008196	    0xc74424280100	               mov dword [rsp + 0x28], 1	      9840	screen.c	FUNCTION_85	ELSE_2	IF_4
0x400819e	     0xf857afdffff	                           jne 0x4007f1e	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081a4	    0x488b05000000	            mov rax, qword [0x040081ab] 	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081ab	          0x803800	                       cmp byte [rax], 0	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081ae	     0xf85ac020000	                           jne 0x4008460	      9839	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081b4	        0x895c2428	             mov dword [rsp + 0x28], ebx	      9840	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081b8	      0xe961fdffff	                           jmp 0x4007f1e	      9840	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081bd	           0xf1f00	                         nop dword [rax]	      9840	screen.c	FUNCTION_85	ELSE_2	IF_4
0x40081c0	      0x48637c2408	            movsxd rdi, dword [rsp + 8] 	      9915	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x40081c5	      0x48634c2404	            movsxd rcx, dword [rsp + 4] 	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081ca	    0x488b05000000	            mov rax, qword [0x040081d1] 	      9915	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x40081d1	        0x488d14b8	                  lea rdx, [rax + rdi*4]	      9915	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x40081d5	            0x39cd	                            cmp ebp, ecx	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081d7	            0x89ce	                            mov esi, ecx	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081d9	          0x448b02	                    mov r8d, dword [rdx]	      9915	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x40081dc	     0xf8fee010000	                            jg 0x40083d0	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081e2	          0x4829cf	                            sub rdi, rcx	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081e5	    0x488d148d0000	                        lea rdx, [rcx*4]	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081ed	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081f2	    0x4c8d0cbd0000	                         lea r9, [rdi*4]	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081fa	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40081ff	            0xeb14	                           jmp 0x4008215	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008201	     0xf1f80000000	                         nop dword [rax]	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008208	    0x488b05000000	            mov rax, qword [0x0400820f] 	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400820f	          0x4c89fa	                            mov rdx, r15	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008212	          0x4c89e9	                            mov rcx, r13	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008215	        0x448b2c10	             mov r13d, dword [rax + rdx]	      9918	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008219	          0x4801d0	                            add rax, rdx	      9918	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400821c	            0x29de	                            sub esi, ebx	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400821e	        0x4d8d3c12	                    lea r15, [r10 + rdx]	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008222	        0x46892c08	              mov dword [rax + r9], r13d	      9918	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008226	    0x488b05000000	            mov rax, qword [0x0400822d] 	      9919	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400822d	      0x440fb62c08	            movzx r13d, byte [rax + rcx]	      9919	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008232	          0x4801c8	                            add rax, rcx	      9919	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008235	            0x39f5	                            cmp ebp, esi	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008237	        0x44882c38	              mov byte [rax + rdi], r13b	      9919	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400823b	        0x4d8d2c0b	                    lea r13, [r11 + rcx]	      9919	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x400823f	            0x7ec7	                           jle 0x4008208	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008241	    0x480315000000	             add rdx, qword [0x04008248]	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x4008248	    0x488b05000000	            mov rax, qword [0x0400824f] 	      9922	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x400824f	          0x448902	                    mov dword [rdx], r8d	      9921	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x4008252	      0xbf00000000	                              mov edi, 0	      9923	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x4008257	        0xc6040800	                 mov byte [rax + rcx], 0	      9922	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12
0x400825b	      0xe800000000	                          call 0x4008260	      9923	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x4008260	            0x85c0	                           test eax, eax	      9923	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x4008262	            0x7454	                            je 0x40082b8	      9923	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x4008264	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x4008268	    0x8b3500000000	            mov esi, dword [0x0400826e] 	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x400826e	          0x4489c7	                            mov edi, r8d	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x4008271	      0xe8ea81ffff	                      call sym.lineclear	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x4008276	      0xe901feffff	                           jmp 0x400807c	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x400827b	       0xf1f440000	                   nop dword [rax + rax]	      9924	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	CALL_14
0x4008280	    0x488b0d000000	            mov rcx, qword [0x04008287] 	        90	string3.h	FUNCTION_107	CALL_6
0x4008287	    0x418b8424a800	            mov eax, dword [r12 + 0xa8] 	        90	string3.h	FUNCTION_107	CALL_6
0x400828f	          0x4963d1	                         movsxd rdx, r9d	        90	string3.h	FUNCTION_107	CALL_6
0x4008292	          0x4801d2	                            add rdx, rdx	        90	string3.h	FUNCTION_107	CALL_6
0x4008295	      0xbeffffffff	                     mov esi, 0xffffffff	        90	string3.h	FUNCTION_107	CALL_6
0x400829a	        0x420304a9	            add eax, dword [rcx + r13*4]	        90	string3.h	FUNCTION_107	CALL_6
0x400829e	    0x488b0d000000	            mov rcx, qword [0x040082a5] 	        90	string3.h	FUNCTION_107	CALL_6
0x40082a5	        0x488d3c41	                  lea rdi, [rcx + rax*2]	        90	string3.h	FUNCTION_107	CALL_6
0x40082a9	      0xe800000000	                          call 0x40082ae	        90	string3.h	FUNCTION_107	CALL_6
0x40082ae	      0xe9bdfdffff	                           jmp 0x4008070	        90	string3.h	FUNCTION_107	CALL_6
0x40082b3	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_107	CALL_6
0x40082b8	    0x486315000000	         movsxd rdx, dword [0x040082bf] 	        90	string3.h	FUNCTION_107	CALL_6
0x40082bf	    0x488b05000000	            mov rax, qword [0x040082c6] 	        90	string3.h	FUNCTION_107	CALL_6
0x40082c6	      0xbeffffffff	                     mov esi, 0xffffffff	        90	string3.h	FUNCTION_107	CALL_6
0x40082cb	        0x4a8d3c40	                   lea rdi, [rax + r8*2]	        90	string3.h	FUNCTION_107	CALL_6
0x40082cf	          0x4801d2	                            add rdx, rdx	        90	string3.h	FUNCTION_107	CALL_6
0x40082d2	      0xe800000000	                          call 0x40082d7	        90	string3.h	FUNCTION_107	CALL_6
0x40082d7	      0xe9a0fdffff	                           jmp 0x400807c	        90	string3.h	FUNCTION_107	CALL_6
0x40082dc	         0xf1f4000	                         nop dword [rax]	        90	string3.h	FUNCTION_107	CALL_6
0x40082e0	        0x4883c438	                           add rsp, 0x38	      9979	screen.c	FUNCTION_85
0x40082e4	            0x31c0	                            xor eax, eax	      9807	screen.c	FUNCTION_85	IF_1
0x40082e6	              0x5b	                                 pop rbx	      9979	screen.c	FUNCTION_85
0x40082e7	              0x5d	                                 pop rbp	      9979	screen.c	FUNCTION_85
0x40082e8	            0x415c	                                 pop r12	      9979	screen.c	FUNCTION_85
0x40082ea	            0x415d	                                 pop r13	      9979	screen.c	FUNCTION_85
0x40082ec	            0x415e	                                 pop r14	      9979	screen.c	FUNCTION_85
0x40082ee	            0x415f	                                 pop r15	      9979	screen.c	FUNCTION_85
0x40082f0	              0xc3	                                     ret	      9979	screen.c	FUNCTION_85
0x40082f1	     0xf1f80000000	                         nop dword [rax]	      9979	screen.c	FUNCTION_85
0x40082f8	      0x837c242806	               cmp dword [rsp + 0x28], 6	      9963	screen.c	FUNCTION_85	IF_22
0x40082fd	     0xf8409010000	                            je 0x400840c	      9963	screen.c	FUNCTION_85	IF_22
0x4008303	      0xe800000000	                          call 0x4008308	      9974	screen.c	FUNCTION_85	CALL_29
0x4008308	    0x8b1500000000	            mov edx, dword [0x0400830e] 	      9975	screen.c	FUNCTION_85	IF_23
0x400830e	      0xb801000000	                              mov eax, 1	      9978	screen.c	FUNCTION_85
0x4008313	            0x85d2	                           test edx, edx	      9975	screen.c	FUNCTION_85	IF_23
0x4008315	     0xf84bafbffff	                            je 0x4007ed5	      9975	screen.c	FUNCTION_85	IF_23
0x400831b	          0x890424	                    mov dword [rsp], eax	      9975	screen.c	FUNCTION_85	IF_23
0x400831e	      0xe800000000	                          call 0x4008323	      9976	screen.c	FUNCTION_85	CALL_30
0x4008323	          0x8b0424	                    mov eax, dword [rsp]	      9976	screen.c	FUNCTION_85	CALL_30
0x4008326	      0xe9aafbffff	                           jmp 0x4007ed5	      9976	screen.c	FUNCTION_85	CALL_30
0x400832b	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      9901	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4008330	      0xe907fdffff	                           jmp 0x400803c	      9901	screen.c	FUNCTION_85	ELSE_10	FOR_1	IF_14
0x4008335	    0x488b05000000	            mov rax, qword [0x0400833c] 	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400833c	          0x803800	                       cmp byte [rax], 0	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400833f	            0x7416	                            je 0x4008357	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008341	          0x4584c0	                           test r8b, r8b	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008344	            0x7411	                            je 0x4008357	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008346	          0x83fb01	                              cmp ebx, 1	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008349	     0xf8f03feffff	                            jg 0x4008152	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400834f	            0x85ed	                           test ebp, ebp	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008351	     0xf84fbfdffff	                            je 0x4008152	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008357	    0x488b05000000	            mov rax, qword [0x0400835e] 	      9843	screen.c	FUNCTION_85	ELSE_4	IF_6
0x400835e	          0x803800	                       cmp byte [rax], 0	      9843	screen.c	FUNCTION_85	ELSE_4	IF_6
0x4008361	     0xf850e010000	                           jne 0x4008475	      9843	screen.c	FUNCTION_85	ELSE_4	IF_6
0x4008367	            0x85ed	                           test ebp, ebp	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x4008369	           0xf95c0	                                setne al	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x400836c	          0x4584c0	                           test r8b, r8b	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x400836f	            0x7408	                            je 0x4008379	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x4008371	            0x84c0	                             test al, al	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x4008373	     0xf85d9fdffff	                           jne 0x4008152	      9845	screen.c	FUNCTION_85	ELSE_5	IF_7
0x4008379	    0x488b15000000	            mov rdx, qword [0x04008380] 	      9847	screen.c	FUNCTION_85	ELSE_6	IF_8
0x4008380	          0x803a00	                       cmp byte [rdx], 0	      9847	screen.c	FUNCTION_85	ELSE_6	IF_8
0x4008383	            0x7409	                            je 0x400838e	      9847	screen.c	FUNCTION_85	ELSE_6	IF_8
0x4008385	          0x4584c0	                           test r8b, r8b	      9847	screen.c	FUNCTION_85	ELSE_6	IF_8
0x4008388	     0xf85c4fdffff	                           jne 0x4008152	      9847	screen.c	FUNCTION_85	ELSE_6	IF_8
0x400838e	    0x488b15000000	            mov rdx, qword [0x04008395] 	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x4008395	          0x803a00	                       cmp byte [rdx], 0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x4008398	     0xf8442ffffff	                            je 0x40082e0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x400839e	      0x448b54240c	            mov r10d, dword [rsp + 0xc] 	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083a3	          0x4585d2	                         test r10d, r10d	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083a6	     0xf8534ffffff	                           jne 0x40082e0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083ac	    0x488b15000000	            mov rdx, qword [0x040083b3] 	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083b3	          0x803a00	                       cmp byte [rdx], 0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083b6	            0x7408	                            je 0x40083c0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083b8	            0x84c0	                             test al, al	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083ba	     0xf8420ffffff	                            je 0x40082e0	      9849	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083c0	    0xc74424280600	               mov dword [rsp + 0x28], 6	      9850	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083c8	      0xe951fbffff	                           jmp 0x4007f1e	      9850	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083cd	           0xf1f00	                         nop dword [rax]	      9850	screen.c	FUNCTION_85	ELSE_7	IF_9
0x40083d0	          0x4889f9	                            mov rcx, rdi	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40083d3	      0xe970feffff	                           jmp 0x4008248	      9916	screen.c	FUNCTION_85	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x40083d8	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      9933	screen.c	FUNCTION_85	CALL_18
0x40083dc	      0xe86f8dffff	         call sym.screen_start_highlight	      9933	screen.c	FUNCTION_85	CALL_18
0x40083e1	      0xe9cbfcffff	                           jmp 0x40080b1	      9933	screen.c	FUNCTION_85	CALL_18
0x40083e6	        0x4883ec08	                              sub rsp, 8	      9868	screen.c	FUNCTION_85	CALL_5
0x40083ea	          0x4489ee	                           mov esi, r13d	      9868	screen.c	FUNCTION_85	CALL_5
0x40083ed	          0x4531c9	                            xor r9d, r9d	      9868	screen.c	FUNCTION_85	CALL_5
0x40083f0	            0x4154	                                push r12	      9868	screen.c	FUNCTION_85	CALL_5
0x40083f2	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      9868	screen.c	FUNCTION_85	CALL_5
0x40083f6	            0x29de	                            sub esi, ebx	      9868	screen.c	FUNCTION_85	CALL_5
0x40083f8	          0x4531c0	                            xor r8d, r8d	      9868	screen.c	FUNCTION_85	CALL_5
0x40083fb	          0x4489e9	                           mov ecx, r13d	      9868	screen.c	FUNCTION_85	CALL_5
0x40083fe	            0x89da	                            mov edx, ebx	      9868	screen.c	FUNCTION_85	CALL_5
0x4008400	      0xe800000000	                          call 0x4008405	      9868	screen.c	FUNCTION_85	CALL_5
0x4008405	              0x5e	                                 pop rsi	      9868	screen.c	FUNCTION_85	CALL_5
0x4008406	              0x5f	                                 pop rdi	      9868	screen.c	FUNCTION_85	CALL_5
0x4008407	      0xe922fbffff	                           jmp 0x4007f2e	      9868	screen.c	FUNCTION_85	CALL_5
0x400840c	    0x488b05000000	            mov rax, qword [0x04008413] 	      9963	screen.c	FUNCTION_85	IF_22
0x4008413	          0x803800	                       cmp byte [rax], 0	      9963	screen.c	FUNCTION_85	IF_22
0x4008416	     0xf84e7feffff	                            je 0x4008303	      9963	screen.c	FUNCTION_85	IF_22
0x400841c	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	      9963	screen.c	FUNCTION_85	IF_22
0x4008421	            0x31ed	                            xor ebp, ebp	      9963	screen.c	FUNCTION_85	IF_22
0x4008423	       0xf1f440000	                   nop dword [rax + rax]	      9963	screen.c	FUNCTION_85	IF_22
0x4008428	      0x428d7c2500	                    lea edi, [rbp + r12]	      9967	screen.c	FUNCTION_85	IF_22	FOR_3	CALL_26
0x400842d	            0x31f6	                            xor esi, esi	      9967	screen.c	FUNCTION_85	IF_22	FOR_3	CALL_26
0x400842f	          0x83c501	                              add ebp, 1	      9965	screen.c	FUNCTION_85	IF_22	FOR_3
0x4008432	      0xe800000000	                          call 0x4008437	      9967	screen.c	FUNCTION_85	IF_22	FOR_3	CALL_26
0x4008437	    0x488b3d000000	            mov rdi, qword [0x0400843e] 	      9968	screen.c	FUNCTION_85	IF_22	FOR_3	CALL_27
0x400843e	      0xe800000000	                          call 0x4008443	      9968	screen.c	FUNCTION_85	IF_22	FOR_3	CALL_27
0x4008443	            0x39eb	                            cmp ebx, ebp	      9965	screen.c	FUNCTION_85	IF_22	FOR_3
0x4008445	    0xc70500000000	         mov dword [0x0400844f], 0x270f 	      9222	screen.c	FUNCTION_77
0x400844f	    0xc70500000000	         mov dword [0x04008459], 0x270f 	      9222	screen.c	FUNCTION_77
0x4008459	            0x7fcd	                            jg 0x4008428	      9965	screen.c	FUNCTION_85	IF_22	FOR_3
0x400845b	      0xe9a3feffff	                           jmp 0x4008303	      9965	screen.c	FUNCTION_85	IF_22	FOR_3
0x4008460	    0x488b05000000	            mov rax, qword [0x04008467] 	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008467	          0x803800	                       cmp byte [rax], 0	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400846a	            0x7409	                            je 0x4008475	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400846c	          0x4584c0	                           test r8b, r8b	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x400846f	     0xf85d1feffff	                           jne 0x4008346	      9841	screen.c	FUNCTION_85	ELSE_3	IF_5
0x4008475	    0xc74424280300	               mov dword [rsp + 0x28], 3	      9844	screen.c	FUNCTION_85	ELSE_4	IF_6
0x400847d	      0xe99cfaffff	                           jmp 0x4007f1e	      9844	screen.c	FUNCTION_85	ELSE_4	IF_6
0x4008482	            0x89df	                            mov edi, ebx	      9876	screen.c	FUNCTION_85	CALL_7
0x4008484	            0xf7df	                                 neg edi	      9876	screen.c	FUNCTION_85	CALL_7
0x4008486	      0xe800000000	                          call 0x400848b	      9876	screen.c	FUNCTION_85	CALL_7
0x400848b	      0xe9d2faffff	                           jmp 0x4007f62	      9876	screen.c	FUNCTION_85	CALL_7
0x4008490	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      9937	screen.c	FUNCTION_85	CALL_19
0x4008494	          0x4c89e2	                            mov rdx, r12	      9937	screen.c	FUNCTION_85	CALL_19
0x4008497	            0x89ef	                            mov edi, ebp	      9937	screen.c	FUNCTION_85	CALL_19
0x4008499	      0xe892c8ffff	                   call sym.redraw_block	      9937	screen.c	FUNCTION_85	CALL_19
0x400849e	      0xe960feffff	                           jmp 0x4008303	      9937	screen.c	FUNCTION_85	CALL_19
0x40084a3	            0x89df	                            mov edi, ebx	      9940	screen.c	FUNCTION_85	ELSE_14	IF_19	CALL_20
0x40084a5	      0xe800000000	                          call 0x40084aa	      9940	screen.c	FUNCTION_85	ELSE_14	IF_19	CALL_20
0x40084aa	    0xc70500000000	         mov dword [0x040084b4], 0x270f 	      9222	screen.c	FUNCTION_77
0x40084b4	    0xc70500000000	         mov dword [0x040084be], 0x270f 	      9222	screen.c	FUNCTION_77
0x40084be	      0xe940feffff	                           jmp 0x4008303	      9222	screen.c	FUNCTION_77
rl_mirror	functions,0:IF,0:DO,0:ELSE,0:CALL,1:FOR,1:WHILE,0:SWITCH,0	17
0x4001b30	              0x53	                                push rbx	      6475	screen.c	ELSE_10	FUNCTION_33
0x4001b31	          0x4889fb	                            mov rbx, rdi	      6475	screen.c	ELSE_10	FUNCTION_33
0x4001b34	      0xe800000000	                          call 0x4001b39	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b39	      0x488d4403ff	                lea rax, [rbx + rax - 1]	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b3e	          0x4839c3	                            cmp rbx, rax	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b41	            0x731e	                           jae 0x4001b61	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b43	       0xf1f440000	                   nop dword [rax + rax]	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b48	           0xfb613	                   movzx edx, byte [rbx]	      6481	screen.c	ELSE_10	FUNCTION_33	FOR_1
0x4001b4b	           0xfb608	                   movzx ecx, byte [rax]	      6482	screen.c	ELSE_10	FUNCTION_33	FOR_1
0x4001b4e	        0x4883c301	                              add rbx, 1	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b52	        0x4883e801	                              sub rax, 1	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b56	          0x884bff	                  mov byte [rbx - 1], cl	      6482	screen.c	ELSE_10	FUNCTION_33	FOR_1
0x4001b59	          0x885001	                  mov byte [rax + 1], dl	      6483	screen.c	ELSE_10	FUNCTION_33	FOR_1
0x4001b5c	          0x4839c3	                            cmp rbx, rax	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b5f	            0x72e7	                            jb 0x4001b48	      6479	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0x4001b61	              0x5b	                                 pop rbx	      6485	screen.c	ELSE_10	FUNCTION_33
0x4001b62	              0xc3	                                     ret	      6485	screen.c	ELSE_10	FUNCTION_33
reset_cterm_colors	functions,0:IF,4:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	36
0x4002310	        0x4883ec08	                              sub rsp, 8	      8291	screen.c	FUNCTION_60
0x4002314	    0x833d00000000	               cmp dword [0x0400231b], 1	      8292	screen.c	FUNCTION_60	IF_1
0x400231b	            0x7e53	                           jle 0x4002370	      8292	screen.c	FUNCTION_60	IF_1
0x400231d	    0x8b3500000000	            mov esi, dword [0x04002323] 	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x4002323	            0x85f6	                           test esi, esi	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x4002325	            0x7553	                           jne 0x400237a	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x4002327	    0x8b0d00000000	            mov ecx, dword [0x0400232d] 	      8298	screen.c	FUNCTION_60	IF_1	IF_2
0x400232d	            0x85c9	                           test ecx, ecx	      8298	screen.c	FUNCTION_60	IF_1	IF_2
0x400232f	            0x7e6f	                           jle 0x40023a0	      8298	screen.c	FUNCTION_60	IF_1	IF_2
0x4002331	    0x488b3d000000	            mov rdi, qword [0x04002338] 	      8303	screen.c	FUNCTION_60	IF_1	IF_2	IF_3	CALL_1
0x4002338	      0xe800000000	                          call 0x400233d	      8303	screen.c	FUNCTION_60	IF_1	IF_2	IF_3	CALL_1
0x400233d	    0xc70500000000	     mov dword [0x04002347], 0xffffffff 	      8304	screen.c	FUNCTION_60	IF_1	IF_2	IF_3
0x4002347	    0x8b0500000000	            mov eax, dword [0x0400234d] 	      8306	screen.c	FUNCTION_60	IF_1	IF_4
0x400234d	            0x85c0	                           test eax, eax	      8306	screen.c	FUNCTION_60	IF_1	IF_4
0x400234f	            0x7416	                            je 0x4002367	      8306	screen.c	FUNCTION_60	IF_1	IF_4
0x4002351	    0x488b3d000000	            mov rdi, qword [0x04002358] 	      8308	screen.c	FUNCTION_60	IF_1	IF_4	CALL_2
0x4002358	      0xe800000000	                          call 0x400235d	      8308	screen.c	FUNCTION_60	IF_1	IF_4	CALL_2
0x400235d	    0xc70500000000	     mov dword [0x04002367], 0xffffffff 	      8309	screen.c	FUNCTION_60	IF_1	IF_4
0x4002367	        0x4883c408	                              add rsp, 8	      8312	screen.c	FUNCTION_60
0x400236b	              0xc3	                                     ret	      8312	screen.c	FUNCTION_60
0x400236c	         0xf1f4000	                         nop dword [rax]	      8312	screen.c	FUNCTION_60
0x4002370	    0x8b3d00000000	            mov edi, dword [0x04002376] 	      8292	screen.c	FUNCTION_60	IF_1
0x4002376	            0x85ff	                           test edi, edi	      8292	screen.c	FUNCTION_60	IF_1
0x4002378	            0x74ed	                            je 0x4002367	      8292	screen.c	FUNCTION_60	IF_1
0x400237a	    0x48813d000000	cmp qword [0x04002385], 0xffffffffffffd499	      8297	screen.c	FUNCTION_60	IF_1	IF_2
0x4002385	            0x75aa	                           jne 0x4002331	      8297	screen.c	FUNCTION_60	IF_1	IF_2
0x4002387	    0x48813d000000	cmp qword [0x04002392], 0xffffffffffffd499	      8297	screen.c	FUNCTION_60	IF_1	IF_2
0x4002392	           0xf95c0	                                setne al	      8297	screen.c	FUNCTION_60	IF_1	IF_2
0x4002395	            0x84c0	                             test al, al	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x4002397	            0x74ae	                            je 0x4002347	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x4002399	            0xeb96	                           jmp 0x4002331	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x400239b	       0xf1f440000	                   nop dword [rax + rax]	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x40023a0	    0x8b1500000000	            mov edx, dword [0x040023a6] 	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x40023a6	            0x85d2	                           test edx, edx	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x40023a8	           0xf9fc0	                                 setg al	      8296	screen.c	FUNCTION_60	IF_1	IF_2
0x40023ab	            0xebe8	                           jmp 0x4002395	      8296	screen.c	FUNCTION_60	IF_1	IF_2
win_draw_end	functions,0:IF,11:DO,0:ELSE,1:CALL,44:FOR,0:WHILE,0:SWITCH,0	218
0x40054f0	            0x4157	                                push r15	      2369	screen.c	FUNCTION_21
0x40054f2	            0x4156	                                push r14	      2369	screen.c	FUNCTION_21
0x40054f4	          0x4189d6	                           mov r14d, edx	      2369	screen.c	FUNCTION_21
0x40054f7	            0x4155	                                push r13	      2369	screen.c	FUNCTION_21
0x40054f9	            0x4154	                                push r12	      2369	screen.c	FUNCTION_21
0x40054fb	          0x4189cc	                           mov r12d, ecx	      2369	screen.c	FUNCTION_21
0x40054fe	              0x55	                                push rbp	      2369	screen.c	FUNCTION_21
0x40054ff	              0x53	                                push rbx	      2369	screen.c	FUNCTION_21
0x4005500	          0x4489c5	                            mov ebp, r8d	      2369	screen.c	FUNCTION_21
0x4005503	          0x4889fb	                            mov rbx, rdi	      2369	screen.c	FUNCTION_21
0x4005506	          0x4d63e9	                         movsxd r13, r9d	      2369	screen.c	FUNCTION_21
0x4005509	        0x4883ec18	                           sub rsp, 0x18	      2369	screen.c	FUNCTION_21
0x400550d	    0x488b0d000000	            mov rcx, qword [0x04005514] 	      2629	screen.c	FUNCTION_24
0x4005514	    0x4c8b97c80100	           mov r10, qword [rdi + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x400551b	        0x89742408	                mov dword [rsp + 8], esi	      2369	screen.c	FUNCTION_21
0x400551f	    0x488b05000000	            mov rax, qword [0x04005526] 	      2369	screen.c	FUNCTION_21
0x4005526	          0x4839cf	                            cmp rdi, rcx	      2629	screen.c	FUNCTION_24
0x4005529	     0xf84a1020000	                            je 0x40057d0	      2629	screen.c	FUNCTION_24
0x400552f	            0x89c2	                            mov edx, eax	      2629	screen.c	FUNCTION_24
0x4005531	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2630	screen.c	FUNCTION_24
0x4005537	            0x89c6	                            mov esi, eax	      2632	screen.c	FUNCTION_24	IF_1
0x4005539	            0x29d6	                            sub esi, edx	      2632	screen.c	FUNCTION_24	IF_1
0x400553b	          0x4139f2	                           cmp r10d, esi	      2632	screen.c	FUNCTION_24	IF_1
0x400553e	            0x89f2	                            mov edx, esi	      2632	screen.c	FUNCTION_24	IF_1
0x4005540	    0x8bb354020000	           mov esi, dword [rbx + 0x254] 	      2381	screen.c	FUNCTION_21	IF_1
0x4005546	        0x410f4ed2	                        cmovle edx, r10d	      2381	screen.c	FUNCTION_21	IF_1
0x400554a	          0x4189d7	                           mov r15d, edx	      2381	screen.c	FUNCTION_21	IF_1
0x400554d	            0x85f6	                           test esi, esi	      2381	screen.c	FUNCTION_21	IF_1
0x400554f	     0xf844b010000	                            je 0x40056a0	      2381	screen.c	FUNCTION_21	IF_1
0x4005555	            0x85d2	                           test edx, edx	      2387	screen.c	FUNCTION_21	IF_1	IF_2
0x4005557	            0x7e43	                           jle 0x400559c	      2387	screen.c	FUNCTION_21	IF_1	IF_2
0x4005559	            0x39c2	                            cmp edx, eax	      2387	screen.c	FUNCTION_21	IF_1	IF_2
0x400555b	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005561	    0x41b920000000	                           mov r9d, 0x20	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005567	        0x440f4ff8	                         cmovg r15d, eax	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400556b	     0x383a8000000	             add eax, dword [rbx + 0xa8]	      2393	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x4005571	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005577	        0x4883ec08	                              sub rsp, 8	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400557b	    0x41b820000000	                           mov r8d, 0x20	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005581	            0x89c1	                            mov ecx, eax	      2393	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x4005583	            0x89c2	                            mov edx, eax	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005585	    0x8b0500000000	            mov eax, dword [0x0400558b] 	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400558b	          0x8d342f	                    lea esi, [rdi + rbp]	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400558e	          0x4429fa	                           sub edx, r15d	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005591	          0x4401e7	                           add edi, r12d	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005594	              0x50	                                push rax	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4005595	      0xe800000000	                          call 0x400559a	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400559a	              0x58	                                 pop rax	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400559b	              0x5a	                                 pop rdx	      2392	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x400559c	          0x4889df	                            mov rdi, rbx	      2398	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x400559f	      0xe800000000	                          call 0x40055a4	      2398	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x40055a4	            0x85c0	                           test eax, eax	      2398	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x40055a6	            0x745b	                            je 0x4005603	      2398	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x40055a8	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2403	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x40055ae	        0x418d4702	                      lea eax, [r15 + 2]	      2400	screen.c	FUNCTION_21	IF_1	IF_4
0x40055b2	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055b8	    0x448b05000000	            mov r8d, dword [0x040055bf] 	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055bf	    0x41b920000000	                           mov r9d, 0x20	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055c5	            0x39d0	                            cmp eax, edx	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055c7	           0xf4fc2	                          cmovg eax, edx	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055ca	     0x393a8000000	             add edx, dword [rbx + 0xa8]	      2406	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x40055d0	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055d6	        0x8944240c	              mov dword [rsp + 0xc], eax	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055da	        0x4883ec08	                              sub rsp, 8	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055de	            0x4150	                                 push r8	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055e0	    0x41b820000000	                           mov r8d, 0x20	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055e6	            0x89d1	                            mov ecx, edx	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055e8	        0x8d743d00	                    lea esi, [rbp + rdi]	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055ec	            0x29c2	                            sub edx, eax	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055ee	          0x4429f9	                           sub ecx, r15d	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055f1	          0x4401e7	                           add edi, r12d	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055f4	      0xe800000000	                          call 0x40055f9	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055f9	            0x415f	                                 pop r15	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055fb	              0x58	                                 pop rax	      2405	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x40055fc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2408	screen.c	FUNCTION_21	IF_1	IF_4
0x4005600	          0x4189c7	                           mov r15d, eax	      2408	screen.c	FUNCTION_21	IF_1	IF_4
0x4005603	    0x8b93a8000000	            mov edx, dword [rbx + 0xa8] 	      2412	screen.c	FUNCTION_21	IF_1	CALL_18
0x4005609	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400560f	        0x4883ec08	                              sub rsp, 8	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005613	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005619	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400561f	          0x4589f1	                           mov r9d, r14d	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005622	    0x428b04ad0000	                  mov eax, dword [r13*4]	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400562a	          0x4589f0	                           mov r8d, r14d	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400562d	             0x1d1	                            add ecx, edx	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400562f	              0x50	                                push rax	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005630	        0x8d743d00	                    lea esi, [rbp + rdi]	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005634	          0x83e901	                              sub ecx, 1	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005637	          0x4429f9	                           sub ecx, r15d	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400563a	          0x4401e7	                           add edi, r12d	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x400563d	      0xe800000000	                          call 0x4005642	      2411	screen.c	FUNCTION_21	IF_1	CALL_17
0x4005642	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      2415	screen.c	FUNCTION_21	IF_1	CALL_24
0x4005648	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400564e	          0x4589f1	                           mov r9d, r14d	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005651	     0x393a8000000	             add edx, dword [rbx + 0xa8]	      2415	screen.c	FUNCTION_21	IF_1	CALL_24
0x4005657	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400565d	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005662	    0x428b04ad0000	                  mov eax, dword [r13*4]	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400566a	        0x8d743d00	                    lea esi, [rbp + rdi]	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400566e	            0x89d1	                            mov ecx, edx	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005670	          0x83ea01	                              sub edx, 1	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005673	          0x4429f9	                           sub ecx, r15d	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005676	          0x4429fa	                           sub edx, r15d	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005679	          0x4401e7	                           add edi, r12d	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400567c	          0x890424	                    mov dword [rsp], eax	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x400567f	      0xe800000000	                          call 0x4005684	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005684	            0x415b	                                 pop r11	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005686	              0x5d	                                 pop rbp	      2414	screen.c	FUNCTION_21	IF_1	CALL_22
0x4005687	        0x4883c418	                           add rsp, 0x18	      2466	screen.c	FUNCTION_21
0x400568b	          0x4489e6	                           mov esi, r12d	      2465	screen.c	FUNCTION_21	CALL_44
0x400568e	          0x4889df	                            mov rdi, rbx	      2465	screen.c	FUNCTION_21	CALL_44
0x4005691	              0x5b	                                 pop rbx	      2466	screen.c	FUNCTION_21
0x4005692	              0x5d	                                 pop rbp	      2466	screen.c	FUNCTION_21
0x4005693	            0x415c	                                 pop r12	      2466	screen.c	FUNCTION_21
0x4005695	            0x415d	                                 pop r13	      2466	screen.c	FUNCTION_21
0x4005697	            0x415e	                                 pop r14	      2466	screen.c	FUNCTION_21
0x4005699	            0x415f	                                 pop r15	      2466	screen.c	FUNCTION_21
0x400569b	      0xe900000000	                           jmp 0x40056a0	      2465	screen.c	FUNCTION_21	CALL_44
0x40056a0	          0x4839cb	                            cmp rbx, rcx	      2422	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40056a3	    0x448b05000000	            mov r8d, dword [0x040056aa] 	      2422	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40056aa	            0x7509	                           jne 0x40056b5	      2422	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40056ac	          0x4585c0	                           test r8d, r8d	      2422	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40056af	     0xf8533010000	                           jne 0x40057e8	      2422	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40056b5	            0x31c0	                            xor eax, eax	      2371	screen.c	FUNCTION_21
0x40056b7	          0x4585ff	                         test r15d, r15d	      2434	screen.c	FUNCTION_21	ELSE_1	IF_8
0x40056ba	          0x4189c3	                           mov r11d, eax	      2434	screen.c	FUNCTION_21	ELSE_1	IF_8
0x40056bd	            0x7e5a	                           jle 0x4005719	      2434	screen.c	FUNCTION_21	ELSE_1	IF_8
0x40056bf	    0x448b9bac0000	           mov r11d, dword [rbx + 0xac] 	      2439	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x40056c6	        0x468d1438	                   lea r10d, [rax + r15]	      2436	screen.c	FUNCTION_21	ELSE_1	IF_8
0x40056ca	    0x8b93a8000000	            mov edx, dword [rbx + 0xa8] 	      2442	screen.c	FUNCTION_21	ELSE_1	IF_8
0x40056d0	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056d6	    0x41b820000000	                           mov r8d, 0x20	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056dc	    0x41b920000000	                           mov r9d, 0x20	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056e2	          0x4539da	                          cmp r10d, r11d	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056e5	        0x450f4eda	                       cmovle r11d, r10d	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056e9	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056ef	        0x4883ec08	                              sub rsp, 8	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056f3	        0x428d0c1a	                    lea ecx, [rdx + r11]	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056f7	             0x1c2	                            add edx, eax	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056f9	    0x8b0500000000	            mov eax, dword [0x040056ff] 	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x40056ff	      0x44895c2414	            mov dword [rsp + 0x14], r11d	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005704	        0x8d743d00	                    lea esi, [rbp + rdi]	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005708	              0x50	                                push rax	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005709	          0x4401e7	                           add edi, r12d	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x400570c	      0xe800000000	                          call 0x4005711	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005711	              0x5f	                                 pop rdi	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005712	            0x4158	                                  pop r8	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005714	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      2441	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4005719	          0x4889df	                            mov rdi, rbx	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x400571c	      0x44895c240c	             mov dword [rsp + 0xc], r11d	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x4005721	      0xe800000000	                          call 0x4005726	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x4005726	            0x85c0	                           test eax, eax	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x4005728	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x400572d	            0x7459	                            je 0x4005788	      2448	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x400572f	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      2453	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x4005735	        0x418d5302	                      lea edx, [r11 + 2]	      2450	screen.c	FUNCTION_21	ELSE_1	IF_10
0x4005739	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400573f	    0x448b05000000	            mov r8d, dword [0x04005746] 	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005746	    0x41b920000000	                           mov r9d, 0x20	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400574c	            0x39c2	                            cmp edx, eax	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400574e	           0xf4ec2	                         cmovle eax, edx	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005751	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005757	    0x8b93a8000000	            mov edx, dword [rbx + 0xa8] 	      2456	screen.c	FUNCTION_21	ELSE_1	IF_10
0x400575d	        0x8944240c	              mov dword [rsp + 0xc], eax	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005761	        0x4883ec08	                              sub rsp, 8	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005765	            0x4150	                                 push r8	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005767	    0x41b820000000	                           mov r8d, 0x20	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400576d	          0x8d0c02	                    lea ecx, [rdx + rax]	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005770	          0x4401da	                           add edx, r11d	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005773	        0x8d743d00	                    lea esi, [rbp + rdi]	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005777	          0x4401e7	                           add edi, r12d	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400577a	      0xe800000000	                          call 0x400577f	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x400577f	              0x59	                                 pop rcx	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005780	              0x5e	                                 pop rsi	      2455	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4005781	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2458	screen.c	FUNCTION_21	ELSE_1	IF_10
0x4005785	          0x4189c3	                           mov r11d, eax	      2458	screen.c	FUNCTION_21	ELSE_1	IF_10
0x4005788	    0x428b04ad0000	                  mov eax, dword [r13*4]	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4005790	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4005796	        0x4883ec08	                              sub rsp, 8	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x400579a	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057a0	    0x8b93a8000000	            mov edx, dword [rbx + 0xa8] 	      2462	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x40057a6	          0x4589f1	                           mov r9d, r14d	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057a9	    0x8b8bac000000	            mov ecx, dword [rbx + 0xac] 	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057af	              0x50	                                push rax	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057b0	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057b5	        0x8d743d00	                    lea esi, [rbp + rdi]	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057b9	             0x1d1	                            add ecx, edx	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057bb	          0x4401e7	                           add edi, r12d	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057be	          0x4401da	                           add edx, r11d	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057c1	      0xe800000000	                          call 0x40057c6	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057c6	              0x58	                                 pop rax	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057c7	              0x5a	                                 pop rdx	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057c8	      0xe9bafeffff	                           jmp 0x4005687	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057cd	           0xf1f00	                         nop dword [rax]	      2461	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x40057d0	          0x4885c0	                           test rax, rax	      2629	screen.c	FUNCTION_24
0x40057d3	      0xba01000000	                              mov edx, 1	      2629	screen.c	FUNCTION_24
0x40057d8	     0xf8453fdffff	                            je 0x4005531	      2629	screen.c	FUNCTION_24
0x40057de	      0xe94cfdffff	                           jmp 0x400552f	      2629	screen.c	FUNCTION_24
0x40057e3	       0xf1f440000	                   nop dword [rax + rax]	      2629	screen.c	FUNCTION_24
0x40057e8	            0x85c0	                           test eax, eax	      2425	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40057ea	      0xba01000000	                              mov edx, 1	      2425	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40057ef	    0x8bbba8010000	           mov edi, dword [rbx + 0x1a8] 	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x40057f5	           0xf4fc2	                          cmovg eax, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_6
0x40057f8	     0x3bb9c000000	             add edi, dword [rbx + 0x9c]	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x40057fe	    0x448b0d000000	            mov r9d, dword [0x04005805] 	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005805	    0x8b93a8000000	            mov edx, dword [rbx + 0xa8] 	      2429	screen.c	FUNCTION_21	ELSE_1	IF_6
0x400580b	        0x8944240c	              mov dword [rsp + 0xc], eax	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400580f	        0x4883ec08	                              sub rsp, 8	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005813	            0x4151	                                 push r9	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005815	    0x41b920000000	                           mov r9d, 0x20	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400581b	          0x8d0c10	                    lea ecx, [rax + rdx]	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400581e	        0x8d743d00	                    lea esi, [rbp + rdi]	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005822	          0x4401e7	                           add edi, r12d	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005825	      0xe800000000	                          call 0x400582a	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400582a	            0x4159	                                  pop r9	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400582c	            0x415a	                                 pop r10	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x400582e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4005832	      0xe980feffff	                           jmp 0x40056b7	      2428	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
char_needs_redraw	functions,0:IF,1:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	96
0x4000040	            0x85d2	                           test edx, edx	      6028	screen.c	FUNCTION_30	IF_1
0x4000042	     0xf8e40010000	                           jle 0x4000188	      6028	screen.c	FUNCTION_30	IF_1
0x4000048	              0x55	                                push rbp	      6027	screen.c	FUNCTION_30
0x4000049	              0x53	                                push rbx	      6027	screen.c	FUNCTION_30
0x400004a	          0x4863ef	                         movsxd rbp, edi	      6029	screen.c	FUNCTION_30	IF_1
0x400004d	          0x4863de	                         movsxd rbx, esi	      6029	screen.c	FUNCTION_30	IF_1
0x4000050	      0xb801000000	                              mov eax, 1	      6048	screen.c	FUNCTION_30	IF_1
0x4000055	        0x4883ec08	                              sub rsp, 8	      6027	screen.c	FUNCTION_30
0x4000059	    0x488b0d000000	            mov rcx, qword [0x04000060] 	      6029	screen.c	FUNCTION_30	IF_1
0x4000060	      0x440fb60429	             movzx r8d, byte [rcx + rbp]	      6029	screen.c	FUNCTION_30	IF_1
0x4000065	        0x443a0419	               cmp r8b, byte [rcx + rbx]	      6029	screen.c	FUNCTION_30	IF_1
0x4000069	            0x740d	                            je 0x4000078	      6029	screen.c	FUNCTION_30	IF_1
0x400006b	        0x4883c408	                              add rsp, 8	      6050	screen.c	FUNCTION_30
0x400006f	              0x5b	                                 pop rbx	      6050	screen.c	FUNCTION_30
0x4000070	              0x5d	                                 pop rbp	      6050	screen.c	FUNCTION_30
0x4000071	              0xc3	                                     ret	      6050	screen.c	FUNCTION_30
0x4000072	    0x660f1f440000	                    nop word [rax + rax]	      6050	screen.c	FUNCTION_30
0x4000078	    0x488b35000000	            mov rsi, qword [0x0400007f] 	      6030	screen.c	FUNCTION_30	IF_1
0x400007f	      0x440fb71c5e	          movzx r11d, word [rsi + rbx*2]	      6030	screen.c	FUNCTION_30	IF_1
0x4000084	      0x6644391c6e	           cmp word [rsi + rbp*2], r11w 	      6030	screen.c	FUNCTION_30	IF_1
0x4000089	            0x75e0	                           jne 0x400006b	      6030	screen.c	FUNCTION_30	IF_1
0x400008b	    0x8b3500000000	            mov esi, dword [0x04000091] 	      6033	screen.c	FUNCTION_30	IF_1
0x4000091	            0x85f6	                           test esi, esi	      6033	screen.c	FUNCTION_30	IF_1
0x4000093	            0x743b	                            je 0x40000d0	      6033	screen.c	FUNCTION_30	IF_1
0x4000095	        0x450fb6c8	                          movzx r9d, r8b	      6034	screen.c	FUNCTION_30	IF_1	CALL_1
0x4000099	    0x4180b9000000	                        cmp byte [r9], 1	      6034	screen.c	FUNCTION_30	IF_1	CALL_1
0x40000a1	            0x7e2d	                           jle 0x40000d0	      6034	screen.c	FUNCTION_30	IF_1	CALL_1
0x40000a3	    0x81fecc260000	                         cmp esi, 0x26cc	      6035	screen.c	FUNCTION_30	IF_1
0x40000a9	            0x750a	                           jne 0x40000b5	      6035	screen.c	FUNCTION_30	IF_1
0x40000ab	        0x4180f88e	                           cmp r8b, 0x8e	      6035	screen.c	FUNCTION_30	IF_1
0x40000af	     0xf84ec000000	                            je 0x40001a1	      6035	screen.c	FUNCTION_30	IF_1
0x40000b5	          0x83fa01	                              cmp edx, 1	      6037	screen.c	FUNCTION_30	IF_1
0x40000b8	            0x7416	                            je 0x40000d0	      6037	screen.c	FUNCTION_30	IF_1
0x40000ba	       0xfb6741901	        movzx esi, byte [rcx + rbx + 1] 	      6037	screen.c	FUNCTION_30	IF_1
0x40000bf	      0xb801000000	                              mov eax, 1	      6048	screen.c	FUNCTION_30	IF_1
0x40000c4	      0x4038742901	          cmp byte [rcx + rbp + 1], sil 	      6037	screen.c	FUNCTION_30	IF_1
0x40000c9	            0x75a0	                           jne 0x400006b	      6037	screen.c	FUNCTION_30	IF_1
0x40000cb	       0xf1f440000	                   nop dword [rax + rax]	      6037	screen.c	FUNCTION_30	IF_1
0x40000d0	    0x8b0500000000	            mov eax, dword [0x040000d6] 	      6039	screen.c	FUNCTION_30	IF_1
0x40000d6	            0x85c0	                           test eax, eax	      6039	screen.c	FUNCTION_30	IF_1
0x40000d8	     0xf84b2000000	                            je 0x4000190	      6039	screen.c	FUNCTION_30	IF_1
0x40000de	    0x488b0d000000	            mov rcx, qword [0x040000e5] 	      6040	screen.c	FUNCTION_30	IF_1
0x40000e5	    0x4c8d04ad0000	                         lea r8, [rbp*4]	      6040	screen.c	FUNCTION_30	IF_1
0x40000ed	    0x4c8d0c9d0000	                         lea r9, [rbx*4]	      6040	screen.c	FUNCTION_30	IF_1
0x40000f5	      0xb801000000	                              mov eax, 1	      6048	screen.c	FUNCTION_30	IF_1
0x40000fa	          0x8b34a9	            mov esi, dword [rcx + rbp*4]	      6040	screen.c	FUNCTION_30	IF_1
0x40000fd	          0x3b3499	            cmp esi, dword [rcx + rbx*4]	      6040	screen.c	FUNCTION_30	IF_1
0x4000100	     0xf8565ffffff	                           jne 0x400006b	      6040	screen.c	FUNCTION_30	IF_1
0x4000106	            0x85f6	                           test esi, esi	      6041	screen.c	FUNCTION_30	IF_1
0x4000108	            0x7451	                            je 0x400015b	      6041	screen.c	FUNCTION_30	IF_1
0x400010a	    0x8b0d00000000	            mov ecx, dword [0x04000110] 	      6007	screen.c	FUNCTION_29	FOR_1
0x4000110	            0x85c9	                           test ecx, ecx	      6007	screen.c	FUNCTION_29	FOR_1
0x4000112	            0x7e47	                           jle 0x400015b	      6007	screen.c	FUNCTION_29	FOR_1
0x4000114	    0x4c8b15000000	            mov r10, qword [0x0400011b] 	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x400011b	        0x418b34aa	            mov esi, dword [r10 + rbp*4]	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x400011f	        0x413b349a	            cmp esi, dword [r10 + rbx*4]	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x4000123	     0xf8542ffffff	                           jne 0x400006b	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x4000129	            0x85f6	                           test esi, esi	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x400012b	            0x742e	                            je 0x400015b	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x400012d	          0x83e901	                              sub ecx, 1	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x4000130	      0xb800000000	                              mov eax, 0	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x4000135	    0x4c8d14cd0000	                        lea r10, [rcx*8]	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x400013d	            0xeb17	                           jmp 0x4000156	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x400013f	              0x90	                                     nop	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x4000140	        0x488b4808	                mov rcx, qword [rax + 8]	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x4000144	        0x428b3401	               mov esi, dword [rcx + r8]	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x4000148	        0x423b3409	               cmp esi, dword [rcx + r9]	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x400014c	            0x7549	                           jne 0x4000197	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x400014e	        0x4883c008	                              add rax, 8	      6009	screen.c	FUNCTION_29	FOR_1	IF_1
0x4000152	            0x85f6	                           test esi, esi	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x4000154	            0x7405	                            je 0x400015b	      6011	screen.c	FUNCTION_29	FOR_1	IF_2
0x4000156	          0x4c39d0	                            cmp rax, r10	      6007	screen.c	FUNCTION_29	FOR_1
0x4000159	            0x75e5	                           jne 0x4000140	      6007	screen.c	FUNCTION_29	FOR_1
0x400015b	          0x8d343a	                    lea esi, [rdx + rdi]	      6043	screen.c	FUNCTION_30	IF_1
0x400015e	    0xff1500000000	                 call qword [0x04000164]	      6043	screen.c	FUNCTION_30	IF_1
0x4000164	          0x83f801	                              cmp eax, 1	      6043	screen.c	FUNCTION_30	IF_1
0x4000167	            0x7e27	                           jle 0x4000190	      6043	screen.c	FUNCTION_30	IF_1
0x4000169	    0x488b05000000	            mov rax, qword [0x04000170] 	      6044	screen.c	FUNCTION_30	IF_1
0x4000170	       0xfb65c1801	        movzx ebx, byte [rax + rbx + 1] 	      6048	screen.c	FUNCTION_30	IF_1
0x4000175	        0x385c2801	           cmp byte [rax + rbp + 1], bl 	      6048	screen.c	FUNCTION_30	IF_1
0x4000179	           0xf95c0	                                setne al	      6048	screen.c	FUNCTION_30	IF_1
0x400017c	           0xfb6c0	                           movzx eax, al	      6048	screen.c	FUNCTION_30	IF_1
0x400017f	      0xe9e7feffff	                           jmp 0x400006b	      6048	screen.c	FUNCTION_30	IF_1
0x4000184	         0xf1f4000	                         nop dword [rax]	      6048	screen.c	FUNCTION_30	IF_1
0x4000188	            0x31c0	                            xor eax, eax	      6049	screen.c	FUNCTION_30
0x400018a	              0xc3	                                     ret	      6050	screen.c	FUNCTION_30
0x400018b	       0xf1f440000	                   nop dword [rax + rax]	      6050	screen.c	FUNCTION_30
0x4000190	            0x31c0	                            xor eax, eax	      6049	screen.c	FUNCTION_30
0x4000192	      0xe9d4feffff	                           jmp 0x400006b	      6049	screen.c	FUNCTION_30
0x4000197	      0xb801000000	                              mov eax, 1	      6048	screen.c	FUNCTION_30	IF_1
0x400019c	      0xe9cafeffff	                           jmp 0x400006b	      6048	screen.c	FUNCTION_30	IF_1
0x40001a1	    0x488b0d000000	            mov rcx, qword [0x040001a8] 	      6036	screen.c	FUNCTION_30	IF_1
0x40001a8	         0xfb63419	             movzx esi, byte [rcx + rbx]	      6035	screen.c	FUNCTION_30	IF_1
0x40001ac	        0x40383429	               cmp byte [rcx + rbp], sil	      6035	screen.c	FUNCTION_30	IF_1
0x40001b0	     0xf85b5feffff	                           jne 0x400006b	      6035	screen.c	FUNCTION_30	IF_1
0x40001b6	      0xe915ffffff	                           jmp 0x40000d0	      6035	screen.c	FUNCTION_30	IF_1
screen_stop_highlight	functions,0:IF,26:DO,0:ELSE,10:CALL,23:FOR,0:WHILE,0:SWITCH,0	247
0x4001ea0	            0x4155	                                push r13	      8152	screen.c	FUNCTION_59
0x4001ea2	            0x4154	                                push r12	      8152	screen.c	FUNCTION_59
0x4001ea4	              0x55	                                push rbp	      8152	screen.c	FUNCTION_59
0x4001ea5	              0x53	                                push rbx	      8152	screen.c	FUNCTION_59
0x4001ea6	        0x4883ec28	                           sub rsp, 0x28	      8152	screen.c	FUNCTION_59
0x4001eaa	    0x8b1d00000000	            mov ebx, dword [0x04001eb0] 	      8155	screen.c	FUNCTION_59	IF_1
0x4001eb0	    0x64488b042528	                mov rax, qword fs:[0x28]	      8152	screen.c	FUNCTION_59
0x4001eb9	      0x4889442418	             mov qword [rsp + 0x18], rax	      8152	screen.c	FUNCTION_59
0x4001ebe	            0x31c0	                            xor eax, eax	      8152	screen.c	FUNCTION_59
0x4001ec0	            0x85db	                           test ebx, ebx	      8155	screen.c	FUNCTION_59	IF_1
0x4001ec2	     0xf8478010000	                            je 0x4002040	      8155	screen.c	FUNCTION_59	IF_1
0x4001ec8	    0x8b3d00000000	            mov edi, dword [0x04001ece] 	      8162	screen.c	FUNCTION_59	IF_1	IF_2
0x4001ece	            0x85ff	                           test edi, edi	      8162	screen.c	FUNCTION_59	IF_1	IF_2
0x4001ed0	     0xf856a020000	                           jne 0x4002140	      8162	screen.c	FUNCTION_59	IF_1	IF_2
0x4001ed6	    0x81fbff000000	                           cmp ebx, 0xff	      8173	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3
0x4001edc	     0xf8e8e010000	                           jle 0x4002070	      8173	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3
0x4001ee2	    0x833d00000000	               cmp dword [0x04001ee9], 1	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x4001ee9	            0x89df	                            mov edi, ebx	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x4001eeb	     0xf8eaf020000	                           jle 0x40021a0	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x4001ef1	      0xe800000000	                          call 0x4001ef6	      8182	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x4001ef6	          0x4885c0	                           test rax, rax	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001ef9	          0x4889c3	                            mov rbx, rax	      8182	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x4001efc	     0xf8476030000	                            je 0x4002278	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f02	    0x8b0d00000000	            mov ecx, dword [0x04001f08] 	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f08	            0x85c9	                           test ecx, ecx	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f0a	     0xf8408030000	                            je 0x4002218	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f10	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f14	    0x41bc01000000	                             mov r12d, 1	      8196	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f1a	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f20	     0xf846a030000	                            je 0x4002290	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f26	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f2c	     0xf8469030000	                            je 0x400229b	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4001f32	           0xfbf1b	                   movsx ebx, word [rbx]	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x4001f35	          0xf6c320	                           test bl, 0x20	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x4001f38	    0x891d00000000	            mov dword [0x04001f3e], ebx 	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x4001f3e	     0xf8538010000	                           jne 0x400207c	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x4001f44	            0x89d8	                            mov eax, ebx	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x4001f46	          0x83e010	                           and eax, 0x10	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x4001f49	            0x85c0	                           test eax, eax	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x4001f4b	     0xf845f010000	                            je 0x40020b0	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x4001f51	    0x4c8b2d000000	            mov r13, qword [0x04001f58] 	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x4001f58	    0x488b2d000000	            mov rbp, qword [0x04001f5f] 	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x4001f5f	      0x41807d0000	                       cmp byte [r13], 0	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x4001f64	     0xf8506020000	                           jne 0x4002170	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x4001f6a	    0x488b1d000000	            mov rbx, qword [0x04001f71] 	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f71	          0x4889ee	                            mov rsi, rbp	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f74	          0x4889df	                            mov rdi, rbx	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f77	      0xe800000000	                          call 0x4001f7c	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f7c	            0x85c0	                           test eax, eax	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f7e	     0xf85bc020000	                           jne 0x4002240	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f84	    0x8b1d00000000	            mov ebx, dword [0x04001f8a] 	      8236	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x4001f8a	    0x41bc01000000	                             mov r12d, 1	      8237	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14
0x4001f90	          0xf6c304	                              test bl, 4	      8241	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x4001f93	     0xf843d010000	                            je 0x40020d6	      8241	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x4001f99	    0x488b2d000000	            mov rbp, qword [0x04001fa0] 	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fa0	    0x4c8b2d000000	            mov r13, qword [0x04001fa7] 	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fa7	          0x4889ee	                            mov rsi, rbp	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001faa	          0x4c89ef	                            mov rdi, r13	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fad	      0xe800000000	                          call 0x4001fb2	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fb2	            0x85c0	                           test eax, eax	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fb4	     0xf850e010000	                           jne 0x40020c8	      8243	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x4001fba	    0x81e380000000	                           and ebx, 0x80	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x4001fc0	            0x7439	                            je 0x4001ffb	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x4001fc2	    0x41bc01000000	                             mov r12d, 1	      8244	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16
0x4001fc8	    0x488b1d000000	            mov rbx, qword [0x04001fcf] 	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fcf	          0x4889ee	                            mov rsi, rbp	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fd2	          0x4889df	                            mov rdi, rbx	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fd5	      0xe800000000	                          call 0x4001fda	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fda	            0x85c0	                           test eax, eax	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fdc	            0x741d	                            je 0x4001ffb	      8250	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x4001fde	          0x4889df	                            mov rdi, rbx	      8253	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	CALL_17
0x4001fe1	      0xe800000000	                          call 0x4001fe6	      8253	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	CALL_17
0x4001fe6	          0x4585e4	                         test r12d, r12d	      8255	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x4001fe9	            0x7509	                           jne 0x4001ff4	      8255	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x4001feb	    0xf60500000000	               test byte [0x04001ff2], 3	      8255	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x4001ff2	            0x740f	                            je 0x4002003	      8255	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x4001ff4	    0x488b2d000000	            mov rbp, qword [0x04001ffb] 	      8255	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x4001ffb	          0x4889ef	                            mov rdi, rbp	      8256	screen.c	FUNCTION_59	IF_1	ELSE_1	CALL_18
0x4001ffe	      0xe800000000	                          call 0x4002003	      8256	screen.c	FUNCTION_59	IF_1	ELSE_1	CALL_18
0x4002003	    0x8b1500000000	            mov edx, dword [0x04002009] 	      8259	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x4002009	            0x85d2	                           test edx, edx	      8259	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x400200b	     0xf84df000000	                            je 0x40020f0	      8259	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x4002011	    0x488b3d000000	            mov rdi, qword [0x04002018] 	      8261	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x4002018	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      8261	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x400201f	            0x7405	                            je 0x4002026	      8261	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x4002021	      0xe800000000	                          call 0x4002026	      8262	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_19
0x4002026	    0x488b3d000000	            mov rdi, qword [0x0400202d] 	      8263	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x400202d	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      8263	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x4002034	            0x740a	                            je 0x4002040	      8263	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x4002036	      0xe800000000	                          call 0x400203b	      8264	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x400203b	       0xf1f440000	                   nop dword [rax + rax]	      8264	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x4002040	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8283	screen.c	FUNCTION_59
0x4002045	    0x644833042528	                xor rax, qword fs:[0x28]	      8283	screen.c	FUNCTION_59
0x400204e	    0xc70500000000	               mov dword [0x04002058], 0	      8282	screen.c	FUNCTION_59
0x4002058	     0xf85a3020000	                           jne 0x4002301	      8283	screen.c	FUNCTION_59
0x400205e	        0x4883c428	                           add rsp, 0x28	      8283	screen.c	FUNCTION_59
0x4002062	              0x5b	                                 pop rbx	      8283	screen.c	FUNCTION_59
0x4002063	              0x5d	                                 pop rbp	      8283	screen.c	FUNCTION_59
0x4002064	            0x415c	                                 pop r12	      8283	screen.c	FUNCTION_59
0x4002066	            0x415d	                                 pop r13	      8283	screen.c	FUNCTION_59
0x4002068	              0xc3	                                     ret	      8283	screen.c	FUNCTION_59
0x4002069	     0xf1f80000000	                         nop dword [rax]	      8283	screen.c	FUNCTION_59
0x4002070	          0x4531e4	                          xor r12d, r12d	      8153	screen.c	FUNCTION_59
0x4002073	          0xf6c320	                           test bl, 0x20	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x4002076	     0xf84c8feffff	                            je 0x4001f44	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x400207c	    0x4c8b2d000000	            mov r13, qword [0x04002083] 	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x4002083	    0x488b2d000000	            mov rbp, qword [0x0400208a] 	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x400208a	          0x4c89ef	                            mov rdi, r13	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x400208d	          0x4889ee	                            mov rsi, rbp	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x4002090	      0xe800000000	                          call 0x4002095	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x4002095	            0x85c0	                           test eax, eax	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x4002097	     0xf8563010000	                           jne 0x4002200	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x400209d	            0x89d8	                            mov eax, ebx	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x400209f	    0x41bc01000000	                             mov r12d, 1	      8222	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10
0x40020a5	          0x83e010	                           and eax, 0x10	      8222	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10
0x40020a8	            0x85c0	                           test eax, eax	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x40020aa	     0xf85a1feffff	                           jne 0x4001f51	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x40020b0	          0xf6c308	                              test bl, 8	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40020b3	     0xf84d7feffff	                            je 0x4001f90	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40020b9	    0x488b2d000000	            mov rbp, qword [0x040020c0] 	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40020c0	      0xe9a5feffff	                           jmp 0x4001f6a	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40020c5	           0xf1f00	                         nop dword [rax]	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40020c8	          0x4c89ef	                            mov rdi, r13	      8246	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x40020cb	      0xe800000000	                          call 0x40020d0	      8246	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x40020d0	    0x8b1d00000000	            mov ebx, dword [0x040020d6] 	      8246	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x40020d6	    0x81e380000000	                           and ebx, 0x80	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x40020dc	     0xf8404ffffff	                            je 0x4001fe6	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x40020e2	    0x488b2d000000	            mov rbp, qword [0x040020e9] 	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x40020e9	      0xe9dafeffff	                           jmp 0x4001fc8	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x40020ee	            0x6690	                                     nop	      8248	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x40020f0	    0x833d00000000	               cmp dword [0x040020f7], 1	      8269	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23
0x40020f7	     0xf8e43ffffff	                           jle 0x4002040	      8269	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23
0x40020fd	    0x8b3d00000000	            mov edi, dword [0x04002103] 	      8272	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x4002103	            0x85ff	                           test edi, edi	      8272	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x4002105	     0xf855d010000	                           jne 0x4002268	      8272	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x400210b	    0x8b3d00000000	            mov edi, dword [0x04002111] 	      8274	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x4002111	            0x85ff	                           test edi, edi	      8274	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x4002113	     0xf853f010000	                           jne 0x4002258	      8274	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x4002119	    0x8b0500000000	            mov eax, dword [0x0400211f] 	      8276	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x400211f	            0x85c0	                           test eax, eax	      8276	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x4002121	     0xf8419ffffff	                            je 0x4002040	      8276	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x4002127	    0x488b3d000000	            mov rdi, qword [0x0400212e] 	      8277	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x400212e	      0xe800000000	                          call 0x4002133	      8277	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x4002133	      0xe908ffffff	                           jmp 0x4002040	      8277	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x4002138	     0xf1f84000000	                   nop dword [rax + rax]	      8277	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x4002140	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_116	CALL_2
0x4002143	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_116	CALL_2
0x4002146	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_2
0x400214b	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_116	CALL_2
0x4002150	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_2
0x4002155	      0xe800000000	                          call 0x400215a	        33	stdio2.h	FUNCTION_116	CALL_2
0x400215a	          0x4889e7	                            mov rdi, rsp	      8168	screen.c	FUNCTION_59	IF_1	IF_2	CALL_3
0x400215d	      0xe800000000	                          call 0x4002162	      8168	screen.c	FUNCTION_59	IF_1	IF_2	CALL_3
0x4002162	      0xe9d9feffff	                           jmp 0x4002040	      8168	screen.c	FUNCTION_59	IF_1	IF_2	CALL_3
0x4002167	    0x660f1f840000	                    nop word [rax + rax]	      8168	screen.c	FUNCTION_59	IF_1	IF_2	CALL_3
0x4002170	          0x4889ee	                            mov rsi, rbp	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x4002173	          0x4c89ef	                            mov rdi, r13	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x4002176	      0xe800000000	                          call 0x400217b	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x400217b	            0x85c0	                           test eax, eax	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x400217d	     0xf853d010000	                           jne 0x40022c0	      8228	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x4002183	          0x83e308	                              and ebx, 8	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x4002186	    0x41bc01000000	                             mov r12d, 1	      8229	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12
0x400218c	    0x8b3d00000000	            mov edi, dword [0x04002192] 	      8229	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12
0x4002192	     0xf85d2fdffff	                           jne 0x4001f6a	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x4002198	            0x89fb	                            mov ebx, edi	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x400219a	      0xe9f1fdffff	                           jmp 0x4001f90	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x400219f	              0x90	                                     nop	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40021a0	    0x8b3500000000	            mov esi, dword [0x040021a6] 	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x40021a6	            0x85f6	                           test esi, esi	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x40021a8	     0xf8543fdffff	                           jne 0x4001ef1	      8177	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x40021ae	            0x89df	                            mov edi, ebx	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x40021b0	      0xe800000000	                          call 0x40021b5	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x40021b5	          0x4885c0	                           test rax, rax	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x40021b8	          0x4889c3	                            mov rbx, rax	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x40021bb	     0xf84b7000000	                            je 0x4002278	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x40021c1	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x40021c5	          0x4d85ed	                           test r13, r13	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x40021c8	     0xf842b010000	                            je 0x40022f9	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x40021ce	    0x488b2d000000	            mov rbp, qword [0x040021d5] 	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021d5	          0x4c89ef	                            mov rdi, r13	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021d8	    0x41bc01000000	                             mov r12d, 1	      8204	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40021de	          0x4889ee	                            mov rsi, rbp	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021e1	      0xe800000000	                          call 0x40021e6	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021e6	            0x85c0	                           test eax, eax	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021e8	     0xf8444fdffff	                            je 0x4001f32	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x40021ee	          0x4c89ef	                            mov rdi, r13	      8206	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x40021f1	          0x4531e4	                          xor r12d, r12d	      8153	screen.c	FUNCTION_59
0x40021f4	      0xe800000000	                          call 0x40021f9	      8206	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x40021f9	      0xe934fdffff	                           jmp 0x4001f32	      8206	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x40021fe	            0x6690	                                     nop	      8206	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x4002200	          0x4c89ef	                            mov rdi, r13	      8224	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002203	      0xe800000000	                          call 0x4002208	      8224	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002208	    0x8b1d00000000	            mov ebx, dword [0x0400220e] 	      8224	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x400220e	      0xe931fdffff	                           jmp 0x4001f44	      8224	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002213	       0xf1f440000	                   nop dword [rax + rax]	      8224	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x4002218	      0x6683780800	                   cmp word [rax + 8], 0	      8189	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x400221d	    0x41bc01000000	                             mov r12d, 1	      8196	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4002223	     0xf8509fdffff	                           jne 0x4001f32	      8189	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4002229	          0x4531e4	                          xor r12d, r12d	      8153	screen.c	FUNCTION_59
0x400222c	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      8153	screen.c	FUNCTION_59
0x4002231	        0x410f95c4	                              setne r12b	      8153	screen.c	FUNCTION_59
0x4002235	      0xe9f8fcffff	                           jmp 0x4001f32	      8153	screen.c	FUNCTION_59
0x400223a	    0x660f1f440000	                    nop word [rax + rax]	      8153	screen.c	FUNCTION_59
0x4002240	          0x4889df	                            mov rdi, rbx	      8239	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x4002243	      0xe800000000	                          call 0x4002248	      8239	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x4002248	    0x8b1d00000000	            mov ebx, dword [0x0400224e] 	      8239	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x400224e	      0xe93dfdffff	                           jmp 0x4001f90	      8239	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x4002253	       0xf1f440000	                   nop dword [rax + rax]	      8239	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x4002258	          0x83ef01	                              sub edi, 1	      8275	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x400225b	      0xe800000000	                          call 0x4002260	      8275	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x4002260	      0xe9b4feffff	                           jmp 0x4002119	      8275	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x4002265	           0xf1f00	                         nop dword [rax]	      8275	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x4002268	          0x83ef01	                              sub edi, 1	      8273	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x400226b	      0xe800000000	                          call 0x4002270	      8273	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x4002270	      0xe996feffff	                           jmp 0x400210b	      8273	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x4002275	           0xf1f00	                         nop dword [rax]	      8273	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x4002278	    0xc70500000000	               mov dword [0x04002282], 0	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x4002282	            0x31db	                            xor ebx, ebx	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x4002284	          0x4531e4	                          xor r12d, r12d	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x4002287	      0xe904fdffff	                           jmp 0x4001f90	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x400228c	         0xf1f4000	                         nop dword [rax]	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x4002290	      0x66837b0800	                   cmp word [rbx + 8], 0	      8189	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x4002295	     0xf8597fcffff	                           jne 0x4001f32	      8189	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x400229b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x400229f	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x40022a5	            0x7482	                            je 0x4002229	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x40022a7	          0x4531e4	                          xor r12d, r12d	      8153	screen.c	FUNCTION_59
0x40022aa	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8153	screen.c	FUNCTION_59
0x40022b0	        0x410f95c4	                              setne r12b	      8153	screen.c	FUNCTION_59
0x40022b4	      0xe979fcffff	                           jmp 0x4001f32	      8153	screen.c	FUNCTION_59
0x40022b9	     0xf1f80000000	                         nop dword [rax]	      8153	screen.c	FUNCTION_59
0x40022c0	          0x4c89ef	                            mov rdi, r13	      8231	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	CALL_11
0x40022c3	      0xe800000000	                          call 0x40022c8	      8231	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	CALL_11
0x40022c8	    0x8b1d00000000	            mov ebx, dword [0x040022ce] 	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022ce	          0xf6c308	                              test bl, 8	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022d1	            0x89df	                            mov edi, ebx	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022d3	     0xf85e0fdffff	                           jne 0x40020b9	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022d9	          0xf6c310	                           test bl, 0x10	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022dc	     0xf84aefcffff	                            je 0x4001f90	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022e2	    0x488b05000000	            mov rax, qword [0x040022e9] 	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022e9	          0x803800	                       cmp byte [rax], 0	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022ec	     0xf84c7fdffff	                            je 0x40020b9	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022f2	            0x89fb	                            mov ebx, edi	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022f4	      0xe997fcffff	                           jmp 0x4001f90	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x40022f9	          0x4531e4	                          xor r12d, r12d	      8153	screen.c	FUNCTION_59
0x40022fc	      0xe931fcffff	                           jmp 0x4001f32	      8153	screen.c	FUNCTION_59
0x4002301	      0xe800000000	                          call 0x4002306	      8283	screen.c	FUNCTION_59
screen_screencol	functions,0:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	2
0x40132c0	    0x8b0500000000	            mov eax, dword [0x040132c6] 	     11134	screen.c	FUNCTION_102
0x40132c6	              0xc3	                                     ret	     11134	screen.c	FUNCTION_102
can_clear	functions,0:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	26
0x40024b0	            0x31c0	                            xor eax, eax	      9201	screen.c	FUNCTION_76
0x40024b2	          0x803f00	                       cmp byte [rdi], 0	      9201	screen.c	FUNCTION_76
0x40024b5	            0x7453	                            je 0x400250a	      9201	screen.c	FUNCTION_76
0x40024b7	    0x833d00000000	               cmp dword [0x040024be], 1	      9201	screen.c	FUNCTION_76
0x40024be	      0xb801000000	                              mov eax, 1	      9201	screen.c	FUNCTION_76
0x40024c3	            0x7e45	                           jle 0x400250a	      9201	screen.c	FUNCTION_76
0x40024c5	    0x8b3500000000	            mov esi, dword [0x040024cb] 	      9203	screen.c	FUNCTION_76
0x40024cb	            0x85f6	                           test esi, esi	      9203	screen.c	FUNCTION_76
0x40024cd	            0x753b	                           jne 0x400250a	      9203	screen.c	FUNCTION_76
0x40024cf	    0x8b0d00000000	            mov ecx, dword [0x040024d5] 	      9206	screen.c	FUNCTION_76
0x40024d5	            0x85c9	                           test ecx, ecx	      9206	screen.c	FUNCTION_76
0x40024d7	            0x7427	                            je 0x4002500	      9206	screen.c	FUNCTION_76
0x40024d9	    0x48813d000000	cmp qword [0x040024e4], 0xffffffffffffd499	      9206	screen.c	FUNCTION_76
0x40024e4	            0x742a	                            je 0x4002510	      9206	screen.c	FUNCTION_76
0x40024e6	    0x488b05000000	            mov rax, qword [0x040024ed] 	      9211	screen.c	FUNCTION_76
0x40024ed	          0x803800	                       cmp byte [rax], 0	      9201	screen.c	FUNCTION_76
0x40024f0	           0xf95c0	                                setne al	      9201	screen.c	FUNCTION_76
0x40024f3	           0xfb6c0	                           movzx eax, al	      9201	screen.c	FUNCTION_76
0x40024f6	              0xc3	                                     ret	      9201	screen.c	FUNCTION_76
0x40024f7	    0x660f1f840000	                    nop word [rax + rax]	      9201	screen.c	FUNCTION_76
0x4002500	    0x8b1500000000	            mov edx, dword [0x04002506] 	      9207	screen.c	FUNCTION_76
0x4002506	            0x85d2	                           test edx, edx	      9207	screen.c	FUNCTION_76
0x4002508	            0x75dc	                           jne 0x40024e6	      9207	screen.c	FUNCTION_76
0x400250a	            0xf3c3	                                     ret	      9212	screen.c	FUNCTION_76
0x400250c	         0xf1f4000	                         nop dword [rax]	      9212	screen.c	FUNCTION_76
0x4002510	            0xf3c3	                                     ret	      9212	screen.c	FUNCTION_76
redraw_all_later	functions,1:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	20
0x40018b0	    0x488b05000000	            mov rax, qword [0x040018b7] 	       243	screen.c	ELSE_1	FUNCTION_4
0x40018b7	            0x89fa	                            mov edx, edi	       240	screen.c	ELSE_1	FUNCTION_4
0x40018b9	          0x4885c0	                           test rax, rax	       243	screen.c	ELSE_1	FUNCTION_4
0x40018bc	            0x750b	                           jne 0x40018c9	       243	screen.c	ELSE_1	FUNCTION_4
0x40018be	            0xeb2e	                           jmp 0x40018ee	       243	screen.c	ELSE_1	FUNCTION_4
0x40018c0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       243	screen.c	ELSE_1	FUNCTION_4
0x40018c4	          0x4885c0	                           test rax, rax	       243	screen.c	ELSE_1	FUNCTION_4
0x40018c7	            0x7425	                            je 0x40018ee	       243	screen.c	ELSE_1	FUNCTION_4
0x40018c9	    0x8b0d00000000	            mov ecx, dword [0x040018cf] 	       206	screen.c	FUNCTION_2	IF_1
0x40018cf	            0x85c9	                           test ecx, ecx	       206	screen.c	FUNCTION_2	IF_1
0x40018d1	            0x75ed	                           jne 0x40018c0	       206	screen.c	FUNCTION_2	IF_1
0x40018d3	    0x3b9028010000	           cmp edx, dword [rax + 0x128] 	       206	screen.c	FUNCTION_2	IF_1
0x40018d9	            0x7ee5	                           jle 0x40018c0	       206	screen.c	FUNCTION_2	IF_1
0x40018db	          0x4889c7	                            mov rdi, rax	       206	screen.c	FUNCTION_2	IF_1
0x40018de	            0x89d6	                            mov esi, edx	       206	screen.c	FUNCTION_2	IF_1
0x40018e0	      0xe87bfeffff	       call sym.redraw_win_later.part.10	       206	screen.c	FUNCTION_2	IF_1
0x40018e5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       243	screen.c	ELSE_1	FUNCTION_4
0x40018e9	          0x4885c0	                           test rax, rax	       243	screen.c	ELSE_1	FUNCTION_4
0x40018ec	            0x75db	                           jne 0x40018c9	       243	screen.c	ELSE_1	FUNCTION_4
0x40018ee	            0xf3c3	                                     ret	       243	screen.c	ELSE_1	FUNCTION_4
redraw_custom_statusline	functions,0:IF,2:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	38
0x4004ad0	    0x8b0500000000	            mov eax, dword [0x04004ad6] 	      7026	screen.c	FUNCTION_43	IF_1
0x4004ad6	            0x85c0	                           test eax, eax	      7026	screen.c	FUNCTION_43	IF_1
0x4004ad8	            0x7542	                           jne 0x4004b1c	      7026	screen.c	FUNCTION_43	IF_1
0x4004ada	              0x55	                                push rbp	      7020	screen.c	FUNCTION_43
0x4004adb	              0x53	                                push rbx	      7020	screen.c	FUNCTION_43
0x4004adc	        0x4883ec08	                              sub rsp, 8	      7020	screen.c	FUNCTION_43
0x4004ae0	    0x8b1500000000	            mov edx, dword [0x04004ae6] 	      7155	screen.c	FUNCTION_46	IF_1
0x4004ae6	    0x8b2d00000000	            mov ebp, dword [0x04004aec] 	      7022	screen.c	FUNCTION_43
0x4004aec	    0xc70500000000	               mov dword [0x04004af6], 1	      7028	screen.c	FUNCTION_43
0x4004af6	    0xc70500000000	               mov dword [0x04004b00], 0	      7030	screen.c	FUNCTION_43
0x4004b00	            0x85d2	                           test edx, edx	      7155	screen.c	FUNCTION_46	IF_1
0x4004b02	            0x741c	                            je 0x4004b20	      7155	screen.c	FUNCTION_46	IF_1
0x4004b04	             0x9e8	                             or eax, ebp	      7041	screen.c	FUNCTION_43
0x4004b06	    0xc70500000000	               mov dword [0x04004b10], 0	      7042	screen.c	FUNCTION_43
0x4004b10	    0x890500000000	            mov dword [0x04004b16], eax 	      7041	screen.c	FUNCTION_43
0x4004b16	        0x4883c408	                              add rsp, 8	      7043	screen.c	FUNCTION_43
0x4004b1a	              0x5b	                                 pop rbx	      7043	screen.c	FUNCTION_43
0x4004b1b	              0x5d	                                 pop rbp	      7043	screen.c	FUNCTION_43
0x4004b1c	            0xf3c3	                                     ret	      7043	screen.c	FUNCTION_43
0x4004b1e	            0x6690	                                     nop	      7043	screen.c	FUNCTION_43
0x4004b20	            0x31f6	                            xor esi, esi	      7043	screen.c	FUNCTION_43
0x4004b22	          0x4889fb	                            mov rbx, rdi	      7043	screen.c	FUNCTION_43
0x4004b25	      0xe8b6f9ffff	        call sym.win_redr_custom.part.17	      7043	screen.c	FUNCTION_43
0x4004b2a	    0x8b0500000000	            mov eax, dword [0x04004b30] 	      7032	screen.c	FUNCTION_43	IF_2
0x4004b30	            0x85c0	                           test eax, eax	      7032	screen.c	FUNCTION_43	IF_2
0x4004b32	            0x74d0	                            je 0x4004b04	      7032	screen.c	FUNCTION_43	IF_2
0x4004b34	    0x488b83800200	           mov rax, qword [rbx + 0x280] 	      7038	screen.c	FUNCTION_43	IF_2
0x4004b3b	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b41	      0xba00000000	                              mov edx, 0	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b46	      0xbeffffffff	                     mov esi, 0xffffffff	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b4b	      0xbf00000000	                              mov edi, 0	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b50	          0x803801	                       cmp byte [rax], 1	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b53	            0x19c9	                            sbb ecx, ecx	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b55	          0x83e1fe	                     and ecx, 0xfffffffe	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b58	          0x83c105	                              add ecx, 5	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b5b	      0xe800000000	                          call 0x4004b60	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b60	    0x8b0500000000	            mov eax, dword [0x04004b66] 	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
0x4004b66	            0xeb9c	                           jmp 0x4004b04	      7037	screen.c	FUNCTION_43	IF_2	CALL_2
screen_line	functions,0:IF,42:DO,0:ELSE,10:CALL,20:FOR,1:WHILE,4:SWITCH,0	812
0x4005ec0	            0x4157	                                push r15	      6081	screen.c	FUNCTION_32
0x4005ec2	            0x4156	                                push r14	      6081	screen.c	FUNCTION_32
0x4005ec4	          0x4189d6	                           mov r14d, edx	      6081	screen.c	FUNCTION_32
0x4005ec7	            0x4155	                                push r13	      6081	screen.c	FUNCTION_32
0x4005ec9	            0x4154	                                push r12	      6081	screen.c	FUNCTION_32
0x4005ecb	              0x55	                                push rbp	      6081	screen.c	FUNCTION_32
0x4005ecc	              0x53	                                push rbx	      6081	screen.c	FUNCTION_32
0x4005ecd	        0x4883ec78	                           sub rsp, 0x78	      6081	screen.c	FUNCTION_32
0x4005ed1	    0x488b05000000	            mov rax, qword [0x04005ed8] 	      6107	screen.c	FUNCTION_32	IF_1
0x4005ed8	        0x897c241c	             mov dword [rsp + 0x1c], edi	      6081	screen.c	FUNCTION_32
0x4005edc	          0x4863ff	                         movsxd rdi, edi	      6107	screen.c	FUNCTION_32	IF_1
0x4005edf	        0x8974242c	             mov dword [rsp + 0x2c], esi	      6081	screen.c	FUNCTION_32
0x4005ee3	        0x894c2438	             mov dword [rsp + 0x38], ecx	      6081	screen.c	FUNCTION_32
0x4005ee7	      0x448944243c	             mov dword [rsp + 0x3c], r8d	      6081	screen.c	FUNCTION_32
0x4005eec	          0x4839c7	                            cmp rdi, rax	      6107	screen.c	FUNCTION_32	IF_1
0x4005eef	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      6107	screen.c	FUNCTION_32	IF_1
0x4005ef4	            0x7c0e	                            jl 0x4005f04	      6107	screen.c	FUNCTION_32	IF_1
0x4005ef6	          0x83e801	                              sub eax, 1	      6108	screen.c	FUNCTION_32	IF_1
0x4005ef9	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6108	screen.c	FUNCTION_32	IF_1
0x4005efd	            0x4898	                                    cdqe	      6108	screen.c	FUNCTION_32	IF_1
0x4005eff	      0x4889442430	             mov qword [rsp + 0x30], rax	      6108	screen.c	FUNCTION_32	IF_1
0x4005f04	    0x488b05000000	            mov rax, qword [0x04005f0b] 	      6109	screen.c	FUNCTION_32	IF_2
0x4005f0b	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      6113	screen.c	FUNCTION_32	CALL_1
0x4005f0f	          0x4963d6	                        movsxd rdx, r14d	      6109	screen.c	FUNCTION_32	IF_2
0x4005f12	          0x4839c2	                            cmp rdx, rax	      6110	screen.c	FUNCTION_32	IF_2
0x4005f15	            0x89fe	                            mov esi, edi	      6113	screen.c	FUNCTION_32	CALL_1
0x4005f17	        0x440f4ff0	                         cmovg r14d, eax	      6110	screen.c	FUNCTION_32	IF_2
0x4005f1b	          0x4531e4	                          xor r12d, r12d	      6088	screen.c	FUNCTION_32
0x4005f1e	      0xe800000000	                          call 0x4005f23	      6113	screen.c	FUNCTION_32	CALL_1
0x4005f23	    0x488b05000000	            mov rax, qword [0x04005f2a] 	      6117	screen.c	FUNCTION_32
0x4005f2a	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      6117	screen.c	FUNCTION_32
0x4005f2f	    0x488b35000000	            mov rsi, qword [0x04005f36] 	      6116	screen.c	FUNCTION_32
0x4005f36	    0x488b2d000000	            mov rbp, qword [0x04005f3d] 	      6116	screen.c	FUNCTION_32
0x4005f3d	      0x448b6c243c	           mov r13d, dword [rsp + 0x3c] 	      6124	screen.c	FUNCTION_32	IF_3
0x4005f42	          0x8b1498	            mov edx, dword [rax + rbx*4]	      6117	screen.c	FUNCTION_32
0x4005f45	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6117	screen.c	FUNCTION_32
0x4005f49	          0x4829f5	                            sub rbp, rsi	      6116	screen.c	FUNCTION_32
0x4005f4c	          0x4189e9	                            mov r9d, ebp	      6116	screen.c	FUNCTION_32
0x4005f4f	          0x8d1c02	                    lea ebx, [rdx + rax]	      6117	screen.c	FUNCTION_32
0x4005f52	    0x8b0500000000	            mov eax, dword [0x04005f58] 	      6119	screen.c	FUNCTION_32
0x4005f58	          0x8d3c28	                    lea edi, [rax + rbp]	      6119	screen.c	FUNCTION_32
0x4005f5b	             0x1d0	                            add eax, edx	      6120	screen.c	FUNCTION_32
0x4005f5d	          0x4585ed	                         test r13d, r13d	      6124	screen.c	FUNCTION_32	IF_3
0x4005f60	        0x89442468	             mov dword [rsp + 0x68], eax	      6120	screen.c	FUNCTION_32
0x4005f64	        0x897c2450	             mov dword [rsp + 0x50], edi	      6119	screen.c	FUNCTION_32
0x4005f68	     0xf849d000000	                            je 0x400600b	      6124	screen.c	FUNCTION_32	IF_3
0x4005f6e	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	      6127	screen.c	FUNCTION_32	IF_3	IF_4
0x4005f73	            0x89d8	                            mov eax, ebx	      6127	screen.c	FUNCTION_32	IF_3	IF_4
0x4005f75	          0x4585db	                         test r11d, r11d	      6127	screen.c	FUNCTION_32	IF_3	IF_4
0x4005f78	            0x7e74	                           jle 0x4005fee	      6127	screen.c	FUNCTION_32	IF_3	IF_4
0x4005f7a	          0x4585f6	                         test r14d, r14d	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f7d	            0x786f	                            js 0x4005fee	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f7f	            0x89d8	                            mov eax, ebx	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f81	        0x803c0620	              cmp byte [rsi + rax], 0x20	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f85	     0xf85ab0a0000	                           jne 0x4006a36	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f8b	    0x488b3d000000	            mov rdi, qword [0x04005f92] 	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f92	      0x66833c4700	               cmp word [rdi + rax*2], 0	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f97	     0xf85990a0000	                           jne 0x4006a36	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005f9d	    0x448b05000000	            mov r8d, dword [0x04005fa4] 	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fa4	    0x4c8b0d000000	              mov r9, qword [0x04005fab]	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fab	            0x89d9	                            mov ecx, ebx	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fad	            0x31d2	                            xor edx, edx	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005faf	            0xeb1e	                           jmp 0x4005fcf	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fb1	     0xf1f80000000	                         nop dword [rax]	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fb8	            0x89c8	                            mov eax, ecx	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fba	        0x803c0620	              cmp byte [rsi + rax], 0x20	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fbe	     0xf857c0a0000	                           jne 0x4006a40	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fc4	      0x66833c4700	               cmp word [rdi + rax*2], 0	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fc9	     0xf85710a0000	                           jne 0x4006a40	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fcf	          0x4585c0	                           test r8d, r8d	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fd2	            0x740d	                            je 0x4005fe1	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fd4	        0x458b1481	            mov r10d, dword [r9 + rax*4]	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fd8	          0x4585d2	                         test r10d, r10d	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fdb	     0xf85190b0000	                           jne 0x4006afa	      6132	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fe1	          0x83c201	                              add edx, 1	      6137	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fe4	          0x83c101	                              add ecx, 1	      6136	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fe7	          0x4139d6	                           cmp r14d, edx	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fea	            0x7dcc	                           jge 0x4005fb8	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fec	            0x89d8	                            mov eax, ebx	      6129	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4005fee	        0x458d6601	                     lea r12d, [r14 + 1]	      6143	screen.c	FUNCTION_32	IF_3
0x4005ff2	      0x448b742438	           mov r14d, dword [rsp + 0x38] 	      6146	screen.c	FUNCTION_32	IF_3
0x4005ff7	        0x418d1c04	                    lea ebx, [r12 + rax]	      6144	screen.c	FUNCTION_32	IF_3
0x4005ffb	        0x458d0c2c	                    lea r9d, [r12 + rbp]	      6145	screen.c	FUNCTION_32	IF_3
0x4005fff	          0x4489f0	                           mov eax, r14d	      6146	screen.c	FUNCTION_32	IF_3
0x4006002	          0xc1f81f	                           sar eax, 0x1f	      6146	screen.c	FUNCTION_32	IF_3
0x4006005	          0x4131c6	                           xor r14d, eax	      6146	screen.c	FUNCTION_32	IF_3
0x4006008	          0x4129c6	                           sub r14d, eax	      6146	screen.c	FUNCTION_32	IF_3
0x400600b	          0x4489f2	                           mov edx, r14d	      6150	screen.c	FUNCTION_32	CALL_3
0x400600e	            0x89de	                            mov esi, ebx	      6150	screen.c	FUNCTION_32	CALL_3
0x4006010	          0x4489cf	                            mov edi, r9d	      6150	screen.c	FUNCTION_32	CALL_3
0x4006013	          0x4429e2	                           sub edx, r12d	      6150	screen.c	FUNCTION_32	CALL_3
0x4006016	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      6150	screen.c	FUNCTION_32	CALL_3
0x400601b	      0xe820a0ffff	              call sym.char_needs_redraw	      6150	screen.c	FUNCTION_32	CALL_3
0x4006020	          0x4539e6	                          cmp r14d, r12d	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006023	     0xf8eac0a0000	                           jle 0x4006ad5	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006029	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      6152	screen.c	FUNCTION_32	WHILE_2
0x400602e	    0xc74424540000	               mov dword [rsp + 0x54], 0	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006036	          0x4189c7	                           mov r15d, eax	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006039	    0xc74424080000	                  mov dword [rsp + 8], 0	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006041	      0x4489742418	            mov dword [rsp + 0x18], r14d	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006050	    0x8b0500000000	            mov eax, dword [0x04006056] 	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x4006056	      0x458d542401	                     lea r10d, [r12 + 1]	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x400605b	            0x85c0	                           test eax, eax	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x400605d	            0x740b	                            je 0x400606a	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x400605f	      0x4439542418	           cmp dword [rsp + 0x18], r10d 	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x4006064	     0xf8f66040000	                            jg 0x40064d0	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x400606a	          0x4589d5	                          mov r13d, r10d	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x400606d	      0xbd01000000	                              mov ebp, 1	      6155	screen.c	FUNCTION_32	WHILE_2	IF_6
0x4006072	      0xb901000000	                              mov ecx, 1	      6158	screen.c	FUNCTION_32	WHILE_2	ELSE_1
0x4006077	        0x8b442408	                mov eax, dword [rsp + 8]	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400607b	        0x448d342b	                   lea r14d, [rbx + rbp]	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400607f	          0x4401cd	                            add ebp, r9d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006082	            0x85c0	                           test eax, eax	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006084	     0xf84c6010000	                            je 0x4006250	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400608a	    0x8b3500000000	            mov esi, dword [0x04006090] 	      6170	screen.c	FUNCTION_32	WHILE_2	IF_7
0x4006090	    0x41b801000000	                              mov r8d, 1	      6170	screen.c	FUNCTION_32	WHILE_2	IF_7
0x4006096	            0x85f6	                           test esi, esi	      6170	screen.c	FUNCTION_32	WHILE_2	IF_7
0x4006098	     0xf84ec010000	                            je 0x400628a	      6170	screen.c	FUNCTION_32	WHILE_2	IF_7
0x400609e	    0x488b15000000	            mov rdx, qword [0x040060a5] 	      6172	screen.c	FUNCTION_32	WHILE_2	IF_7
0x40060a5	          0x4489f0	                           mov eax, r14d	      6172	screen.c	FUNCTION_32	WHILE_2	IF_7
0x40060a8	         0xfb70442	           movzx eax, word [rdx + rax*2]	      6172	screen.c	FUNCTION_32	WHILE_2	IF_7
0x40060ac	      0x3dff000000	                           cmp eax, 0xff	      6173	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_8
0x40060b1	     0xf8fd1040000	                            jg 0x4006588	      6173	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_8
0x40060b7	            0xa802	                              test al, 2	      6175	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_9
0x40060b9	    0x41b801000000	                              mov r8d, 1	      6175	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_9
0x40060bf	     0xf84c5010000	                            je 0x400628a	      6175	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_9
0x40060c5	    0x41bf01000000	                             mov r15d, 1	      6176	screen.c	FUNCTION_32	WHILE_2	IF_7	IF_9
0x40060cb	    0x8b0500000000	            mov eax, dword [0x040060d1] 	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060d1	            0x85c0	                           test eax, eax	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060d3	     0xf84c7030000	                            je 0x40064a0	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060d9	        0x8b442408	                mov eax, dword [rsp + 8]	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060dd	            0x85c0	                           test eax, eax	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060df	     0xf85bb030000	                           jne 0x40064a0	      6195	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060e5	    0x8b0500000000	            mov eax, dword [0x040060eb] 	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060eb	            0x85c0	                           test eax, eax	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060ed	     0xf841d060000	                            je 0x4006710	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060f3	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060f7	          0x4189db	                           mov r11d, ebx	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060fa	          0x4489ca	                            mov edx, r9d	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40060fd	    0xc74424080000	                  mov dword [rsp + 8], 0	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006105	          0x4401e0	                           add eax, r12d	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006108	        0x89442428	             mov dword [rsp + 0x28], eax	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400610c	        0x4b8d041b	                    lea rax, [r11 + r11]	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006110	      0x4889442410	             mov qword [rsp + 0x10], rax	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006115	        0x488d0412	                    lea rax, [rdx + rdx]	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006119	      0x4889442420	             mov qword [rsp + 0x20], rax	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400611e	            0x6690	                                     nop	      6197	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006120	    0x8b0500000000	            mov eax, dword [0x04006126] 	      6225	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0x4006126	            0x85c0	                           test eax, eax	      6225	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0x4006128	            0x741d	                            je 0x4006147	      6225	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0x400612a	          0x83f901	                              cmp ecx, 1	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400612d	     0xf84e5040000	                            je 0x4006618	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006133	          0x83f902	                              cmp ecx, 2	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006136	     0xf846c050000	                            je 0x40066a8	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x400613c	      0x3dcc260000	                         cmp eax, 0x26cc	      6252	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x4006141	     0xf8449050000	                            je 0x4006690	      6252	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x4006147	    0x448b15000000	           mov r10d, dword [0x0400614e] 	      6260	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x400614e	          0x4585d2	                         test r10d, r10d	      6260	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006151	            0x740b	                            je 0x400615e	      6260	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006153	      0x44396c2418	           cmp dword [rsp + 0x18], r13d 	      6260	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006158	     0xf8452040000	                            je 0x40065b0	      6260	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x400615e	    0x488b05000000	            mov rax, qword [0x04006165] 	      6269	screen.c	FUNCTION_32	WHILE_2	IF_10
0x4006165	         0xfb63410	             movzx esi, byte [rax + rdx]	      6269	screen.c	FUNCTION_32	WHILE_2	IF_10
0x4006169	        0x42883418	               mov byte [rax + r11], sil	      6269	screen.c	FUNCTION_32	WHILE_2	IF_10
0x400616d	    0x8b3d00000000	            mov edi, dword [0x04006173] 	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006173	            0x85ff	                           test edi, edi	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006175	            0x7453	                            je 0x40061ca	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006177	    0x488b05000000	            mov rax, qword [0x0400617e] 	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x400617e	        0x48c1e202	                              shl rdx, 2	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006182	    0x4a8d3c9d0000	                        lea rdi, [r11*4]	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x400618a	        0x488d3410	                    lea rsi, [rax + rdx]	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x400618e	          0x448b16	                   mov r10d, dword [rsi]	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006191	        0x46891498	           mov dword [rax + r11*4], r10d	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0x4006195	            0x8b36	                    mov esi, dword [rsi]	      6274	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0x4006197	            0x85f6	                           test esi, esi	      6274	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0x4006199	            0x742f	                            je 0x40061ca	      6274	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0x400619b	    0x8b0500000000	            mov eax, dword [0x040061a1] 	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061a1	            0x85c0	                           test eax, eax	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061a3	            0x7e25	                           jle 0x40061ca	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061a5	      0xbe00000000	                              mov esi, 0	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061aa	            0x31c0	                            xor eax, eax	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061ac	         0xf1f4000	                         nop dword [rax]	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061b0	          0x4c8b16	                    mov r10, qword [rsi]	      6279	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061b3	          0x83c001	                              add eax, 1	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061b6	        0x4883c608	                              add rsi, 8	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061ba	        0x458b1c12	             mov r11d, dword [r10 + rdx]	      6279	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061be	        0x45891c3a	             mov dword [r10 + rdi], r11d	      6279	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061c2	    0x390500000000	            cmp dword [0x040061c8], eax 	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061c8	            0x7fe6	                            jg 0x40061b0	      6278	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0x40061ca	          0x83f902	                              cmp ecx, 2	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x40061cd	     0xf8465030000	                            je 0x4006538	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x40061d3	    0x8b0500000000	            mov eax, dword [0x040061d9] 	      6291	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061d9	    0x488b15000000	            mov rdx, qword [0x040061e0] 	      6303	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061e0	            0x85c0	                           test eax, eax	      6291	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061e2	     0xf8588020000	                           jne 0x4006470	      6291	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061e8	    0x8b0500000000	            mov eax, dword [0x040061ee] 	      6296	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061ee	            0x85c0	                           test eax, eax	      6296	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061f0	     0xf857a020000	                           jne 0x4006470	      6296	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061f6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6296	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061fb	          0x4801d6	                            add rsi, rdx	      6296	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x40061fe	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6310	screen.c	FUNCTION_32	WHILE_2	IF_10
0x4006203	          0x4801d0	                            add rax, rdx	      6310	screen.c	FUNCTION_32	WHILE_2	IF_10
0x4006206	          0x83f902	                              cmp ecx, 2	      6314	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0x4006209	           0xfb738	                   movzx edi, word [rax]	      6310	screen.c	FUNCTION_32	WHILE_2	IF_10
0x400620c	          0x66893e	                      mov word [rsi], di	      6310	screen.c	FUNCTION_32	WHILE_2	IF_10
0x400620f	     0xf84eb020000	                            je 0x4006500	      6314	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0x4006215	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006219	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x400621d	            0x89df	                            mov edi, ebx	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x400621f	      0x4489442410	             mov dword [rsp + 0x10], r8d	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006224	      0xe817d5ffff	                    call sym.screen_char	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006229	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x400622e	          0x4189e9	                            mov r9d, ebp	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006231	          0x4489f3	                           mov ebx, r14d	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006234	          0x4489fd	                           mov ebp, r15d	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x4006237	          0x4589c7	                           mov r15d, r8d	      6321	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0x400623a	      0x44396c2418	           cmp dword [rsp + 0x18], r13d 	      6152	screen.c	FUNCTION_32	WHILE_2
0x400623f	     0xf8eb1000000	                           jle 0x40062f6	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006245	          0x4589ec	                          mov r12d, r13d	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006248	      0xe903feffff	                           jmp 0x4006050	      6152	screen.c	FUNCTION_32	WHILE_2
0x400624d	           0xf1f00	                         nop dword [rax]	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006250	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006254	          0x4489f6	                           mov esi, r14d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006257	            0x89ef	                            mov edi, ebp	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006259	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400625e	      0x4489542428	            mov dword [rsp + 0x28], r10d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006263	        0x894c2410	             mov dword [rsp + 0x10], ecx	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006267	          0x4429e2	                           sub edx, r12d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400626a	            0x29ca	                            sub edx, ecx	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400626c	      0xe8cf9dffff	              call sym.char_needs_redraw	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006271	          0x4531c0	                            xor r8d, r8d	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006274	            0x85c0	                           test eax, eax	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006276	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400627a	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400627f	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x4006284	     0xf8500feffff	                           jne 0x400608a	      6162	screen.c	FUNCTION_32	WHILE_2	CALL_4
0x400628a	          0x4585ff	                         test r15d, r15d	      6180	screen.c	FUNCTION_32	WHILE_2	IF_10
0x400628d	     0xf8538feffff	                           jne 0x40060cb	      6180	screen.c	FUNCTION_32	WHILE_2	IF_10
0x4006293	    0x8b0500000000	            mov eax, dword [0x04006299] 	      6323	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x4006299	            0x85c0	                           test eax, eax	      6323	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x400629b	            0x7443	                            je 0x40062e0	      6323	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x400629d	    0x8b0500000000	            mov eax, dword [0x040062a3] 	      6325	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062a3	            0x85c0	                           test eax, eax	      6325	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062a5	            0x7539	                           jne 0x40062e0	      6325	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062a7	      0x440364242c	            add r12d, dword [rsp + 0x2c]	      6327	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062ac	          0x4585e4	                         test r12d, r12d	      6327	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062af	            0x7e2f	                           jle 0x40062e0	      6327	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0x40062b1	    0x488b05000000	            mov rax, qword [0x040062b8] 	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062b8	          0x8d53ff	                      lea edx, [rbx - 1]	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062bb	            0x89d9	                            mov ecx, ebx	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062bd	         0xfb71c50	           movzx ebx, word [rax + rdx*2]	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062c1	        0x66391c48	              cmp word [rax + rcx*2], bx	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062c5	     0xf84b5050000	                            je 0x4006880	      6329	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x40062cb	    0x448b3d000000	           mov r15d, dword [0x040062d2] 	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062d2	          0x4585ff	                         test r15d, r15d	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062d5	     0xf8545060000	                           jne 0x4006920	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062db	       0xf1f440000	                   nop dword [rax + rax]	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062e0	          0x4189e9	                            mov r9d, ebp	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062e3	            0x31ed	                            xor ebp, ebp	      6337	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x40062e5	      0x44396c2418	           cmp dword [rsp + 0x18], r13d 	      6152	screen.c	FUNCTION_32	WHILE_2
0x40062ea	          0x4489f3	                           mov ebx, r14d	      6152	screen.c	FUNCTION_32	WHILE_2
0x40062ed	          0x4589c7	                           mov r15d, r8d	      6152	screen.c	FUNCTION_32	WHILE_2
0x40062f0	     0xf8f4fffffff	                            jg 0x4006245	      6152	screen.c	FUNCTION_32	WHILE_2
0x40062f6	      0x448b642454	           mov r12d, dword [rsp + 0x54] 	      6347	screen.c	FUNCTION_32	IF_29
0x40062fb	          0x4489f7	                           mov edi, r14d	      6347	screen.c	FUNCTION_32	IF_29
0x40062fe	          0x4585e4	                         test r12d, r12d	      6347	screen.c	FUNCTION_32	IF_29
0x4006301	            0x742f	                            je 0x4006332	      6347	screen.c	FUNCTION_32	IF_29
0x4006303	    0x488b15000000	            mov rdx, qword [0x0400630a] 	      6351	screen.c	FUNCTION_32	IF_29
0x400630a	          0x4489f0	                           mov eax, r14d	      6351	screen.c	FUNCTION_32	IF_29
0x400630d	        0xc6040220	              mov byte [rdx + rax], 0x20	      6351	screen.c	FUNCTION_32	IF_29
0x4006311	    0x448b1d000000	           mov r11d, dword [0x04006318] 	      6352	screen.c	FUNCTION_32	IF_29	IF_30
0x4006318	          0x4585db	                         test r11d, r11d	      6352	screen.c	FUNCTION_32	IF_29	IF_30
0x400631b	     0xf8547050000	                           jne 0x4006868	      6352	screen.c	FUNCTION_32	IF_29	IF_30
0x4006321	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6354	screen.c	FUNCTION_32	IF_29	CALL_15
0x4006325	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6354	screen.c	FUNCTION_32	IF_29	CALL_15
0x4006329	        0x428d1428	                    lea edx, [rax + r13]	      6354	screen.c	FUNCTION_32	IF_29	CALL_15
0x400632d	      0xe80ed4ffff	                    call sym.screen_char	      6354	screen.c	FUNCTION_32	IF_29	CALL_15
0x4006332	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      6358	screen.c	FUNCTION_32	IF_31
0x4006337	          0x4585c0	                           test r8d, r8d	      6358	screen.c	FUNCTION_32	IF_31
0x400633a	     0xf8eb0040000	                           jle 0x40067f0	      6358	screen.c	FUNCTION_32	IF_31
0x4006340	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	      6358	screen.c	FUNCTION_32	IF_31
0x4006345	          0x4585d2	                         test r10d, r10d	      6358	screen.c	FUNCTION_32	IF_31
0x4006348	     0xf85a2040000	                           jne 0x40067f0	      6358	screen.c	FUNCTION_32	IF_31
0x400634e	          0x4539e8	                           cmp r8d, r13d	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006351	     0xf8e25080000	                           jle 0x4006b7c	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006357	    0x488b15000000	            mov rdx, qword [0x0400635e] 	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400635e	            0x89d8	                            mov eax, ebx	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006360	        0x803c0220	              cmp byte [rdx + rax], 0x20	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006364	     0xf8530050000	                           jne 0x400689a	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400636a	    0x488b0d000000	            mov rcx, qword [0x04006371] 	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006371	      0x66833c4100	               cmp word [rcx + rax*2], 0	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006376	     0xf851e050000	                           jne 0x400689a	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400637c	    0x8b3500000000	            mov esi, dword [0x04006382] 	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006382	    0x488b3d000000	            mov rdi, qword [0x04006389] 	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006389	          0x4589ec	                          mov r12d, r13d	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400638c	            0xeb19	                           jmp 0x40063a7	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400638e	            0x6690	                                     nop	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006390	            0x89d8	                            mov eax, ebx	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006392	        0x803c0220	              cmp byte [rdx + rax], 0x20	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006396	     0xf8504050000	                           jne 0x40068a0	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400639c	      0x66833c4100	               cmp word [rcx + rax*2], 0	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063a1	     0xf85f9040000	                           jne 0x40068a0	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063a7	            0x85f6	                           test esi, esi	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063a9	            0x740d	                            je 0x40063b8	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063ab	        0x448b0c87	            mov r9d, dword [rdi + rax*4]	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063af	          0x4585c9	                           test r9d, r9d	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063b2	     0xf852a070000	                           jne 0x4006ae2	      6372	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063b8	        0x4183c401	                             add r12d, 1	      6377	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063bc	          0x83c301	                              add ebx, 1	      6376	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063bf	          0x4539e0	                           cmp r8d, r12d	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063c2	            0x75cc	                           jne 0x4006390	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063c4	      0x448b6c2438	           mov r13d, dword [rsp + 0x38] 	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063c9	      0x44036c242c	            add r13d, dword [rsp + 0x2c]	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40063ce	          0x4963c5	                        movsxd rax, r13d	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x40063d1	    0x483b05000000	            cmp rax, qword [0x040063d8] 	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x40063d8	     0xf8d3a040000	                           jge 0x4006818	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x40063de	    0x8b0d00000000	            mov ecx, dword [0x040063e4] 	     10754	screen.c	FUNCTION_95	CALL_1
0x40063e4	    0x8b0500000000	            mov eax, dword [0x040063ea] 	     10755	screen.c	FUNCTION_95	IF_1
0x40063ea	            0x85c9	                           test ecx, ecx	     10755	screen.c	FUNCTION_95	IF_1
0x40063ec	            0x7509	                           jne 0x40063f7	     10755	screen.c	FUNCTION_95	IF_1
0x40063ee	          0x83f820	                           cmp eax, 0x20	     10755	screen.c	FUNCTION_95	IF_1
0x40063f1	     0xf847c050000	                            je 0x4006973	     10755	screen.c	FUNCTION_95	IF_1
0x40063f7	           0xfb6f8	                           movzx edi, al	     10755	screen.c	FUNCTION_95	IF_1
0x40063fa	            0x89da	                            mov edx, ebx	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x40063fc	          0x4889d6	                            mov rsi, rdx	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x40063ff	    0x480335000000	             add rsi, qword [0x04006406]	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006406	        0x440fb606	                   movzx r8d, byte [rsi]	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x400640a	          0x4139f8	                            cmp r8d, edi	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x400640d	     0xf84dd050000	                            je 0x40069f0	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006413	        0x488d3c12	                    lea rdi, [rdx + rdx]	      6439	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006417	            0x8806	                      mov byte [rsi], al	      6446	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006419	    0x488b35000000	            mov rsi, qword [0x04006420] 	      6447	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006420	        0x66890c3e	                mov word [rsi + rdi], cx	      6447	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006424	    0x8b3d00000000	            mov edi, dword [0x0400642a] 	      6449	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0x400642a	            0x85ff	                           test edi, edi	      6449	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0x400642c	            0x7421	                            je 0x400644f	      6449	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0x400642e	          0x83f87f	                           cmp eax, 0x7f	      6451	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x4006431	     0xf8e29050000	                           jle 0x4006960	      6451	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x4006437	    0x488b0d000000	            mov rcx, qword [0x0400643e] 	      6453	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x400643e	          0x890491	            mov dword [rcx + rdx*4], eax	      6453	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x4006441	    0x488b05000000	            mov rax, qword [0x04006448] 	      6454	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x4006448	    0xc70490000000	              mov dword [rax + rdx*4], 0	      6454	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0x400644f	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6460	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0x4006453	        0x4883c478	                           add rsp, 0x78	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006457	          0x4489ea	                           mov edx, r13d	      6460	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0x400645a	            0x89df	                            mov edi, ebx	      6460	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0x400645c	              0x5b	                                 pop rbx	      6466	screen.c	FUNCTION_32	ELSE_10
0x400645d	              0x5d	                                 pop rbp	      6466	screen.c	FUNCTION_32	ELSE_10
0x400645e	            0x415c	                                 pop r12	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006460	            0x415d	                                 pop r13	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006462	            0x415e	                                 pop r14	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006464	            0x415f	                                 pop r15	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006466	      0xe9d5d2ffff	                     jmp sym.screen_char	      6460	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0x400646b	       0xf1f440000	                   nop dword [rax + rax]	      6460	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0x4006470	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6303	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x4006475	        0x488d3402	                    lea rsi, [rdx + rax]	      6303	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x4006479	           0xfb706	                   movzx eax, word [rsi]	      6303	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0x400647c	      0x3dff000000	                           cmp eax, 0xff	      6304	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_22
0x4006481	     0xf8fd1000000	                            jg 0x4006558	      6304	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_22
0x4006487	            0xa802	                              test al, 2	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x4006489	      0xb801000000	                              mov eax, 1	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x400648e	        0x440f45c0	                         cmovne r8d, eax	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x4006492	      0xe967fdffff	                           jmp 0x40061fe	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x4006497	    0x660f1f840000	                    nop word [rax + rax]	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064a0	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064a4	          0x4189db	                           mov r11d, ebx	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064a7	          0x4489ca	                            mov edx, r9d	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064aa	          0x4401e0	                           add eax, r12d	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064ad	        0x89442428	             mov dword [rsp + 0x28], eax	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064b1	        0x4b8d041b	                    lea rax, [r11 + r11]	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064b5	      0x4889442410	             mov qword [rsp + 0x10], rax	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064ba	        0x488d0412	                    lea rax, [rdx + rdx]	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064be	      0x4889442420	             mov qword [rsp + 0x20], rax	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064c3	      0xe958fcffff	                           jmp 0x4006120	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064c8	     0xf1f84000000	                   nop dword [rax + rax]	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064d0	      0x4489542428	            mov dword [rsp + 0x28], r10d	      6307	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0x40064d5	          0x4489cf	                            mov edi, r9d	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064d8	      0x44894c2410	             mov dword [rsp + 0x10], r9d	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064dd	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064e1	    0xff1500000000	                 call qword [0x040064e7]	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064e7	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064ec	            0x89c1	                            mov ecx, eax	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064ee	            0x89c5	                            mov ebp, eax	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064f0	        0x468d2c20	                   lea r13d, [rax + r12]	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064f4	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064f9	      0xe979fbffff	                           jmp 0x4006077	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x40064fe	            0x6690	                                     nop	      6156	screen.c	FUNCTION_32	WHILE_2	IF_6
0x4006500	           0xfb708	                   movzx ecx, word [rax]	      6315	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0x4006503	          0x8d4301	                      lea eax, [rbx + 1]	      6315	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0x4006506	        0x66890c42	              mov word [rdx + rax*2], cx	      6315	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0x400650a	    0x8b0500000000	            mov eax, dword [0x04006510] 	      6317	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0x4006510	            0x85c0	                           test eax, eax	      6317	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0x4006512	     0xf84fdfcffff	                            je 0x4006215	      6317	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0x4006518	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x400651c	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x4006520	            0x89df	                            mov edi, ebx	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x4006522	      0x4489442410	             mov dword [rsp + 0x10], r8d	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x4006527	      0xe834d4ffff	                  call sym.screen_char_2	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x400652c	      0xe9f8fcffff	                           jmp 0x4006229	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x4006531	     0xf1f80000000	                         nop dword [rax]	      6318	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0x4006538	    0x488b05000000	            mov rax, qword [0x0400653f] 	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x400653f	        0x418d5101	                       lea edx, [r9 + 1]	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x4006543	         0xfb63410	             movzx esi, byte [rax + rdx]	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x4006547	          0x8d5301	                      lea edx, [rbx + 1]	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x400654a	        0x40883410	               mov byte [rax + rdx], sil	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x400654e	      0xe980fcffff	                           jmp 0x40061d3	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x4006553	       0xf1f440000	                   nop dword [rax + rax]	      6283	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0x4006558	            0x89c7	                            mov edi, eax	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x400655a	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x400655e	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006563	      0xe800000000	                          call 0x4006568	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006568	    0x488b15000000	            mov rdx, qword [0x0400656f] 	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x400656f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006574	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006578	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x400657d	          0x4801d6	                            add rsi, rdx	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006580	      0xe902ffffff	                           jmp 0x4006487	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006585	           0xf1f00	                         nop dword [rax]	      6305	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0x4006588	            0x89c7	                            mov edi, eax	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x400658a	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x400658f	      0x4489542428	            mov dword [rsp + 0x28], r10d	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x4006594	        0x894c2410	             mov dword [rsp + 0x10], ecx	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x4006598	      0xe800000000	                          call 0x400659d	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x400659d	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x40065a2	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x40065a7	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x40065ab	      0xe907fbffff	                           jmp 0x40060b7	      6174	screen.c	FUNCTION_32	WHILE_2	IF_7	CALL_5
0x40065b0	          0x83f901	                              cmp ecx, 1	      6261	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065b3	     0xf84ca040000	                            je 0x4006a83	      6261	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065b9	          0x83f902	                              cmp ecx, 2	      6263	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065bc	     0xf859cfbffff	                           jne 0x400615e	      6263	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065c2	      0x44894c246c	             mov dword [rsp + 0x6c], r9d	      6263	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065c7	      0x4889542460	             mov qword [rsp + 0x60], rdx	      6263	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065cc	            0x89df	                            mov edi, ebx	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065ce	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065d3	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065d7	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065dc	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065e0	    0xff1500000000	                 call qword [0x040065e6]	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065e6	          0x83f801	                              cmp eax, 1	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065e9	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065ee	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065f2	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065f7	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x40065fc	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006601	     0xf8557fbffff	                           jne 0x400615e	      6264	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006607	          0x8d7b01	                      lea edi, [rbx + 1]	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x400660a	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x400660e	      0xe98e040000	                           jmp 0x4006aa1	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006613	       0xf1f440000	                   nop dword [rax + rax]	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006618	      0x4439542418	           cmp dword [rsp + 0x18], r10d 	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400661d	     0xf8e19fbffff	                           jle 0x400613c	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006623	      0x44894c246c	             mov dword [rsp + 0x6c], r9d	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006628	      0x4889542460	             mov qword [rsp + 0x60], rdx	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400662d	            0x89df	                            mov edi, ebx	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400662f	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006634	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006638	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400663d	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006641	    0xff1500000000	                 call qword [0x04006647]	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006647	          0x83f801	                              cmp eax, 1	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400664a	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400664f	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006653	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006658	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400665d	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006662	     0xf8e94000000	                           jle 0x40066fc	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006668	    0x488b35000000	            mov rsi, qword [0x0400666f] 	      6237	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400666f	          0x8d4301	                      lea eax, [rbx + 1]	      6237	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006672	    0x41b801000000	                              mov r8d, 1	      6238	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006678	        0xc6040600	                 mov byte [rsi + rax], 0	      6237	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x400667c	    0x8b0500000000	            mov eax, dword [0x04006682] 	      6237	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0x4006682	      0x3dcc260000	                         cmp eax, 0x26cc	      6252	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x4006687	     0xf85bafaffff	                           jne 0x4006147	      6252	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x400668d	           0xf1f00	                         nop dword [rax]	      6252	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x4006690	    0x488b05000000	            mov rax, qword [0x04006697] 	      6253	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x4006697	         0xfb63410	             movzx esi, byte [rax + rdx]	      6253	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x400669b	        0x42883418	               mov byte [rax + r11], sil	      6253	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x400669f	      0xe9a3faffff	                           jmp 0x4006147	      6253	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x40066a4	         0xf1f4000	                         nop dword [rax]	      6253	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0x40066a8	        0x4183c402	                             add r12d, 2	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066ac	      0x4439642418	           cmp dword [rsp + 0x18], r12d 	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066b1	     0xf8e85faffff	                           jle 0x400613c	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066b7	      0x44894c246c	             mov dword [rsp + 0x6c], r9d	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066bc	      0x4889542460	             mov qword [rsp + 0x60], rdx	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066c1	            0x89df	                            mov edi, ebx	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066c3	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066c8	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066cc	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066d1	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066d5	    0xff1500000000	                 call qword [0x040066db]	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066db	          0x83f801	                              cmp eax, 1	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066de	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066e3	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066e7	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066ec	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066f1	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066f6	     0xf841b040000	                            je 0x4006b17	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x40066fc	    0x8b0500000000	            mov eax, dword [0x04006702] 	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006702	      0xe935faffff	                           jmp 0x400613c	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006707	    0x660f1f840000	                    nop word [rax + rax]	      6242	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006710	    0x488b05000000	            mov rax, qword [0x04006717] 	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006717	          0x4189db	                           mov r11d, ebx	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400671a	        0x4b8d3c1b	                    lea rdi, [r11 + r11]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400671e	      0x420fb73458	           movzx esi, word [rax + r11*2]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006723	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006728	          0x6685f6	                             test si, si	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400672b	     0xf840f010000	                            je 0x4006840	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006731	          0x4489ca	                            mov edx, r9d	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006734	        0x663b3450	              cmp si, word [rax + rdx*2]	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006738	        0x488d3c12	                    lea rdi, [rdx + rdx]	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400673c	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006741	     0xf84f9010000	                            je 0x4006940	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006747	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x400674b	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x400674f	      0x44894c2460	             mov dword [rsp + 0x60], r9d	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006754	      0x4489542458	            mov dword [rsp + 0x58], r10d	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006759	      0x4889542448	             mov qword [rsp + 0x48], rdx	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x400675e	      0x4c895c2440	             mov qword [rsp + 0x40], r11	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006763	          0x4401e0	                           add eax, r12d	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006766	        0x894c2408	                mov dword [rsp + 8], ecx	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x400676a	            0x89c6	                            mov esi, eax	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x400676c	        0x89442428	             mov dword [rsp + 0x28], eax	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006770	      0xe800000000	                          call 0x4006775	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0x4006775	    0x488b3d000000	            mov rdi, qword [0x0400677c] 	      6206	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_7
0x400677c	      0xe800000000	                          call 0x4006781	      6206	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_7
0x4006781	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x4006786	    0xc70500000000	         mov dword [0x04006790], 0x270f 	      9222	screen.c	FUNCTION_77
0x4006790	    0xc70500000000	         mov dword [0x0400679a], 0x270f 	      9222	screen.c	FUNCTION_77
0x400679a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x400679e	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067a3	      0x448b542458	           mov r10d, dword [rsp + 0x58] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067a8	          0x4585db	                         test r11d, r11d	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067ab	      0x448b4c2460	            mov r9d, dword [rsp + 0x60] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067b0	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067b5	            0x7e17	                           jle 0x40067ce	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067b7	    0x488b35000000	            mov rsi, qword [0x040067be] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067be	          0x8d43ff	                      lea eax, [rbx - 1]	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067c1	         0xfb70446	           movzx eax, word [rsi + rax*2]	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067c5	          0x6685c0	                             test ax, ax	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067c8	     0xf85b8030000	                           jne 0x4006b86	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x40067ce	    0xc70500000000	               mov dword [0x040067d8], 0	      6222	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	ELSE_2
0x40067d8	    0x41b801000000	                              mov r8d, 1	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40067de	    0xc74424080100	                  mov dword [rsp + 8], 1	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40067e6	      0xe935f9ffff	                           jmp 0x4006120	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40067eb	       0xf1f440000	                   nop dword [rax + rax]	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x40067f0	      0x448b4c2438	            mov r9d, dword [rsp + 0x38] 	      6431	screen.c	FUNCTION_32	IF_38
0x40067f5	      0x44036c242c	            add r13d, dword [rsp + 0x2c]	      6431	screen.c	FUNCTION_32	IF_38
0x40067fa	          0x4585c9	                           test r9d, r9d	      6431	screen.c	FUNCTION_32	IF_38
0x40067fd	     0xf8fcbfbffff	                            jg 0x40063ce	      6431	screen.c	FUNCTION_32	IF_38
0x4006803	        0x4883c478	                           add rsp, 0x78	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006807	              0x5b	                                 pop rbx	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006808	              0x5d	                                 pop rbp	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006809	            0x415c	                                 pop r12	      6466	screen.c	FUNCTION_32	ELSE_10
0x400680b	            0x415d	                                 pop r13	      6466	screen.c	FUNCTION_32	ELSE_10
0x400680d	            0x415e	                                 pop r14	      6466	screen.c	FUNCTION_32	ELSE_10
0x400680f	            0x415f	                                 pop r15	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006811	              0xc3	                                     ret	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006812	    0x660f1f440000	                    nop word [rax + rax]	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006818	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      6464	screen.c	FUNCTION_32	IF_38	ELSE_10
0x400681d	    0x488b05000000	            mov rax, qword [0x04006824] 	      6464	screen.c	FUNCTION_32	IF_38	ELSE_10
0x4006824	        0xc6041800	                 mov byte [rax + rbx], 0	      6464	screen.c	FUNCTION_32	IF_38	ELSE_10
0x4006828	        0x4883c478	                           add rsp, 0x78	      6466	screen.c	FUNCTION_32	ELSE_10
0x400682c	              0x5b	                                 pop rbx	      6466	screen.c	FUNCTION_32	ELSE_10
0x400682d	              0x5d	                                 pop rbp	      6466	screen.c	FUNCTION_32	ELSE_10
0x400682e	            0x415c	                                 pop r12	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006830	            0x415d	                                 pop r13	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006832	            0x415e	                                 pop r14	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006834	            0x415f	                                 pop r15	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006836	              0xc3	                                     ret	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006837	    0x660f1f840000	                    nop word [rax + rax]	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006840	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006844	          0x4489ca	                            mov edx, r9d	      6466	screen.c	FUNCTION_32	ELSE_10
0x4006847	    0xc74424080000	                  mov dword [rsp + 8], 0	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400684f	          0x4401e0	                           add eax, r12d	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006852	        0x89442428	             mov dword [rsp + 0x28], eax	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006856	        0x488d0412	                    lea rax, [rdx + rdx]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400685a	      0x4889442420	             mov qword [rsp + 0x20], rax	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400685f	      0xe9bcf8ffff	                           jmp 0x4006120	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006864	         0xf1f4000	                         nop dword [rax]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006868	    0x488b15000000	            mov rdx, qword [0x0400686f] 	      6353	screen.c	FUNCTION_32	IF_29	IF_30
0x400686f	    0xc70482000000	              mov dword [rdx + rax*4], 0	      6353	screen.c	FUNCTION_32	IF_29	IF_30
0x4006876	      0xe9a6faffff	                           jmp 0x4006321	      6353	screen.c	FUNCTION_32	IF_29	IF_30
0x400687b	       0xf1f440000	                   nop dword [rax + rax]	      6353	screen.c	FUNCTION_32	IF_29	IF_30
0x4006880	          0x4189e9	                            mov r9d, ebp	      6353	screen.c	FUNCTION_32	IF_29	IF_30
0x4006883	    0xc70500000000	               mov dword [0x0400688d], 0	      6335	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x400688d	          0x4489f3	                           mov ebx, r14d	      6335	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x4006890	            0x31ed	                            xor ebp, ebp	      6335	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x4006892	          0x4589c7	                           mov r15d, r8d	      6335	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x4006895	      0xe9a0f9ffff	                           jmp 0x400623a	      6335	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0x400689a	          0x4589ec	                          mov r12d, r13d	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x400689d	           0xf1f00	                         nop dword [rax]	      6370	screen.c	FUNCTION_32	IF_31	WHILE_3
0x40068a0	    0x448b3d000000	           mov r15d, dword [0x040068a7] 	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068a7	          0x4585ff	                         test r15d, r15d	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068aa	            0x7411	                            je 0x40068bd	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068ac	          0x4539e5	                          cmp r13d, r12d	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068af	     0xf8ccd000000	                            jl 0x4006982	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068b5	            0x85ed	                           test ebp, ebp	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068b7	     0xf84c5000000	                            je 0x4006982	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068bd	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068c1	        0x428d2c20	                    lea ebp, [rax + r12]	      6389	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x40068c5	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068c9	      0x448b7c2438	           mov r15d, dword [rsp + 0x38] 	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068ce	        0x4883ec08	                              sub rsp, 8	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068d2	      0x448b6c2434	           mov r13d, dword [rsp + 0x34] 	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068d7	            0x6a00	                                  push 0	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068d9	    0x41b920000000	                           mov r9d, 0x20	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068df	    0x41b820000000	                           mov r8d, 0x20	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068e5	            0x89ea	                            mov edx, ebp	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068e7	          0x8d7001	                      lea esi, [rax + 1]	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068ea	            0x89c7	                            mov edi, eax	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068ec	          0x4501fd	                          add r13d, r15d	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068ef	          0x4489e9	                           mov ecx, r13d	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068f2	      0xe800000000	                          call 0x40068f7	      6424	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0x40068f7	          0x4489f8	                           mov eax, r15d	      6426	screen.c	FUNCTION_32	IF_31	IF_32
0x40068fa	          0x4429e0	                           sub eax, r12d	      6426	screen.c	FUNCTION_32	IF_31	IF_32
0x40068fd	             0x1c3	                            add ebx, eax	      6426	screen.c	FUNCTION_32	IF_31	IF_32
0x40068ff	          0x4963c5	                        movsxd rax, r13d	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006902	    0x483b05000000	            cmp rax, qword [0x04006909] 	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006909	            0x415a	                                 pop r10	      6426	screen.c	FUNCTION_32	IF_31	IF_32
0x400690b	            0x415b	                                 pop r11	      6426	screen.c	FUNCTION_32	IF_31	IF_32
0x400690d	     0xf8d05ffffff	                           jge 0x4006818	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006913	      0xe9c6faffff	                           jmp 0x40063de	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006918	     0xf1f84000000	                   nop dword [rax + rax]	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006920	      0x4489442410	             mov dword [rsp + 0x10], r8d	      6434	screen.c	FUNCTION_32	IF_38	IF_39
0x4006925	          0x4489f3	                           mov ebx, r14d	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006928	      0xe800000000	                          call 0x400692d	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x400692d	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006932	          0x4189e9	                            mov r9d, ebp	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006935	            0x31ed	                            xor ebp, ebp	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006937	          0x4589c7	                           mov r15d, r8d	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x400693a	      0xe9fbf8ffff	                           jmp 0x400623a	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x400693f	              0x90	                                     nop	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006940	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      6338	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0x4006944	    0xc74424080000	                  mov dword [rsp + 8], 0	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400694c	          0x4401e0	                           add eax, r12d	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x400694f	        0x89442428	             mov dword [rsp + 0x28], eax	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006953	      0xe9c8f7ffff	                           jmp 0x4006120	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006958	     0xf1f84000000	                   nop dword [rax + rax]	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006960	    0x488b05000000	            mov rax, qword [0x04006967] 	      6457	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0x4006967	    0xc70490000000	              mov dword [rax + rdx*4], 0	      6457	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0x400696e	      0xe9dcfaffff	                           jmp 0x400644f	      6457	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0x4006973	      0xbf7c000000	                           mov edi, 0x7c	     10755	screen.c	FUNCTION_95	IF_1
0x4006978	      0xb87c000000	                           mov eax, 0x7c	     10756	screen.c	FUNCTION_95	IF_1
0x400697d	      0xe978faffff	                           jmp 0x40063fa	     10756	screen.c	FUNCTION_95	IF_1
0x4006982	    0x488b0d000000	            mov rcx, qword [0x04006989] 	      6391	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x4006989	         0xfb70c41	           movzx ecx, word [rcx + rax*2]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x400698d	    0x81f9ff000000	                           cmp ecx, 0xff	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006993	            0x89c8	                            mov eax, ecx	      6391	screen.c	FUNCTION_32	IF_31	IF_32	IF_33
0x4006995	     0xf8e6f010000	                           jle 0x4006b0a	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x400699b	    0x448b35000000	           mov r14d, dword [0x040069a2] 	      6396	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069a2	          0x4585f6	                         test r14d, r14d	      6396	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069a5	     0xf844f020000	                            je 0x4006bfa	      6396	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069ab	          0x8d43ff	                      lea eax, [rbx - 1]	      6399	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069ae	        0x803c0200	                 cmp byte [rdx + rax], 0	      6399	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069b2	     0xf851a020000	                           jne 0x4006bd2	      6399	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069b8	    0x8b1500000000	            mov edx, dword [0x040069be] 	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069be	      0xb902000000	                              mov ecx, 2	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069c3	      0xb802000000	                              mov eax, 2	      6399	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_35
0x40069c8	            0x85d2	                           test edx, edx	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069ca	     0xf840c020000	                            je 0x4006bdc	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069d0	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      6416	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069d4	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069d8	        0x428d2c27	                    lea ebp, [rdi + r12]	      6416	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x40069dc	            0x89df	                            mov edi, ebx	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069de	            0x29cf	                            sub edi, ecx	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069e0	            0x89ea	                            mov edx, ebp	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069e2	            0x29c2	                            sub edx, eax	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069e4	      0xe877cfffff	                  call sym.screen_char_2	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069e9	      0xe9d7feffff	                           jmp 0x40068c5	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069ee	            0x6690	                                     nop	      6415	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37	CALL_16
0x40069f0	    0x448b05000000	            mov r8d, dword [0x040069f7] 	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x40069f7	          0x4585c0	                           test r8d, r8d	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x40069fa	            0x741c	                            je 0x4006a18	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x40069fc	    0x4c8b05000000	              mov r8, qword [0x04006a03]	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a03	          0x83f87f	                           cmp eax, 0x7f	      6442	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a06	      0xbf00000000	                              mov edi, 0	      6442	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a0b	           0xf4ff8	                          cmovg edi, eax	      6442	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a0e	        0x413b3c90	             cmp edi, dword [r8 + rdx*4]	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a12	     0xf85fbf9ffff	                           jne 0x4006413	      6441	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a18	    0x4c8b05000000	              mov r8, qword [0x04006a1f]	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a1f	        0x488d3c12	                    lea rdi, [rdx + rdx]	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a23	      0x450fb70450	            movzx r8d, word [r8 + rdx*2]	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a28	          0x4439c1	                            cmp ecx, r8d	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a2b	     0xf85e6f9ffff	                           jne 0x4006417	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a31	      0xe9cdfdffff	                           jmp 0x4006803	      6444	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0x4006a36	            0x31d2	                            xor edx, edx	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4006a38	     0xf1f84000000	                   nop dword [rax + rax]	      6130	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0x4006a40	        0x8b5c242c	            mov ebx, dword [rsp + 0x2c] 	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a44	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a48	        0x4883ec08	                              sub rsp, 8	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a4c	            0x6a00	                                  push 0	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a4e	    0x41b920000000	                           mov r9d, 0x20	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a54	    0x41b820000000	                           mov r8d, 0x20	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a5a	      0x428d4c3301	                lea ecx, [rbx + r14 + 1]	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a5f	          0x8d7001	                      lea esi, [rax + 1]	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a62	             0x1da	                            add edx, ebx	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a64	            0x89c7	                            mov edi, eax	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a66	      0xe800000000	                          call 0x4006a6b	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a6b	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a70	    0x488b05000000	            mov rax, qword [0x04006a77] 	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a77	              0x5a	                                 pop rdx	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a78	           0x31c88	            add ebx, dword [rax + rcx*4]	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a7b	              0x59	                                 pop rcx	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a7c	            0x89d8	                            mov eax, ebx	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a7e	      0xe96bf5ffff	                           jmp 0x4005fee	      6140	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0x4006a83	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a87	      0x44894c246c	             mov dword [rsp + 0x6c], r9d	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a8c	            0x89df	                            mov edi, ebx	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a8e	      0x4889542460	             mov qword [rsp + 0x60], rdx	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a93	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a98	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006a9c	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6262	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006aa1	    0xff1500000000	                 call qword [0x04006aa7]	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006aa7	          0x83f801	                              cmp eax, 1	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006aaa	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006aaf	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ab3	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ab8	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006abd	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ac2	     0xf8e96f6ffff	                           jle 0x400615e	      6265	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ac8	    0xc74424540100	               mov dword [rsp + 0x54], 1	      6266	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ad0	      0xe989f6ffff	                           jmp 0x400615e	      6266	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0x4006ad5	          0x4589e5	                          mov r13d, r12d	      6152	screen.c	FUNCTION_32	WHILE_2
0x4006ad8	      0xbd01000000	                              mov ebp, 1	      6091	screen.c	FUNCTION_32
0x4006add	      0xe950f8ffff	                           jmp 0x4006332	      6091	screen.c	FUNCTION_32
0x4006ae2	      0x4439642438	           cmp dword [rsp + 0x38], r12d 	      6379	screen.c	FUNCTION_32	IF_31	IF_32
0x4006ae7	     0xf8fb3fdffff	                            jg 0x40068a0	      6379	screen.c	FUNCTION_32	IF_31	IF_32
0x4006aed	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	      6379	screen.c	FUNCTION_32	IF_31	IF_32
0x4006af2	          0x4501e5	                          add r13d, r12d	      6379	screen.c	FUNCTION_32	IF_31	IF_32
0x4006af5	      0xe9d4f8ffff	                           jmp 0x40063ce	      6379	screen.c	FUNCTION_32	IF_31	IF_32
0x4006afa	          0x4139d6	                           cmp r14d, edx	      6139	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0x4006afd	     0xf8d3dffffff	                           jge 0x4006a40	      6139	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0x4006b03	            0x89d8	                            mov eax, ebx	      6139	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0x4006b05	      0xe9e4f4ffff	                           jmp 0x4005fee	      6139	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0x4006b0a	            0xa802	                              test al, 2	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006b0c	     0xf8589feffff	                           jne 0x400699b	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006b12	      0xe9a6fdffff	                           jmp 0x40068bd	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006b17	      0x44894c246c	             mov dword [rsp + 0x6c], r9d	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006b1c	      0x4889542460	             mov qword [rsp + 0x60], rdx	      6392	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34
0x4006b21	          0x8d7b01	                      lea edi, [rbx + 1]	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b24	      0x4c895c2458	             mov qword [rsp + 0x58], r11	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b29	        0x894c2448	             mov dword [rsp + 0x48], ecx	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b2d	      0x4489442440	             mov dword [rsp + 0x40], r8d	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b32	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b36	    0xff1500000000	                 call qword [0x04006b3c]	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b3c	          0x83f801	                              cmp eax, 1	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b3f	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b44	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b48	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b4d	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b52	      0x448b4c246c	            mov r9d, dword [rsp + 0x6c] 	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b57	     0xf8e9ffbffff	                           jle 0x40066fc	      6243	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b5d	    0x488b35000000	            mov rsi, qword [0x04006b64] 	      6248	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b64	          0x8d4302	                      lea eax, [rbx + 2]	      6248	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b67	    0x41b801000000	                              mov r8d, 1	      6249	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b6d	        0xc6040600	                 mov byte [rsi + rax], 0	      6248	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b71	    0x8b0500000000	            mov eax, dword [0x04006b77] 	      6248	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b77	      0xe9c0f5ffff	                           jmp 0x400613c	      6248	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0x4006b7c	      0x44896c2438	            mov dword [rsp + 0x38], r13d	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006b81	      0xe93ef8ffff	                           jmp 0x40063c4	      6369	screen.c	FUNCTION_32	IF_31	WHILE_3
0x4006b86	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      6218	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0x4006b8a	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      6218	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0x4006b8e	      0x4c895c2408	                mov qword [rsp + 8], r11	      6218	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0x4006b93	        0x894c2440	             mov dword [rsp + 0x40], ecx	      6218	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0x4006b97	    0x890500000000	            mov dword [0x04006b9d], eax 	      6217	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0x4006b9d	      0xe800000000	                          call 0x4006ba2	      6218	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0x4006ba2	      0xe800000000	                          call 0x4006ba7	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006ba7	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bac	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bb1	    0x41b801000000	                              mov r8d, 1	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006bb7	    0xc74424080100	                  mov dword [rsp + 8], 1	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0x4006bbf	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bc3	      0x448b542458	           mov r10d, dword [rsp + 0x58] 	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bc8	      0x448b4c2460	            mov r9d, dword [rsp + 0x60] 	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bcd	      0xe94ef5ffff	                           jmp 0x4006120	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0x4006bd2	      0xb901000000	                              mov ecx, 1	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006bd7	      0xb801000000	                              mov eax, 1	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006bdc	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	      6420	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8
0x4006be0	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006be4	        0x428d2c27	                    lea ebp, [rdi + r12]	      6420	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8
0x4006be8	            0x89df	                            mov edi, ebx	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bea	            0x29cf	                            sub edi, ecx	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bec	            0x89ea	                            mov edx, ebp	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bee	            0x29c2	                            sub edx, eax	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bf0	      0xe84bcbffff	                    call sym.screen_char	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bf5	      0xe9cbfcffff	                           jmp 0x40068c5	      6419	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_8	CALL_17
0x4006bfa	    0x448b2d000000	           mov r13d, dword [0x04006c01] 	      6400	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c01	          0x4585ed	                         test r13d, r13d	      6400	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c04	            0x74cc	                            je 0x4006bd2	      6400	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c06	    0x488b05000000	            mov rax, qword [0x04006c0d] 	      6404	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c0d	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      6404	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c12	    0x8b2d00000000	            mov ebp, dword [0x04006c18] 	      6405	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c18	        0x448b2c88	           mov r13d, dword [rax + rcx*4]	      6404	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c1c	          0x4401ed	                           add ebp, r13d	      6405	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36
0x4006c1f	          0x4139dd	                           cmp r13d, ebx	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c22	            0x73ae	                           jae 0x4006bd2	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c24	         0xf1f4000	                         nop dword [rax]	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c28	          0x4489ef	                           mov edi, r13d	      6409	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c2b	            0x89ee	                            mov esi, ebp	      6409	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c2d	    0xff1500000000	                 call qword [0x04006c33]	      6409	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c33	          0x4101c5	                           add r13d, eax	      6410	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c36	            0x89c1	                            mov ecx, eax	      6410	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c38	          0x4139dd	                           cmp r13d, ebx	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c3b	            0x72eb	                            jb 0x4006c28	      6407	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	ELSE_7	IF_36	WHILE_4
0x4006c3d	    0x8b2d00000000	            mov ebp, dword [0x04006c43] 	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x4006c43	            0x85ed	                           test ebp, ebp	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x4006c45	            0x7495	                            je 0x4006bdc	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x4006c47	          0x83f801	                              cmp eax, 1	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x4006c4a	     0xf8f80fdffff	                            jg 0x40069d0	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
0x4006c50	            0xeb8a	                           jmp 0x4006bdc	      6414	screen.c	FUNCTION_32	IF_31	IF_32	IF_33	IF_34	IF_37
redraw_asap	functions,0:IF,15:DO,0:ELSE,0:CALL,25:FOR,6:WHILE,0:SWITCH,0	334
0x4012940	            0x4157	                                push r15	       298	screen.c	FUNCTION_8
0x4012942	            0x4156	                                push r14	       298	screen.c	FUNCTION_8
0x4012944	          0x4531f6	                          xor r14d, r14d	       314	screen.c	FUNCTION_8	IF_1
0x4012947	            0x4155	                                push r13	       298	screen.c	FUNCTION_8
0x4012949	            0x4154	                                push r12	       298	screen.c	FUNCTION_8
0x401294b	              0x55	                                push rbp	       298	screen.c	FUNCTION_8
0x401294c	              0x53	                                push rbx	       298	screen.c	FUNCTION_8
0x401294d	    0x4881ecb80000	                           sub rsp, 0xb8	       298	screen.c	FUNCTION_8
0x4012954	    0x64488b042528	                mov rax, qword fs:[0x28]	       298	screen.c	FUNCTION_8
0x401295d	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       298	screen.c	FUNCTION_8
0x4012965	            0x31c0	                            xor eax, eax	       298	screen.c	FUNCTION_8
0x4012967	    0x8b0500000000	            mov eax, dword [0x0401296d] 	       300	screen.c	FUNCTION_8
0x401296d	        0x89442460	             mov dword [rsp + 0x60], eax	       300	screen.c	FUNCTION_8
0x4012971	      0xe800000000	                          call 0x4012976	       312	screen.c	FUNCTION_8	CALL_1
0x4012976	    0x448b15000000	           mov r10d, dword [0x0401297d] 	       313	screen.c	FUNCTION_8	IF_1
0x401297d	          0x4585d2	                         test r10d, r10d	       313	screen.c	FUNCTION_8	IF_1
0x4012980	            0x751a	                           jne 0x401299c	       313	screen.c	FUNCTION_8	IF_1
0x4012982	    0x8b0500000000	            mov eax, dword [0x04012988] 	       313	screen.c	FUNCTION_8	IF_1
0x4012988	          0x80e4fe	                            and ah, 0xfe	       313	screen.c	FUNCTION_8	IF_1
0x401298b	          0x83f801	                              cmp eax, 1	       313	screen.c	FUNCTION_8	IF_1
0x401298e	            0x750c	                           jne 0x401299c	       313	screen.c	FUNCTION_8	IF_1
0x4012990	    0x448b0d000000	            mov r9d, dword [0x04012997] 	       313	screen.c	FUNCTION_8	IF_1
0x4012997	          0x4585c9	                           test r9d, r9d	       313	screen.c	FUNCTION_8	IF_1
0x401299a	            0x7434	                            je 0x40129d0	       313	screen.c	FUNCTION_8	IF_1
0x401299c	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       434	screen.c	FUNCTION_8
0x40129a4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       434	screen.c	FUNCTION_8
0x40129ad	          0x4489f0	                           mov eax, r14d	       434	screen.c	FUNCTION_8
0x40129b0	     0xf858e050000	                           jne 0x4012f44	       434	screen.c	FUNCTION_8
0x40129b6	    0x4881c4b80000	                           add rsp, 0xb8	       434	screen.c	FUNCTION_8
0x40129bd	              0x5b	                                 pop rbx	       434	screen.c	FUNCTION_8
0x40129be	              0x5d	                                 pop rbp	       434	screen.c	FUNCTION_8
0x40129bf	            0x415c	                                 pop r12	       434	screen.c	FUNCTION_8
0x40129c1	            0x415d	                                 pop r13	       434	screen.c	FUNCTION_8
0x40129c3	            0x415e	                                 pop r14	       434	screen.c	FUNCTION_8
0x40129c5	            0x415f	                                 pop r15	       434	screen.c	FUNCTION_8
0x40129c7	              0xc3	                                     ret	       434	screen.c	FUNCTION_8
0x40129c8	     0xf1f84000000	                   nop dword [rax + rax]	       434	screen.c	FUNCTION_8
0x40129d0	    0x8b0500000000	            mov eax, dword [0x040129d6] 	       317	screen.c	FUNCTION_8
0x40129d6	    0x2b0500000000	             sub eax, dword [0x040129dc]	       317	screen.c	FUNCTION_8
0x40129dc	            0x31f6	                            xor esi, esi	       318	screen.c	FUNCTION_8	CALL_2
0x40129de	        0x8b5c2460	            mov ebx, dword [rsp + 0x60] 	       318	screen.c	FUNCTION_8	CALL_2
0x40129e2	           0xfafd8	                           imul ebx, eax	       318	screen.c	FUNCTION_8	CALL_2
0x40129e5	        0x89442414	             mov dword [rsp + 0x14], eax	       317	screen.c	FUNCTION_8
0x40129e9	          0x4863db	                         movsxd rbx, ebx	       318	screen.c	FUNCTION_8	CALL_2
0x40129ec	          0x4889df	                            mov rdi, rbx	       318	screen.c	FUNCTION_8	CALL_2
0x40129ef	      0xe800000000	                          call 0x40129f4	       318	screen.c	FUNCTION_8	CALL_2
0x40129f4	        0x488d3c1b	                    lea rdi, [rbx + rbx]	       320	screen.c	FUNCTION_8	CALL_3
0x40129f8	          0x4989c7	                            mov r15, rax	       318	screen.c	FUNCTION_8	CALL_2
0x40129fb	            0x31f6	                            xor esi, esi	       320	screen.c	FUNCTION_8	CALL_3
0x40129fd	      0x4889442438	             mov qword [rsp + 0x38], rax	       318	screen.c	FUNCTION_8	CALL_2
0x4012a02	      0xe800000000	                          call 0x4012a07	       320	screen.c	FUNCTION_8	CALL_3
0x4012a07	          0x4d85ff	                           test r15, r15	       322	screen.c	FUNCTION_8	IF_2
0x4012a0a	      0x4889442440	             mov qword [rsp + 0x40], rax	       320	screen.c	FUNCTION_8	CALL_3
0x4012a0f	     0xf84fb030000	                            je 0x4012e10	       322	screen.c	FUNCTION_8	IF_2
0x4012a15	          0x4885c0	                           test rax, rax	       322	screen.c	FUNCTION_8	IF_2
0x4012a18	     0xf84f2030000	                            je 0x4012e10	       322	screen.c	FUNCTION_8	IF_2
0x4012a1e	    0x448b05000000	            mov r8d, dword [0x04012a25] 	       325	screen.c	FUNCTION_8	IF_3
0x4012a25	    0x48c744242000	               mov qword [rsp + 0x20], 0	       307	screen.c	FUNCTION_8
0x4012a2e	          0x4585c0	                           test r8d, r8d	       325	screen.c	FUNCTION_8	IF_3
0x4012a31	     0xf8569040000	                           jne 0x4012ea0	       325	screen.c	FUNCTION_8	IF_3
0x4012a37	    0x813d00000000	         cmp dword [0x04012a41], 0x26cc 	       339	screen.c	FUNCTION_8	IF_6
0x4012a41	    0x48c744245000	               mov qword [rsp + 0x50], 0	       309	screen.c	FUNCTION_8
0x4012a4a	     0xf84c8010000	                            je 0x4012c18	       339	screen.c	FUNCTION_8	IF_6
0x4012a50	        0x4183fe02	                             cmp r14d, 2	       348	screen.c	FUNCTION_8	IF_8
0x4012a54	     0xf84e6010000	                            je 0x4012c40	       348	screen.c	FUNCTION_8	IF_8
0x4012a5a	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012a5e	            0x85ff	                           test edi, edi	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012a60	     0xf8ec1040000	                           jle 0x4012f27	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012a66	      0x4c637c2460	         movsxd r15, dword [rsp + 0x60] 	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012a6b	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012a70	            0x31ed	                            xor ebp, ebp	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a72	            0x31db	                            xor ebx, ebx	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a74	        0x4b8d043f	                    lea rax, [r15 + r15]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a78	    0x4e8d24bd0000	                        lea r12, [r15*4]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a80	        0x48890424	                    mov qword [rsp], rax	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a84	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a89	      0x4889442408	                mov qword [rsp + 8], rax	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a8e	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a93	      0x4889442418	             mov qword [rsp + 0x18], rax	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a98	            0xeb37	                           jmp 0x4012ad1	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012a9a	    0x660f1f440000	                    nop word [rax + rax]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012aa0	    0x813d00000000	         cmp dword [0x04012aaa], 0x26cc 	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x4012aaa	     0xf8435010000	                            je 0x4012be5	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x4012ab0	          0x83c301	                              add ebx, 1	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012ab3	          0x4d01fe	                            add r14, r15	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012ab6	        0x488b0c24	                    mov rcx, qword [rsp]	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012aba	      0x4c017c2418	            add qword [rsp + 0x18], r15 	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012abf	      0x48014c2408	                add qword [rsp + 8], rcx	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012ac4	          0x4c01e5	                            add rbp, r12	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012ac7	        0x395c2414	            cmp dword [rsp + 0x14], ebx 	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012acb	     0xf84b7010000	                            je 0x4012c88	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x4012ad1	    0x8b0500000000	            mov eax, dword [0x04012ad7] 	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x4012ad7	    0x488b15000000	            mov rdx, qword [0x04012ade] 	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x4012ade	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_105	CALL_3
0x4012ae1	             0x1d8	                            add eax, ebx	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x4012ae3	            0x4898	                                    cdqe	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x4012ae5	          0x8b3482	            mov esi, dword [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012ae8	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_105	CALL_3
0x4012aeb	    0x480335000000	             add rsi, qword [0x04012af2]	        59	string3.h	FUNCTION_105	CALL_3
0x4012af2	      0xe800000000	                          call 0x4012af7	        59	string3.h	FUNCTION_105	CALL_3
0x4012af7	    0x8b0500000000	            mov eax, dword [0x04012afd] 	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x4012afd	    0x488b15000000	            mov rdx, qword [0x04012b04] 	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x4012b04	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b09	             0x1d8	                            add eax, ebx	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x4012b0b	            0x4898	                                    cdqe	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x4012b0d	          0x8b1482	            mov edx, dword [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b10	    0x488b05000000	            mov rax, qword [0x04012b17] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012b17	        0x488d3450	                  lea rsi, [rax + rdx*2]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b1b	        0x488b1424	                    mov rdx, qword [rsp]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b1f	      0xe800000000	                          call 0x4012b24	        59	string3.h	FUNCTION_105	CALL_3
0x4012b24	    0x8b3500000000	            mov esi, dword [0x04012b2a] 	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x4012b2a	            0x85f6	                           test esi, esi	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x4012b2c	     0xf846effffff	                            je 0x4012aa0	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x4012b32	    0x8b0500000000	            mov eax, dword [0x04012b38] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012b38	    0x488b15000000	            mov rdx, qword [0x04012b3f] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012b3f	             0x1d8	                            add eax, ebx	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012b41	            0x4898	                                    cdqe	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x4012b43	          0x8b1482	            mov edx, dword [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b46	    0x488b05000000	            mov rax, qword [0x04012b4d] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012b4d	        0x488d3490	                  lea rsi, [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b51	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012b56	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_105	CALL_3
0x4012b59	        0x488d3c28	                    lea rdi, [rax + rbp]	        59	string3.h	FUNCTION_105	CALL_3
0x4012b5d	      0xe800000000	                          call 0x4012b62	        59	string3.h	FUNCTION_105	CALL_3
0x4012b62	    0x48833d000000	               cmp qword [0x04012b6a], 0	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b6a	     0xf8e30ffffff	                           jle 0x4012aa0	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b70	      0x488d442470	                   lea rax, [rsp + 0x70]	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b75	    0x41bd01000000	                             mov r13d, 1	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b7b	      0x4c89742428	             mov qword [rsp + 0x28], r14	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b80	          0x4d89ee	                            mov r14, r13	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b83	          0x4989c5	                            mov r13, rax	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012b90	    0x8b0500000000	            mov eax, dword [0x04012b96] 	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4012b96	    0x488b15000000	            mov rdx, qword [0x04012b9d] 	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4012b9d	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_105	CALL_3
0x4012ba0	      0x4b037cf5f8	        add rdi, qword [r13 + r14*8 - 8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012ba5	             0x1d8	                            add eax, ebx	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4012ba7	            0x4898	                                    cdqe	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4012ba9	          0x8b1482	            mov edx, dword [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012bac	    0x4a8b04f50000	                  mov rax, qword [r14*8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012bb4	        0x488d3490	                  lea rsi, [rax + rdx*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012bb8	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_105	CALL_3
0x4012bbb	      0xe800000000	                          call 0x4012bc0	        59	string3.h	FUNCTION_105	CALL_3
0x4012bc0	          0x4c89f0	                            mov rax, r14	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012bc3	        0x4983c601	                              add r14, 1	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012bc7	    0x483b05000000	            cmp rax, qword [0x04012bce] 	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012bce	            0x7cc0	                            jl 0x4012b90	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4012bd0	    0x813d00000000	         cmp dword [0x04012bda], 0x26cc 	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x4012bda	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x4012bdf	     0xf85cbfeffff	                           jne 0x4012ab0	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x4012be5	    0x8b0500000000	            mov eax, dword [0x04012beb] 	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x4012beb	    0x488b15000000	            mov rdx, qword [0x04012bf2] 	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x4012bf2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012bf7	             0x1d8	                            add eax, ebx	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x4012bf9	            0x4898	                                    cdqe	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x4012bfb	          0x8b3482	            mov esi, dword [rdx + rax*4]	        59	string3.h	FUNCTION_105	CALL_3
0x4012bfe	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_105	CALL_3
0x4012c01	    0x480335000000	             add rsi, qword [0x04012c08]	        59	string3.h	FUNCTION_105	CALL_3
0x4012c08	      0xe800000000	                          call 0x4012c0d	        59	string3.h	FUNCTION_105	CALL_3
0x4012c0d	      0xe99efeffff	                           jmp 0x4012ab0	        59	string3.h	FUNCTION_105	CALL_3
0x4012c12	    0x660f1f440000	                    nop word [rax + rax]	        59	string3.h	FUNCTION_105	CALL_3
0x4012c18	            0x31f6	                            xor esi, esi	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x4012c1a	          0x4889df	                            mov rdi, rbx	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x4012c1d	      0xe800000000	                          call 0x4012c22	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x4012c22	          0x4885c0	                           test rax, rax	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x4012c25	      0x4889442450	             mov qword [rsp + 0x50], rax	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x4012c2a	     0xf8520feffff	                           jne 0x4012a50	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x4012c30	    0x41be02000000	                             mov r14d, 2	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x4012c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x4012c40	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       415	screen.c	FUNCTION_8	CALL_19
0x4012c45	      0xe800000000	                          call 0x4012c4a	       415	screen.c	FUNCTION_8	CALL_19
0x4012c4a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       416	screen.c	FUNCTION_8	CALL_20
0x4012c4f	      0xe800000000	                          call 0x4012c54	       416	screen.c	FUNCTION_8	CALL_20
0x4012c54	    0x8b1500000000	            mov edx, dword [0x04012c5a] 	       418	screen.c	FUNCTION_8	IF_14
0x4012c5a	            0x85d2	                           test edx, edx	       418	screen.c	FUNCTION_8	IF_14
0x4012c5c	     0xf85ee010000	                           jne 0x4012e50	       418	screen.c	FUNCTION_8	IF_14
0x4012c62	    0x813d00000000	         cmp dword [0x04012c6c], 0x26cc 	       424	screen.c	FUNCTION_8	IF_15
0x4012c6c	     0xf84a6020000	                            je 0x4012f18	       424	screen.c	FUNCTION_8	IF_15
0x4012c72	      0xe800000000	                          call 0x4012c77	       429	screen.c	FUNCTION_8	CALL_24
0x4012c77	            0x31ff	                            xor edi, edi	      9485	screen.c	FUNCTION_79	CALL_1
0x4012c79	      0xe800000000	                          call 0x4012c7e	      9485	screen.c	FUNCTION_79	CALL_1
0x4012c7e	      0xe919fdffff	                           jmp 0x401299c	       433	screen.c	FUNCTION_8
0x4012c83	       0xf1f440000	                   nop dword [rax + rax]	       433	screen.c	FUNCTION_8
0x4012c88	            0x31ff	                            xor edi, edi	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x4012c8a	    0x41be03000000	                             mov r14d, 3	       378	screen.c	FUNCTION_8	IF_8
0x4012c90	      0xe800000000	                          call 0x4012c95	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x4012c95	    0x8b0500000000	            mov eax, dword [0x04012c9b] 	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x4012c9b	            0x85c0	                           test eax, eax	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x4012c9d	            0x75a1	                           jne 0x4012c40	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x4012c9f	    0x488b3d000000	            mov rdi, qword [0x04012ca6] 	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x4012ca6	    0x4e8d2cbd0000	                        lea r13, [r15*4]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cae	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cb3	            0x31db	                            xor ebx, ebx	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cb5	            0x31ed	                            xor ebp, ebp	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cb7	          0x4889f8	                            mov rax, rdi	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cba	    0x482b05000000	             sub rax, qword [0x04012cc1]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cc1	            0x4898	                                    cdqe	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cc3	        0x488d0c00	                    lea rcx, [rax + rax]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cc7	      0x4889442468	             mov qword [rsp + 0x68], rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012ccc	        0x48c1e002	                              shl rax, 2	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cd0	      0x4889442448	             mov qword [rsp + 0x48], rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cd5	        0x4b8d043f	                    lea rax, [r15 + r15]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cd9	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cde	      0x4889442428	             mov qword [rsp + 0x28], rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012ce3	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012ce8	      0x4889442408	                mov qword [rsp + 8], rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012ced	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cf2	      0x4889442418	             mov qword [rsp + 0x18], rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cf7	            0xeb58	                           jmp 0x4012d51	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012cf9	     0xf1f80000000	                         nop dword [rax]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x4012d00	    0x813d00000000	         cmp dword [0x04012d0a], 0x26cc 	       404	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13
0x4012d0a	     0xf8410010000	                            je 0x4012e20	       404	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13
0x4012d10	    0x8b3d00000000	            mov edi, dword [0x04012d16] 	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d16	        0x8b542460	            mov edx, dword [rsp + 0x60] 	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d1a	          0x4531c0	                            xor r8d, r8d	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d1d	            0x31f6	                            xor esi, esi	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d1f	          0x4d01fe	                            add r14, r15	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d22	          0x4c01eb	                            add rbx, r13	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d25	             0x1ef	                            add edi, ebp	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d27	            0x89d1	                            mov ecx, edx	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d29	          0x83c501	                              add ebp, 1	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x4012d2c	      0xe800000000	                          call 0x4012d31	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d31	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d36	      0x4c017c2418	            add qword [rsp + 0x18], r15 	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d3b	      0x48014c2408	                add qword [rsp + 8], rcx	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x4012d40	        0x396c2414	            cmp dword [rsp + 0x14], ebp 	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x4012d44	     0xf8ef6000000	                           jle 0x4012e40	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x4012d4a	    0x488b3d000000	            mov rdi, qword [0x04012d51] 	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x4012d51	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_105	CALL_3
0x4012d54	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_105	CALL_3
0x4012d57	      0xe800000000	                          call 0x4012d5c	        59	string3.h	FUNCTION_105	CALL_3
0x4012d5c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012d61	    0x48033d000000	             add rdi, qword [0x04012d68]	        59	string3.h	FUNCTION_105	CALL_3
0x4012d68	        0x488b1424	                    mov rdx, qword [rsp]	        59	string3.h	FUNCTION_105	CALL_3
0x4012d6c	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012d71	      0xe800000000	                          call 0x4012d76	        59	string3.h	FUNCTION_105	CALL_3
0x4012d76	    0x8b0d00000000	            mov ecx, dword [0x04012d7c] 	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x4012d7c	            0x85c9	                           test ecx, ecx	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x4012d7e	            0x7480	                            je 0x4012d00	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x4012d80	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012d85	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012d8a	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_105	CALL_3
0x4012d8d	    0x48033d000000	             add rdi, qword [0x04012d94]	        59	string3.h	FUNCTION_105	CALL_3
0x4012d94	        0x488d3418	                    lea rsi, [rax + rbx]	        59	string3.h	FUNCTION_105	CALL_3
0x4012d98	      0xe800000000	                          call 0x4012d9d	        59	string3.h	FUNCTION_105	CALL_3
0x4012d9d	    0x48833d000000	               cmp qword [0x04012da5], 0	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012da5	     0xf8e55ffffff	                           jle 0x4012d00	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dab	      0x488d442470	                   lea rax, [rsp + 0x70]	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012db0	        0x896c2464	             mov dword [rsp + 0x64], ebp	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012db4	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012db9	    0x41bc01000000	                             mov r12d, 1	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dbf	      0x4c89742458	             mov qword [rsp + 0x58], r14	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dc4	          0x4d89e6	                            mov r14, r12	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dc7	          0x4989c4	                            mov r12, rax	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dca	    0x660f1f440000	                    nop word [rax + rax]	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dd0	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_105	CALL_3
0x4012dd3	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_105	CALL_3
0x4012dd6	      0x4b0374f4f8	        add rsi, qword [r12 + r14*8 - 8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012ddb	    0x4a033cf50000	                  add rdi, qword [r14*8]	        59	string3.h	FUNCTION_105	CALL_3
0x4012de3	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_105	CALL_3
0x4012de6	      0xe800000000	                          call 0x4012deb	        59	string3.h	FUNCTION_105	CALL_3
0x4012deb	          0x4c89f0	                            mov rax, r14	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dee	        0x4983c601	                              add r14, 1	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012df2	    0x483b05000000	            cmp rax, qword [0x04012df9] 	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012df9	            0x7cd5	                            jl 0x4012dd0	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012dfb	      0x4c8b742458	            mov r14, qword [rsp + 0x58] 	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012e00	        0x8b6c2464	            mov ebp, dword [rsp + 0x64] 	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012e04	      0xe9f7feffff	                           jmp 0x4012d00	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012e09	     0xf1f80000000	                         nop dword [rax]	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x4012e10	    0x41be02000000	                             mov r14d, 2	       323	screen.c	FUNCTION_8	IF_2
0x4012e16	      0xe903fcffff	                           jmp 0x4012a1e	       323	screen.c	FUNCTION_8	IF_2
0x4012e1b	       0xf1f440000	                   nop dword [rax + rax]	       323	screen.c	FUNCTION_8	IF_2
0x4012e20	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012e25	    0x48033d000000	             add rdi, qword [0x04012e2c]	        59	string3.h	FUNCTION_105	CALL_3
0x4012e2c	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_105	CALL_3
0x4012e2f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_105	CALL_3
0x4012e34	      0xe800000000	                          call 0x4012e39	        59	string3.h	FUNCTION_105	CALL_3
0x4012e39	      0xe9d2feffff	                           jmp 0x4012d10	        59	string3.h	FUNCTION_105	CALL_3
0x4012e3e	            0x6690	                                     nop	        59	string3.h	FUNCTION_105	CALL_3
0x4012e40	    0x41be04000000	                             mov r14d, 4	       411	screen.c	FUNCTION_8	IF_8	IF_11
0x4012e46	      0xe9f5fdffff	                           jmp 0x4012c40	       411	screen.c	FUNCTION_8	IF_8	IF_11
0x4012e4b	       0xf1f440000	                   nop dword [rax + rax]	       411	screen.c	FUNCTION_8	IF_8	IF_11
0x4012e50	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       420	screen.c	FUNCTION_8	IF_14	CALL_21
0x4012e55	      0xe800000000	                          call 0x4012e5a	       420	screen.c	FUNCTION_8	IF_14	CALL_21
0x4012e5a	    0x48833d000000	               cmp qword [0x04012e62], 0	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e62	     0xf8efafdffff	                           jle 0x4012c62	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e68	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e6d	      0xbb01000000	                              mov ebx, 1	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e72	    0x660f1f440000	                    nop word [rax + rax]	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e78	      0x488b7cddf8	        mov rdi, qword [rbp + rbx*8 - 8]	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x4012e7d	      0xe800000000	                          call 0x4012e82	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x4012e82	          0x4889d8	                            mov rax, rbx	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e85	        0x4883c301	                              add rbx, 1	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e89	    0x483b05000000	            cmp rax, qword [0x04012e90] 	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e90	            0x7ce6	                            jl 0x4012e78	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e92	      0xe9cbfdffff	                           jmp 0x4012c62	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012e97	    0x660f1f840000	                    nop word [rax + rax]	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x4012ea0	    0x4c8d249d0000	                        lea r12, [rbx*4]	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x4012ea8	            0x31f6	                            xor esi, esi	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x4012eaa	          0x4c89e7	                            mov rdi, r12	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x4012ead	      0xe800000000	                          call 0x4012eb2	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x4012eb2	          0x4885c0	                           test rax, rax	       330	screen.c	FUNCTION_8	IF_3	IF_4
0x4012eb5	      0x4889442420	             mov qword [rsp + 0x20], rax	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x4012eba	      0xb802000000	                              mov eax, 2	       330	screen.c	FUNCTION_8	IF_3	IF_4
0x4012ebf	        0x440f44f0	                         cmove r14d, eax	       330	screen.c	FUNCTION_8	IF_3	IF_4
0x4012ec3	    0x48833d000000	               cmp qword [0x04012ecb], 0	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012ecb	     0xf8e66fbffff	                           jle 0x4012a37	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012ed1	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012ed6	    0x41bf01000000	                             mov r15d, 1	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012edc	    0x41bd02000000	                             mov r13d, 2	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x4012ee2	    0x660f1f440000	                    nop word [rax + rax]	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x4012ee8	            0x31f6	                            xor esi, esi	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x4012eea	          0x4c89e7	                            mov rdi, r12	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x4012eed	      0xe800000000	                          call 0x4012ef2	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x4012ef2	          0x4885c0	                           test rax, rax	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x4012ef5	      0x4a8944fdf8	        mov qword [rbp + r15*8 - 8], rax	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x4012efa	          0x4c89f8	                            mov rax, r15	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012efd	        0x450f44f5	                        cmove r14d, r13d	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x4012f01	        0x4983c701	                              add r15, 1	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x4012f05	    0x483b05000000	            cmp rax, qword [0x04012f0c] 	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012f0c	            0x7cda	                            jl 0x4012ee8	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012f0e	      0xe924fbffff	                           jmp 0x4012a37	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012f13	       0xf1f440000	                   nop dword [rax + rax]	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x4012f18	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       425	screen.c	FUNCTION_8	CALL_23
0x4012f1d	      0xe800000000	                          call 0x4012f22	       425	screen.c	FUNCTION_8	CALL_23
0x4012f22	      0xe94bfdffff	                           jmp 0x4012c72	       425	screen.c	FUNCTION_8	CALL_23
0x4012f27	            0x31ff	                            xor edi, edi	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x4012f29	      0xe800000000	                          call 0x4012f2e	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x4012f2e	    0x833d00000000	               cmp dword [0x04012f35], 1	       378	screen.c	FUNCTION_8	IF_8
0x4012f35	          0x4519f6	                          sbb r14d, r14d	       378	screen.c	FUNCTION_8	IF_8
0x4012f38	          0x41f7d6	                                not r14d	       378	screen.c	FUNCTION_8	IF_8
0x4012f3b	        0x4183c604	                             add r14d, 4	       378	screen.c	FUNCTION_8	IF_8
0x4012f3f	      0xe9fcfcffff	                           jmp 0x4012c40	       378	screen.c	FUNCTION_8	IF_8
0x4012f44	      0xe800000000	                          call 0x4012f49	       434	screen.c	FUNCTION_8
draw_tabline	functions,0:IF,21:DO,0:ELSE,4:CALL,29:FOR,3:WHILE,2:SWITCH,0	388
0x40087b0	            0x4157	                                push r15	     10503	screen.c	FUNCTION_92
0x40087b2	            0x4156	                                push r14	     10503	screen.c	FUNCTION_92
0x40087b4	            0x4155	                                push r13	     10503	screen.c	FUNCTION_92
0x40087b6	            0x4154	                                push r12	     10503	screen.c	FUNCTION_92
0x40087b8	              0x55	                                push rbp	     10503	screen.c	FUNCTION_92
0x40087b9	              0x53	                                push rbx	     10503	screen.c	FUNCTION_92
0x40087ba	        0x4883ec38	                           sub rsp, 0x38	     10503	screen.c	FUNCTION_92
0x40087be	    0x833d00000000	               cmp dword [0x040087c5], 7	     10526	screen.c	FUNCTION_92
0x40087c5	    0xc74424240000	               mov dword [rsp + 0x24], 0	     10526	screen.c	FUNCTION_92
0x40087cd	            0x7f10	                            jg 0x40087df	     10526	screen.c	FUNCTION_92
0x40087cf	    0x448b05000000	            mov r8d, dword [0x040087d6] 	     10523	screen.c	FUNCTION_92
0x40087d6	          0x4585c0	                           test r8d, r8d	     10523	screen.c	FUNCTION_92
0x40087d9	     0xf84dc000000	                            je 0x40088bb	     10523	screen.c	FUNCTION_92
0x40087df	    0x48833d000000	               cmp qword [0x040087e7], 0	     10530	screen.c	FUNCTION_92	IF_1
0x40087e7	     0xf84a6000000	                            je 0x4008893	     10530	screen.c	FUNCTION_92	IF_1
0x40087ed	    0x8b0500000000	            mov eax, dword [0x040087f3] 	     10516	screen.c	FUNCTION_92	CALL_1
0x40087f3	    0xc70500000000	               mov dword [0x040087fd], 0	     10532	screen.c	FUNCTION_92
0x40087fd	        0x89442428	             mov dword [rsp + 0x28], eax	     10516	screen.c	FUNCTION_92	CALL_1
0x4008801	    0x8b0500000000	            mov eax, dword [0x04008807] 	     10517	screen.c	FUNCTION_92	CALL_2
0x4008807	        0x89442418	             mov dword [rsp + 0x18], eax	     10517	screen.c	FUNCTION_92	CALL_2
0x400880b	    0x8b0500000000	            mov eax, dword [0x04008811] 	     10518	screen.c	FUNCTION_92	CALL_3
0x4008811	        0x8944242c	             mov dword [rsp + 0x2c], eax	     10518	screen.c	FUNCTION_92	CALL_3
0x4008815	      0xe800000000	                          call 0x400881a	     10536	screen.c	FUNCTION_92	IF_2	CALL_4
0x400881a	            0x85c0	                           test eax, eax	     10536	screen.c	FUNCTION_92	IF_2	CALL_4
0x400881c	            0x89c3	                            mov ebx, eax	     10536	screen.c	FUNCTION_92	IF_2	CALL_4
0x400881e	     0xf8584000000	                           jne 0x40088a8	     10536	screen.c	FUNCTION_92	IF_2	CALL_4
0x4008824	      0xe800000000	                          call 0x4008829	     10543	screen.c	FUNCTION_92	IF_3	CALL_6
0x4008829	            0x85c0	                           test eax, eax	     10543	screen.c	FUNCTION_92	IF_3	CALL_6
0x400882b	            0x7e66	                           jle 0x4008893	     10543	screen.c	FUNCTION_92	IF_3	CALL_6
0x400882d	    0x488b0d000000	            mov rcx, qword [0x04008834] 	     10549	screen.c	FUNCTION_92	FOR_1
0x4008834	    0x488b05000000	            mov rax, qword [0x0400883b] 	     10549	screen.c	FUNCTION_92	FOR_1
0x400883b	          0x4885c9	                           test rcx, rcx	     10549	screen.c	FUNCTION_92	FOR_1
0x400883e	        0x488d1448	                  lea rdx, [rax + rcx*2]	     10549	screen.c	FUNCTION_92	FOR_1
0x4008842	            0x7e13	                           jle 0x4008857	     10549	screen.c	FUNCTION_92	FOR_1
0x4008844	         0xf1f4000	                         nop dword [rax]	     10549	screen.c	FUNCTION_92	FOR_1
0x4008848	            0x31f6	                            xor esi, esi	     10550	screen.c	FUNCTION_92	FOR_1
0x400884a	        0x4883c002	                              add rax, 2	     10550	screen.c	FUNCTION_92	FOR_1
0x400884e	        0x668970fe	                  mov word [rax - 2], si	     10550	screen.c	FUNCTION_92	FOR_1
0x4008852	          0x4839d0	                            cmp rax, rdx	     10549	screen.c	FUNCTION_92	FOR_1
0x4008855	            0x75f1	                           jne 0x4008848	     10549	screen.c	FUNCTION_92	FOR_1
0x4008857	    0x488b05000000	            mov rax, qword [0x0400885e] 	     10553	screen.c	FUNCTION_92	IF_4
0x400885e	          0x803800	                       cmp byte [rax], 0	     10553	screen.c	FUNCTION_92	IF_4
0x4008861	            0x746e	                            je 0x40088d1	     10553	screen.c	FUNCTION_92	IF_4
0x4008863	    0x8b0d00000000	            mov ecx, dword [0x04008869] 	      7155	screen.c	FUNCTION_46	IF_1
0x4008869	    0x8b2d00000000	            mov ebp, dword [0x0400886f] 	     10555	screen.c	FUNCTION_92	IF_4
0x400886f	    0xc70500000000	               mov dword [0x04008879], 0	     10559	screen.c	FUNCTION_92	IF_4
0x4008879	            0x85c9	                           test ecx, ecx	      7155	screen.c	FUNCTION_46	IF_1
0x400887b	     0xf8410050000	                            je 0x4008d91	      7155	screen.c	FUNCTION_46	IF_1
0x4008881	             0x9eb	                             or ebx, ebp	     10564	screen.c	FUNCTION_92	IF_4
0x4008883	    0x891d00000000	            mov dword [0x04008889], ebx 	     10564	screen.c	FUNCTION_92	IF_4
0x4008889	    0xc70500000000	               mov dword [0x04008893], 0	     10684	screen.c	FUNCTION_92
0x4008893	        0x4883c438	                           add rsp, 0x38	     10685	screen.c	FUNCTION_92
0x4008897	              0x5b	                                 pop rbx	     10685	screen.c	FUNCTION_92
0x4008898	              0x5d	                                 pop rbp	     10685	screen.c	FUNCTION_92
0x4008899	            0x415c	                                 pop r12	     10685	screen.c	FUNCTION_92
0x400889b	            0x415d	                                 pop r13	     10685	screen.c	FUNCTION_92
0x400889d	            0x415e	                                 pop r14	     10685	screen.c	FUNCTION_92
0x400889f	            0x415f	                                 pop r15	     10685	screen.c	FUNCTION_92
0x40088a1	              0xc3	                                     ret	     10685	screen.c	FUNCTION_92
0x40088a2	    0x660f1f440000	                    nop word [rax + rax]	     10685	screen.c	FUNCTION_92
0x40088a8	        0x4883c438	                           add rsp, 0x38	     10685	screen.c	FUNCTION_92
0x40088ac	              0x5b	                                 pop rbx	     10685	screen.c	FUNCTION_92
0x40088ad	              0x5d	                                 pop rbp	     10685	screen.c	FUNCTION_92
0x40088ae	            0x415c	                                 pop r12	     10685	screen.c	FUNCTION_92
0x40088b0	            0x415d	                                 pop r13	     10685	screen.c	FUNCTION_92
0x40088b2	            0x415e	                                 pop r14	     10685	screen.c	FUNCTION_92
0x40088b4	            0x415f	                                 pop r15	     10685	screen.c	FUNCTION_92
0x40088b6	      0xe900000000	                           jmp 0x40088bb	     10538	screen.c	FUNCTION_92	IF_2	CALL_5
0x40088bb	    0x8b3d00000000	            mov edi, dword [0x040088c1] 	     10526	screen.c	FUNCTION_92
0x40088c1	            0x31c0	                            xor eax, eax	     10526	screen.c	FUNCTION_92
0x40088c3	            0x85ff	                           test edi, edi	     10526	screen.c	FUNCTION_92
0x40088c5	           0xf94c0	                                 sete al	     10526	screen.c	FUNCTION_92
0x40088c8	        0x89442424	             mov dword [rsp + 0x24], eax	     10526	screen.c	FUNCTION_92
0x40088cc	      0xe90effffff	                           jmp 0x40087df	     10526	screen.c	FUNCTION_92
0x40088d1	    0x4c8b35000000	            mov r14, qword [0x040088d8] 	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088d8	          0x4d85f6	                           test r14, r14	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088db	     0xf84f1040000	                            je 0x4008dd2	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088e1	          0x4c89f0	                            mov rax, r14	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088e4	            0x31f6	                            xor esi, esi	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088f0	          0x488b00	                    mov rax, qword [rax]	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088f3	          0x83c601	                              add esi, 1	     10570	screen.c	FUNCTION_92	ELSE_1
0x40088f6	          0x4885c0	                           test rax, rax	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088f9	            0x75f5	                           jne 0x40088f0	     10569	screen.c	FUNCTION_92	ELSE_1	CALL_9
0x40088fb	            0x89f0	                            mov eax, esi	     10572	screen.c	FUNCTION_92	ELSE_1
0x40088fd	          0x4863f6	                         movsxd rsi, esi	     10572	screen.c	FUNCTION_92	ELSE_1
0x4008900	            0xd1f8	                              sar eax, 1	     10572	screen.c	FUNCTION_92	ELSE_1
0x4008902	            0x4898	                                    cdqe	     10572	screen.c	FUNCTION_92	ELSE_1
0x4008904	      0x488d4401ff	                lea rax, [rcx + rax - 1]	     10572	screen.c	FUNCTION_92	ELSE_1
0x4008909	            0x4899	                                     cqo	     10572	screen.c	FUNCTION_92	ELSE_1
0x400890b	          0x48f7fe	                                idiv rsi	     10572	screen.c	FUNCTION_92	ELSE_1
0x400890e	      0xba06000000	                              mov edx, 6	     10574	screen.c	FUNCTION_92	ELSE_1	IF_6
0x4008913	          0x83f805	                              cmp eax, 5	     10574	screen.c	FUNCTION_92	ELSE_1	IF_6
0x4008916	           0xf4fd0	                          cmovg edx, eax	     10574	screen.c	FUNCTION_92	ELSE_1	IF_6
0x4008919	        0x4883f904	                              cmp rcx, 4	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x400891d	        0x8954241c	             mov dword [rsp + 0x1c], edx	     10574	screen.c	FUNCTION_92	ELSE_1	IF_6
0x4008921	     0xf8eab040000	                           jle 0x4008dd2	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008927	       0xfb6442424	           movzx eax, byte [rsp + 0x24] 	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x400892c	    0xc74424040000	                  mov dword [rsp + 4], 0	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008934	    0x41bc01000000	                             mov r12d, 1	     10608	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3	IF_11
0x400893a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008942	          0x83e001	                              and eax, 1	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008945	        0x88442423	               mov byte [rsp + 0x23], al	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008949	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x400894d	        0x89442408	                mov dword [rsp + 8], eax	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008951	    0x488b05000000	            mov rax, qword [0x04008958] 	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008958	        0x49394608	                cmp qword [r14 + 8], rax	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x400895c	     0xf843a020000	                            je 0x4008b9c	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008962	    0x660f1f440000	                    nop word [rax + rax]	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008968	        0x8b542404	                mov edx, dword [rsp + 4]	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x400896c	            0x85d2	                           test edx, edx	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x400896e	     0xf8e4c020000	                           jle 0x4008bc0	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008974	      0x807c242300	                cmp byte [rsp + 0x23], 0	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008979	     0xf8441020000	                            je 0x4008bc0	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x400897f	        0x8b442404	                mov eax, dword [rsp + 4]	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x4008983	      0x448b7c2408	               mov r15d, dword [rsp + 8]	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x4008988	            0x31f6	                            xor esi, esi	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x400898a	      0xbf7c000000	                           mov edi, 0x7c	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x400898f	            0x89c2	                            mov edx, eax	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x4008991	          0x4489f9	                           mov ecx, r15d	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x4008994	          0x8d5801	                      lea ebx, [rax + 1]	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x4008997	      0xe800000000	                          call 0x400899c	     10587	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_10
0x400899c	    0x488b05000000	            mov rax, qword [0x040089a3] 	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x40089a3	        0x49394608	                cmp qword [r14 + 8], rax	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x40089a7	          0x4489f8	                           mov eax, r15d	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x40089aa	       0xf45442418	          cmovne eax, dword [rsp + 0x18]	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x40089af	        0x89442408	                mov dword [rsp + 8], eax	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x40089b3	        0x8b4c2408	                mov ecx, dword [rsp + 8]	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089b7	            0x31f6	                            xor esi, esi	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089b9	            0x89da	                            mov edx, ebx	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089bb	      0xbf20000000	                           mov edi, 0x20	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089c0	          0x8d6b01	                      lea ebp, [rbx + 1]	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089c3	      0xe800000000	                          call 0x40089c8	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x40089c8	    0x4c3935000000	            cmp qword [0x040089cf], r14 	     10594	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x40089cf	     0xf840b030000	                            je 0x4008ce0	     10594	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x40089d5	        0x498b4610	            mov rax, qword [r14 + 0x10] 	     10601	screen.c	FUNCTION_92	ELSE_1	FOR_2	ELSE_2
0x40089d9	        0x4d8b7e20	            mov r15, qword [r14 + 0x20] 	     10602	screen.c	FUNCTION_92	ELSE_1	FOR_2	ELSE_2
0x40089dd	      0x4889442410	             mov qword [rsp + 0x10], rax	     10601	screen.c	FUNCTION_92	ELSE_1	FOR_2	ELSE_2
0x40089e2	          0x4d85ff	                           test r15, r15	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089e5	            0x7437	                            je 0x4008a1e	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089e7	          0x4531ed	                          xor r13d, r13d	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089ea	            0x31db	                            xor ebx, ebx	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089ec	         0xf1f4000	                         nop dword [rax]	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089f0	        0x498b7f08	                mov rdi, qword [r15 + 8]	     10607	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x40089f4	      0xe800000000	                          call 0x40089f9	     10607	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x40089f9	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x40089fd	            0x85c0	                           test eax, eax	     10608	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3	IF_11
0x40089ff	        0x450f45ec	                       cmovne r13d, r12d	     10608	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3	IF_11
0x4008a03	          0x83c301	                              add ebx, 1	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x4008a06	          0x4d85ff	                           test r15, r15	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x4008a09	            0x75e5	                           jne 0x40089f0	     10606	screen.c	FUNCTION_92	ELSE_1	FOR_2	FOR_3
0x4008a0b	          0x83fb01	                              cmp ebx, 1	     10609	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12
0x4008a0e	     0xf8fc4010000	                            jg 0x4008bd8	     10609	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12
0x4008a14	        0x41f6c501	                            test r13b, 1	     10609	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12
0x4008a18	     0xf85ba010000	                           jne 0x4008bd8	     10609	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12
0x4008a1e	        0x8b442404	                mov eax, dword [rsp + 4]	     10631	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008a22	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	     10631	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008a26	            0x29e8	                            sub eax, ebp	     10631	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008a28	      0x448d7c06ff	               lea r15d, [rsi + rax - 1]	     10631	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008a2d	          0x4585ff	                         test r15d, r15d	     10632	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16
0x4008a30	     0xf8eda000000	                           jle 0x4008b10	     10632	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16
0x4008a36	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10635	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_20
0x4008a3b	        0x488b7808	                mov rdi, qword [rax + 8]	     10635	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_20
0x4008a3f	      0xe800000000	                          call 0x4008a44	     10635	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_20
0x4008a44	    0x488b3d000000	            mov rdi, qword [0x04008a4b] 	     10636	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_21
0x4008a4b	      0xe800000000	                          call 0x4008a50	     10636	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_21
0x4008a50	    0x488b3d000000	            mov rdi, qword [0x04008a57] 	     10637	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_22
0x4008a57	      0xe800000000	                          call 0x4008a5c	     10637	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_22
0x4008a5c	    0x448b15000000	           mov r10d, dword [0x04008a63] 	     10640	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17
0x4008a63	            0x89c3	                            mov ebx, eax	     10637	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_22
0x4008a65	    0x4c8b2d000000	            mov r13, qword [0x04008a6c] 	     10638	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16
0x4008a6c	          0x4585d2	                         test r10d, r10d	     10640	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17
0x4008a6f	     0xf844b020000	                            je 0x4008cc0	     10640	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17
0x4008a75	          0x4139c7	                           cmp r15d, eax	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a78	            0x7c0e	                            jl 0x4008a88	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a7a	            0xeb44	                           jmp 0x4008ac0	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a7c	         0xf1f4000	                         nop dword [rax]	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a80	          0x4901c5	                            add r13, rax	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008a83	          0x4139df	                           cmp r15d, ebx	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a86	            0x7d38	                           jge 0x4008ac0	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008a88	          0x4c89ef	                            mov rdi, r13	     10643	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x4008a8b	      0xe800000000	                          call 0x4008a90	     10643	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x4008a90	    0x448b0d000000	            mov r9d, dword [0x04008a97] 	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008a97	            0x29c3	                            sub ebx, eax	     10643	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x4008a99	      0xb801000000	                              mov eax, 1	     10643	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x4008a9e	          0x4585c9	                           test r9d, r9d	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008aa1	            0x74dd	                            je 0x4008a80	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008aa3	          0x4c89ef	                            mov rdi, r13	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008aa6	    0xff1500000000	                 call qword [0x04008aac]	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008aac	            0x4898	                                    cdqe	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008aae	          0x4901c5	                            add r13, rax	     10644	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x4008ab1	          0x4139df	                           cmp r15d, ebx	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008ab4	            0x7cd2	                            jl 0x4008a88	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008ab6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10641	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x4008ac0	    0x488b05000000	            mov rax, qword [0x04008ac7] 	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008ac7	          0x4863d5	                         movsxd rdx, ebp	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008aca	          0x4889c1	                            mov rcx, rax	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008acd	          0x4829d1	                            sub rcx, rdx	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008ad0	          0x4863d3	                         movsxd rdx, ebx	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008ad3	          0x4839d1	                            cmp rcx, rdx	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008ad6	            0x7f05	                            jg 0x4008add	     10653	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008ad8	          0x8d58ff	                      lea ebx, [rax - 1]	     10654	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008adb	            0x29eb	                            sub ebx, ebp	     10654	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	IF_19
0x4008add	          0x4c89ef	                            mov rdi, r13	     10656	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_26
0x4008ae0	      0xe800000000	                          call 0x4008ae5	     10656	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	CALL_26
0x4008ae5	    0x48833d000000	               cmp qword [0x04008aed], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4008aed	            0x741f	                            je 0x4008b0e	      7448	screen.c	FUNCTION_51	IF_1
0x4008aef	    0x448b05000000	            mov r8d, dword [0x04008af6] 	      7448	screen.c	FUNCTION_51	IF_1
0x4008af6	          0x4585c0	                           test r8d, r8d	      7448	screen.c	FUNCTION_51	IF_1
0x4008af9	            0x7e13	                           jle 0x4008b0e	      7448	screen.c	FUNCTION_51	IF_1
0x4008afb	      0x448b442408	                mov r8d, dword [rsp + 8]	      7448	screen.c	FUNCTION_51	IF_1
0x4008b00	            0x89e9	                            mov ecx, ebp	      7448	screen.c	FUNCTION_51	IF_1
0x4008b02	            0x31d2	                            xor edx, edx	      7448	screen.c	FUNCTION_51	IF_1
0x4008b04	            0x89c6	                            mov esi, eax	      7448	screen.c	FUNCTION_51	IF_1
0x4008b06	          0x4c89ef	                            mov rdi, r13	      7448	screen.c	FUNCTION_51	IF_1
0x4008b09	      0xe8c2aeffff	        call sym.screen_puts_len.part.16	      7448	screen.c	FUNCTION_51	IF_1
0x4008b0e	             0x1dd	                            add ebp, ebx	     10657	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16
0x4008b10	        0x8b4c2408	                mov ecx, dword [rsp + 8]	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b14	            0x31f6	                            xor esi, esi	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b16	            0x89ea	                            mov edx, ebp	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b18	      0xbf20000000	                           mov edi, 0x20	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b1d	          0x8d5d01	                      lea ebx, [rbp + 1]	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b20	      0xe800000000	                          call 0x4008b25	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b25	      0x8344240c01	                add dword [rsp + 0xc], 1	     10663	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b2a	        0x3b5c2404	                cmp ebx, dword [rsp + 4]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b2e	            0x7e34	                           jle 0x4008b64	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b30	        0x8b7c2404	                mov edi, dword [rsp + 4]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b34	    0x488b15000000	            mov rdx, qword [0x04008b3b] 	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b3b	       0xfb74c240c	            movzx ecx, word [rsp + 0xc] 	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b40	          0x4863f7	                         movsxd rsi, edi	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b43	            0x29fd	                            sub ebp, edi	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b45	        0x488d0472	                  lea rax, [rdx + rsi*2]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b49	      0x488d742e01	                lea rsi, [rsi + rbp + 1]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b4e	        0x488d1472	                  lea rdx, [rdx + rsi*2]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b52	    0x660f1f440000	                    nop word [rax + rax]	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b58	          0x668908	                      mov word [rax], cx	     10665	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b5b	        0x4883c002	                              add rax, 2	     10665	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b5f	          0x4839c2	                            cmp rdx, rax	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b62	            0x75f4	                           jne 0x4008b58	     10664	screen.c	FUNCTION_92	ELSE_1	FOR_2	WHILE_2
0x4008b64	          0x4d8b36	                    mov r14, qword [r14]	     10580	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b67	          0x4d85f6	                           test r14, r14	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b6a	     0xf8415020000	                            je 0x4008d85	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b70	    0x488b0d000000	            mov rcx, qword [0x04008b77] 	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b77	          0x4863c3	                         movsxd rax, ebx	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b7a	        0x488d51fc	                      lea rdx, [rcx - 4]	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b7e	          0x4839d0	                            cmp rax, rdx	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b81	     0xf8d84010000	                           jge 0x4008d0b	     10579	screen.c	FUNCTION_92	ELSE_1	FOR_2
0x4008b87	    0x488b05000000	            mov rax, qword [0x04008b8e] 	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008b8e	        0x49394608	                cmp qword [r14 + 8], rax	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008b92	        0x895c2404	                mov dword [rsp + 4], ebx	     10659	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_27
0x4008b96	     0xf85ccfdffff	                           jne 0x4008968	     10584	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008b9c	        0x8b442404	                mov eax, dword [rsp + 4]	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008ba0	            0x85c0	                           test eax, eax	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008ba2	            0x7e0b	                           jle 0x4008baf	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008ba4	      0x807c242300	                cmp byte [rsp + 0x23], 0	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008ba9	     0xf852a020000	                           jne 0x4008dd9	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008baf	        0x8b442428	            mov eax, dword [rsp + 0x28] 	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008bb3	        0x8b5c2404	                mov ebx, dword [rsp + 4]	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008bb7	        0x89442408	                mov dword [rsp + 8], eax	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008bbb	      0xe9f3fdffff	                           jmp 0x40089b3	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008bc0	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x4008bc4	        0x8b5c2404	                mov ebx, dword [rsp + 4]	     10586	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_8
0x4008bc8	        0x89442408	                mov dword [rsp + 8], eax	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x4008bcc	      0xe9e2fdffff	                           jmp 0x40089b3	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x4008bd1	     0xf1f80000000	                         nop dword [rax]	     10590	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_9
0x4008bd8	          0x83fb01	                              cmp ebx, 1	     10611	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008bdb	     0xf8e87000000	                           jle 0x4008c68	     10611	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008be1	    0x488b3d000000	            mov rdi, qword [0x04008be8] 	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008be8	            0x89d9	                            mov ecx, ebx	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008bea	      0xba00000000	                              mov edx, 0	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008bef	      0xbe00100000	                         mov esi, 0x1000	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008bf4	            0x31c0	                            xor eax, eax	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008bf6	      0xe800000000	                          call 0x4008bfb	     10613	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x4008bfb	    0x488b3d000000	            mov rdi, qword [0x04008c02] 	     10614	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x4008c02	      0xe800000000	                          call 0x4008c07	     10614	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x4008c07	    0x488b0d000000	            mov rcx, qword [0x04008c0e] 	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c0e	        0x8d5c0500	                    lea ebx, [rbp + rax]	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c12	          0x4989c7	                            mov r15, rax	     10614	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x4008c15	          0x4863d3	                         movsxd rdx, ebx	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c18	        0x488d41fd	                      lea rax, [rcx - 3]	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c1c	          0x4839c2	                            cmp rdx, rax	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c1f	     0xf8de4000000	                           jge 0x4008d09	     10615	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x4008c25	    0x8b3500000000	            mov esi, dword [0x04008c2b] 	     10617	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x4008c2b	        0x8b7c2408	                mov edi, dword [rsp + 8]	     10617	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x4008c2f	      0xe800000000	                          call 0x4008c34	     10617	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x4008c34	    0x48833d000000	               cmp qword [0x04008c3c], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4008c3c	     0xf843c010000	                            je 0x4008d7e	      7448	screen.c	FUNCTION_51	IF_1
0x4008c42	    0x8b1500000000	            mov edx, dword [0x04008c48] 	      7448	screen.c	FUNCTION_51	IF_1
0x4008c48	            0x85d2	                           test edx, edx	      7448	screen.c	FUNCTION_51	IF_1
0x4008c4a	     0xf8eb0000000	                           jle 0x4008d00	      7448	screen.c	FUNCTION_51	IF_1
0x4008c50	    0x488b3d000000	            mov rdi, qword [0x04008c57] 	      7448	screen.c	FUNCTION_51	IF_1
0x4008c57	            0x89e9	                            mov ecx, ebp	      7448	screen.c	FUNCTION_51	IF_1
0x4008c59	          0x4189c0	                            mov r8d, eax	      7448	screen.c	FUNCTION_51	IF_1
0x4008c5c	            0x31d2	                            xor edx, edx	      7448	screen.c	FUNCTION_51	IF_1
0x4008c5e	          0x4489fe	                           mov esi, r15d	      7448	screen.c	FUNCTION_51	IF_1
0x4008c61	            0x89dd	                            mov ebp, ebx	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008c63	      0xe868adffff	        call sym.screen_puts_len.part.16	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008c68	          0x4585ed	                         test r13d, r13d	     10626	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_15
0x4008c6b	            0x89eb	                            mov ebx, ebp	     10626	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_15
0x4008c6d	            0x7431	                            je 0x4008ca0	     10626	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_15
0x4008c6f	          0x83c301	                              add ebx, 1	     10627	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_18
0x4008c72	    0x48833d000000	               cmp qword [0x04008c7a], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4008c7a	            0x7424	                            je 0x4008ca0	      7448	screen.c	FUNCTION_51	IF_1
0x4008c7c	    0x448b1d000000	           mov r11d, dword [0x04008c83] 	      7448	screen.c	FUNCTION_51	IF_1
0x4008c83	          0x4585db	                         test r11d, r11d	      7448	screen.c	FUNCTION_51	IF_1
0x4008c86	            0x7e18	                           jle 0x4008ca0	      7448	screen.c	FUNCTION_51	IF_1
0x4008c88	      0x448b442408	                mov r8d, dword [rsp + 8]	      7448	screen.c	FUNCTION_51	IF_1
0x4008c8d	            0x89e9	                            mov ecx, ebp	      7448	screen.c	FUNCTION_51	IF_1
0x4008c8f	            0x31d2	                            xor edx, edx	      7448	screen.c	FUNCTION_51	IF_1
0x4008c91	      0xbe01000000	                              mov esi, 1	      7448	screen.c	FUNCTION_51	IF_1
0x4008c96	      0xbf00000000	                              mov edi, 0	      7448	screen.c	FUNCTION_51	IF_1
0x4008c9b	      0xe830adffff	        call sym.screen_puts_len.part.16	      7448	screen.c	FUNCTION_51	IF_1
0x4008ca0	        0x8b4c2408	                mov ecx, dword [rsp + 8]	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008ca4	            0x89da	                            mov edx, ebx	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008ca6	            0x31f6	                            xor esi, esi	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008ca8	      0xbf20000000	                           mov edi, 0x20	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008cad	          0x8d6b01	                      lea ebp, [rbx + 1]	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008cb0	      0xe800000000	                          call 0x4008cb5	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008cb5	      0xe964fdffff	                           jmp 0x4008a1e	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008cba	    0x660f1f440000	                    nop word [rax + rax]	     10628	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_19
0x4008cc0	          0x4139c7	                           cmp r15d, eax	     10648	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008cc3	     0xf8df7fdffff	                           jge 0x4008ac0	     10648	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008cc9	          0x4429fb	                           sub ebx, r15d	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008ccc	          0x4863c3	                         movsxd rax, ebx	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008ccf	          0x4489fb	                           mov ebx, r15d	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008cd2	          0x4901c5	                            add r13, rax	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008cd5	      0xe9e6fdffff	                           jmp 0x4008ac0	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008cda	    0x660f1f440000	                    nop word [rax + rax]	     10650	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x4008ce0	    0x488b05000000	            mov rax, qword [0x04008ce7] 	     10596	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x4008ce7	    0x4c8b3d000000	            mov r15, qword [0x04008cee] 	     10597	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x4008cee	      0x4889442410	             mov qword [rsp + 0x10], rax	     10596	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x4008cf3	      0xe9eafcffff	                           jmp 0x40089e2	     10596	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x4008cf8	     0xf1f84000000	                   nop dword [rax + rax]	     10596	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_10
0x4008d00	        0x4183fd01	                             cmp r13d, 1	     10627	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_18
0x4008d04	          0x83dbff	             sbb ebx, 0xffffffffffffffff	     10627	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_18
0x4008d07	            0xeb97	                           jmp 0x4008ca0	     10627	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	CALL_18
0x4008d09	            0x89eb	                            mov ebx, ebp	     10592	screen.c	FUNCTION_92	ELSE_1	FOR_2	CALL_11
0x4008d0b	      0x837c242401	               cmp dword [rsp + 0x24], 1	     10669	screen.c	FUNCTION_92	ELSE_1	IF_20
0x4008d10	      0xbe01000000	                              mov esi, 1	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d15	            0x89da	                            mov edx, ebx	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d17	          0x4519c0	                            sbb r8d, r8d	     10669	screen.c	FUNCTION_92	ELSE_1	IF_20
0x4008d1a	        0x4883ec08	                              sub rsp, 8	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d1e	            0x31ff	                            xor edi, edi	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d20	        0x8b442434	            mov eax, dword [rsp + 0x34] 	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d24	        0x4183e0c1	                     and r8d, 0xffffffc1	     10669	screen.c	FUNCTION_92	ELSE_1	IF_20
0x4008d28	        0x4183c05f	                           add r8d, 0x5f	     10669	screen.c	FUNCTION_92	ELSE_1	IF_20
0x4008d2c	          0x4589c1	                            mov r9d, r8d	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d2f	              0x50	                                push rax	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d30	      0xe800000000	                          call 0x4008d35	     10672	screen.c	FUNCTION_92	ELSE_1	CALL_28
0x4008d35	    0x488b05000000	            mov rax, qword [0x04008d3c] 	     10675	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d3c	              0x5e	                                 pop rsi	     10675	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d3d	              0x5f	                                 pop rdi	     10675	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d3e	        0x48833800	                      cmp qword [rax], 0	     10675	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d42	     0xf8441fbffff	                            je 0x4008889	     10675	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d48	    0x8b0500000000	            mov eax, dword [0x04008d4e] 	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d4e	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d52	            0x31f6	                            xor esi, esi	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d54	      0xbf58000000	                           mov edi, 0x58	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d59	          0x8d50ff	                      lea edx, [rax - 1]	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d5c	      0xe800000000	                          call 0x4008d61	     10677	screen.c	FUNCTION_92	ELSE_1	IF_21	CALL_29
0x4008d61	    0x488b05000000	            mov rax, qword [0x04008d68] 	     10678	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d68	    0x488b15000000	            mov rdx, qword [0x04008d6f] 	     10678	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d6f	      0xb919fcffff	                     mov ecx, 0xfffffc19	     10678	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d74	      0x66894c50fe	          mov word [rax + rdx*2 - 2], cx	     10678	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d79	      0xe90bfbffff	                           jmp 0x4008889	     10678	screen.c	FUNCTION_92	ELSE_1	IF_21
0x4008d7e	            0x89dd	                            mov ebp, ebx	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d80	      0xe9e3feffff	                           jmp 0x4008c68	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d85	    0x488b0d000000	            mov rcx, qword [0x04008d8c] 	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d8c	      0xe97affffff	                           jmp 0x4008d0b	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d91	            0x31f6	                            xor esi, esi	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d93	            0x31ff	                            xor edi, edi	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d95	      0xe846b7ffff	        call sym.win_redr_custom.part.17	     10624	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_12	IF_13
0x4008d9a	    0x8b1d00000000	            mov ebx, dword [0x04008da0] 	     10561	screen.c	FUNCTION_92	IF_4	IF_5
0x4008da0	            0x85db	                           test ebx, ebx	     10561	screen.c	FUNCTION_92	IF_4	IF_5
0x4008da2	     0xf84d9faffff	                            je 0x4008881	     10561	screen.c	FUNCTION_92	IF_4	IF_5
0x4008da8	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dae	      0xb901000000	                              mov ecx, 1	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008db3	      0xba00000000	                              mov edx, 0	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008db8	      0xbeffffffff	                     mov esi, 0xffffffff	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dbd	      0xbf00000000	                              mov edi, 0	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dc2	      0xe800000000	                          call 0x4008dc7	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dc7	    0x8b1d00000000	            mov ebx, dword [0x04008dcd] 	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dcd	      0xe9affaffff	                           jmp 0x4008881	     10562	screen.c	FUNCTION_92	IF_4	IF_5	CALL_8
0x4008dd2	            0x31db	                            xor ebx, ebx	     10507	screen.c	FUNCTION_92
0x4008dd4	      0xe932ffffff	                           jmp 0x4008d0b	     10507	screen.c	FUNCTION_92
0x4008dd9	        0x8b442428	            mov eax, dword [rsp + 0x28] 	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008ddd	        0x89442408	                mov dword [rsp + 8], eax	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
0x4008de1	      0xe999fbffff	                           jmp 0x400897f	     10585	screen.c	FUNCTION_92	ELSE_1	FOR_2	IF_7
screen_fill	functions,0:IF,22:DO,0:ELSE,3:CALL,11:FOR,2:WHILE,3:SWITCH,0	406
0x4004d80	            0x4157	                                push r15	      8538	screen.c	FUNCTION_66
0x4004d82	            0x4156	                                push r14	      8538	screen.c	FUNCTION_66
0x4004d84	            0x4155	                                push r13	      8538	screen.c	FUNCTION_66
0x4004d86	            0x4154	                                push r12	      8538	screen.c	FUNCTION_66
0x4004d88	              0x55	                                push rbp	      8538	screen.c	FUNCTION_66
0x4004d89	              0x53	                                push rbx	      8538	screen.c	FUNCTION_66
0x4004d8a	        0x4883ec58	                           sub rsp, 0x58	      8538	screen.c	FUNCTION_66
0x4004d8e	    0x8b0500000000	            mov eax, dword [0x04004d94] 	      8550	screen.c	FUNCTION_66	IF_1
0x4004d94	        0x897c2410	             mov dword [rsp + 0x10], edi	      8538	screen.c	FUNCTION_66
0x4004d98	      0x4489442434	             mov dword [rsp + 0x34], r8d	      8538	screen.c	FUNCTION_66
0x4004d9d	      0x44894c2438	             mov dword [rsp + 0x38], r9d	      8538	screen.c	FUNCTION_66
0x4004da2	    0x448bb4249000	           mov r14d, dword [rsp + 0x90] 	      8538	screen.c	FUNCTION_66
0x4004daa	            0x39f0	                            cmp eax, esi	      8538	screen.c	FUNCTION_66
0x4004dac	           0xf4ef0	                         cmovle esi, eax	      8538	screen.c	FUNCTION_66
0x4004daf	    0x8b0500000000	            mov eax, dword [0x04004db5] 	      8552	screen.c	FUNCTION_66	IF_2
0x4004db5	        0x8974243c	             mov dword [rsp + 0x3c], esi	      8552	screen.c	FUNCTION_66	IF_2
0x4004db9	            0x39c8	                            cmp eax, ecx	      8552	screen.c	FUNCTION_66	IF_2
0x4004dbb	           0xf4ec8	                         cmovle ecx, eax	      8552	screen.c	FUNCTION_66	IF_2
0x4004dbe	    0x48833d000000	               cmp qword [0x04004dc6], 0	      8554	screen.c	FUNCTION_66	IF_3
0x4004dc6	     0xf840c030000	                            je 0x40050d8	      8554	screen.c	FUNCTION_66	IF_3
0x4004dcc	            0x39fe	                            cmp esi, edi	      8556	screen.c	FUNCTION_66	IF_3
0x4004dce	     0xf8e04030000	                           jle 0x40050d8	      8556	screen.c	FUNCTION_66	IF_3
0x4004dd4	            0x39d1	                            cmp ecx, edx	      8556	screen.c	FUNCTION_66	IF_3
0x4004dd6	          0x4189d5	                           mov r13d, edx	      8556	screen.c	FUNCTION_66	IF_3
0x4004dd9	          0x4189c9	                            mov r9d, ecx	      8556	screen.c	FUNCTION_66	IF_3
0x4004ddc	     0xf8ef6020000	                           jle 0x40050d8	      8556	screen.c	FUNCTION_66	IF_3
0x4004de2	    0x8b0d00000000	            mov ecx, dword [0x04004de8] 	      8562	screen.c	FUNCTION_66
0x4004de8	            0x31c0	                            xor eax, eax	      8562	screen.c	FUNCTION_66
0x4004dea	            0x85c9	                           test ecx, ecx	      8562	screen.c	FUNCTION_66
0x4004dec	     0xf8410040000	                            je 0x4005202	      8562	screen.c	FUNCTION_66
0x4004df2	          0x4963f9	                         movsxd rdi, r9d	      8562	screen.c	FUNCTION_66
0x4004df5	      0x837c243420	           cmp dword [rsp + 0x34], 0x20 	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004dfa	        0x418d5501	                      lea edx, [r13 + 1]	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004dfe	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e03	      0x48637c2410	         movsxd rdi, dword [rsp + 0x10] 	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e08	          0x4589ea	                          mov r10d, r13d	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e0b	        0x410f44d5	                         cmove edx, r13d	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e0f	          0x83e001	                              and eax, 1	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e12	          0x4531ff	                          xor r15d, r15d	      8547	screen.c	FUNCTION_66
0x4004e15	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      8547	screen.c	FUNCTION_66
0x4004e1a	        0x48c1e702	                              shl rdi, 2	      8547	screen.c	FUNCTION_66
0x4004e1e	        0x8844244b	               mov byte [rsp + 0x4b], al	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e22	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e27	          0x4489f0	                           mov eax, r14d	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e2a	        0x418d7dff	                      lea edi, [r13 - 1]	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e2e	          0x83e0f9	                     and eax, 0xfffffff9	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e31	        0x89542440	             mov dword [rsp + 0x40], edx	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e35	          0x4589cd	                           mov r13d, r9d	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e38	        0x897c2444	             mov dword [rsp + 0x44], edi	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e3c	        0x8944244c	             mov dword [rsp + 0x4c], eax	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004e40	    0x8b0500000000	            mov eax, dword [0x04004e46] 	      8568	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e46	            0x85c0	                           test eax, eax	      8568	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e48	            0x7456	                            je 0x4004ea0	      8568	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e4a	    0x8b0500000000	            mov eax, dword [0x04004e50] 	      8570	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e50	            0x85c0	                           test eax, eax	      8570	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e52	            0x754c	                           jne 0x4004ea0	      8570	screen.c	FUNCTION_66	FOR_1	IF_4
0x4004e54	          0x4585d2	                         test r10d, r10d	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e57	            0x7e33	                           jle 0x4004e8c	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e59	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e5d	          0x4489d7	                           mov edi, r10d	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e60	      0x4489542404	               mov dword [rsp + 4], r10d	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e65	            0x89de	                            mov esi, ebx	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e67	      0xe800000000	                          call 0x4004e6c	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e6c	      0x448b542404	               mov r10d, dword [rsp + 4]	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e71	          0x4139c2	                           cmp r10d, eax	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e74	            0x7416	                            je 0x4004e8c	      8578	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x4004e76	    0x48833d000000	               cmp qword [0x04004e7e], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4004e7e	            0x740c	                            je 0x4004e8c	      7448	screen.c	FUNCTION_51	IF_1
0x4004e80	    0x391d00000000	            cmp dword [0x04004e86], ebx 	      7448	screen.c	FUNCTION_51	IF_1
0x4004e86	     0xf8f31040000	                            jg 0x40052bd	      7448	screen.c	FUNCTION_51	IF_1
0x4004e8c	    0x443b2d000000	           cmp r13d, dword [0x04004e93] 	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4004e93	     0xf8c88030000	                            jl 0x4005221	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4004e99	     0xf1f80000000	                         nop dword [rax]	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4004ea0	    0x4c8b0d000000	              mov r9, qword [0x04004ea7]	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4004ea7	      0x837c243820	           cmp dword [rsp + 0x38], 0x20 	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004eac	     0xf8486020000	                            je 0x4005138	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004eb2	    0x488b05000000	            mov rax, qword [0x04004eb9] 	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004eb9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004ebe	          0x8b0438	              mov eax, dword [rax + rdi]	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x4004ec1	    0xc74424300000	               mov dword [rsp + 0x30], 0	      8589	screen.c	FUNCTION_66	FOR_1
0x4004ec9	        0x89442414	             mov dword [rsp + 0x14], eax	      8589	screen.c	FUNCTION_66	FOR_1
0x4004ecd	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      8589	screen.c	FUNCTION_66	FOR_1
0x4004ed1	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ed6	          0x4489d3	                           mov ebx, r10d	      8636	screen.c	FUNCTION_66	FOR_1
0x4004ed9	    0x4489b4249000	            mov dword [rsp + 0x90], r14d	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ee1	        0x8b6c2434	            mov ebp, dword [rsp + 0x34] 	      8636	screen.c	FUNCTION_66	FOR_1
0x4004ee5	          0x4589fe	                          mov r14d, r15d	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ee8	        0x418d0c02	                    lea ecx, [r10 + rax]	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004eec	        0x4183f301	                             xor r11d, 1	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ef0	        0x4183e301	                             and r11d, 1	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ef4	          0x4863c9	                         movsxd rcx, ecx	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004ef7	    0x4c8d048d0000	                         lea r8, [rcx*4]	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004eff	        0x4c8d2409	                    lea r12, [rcx + rcx]	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f03	          0x4d89c7	                             mov r15, r8	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f06	          0x4589e8	                           mov r8d, r13d	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f09	          0x4989cd	                            mov r13, rcx	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f0c	    0x8b8c24900000	            mov ecx, dword [rsp + 0x90] 	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f13	      0xe9bf000000	                           jmp 0x4004fd7	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f18	     0xf1f84000000	                   nop dword [rax + rax]	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f20	    0x8b3d00000000	            mov edi, dword [0x04004f26] 	      8656	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f26	            0x85ff	                           test edi, edi	      8656	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f28	            0x750a	                           jne 0x4004f34	      8656	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f2a	    0x8b3500000000	            mov esi, dword [0x04004f30] 	      8661	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f30	            0x85f6	                           test esi, esi	      8661	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f32	            0x742d	                            je 0x4004f61	      8661	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x4004f34	          0x4531f6	                          xor r14d, r14d	      8673	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	ELSE_2
0x4004f37	          0x80fa20	                            cmp dl, 0x20	      8668	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f3a	            0x7425	                            je 0x4004f61	      8668	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f3c	    0x488b05000000	            mov rax, qword [0x04004f43] 	      8669	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f43	    0x41be01000000	                             mov r14d, 1	      8671	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f49	      0x420fb71420	             movzx edx, word [rax + r12]	      8669	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f4e	      0x6681faff00	                            cmp dx, 0xff	      8669	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f53	            0x770c	                            ja 0x4004f61	      8669	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f55	            0x89d0	                            mov eax, edx	      8671	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f57	          0x66d1e8	                               shr ax, 1	      8671	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f5a	          0x4189c6	                           mov r14d, eax	      8671	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f5d	        0x4183e601	                             and r14d, 1	      8671	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x4004f61	          0x418829	                      mov byte [r9], bpl	      8676	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x4004f64	    0x8b1500000000	            mov edx, dword [0x04004f6a] 	      8678	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x4004f6a	            0x85d2	                           test edx, edx	      8678	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x4004f6c	            0x7423	                            je 0x4004f91	      8678	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x4004f6e	          0x83fd7f	                           cmp ebp, 0x7f	      8680	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f71	    0x488b15000000	            mov rdx, qword [0x04004f78] 	      8682	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f78	     0xf8e02010000	                           jle 0x4005080	      8680	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f7e	        0x42892c3a	              mov dword [rdx + r15], ebp	      8682	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f82	    0x488b15000000	            mov rdx, qword [0x04004f89] 	      8683	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f89	    0x42c7043a0000	                mov dword [rdx + r15], 0	      8683	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x4004f91	    0x488b15000000	            mov rdx, qword [0x04004f98] 	      8689	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004f98	          0x4584db	                         test r11b, r11b	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004f9b	      0x6642890c22	                mov word [rdx + r12], cx	      8689	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fa0	     0xf8592000000	                           jne 0x4005038	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004fa6	          0x83fd20	                           cmp ebp, 0x20	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004fa9	     0xf8589000000	                           jne 0x4005038	      8690	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x4004faf	          0x4139da	                           cmp r10d, ebx	      8694	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x4004fb2	     0xf84ab040000	                            je 0x4005463	      8694	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x4004fb8	          0x83c301	                              add ebx, 1	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fbb	        0x4983c501	                              add r13, 1	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fbf	        0x4983c402	                              add r12, 2	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fc3	        0x4983c704	                              add r15, 4	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fc7	          0x4139d8	                            cmp r8d, ebx	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fca	     0xf8ec0000000	                           jle 0x4005090	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fd0	    0x4c8b0d000000	              mov r9, qword [0x04004fd7]	      8638	screen.c	FUNCTION_66	FOR_1	FOR_2
0x4004fd7	          0x4d01e9	                             add r9, r13	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fda	        0x410fb631	                    movzx esi, byte [r9]	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fde	            0x39ee	                            cmp esi, ebp	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fe0	            0x89f2	                            mov edx, esi	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fe2	     0xf8538ffffff	                           jne 0x4004f20	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fe8	    0x8b0500000000	            mov eax, dword [0x04004fee] 	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004fee	            0x85c0	                           test eax, eax	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004ff0	            0x741c	                            je 0x400500e	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004ff2	    0x488b3d000000	            mov rdi, qword [0x04004ff9] 	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004ff9	          0x83fd7f	                           cmp ebp, 0x7f	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4004ffc	      0xbe00000000	                              mov esi, 0	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005001	           0xf4ff5	                          cmovg esi, ebp	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005004	        0x423b343f	              cmp esi, dword [rdi + r15]	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005008	     0xf8512ffffff	                           jne 0x4004f20	      8642	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x400500e	    0x488b35000000	            mov rsi, qword [0x04005015] 	      8645	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005015	      0x420fb73426	             movzx esi, word [rsi + r12]	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x400501a	            0x39ce	                            cmp esi, ecx	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x400501c	     0xf85fefeffff	                           jne 0x4004f20	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005022	          0x4585f6	                         test r14d, r14d	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005025	     0xf85f5feffff	                           jne 0x4004f20	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x400502b	          0x4531f6	                          xor r14d, r14d	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x400502e	      0xe97cffffff	                           jmp 0x4004faf	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005033	       0xf1f440000	                   nop dword [rax + rax]	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x4005038	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x400503c	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005040	            0x89da	                            mov edx, ebx	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005042	      0x44885c244a	             mov byte [rsp + 0x4a], r11b	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005047	        0x894c240c	              mov dword [rsp + 0xc], ecx	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x400504b	      0x4489542408	               mov dword [rsp + 8], r10d	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005050	      0x4489442404	                mov dword [rsp + 4], r8d	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005055	          0x8d3c03	                    lea edi, [rbx + rax]	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005058	      0xe8e3e6ffff	                    call sym.screen_char	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x400505d	      0x448b442404	                mov r8d, dword [rsp + 4]	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005062	      0x448b542408	               mov r10d, dword [rsp + 8]	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005067	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x400506b	    0x440fb65c244a	          movzx r11d, byte [rsp + 0x4a] 	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005071	      0xe939ffffff	                           jmp 0x4004faf	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8691	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x4005080	    0x42c7043a0000	                mov dword [rdx + r15], 0	      8686	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x4005088	      0xe904ffffff	                           jmp 0x4004f91	      8686	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x400508d	           0xf1f00	                         nop dword [rax]	      8686	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x4005090	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x4005095	    0x483905000000	            cmp qword [0x0400509c], rax 	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x400509c	          0x4589f7	                          mov r15d, r14d	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x400509f	          0x4589c5	                           mov r13d, r8d	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x40050a2	          0x4189ce	                           mov r14d, ecx	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x40050a5	            0x7479	                            je 0x4005120	      8701	screen.c	FUNCTION_66	FOR_1	IF_19
0x40050a7	    0x488b05000000	            mov rax, qword [0x040050ae] 	      8703	screen.c	FUNCTION_66	FOR_1	IF_20
0x40050ae	        0x4883e801	                              sub rax, 1	      8703	screen.c	FUNCTION_66	FOR_1	IF_20
0x40050b2	      0x4839442418	            cmp qword [rsp + 0x18], rax 	      8703	screen.c	FUNCTION_66	FOR_1	IF_20
0x40050b7	            0x7437	                            je 0x40050f0	      8703	screen.c	FUNCTION_66	FOR_1	IF_20
0x40050b9	      0x8344241001	               add dword [rsp + 0x10], 1	      8565	screen.c	FUNCTION_66	FOR_1
0x40050be	    0x488344241801	               add qword [rsp + 0x18], 1	      8565	screen.c	FUNCTION_66	FOR_1
0x40050c4	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      8565	screen.c	FUNCTION_66	FOR_1
0x40050c8	    0x488344242004	               add qword [rsp + 0x20], 4	      8565	screen.c	FUNCTION_66	FOR_1
0x40050ce	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	      8565	screen.c	FUNCTION_66	FOR_1
0x40050d2	     0xf8f68fdffff	                            jg 0x4004e40	      8565	screen.c	FUNCTION_66	FOR_1
0x40050d8	        0x4883c458	                           add rsp, 0x58	      8713	screen.c	FUNCTION_66
0x40050dc	              0x5b	                                 pop rbx	      8713	screen.c	FUNCTION_66
0x40050dd	              0x5d	                                 pop rbp	      8713	screen.c	FUNCTION_66
0x40050de	            0x415c	                                 pop r12	      8713	screen.c	FUNCTION_66
0x40050e0	            0x415d	                                 pop r13	      8713	screen.c	FUNCTION_66
0x40050e2	            0x415e	                                 pop r14	      8713	screen.c	FUNCTION_66
0x40050e4	            0x415f	                                 pop r15	      8713	screen.c	FUNCTION_66
0x40050e6	              0xc3	                                     ret	      8713	screen.c	FUNCTION_66
0x40050e7	    0x660f1f840000	                    nop word [rax + rax]	      8713	screen.c	FUNCTION_66
0x40050f0	          0x4585d2	                         test r10d, r10d	      8706	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40050f3	    0xc70500000000	               mov dword [0x040050fd], 1	      8705	screen.c	FUNCTION_66	FOR_1	IF_20
0x40050fd	            0x75ba	                           jne 0x40050b9	      8706	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40050ff	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8706	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x4005104	    0x483905000000	            cmp qword [0x0400510b], rax 	      8706	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x400510b	     0xf847c010000	                            je 0x400528d	      8706	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x4005111	    0xc70500000000	               mov dword [0x0400511b], 0	      8710	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x400511b	            0xeb9c	                           jmp 0x40050b9	      8710	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x400511d	           0xf1f00	                         nop dword [rax]	      8710	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x4005120	    0x488b05000000	            mov rax, qword [0x04005127] 	      8702	screen.c	FUNCTION_66	FOR_1	IF_19
0x4005127	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8702	screen.c	FUNCTION_66	FOR_1	IF_19
0x400512c	        0xc6043800	                 mov byte [rax + rdi], 0	      8702	screen.c	FUNCTION_66	FOR_1	IF_19
0x4005130	      0xe972ffffff	                           jmp 0x40050a7	      8702	screen.c	FUNCTION_66	FOR_1	IF_19
0x4005135	           0xf1f00	                         nop dword [rax]	      8702	screen.c	FUNCTION_66	FOR_1	IF_19
0x4005138	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8591	screen.c	FUNCTION_66	FOR_1	IF_7
0x400513d	    0x483905000000	            cmp qword [0x04005144], rax 	      8591	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005144	     0xf8568fdffff	                           jne 0x4004eb2	      8591	screen.c	FUNCTION_66	FOR_1	IF_7
0x400514a	    0x488b3d000000	            mov rdi, qword [0x04005151] 	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x4005151	      0x4489542404	               mov dword [rsp + 4], r10d	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x4005156	      0xe800000000	                          call 0x400515b	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x400515b	            0x85c0	                           test eax, eax	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x400515d	      0x448b542404	               mov r10d, dword [rsp + 4]	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x4005162	     0xf844afdffff	                            je 0x4004eb2	      8592	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x4005168	          0x4585f6	                         test r14d, r14d	      8593	screen.c	FUNCTION_66	FOR_1	IF_7
0x400516b	     0xf8570010000	                           jne 0x40052e1	      8593	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005171	    0x488b05000000	            mov rax, qword [0x04005178] 	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005178	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x400517d	        0x8b5c2440	            mov ebx, dword [rsp + 0x40] 	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005181	    0x448b25000000	           mov r12d, dword [0x04005188] 	      8610	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x4005188	          0x8b0438	              mov eax, dword [rax + rdi]	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x400518b	             0x1c3	                            add ebx, eax	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x400518d	        0x89442414	             mov dword [rsp + 0x14], eax	      8605	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005191	          0x4401e8	                           add eax, r13d	      8606	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005194	          0x4585e4	                         test r12d, r12d	      8610	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x4005197	     0xf8542020000	                           jne 0x40053df	      8610	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x400519d	            0x39c3	                            cmp ebx, eax	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x400519f	            0x7d54	                           jge 0x40051f5	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051a1	          0x4863f3	                         movsxd rsi, ebx	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051a4	      0x41803c3120	               cmp byte [r9 + rsi], 0x20	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051a9	     0xf855b010000	                           jne 0x400530a	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051af	    0x488b0d000000	            mov rcx, qword [0x040051b6] 	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051b6	        0x488d0c71	                  lea rcx, [rcx + rsi*2]	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051ba	      0x498d743101	                 lea rsi, [r9 + rsi + 1]	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051bf	        0x66833900	                       cmp word [rcx], 0	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051c3	            0x7429	                            je 0x40051ee	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051c5	      0xe940010000	                           jmp 0x400530a	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051ca	    0x660f1f440000	                    nop word [rax + rax]	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051d0	          0x803e20	                    cmp byte [rsi], 0x20	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051d3	     0xf8531010000	                           jne 0x400530a	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051d9	         0xfb75102	               movzx edx, word [rcx + 2]	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051dd	        0x4883c601	                              add rsi, 1	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051e1	        0x4883c102	                              add rcx, 2	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051e5	          0x6685d2	                             test dx, dx	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051e8	     0xf851c010000	                           jne 0x400530a	      8617	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051ee	          0x83c301	                              add ebx, 1	      8618	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051f1	            0x39d8	                            cmp eax, ebx	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051f3	            0x75db	                           jne 0x40051d0	      8616	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x40051f5	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8633	screen.c	FUNCTION_66	FOR_1	IF_7
0x40051fd	      0xe9cbfcffff	                           jmp 0x4004ecd	      8633	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005202	    0x833d00000000	               cmp dword [0x04005209], 1	      8562	screen.c	FUNCTION_66
0x4005209	     0xf8fe3fbffff	                            jg 0x4004df2	      8562	screen.c	FUNCTION_66
0x400520f	    0x8b1500000000	            mov edx, dword [0x04005215] 	      8562	screen.c	FUNCTION_66
0x4005215	            0x31c0	                            xor eax, eax	      8562	screen.c	FUNCTION_66
0x4005217	            0x85d2	                           test edx, edx	      8562	screen.c	FUNCTION_66
0x4005219	           0xf94c0	                                 sete al	      8562	screen.c	FUNCTION_66
0x400521c	      0xe9d1fbffff	                           jmp 0x4004df2	      8562	screen.c	FUNCTION_66
0x4005221	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005225	          0x4489ef	                           mov edi, r13d	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005228	      0x4489542404	               mov dword [rsp + 4], r10d	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x400522d	      0xe800000000	                          call 0x4005232	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005232	          0x4139c5	                           cmp r13d, eax	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005235	    0x4c8b0d000000	              mov r9, qword [0x0400523c]	      7448	screen.c	FUNCTION_51	IF_1
0x400523c	      0x448b542404	               mov r10d, dword [rsp + 4]	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005241	     0xf8460fcffff	                            je 0x4004ea7	      8580	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x4005247	          0x4d85c9	                             test r9, r9	      7448	screen.c	FUNCTION_51	IF_1
0x400524a	     0xf8457fcffff	                            je 0x4004ea7	      7448	screen.c	FUNCTION_51	IF_1
0x4005250	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      7448	screen.c	FUNCTION_51	IF_1
0x4005254	    0x390500000000	            cmp dword [0x0400525a], eax 	      7448	screen.c	FUNCTION_51	IF_1
0x400525a	     0xf8e47fcffff	                           jle 0x4004ea7	      7448	screen.c	FUNCTION_51	IF_1
0x4005260	          0x4531c0	                            xor r8d, r8d	      7448	screen.c	FUNCTION_51	IF_1
0x4005263	          0x4489e9	                           mov ecx, r13d	      7448	screen.c	FUNCTION_51	IF_1
0x4005266	            0x89c2	                            mov edx, eax	      7448	screen.c	FUNCTION_51	IF_1
0x4005268	      0xbe01000000	                              mov esi, 1	      7448	screen.c	FUNCTION_51	IF_1
0x400526d	      0xbf00000000	                              mov edi, 0	      7448	screen.c	FUNCTION_51	IF_1
0x4005272	      0x4489542404	               mov dword [rsp + 4], r10d	      7448	screen.c	FUNCTION_51	IF_1
0x4005277	      0xe854e7ffff	        call sym.screen_puts_len.part.16	      7448	screen.c	FUNCTION_51	IF_1
0x400527c	    0x4c8b0d000000	              mov r9, qword [0x04005283]	      7448	screen.c	FUNCTION_51	IF_1
0x4005283	      0x448b542404	               mov r10d, dword [rsp + 4]	      7448	screen.c	FUNCTION_51	IF_1
0x4005288	      0xe91afcffff	                           jmp 0x4004ea7	      7448	screen.c	FUNCTION_51	IF_1
0x400528d	      0x837c243420	           cmp dword [rsp + 0x34], 0x20 	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x4005292	           0xf94c2	                                 sete dl	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x4005295	      0x837c243820	           cmp dword [rsp + 0x38], 0x20 	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x400529a	           0xf94c0	                                 sete al	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x400529d	            0x84c2	                             test dl, al	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x400529f	     0xf846cfeffff	                            je 0x4005111	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052a5	          0x4585f6	                         test r14d, r14d	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052a8	     0xf8563feffff	                           jne 0x4005111	      8707	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052ae	    0xc70500000000	               mov dword [0x040052b8], 0	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052b8	      0xe954feffff	                           jmp 0x4005111	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052bd	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052c1	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052c5	          0x4531c0	                            xor r8d, r8d	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052c8	      0xbe01000000	                              mov esi, 1	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052cd	      0xbf00000000	                              mov edi, 0	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052d2	      0xe8f9e6ffff	        call sym.screen_puts_len.part.16	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052d7	      0x448b542404	               mov r10d, dword [rsp + 4]	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052dc	      0xe9abfbffff	                           jmp 0x4004e8c	      8708	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x40052e1	    0x4181feff0000	                          cmp r14d, 0xff	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052e8	     0xf8fc4fbffff	                            jg 0x4004eb2	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052ee	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052f3	     0xf84b9fbffff	                            je 0x4004eb2	      8594	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052f9	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052fd	            0x85c0	                           test eax, eax	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x40052ff	     0xf846cfeffff	                            je 0x4005171	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x4005305	      0xe9a8fbffff	                           jmp 0x4004eb2	      8596	screen.c	FUNCTION_66	FOR_1	IF_7
0x400530a	            0x89dd	                            mov ebp, ebx	      8621	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x400530c	        0x2b6c2414	             sub ebp, dword [rsp + 0x14]	      8621	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x4005310	      0x4489542404	               mov dword [rsp + 4], r10d	      8621	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x4005315	      0xe800000000	                          call 0x400531a	      8622	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_6
0x400531a	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      8623	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x400531e	            0x89ee	                            mov esi, ebp	      8623	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x4005320	      0xe800000000	                          call 0x4005325	      8623	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x4005325	    0x488b3d000000	            mov rdi, qword [0x0400532c] 	      8624	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_8
0x400532c	      0xe800000000	                          call 0x4005331	      8624	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_8
0x4005331	          0x4489e8	                           mov eax, r13d	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005334	    0xc70500000000	         mov dword [0x0400533e], 0x270f 	      9222	screen.c	FUNCTION_77
0x400533e	    0xc70500000000	         mov dword [0x04005348], 0x270f 	      9222	screen.c	FUNCTION_77
0x4005348	            0x29e8	                            sub eax, ebp	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400534a	      0x448b542404	               mov r10d, dword [rsp + 4]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400534f	            0x7467	                            je 0x40053b8	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005351	          0x4863db	                         movsxd rbx, ebx	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005354	          0x8d78ff	                      lea edi, [rax - 1]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005357	        0x488d4301	                      lea rax, [rbx + 1]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400535b	        0x488d141b	                    lea rdx, [rbx + rbx]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400535f	    0x488d0c9d0000	                        lea rcx, [rbx*4]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005367	          0x4801c7	                            add rdi, rax	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400536a	            0xeb08	                           jmp 0x4005374	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x400536c	         0xf1f4000	                         nop dword [rax]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005370	        0x4883c001	                              add rax, 1	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x4005374	    0x488b35000000	            mov rsi, qword [0x0400537b] 	      8516	screen.c	FUNCTION_65
0x400537b	          0x4531c0	                            xor r8d, r8d	      8517	screen.c	FUNCTION_65
0x400537e	        0xc6041e20	              mov byte [rsi + rbx], 0x20	      8516	screen.c	FUNCTION_65
0x4005382	    0x448b0d000000	            mov r9d, dword [0x04005389] 	      8519	screen.c	FUNCTION_65	IF_1
0x4005389	    0x488b35000000	            mov rsi, qword [0x04005390] 	      8517	screen.c	FUNCTION_65
0x4005390	          0x4585c9	                           test r9d, r9d	      8519	screen.c	FUNCTION_65	IF_1
0x4005393	      0x6644890416	               mov word [rsi + rdx], r8w	      8517	screen.c	FUNCTION_65
0x4005398	            0x740e	                            je 0x40053a8	      8519	screen.c	FUNCTION_65	IF_1
0x400539a	    0x488b35000000	            mov rsi, qword [0x040053a1] 	      8520	screen.c	FUNCTION_65	IF_1
0x40053a1	    0xc7040e000000	                mov dword [rsi + rcx], 0	      8520	screen.c	FUNCTION_65	IF_1
0x40053a8	        0x4883c202	                              add rdx, 2	      8520	screen.c	FUNCTION_65	IF_1
0x40053ac	        0x4883c104	                              add rcx, 4	      8520	screen.c	FUNCTION_65	IF_1
0x40053b0	          0x4839f8	                            cmp rax, rdi	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053b3	          0x4889c3	                            mov rbx, rax	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053b6	            0x75b8	                           jne 0x4005370	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053b8	    0x488b05000000	            mov rax, qword [0x040053bf] 	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053bf	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053c4	    0x4c8b0d000000	              mov r9, qword [0x040053cb]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053cb	          0x8b0438	              mov eax, dword [rax + rdi]	      8627	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x40053ce	    0xc74424300100	               mov dword [rsp + 0x30], 1	      8633	screen.c	FUNCTION_66	FOR_1	IF_7
0x40053d6	        0x89442414	             mov dword [rsp + 0x14], eax	      8633	screen.c	FUNCTION_66	FOR_1	IF_7
0x40053da	      0xe9eefaffff	                           jmp 0x4004ecd	      8633	screen.c	FUNCTION_66	FOR_1	IF_7
0x40053df	            0x39c3	                            cmp ebx, eax	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053e1	     0xf8d0efeffff	                           jge 0x40051f5	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053e7	          0x4c63c3	                          movsxd r8, ebx	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053ea	        0x4b8d3401	                      lea rsi, [r9 + r8]	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053ee	          0x803e20	                    cmp byte [rsi], 0x20	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053f1	     0xf8513ffffff	                           jne 0x400530a	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053f7	    0x488b0d000000	            mov rcx, qword [0x040053fe] 	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x40053fe	        0x4a8d3c41	                   lea rdi, [rcx + r8*2]	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005402	        0x66833f00	                       cmp word [rdi], 0	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005406	     0xf85fefeffff	                           jne 0x400530a	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400540c	    0x488b0d000000	            mov rcx, qword [0x04005413] 	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005413	        0x4a8d0c81	                   lea rcx, [rcx + r8*4]	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005417	            0x8b29	                    mov ebp, dword [rcx]	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005419	            0x85ed	                           test ebp, ebp	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400541b	     0xf85e9feffff	                           jne 0x400530a	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005421	          0x83e801	                              sub eax, 1	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005424	          0x4189c0	                            mov r8d, eax	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005427	            0x31c0	                            xor eax, eax	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005429	          0x4129d8	                            sub r8d, ebx	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400542c	            0xeb28	                           jmp 0x4005456	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400542e	      0x807c060120	         cmp byte [rsi + rax + 1], 0x20 	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005433	     0xf85d1feffff	                           jne 0x400530a	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005439	    0x66837c470200	           cmp word [rdi + rax*2 + 2], 0	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400543f	     0xf85c5feffff	                           jne 0x400530a	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005445	        0x4883c001	                              add rax, 1	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005449	        0x448b1c81	           mov r11d, dword [rcx + rax*4]	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400544d	          0x4585db	                         test r11d, r11d	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005450	     0xf85b4feffff	                           jne 0x400530a	      8612	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005456	          0x83c301	                              add ebx, 1	      8613	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005459	          0x4939c0	                             cmp r8, rax	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400545c	            0x75d0	                           jne 0x400542e	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x400545e	      0xe992fdffff	                           jmp 0x40051f5	      8611	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x4005463	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      8696	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x4005467	            0x85c0	                           test eax, eax	      8696	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x4005469	     0xf8521fcffff	                           jne 0x4005090	      8696	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x400546f	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      8696	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x4005473	      0xe940fbffff	                           jmp 0x4004fb8	      8696	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
update_debug_sign	functions,2:IF,1:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	108
0x4013040	    0x488b05000000	            mov rax, qword [0x04013047] 	       985	screen.c	FUNCTION_18
0x4013047	    0xc70500000000	               mov dword [0x04013051], 0	       981	screen.c	FUNCTION_18
0x4013051	          0x4885c0	                           test rax, rax	       985	screen.c	FUNCTION_18
0x4013054	     0xf84b7000000	                            je 0x4013111	       985	screen.c	FUNCTION_18
0x401305a	          0x4885ff	                           test rdi, rdi	       985	screen.c	FUNCTION_18
0x401305d	              0x53	                                push rbx	       976	screen.c	FUNCTION_18
0x401305e	          0x4989f3	                            mov r11, rsi	       976	screen.c	FUNCTION_18
0x4013061	        0x410f95c0	                               setne r8b	       976	screen.c	FUNCTION_18
0x4013065	          0x4885f6	                           test rsi, rsi	       976	screen.c	FUNCTION_18
0x4013068	          0x4989fa	                            mov r10, rdi	       976	screen.c	FUNCTION_18
0x401306b	           0xf9fc2	                                 setg dl	       976	screen.c	FUNCTION_18
0x401306e	    0x41b901000000	                              mov r9d, 1	      1002	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x4013074	          0x4121d0	                            and r8d, edx	      1002	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x4013077	            0x31d2	                            xor edx, edx	       985	screen.c	FUNCTION_18
0x4013079	            0xeb24	                           jmp 0x401309f	       985	screen.c	FUNCTION_18
0x401307b	       0xf1f440000	                   nop dword [rax + rax]	       985	screen.c	FUNCTION_18
0x4013080	        0x4c3b5008	                cmp r10, qword [rax + 8]	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x4013084	     0xf84a6000000	                            je 0x4013130	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x401308a	    0x8b8828010000	           mov ecx, dword [rax + 0x128] 	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x4013090	        0x488b4020	            mov rax, qword [rax + 0x20] 	       985	screen.c	FUNCTION_18
0x4013094	            0x85c9	                           test ecx, ecx	      1002	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x4013096	        0x410f45d1	                         cmovne edx, r9d	      1002	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x401309a	          0x4885c0	                           test rax, rax	       985	screen.c	FUNCTION_18
0x401309d	            0x7429	                            je 0x40130c8	       985	screen.c	FUNCTION_18
0x401309f	          0x4584c0	                           test r8b, r8b	       987	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x40130a2	            0x75dc	                           jne 0x4013080	       987	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x40130a4	    0x8b1d00000000	            mov ebx, dword [0x040130aa] 	       206	screen.c	FUNCTION_2	IF_1
0x40130aa	            0x85db	                           test ebx, ebx	       206	screen.c	FUNCTION_2	IF_1
0x40130ac	            0x75dc	                           jne 0x401308a	       206	screen.c	FUNCTION_2	IF_1
0x40130ae	    0x83b828010000	              cmp dword [rax + 0x128], 9	       206	screen.c	FUNCTION_2	IF_1
0x40130b5	            0x7e61	                           jle 0x4013118	       206	screen.c	FUNCTION_2	IF_1
0x40130b7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       985	screen.c	FUNCTION_18
0x40130bb	      0xba01000000	                              mov edx, 1	      1002	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x40130c0	          0x4885c0	                           test rax, rax	       985	screen.c	FUNCTION_18
0x40130c3	            0x75da	                           jne 0x401309f	       985	screen.c	FUNCTION_18
0x40130c5	           0xf1f00	                         nop dword [rax]	       985	screen.c	FUNCTION_18
0x40130c8	            0x85d2	                           test edx, edx	      1008	screen.c	FUNCTION_18	IF_1
0x40130ca	            0x7444	                            je 0x4013110	      1008	screen.c	FUNCTION_18	IF_1
0x40130cc	    0x448b0d000000	            mov r9d, dword [0x040130d3] 	      1008	screen.c	FUNCTION_18	IF_1
0x40130d3	          0x4585c9	                           test r9d, r9d	      1008	screen.c	FUNCTION_18	IF_1
0x40130d6	            0x7538	                           jne 0x4013110	      1008	screen.c	FUNCTION_18	IF_1
0x40130d8	    0x8b0500000000	            mov eax, dword [0x040130de] 	      1009	screen.c	FUNCTION_18	IF_1
0x40130de	      0x3d00030000	                          cmp eax, 0x300	      1009	screen.c	FUNCTION_18	IF_1
0x40130e3	            0x742b	                            je 0x4013110	      1009	screen.c	FUNCTION_18	IF_1
0x40130e5	      0x3d01020000	                          cmp eax, 0x201	      1009	screen.c	FUNCTION_18	IF_1
0x40130ea	            0x7424	                            je 0x4013110	      1009	screen.c	FUNCTION_18	IF_1
0x40130ec	    0x448b05000000	            mov r8d, dword [0x040130f3] 	      1010	screen.c	FUNCTION_18	IF_1
0x40130f3	          0x4585c0	                           test r8d, r8d	      1010	screen.c	FUNCTION_18	IF_1
0x40130f6	            0x7518	                           jne 0x4013110	      1010	screen.c	FUNCTION_18	IF_1
0x40130f8	    0x8b3d00000000	            mov edi, dword [0x040130fe] 	      1012	screen.c	FUNCTION_18	IF_1
0x40130fe	            0x85ff	                           test edi, edi	      1012	screen.c	FUNCTION_18	IF_1
0x4013100	            0x750e	                           jne 0x4013110	      1012	screen.c	FUNCTION_18	IF_1
0x4013102	    0x8b3500000000	            mov esi, dword [0x04013108] 	      1014	screen.c	FUNCTION_18	IF_1
0x4013108	            0x85f6	                           test esi, esi	      1014	screen.c	FUNCTION_18	IF_1
0x401310a	            0x7476	                            je 0x4013182	      1014	screen.c	FUNCTION_18	IF_1
0x401310c	         0xf1f4000	                         nop dword [rax]	      1014	screen.c	FUNCTION_18	IF_1
0x4013110	              0x5b	                                 pop rbx	      1029	screen.c	FUNCTION_18
0x4013111	            0xf3c3	                                     ret	      1029	screen.c	FUNCTION_18
0x4013113	       0xf1f440000	                   nop dword [rax + rax]	      1029	screen.c	FUNCTION_18
0x4013118	      0xbe0a000000	                            mov esi, 0xa	      1029	screen.c	FUNCTION_18
0x401311d	          0x4889c7	                            mov rdi, rax	      1029	screen.c	FUNCTION_18
0x4013120	      0xe83be6feff	       call sym.redraw_win_later.part.10	      1029	screen.c	FUNCTION_18
0x4013125	      0xe960ffffff	                           jmp 0x401308a	      1029	screen.c	FUNCTION_18
0x401312a	    0x660f1f440000	                    nop word [rax + rax]	      1029	screen.c	FUNCTION_18
0x4013130	        0x4c3b5878	            cmp r11, qword [rax + 0x78] 	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x4013134	     0xf8c50ffffff	                            jl 0x401308a	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x401313a	    0x4c3b98e80000	            cmp r11, qword [rax + 0xe8] 	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x4013141	     0xf8d43ffffff	                           jge 0x401308a	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x4013147	    0x488b88300100	           mov rcx, qword [rax + 0x130] 	       992	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x401314e	          0x4939cb	                            cmp r11, rcx	       992	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013151	            0x7c26	                            jl 0x4013179	       992	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013153	          0x4885c9	                           test rcx, rcx	       992	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013156	            0x7421	                            je 0x4013179	       992	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013158	    0x488b88380100	           mov rcx, qword [rax + 0x138] 	       994	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x401315f	          0x4885c9	                           test rcx, rcx	       994	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x4013162	            0x7409	                            je 0x401316d	       994	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x4013164	          0x4939cb	                            cmp r11, rcx	       994	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x4013167	     0xf8e37ffffff	                           jle 0x40130a4	       994	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x401316d	    0x4c8998380100	            mov qword [rax + 0x138], r11	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x4013174	      0xe92bffffff	                           jmp 0x40130a4	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x4013179	    0x4c8998300100	            mov qword [rax + 0x130], r11	       993	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013180	            0xebd6	                           jmp 0x4013158	       993	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x4013182	      0xe899d4feff	                 call sym.update_prepare	      1018	screen.c	FUNCTION_18	CALL_1
0x4013187	    0x488b1d000000	            mov rbx, qword [0x0401318e] 	      1020	screen.c	FUNCTION_18
0x401318e	          0x4885db	                           test rbx, rbx	      1020	screen.c	FUNCTION_18
0x4013191	            0x7522	                           jne 0x40131b5	      1020	screen.c	FUNCTION_18
0x4013193	            0xeb3e	                           jmp 0x40131d3	      1020	screen.c	FUNCTION_18
0x4013195	           0xf1f00	                         nop dword [rax]	      1020	screen.c	FUNCTION_18
0x4013198	    0x8b9340010000	           mov edx, dword [rbx + 0x140] 	      1024	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x401319e	            0x85d2	                           test edx, edx	      1024	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x40131a0	            0x740a	                            je 0x40131ac	      1024	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x40131a2	    0x8b0500000000	            mov eax, dword [0x040131a8] 	      6873	screen.c	FUNCTION_42	IF_1
0x40131a8	            0x85c0	                           test eax, eax	      6873	screen.c	FUNCTION_42	IF_1
0x40131aa	            0x741d	                            je 0x40131c9	      6873	screen.c	FUNCTION_42	IF_1
0x40131ac	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1020	screen.c	FUNCTION_18
0x40131b0	          0x4885db	                           test rbx, rbx	      1020	screen.c	FUNCTION_18
0x40131b3	            0x741e	                            je 0x40131d3	      1020	screen.c	FUNCTION_18
0x40131b5	    0x8b8b28010000	           mov ecx, dword [rbx + 0x128] 	      1022	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x40131bb	            0x85c9	                           test ecx, ecx	      1022	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x40131bd	            0x74d9	                            je 0x4013198	      1022	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x40131bf	          0x4889df	                            mov rdi, rbx	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131c2	      0xe8f9c9ffff	                     call sym.win_update	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131c7	            0xebcf	                           jmp 0x4013198	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131c9	          0x4889df	                            mov rdi, rbx	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131cc	      0xe88f5cffff	        call sym.win_redr_status.part.21	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131d1	            0xebd9	                           jmp 0x40131ac	      1023	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x40131d3	              0x5b	                                 pop rbx	      1029	screen.c	FUNCTION_18
0x40131d4	      0xe9676affff	                   jmp sym.update_finish	      1028	screen.c	FUNCTION_18	CALL_2
lineclear	functions,0:IF,1:DO,0:ELSE,0:CALL,3:FOR,0:WHILE,0:SWITCH,0	27
0x4000460	            0x4154	                                push r12	      9144	screen.c	FUNCTION_73
0x4000462	              0x55	                                push rbp	      9144	screen.c	FUNCTION_73
0x4000463	            0x89fd	                            mov ebp, edi	      9145	screen.c	FUNCTION_73	CALL_1
0x4000465	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_107	CALL_6
0x4000468	    0x48033d000000	             add rdi, qword [0x0400046f]	        90	string3.h	FUNCTION_107	CALL_6
0x400046f	              0x53	                                push rbx	      9144	screen.c	FUNCTION_73
0x4000470	          0x4863de	                         movsxd rbx, esi	      9145	screen.c	FUNCTION_73	CALL_1
0x4000473	          0x4189d4	                           mov r12d, edx	      9144	screen.c	FUNCTION_73
0x4000476	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_107	CALL_6
0x400047b	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_107	CALL_6
0x400047e	      0xe800000000	                          call 0x4000483	        90	string3.h	FUNCTION_107	CALL_6
0x4000483	    0x8b0500000000	            mov eax, dword [0x04000489] 	      9147	screen.c	FUNCTION_73	IF_1
0x4000489	            0x85c0	                           test eax, eax	      9147	screen.c	FUNCTION_73	IF_1
0x400048b	            0x741a	                            je 0x40004a7	      9147	screen.c	FUNCTION_73	IF_1
0x400048d	    0x488b05000000	            mov rax, qword [0x04000494] 	        90	string3.h	FUNCTION_107	CALL_6
0x4000494	    0x488d149d0000	                        lea rdx, [rbx*4]	        90	string3.h	FUNCTION_107	CALL_6
0x400049c	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x400049e	        0x488d3ca8	                  lea rdi, [rax + rbp*4]	        90	string3.h	FUNCTION_107	CALL_6
0x40004a2	      0xe800000000	                          call 0x40004a7	        90	string3.h	FUNCTION_107	CALL_6
0x40004a7	    0x488b05000000	            mov rax, qword [0x040004ae] 	        90	string3.h	FUNCTION_107	CALL_6
0x40004ae	        0x488d141b	                    lea rdx, [rbx + rbx]	        90	string3.h	FUNCTION_107	CALL_6
0x40004b2	          0x4489e6	                           mov esi, r12d	        90	string3.h	FUNCTION_107	CALL_6
0x40004b5	              0x5b	                                 pop rbx	      9152	screen.c	FUNCTION_73
0x40004b6	        0x488d3c68	                  lea rdi, [rax + rbp*2]	        90	string3.h	FUNCTION_107	CALL_6
0x40004ba	              0x5d	                                 pop rbp	      9152	screen.c	FUNCTION_73
0x40004bb	            0x415c	                                 pop r12	      9152	screen.c	FUNCTION_73
0x40004bd	      0xe900000000	                           jmp 0x40004c2	        90	string3.h	FUNCTION_107	CALL_6
redraw_statuslines	functions,0:IF,2:DO,0:ELSE,0:CALL,3:FOR,0:WHILE,0:SWITCH,0	29
0x4009360	              0x53	                                push rbx	      6525	screen.c	FUNCTION_36
0x4009361	    0x488b1d000000	            mov rbx, qword [0x04009368] 	      6528	screen.c	FUNCTION_36	CALL_1
0x4009368	          0x4885db	                           test rbx, rbx	      6528	screen.c	FUNCTION_36	CALL_1
0x400936b	            0x750c	                           jne 0x4009379	      6528	screen.c	FUNCTION_36	CALL_1
0x400936d	            0xeb31	                           jmp 0x40093a0	      6528	screen.c	FUNCTION_36	CALL_1
0x400936f	              0x90	                                     nop	      6528	screen.c	FUNCTION_36	CALL_1
0x4009370	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      6528	screen.c	FUNCTION_36	CALL_1
0x4009374	          0x4885db	                           test rbx, rbx	      6528	screen.c	FUNCTION_36	CALL_1
0x4009377	            0x7427	                            je 0x40093a0	      6528	screen.c	FUNCTION_36	CALL_1
0x4009379	    0x8b9340010000	           mov edx, dword [rbx + 0x140] 	      6529	screen.c	FUNCTION_36	IF_1
0x400937f	            0x85d2	                           test edx, edx	      6529	screen.c	FUNCTION_36	IF_1
0x4009381	            0x74ed	                            je 0x4009370	      6529	screen.c	FUNCTION_36	IF_1
0x4009383	    0x8b0500000000	            mov eax, dword [0x04009389] 	      6873	screen.c	FUNCTION_42	IF_1
0x4009389	            0x85c0	                           test eax, eax	      6873	screen.c	FUNCTION_42	IF_1
0x400938b	            0x75e3	                           jne 0x4009370	      6873	screen.c	FUNCTION_42	IF_1
0x400938d	          0x4889df	                            mov rdi, rbx	      6873	screen.c	FUNCTION_42	IF_1
0x4009390	      0xe8cbfaffff	        call sym.win_redr_status.part.21	      6873	screen.c	FUNCTION_42	IF_1
0x4009395	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      6528	screen.c	FUNCTION_36	CALL_1
0x4009399	          0x4885db	                           test rbx, rbx	      6528	screen.c	FUNCTION_36	CALL_1
0x400939c	            0x75db	                           jne 0x4009379	      6528	screen.c	FUNCTION_36	CALL_1
0x400939e	            0x6690	                                     nop	      6528	screen.c	FUNCTION_36	CALL_1
0x40093a0	    0x8b0d00000000	            mov ecx, dword [0x040093a6] 	      6531	screen.c	FUNCTION_36	IF_2
0x40093a6	            0x85c9	                           test ecx, ecx	      6531	screen.c	FUNCTION_36	IF_2
0x40093a8	            0x7506	                           jne 0x40093b0	      6531	screen.c	FUNCTION_36	IF_2
0x40093aa	              0x5b	                                 pop rbx	      6533	screen.c	FUNCTION_36
0x40093ab	              0xc3	                                     ret	      6533	screen.c	FUNCTION_36
0x40093ac	         0xf1f4000	                         nop dword [rax]	      6533	screen.c	FUNCTION_36
0x40093b0	              0x5b	                                 pop rbx	      6533	screen.c	FUNCTION_36
0x40093b1	      0xe9faf3ffff	                    jmp sym.draw_tabline	      6532	screen.c	FUNCTION_36	CALL_3
screen_putchar	functions,0:IF,1:DO,0:ELSE,1:CALL,1:FOR,0:WHILE,0:SWITCH,0	38
0x4004b70	              0x53	                                push rbx	      7323	screen.c	FUNCTION_47
0x4004b71	            0x89f3	                            mov ebx, esi	      7323	screen.c	FUNCTION_47
0x4004b73	        0x4883ec30	                           sub rsp, 0x30	      7323	screen.c	FUNCTION_47
0x4004b77	    0x64488b042528	                mov rax, qword fs:[0x28]	      7323	screen.c	FUNCTION_47
0x4004b80	      0x4889442428	             mov qword [rsp + 0x28], rax	      7323	screen.c	FUNCTION_47
0x4004b85	            0x31c0	                            xor eax, eax	      7323	screen.c	FUNCTION_47
0x4004b87	    0x8b0500000000	            mov eax, dword [0x04004b8d] 	      7327	screen.c	FUNCTION_47	IF_1
0x4004b8d	            0x85c0	                           test eax, eax	      7327	screen.c	FUNCTION_47	IF_1
0x4004b8f	            0x754f	                           jne 0x4004be0	      7327	screen.c	FUNCTION_47	IF_1
0x4004b91	      0x40887c2410	              mov byte [rsp + 0x10], dil	      7332	screen.c	FUNCTION_47	ELSE_1
0x4004b96	      0xc644241100	                mov byte [rsp + 0x11], 0	      7333	screen.c	FUNCTION_47	ELSE_1
0x4004b9b	    0x48833d000000	               cmp qword [0x04004ba3], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4004ba3	            0x741e	                            je 0x4004bc3	      7448	screen.c	FUNCTION_51	IF_1
0x4004ba5	    0x3b1d00000000	            cmp ebx, dword [0x04004bab] 	      7448	screen.c	FUNCTION_51	IF_1
0x4004bab	            0x7d16	                           jge 0x4004bc3	      7448	screen.c	FUNCTION_51	IF_1
0x4004bad	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7448	screen.c	FUNCTION_51	IF_1
0x4004bb2	          0x4189c8	                            mov r8d, ecx	      7448	screen.c	FUNCTION_51	IF_1
0x4004bb5	      0xbeffffffff	                     mov esi, 0xffffffff	      7448	screen.c	FUNCTION_51	IF_1
0x4004bba	            0x89d1	                            mov ecx, edx	      7448	screen.c	FUNCTION_51	IF_1
0x4004bbc	            0x89da	                            mov edx, ebx	      7448	screen.c	FUNCTION_51	IF_1
0x4004bbe	      0xe80deeffff	        call sym.screen_puts_len.part.16	      7448	screen.c	FUNCTION_51	IF_1
0x4004bc3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7336	screen.c	FUNCTION_47
0x4004bc8	    0x644833042528	                xor rax, qword fs:[0x28]	      7336	screen.c	FUNCTION_47
0x4004bd1	            0x7531	                           jne 0x4004c04	      7336	screen.c	FUNCTION_47
0x4004bd3	        0x4883c430	                           add rsp, 0x30	      7336	screen.c	FUNCTION_47
0x4004bd7	              0x5b	                                 pop rbx	      7336	screen.c	FUNCTION_47
0x4004bd8	              0xc3	                                     ret	      7336	screen.c	FUNCTION_47
0x4004bd9	     0xf1f80000000	                         nop dword [rax]	      7336	screen.c	FUNCTION_47
0x4004be0	        0x894c240c	              mov dword [rsp + 0xc], ecx	      7336	screen.c	FUNCTION_47
0x4004be4	        0x89542408	                mov dword [rsp + 8], edx	      7336	screen.c	FUNCTION_47
0x4004be8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      7328	screen.c	FUNCTION_47	IF_1
0x4004bed	    0xff1500000000	                 call qword [0x04004bf3]	      7328	screen.c	FUNCTION_47	IF_1
0x4004bf3	            0x4898	                                    cdqe	      7328	screen.c	FUNCTION_47	IF_1
0x4004bf5	        0x8b542408	                mov edx, dword [rsp + 8]	      7328	screen.c	FUNCTION_47	IF_1
0x4004bf9	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      7328	screen.c	FUNCTION_47	IF_1
0x4004bfd	      0xc644041000	          mov byte [rsp + rax + 0x10], 0	      7328	screen.c	FUNCTION_47	IF_1
0x4004c02	            0xeb97	                           jmp 0x4004b9b	      7328	screen.c	FUNCTION_47	IF_1
0x4004c04	      0xe800000000	                          call 0x4004c09	      7336	screen.c	FUNCTION_47
redraw_buf_and_status_later	functions,1:IF,1:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	31
0x4001980	    0x448b05000000	            mov r8d, dword [0x04001987] 	       276	screen.c	FUNCTION_7	IF_1
0x4001987	          0x4585c0	                           test r8d, r8d	       276	screen.c	FUNCTION_7	IF_1
0x400198a	            0x7548	                           jne 0x40019d4	       276	screen.c	FUNCTION_7	IF_1
0x400198c	    0x488b05000000	            mov rax, qword [0x04001993] 	       281	screen.c	FUNCTION_7
0x4001993	            0x89f1	                            mov ecx, esi	       281	screen.c	FUNCTION_7
0x4001995	          0x4889fa	                            mov rdx, rdi	       281	screen.c	FUNCTION_7
0x4001998	          0x4885c0	                           test rax, rax	       281	screen.c	FUNCTION_7
0x400199b	            0x750c	                           jne 0x40019a9	       281	screen.c	FUNCTION_7
0x400199d	            0xeb35	                           jmp 0x40019d4	       281	screen.c	FUNCTION_7
0x400199f	              0x90	                                     nop	       281	screen.c	FUNCTION_7
0x40019a0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       281	screen.c	FUNCTION_7
0x40019a4	          0x4885c0	                           test rax, rax	       281	screen.c	FUNCTION_7
0x40019a7	            0x742b	                            je 0x40019d4	       281	screen.c	FUNCTION_7
0x40019a9	        0x48395008	                cmp qword [rax + 8], rdx	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x40019ad	            0x75f1	                           jne 0x40019a0	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x40019af	    0x8b3500000000	            mov esi, dword [0x040019b5] 	       206	screen.c	FUNCTION_2	IF_1
0x40019b5	            0x85f6	                           test esi, esi	       206	screen.c	FUNCTION_2	IF_1
0x40019b7	            0x7508	                           jne 0x40019c1	       206	screen.c	FUNCTION_2	IF_1
0x40019b9	    0x3b8828010000	           cmp ecx, dword [rax + 0x128] 	       206	screen.c	FUNCTION_2	IF_1
0x40019bf	            0x7f1f	                            jg 0x40019e0	       206	screen.c	FUNCTION_2	IF_1
0x40019c1	    0xc78040010000	              mov dword [rax + 0x140], 1	       286	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x40019cb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       281	screen.c	FUNCTION_7
0x40019cf	          0x4885c0	                           test rax, rax	       281	screen.c	FUNCTION_7
0x40019d2	            0x75d5	                           jne 0x40019a9	       281	screen.c	FUNCTION_7
0x40019d4	            0xf3c3	                                     ret	       281	screen.c	FUNCTION_7
0x40019d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       281	screen.c	FUNCTION_7
0x40019e0	            0x89ce	                            mov esi, ecx	       281	screen.c	FUNCTION_7
0x40019e2	          0x4889c7	                            mov rdi, rax	       281	screen.c	FUNCTION_7
0x40019e5	      0xe876fdffff	       call sym.redraw_win_later.part.10	       281	screen.c	FUNCTION_7
0x40019ea	    0xc78040010000	              mov dword [rax + 0x140], 1	       286	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x40019f4	            0xebd5	                           jmp 0x40019cb	       286	screen.c	FUNCTION_7	FUNCTION_1	IF_1
screen_get_current_line_off	functions,0:IF,0:DO,0:ELSE,0:CALL,0:FOR,0:WHILE,0:SWITCH,0	3
0x4001b20	    0x488b05000000	            mov rax, qword [0x04001b27] 	      6059	screen.c	FUNCTION_31
0x4001b27	    0x482b05000000	             sub rax, qword [0x04001b2e]	      6059	screen.c	FUNCTION_31
0x4001b2e	              0xc3	                                     ret	      6060	screen.c	FUNCTION_31
win_redr_ruler	functions,0:IF,19:DO,0:ELSE,3:CALL,20:FOR,1:WHILE,1:SWITCH,0	398
0x4005840	            0x4157	                                push r15	     10897	screen.c	FUNCTION_100
0x4005842	            0x4156	                                push r14	     10897	screen.c	FUNCTION_100
0x4005844	            0x4155	                                push r13	     10897	screen.c	FUNCTION_100
0x4005846	            0x4154	                                push r12	     10897	screen.c	FUNCTION_100
0x4005848	              0x55	                                push rbp	     10897	screen.c	FUNCTION_100
0x4005849	              0x53	                                push rbx	     10897	screen.c	FUNCTION_100
0x400584a	    0x4881ec880000	                           sub rsp, 0x88	     10897	screen.c	FUNCTION_100
0x4005851	    0x448b2d000000	           mov r13d, dword [0x04005858] 	     10913	screen.c	FUNCTION_100	IF_1
0x4005858	    0x64488b042528	                mov rax, qword fs:[0x28]	     10897	screen.c	FUNCTION_100
0x4005861	      0x4889442478	             mov qword [rsp + 0x78], rax	     10897	screen.c	FUNCTION_100
0x4005866	            0x31c0	                            xor eax, eax	     10897	screen.c	FUNCTION_100
0x4005868	          0x4585ed	                         test r13d, r13d	     10913	screen.c	FUNCTION_100	IF_1
0x400586b	            0x7410	                            je 0x400587d	     10913	screen.c	FUNCTION_100	IF_1
0x400586d	        0x488b4708	                mov rax, qword [rdi + 8]	     10920	screen.c	FUNCTION_100	IF_2
0x4005871	          0x4989ff	                            mov r15, rdi	     10920	screen.c	FUNCTION_100	IF_2
0x4005874	          0x488b00	                    mov rax, qword [rax]	     10920	screen.c	FUNCTION_100	IF_2
0x4005877	        0x48394738	            cmp qword [rdi + 0x38], rax 	     10920	screen.c	FUNCTION_100	IF_2
0x400587b	            0x7e2b	                           jle 0x40058a8	     10920	screen.c	FUNCTION_100	IF_2
0x400587d	      0x488b442478	            mov rax, qword [rsp + 0x78] 	     11083	screen.c	FUNCTION_100
0x4005882	    0x644833042528	                xor rax, qword fs:[0x28]	     11083	screen.c	FUNCTION_100
0x400588b	     0xf8524060000	                           jne 0x4005eb5	     11083	screen.c	FUNCTION_100
0x4005891	    0x4881c4880000	                           add rsp, 0x88	     11083	screen.c	FUNCTION_100
0x4005898	              0x5b	                                 pop rbx	     11083	screen.c	FUNCTION_100
0x4005899	              0x5d	                                 pop rbp	     11083	screen.c	FUNCTION_100
0x400589a	            0x415c	                                 pop r12	     11083	screen.c	FUNCTION_100
0x400589c	            0x415d	                                 pop r13	     11083	screen.c	FUNCTION_100
0x400589e	            0x415e	                                 pop r14	     11083	screen.c	FUNCTION_100
0x40058a0	            0x415f	                                 pop r15	     11083	screen.c	FUNCTION_100
0x40058a2	              0xc3	                                     ret	     11083	screen.c	FUNCTION_100
0x40058a3	       0xf1f440000	                   nop dword [rax + rax]	     11083	screen.c	FUNCTION_100
0x40058a8	    0x483b3d000000	            cmp rdi, qword [0x040058af] 	     10926	screen.c	FUNCTION_100	IF_3
0x40058af	            0x89f3	                            mov ebx, esi	     10926	screen.c	FUNCTION_100	IF_3
0x40058b1	            0x7445	                            je 0x40058f8	     10926	screen.c	FUNCTION_100	IF_3
0x40058b3	      0xe800000000	                          call 0x40058b8	     10930	screen.c	FUNCTION_100	IF_5	CALL_1
0x40058b8	            0x85c0	                           test eax, eax	     10930	screen.c	FUNCTION_100	IF_5	CALL_1
0x40058ba	          0x4189c4	                           mov r12d, eax	     10930	screen.c	FUNCTION_100	IF_5	CALL_1
0x40058bd	            0x75be	                           jne 0x400587d	     10930	screen.c	FUNCTION_100	IF_5	CALL_1
0x40058bf	    0x488b05000000	            mov rax, qword [0x040058c6] 	     10935	screen.c	FUNCTION_100	IF_6
0x40058c6	          0x803800	                       cmp byte [rax], 0	     10935	screen.c	FUNCTION_100	IF_6
0x40058c9	            0x744d	                            je 0x4005918	     10935	screen.c	FUNCTION_100	IF_6
0x40058cb	    0x8b2d00000000	            mov ebp, dword [0x040058d1] 	      7155	screen.c	FUNCTION_46	IF_1
0x40058d1	    0x8b1d00000000	            mov ebx, dword [0x040058d7] 	     10937	screen.c	FUNCTION_100	IF_6
0x40058d7	    0xc70500000000	               mov dword [0x040058e1], 0	     10939	screen.c	FUNCTION_100	IF_6
0x40058e1	            0x85ed	                           test ebp, ebp	      7155	screen.c	FUNCTION_46	IF_1
0x40058e3	     0xf8457030000	                            je 0x4005c40	      7155	screen.c	FUNCTION_46	IF_1
0x40058e9	          0x4109dc	                            or r12d, ebx	     10944	screen.c	FUNCTION_100	IF_6
0x40058ec	    0x448925000000	           mov dword [0x040058f3], r12d 	     10944	screen.c	FUNCTION_100	IF_6
0x40058f3	            0xeb88	                           jmp 0x400587d	     10945	screen.c	FUNCTION_100	IF_6
0x40058f5	           0xf1f00	                         nop dword [rax]	     10945	screen.c	FUNCTION_100	IF_6
0x40058f8	    0x448ba7a40000	           mov r12d, dword [rdi + 0xa4] 	     10926	screen.c	FUNCTION_100	IF_3
0x40058ff	          0x4585e4	                         test r12d, r12d	     10926	screen.c	FUNCTION_100	IF_3
0x4005902	            0x75af	                           jne 0x40058b3	     10926	screen.c	FUNCTION_100	IF_3
0x4005904	    0x48833d000000	               cmp qword [0x0400590c], 0	     10927	screen.c	FUNCTION_100	IF_3	IF_4
0x400590c	     0xf856bffffff	                           jne 0x400587d	     10927	screen.c	FUNCTION_100	IF_3	IF_4
0x4005912	            0xeb9f	                           jmp 0x40058b3	     10927	screen.c	FUNCTION_100	IF_3	IF_4
0x4005914	         0xf1f4000	                         nop dword [rax]	     10927	screen.c	FUNCTION_100	IF_3	IF_4
0x4005918	    0xf60500000000	           test byte [0x0400591f], 0x10 	     10952	screen.c	FUNCTION_100	IF_8
0x400591f	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	     10903	screen.c	FUNCTION_100
0x4005927	     0xf84eb020000	                            je 0x4005c18	     10952	screen.c	FUNCTION_100	IF_8
0x400592d	          0x4c89ff	                            mov rdi, r15	     10959	screen.c	FUNCTION_100	CALL_5
0x4005930	      0xe800000000	                          call 0x4005935	     10959	screen.c	FUNCTION_100	CALL_5
0x4005935	     0xb1d00000000	              or ebx, dword [0x0400593b]	     10960	screen.c	FUNCTION_100	IF_9
0x400593b	            0x757b	                           jne 0x40059b8	     10960	screen.c	FUNCTION_100	IF_9
0x400593d	    0x498b87480100	           mov rax, qword [r15 + 0x148] 	     10962	screen.c	FUNCTION_100	IF_9
0x4005944	        0x49394738	            cmp qword [r15 + 0x38], rax 	     10962	screen.c	FUNCTION_100	IF_9
0x4005948	            0x756e	                           jne 0x40059b8	     10962	screen.c	FUNCTION_100	IF_9
0x400594a	    0x418b87500100	           mov eax, dword [r15 + 0x150] 	     10963	screen.c	FUNCTION_100	IF_9
0x4005951	        0x41394740	            cmp dword [r15 + 0x40], eax 	     10963	screen.c	FUNCTION_100	IF_9
0x4005955	            0x7561	                           jne 0x40059b8	     10963	screen.c	FUNCTION_100	IF_9
0x4005957	    0x418b87580100	           mov eax, dword [r15 + 0x158] 	     10964	screen.c	FUNCTION_100	IF_9
0x400595e	    0x413987d80000	            cmp dword [r15 + 0xd8], eax 	     10964	screen.c	FUNCTION_100	IF_9
0x4005965	            0x7551	                           jne 0x40059b8	     10964	screen.c	FUNCTION_100	IF_9
0x4005967	    0x418b87540100	           mov eax, dword [r15 + 0x154] 	     10966	screen.c	FUNCTION_100	IF_9
0x400596e	        0x41394744	            cmp dword [r15 + 0x44], eax 	     10966	screen.c	FUNCTION_100	IF_9
0x4005972	            0x7544	                           jne 0x40059b8	     10966	screen.c	FUNCTION_100	IF_9
0x4005974	    0x498b87600100	           mov rax, qword [r15 + 0x160] 	     10968	screen.c	FUNCTION_100	IF_9
0x400597b	        0x49394778	            cmp qword [r15 + 0x78], rax 	     10968	screen.c	FUNCTION_100	IF_9
0x400597f	            0x7537	                           jne 0x40059b8	     10968	screen.c	FUNCTION_100	IF_9
0x4005981	        0x498b4708	                mov rax, qword [r15 + 8]	     10969	screen.c	FUNCTION_100	IF_9
0x4005985	    0x498bb7680100	           mov rsi, qword [r15 + 0x168] 	     10969	screen.c	FUNCTION_100	IF_9
0x400598c	          0x483930	                    cmp qword [rax], rsi	     10969	screen.c	FUNCTION_100	IF_9
0x400598f	            0x7527	                           jne 0x40059b8	     10969	screen.c	FUNCTION_100	IF_9
0x4005991	    0x418b87700100	           mov eax, dword [r15 + 0x170] 	     10971	screen.c	FUNCTION_100	IF_9
0x4005998	    0x413987840000	            cmp dword [r15 + 0x84], eax 	     10971	screen.c	FUNCTION_100	IF_9
0x400599f	            0x7517	                           jne 0x40059b8	     10971	screen.c	FUNCTION_100	IF_9
0x40059a1	    0x410fbe877401	          movsx eax, byte [r15 + 0x174] 	     10973	screen.c	FUNCTION_100	IF_9
0x40059a9	        0x3944241c	            cmp dword [rsp + 0x1c], eax 	     10973	screen.c	FUNCTION_100	IF_9
0x40059ad	     0xf84cafeffff	                            je 0x400587d	     10973	screen.c	FUNCTION_100	IF_9
0x40059b3	       0xf1f440000	                   nop dword [rax + rax]	     10973	screen.c	FUNCTION_100	IF_9
0x40059b8	      0xe800000000	                          call 0x40059bd	     10975	screen.c	FUNCTION_100	IF_9	CALL_6
0x40059bd	    0x458b9fa40000	           mov r11d, dword [r15 + 0xa4] 	     10976	screen.c	FUNCTION_100	IF_9	IF_10
0x40059c4	          0x4585db	                         test r11d, r11d	     10976	screen.c	FUNCTION_100	IF_9	IF_10
0x40059c7	     0xf8503020000	                           jne 0x4005bd0	     10976	screen.c	FUNCTION_100	IF_9	IF_10
0x40059cd	    0x8b0500000000	            mov eax, dword [0x040059d3] 	     10985	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059d3	    0x448b2d000000	           mov r13d, dword [0x040059da] 	     10988	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059da	    0xc74424280000	               mov dword [rsp + 0x28], 0	     10987	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059e2	    0xc74424180000	               mov dword [rsp + 0x18], 0	     10989	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059ea	    0xc74424102000	           mov dword [rsp + 0x10], 0x20 	     10986	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059f2	          0x83e801	                              sub eax, 1	     10985	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059f5	        0x89442414	             mov dword [rsp + 0x14], eax	     10985	screen.c	FUNCTION_100	IF_9	ELSE_1
0x40059f9	    0x458b97340200	          mov r10d, dword [r15 + 0x234] 	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a00	    0x418b87d80000	            mov eax, dword [r15 + 0xd8] 	     10993	screen.c	FUNCTION_100	IF_9
0x4005a07	          0x4585d2	                         test r10d, r10d	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a0a	        0x8944242c	             mov dword [rsp + 0x2c], eax	     10993	screen.c	FUNCTION_100	IF_9
0x4005a0e	            0x7410	                            je 0x4005a20	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a10	    0x448b0d000000	            mov r9d, dword [0x04005a17] 	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a17	          0x4585c9	                           test r9d, r9d	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a1a	     0xf8464040000	                            je 0x4005e84	     10994	screen.c	FUNCTION_100	IF_9	IF_11
0x4005a20	        0x498b4708	                mov rax, qword [r15 + 8]	     11006	screen.c	FUNCTION_100	IF_9
0x4005a24	            0x31c9	                            xor ecx, ecx	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a26	        0xf6401001	               test byte [rax + 0x10], 1	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a2a	            0x7504	                           jne 0x4005a30	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a2c	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a30	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a35	      0xba00000000	                              mov edx, 0	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a3a	      0xbe46000000	                           mov esi, 0x46	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a3f	            0x31c0	                            xor eax, eax	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a41	          0x4889ef	                            mov rdi, rbp	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a44	      0xe800000000	                          call 0x4005a49	     11005	screen.c	FUNCTION_100	IF_9	CALL_10
0x4005a49	          0x4889ef	                            mov rdi, rbp	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a4c	            0x8b17	                    mov edx, dword [rdi]	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a4e	        0x4883c704	                              add rdi, 4	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a52	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a58	            0xf7d2	                                 not edx	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a5a	            0x21d0	                            and eax, edx	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a5c	      0x2580808080	                     and eax, 0x80808080	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a61	            0x74e9	                            je 0x4005a4c	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a63	            0x89c2	                            mov edx, eax	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a65	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a6a	          0xc1ea10	                           shr edx, 0x10	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a6d	      0xa980800000	                        test eax, 0x8080	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a72	           0xf44c2	                          cmove eax, edx	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a75	        0x488d5702	                      lea rdx, [rdi + 2]	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a79	            0x89c6	                            mov esi, eax	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a7b	        0x480f44fa	                          cmove rdi, rdx	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a7f	          0x4000c6	                             add sil, al	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a82	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a86	        0x4883df03	                              sbb rdi, 3	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a8a	          0x4829ef	                            sub rdi, rbp	     11009	screen.c	FUNCTION_100	IF_9	CALL_11
0x4005a8d	          0x4585c0	                           test r8d, r8d	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a90	          0x8d4801	                      lea ecx, [rax + 1]	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a93	            0x7508	                           jne 0x4005a9d	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a95	        0x418b4740	            mov eax, dword [r15 + 0x40] 	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a99	        0x448d6001	                     lea r12d, [rax + 1]	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005a9d	      0xbe46000000	                           mov esi, 0x46	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005aa2	          0x4489e2	                           mov edx, r12d	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005aa5	          0x4989ec	                            mov r12, rbp	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005aa8	          0x4829fe	                            sub rsi, rdi	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005aab	          0x4801ef	                            add rdi, rbp	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005aae	      0xe800000000	                          call 0x4005ab3	     11010	screen.c	FUNCTION_100	IF_9	CALL_12
0x4005ab3	        0x418b1424	                    mov edx, dword [r12]	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ab7	        0x4983c404	                              add r12, 4	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005abb	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ac1	            0xf7d2	                                 not edx	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ac3	            0x21d0	                            and eax, edx	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ac5	      0x2580808080	                     and eax, 0x80808080	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005aca	            0x74e7	                            je 0x4005ab3	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005acc	            0x89c2	                            mov edx, eax	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ace	          0xc1ea10	                           shr edx, 0x10	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ad1	      0xa980800000	                        test eax, 0x8080	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ad6	           0xf44c2	                          cmove eax, edx	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ad9	      0x498d542402	                      lea rdx, [r12 + 2]	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ade	            0x89c7	                            mov edi, eax	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ae0	        0x4c0f44e2	                          cmove r12, rdx	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ae4	          0x4000c7	                             add dil, al	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005ae7	      0xba45000000	                           mov edx, 0x45	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005aec	        0x4983dc03	                              sbb r12, 3	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005af0	          0x4c89ff	                            mov rdi, r15	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005af3	          0x4929ec	                            sub r12, rbp	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005af6	          0x4963cc	                        movsxd rcx, r12d	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005af9	          0x4429e2	                           sub edx, r12d	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005afc	          0x4489e3	                           mov ebx, r12d	     11019	screen.c	FUNCTION_100	IF_9	CALL_13
0x4005aff	      0x4c8d740d01	                lea r14, [rbp + rcx + 1]	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005b04	        0x48890c24	                    mov qword [rsp], rcx	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005b08	          0x4c89f6	                            mov rsi, r14	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005b0b	      0xe800000000	                          call 0x4005b10	     11020	screen.c	FUNCTION_100	IF_9	CALL_14
0x4005b10	          0x4c89f7	                            mov rdi, r14	     11021	screen.c	FUNCTION_100	IF_9	CALL_15
0x4005b13	          0x4589ee	                          mov r14d, r13d	     11024	screen.c	FUNCTION_100	IF_9
0x4005b16	      0xe800000000	                          call 0x4005b1b	     11021	screen.c	FUNCTION_100	IF_9	CALL_15
0x4005b1b	    0x4183bfa40000	               cmp dword [r15 + 0xa4], 1	     11023	screen.c	FUNCTION_100	IF_9	IF_12
0x4005b23	        0x418d5501	                      lea edx, [r13 + 1]	     11023	screen.c	FUNCTION_100	IF_9	IF_12
0x4005b27	    0x8b3500000000	            mov esi, dword [0x04005b2d] 	     11024	screen.c	FUNCTION_100	IF_9
0x4005b2d	          0x4111c4	                           adc r12d, eax	     11023	screen.c	FUNCTION_100	IF_9	IF_12
0x4005b30	    0x442b35000000	            sub r14d, dword [0x04005b37]	     11024	screen.c	FUNCTION_100	IF_9
0x4005b37	            0x89d0	                            mov eax, edx	     11024	screen.c	FUNCTION_100	IF_9
0x4005b39	          0xc1e81f	                           shr eax, 0x1f	     11024	screen.c	FUNCTION_100	IF_9
0x4005b3c	             0x1c2	                            add edx, eax	     11024	screen.c	FUNCTION_100	IF_9
0x4005b3e	          0x4401f6	                           add esi, r14d	     11024	screen.c	FUNCTION_100	IF_9
0x4005b41	            0xd1fa	                              sar edx, 1	     11024	screen.c	FUNCTION_100	IF_9
0x4005b43	    0x41be00000000	                             mov r14d, 0	     11024	screen.c	FUNCTION_100	IF_9
0x4005b49	        0x410f48d6	                         cmovs edx, r14d	     11024	screen.c	FUNCTION_100	IF_9
0x4005b4d	            0x39d6	                            cmp esi, edx	     11024	screen.c	FUNCTION_100	IF_9
0x4005b4f	           0xf4dd6	                         cmovge edx, esi	     11024	screen.c	FUNCTION_100	IF_9
0x4005b52	        0x418d0414	                    lea eax, [r12 + rdx]	     11031	screen.c	FUNCTION_100	IF_9	IF_15
0x4005b56	        0x8954240c	              mov dword [rsp + 0xc], edx	     11031	screen.c	FUNCTION_100	IF_9	IF_15
0x4005b5a	          0x4139c5	                           cmp r13d, eax	     11031	screen.c	FUNCTION_100	IF_9	IF_15
0x4005b5d	     0xf8e44010000	                           jle 0x4005ca7	     11031	screen.c	FUNCTION_100	IF_9	IF_15
0x4005b63	          0x83fb41	                           cmp ebx, 0x41	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b66	        0x488b0c24	                    mov rcx, qword [rsp]	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b6a	     0xf8f23010000	                            jg 0x4005c93	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b70	      0x458d641401	               lea r12d, [r12 + rdx + 1]	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b75	            0xeb31	                           jmp 0x4005ba8	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b77	    0x660f1f840000	                    nop word [rax + rax]	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b80	       0xfb6742410	           movzx esi, byte [rsp + 0x10] 	     11041	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	ELSE_2
0x4005b85	          0x4863c3	                         movsxd rax, ebx	     11041	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	ELSE_2
0x4005b88	          0x83c301	                              add ebx, 1	     11041	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	ELSE_2
0x4005b8b	      0x4088740430	        mov byte [rsp + rax + 0x30], sil	     11041	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	ELSE_2
0x4005b90	          0x4539e5	                          cmp r13d, r12d	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b93	           0xf9fc2	                                 setg dl	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b96	          0x83fb41	                           cmp ebx, 0x41	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b99	           0xf9ec0	                                setle al	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005b9c	        0x4183c401	                             add r12d, 1	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005ba0	            0x84c2	                             test dl, al	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005ba2	     0xf84e8000000	                            je 0x4005c90	     11034	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1
0x4005ba8	    0x8b3500000000	            mov esi, dword [0x04005bae] 	     11037	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bae	            0x85f6	                           test esi, esi	     11037	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bb0	            0x74ce	                            je 0x4005b80	     11037	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bb2	          0x4863f3	                         movsxd rsi, ebx	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bb5	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bb9	          0x4801ee	                            add rsi, rbp	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bbc	    0xff1500000000	                 call qword [0x04005bc2]	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bc2	             0x1c3	                            add ebx, eax	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bc4	            0xebca	                           jmp 0x4005b90	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11038	screen.c	FUNCTION_100	IF_9	IF_15	WHILE_1	IF_16
0x4005bd0	    0x418b87a80100	           mov eax, dword [r15 + 0x1a8] 	     10978	screen.c	FUNCTION_100	IF_9	IF_10	CALL_7
0x4005bd7	    0x4103879c0000	             add eax, dword [r15 + 0x9c]	     10978	screen.c	FUNCTION_100	IF_9	IF_10	CALL_7
0x4005bde	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	     10979	screen.c	FUNCTION_100	IF_9	IF_10	CALL_8
0x4005be3	    0x410387a00000	             add eax, dword [r15 + 0xa0]	     10978	screen.c	FUNCTION_100	IF_9	IF_10	CALL_7
0x4005bea	          0x4c89fe	                            mov rsi, r15	     10979	screen.c	FUNCTION_100	IF_9	IF_10	CALL_8
0x4005bed	        0x89442414	             mov dword [rsp + 0x14], eax	     10978	screen.c	FUNCTION_100	IF_9	IF_10	CALL_7
0x4005bf1	      0xe8caa5ffff	                call sym.fillchar_status	     10979	screen.c	FUNCTION_100	IF_9	IF_10	CALL_8
0x4005bf6	        0x89442410	             mov dword [rsp + 0x10], eax	     10979	screen.c	FUNCTION_100	IF_9	IF_10	CALL_8
0x4005bfa	    0x418b87a80000	            mov eax, dword [r15 + 0xa8] 	     10980	screen.c	FUNCTION_100	IF_9	IF_10
0x4005c01	    0x458bafac0000	           mov r13d, dword [r15 + 0xac] 	     10981	screen.c	FUNCTION_100	IF_9	IF_10
0x4005c08	        0x89442418	             mov dword [rsp + 0x18], eax	     10980	screen.c	FUNCTION_100	IF_9	IF_10
0x4005c0c	      0xe9e8fdffff	                           jmp 0x40059f9	     10980	screen.c	FUNCTION_100	IF_9	IF_10
0x4005c11	     0xf1f80000000	                         nop dword [rax]	     10980	screen.c	FUNCTION_100	IF_9	IF_10
0x4005c18	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	     10953	screen.c	FUNCTION_100	IF_8	CALL_4
0x4005c1c	        0x498b7f08	                mov rdi, qword [r15 + 8]	     10953	screen.c	FUNCTION_100	IF_8	CALL_4
0x4005c20	            0x31d2	                            xor edx, edx	     10953	screen.c	FUNCTION_100	IF_8	CALL_4
0x4005c22	      0xe800000000	                          call 0x4005c27	     10953	screen.c	FUNCTION_100	IF_8	CALL_4
0x4005c27	          0x803800	                       cmp byte [rax], 0	     10903	screen.c	FUNCTION_100
0x4005c2a	           0xf94c0	                                 sete al	     10903	screen.c	FUNCTION_100
0x4005c2d	           0xfb6c0	                           movzx eax, al	     10903	screen.c	FUNCTION_100
0x4005c30	        0x8944241c	             mov dword [rsp + 0x1c], eax	     10903	screen.c	FUNCTION_100
0x4005c34	      0xe9f4fcffff	                           jmp 0x400592d	     10903	screen.c	FUNCTION_100
0x4005c39	     0xf1f80000000	                         nop dword [rax]	     10903	screen.c	FUNCTION_100
0x4005c40	      0xbe01000000	                              mov esi, 1	     10903	screen.c	FUNCTION_100
0x4005c45	          0x4c89ff	                            mov rdi, r15	     10903	screen.c	FUNCTION_100
0x4005c48	      0xe893e8ffff	        call sym.win_redr_custom.part.17	     10903	screen.c	FUNCTION_100
0x4005c4d	    0x448b25000000	           mov r12d, dword [0x04005c54] 	     10941	screen.c	FUNCTION_100	IF_6	IF_7
0x4005c54	          0x4585e4	                         test r12d, r12d	     10941	screen.c	FUNCTION_100	IF_6	IF_7
0x4005c57	     0xf848cfcffff	                            je 0x40058e9	     10941	screen.c	FUNCTION_100	IF_6	IF_7
0x4005c5d	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c63	      0xb901000000	                              mov ecx, 1	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c68	      0xba00000000	                              mov edx, 0	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c6d	      0xbeffffffff	                     mov esi, 0xffffffff	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c72	      0xbf00000000	                              mov edi, 0	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c77	      0xe800000000	                          call 0x4005c7c	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c7c	    0x448b25000000	           mov r12d, dword [0x04005c83] 	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c83	      0xe961fcffff	                           jmp 0x40058e9	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c88	     0xf1f84000000	                   nop dword [rax + rax]	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c90	          0x4863cb	                         movsxd rcx, ebx	     10942	screen.c	FUNCTION_100	IF_6	IF_7	CALL_3
0x4005c93	      0xba46000000	                           mov edx, 0x46	     11044	screen.c	FUNCTION_100	IF_9	IF_15	CALL_16
0x4005c98	      0x488d740d00	                    lea rsi, [rbp + rcx]	     11044	screen.c	FUNCTION_100	IF_9	IF_15	CALL_16
0x4005c9d	          0x4c89ff	                            mov rdi, r15	     11044	screen.c	FUNCTION_100	IF_9	IF_15	CALL_16
0x4005ca0	            0x29da	                            sub edx, ebx	     11044	screen.c	FUNCTION_100	IF_9	IF_15	CALL_16
0x4005ca2	      0xe800000000	                          call 0x4005ca7	     11044	screen.c	FUNCTION_100	IF_9	IF_15	CALL_16
0x4005ca7	    0x8b0d00000000	            mov ecx, dword [0x04005cad] 	     11048	screen.c	FUNCTION_100	IF_9	IF_17
0x4005cad	            0x85c9	                           test ecx, ecx	     11048	screen.c	FUNCTION_100	IF_9	IF_17
0x4005caf	     0xf8453010000	                            je 0x4005e08	     11048	screen.c	FUNCTION_100	IF_9	IF_17
0x4005cb5	            0x31db	                            xor ebx, ebx	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cb7	          0x4531e4	                          xor r12d, r12d	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cba	          0x4531f6	                          xor r14d, r14d	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cbd	      0x807c243000	                cmp byte [rsp + 0x30], 0	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cc2	            0x7523	                           jne 0x4005ce7	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cc4	            0xeb4a	                           jmp 0x4005d10	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cd0	          0x4889cf	                            mov rdi, rcx	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cd3	    0xff1500000000	                 call qword [0x04005cd9]	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cd9	          0x4101c4	                           add r12d, eax	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cdc	          0x4d63f4	                        movsxd r14, r12d	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cdf	    0x42807c343000	          cmp byte [rsp + r14 + 0x30], 0	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005ce5	            0x7429	                            je 0x4005d10	     11051	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005ce7	      0x4a8d4c3500	                    lea rcx, [rbp + r14]	     11053	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cec	          0x4889cf	                            mov rdi, rcx	     11053	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cef	        0x48890c24	                    mov qword [rsp], rcx	     11053	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cf3	    0xff1500000000	                 call qword [0x04005cf9]	     11053	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cf9	             0x1c3	                            add ebx, eax	     11053	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1
0x4005cfb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     11054	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005cff	        0x488b0c24	                    mov rcx, qword [rsp]	     11054	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005d03	             0x1d8	                            add eax, ebx	     11054	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005d05	          0x4139c5	                           cmp r13d, eax	     11054	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005d08	            0x7dc6	                           jge 0x4005cd0	     11054	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005d0a	    0x42c644343000	          mov byte [rsp + r14 + 0x30], 0	     11056	screen.c	FUNCTION_100	IF_9	IF_17	FOR_1	IF_18
0x4005d10	      0x448b74240c	            mov r14d, dword [rsp + 0xc] 	     11066	screen.c	FUNCTION_100	IF_9	CALL_18
0x4005d15	      0x4403742418	            add r14d, dword [rsp + 0x18]	     11066	screen.c	FUNCTION_100	IF_9	CALL_18
0x4005d1a	    0x48833d000000	               cmp qword [0x04005d22], 0	      7448	screen.c	FUNCTION_51	IF_1
0x4005d22	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	     11066	screen.c	FUNCTION_100	IF_9	CALL_18
0x4005d27	            0x7410	                            je 0x4005d39	      7448	screen.c	FUNCTION_51	IF_1
0x4005d29	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      7448	screen.c	FUNCTION_51	IF_1
0x4005d2d	    0x3b0500000000	            cmp eax, dword [0x04005d33] 	      7448	screen.c	FUNCTION_51	IF_1
0x4005d33	     0xf8c2f010000	                            jl 0x4005e68	      7448	screen.c	FUNCTION_51	IF_1
0x4005d39	    0x8b1d00000000	            mov ebx, dword [0x04005d3f] 	     11067	screen.c	FUNCTION_100	IF_9
0x4005d3f	          0x4889ea	                            mov rdx, rbp	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d42	            0x8b0a	                    mov ecx, dword [rdx]	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d44	        0x4883c204	                              add rdx, 4	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d48	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d4e	            0xf7d1	                                 not ecx	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d50	            0x21c8	                            and eax, ecx	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d52	      0x2580808080	                     and eax, 0x80808080	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d57	            0x74e9	                            je 0x4005d42	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d59	            0x89c1	                            mov ecx, eax	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d5b	          0xc1e910	                           shr ecx, 0x10	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d5e	      0xa980800000	                        test eax, 0x8080	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d63	           0xf44c1	                          cmove eax, ecx	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d66	        0x488d4a02	                      lea rcx, [rdx + 2]	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d6a	            0x89c7	                            mov edi, eax	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d6c	        0x480f44d1	                          cmove rdx, rcx	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d70	          0x4000c7	                             add dil, al	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d73	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d77	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d7b	        0x4883da03	                              sbb rdx, 3	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d7f	        0x4883ec08	                              sub rsp, 8	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d83	            0x4150	                                 push r8	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d85	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d8a	          0x4829ea	                            sub rdx, rbp	     11069	screen.c	FUNCTION_100	IF_9	CALL_20
0x4005d8d	          0x4401f2	                           add edx, r14d	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d90	          0x4401e9	                           add ecx, r13d	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d93	          0x8d7001	                      lea esi, [rax + 1]	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d96	            0x89c7	                            mov edi, eax	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d98	          0x4589c1	                            mov r9d, r8d	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005d9b	      0xe800000000	                          call 0x4005da0	     11068	screen.c	FUNCTION_100	IF_9	CALL_19
0x4005da0	        0x498b4738	            mov rax, qword [r15 + 0x38] 	     11074	screen.c	FUNCTION_100	IF_9
0x4005da4	        0x498b5740	            mov rdx, qword [r15 + 0x40] 	     11074	screen.c	FUNCTION_100	IF_9
0x4005da8	    0x891d00000000	            mov dword [0x04005dae], ebx 	     11073	screen.c	FUNCTION_100	IF_9
0x4005dae	    0x498987480100	            mov qword [r15 + 0x148], rax	     11074	screen.c	FUNCTION_100	IF_9
0x4005db5	    0x418b87d80000	            mov eax, dword [r15 + 0xd8] 	     11075	screen.c	FUNCTION_100	IF_9
0x4005dbc	    0x498997500100	            mov qword [r15 + 0x150], rdx	     11074	screen.c	FUNCTION_100	IF_9
0x4005dc3	    0x418987580100	            mov dword [r15 + 0x158], eax	     11075	screen.c	FUNCTION_100	IF_9
0x4005dca	       0xfb644242c	           movzx eax, byte [rsp + 0x2c] 	     11076	screen.c	FUNCTION_100	IF_9
0x4005dcf	    0x418887740100	              mov byte [r15 + 0x174], al	     11076	screen.c	FUNCTION_100	IF_9
0x4005dd6	        0x498b4778	            mov rax, qword [r15 + 0x78] 	     11077	screen.c	FUNCTION_100	IF_9
0x4005dda	    0x498987600100	            mov qword [r15 + 0x160], rax	     11077	screen.c	FUNCTION_100	IF_9
0x4005de1	        0x498b4708	                mov rax, qword [r15 + 8]	     11078	screen.c	FUNCTION_100	IF_9
0x4005de5	          0x488b00	                    mov rax, qword [rax]	     11078	screen.c	FUNCTION_100	IF_9
0x4005de8	    0x498987680100	            mov qword [r15 + 0x168], rax	     11078	screen.c	FUNCTION_100	IF_9
0x4005def	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	     11080	screen.c	FUNCTION_100	IF_9
0x4005df6	    0x418987700100	            mov dword [r15 + 0x170], eax	     11080	screen.c	FUNCTION_100	IF_9
0x4005dfd	              0x58	                                 pop rax	     11080	screen.c	FUNCTION_100	IF_9
0x4005dfe	              0x5a	                                 pop rdx	     11080	screen.c	FUNCTION_100	IF_9
0x4005dff	      0xe979faffff	                           jmp 0x400587d	     11080	screen.c	FUNCTION_100	IF_9
0x4005e04	         0xf1f4000	                         nop dword [rax]	     11080	screen.c	FUNCTION_100	IF_9
0x4005e08	          0x4889ea	                            mov rdx, rbp	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e0b	            0x8b0a	                    mov ecx, dword [rdx]	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e0d	        0x4883c204	                              add rdx, 4	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e11	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e17	            0xf7d1	                                 not ecx	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e19	            0x21c8	                            and eax, ecx	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e1b	      0x2580808080	                     and eax, 0x80808080	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e20	            0x74e9	                            je 0x4005e0b	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e22	            0x89c1	                            mov ecx, eax	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e24	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e28	          0xc1e910	                           shr ecx, 0x10	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e2b	      0xa980800000	                        test eax, 0x8080	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e30	           0xf44c1	                          cmove eax, ecx	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e33	        0x488d4a02	                      lea rcx, [rdx + 2]	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e37	            0x89c6	                            mov esi, eax	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e39	        0x480f44d1	                          cmove rdx, rcx	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e3d	          0x4000c6	                             add sil, al	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e40	        0x4883da03	                              sbb rdx, 3	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e44	          0x4829ea	                            sub rdx, rbp	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e47	             0x1fa	                            add edx, edi	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e49	          0x4139d5	                           cmp r13d, edx	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e4c	     0xf8dbefeffff	                           jge 0x4005d10	     11063	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19	CALL_17
0x4005e52	          0x4489e8	                           mov eax, r13d	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e55	            0x29f8	                            sub eax, edi	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e57	            0x4898	                                    cdqe	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e59	      0xc644043000	          mov byte [rsp + rax + 0x30], 0	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e5e	      0xe9adfeffff	                           jmp 0x4005d10	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e63	       0xf1f440000	                   nop dword [rax + rax]	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e68	          0x4489f1	                           mov ecx, r14d	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e6b	            0x89c2	                            mov edx, eax	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e6d	      0xbeffffffff	                     mov esi, 0xffffffff	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e72	          0x4889ef	                            mov rdi, rbp	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e75	      0xe856dbffff	        call sym.screen_puts_len.part.16	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e7a	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e7f	      0xe9b5feffff	                           jmp 0x4005d39	     11064	screen.c	FUNCTION_100	IF_9	ELSE_3	IF_19
0x4005e84	        0x498d7738	                   lea rsi, [r15 + 0x38]	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005e88	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005e8d	    0x41c787340200	              mov dword [r15 + 0x234], 0	     10996	screen.c	FUNCTION_100	IF_9	IF_11
0x4005e98	          0x4531c0	                            xor r8d, r8d	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005e9b	            0x31d2	                            xor edx, edx	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005e9d	          0x4c89ff	                            mov rdi, r15	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005ea0	      0xe800000000	                          call 0x4005ea5	     10997	screen.c	FUNCTION_100	IF_9	IF_11	CALL_9
0x4005ea5	    0x41c787340200	              mov dword [r15 + 0x234], 1	     10998	screen.c	FUNCTION_100	IF_9	IF_11
0x4005eb0	      0xe96bfbffff	                           jmp 0x4005a20	     10998	screen.c	FUNCTION_100	IF_9	IF_11
0x4005eb5	      0xe800000000	                          call 0x4005eba	     11083	screen.c	FUNCTION_100
win_ins_lines	functions,0:IF,11:DO,0:ELSE,1:CALL,10:FOR,0:WHILE,0:SWITCH,0	122
0x40094b0	            0x4155	                                push r13	      9530	screen.c	FUNCTION_81
0x40094b2	            0x4154	                                push r12	      9530	screen.c	FUNCTION_81
0x40094b4	              0x55	                                push rbp	      9530	screen.c	FUNCTION_81
0x40094b5	              0x53	                                push rbx	      9530	screen.c	FUNCTION_81
0x40094b6	        0x4883ec08	                              sub rsp, 8	      9530	screen.c	FUNCTION_81
0x40094ba	            0x85c9	                           test ecx, ecx	      9536	screen.c	FUNCTION_81	IF_1
0x40094bc	            0x740a	                            je 0x40094c8	      9536	screen.c	FUNCTION_81	IF_1
0x40094be	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	      9537	screen.c	FUNCTION_81	IF_1
0x40094c8	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	      9539	screen.c	FUNCTION_81	IF_2
0x40094ce	          0x83f804	                              cmp eax, 4	      9539	screen.c	FUNCTION_81	IF_2
0x40094d1	     0xf8e91000000	                           jle 0x4009568	      9539	screen.c	FUNCTION_81	IF_2
0x40094d7	            0x29f0	                            sub eax, esi	      9542	screen.c	FUNCTION_81	IF_3
0x40094d9	            0x89d3	                            mov ebx, edx	      9542	screen.c	FUNCTION_81	IF_3
0x40094db	          0x4489c5	                            mov ebp, r8d	      9542	screen.c	FUNCTION_81	IF_3
0x40094de	            0x39d0	                            cmp eax, edx	      9542	screen.c	FUNCTION_81	IF_3
0x40094e0	          0x4189f4	                           mov r12d, esi	      9542	screen.c	FUNCTION_81	IF_3
0x40094e3	          0x4989fd	                            mov r13, rdi	      9542	screen.c	FUNCTION_81	IF_3
0x40094e6	           0xf4ed8	                         cmovle ebx, eax	      9542	screen.c	FUNCTION_81	IF_3
0x40094e9	      0xe800000000	                          call 0x40094ee	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094ee	            0x85c0	                           test eax, eax	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094f0	            0x7476	                            je 0x4009568	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094f2	            0x85db	                           test ebx, ebx	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094f4	            0x7e72	                           jle 0x4009568	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094f6	          0x4531c9	                            xor r9d, r9d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094f9	          0x4531c0	                            xor r8d, r8d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094fc	            0x89e9	                            mov ecx, ebp	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x40094fe	            0x89da	                            mov edx, ebx	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009500	          0x4489e6	                           mov esi, r12d	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009503	          0x4c89ef	                            mov rdi, r13	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x4009506	      0xe8c5efffff	           call sym.win_do_lines.part.22	      9665	screen.c	ELSE_1	FUNCTION_83	IF_1	CALL_1
0x400950b	          0x83f802	                              cmp eax, 2	      9546	screen.c	FUNCTION_81	IF_4
0x400950e	            0x89c5	                            mov ebp, eax	      9546	screen.c	FUNCTION_81	IF_4
0x4009510	            0x7558	                           jne 0x400956a	      9546	screen.c	FUNCTION_81	IF_4
0x4009512	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      9556	screen.c	FUNCTION_81	IF_5
0x4009517	            0x7467	                            je 0x4009580	      9556	screen.c	FUNCTION_81	IF_5
0x4009519	    0x418bb5a80100	           mov esi, dword [r13 + 0x1a8] 	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009520	    0x4103b59c0000	             add esi, dword [r13 + 0x9c]	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009527	        0x4883ec08	                              sub rsp, 8	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400952b	    0x4103b5a00000	             add esi, dword [r13 + 0xa0]	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009532	    0x8b0d00000000	            mov ecx, dword [0x04009538] 	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009538	            0x31ff	                            xor edi, edi	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400953a	            0x6a00	                                  push 0	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400953c	          0x4531c9	                            xor r9d, r9d	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400953f	          0x4531c0	                            xor r8d, r8d	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009542	            0x89da	                            mov edx, ebx	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009544	            0x29de	                            sub esi, ebx	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009546	      0xe800000000	                          call 0x400954b	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400954b	          0x83f801	                              cmp eax, 1	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x400954e	            0x89c5	                            mov ebp, eax	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009550	              0x5e	                                 pop rsi	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009551	              0x5f	                                 pop rdi	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009552	     0xf84d8000000	                            je 0x4009630	      9558	screen.c	FUNCTION_81	IF_5	IF_6	CALL_3
0x4009558	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      9561	screen.c	FUNCTION_81	IF_5	ELSE_1	IF_7
0x400955d	     0xf841d010000	                            je 0x4009680	      9561	screen.c	FUNCTION_81	IF_5	ELSE_1	IF_7
0x4009563	       0xf1f440000	                   nop dword [rax + rax]	      9561	screen.c	FUNCTION_81	IF_5	ELSE_1	IF_7
0x4009568	            0x31ed	                            xor ebp, ebp	      9589	screen.c	FUNCTION_81	IF_10
0x400956a	        0x4883c408	                              add rsp, 8	      9593	screen.c	FUNCTION_81
0x400956e	            0x89e8	                            mov eax, ebp	      9593	screen.c	FUNCTION_81
0x4009570	              0x5b	                                 pop rbx	      9593	screen.c	FUNCTION_81
0x4009571	              0x5d	                                 pop rbp	      9593	screen.c	FUNCTION_81
0x4009572	            0x415c	                                 pop r12	      9593	screen.c	FUNCTION_81
0x4009574	            0x415d	                                 pop r13	      9593	screen.c	FUNCTION_81
0x4009576	              0xc3	                                     ret	      9593	screen.c	FUNCTION_81
0x4009577	    0x660f1f840000	                    nop word [rax + rax]	      9593	screen.c	FUNCTION_81
0x4009580	    0x418b85a40000	            mov eax, dword [r13 + 0xa4] 	      9556	screen.c	FUNCTION_81	IF_5
0x4009587	            0x85c0	                           test eax, eax	      9556	screen.c	FUNCTION_81	IF_5
0x4009589	            0x758e	                           jne 0x4009519	      9556	screen.c	FUNCTION_81	IF_5
0x400958b	    0x418bbda80100	           mov edi, dword [r13 + 0x1a8] 	      9571	screen.c	FUNCTION_81	IF_8	CALL_4
0x4009592	    0x4103bd9c0000	             add edi, dword [r13 + 0x9c]	      9571	screen.c	FUNCTION_81	IF_8	CALL_4
0x4009599	    0x41b920000000	                           mov r9d, 0x20	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x400959f	    0x4103bda00000	             add edi, dword [r13 + 0xa0]	      9571	screen.c	FUNCTION_81	IF_8	CALL_4
0x40095a6	    0x418b8dac0000	            mov ecx, dword [r13 + 0xac] 	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095ad	    0x41b820000000	                           mov r8d, 0x20	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095b3	    0x41c785400100	              mov dword [r13 + 0x140], 1	      9569	screen.c	FUNCTION_81	IF_8
0x40095be	    0xc70500000000	               mov dword [0x040095c8], 1	      9570	screen.c	FUNCTION_81	IF_8
0x40095c8	             0x1c7	                            add edi, eax	      9571	screen.c	FUNCTION_81	IF_8	CALL_4
0x40095ca	    0x488b05000000	            mov rax, qword [0x040095d1] 	      9573	screen.c	FUNCTION_81	IF_8	IF_9
0x40095d1	          0x8d341f	                    lea esi, [rdi + rbx]	      9572	screen.c	FUNCTION_81	IF_8
0x40095d4	          0x4863d6	                         movsxd rdx, esi	      9573	screen.c	FUNCTION_81	IF_8	IF_9
0x40095d7	          0x4839c2	                            cmp rdx, rax	      9574	screen.c	FUNCTION_81	IF_8	IF_9
0x40095da	    0x418b95a80000	            mov edx, dword [r13 + 0xa8] 	      9576	screen.c	FUNCTION_81	IF_8	CALL_6
0x40095e1	           0xf4ff0	                          cmovg esi, eax	      9574	screen.c	FUNCTION_81	IF_8	IF_9
0x40095e4	        0x4883ec08	                              sub rsp, 8	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095e8	            0x29df	                            sub edi, ebx	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095ea	            0x6a00	                                  push 0	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095ec	            0x29de	                            sub esi, ebx	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095ee	            0x31ed	                            xor ebp, ebp	      9540	screen.c	FUNCTION_81	IF_2
0x40095f0	             0x1d1	                            add ecx, edx	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095f2	      0xe800000000	                          call 0x40095f7	      9575	screen.c	FUNCTION_81	IF_8	CALL_5
0x40095f7	    0x418bb5a80100	           mov esi, dword [r13 + 0x1a8] 	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x40095fe	    0x4103b59c0000	             add esi, dword [r13 + 0x9c]	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009605	          0x4531c9	                            xor r9d, r9d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009608	    0x8b0d00000000	            mov ecx, dword [0x0400960e] 	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400960e	          0x4531c0	                            xor r8d, r8d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009611	            0x89da	                            mov edx, ebx	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009613	            0x31ff	                            xor edi, edi	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009615	          0x4401e6	                           add esi, r12d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009618	      0xe800000000	                          call 0x400961d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400961d	            0x85c0	                           test eax, eax	      9540	screen.c	FUNCTION_81	IF_2
0x400961f	              0x5a	                                 pop rdx	      9540	screen.c	FUNCTION_81	IF_2
0x4009620	        0x400f95c5	                               setne bpl	      9540	screen.c	FUNCTION_81	IF_2
0x4009624	              0x59	                                 pop rcx	      9540	screen.c	FUNCTION_81	IF_2
0x4009625	      0xe940ffffff	                           jmp 0x400956a	      9540	screen.c	FUNCTION_81	IF_2
0x400962a	    0x660f1f440000	                    nop word [rax + rax]	      9540	screen.c	FUNCTION_81	IF_2
0x4009630	    0x418bb59c0000	            mov esi, dword [r13 + 0x9c] 	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009637	    0x4103b5a80100	            add esi, dword [r13 + 0x1a8]	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400963e	          0x4531c9	                            xor r9d, r9d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009641	    0x8b0d00000000	            mov ecx, dword [0x04009647] 	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009647	          0x4531c0	                            xor r8d, r8d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400964a	            0x31ff	                            xor edi, edi	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400964c	            0x89da	                            mov edx, ebx	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400964e	          0x4401e6	                           add esi, r12d	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009651	      0xe800000000	                          call 0x4009656	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009656	            0x85c0	                           test eax, eax	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x4009658	     0xf850cffffff	                           jne 0x400956a	      9580	screen.c	FUNCTION_81	IF_10	CALL_8
0x400965e	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
0x4009662	    0x41c785400100	              mov dword [r13 + 0x140], 1	      9586	screen.c	FUNCTION_81	IF_10	IF_11
0x400966d	      0xe81e81ffff	               call sym.win_rest_invalid	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
0x4009672	      0xe9f1feffff	                           jmp 0x4009568	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
0x4009677	    0x660f1f840000	                    nop word [rax + rax]	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
0x4009680	    0x418b85a40000	            mov eax, dword [r13 + 0xa4] 	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
0x4009687	      0xe9fffeffff	                           jmp 0x400958b	      9587	screen.c	FUNCTION_81	IF_10	IF_11	CALL_10
redraw_win_toolbar	functions,0:IF,5:DO,0:ELSE,0:CALL,11:FOR,2:WHILE,2:SWITCH,0	232
0x4006c60	            0x4157	                                push r15	     10791	screen.c	FUNCTION_98
0x4006c62	            0x4156	                                push r14	     10791	screen.c	FUNCTION_98
0x4006c64	            0x4155	                                push r13	     10791	screen.c	FUNCTION_98
0x4006c66	            0x4154	                                push r12	     10791	screen.c	FUNCTION_98
0x4006c68	          0x4989fd	                            mov r13, rdi	     10791	screen.c	FUNCTION_98
0x4006c6b	              0x55	                                push rbp	     10791	screen.c	FUNCTION_98
0x4006c6c	              0x53	                                push rbx	     10791	screen.c	FUNCTION_98
0x4006c6d	      0xbf00000000	                              mov edi, 0	     10798	screen.c	FUNCTION_98	CALL_1
0x4006c72	        0x4883ec58	                           sub rsp, 0x58	     10791	screen.c	FUNCTION_98
0x4006c76	    0x488b05000000	            mov rax, qword [0x04006c7d] 	     10797	screen.c	FUNCTION_98
0x4006c7d	    0x482b05000000	             sub rax, qword [0x04006c84]	     10797	screen.c	FUNCTION_98
0x4006c84	      0x4889442448	             mov qword [rsp + 0x48], rax	     10797	screen.c	FUNCTION_98
0x4006c89	          0x4189c7	                           mov r15d, eax	     10797	screen.c	FUNCTION_98
0x4006c8c	      0xe800000000	                          call 0x4006c91	     10798	screen.c	FUNCTION_98	CALL_1
0x4006c91	      0xbf00000000	                              mov edi, 0	     10799	screen.c	FUNCTION_98	CALL_2
0x4006c96	        0x89442444	             mov dword [rsp + 0x44], eax	     10798	screen.c	FUNCTION_98	CALL_1
0x4006c9a	      0xe800000000	                          call 0x4006c9f	     10799	screen.c	FUNCTION_98	CALL_2
0x4006c9f	    0x498bbda00100	           mov rdi, qword [r13 + 0x1a0] 	     10801	screen.c	FUNCTION_98	CALL_3
0x4006ca6	        0x89442408	                mov dword [rsp + 8], eax	     10799	screen.c	FUNCTION_98	CALL_2
0x4006caa	      0xe800000000	                          call 0x4006caf	     10801	screen.c	FUNCTION_98	CALL_3
0x4006caf	    0x498b85980100	           mov rax, qword [r13 + 0x198] 	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cb6	      0x448b5c2408	               mov r11d, dword [rsp + 8]	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cbb	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cc2	          0x4885c0	                           test rax, rax	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cc5	     0xf846b030000	                            je 0x4007036	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ccb	            0x31d2	                            xor edx, edx	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ccd	            0xeb03	                           jmp 0x4006cd2	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ccf	              0x90	                                     nop	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cd0	            0x89ca	                            mov edx, ecx	     10803	screen.c	FUNCTION_98	FOR_1
0x4006cd2	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cd9	          0x8d4a01	                      lea ecx, [rdx + 1]	     10803	screen.c	FUNCTION_98	FOR_1
0x4006cdc	          0x4885c0	                           test rax, rax	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cdf	            0x75ef	                           jne 0x4006cd0	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ce1	          0x8d7a02	                      lea edi, [rdx + 2]	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ce4	          0xc1e704	                              shl edi, 4	     10802	screen.c	FUNCTION_98	FOR_1
0x4006ce7	      0x44895c2408	               mov dword [rsp + 8], r11d	     10802	screen.c	FUNCTION_98	FOR_1
0x4006cec	      0xe800000000	                          call 0x4006cf1	     10804	screen.c	FUNCTION_98	CALL_4
0x4006cf1	    0x498b95980100	           mov rdx, qword [r13 + 0x198] 	     10808	screen.c	FUNCTION_98	FOR_2
0x4006cf8	    0x498985a00100	            mov qword [r13 + 0x1a0], rax	     10804	screen.c	FUNCTION_98	CALL_4
0x4006cff	    0x4c8b82b80000	              mov r8, qword [rdx + 0xb8]	     10808	screen.c	FUNCTION_98	FOR_2
0x4006d06	          0x4d85c0	                             test r8, r8	     10808	screen.c	FUNCTION_98	FOR_2
0x4006d09	     0xf8431030000	                            je 0x4007040	     10808	screen.c	FUNCTION_98	FOR_2
0x4006d0f	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d16	            0x85d2	                           test edx, edx	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d18	     0xf8e2c030000	                           jle 0x400704a	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d1e	    0x498dbd540200	                  lea rdi, [r13 + 0x254]	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d25	       0xfb7442444	           movzx eax, word [rsp + 0x44] 	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d2a	      0x448b5c2408	               mov r11d, dword [rsp + 8]	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d2f	          0x4531c9	                            xor r9d, r9d	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d32	      0x48897c2420	             mov qword [rsp + 0x20], rdi	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d37	    0x498dbdac0000	                   lea rdi, [r13 + 0xac]	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d3e	      0x48897c2428	             mov qword [rsp + 0x28], rdi	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d43	          0x4963ff	                        movsxd rdi, r15d	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d46	      0x6689442442	               mov word [rsp + 0x42], ax	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d4b	      0x48897c2430	             mov qword [rsp + 0x30], rdi	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d50	        0x4883c701	                              add rdi, 1	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d54	            0x31c0	                            xor eax, eax	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d56	      0x48897c2438	             mov qword [rsp + 0x38], rdi	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d5b	       0xf1f440000	                   nop dword [rax + rax]	     10809	screen.c	FUNCTION_98	FOR_2
0x4006d60	    0x488b35000000	            mov rsi, qword [0x04006d67] 	      8516	screen.c	FUNCTION_65
0x4006d67	        0x418d1407	                    lea edx, [r15 + rax]	      8516	screen.c	FUNCTION_65
0x4006d6b	       0xfb77c2442	           movzx edi, word [rsp + 0x42] 	      8517	screen.c	FUNCTION_65
0x4006d70	          0x4963c9	                         movsxd rcx, r9d	      8517	screen.c	FUNCTION_65
0x4006d73	          0x4863d2	                         movsxd rdx, edx	      8516	screen.c	FUNCTION_65
0x4006d76	        0xc6041620	              mov byte [rsi + rdx], 0x20	      8516	screen.c	FUNCTION_65
0x4006d7a	    0x8b1d00000000	            mov ebx, dword [0x04006d80] 	      8519	screen.c	FUNCTION_65	IF_1
0x4006d80	    0x488b35000000	            mov rsi, qword [0x04006d87] 	      8517	screen.c	FUNCTION_65
0x4006d87	            0x85db	                           test ebx, ebx	      8519	screen.c	FUNCTION_65	IF_1
0x4006d89	        0x66893c56	              mov word [rsi + rdx*2], di	      8517	screen.c	FUNCTION_65
0x4006d8d	            0x740e	                            je 0x4006d9d	      8519	screen.c	FUNCTION_65	IF_1
0x4006d8f	    0x488b35000000	            mov rsi, qword [0x04006d96] 	      8520	screen.c	FUNCTION_65	IF_1
0x4006d96	    0xc70496000000	              mov dword [rsi + rdx*4], 0	      8520	screen.c	FUNCTION_65	IF_1
0x4006d9d	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10812	screen.c	FUNCTION_98	FOR_2	IF_1
0x4006da4	          0x8d5801	                      lea ebx, [rax + 1]	     10812	screen.c	FUNCTION_98	FOR_2	IF_1
0x4006da7	            0x39d3	                            cmp ebx, edx	     10812	screen.c	FUNCTION_98	FOR_2	IF_1
0x4006da9	     0xf8d77020000	                           jge 0x4007026	     10812	screen.c	FUNCTION_98	FOR_2	IF_1
0x4006daf	          0x83fb01	                              cmp ebx, 1	     10814	screen.c	FUNCTION_98	FOR_2	IF_2
0x4006db2	            0x7e4d	                           jle 0x4006e01	     10814	screen.c	FUNCTION_98	FOR_2	IF_2
0x4006db4	    0x488b15000000	            mov rdx, qword [0x04006dbb] 	      8516	screen.c	FUNCTION_65
0x4006dbb	          0x4401fb	                           add ebx, r15d	      8516	screen.c	FUNCTION_65
0x4006dbe	       0xfb77c2442	           movzx edi, word [rsp + 0x42] 	      8517	screen.c	FUNCTION_65
0x4006dc3	          0x4863db	                         movsxd rbx, ebx	      8516	screen.c	FUNCTION_65
0x4006dc6	        0xc6041a20	              mov byte [rdx + rbx], 0x20	      8516	screen.c	FUNCTION_65
0x4006dca	    0x448b15000000	           mov r10d, dword [0x04006dd1] 	      8519	screen.c	FUNCTION_65	IF_1
0x4006dd1	    0x488b15000000	            mov rdx, qword [0x04006dd8] 	      8517	screen.c	FUNCTION_65
0x4006dd8	          0x4585d2	                         test r10d, r10d	      8519	screen.c	FUNCTION_65	IF_1
0x4006ddb	        0x66893c5a	              mov word [rdx + rbx*2], di	      8517	screen.c	FUNCTION_65
0x4006ddf	            0x740e	                            je 0x4006def	      8519	screen.c	FUNCTION_65	IF_1
0x4006de1	    0x488b15000000	            mov rdx, qword [0x04006de8] 	      8520	screen.c	FUNCTION_65	IF_1
0x4006de8	    0xc7049a000000	              mov dword [rdx + rbx*4], 0	      8520	screen.c	FUNCTION_65	IF_1
0x4006def	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10817	screen.c	FUNCTION_98	FOR_2	IF_2	IF_3
0x4006df6	          0x8d5802	                      lea ebx, [rax + 2]	     10817	screen.c	FUNCTION_98	FOR_2	IF_2	IF_3
0x4006df9	            0x39d3	                            cmp ebx, edx	     10817	screen.c	FUNCTION_98	FOR_2	IF_2	IF_3
0x4006dfb	     0xf8d25020000	                           jge 0x4007026	     10817	screen.c	FUNCTION_98	FOR_2	IF_2	IF_3
0x4006e01	    0x498b85a00100	           mov rax, qword [r13 + 0x1a0] 	     10821	screen.c	FUNCTION_98	FOR_2
0x4006e08	          0x4d89ce	                             mov r14, r9	     10821	screen.c	FUNCTION_98	FOR_2
0x4006e0b	    0x488b15000000	            mov rdx, qword [0x04006e12] 	      8516	screen.c	FUNCTION_65
0x4006e12	        0x49c1e604	                              shl r14, 4	      8516	screen.c	FUNCTION_65
0x4006e16	          0x4589dc	                          mov r12d, r11d	      8517	screen.c	FUNCTION_65
0x4006e19	        0x42891c30	              mov dword [rax + r14], ebx	     10821	screen.c	FUNCTION_98	FOR_2
0x4006e1d	        0x428d043b	                    lea eax, [rbx + r15]	      8516	screen.c	FUNCTION_65
0x4006e21	            0x4898	                                    cdqe	      8516	screen.c	FUNCTION_65
0x4006e23	        0xc6040220	              mov byte [rdx + rax], 0x20	      8516	screen.c	FUNCTION_65
0x4006e27	    0x8b3d00000000	            mov edi, dword [0x04006e2d] 	      8519	screen.c	FUNCTION_65	IF_1
0x4006e2d	    0x488b15000000	            mov rdx, qword [0x04006e34] 	      8517	screen.c	FUNCTION_65
0x4006e34	            0x85ff	                           test edi, edi	      8519	screen.c	FUNCTION_65	IF_1
0x4006e36	      0x6644891c42	            mov word [rdx + rax*2], r11w	      8517	screen.c	FUNCTION_65
0x4006e3b	            0x740e	                            je 0x4006e4b	      8519	screen.c	FUNCTION_65	IF_1
0x4006e3d	    0x488b15000000	            mov rdx, qword [0x04006e44] 	      8520	screen.c	FUNCTION_65	IF_1
0x4006e44	    0xc70482000000	              mov dword [rdx + rax*4], 0	      8520	screen.c	FUNCTION_65	IF_1
0x4006e4b	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10823	screen.c	FUNCTION_98	FOR_2	IF_4
0x4006e52	          0x8d6b01	                      lea ebp, [rbx + 1]	     10823	screen.c	FUNCTION_98	FOR_2	IF_4
0x4006e55	            0x39d5	                            cmp ebp, edx	     10823	screen.c	FUNCTION_98	FOR_2	IF_4
0x4006e57	     0xf8d8c010000	                           jge 0x4006fe9	     10823	screen.c	FUNCTION_98	FOR_2	IF_4
0x4006e5d	        0x498b5008	                 mov rdx, qword [r8 + 8]	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e61	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e66	            0x89e9	                            mov ecx, ebp	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e68	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e6d	      0x4c894c2418	              mov qword [rsp + 0x18], r9	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e72	      0x44895c2414	            mov dword [rsp + 0x14], r11d	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e77	      0x4c89442408	                 mov qword [rsp + 8], r8	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e7c	      0xe8af98ffff	      call sym.text_to_screenline.isra.4	     10826	screen.c	FUNCTION_98	FOR_2	CALL_8
0x4006e81	            0x39c5	                            cmp ebp, eax	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e83	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e88	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e8d	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e92	     0xf8d87010000	                           jge 0x400701f	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e98	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006e9d	          0x4863ed	                         movsxd rbp, ebp	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ea0	            0x89c6	                            mov esi, eax	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ea2	    0x488b0d000000	            mov rcx, qword [0x04006ea9] 	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ea9	            0x29de	                            sub esi, ebx	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006eab	          0x83ee02	                              sub esi, 2	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006eae	        0x488d142f	                    lea rdx, [rdi + rbp]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006eb2	      0x48036c2438	             add rbp, qword [rsp + 0x38]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006eb7	        0x488d1451	                  lea rdx, [rcx + rdx*2]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ebb	          0x4801f5	                            add rbp, rsi	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ebe	        0x488d0c69	                  lea rcx, [rcx + rbp*2]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ec2	    0x660f1f440000	                    nop word [rax + rax]	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ec8	        0x66448922	                    mov word [rdx], r12w	     10829	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ecc	        0x4883c202	                              add rdx, 2	     10829	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ed0	          0x4839ca	                            cmp rdx, rcx	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ed3	            0x75f3	                           jne 0x4006ec8	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4006ed5	    0x498bb5a00100	           mov rsi, qword [r13 + 0x1a0] 	     10832	screen.c	FUNCTION_98	FOR_2
0x4006edc	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10836	screen.c	FUNCTION_98	FOR_2	IF_5
0x4006ee3	        0x418d4901	                       lea ecx, [r9 + 1]	     10836	screen.c	FUNCTION_98	FOR_2	IF_5
0x4006ee7	          0x4901f6	                            add r14, rsi	     10832	screen.c	FUNCTION_98	FOR_2
0x4006eea	            0x39c2	                            cmp edx, eax	     10836	screen.c	FUNCTION_98	FOR_2	IF_5
0x4006eec	        0x41894604	                mov dword [r14 + 4], eax	     10832	screen.c	FUNCTION_98	FOR_2
0x4006ef0	        0x4d894608	                 mov qword [r14 + 8], r8	     10833	screen.c	FUNCTION_98	FOR_2
0x4006ef4	            0x7e5f	                           jle 0x4006f55	     10836	screen.c	FUNCTION_98	FOR_2	IF_5
0x4006ef6	    0x488b35000000	            mov rsi, qword [0x04006efd] 	      8516	screen.c	FUNCTION_65
0x4006efd	        0x418d1407	                    lea edx, [r15 + rax]	      8516	screen.c	FUNCTION_65
0x4006f01	          0x4863d2	                         movsxd rdx, edx	      8516	screen.c	FUNCTION_65
0x4006f04	        0xc6041620	              mov byte [rsi + rdx], 0x20	      8516	screen.c	FUNCTION_65
0x4006f08	    0x488b35000000	            mov rsi, qword [0x04006f0f] 	      8517	screen.c	FUNCTION_65
0x4006f0f	      0x6644891c56	            mov word [rsi + rdx*2], r11w	      8517	screen.c	FUNCTION_65
0x4006f14	    0x8b3500000000	            mov esi, dword [0x04006f1a] 	      8519	screen.c	FUNCTION_65	IF_1
0x4006f1a	            0x85f6	                           test esi, esi	      8519	screen.c	FUNCTION_65	IF_1
0x4006f1c	            0x740e	                            je 0x4006f2c	      8519	screen.c	FUNCTION_65	IF_1
0x4006f1e	    0x488b35000000	            mov rsi, qword [0x04006f25] 	      8520	screen.c	FUNCTION_65	IF_1
0x4006f25	    0xc70496000000	              mov dword [rsi + rdx*4], 0	      8520	screen.c	FUNCTION_65	IF_1
0x4006f2c	    0x4d8b80c80000	               mov r8, qword [r8 + 0xc8]	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f33	          0x83c001	                              add eax, 1	     10839	screen.c	FUNCTION_98	FOR_2
0x4006f36	          0x4d85c0	                             test r8, r8	     10808	screen.c	FUNCTION_98	FOR_2
0x4006f39	            0x7429	                            je 0x4006f64	     10808	screen.c	FUNCTION_98	FOR_2
0x4006f3b	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f42	        0x4983c101	                               add r9, 1	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f46	            0x39c2	                            cmp edx, eax	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f48	     0xf8f12feffff	                            jg 0x4006d60	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f4e	    0x498bb5a00100	           mov rsi, qword [r13 + 0x1a0] 	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f55	          0x4863c9	                         movsxd rcx, ecx	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f58	        0x48c1e104	                              shl rcx, 4	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f5c	          0x4989ce	                            mov r14, rcx	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f5f	      0xe98c000000	                           jmp 0x4006ff0	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f64	          0x4863c9	                         movsxd rcx, ecx	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f67	        0x48c1e104	                              shl rcx, 4	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f6b	          0x4989ce	                            mov r14, rcx	     10809	screen.c	FUNCTION_98	FOR_2
0x4006f6e	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f75	            0x39d0	                            cmp eax, edx	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f77	            0x7d70	                           jge 0x4006fe9	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f79	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f7e	          0x4863c8	                         movsxd rcx, eax	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f81	    0x440fb7442444	           movzx r8d, word [rsp + 0x44] 	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f87	          0x4801d1	                            add rcx, rdx	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f8a	        0x488d3409	                    lea rsi, [rcx + rcx]	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f8e	    0x488d3c8d0000	                        lea rdi, [rcx*4]	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006fa0	    0x488b15000000	            mov rdx, qword [0x04006fa7] 	      8516	screen.c	FUNCTION_65
0x4006fa7	        0xc6040a20	              mov byte [rdx + rcx], 0x20	      8516	screen.c	FUNCTION_65
0x4006fab	    0x488b15000000	            mov rdx, qword [0x04006fb2] 	      8517	screen.c	FUNCTION_65
0x4006fb2	      0x6644890432	               mov word [rdx + rsi], r8w	      8517	screen.c	FUNCTION_65
0x4006fb7	    0x8b1500000000	            mov edx, dword [0x04006fbd] 	      8519	screen.c	FUNCTION_65	IF_1
0x4006fbd	            0x85d2	                           test edx, edx	      8519	screen.c	FUNCTION_65	IF_1
0x4006fbf	            0x740e	                            je 0x4006fcf	      8519	screen.c	FUNCTION_65	IF_1
0x4006fc1	    0x488b15000000	            mov rdx, qword [0x04006fc8] 	      8520	screen.c	FUNCTION_65	IF_1
0x4006fc8	    0xc7043a000000	                mov dword [rdx + rdi], 0	      8520	screen.c	FUNCTION_65	IF_1
0x4006fcf	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006fd6	          0x83c001	                              add eax, 1	     10844	screen.c	FUNCTION_98	WHILE_2
0x4006fd9	        0x4883c101	                              add rcx, 1	     10844	screen.c	FUNCTION_98	WHILE_2
0x4006fdd	        0x4883c602	                              add rsi, 2	     10844	screen.c	FUNCTION_98	WHILE_2
0x4006fe1	        0x4883c704	                              add rdi, 4	     10844	screen.c	FUNCTION_98	WHILE_2
0x4006fe5	            0x39c2	                            cmp edx, eax	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006fe7	            0x7fb7	                            jg 0x4006fa0	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006fe9	    0x498bb5a00100	           mov rsi, qword [r13 + 0x1a0] 	     10841	screen.c	FUNCTION_98	WHILE_2
0x4006ff0	    0x4ac744360800	            mov qword [rsi + r14 + 8], 0	     10846	screen.c	FUNCTION_98
0x4006ff9	    0x418bbd9c0000	            mov edi, dword [r13 + 0x9c] 	     10848	screen.c	FUNCTION_98	CALL_11
0x4007000	          0x4531c0	                            xor r8d, r8d	     10848	screen.c	FUNCTION_98	CALL_11
0x4007003	    0x418bb5a80000	            mov esi, dword [r13 + 0xa8] 	     10848	screen.c	FUNCTION_98	CALL_11
0x400700a	        0x4883c458	                           add rsp, 0x58	     10850	screen.c	FUNCTION_98
0x400700e	            0x89d1	                            mov ecx, edx	     10848	screen.c	FUNCTION_98	CALL_11
0x4007010	              0x5b	                                 pop rbx	     10850	screen.c	FUNCTION_98
0x4007011	              0x5d	                                 pop rbp	     10850	screen.c	FUNCTION_98
0x4007012	            0x415c	                                 pop r12	     10850	screen.c	FUNCTION_98
0x4007014	            0x415d	                                 pop r13	     10850	screen.c	FUNCTION_98
0x4007016	            0x415e	                                 pop r14	     10850	screen.c	FUNCTION_98
0x4007018	            0x415f	                                 pop r15	     10850	screen.c	FUNCTION_98
0x400701a	      0xe9a1eeffff	                     jmp sym.screen_line	     10848	screen.c	FUNCTION_98	CALL_11
0x400701f	            0x89e8	                            mov eax, ebp	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4007021	      0xe9affeffff	                           jmp 0x4006ed5	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4007026	        0x48c1e104	                              shl rcx, 4	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x400702a	    0x498bb5a00100	           mov rsi, qword [r13 + 0x1a0] 	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4007031	          0x4989ce	                            mov r14, rcx	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4007034	            0xebba	                           jmp 0x4006ff0	     10827	screen.c	FUNCTION_98	FOR_2	WHILE_1
0x4007036	      0xbf10000000	                           mov edi, 0x10	     10802	screen.c	FUNCTION_98	FOR_1
0x400703b	      0xe9a7fcffff	                           jmp 0x4006ce7	     10802	screen.c	FUNCTION_98	FOR_1
0x4007040	          0x4531f6	                          xor r14d, r14d	     10808	screen.c	FUNCTION_98	FOR_2
0x4007043	            0x31c0	                            xor eax, eax	     10795	screen.c	FUNCTION_98
0x4007045	      0xe924ffffff	                           jmp 0x4006f6e	     10795	screen.c	FUNCTION_98
0x400704a	          0x4889c6	                            mov rsi, rax	     10809	screen.c	FUNCTION_98	FOR_2
0x400704d	          0x4531f6	                          xor r14d, r14d	     10809	screen.c	FUNCTION_98	FOR_2
0x4007050	            0xeb9e	                           jmp 0x4006ff0	     10809	screen.c	FUNCTION_98	FOR_2
showmode	functions,0:IF,35:DO,0:ELSE,10:CALL,62:FOR,0:WHILE,0:SWITCH,1	327
0x4009690	    0x8b0d00000000	            mov ecx, dword [0x04009696] 	     10247	screen.c	FUNCTION_87
0x4009696	            0x4156	                                push r14	     10236	screen.c	FUNCTION_87
0x4009698	            0x4155	                                push r13	     10236	screen.c	FUNCTION_87
0x400969a	            0x4154	                                push r12	     10236	screen.c	FUNCTION_87
0x400969c	              0x55	                                push rbp	     10236	screen.c	FUNCTION_87
0x400969d	              0x53	                                push rbx	     10236	screen.c	FUNCTION_87
0x400969e	            0x85c9	                           test ecx, ecx	     10247	screen.c	FUNCTION_87
0x40096a0	     0xf848a010000	                            je 0x4009830	     10247	screen.c	FUNCTION_87
0x40096a6	    0x8b1500000000	            mov edx, dword [0x040096ac] 	     10246	screen.c	FUNCTION_87
0x40096ac	            0x85d2	                           test edx, edx	     10246	screen.c	FUNCTION_87
0x40096ae	     0xf857c010000	                           jne 0x4009830	     10246	screen.c	FUNCTION_87
0x40096b4	    0xf60500000000	           test byte [0x040096bb], 0x10 	     10247	screen.c	FUNCTION_87
0x40096bb	            0x751b	                           jne 0x40096d8	     10247	screen.c	FUNCTION_87
0x40096bd	    0x8b0500000000	            mov eax, dword [0x040096c3] 	     10248	screen.c	FUNCTION_87
0x40096c3	            0x85c0	                           test eax, eax	     10248	screen.c	FUNCTION_87
0x40096c5	            0x7511	                           jne 0x40096d8	     10248	screen.c	FUNCTION_87
0x40096c7	    0x8b0500000000	            mov eax, dword [0x040096cd] 	     10249	screen.c	FUNCTION_87
0x40096cd	            0x85c0	                           test eax, eax	     10249	screen.c	FUNCTION_87
0x40096cf	     0xf845b010000	                            je 0x4009830	     10249	screen.c	FUNCTION_87
0x40096d5	           0xf1f00	                         nop dword [rax]	     10249	screen.c	FUNCTION_87
0x40096d8	      0xe800000000	                          call 0x40096dd	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096dd	            0x85c0	                           test eax, eax	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096df	      0xbb01000000	                              mov ebx, 1	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096e4	     0xf845f010000	                            je 0x4009849	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096ea	      0xe800000000	                          call 0x40096ef	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096ef	            0x85c0	                           test eax, eax	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096f1	            0x740e	                            je 0x4009701	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096f3	    0x8b0500000000	            mov eax, dword [0x040096f9] 	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096f9	            0x85c0	                           test eax, eax	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x40096fb	     0xf8448010000	                            je 0x4009849	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009701	    0x8b2d00000000	            mov ebp, dword [0x04009707] 	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009707	            0x85ed	                           test ebp, ebp	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009709	     0xf853a010000	                           jne 0x4009849	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400970f	            0x31ff	                            xor edi, edi	     10266	screen.c	FUNCTION_87	IF_1	CALL_3
0x4009711	    0x448b25000000	           mov r12d, dword [0x04009718] 	     10263	screen.c	FUNCTION_87	IF_1
0x4009718	      0xe800000000	                          call 0x400971d	     10266	screen.c	FUNCTION_87	IF_1	CALL_3
0x400971d	    0x448b2d000000	           mov r13d, dword [0x04009724] 	     10269	screen.c	FUNCTION_87	IF_1
0x4009724	    0x488b05000000	            mov rax, qword [0x0400972b] 	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x400972b	          0x4585ed	                         test r13d, r13d	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x400972e	            0x7420	                            je 0x4009750	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x4009730	    0x48630d000000	         movsxd rcx, dword [0x04009737] 	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x4009737	        0x488d50ff	                      lea rdx, [rax - 1]	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x400973b	          0x4839d1	                            cmp rcx, rdx	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x400973e	            0x7d10	                           jge 0x4009750	     10270	screen.c	FUNCTION_87	IF_1	IF_3
0x4009740	      0xe800000000	                          call 0x4009745	     10271	screen.c	FUNCTION_87	IF_1	CALL_4
0x4009745	    0x488b05000000	            mov rax, qword [0x0400974c] 	     10271	screen.c	FUNCTION_87	IF_1	CALL_4
0x400974c	         0xf1f4000	                         nop dword [rax]	     10271	screen.c	FUNCTION_87	IF_1	CALL_4
0x4009750	          0x83e801	                              sub eax, 1	     10454	screen.c	FUNCTION_88
0x4009753	    0xc70500000000	               mov dword [0x0400975d], 0	     10453	screen.c	FUNCTION_88
0x400975d	    0x890500000000	            mov dword [0x04009763], eax 	     10454	screen.c	FUNCTION_88
0x4009763	      0xe800000000	                          call 0x4009768	     10275	screen.c	FUNCTION_87	IF_1	CALL_6
0x4009768	            0x85db	                           test ebx, ebx	     10277	screen.c	FUNCTION_87	IF_1	IF_4
0x400976a	    0x448b35000000	           mov r14d, dword [0x04009771] 	     10276	screen.c	FUNCTION_87	IF_1	CALL_7
0x4009771	     0xf8569010000	                           jne 0x40098e0	     10277	screen.c	FUNCTION_87	IF_1	IF_4
0x4009777	    0x448b15000000	           mov r10d, dword [0x0400977e] 	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x400977e	          0x4585d2	                         test r10d, r10d	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x4009781	     0xf8419010000	                            je 0x40098a0	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x4009787	    0x48833d000000	               cmp qword [0x0400978f], 0	     10411	screen.c	FUNCTION_87	IF_1	IF_31
0x400978f	     0xf850b010000	                           jne 0x40098a0	     10411	screen.c	FUNCTION_87	IF_1	IF_31
0x4009795	          0x4489f7	                           mov edi, r14d	     10415	screen.c	FUNCTION_87	IF_1	IF_31	CALL_57
0x4009798	      0xe8337fffff	                 call sym.recording_mode	     10415	screen.c	FUNCTION_87	IF_1	IF_31	CALL_57
0x400979d	    0xc70500000000	               mov dword [0x040097a7], 1	     10419	screen.c	FUNCTION_87	IF_1
0x40097a7	    0x660f1f840000	                    nop word [rax + rax]	     10419	screen.c	FUNCTION_87	IF_1
0x40097b0	      0xe800000000	                          call 0x40097b5	     10421	screen.c	FUNCTION_87	IF_1	CALL_58
0x40097b5	    0x8b1d00000000	            mov ebx, dword [0x040097bb] 	     10423	screen.c	FUNCTION_87	IF_1
0x40097bb	    0xc70500000000	               mov dword [0x040097c5], 0	     10422	screen.c	FUNCTION_87	IF_1
0x40097c5	    0xc70500000000	               mov dword [0x040097cf], 0	     10424	screen.c	FUNCTION_87	IF_1
0x40097cf	    0x448925000000	           mov dword [0x040097d6], r12d 	     10425	screen.c	FUNCTION_87	IF_1
0x40097d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10425	screen.c	FUNCTION_87	IF_1
0x40097e0	    0x8b3500000000	            mov esi, dword [0x040097e6] 	     10433	screen.c	FUNCTION_87	IF_34
0x40097e6	            0x85f6	                           test esi, esi	     10433	screen.c	FUNCTION_87	IF_34
0x40097e8	     0xf85e2000000	                           jne 0x40098d0	     10433	screen.c	FUNCTION_87	IF_34
0x40097ee	      0xe800000000	                          call 0x40097f3	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x40097f3	            0x85c0	                           test eax, eax	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x40097f5	            0x7415	                            je 0x400980c	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x40097f7	    0x488b3d000000	            mov rdi, qword [0x040097fe] 	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x40097fe	    0x8b8fa4000000	            mov ecx, dword [rdi + 0xa4] 	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x4009804	            0x85c9	                           test ecx, ecx	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x4009806	     0xf8484000000	                            je 0x4009890	     10438	screen.c	FUNCTION_87	IF_35	CALL_61
0x400980c	            0x89d8	                            mov eax, ebx	     10444	screen.c	FUNCTION_87
0x400980e	    0xc70500000000	               mov dword [0x04009818], 0	     10441	screen.c	FUNCTION_87
0x4009818	    0xc70500000000	               mov dword [0x04009822], 0	     10442	screen.c	FUNCTION_87
0x4009822	              0x5b	                                 pop rbx	     10445	screen.c	FUNCTION_87
0x4009823	              0x5d	                                 pop rbp	     10445	screen.c	FUNCTION_87
0x4009824	            0x415c	                                 pop r12	     10445	screen.c	FUNCTION_87
0x4009826	            0x415d	                                 pop r13	     10445	screen.c	FUNCTION_87
0x4009828	            0x415e	                                 pop r14	     10445	screen.c	FUNCTION_87
0x400982a	              0xc3	                                     ret	     10445	screen.c	FUNCTION_87
0x400982b	       0xf1f440000	                   nop dword [rax + rax]	     10445	screen.c	FUNCTION_87
0x4009830	    0x8b1500000000	            mov edx, dword [0x04009836] 	     10250	screen.c	FUNCTION_87	IF_1
0x4009836	            0x85d2	                           test edx, edx	     10250	screen.c	FUNCTION_87	IF_1
0x4009838	            0x7426	                            je 0x4009860	     10250	screen.c	FUNCTION_87	IF_1
0x400983a	            0x31db	                            xor ebx, ebx	     10250	screen.c	FUNCTION_87	IF_1
0x400983c	      0xe800000000	                          call 0x4009841	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009841	            0x85c0	                           test eax, eax	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009843	     0xf85a1feffff	                           jne 0x40096ea	     10257	screen.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4009849	              0x5b	                                 pop rbx	     10445	screen.c	FUNCTION_87
0x400984a	            0x31c0	                            xor eax, eax	     10260	screen.c	FUNCTION_87	IF_1	IF_2
0x400984c	    0xc70500000000	               mov dword [0x04009856], 1	     10259	screen.c	FUNCTION_87	IF_1	IF_2
0x4009856	              0x5d	                                 pop rbp	     10445	screen.c	FUNCTION_87
0x4009857	            0x415c	                                 pop r12	     10445	screen.c	FUNCTION_87
0x4009859	            0x415d	                                 pop r13	     10445	screen.c	FUNCTION_87
0x400985b	            0x415e	                                 pop r14	     10445	screen.c	FUNCTION_87
0x400985d	              0xc3	                                     ret	     10445	screen.c	FUNCTION_87
0x400985e	            0x6690	                                     nop	     10445	screen.c	FUNCTION_87
0x4009860	    0x448b05000000	            mov r8d, dword [0x04009867] 	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009867	            0x31db	                            xor ebx, ebx	     10238	screen.c	FUNCTION_87
0x4009869	          0x4585c0	                           test r8d, r8d	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x400986c	     0xf846effffff	                            je 0x40097e0	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009872	    0x8b3d00000000	            mov edi, dword [0x04009878] 	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009878	            0x85ff	                           test edi, edi	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x400987a	     0xf8560ffffff	                           jne 0x40097e0	     10427	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009880	      0xe800000000	                          call 0x4009885	     10429	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009885	      0xe956ffffff	                           jmp 0x40097e0	     10429	screen.c	FUNCTION_87	ELSE_10	IF_33
0x400988a	    0x660f1f440000	                    nop word [rax + rax]	     10429	screen.c	FUNCTION_87	ELSE_10	IF_33
0x4009890	      0xbe01000000	                              mov esi, 1	     10439	screen.c	FUNCTION_87	CALL_62
0x4009895	      0xe8a6bfffff	                 call sym.win_redr_ruler	     10439	screen.c	FUNCTION_87	CALL_62
0x400989a	      0xe96dffffff	                           jmp 0x400980c	     10439	screen.c	FUNCTION_87	CALL_62
0x400989f	              0x90	                                     nop	     10439	screen.c	FUNCTION_87	CALL_62
0x40098a0	          0x4585ed	                         test r13d, r13d	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098a3	    0xc70500000000	               mov dword [0x040098ad], 1	     10419	screen.c	FUNCTION_87	IF_1
0x40098ad	     0xf85fdfeffff	                           jne 0x40097b0	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098b3	    0x448b0d000000	            mov r9d, dword [0x040098ba] 	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098ba	          0x4585c9	                           test r9d, r9d	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098bd	     0xf84f2feffff	                            je 0x40097b5	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098c3	      0xe9e8feffff	                           jmp 0x40097b0	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098c8	     0xf1f84000000	                   nop dword [rax + rax]	     10420	screen.c	FUNCTION_87	IF_1	IF_32
0x40098d0	      0xe800000000	                          call 0x40098d5	     10434	screen.c	FUNCTION_87	CALL_60
0x40098d5	      0xe914ffffff	                           jmp 0x40097ee	     10434	screen.c	FUNCTION_87	CALL_60
0x40098da	    0x660f1f440000	                    nop word [rax + rax]	     10434	screen.c	FUNCTION_87	CALL_60
0x40098e0	          0x4489f6	                           mov esi, r14d	     10279	screen.c	FUNCTION_87	IF_1	IF_4	CALL_8
0x40098e3	      0xbf00000000	                              mov edi, 0	     10279	screen.c	FUNCTION_87	IF_1	IF_4	CALL_8
0x40098e8	      0xe800000000	                          call 0x40098ed	     10279	screen.c	FUNCTION_87	IF_1	IF_4	CALL_8
0x40098ed	      0xe800000000	                          call 0x40098f2	     10283	screen.c	FUNCTION_87	IF_1	IF_4	IF_5	CALL_9
0x40098f2	            0x85c0	                           test eax, eax	     10281	screen.c	FUNCTION_87	IF_1	IF_4	IF_5
0x40098f4	     0xf853f020000	                           jne 0x4009b39	     10281	screen.c	FUNCTION_87	IF_1	IF_4	IF_5
0x40098fa	    0x48833d000000	               cmp qword [0x04009902], 0	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x4009902	     0xf84f8000000	                            je 0x4009a00	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x4009908	      0xbf63000000	                           mov edi, 0x63	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x400990d	      0xe800000000	                          call 0x4009912	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x4009912	            0x85c0	                           test eax, eax	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x4009914	     0xf85e6000000	                           jne 0x4009a00	     10309	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_16
0x400991a	    0x488b1d000000	            mov rbx, qword [0x04009921] 	     10313	screen.c	FUNCTION_87	IF_1	IF_4	IF_9
0x4009921	    0x2b1d00000000	             sub ebx, dword [0x04009927]	     10313	screen.c	FUNCTION_87	IF_1	IF_4	IF_9
0x4009927	     0xfaf1d000000	            imul ebx, dword [0x0400992e]	     10313	screen.c	FUNCTION_87	IF_1	IF_4	IF_9
0x400992e	    0x488b3d000000	            mov rdi, qword [0x04009935] 	     10314	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_10
0x4009935	          0x83eb03	                              sub ebx, 3	     10313	screen.c	FUNCTION_87	IF_1	IF_4	IF_9
0x4009938	          0x4885ff	                           test rdi, rdi	     10314	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_10
0x400993b	            0x7407	                            je 0x4009944	     10314	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_10
0x400993d	      0xe800000000	                          call 0x4009942	     10315	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_17
0x4009942	            0x29c3	                            sub ebx, eax	     10315	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	CALL_17
0x4009944	            0x85db	                           test ebx, ebx	     10316	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11
0x4009946	     0xf8e84000000	                           jle 0x40099d0	     10316	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11
0x400994c	    0x488b3d000000	            mov rdi, qword [0x04009953] 	     10318	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_12
0x4009953	          0x4885ff	                           test rdi, rdi	     10318	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_12
0x4009956	            0x7407	                            je 0x400995f	     10318	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_12
0x4009958	      0xe800000000	                          call 0x400995d	     10319	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	CALL_18
0x400995d	            0x29c3	                            sub ebx, eax	     10319	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	CALL_18
0x400995f	    0x488b3d000000	            mov rdi, qword [0x04009966] 	     10320	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x4009966	      0xe800000000	                          call 0x400996b	     10320	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x400996b	            0x29c3	                            sub ebx, eax	     10320	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x400996d	            0x85db	                           test ebx, ebx	     10320	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x400996f	            0x7e23	                           jle 0x4009994	     10320	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x4009971	    0x488b3d000000	            mov rdi, qword [0x04009978] 	     10322	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x4009978	          0x4885ff	                           test rdi, rdi	     10322	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x400997b	            0x7408	                            je 0x4009985	     10322	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x400997d	          0x4489f6	                           mov esi, r14d	     10323	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x4009980	      0xe800000000	                          call 0x4009985	     10323	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x4009985	    0x488b3d000000	            mov rdi, qword [0x0400998c] 	     10324	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x400998c	          0x4489f6	                           mov esi, r14d	     10324	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x400998f	      0xe800000000	                          call 0x4009994	     10324	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x4009994	    0x48833d000000	               cmp qword [0x0400999c], 0	     10326	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15
0x400999c	            0x7432	                            je 0x40099d0	     10326	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15
0x400999e	          0x4489f6	                           mov esi, r14d	     10328	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x40099a1	      0xbf00000000	                              mov edi, 0	     10328	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x40099a6	      0xe800000000	                          call 0x40099ab	     10328	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x40099ab	    0x486305000000	         movsxd rax, dword [0x040099b2] 	     10329	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x40099b2	          0x4489f6	                           mov esi, r14d	     10332	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	ELSE_2
0x40099b5	          0x83f82d	                           cmp eax, 0x2d	     10329	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x40099b8	            0x7f07	                            jg 0x40099c1	     10329	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x40099ba	    0x8b3485000000	                  mov esi, dword [rax*4]	     10330	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x40099c1	    0x488b3d000000	            mov rdi, qword [0x040099c8] 	     10333	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x40099c8	      0xe800000000	                          call 0x40099cd	     10333	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x40099cd	           0xf1f00	                         nop dword [rax]	     10333	screen.c	FUNCTION_87	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x40099d0	    0x8b0500000000	            mov eax, dword [0x040099d6] 	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x40099d6	            0x85c0	                           test eax, eax	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x40099d8	            0x740e	                            je 0x40099e8	     10409	screen.c	FUNCTION_87	IF_1	IF_31
0x40099da	    0x48833d000000	               cmp qword [0x040099e2], 0	     10411	screen.c	FUNCTION_87	IF_1	IF_31
0x40099e2	     0xf84adfdffff	                            je 0x4009795	     10411	screen.c	FUNCTION_87	IF_1	IF_31
0x40099e8	    0xc70500000000	               mov dword [0x040099f2], 1	     10419	screen.c	FUNCTION_87	IF_1
0x40099f2	      0xe9b9fdffff	                           jmp 0x40097b0	     10419	screen.c	FUNCTION_87	IF_1
0x40099f7	    0x660f1f840000	                    nop word [rax + rax]	     10419	screen.c	FUNCTION_87	IF_1
0x4009a00	    0x8b0500000000	            mov eax, dword [0x04009a06] 	     10341	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_17
0x4009a06	      0xba05000000	                              mov edx, 5	     10342	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_26
0x4009a0b	      0xbe00000000	                              mov esi, 0	     10342	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_26
0x4009a10	            0xa880	                           test al, 0x80	     10341	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_17
0x4009a12	            0x752e	                           jne 0x4009a42	     10341	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_17
0x4009a14	            0xa840	                           test al, 0x40	     10345	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x4009a16	      0xba05000000	                              mov edx, 5	     10346	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x4009a1b	      0xbe00000000	                              mov esi, 0	     10346	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x4009a20	            0x7520	                           jne 0x4009a42	     10345	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x4009a22	            0xa810	                           test al, 0x10	     10347	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x4009a24	     0xf8454010000	                            je 0x4009b7e	     10347	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x4009a2a	    0x8b0500000000	            mov eax, dword [0x04009a30] 	     10350	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x4009a30	            0x85c0	                           test eax, eax	     10350	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x4009a32	     0xf85d0010000	                           jne 0x4009c08	     10350	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x4009a38	      0xba05000000	                              mov edx, 5	     10353	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x4009a3d	      0xbe00000000	                              mov esi, 0	     10353	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x4009a42	            0x31ff	                            xor edi, edi	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009a44	      0xe800000000	                          call 0x4009a49	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009a49	          0x4489f6	                           mov esi, r14d	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009a4c	          0x4889c7	                            mov rdi, rax	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009a4f	      0xe800000000	                          call 0x4009a54	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009a54	    0x8b0500000000	            mov eax, dword [0x04009a5a] 	     10362	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_24
0x4009a5a	            0x85c0	                           test eax, eax	     10362	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_24
0x4009a5c	     0xf85fb000000	                           jne 0x4009b5d	     10362	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_24
0x4009a62	    0x8b0500000000	            mov eax, dword [0x04009a68] 	     10365	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_25
0x4009a68	            0x85c0	                           test eax, eax	     10365	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_25
0x4009a6a	     0xf85db000000	                           jne 0x4009b4b	     10365	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_25
0x4009a70	    0x8b0500000000	            mov eax, dword [0x04009a76] 	     10370	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26
0x4009a76	            0xa820	                           test al, 0x20	     10370	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26
0x4009a78	            0x7439	                            je 0x4009ab3	     10370	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26
0x4009a7a	    0x488b3d000000	            mov rdi, qword [0x04009a81] 	     10373	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x4009a81	    0x448bafb00100	          mov r13d, dword [rdi + 0x1b0] 	     10373	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x4009a88	          0x4585ed	                         test r13d, r13d	     10373	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x4009a8b	     0xf8431010000	                            je 0x4009bc2	     10373	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x4009a91	      0xba05000000	                              mov edx, 5	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009a96	      0xbe00000000	                              mov esi, 0	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009a9b	            0x31ff	                            xor edi, edi	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009a9d	      0xe800000000	                          call 0x4009aa2	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009aa2	          0x4489f6	                           mov esi, r14d	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009aa5	          0x4889c7	                            mov rdi, rax	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009aa8	      0xe800000000	                          call 0x4009aad	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009aad	    0x8b0500000000	            mov eax, dword [0x04009ab3] 	     10374	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x4009ab3	            0xa810	                           test al, 0x10	     10382	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_29
0x4009ab5	            0x740e	                            je 0x4009ac5	     10382	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_29
0x4009ab7	    0x8b1d00000000	            mov ebx, dword [0x04009abd] 	     10382	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_29
0x4009abd	            0x85db	                           test ebx, ebx	     10382	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_29
0x4009abf	     0xf8522010000	                           jne 0x4009be7	     10382	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_29
0x4009ac5	    0x448b1d000000	           mov r11d, dword [0x04009acc] 	     10385	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30
0x4009acc	          0x4585db	                         test r11d, r11d	     10385	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30
0x4009acf	            0x7456	                            je 0x4009b27	     10385	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30
0x4009ad1	    0x8b0500000000	            mov eax, dword [0x04009ad7] 	     10391	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009ad7	      0xba04000000	                              mov edx, 4	     10391	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009adc	      0xb902000000	                              mov ecx, 2	     10392	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009ae1	      0xbe00000000	                              mov esi, 0	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009ae6	            0x85c0	                           test eax, eax	     10391	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009ae8	           0xf45c2	                         cmovne eax, edx	     10391	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009aeb	    0x8b1500000000	            mov edx, dword [0x04009af1] 	     10392	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009af1	          0x83fa16	                           cmp edx, 0x16	     10392	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009af4	           0xf44e9	                          cmove ebp, ecx	     10392	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009af7	             0x1c5	                            add ebp, eax	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009af9	            0x31c0	                            xor eax, eax	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009afb	          0x83fa56	                           cmp edx, 0x56	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009afe	           0xf94c0	                                 sete al	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009b01	             0x1c5	                            add ebp, eax	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009b03	          0x83fd05	                              cmp ebp, 5	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009b06	            0x7f08	                            jg 0x4009b10	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009b08	    0x488b34ed0000	                  mov rsi, qword [rbp*8]	     10393	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x4009b10	            0x31ff	                            xor edi, edi	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b12	      0xba05000000	                              mov edx, 5	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b17	      0xe800000000	                          call 0x4009b1c	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b1c	          0x4489f6	                           mov esi, r14d	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b1f	          0x4889c7	                            mov rdi, rax	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b22	      0xe800000000	                          call 0x4009b27	     10402	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x4009b27	          0x4489f6	                           mov esi, r14d	     10404	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_56
0x4009b2a	      0xbf00000000	                              mov edi, 0	     10404	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_56
0x4009b2f	      0xe800000000	                          call 0x4009b34	     10404	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_56
0x4009b34	      0xe997feffff	                           jmp 0x40099d0	     10404	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_56
0x4009b39	          0x4489f6	                           mov esi, r14d	     10289	screen.c	FUNCTION_87	IF_1	IF_4	CALL_11
0x4009b3c	      0xbf00000000	                              mov edi, 0	     10289	screen.c	FUNCTION_87	IF_1	IF_4	CALL_11
0x4009b41	      0xe800000000	                          call 0x4009b46	     10289	screen.c	FUNCTION_87	IF_1	IF_4	CALL_11
0x4009b46	      0xe9affdffff	                           jmp 0x40098fa	     10289	screen.c	FUNCTION_87	IF_1	IF_4	CALL_11
0x4009b4b	          0x4489f6	                           mov esi, r14d	     10366	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_41
0x4009b4e	      0xbf00000000	                              mov edi, 0	     10366	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_41
0x4009b53	      0xe800000000	                          call 0x4009b58	     10366	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_41
0x4009b58	      0xe913ffffff	                           jmp 0x4009a70	     10366	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_41
0x4009b5d	            0x31ff	                            xor edi, edi	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b5f	      0xba05000000	                              mov edx, 5	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b64	      0xbe00000000	                              mov esi, 0	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b69	      0xe800000000	                          call 0x4009b6e	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b6e	          0x4489f6	                           mov esi, r14d	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b71	          0x4889c7	                            mov rdi, rax	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b74	      0xe800000000	                          call 0x4009b79	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b79	      0xe9e4feffff	                           jmp 0x4009a62	     10363	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_40
0x4009b7e	    0x8b0500000000	            mov eax, dword [0x04009b84] 	     10355	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x4009b84	      0xba05000000	                              mov edx, 5	     10356	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x4009b89	      0xbe00000000	                              mov esi, 0	     10356	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x4009b8e	          0x83f849	                           cmp eax, 0x49	     10355	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x4009b91	     0xf84abfeffff	                            je 0x4009a42	     10355	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x4009b97	          0x83f852	                           cmp eax, 0x52	     10357	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x4009b9a	      0xba05000000	                              mov edx, 5	     10358	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x4009b9f	      0xbe00000000	                              mov esi, 0	     10358	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x4009ba4	     0xf8498feffff	                            je 0x4009a42	     10357	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x4009baa	          0x83f856	                           cmp eax, 0x56	     10359	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009bad	     0xf85a1feffff	                           jne 0x4009a54	     10359	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009bb3	      0xba05000000	                              mov edx, 5	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009bb8	      0xbe00000000	                              mov esi, 0	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009bbd	      0xe980feffff	                           jmp 0x4009a42	     10360	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x4009bc2	    0x488b15000000	            mov rdx, qword [0x04009bc9] 	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bc9	      0xb900100000	                         mov ecx, 0x1000	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bce	      0xbe00000000	                              mov esi, 0	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bd3	      0xe800000000	                          call 0x4009bd8	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bd8	            0x85c0	                           test eax, eax	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bda	            0x754d	                           jne 0x4009c29	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009bdc	    0x8b0500000000	            mov eax, dword [0x04009be2] 	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009be2	      0xe9ccfeffff	                           jmp 0x4009ab3	     10377	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x4009be7	            0x31ff	                            xor edi, edi	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009be9	      0xba05000000	                              mov edx, 5	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009bee	      0xbe00000000	                              mov esi, 0	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009bf3	      0xe800000000	                          call 0x4009bf8	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009bf8	          0x4489f6	                           mov esi, r14d	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009bfb	          0x4889c7	                            mov rdi, rax	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009bfe	      0xe800000000	                          call 0x4009c03	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009c03	      0xe9bdfeffff	                           jmp 0x4009ac5	     10383	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	CALL_47
0x4009c08	            0x31ff	                            xor edi, edi	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c0a	      0xba05000000	                              mov edx, 5	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c0f	      0xbe00000000	                              mov esi, 0	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c14	      0xe800000000	                          call 0x4009c19	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c19	          0x4489f6	                           mov esi, r14d	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c1c	          0x4889c7	                            mov rdi, rax	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c1f	      0xe800000000	                          call 0x4009c24	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c24	      0xe90ffeffff	                           jmp 0x4009a38	     10351	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x4009c29	    0x488b3d000000	            mov rdi, qword [0x04009c30] 	     10379	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x4009c30	          0x4489f6	                           mov esi, r14d	     10379	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x4009c33	      0xe800000000	                          call 0x4009c38	     10379	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x4009c38	            0xeba2	                           jmp 0x4009bdc	     10379	screen.c	FUNCTION_87	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
get_trans_bufname	functions,0:IF,1:DO,0:ELSE,1:CALL,5:FOR,0:WHILE,0:SWITCH,0	23
0x4008740	              0x53	                                push rbx	     10693	screen.c	FUNCTION_93
0x4008741	          0x4889fb	                            mov rbx, rdi	     10693	screen.c	FUNCTION_93
0x4008744	      0xe800000000	                          call 0x4008749	     10694	screen.c	FUNCTION_93	IF_1	CALL_1
0x4008749	          0x4885c0	                           test rax, rax	     10694	screen.c	FUNCTION_93	IF_1	CALL_1
0x400874c	            0x7432	                            je 0x4008780	     10694	screen.c	FUNCTION_93	IF_1	CALL_1
0x400874e	          0x4889df	                            mov rdi, rbx	     10695	screen.c	FUNCTION_93	CALL_3
0x4008751	      0xe800000000	                          call 0x4008756	     10695	screen.c	FUNCTION_93	CALL_3
0x4008756	    0x488b3d000000	            mov rdi, qword [0x0400875d] 	     10695	screen.c	FUNCTION_93	CALL_3
0x400875d	      0xbaff0f0000	                          mov edx, 0xfff	     10695	screen.c	FUNCTION_93	CALL_3
0x4008762	          0x4889c6	                            mov rsi, rax	     10695	screen.c	FUNCTION_93	CALL_3
0x4008765	      0xe800000000	                          call 0x400876a	     10695	screen.c	FUNCTION_93	CALL_3
0x400876a	              0x5b	                                 pop rbx	     10699	screen.c	FUNCTION_93
0x400876b	    0x488b3d000000	            mov rdi, qword [0x04008772] 	     10698	screen.c	FUNCTION_93	CALL_5
0x4008772	      0xbe00100000	                         mov esi, 0x1000	     10698	screen.c	FUNCTION_93	CALL_5
0x4008777	      0xe900000000	                           jmp 0x400877c	     10698	screen.c	FUNCTION_93	CALL_5
0x400877c	         0xf1f4000	                         nop dword [rax]	     10698	screen.c	FUNCTION_93	CALL_5
0x4008780	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	     10697	screen.c	FUNCTION_93	CALL_4
0x4008787	    0x488b15000000	            mov rdx, qword [0x0400878e] 	     10697	screen.c	FUNCTION_93	CALL_4
0x400878e	    0x41b801000000	                              mov r8d, 1	     10697	screen.c	FUNCTION_93	CALL_4
0x4008794	      0xb900100000	                         mov ecx, 0x1000	     10697	screen.c	FUNCTION_93	CALL_4
0x4008799	          0x4889df	                            mov rdi, rbx	     10697	screen.c	FUNCTION_93	CALL_4
0x400879c	      0xe800000000	                          call 0x40087a1	     10697	screen.c	FUNCTION_93	CALL_4
0x40087a1	            0xebc7	                           jmp 0x400876a	     10697	screen.c	FUNCTION_93	CALL_4
copy_text_attr	functions,0:IF,1:DO,0:ELSE,0:CALL,2:FOR,1:WHILE,0:SWITCH,0	40
0x40002a0	            0x4155	                                push r13	      2964	screen.c	FUNCTION_26
0x40002a2	            0x4154	                                push r12	      2964	screen.c	FUNCTION_26
0x40002a4	          0x4c63e7	                         movsxd r12, edi	      2967	screen.c	FUNCTION_26	CALL_1
0x40002a7	              0x55	                                push rbp	      2964	screen.c	FUNCTION_26
0x40002a8	              0x53	                                push rbx	      2964	screen.c	FUNCTION_26
0x40002a9	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_105	CALL_3
0x40002ac	          0x4c63ea	                         movsxd r13, edx	      2964	screen.c	FUNCTION_26
0x40002af	            0x89cd	                            mov ebp, ecx	      2964	screen.c	FUNCTION_26
0x40002b1	        0x4883ec08	                              sub rsp, 8	      2964	screen.c	FUNCTION_26
0x40002b5	    0x48033d000000	             add rdi, qword [0x040002bc]	        59	string3.h	FUNCTION_105	CALL_3
0x40002bc	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_105	CALL_3
0x40002bf	          0x4c89eb	                            mov rbx, r13	      2964	screen.c	FUNCTION_26
0x40002c2	      0xe800000000	                          call 0x40002c7	        59	string3.h	FUNCTION_105	CALL_3
0x40002c7	    0x8b0500000000	            mov eax, dword [0x040002cd] 	      2969	screen.c	FUNCTION_26	IF_1
0x40002cd	            0x85c0	                           test eax, eax	      2969	screen.c	FUNCTION_26	IF_1
0x40002cf	            0x752f	                           jne 0x4000300	      2969	screen.c	FUNCTION_26	IF_1
0x40002d1	            0x85db	                           test ebx, ebx	      2972	screen.c	FUNCTION_26	FOR_1
0x40002d3	            0x7e1f	                           jle 0x40002f4	      2972	screen.c	FUNCTION_26	FOR_1
0x40002d5	    0x488b05000000	            mov rax, qword [0x040002dc] 	      2972	screen.c	FUNCTION_26	FOR_1
0x40002dc	            0x89e9	                            mov ecx, ebp	      2972	screen.c	FUNCTION_26	FOR_1
0x40002de	        0x4a8d1460	                  lea rdx, [rax + r12*2]	      2972	screen.c	FUNCTION_26	FOR_1
0x40002e2	            0x31c0	                            xor eax, eax	      2972	screen.c	FUNCTION_26	FOR_1
0x40002e4	         0xf1f4000	                         nop dword [rax]	      2972	screen.c	FUNCTION_26	FOR_1
0x40002e8	        0x66890c42	              mov word [rdx + rax*2], cx	      2973	screen.c	FUNCTION_26	FOR_1
0x40002ec	        0x4883c001	                              add rax, 1	      2973	screen.c	FUNCTION_26	FOR_1
0x40002f0	            0x39c3	                            cmp ebx, eax	      2972	screen.c	FUNCTION_26	FOR_1
0x40002f2	            0x7ff4	                            jg 0x40002e8	      2972	screen.c	FUNCTION_26	FOR_1
0x40002f4	        0x4883c408	                              add rsp, 8	      2974	screen.c	FUNCTION_26
0x40002f8	              0x5b	                                 pop rbx	      2974	screen.c	FUNCTION_26
0x40002f9	              0x5d	                                 pop rbp	      2974	screen.c	FUNCTION_26
0x40002fa	            0x415c	                                 pop r12	      2974	screen.c	FUNCTION_26
0x40002fc	            0x415d	                                 pop r13	      2974	screen.c	FUNCTION_26
0x40002fe	              0xc3	                                     ret	      2974	screen.c	FUNCTION_26
0x40002ff	              0x90	                                     nop	      2974	screen.c	FUNCTION_26
0x4000300	    0x488b05000000	            mov rax, qword [0x04000307] 	        90	string3.h	FUNCTION_107	CALL_6
0x4000307	    0x4a8d14ad0000	                        lea rdx, [r13*4]	        90	string3.h	FUNCTION_107	CALL_6
0x400030f	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_107	CALL_6
0x4000311	        0x4a8d3ca0	                  lea rdi, [rax + r12*4]	        90	string3.h	FUNCTION_107	CALL_6
0x4000315	      0xe800000000	                          call 0x400031a	        90	string3.h	FUNCTION_107	CALL_6
0x400031a	            0xebb5	                           jmp 0x40002d1	        90	string3.h	FUNCTION_107	CALL_6
updateWindow	functions,0:IF,5:DO,0:ELSE,0:CALL,9:FOR,0:WHILE,0:SWITCH,0	60
0x40131e0	    0x448b0d000000	            mov r9d, dword [0x040131e7] 	      1042	screen.c	FUNCTION_19	IF_1
0x40131e7	          0x4585c9	                           test r9d, r9d	      1042	screen.c	FUNCTION_19	IF_1
0x40131ea	            0x7404	                            je 0x40131f0	      1042	screen.c	FUNCTION_19	IF_1
0x40131ec	            0xf3c3	                                     ret	      1042	screen.c	FUNCTION_19	IF_1
0x40131ee	            0x6690	                                     nop	      1042	screen.c	FUNCTION_19	IF_1
0x40131f0	              0x53	                                push rbx	      1040	screen.c	FUNCTION_19
0x40131f1	          0x4889fb	                            mov rbx, rdi	      1040	screen.c	FUNCTION_19
0x40131f4	      0xe827d4feff	                 call sym.update_prepare	      1045	screen.c	FUNCTION_19	CALL_1
0x40131f9	    0x448b05000000	            mov r8d, dword [0x04013200] 	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x4013200	          0x4585c0	                           test r8d, r8d	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x4013203	     0xf857f000000	                           jne 0x4013288	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x4013209	    0x8b3d00000000	            mov edi, dword [0x0401320f] 	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x401320f	            0x85ff	                           test edi, edi	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x4013211	            0x755d	                           jne 0x4013270	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x4013213	          0x4889df	                            mov rdi, rbx	      1055	screen.c	FUNCTION_19	CALL_6
0x4013216	      0xe8a5c9ffff	                     call sym.win_update	      1055	screen.c	FUNCTION_19	CALL_6
0x401321b	    0x8b3500000000	            mov esi, dword [0x04013221] 	      1058	screen.c	FUNCTION_19	IF_4
0x4013221	            0x85f6	                           test esi, esi	      1058	screen.c	FUNCTION_19	IF_4
0x4013223	            0x7543	                           jne 0x4013268	      1058	screen.c	FUNCTION_19	IF_4
0x4013225	    0x8b8b40010000	           mov ecx, dword [rbx + 0x140] 	      1061	screen.c	FUNCTION_19	IF_5
0x401322b	            0x85c9	                           test ecx, ecx	      1061	screen.c	FUNCTION_19	IF_5
0x401322d	            0x7411	                            je 0x4013240	      1061	screen.c	FUNCTION_19	IF_5
0x401322f	    0x8b0500000000	            mov eax, dword [0x04013235] 	      6873	screen.c	FUNCTION_42	IF_1
0x4013235	            0x85c0	                           test eax, eax	      6873	screen.c	FUNCTION_42	IF_1
0x4013237	            0x746f	                            je 0x40132a8	      6873	screen.c	FUNCTION_42	IF_1
0x4013239	              0x5b	                                 pop rbx	      1072	screen.c	FUNCTION_19
0x401323a	      0xe9016affff	                   jmp sym.update_finish	      1071	screen.c	FUNCTION_19	CALL_9
0x401323f	              0x90	                                     nop	      1071	screen.c	FUNCTION_19	CALL_9
0x4013240	    0x8b1500000000	            mov edx, dword [0x04013246] 	      1063	screen.c	FUNCTION_19	IF_5
0x4013246	            0x85d2	                           test edx, edx	      1063	screen.c	FUNCTION_19	IF_5
0x4013248	            0x75e5	                           jne 0x401322f	      1063	screen.c	FUNCTION_19	IF_5
0x401324a	    0x488b05000000	            mov rax, qword [0x04013251] 	      1066	screen.c	FUNCTION_19	IF_5
0x4013251	          0x803800	                       cmp byte [rax], 0	      1066	screen.c	FUNCTION_19	IF_5
0x4013254	            0x75d9	                           jne 0x401322f	      1066	screen.c	FUNCTION_19	IF_5
0x4013256	    0x488b83800200	           mov rax, qword [rbx + 0x280] 	      1066	screen.c	FUNCTION_19	IF_5
0x401325d	          0x803800	                       cmp byte [rax], 0	      1066	screen.c	FUNCTION_19	IF_5
0x4013260	            0x74d7	                            je 0x4013239	      1066	screen.c	FUNCTION_19	IF_5
0x4013262	            0xebcb	                           jmp 0x401322f	      1066	screen.c	FUNCTION_19	IF_5
0x4013264	         0xf1f4000	                         nop dword [rax]	      1066	screen.c	FUNCTION_19	IF_5
0x4013268	      0xe84355ffff	                   call sym.draw_tabline	      1059	screen.c	FUNCTION_19	CALL_7
0x401326d	            0xebb6	                           jmp 0x4013225	      1059	screen.c	FUNCTION_19	CALL_7
0x401326f	              0x90	                                     nop	      1059	screen.c	FUNCTION_19	CALL_7
0x4013270	      0xe800000000	                          call 0x4013275	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x4013275	            0x85c0	                           test eax, eax	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x4013277	            0x749a	                            je 0x4013213	      1051	screen.c	FUNCTION_19	IF_3	CALL_4
0x4013279	      0xbf00000000	                              mov edi, 0	      1052	screen.c	FUNCTION_19	CALL_5
0x401327e	      0xe800000000	                          call 0x4013283	      1052	screen.c	FUNCTION_19	CALL_5
0x4013283	            0xeb8e	                           jmp 0x4013213	      1052	screen.c	FUNCTION_19	CALL_5
0x4013285	           0xf1f00	                         nop dword [rax]	      1052	screen.c	FUNCTION_19	CALL_5
0x4013288	      0xe800000000	                          call 0x401328d	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x401328d	            0x85c0	                           test eax, eax	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x401328f	     0xf8474ffffff	                            je 0x4013209	      1049	screen.c	FUNCTION_19	IF_2	CALL_2
0x4013295	      0xbf00000000	                              mov edi, 0	      1050	screen.c	FUNCTION_19	CALL_3
0x401329a	      0xe800000000	                          call 0x401329f	      1050	screen.c	FUNCTION_19	CALL_3
0x401329f	      0xe965ffffff	                           jmp 0x4013209	      1050	screen.c	FUNCTION_19	CALL_3
0x40132a4	         0xf1f4000	                         nop dword [rax]	      1050	screen.c	FUNCTION_19	CALL_3
0x40132a8	          0x4889df	                            mov rdi, rbx	      1050	screen.c	FUNCTION_19	CALL_3
0x40132ab	      0xe8b05bffff	        call sym.win_redr_status.part.21	      1050	screen.c	FUNCTION_19	CALL_3
0x40132b0	              0x5b	                                 pop rbx	      1072	screen.c	FUNCTION_19
0x40132b1	      0xe98a69ffff	                   jmp sym.update_finish	      1071	screen.c	FUNCTION_19	CALL_9
redraw_after_callback	functions,0:IF,5:DO,0:ELSE,3:CALL,8:FOR,0:WHILE,0:SWITCH,0	49
0x4012f50	        0x4883ec08	                              sub rsp, 8	       445	screen.c	FUNCTION_9
0x4012f54	    0x8b0500000000	            mov eax, dword [0x04012f5a] 	       448	screen.c	FUNCTION_9	IF_1
0x4012f5a	    0x830500000000	               add dword [0x04012f61], 1	       446	screen.c	FUNCTION_9
0x4012f61	      0x3d01020000	                          cmp eax, 0x201	       448	screen.c	FUNCTION_9	IF_1
0x4012f66	            0x742f	                            je 0x4012f97	       448	screen.c	FUNCTION_9	IF_1
0x4012f68	      0x3d00030000	                          cmp eax, 0x300	       448	screen.c	FUNCTION_9	IF_1
0x4012f6d	            0x7428	                            je 0x4012f97	       448	screen.c	FUNCTION_9	IF_1
0x4012f6f	            0xa808	                              test al, 8	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x4012f71	            0x744d	                            je 0x4012fc0	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x4012f73	    0x8b0d00000000	            mov ecx, dword [0x04012f79] 	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f79	            0x85c9	                           test ecx, ecx	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f7b	            0x7513	                           jne 0x4012f90	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f7d	    0x8b1500000000	            mov edx, dword [0x04012f83] 	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f83	            0x85d2	                           test edx, edx	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f85	            0x7509	                           jne 0x4012f90	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f87	            0x85ff	                           test edi, edi	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f89	            0x756d	                           jne 0x4012ff8	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f8b	       0xf1f440000	                   nop dword [rax + rax]	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x4012f90	            0x31ff	                            xor edi, edi	       462	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x4012f92	      0xe800000000	                          call 0x4012f97	       462	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x4012f97	      0xe800000000	                          call 0x4012f9c	       470	screen.c	FUNCTION_9	CALL_5
0x4012f9c	    0x8b0500000000	            mov eax, dword [0x04012fa2] 	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012fa2	            0x85c0	                           test eax, eax	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012fa4	            0x7409	                            je 0x4012faf	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012fa6	      0xe800000000	                          call 0x4012fab	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012fab	            0x85c0	                           test eax, eax	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012fad	            0x7431	                            je 0x4012fe0	       472	screen.c	FUNCTION_9	IF_5	CALL_6
0x4012faf	      0xe800000000	                          call 0x4012fb4	       478	screen.c	FUNCTION_9	CALL_8
0x4012fb4	    0x832d00000000	               sub dword [0x04012fbb], 1	       480	screen.c	FUNCTION_9
0x4012fbb	        0x4883c408	                              add rsp, 8	       481	screen.c	FUNCTION_9
0x4012fbf	              0xc3	                                     ret	       481	screen.c	FUNCTION_9
0x4012fc0	      0xa911200000	                        test eax, 0x2011	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x4012fc5	            0x74d0	                            je 0x4012f97	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x4012fc7	      0xbf05000000	                              mov edi, 5	       467	screen.c	FUNCTION_9	ELSE_2	IF_4	CALL_3
0x4012fcc	      0xe800000000	                          call 0x4012fd1	       467	screen.c	FUNCTION_9	ELSE_2	IF_4	CALL_3
0x4012fd1	            0x31ff	                            xor edi, edi	      9485	screen.c	FUNCTION_79	CALL_1
0x4012fd3	      0xe800000000	                          call 0x4012fd8	      9485	screen.c	FUNCTION_79	CALL_1
0x4012fd8	            0xebbd	                           jmp 0x4012f97	      9485	screen.c	FUNCTION_79	CALL_1
0x4012fda	    0x660f1f440000	                    nop word [rax + rax]	      9485	screen.c	FUNCTION_79	CALL_1
0x4012fe0	            0x31f6	                            xor esi, esi	       475	screen.c	FUNCTION_9	CALL_7
0x4012fe2	            0x31ff	                            xor edi, edi	       475	screen.c	FUNCTION_9	CALL_7
0x4012fe4	      0xe800000000	                          call 0x4012fe9	       475	screen.c	FUNCTION_9	CALL_7
0x4012fe9	    0x832d00000000	               sub dword [0x04012ff0], 1	       480	screen.c	FUNCTION_9
0x4012ff0	        0x4883c408	                              add rsp, 8	       481	screen.c	FUNCTION_9
0x4012ff4	              0xc3	                                     ret	       481	screen.c	FUNCTION_9
0x4012ff5	           0xf1f00	                         nop dword [rax]	       481	screen.c	FUNCTION_9
0x4012ff8	            0x31ff	                            xor edi, edi	       459	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4012ffa	      0xe800000000	                          call 0x4012fff	       459	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x4012fff	            0xeb8f	                           jmp 0x4012f90	       459	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
screen_getbytes	functions,0:IF,4:DO,0:ELSE,2:CALL,2:FOR,0:WHILE,0:SWITCH,0	59
0x4001dc0	    0x488b05000000	            mov rax, qword [0x04001dc7] 	      7348	screen.c	FUNCTION_48	IF_1
0x4001dc7	          0x4885c0	                           test rax, rax	      7348	screen.c	FUNCTION_48	IF_1
0x4001dca	            0x745a	                            je 0x4001e26	      7348	screen.c	FUNCTION_48	IF_1
0x4001dcc	    0x393d00000000	            cmp dword [0x04001dd2], edi 	      7348	screen.c	FUNCTION_48	IF_1
0x4001dd2	            0x7e52	                           jle 0x4001e26	      7348	screen.c	FUNCTION_48	IF_1
0x4001dd4	    0x393500000000	            cmp dword [0x04001dda], esi 	      7348	screen.c	FUNCTION_48	IF_1
0x4001dda	            0x7e4a	                           jle 0x4001e26	      7348	screen.c	FUNCTION_48	IF_1
0x4001ddc	    0x4c8b05000000	              mov r8, qword [0x04001de3]	      7350	screen.c	FUNCTION_48	IF_1
0x4001de3	          0x4863ff	                         movsxd rdi, edi	      7350	screen.c	FUNCTION_48	IF_1
0x4001de6	        0x410334b8	             add esi, dword [r8 + rdi*4]	      7350	screen.c	FUNCTION_48	IF_1
0x4001dea	    0x4c8b05000000	              mov r8, qword [0x04001df1]	      7351	screen.c	FUNCTION_48	IF_1
0x4001df1	            0x89f6	                            mov esi, esi	      7350	screen.c	FUNCTION_48	IF_1
0x4001df3	      0x450fb70470	            movzx r8d, word [r8 + rsi*2]	      7351	screen.c	FUNCTION_48	IF_1
0x4001df8	          0x4889f7	                            mov rdi, rsi	      7350	screen.c	FUNCTION_48	IF_1
0x4001dfb	          0x448901	                    mov dword [rcx], r8d	      7351	screen.c	FUNCTION_48	IF_1
0x4001dfe	         0xfb60430	             movzx eax, byte [rax + rsi]	      7352	screen.c	FUNCTION_48	IF_1
0x4001e02	        0xc6420100	                   mov byte [rdx + 1], 0	      7353	screen.c	FUNCTION_48	IF_1
0x4001e06	            0x8802	                      mov byte [rdx], al	      7352	screen.c	FUNCTION_48	IF_1
0x4001e08	    0x448b05000000	            mov r8d, dword [0x04001e0f] 	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e0f	          0x4585c0	                           test r8d, r8d	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e12	            0x751c	                           jne 0x4001e30	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e14	    0x8b0d00000000	            mov ecx, dword [0x04001e1a] 	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e1a	    0x81f9cc260000	                         cmp ecx, 0x26cc	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e20	            0x7436	                            je 0x4001e58	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e22	            0x85c9	                           test ecx, ecx	      7364	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0x4001e24	            0x753f	                           jne 0x4001e65	      7364	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0x4001e26	              0xc3	                                     ret	      7371	screen.c	FUNCTION_48
0x4001e27	    0x660f1f840000	                    nop word [rax + rax]	      7371	screen.c	FUNCTION_48
0x4001e30	    0x488b0d000000	            mov rcx, qword [0x04001e37] 	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e37	          0x8b0cb1	            mov ecx, dword [rcx + rsi*4]	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e3a	            0x85c9	                           test ecx, ecx	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e3c	            0x74d6	                            je 0x4001e14	      7356	screen.c	FUNCTION_48	IF_1	IF_2
0x4001e3e	              0x53	                                push rbx	      7344	screen.c	FUNCTION_48
0x4001e3f	          0x4889d6	                            mov rsi, rdx	      7357	screen.c	FUNCTION_48	IF_1	CALL_1
0x4001e42	          0x4889d3	                            mov rbx, rdx	      7357	screen.c	FUNCTION_48	IF_1	CALL_1
0x4001e45	      0xe800000000	                          call 0x4001e4a	      7357	screen.c	FUNCTION_48	IF_1	CALL_1
0x4001e4a	            0x4898	                                    cdqe	      7357	screen.c	FUNCTION_48	IF_1	CALL_1
0x4001e4c	        0xc6040300	                 mov byte [rbx + rax], 0	      7357	screen.c	FUNCTION_48	IF_1	CALL_1
0x4001e50	              0x5b	                                 pop rbx	      7371	screen.c	FUNCTION_48
0x4001e51	              0xc3	                                     ret	      7371	screen.c	FUNCTION_48
0x4001e52	    0x660f1f440000	                    nop word [rax + rax]	      7371	screen.c	FUNCTION_48
0x4001e58	    0x488b0d000000	            mov rcx, qword [0x04001e5f] 	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e5f	        0x803c318e	              cmp byte [rcx + rsi], 0x8e	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e63	            0x7423	                            je 0x4001e88	      7358	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e65	    0x80b800000000	                       cmp byte [rax], 1	      7364	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0x4001e6c	            0x7eb8	                           jle 0x4001e26	      7364	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0x4001e6e	    0x488b0d000000	            mov rcx, qword [0x04001e75] 	      7366	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0x4001e75	          0x8d4701	                      lea eax, [rdi + 1]	      7366	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0x4001e78	         0xfb60401	             movzx eax, byte [rcx + rax]	      7366	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0x4001e7c	        0xc6420200	                   mov byte [rdx + 2], 0	      7367	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0x4001e80	          0x884201	                  mov byte [rdx + 1], al	      7366	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0x4001e83	              0xc3	                                     ret	      7371	screen.c	FUNCTION_48
0x4001e84	         0xf1f4000	                         nop dword [rax]	      7371	screen.c	FUNCTION_48
0x4001e88	          0xc6028e	                    mov byte [rdx], 0x8e	      7360	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e8b	    0x488b05000000	            mov rax, qword [0x04001e92] 	      7361	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e92	         0xfb60430	             movzx eax, byte [rax + rsi]	      7361	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e96	        0xc6420200	                   mov byte [rdx + 2], 0	      7362	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e9a	          0x884201	                  mov byte [rdx + 1], al	      7361	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0x4001e9d	              0xc3	                                     ret	      7362	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
fill_foldcolumn	functions,0:IF,7:DO,0:ELSE,3:CALL,2:FOR,1:WHILE,0:SWITCH,0	90
0x4000320	    0x483b35000000	            cmp rsi, qword [0x04000327] 	      2629	screen.c	FUNCTION_24
0x4000327	            0x4154	                                push r12	      2986	screen.c	FUNCTION_27
0x4000329	          0x4989fb	                            mov r11, rdi	      2986	screen.c	FUNCTION_27
0x400032c	              0x55	                                push rbp	      2986	screen.c	FUNCTION_27
0x400032d	            0x89d5	                            mov ebp, edx	      2986	screen.c	FUNCTION_27
0x400032f	              0x53	                                push rbx	      2986	screen.c	FUNCTION_27
0x4000330	          0x4889cb	                            mov rbx, rcx	      2986	screen.c	FUNCTION_27
0x4000333	    0x488b86c80100	           mov rax, qword [rsi + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x400033a	    0x488b0d000000	            mov rcx, qword [0x04000341] 	      2628	screen.c	FUNCTION_24
0x4000341	     0xf84f9000000	                            je 0x4000440	      2629	screen.c	FUNCTION_24
0x4000347	            0x89ca	                            mov edx, ecx	      2629	screen.c	FUNCTION_24
0x4000349	    0x448ba6ac0000	           mov r12d, dword [rsi + 0xac] 	      2632	screen.c	FUNCTION_24	IF_1
0x4000350	          0x4c89df	                            mov rdi, r11	        90	string3.h	FUNCTION_107	CALL_6
0x4000353	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_107	CALL_6
0x4000358	          0x4129d4	                           sub r12d, edx	      2632	screen.c	FUNCTION_24	IF_1
0x400035b	          0x4439e0	                           cmp eax, r12d	      2632	screen.c	FUNCTION_24	IF_1
0x400035e	        0x440f4ee0	                        cmovle r12d, eax	      2632	screen.c	FUNCTION_24	IF_1
0x4000362	          0x4963d4	                        movsxd rdx, r12d	        90	string3.h	FUNCTION_107	CALL_6
0x4000365	      0xe800000000	                          call 0x400036a	        90	string3.h	FUNCTION_107	CALL_6
0x400036a	    0x448b15000000	           mov r10d, dword [0x04000371] 	      2996	screen.c	FUNCTION_27
0x4000371	            0x31d2	                            xor edx, edx	      2987	screen.c	FUNCTION_27
0x4000373	          0x4989c3	                            mov r11, rax	        90	string3.h	FUNCTION_107	CALL_6
0x4000376	          0x4585d2	                         test r10d, r10d	      2997	screen.c	FUNCTION_27	IF_1
0x4000379	     0xf8e81000000	                           jle 0x4000400	      2997	screen.c	FUNCTION_27	IF_1
0x400037f	            0x31c9	                            xor ecx, ecx	      3000	screen.c	FUNCTION_27	IF_1
0x4000381	          0x4489d0	                           mov eax, r10d	      3004	screen.c	FUNCTION_27	IF_1
0x4000384	        0x4183fc01	                             cmp r12d, 1	      3000	screen.c	FUNCTION_27	IF_1
0x4000388	           0xf95c1	                                setne cl	      3000	screen.c	FUNCTION_27	IF_1
0x400038b	          0x4429e0	                           sub eax, r12d	      3004	screen.c	FUNCTION_27	IF_1
0x400038e	            0x29e8	                            sub eax, ebp	      3004	screen.c	FUNCTION_27	IF_1
0x4000390	      0x448d4c0801	                lea r9d, [rax + rcx + 1]	      3004	screen.c	FUNCTION_27	IF_1
0x4000395	      0xb801000000	                              mov eax, 1	      3006	screen.c	FUNCTION_27	IF_1	IF_2
0x400039a	          0x4585c9	                           test r9d, r9d	      3006	screen.c	FUNCTION_27	IF_1	IF_2
0x400039d	        0x440f4ec8	                         cmovle r9d, eax	      3006	screen.c	FUNCTION_27	IF_1	IF_2
0x40003a1	          0x4139cc	                           cmp r12d, ecx	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003a4	            0x7e5a	                           jle 0x4000400	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003a6	          0x4589e0	                           mov r8d, r12d	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003a9	          0x4489c8	                            mov eax, r9d	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003ac	          0x4c89de	                            mov rsi, r11	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003af	          0x4129c8	                            sub r8d, ecx	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003b2	        0x418d7930	                    lea edi, [r9 + 0x30]	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003b6	          0x4489c1	                            mov ecx, r8d	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003b9	            0xeb1e	                           jmp 0x40003d9	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003bb	       0xf1f440000	                   nop dword [rax + rax]	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003c0	          0x40883e	                     mov byte [rsi], dil	      3016	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x40003c3	          0x4139c2	                           cmp r10d, eax	      3019	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x40003c6	            0x7438	                            je 0x4000400	      3019	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x40003c8	          0x83c201	                              add edx, 1	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003cb	          0x83c001	                              add eax, 1	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003ce	        0x4883c601	                              add rsi, 1	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003d2	          0x83c701	                              add edi, 1	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003d5	            0x39ca	                            cmp edx, ecx	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003d7	            0x7427	                            je 0x4000400	      3008	screen.c	FUNCTION_27	IF_1	FOR_1
0x40003d9	    0x4c6305000000	          movsxd r8, dword [0x040003e0] 	      3010	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x40003e0	          0x4939d8	                             cmp r8, rbx	      3010	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x40003e3	            0x743b	                            je 0x4000420	      3010	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x40003e5	        0x4183f901	                              cmp r9d, 1	      3013	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x40003e9	            0x7445	                            je 0x4000430	      3013	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x40003eb	          0x83f809	                              cmp eax, 9	      3015	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x40003ee	            0x7ed0	                           jle 0x40003c0	      3015	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x40003f0	          0x4139c2	                           cmp r10d, eax	      3019	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x40003f3	          0xc6063e	                    mov byte [rsi], 0x3e	      3018	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x40003f6	            0x75d0	                           jne 0x40003c8	      3019	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x40003f8	     0xf1f84000000	                   nop dword [rax + rax]	      3019	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x4000400	            0x85ed	                           test ebp, ebp	      3023	screen.c	FUNCTION_27	IF_7
0x4000402	            0x740d	                            je 0x4000411	      3023	screen.c	FUNCTION_27	IF_7
0x4000404	          0x4439e2	                           cmp edx, r12d	      3024	screen.c	FUNCTION_27	IF_7
0x4000407	          0x4863c2	                         movsxd rax, edx	      3024	screen.c	FUNCTION_27	IF_7
0x400040a	            0x7d2c	                           jge 0x4000438	      3024	screen.c	FUNCTION_27	IF_7
0x400040c	      0x41c604032b	              mov byte [r11 + rax], 0x2b	      3024	screen.c	FUNCTION_27	IF_7
0x4000411	              0x5b	                                 pop rbx	      3025	screen.c	FUNCTION_27
0x4000412	              0x5d	                                 pop rbp	      3025	screen.c	FUNCTION_27
0x4000413	            0x415c	                                 pop r12	      3025	screen.c	FUNCTION_27
0x4000415	              0xc3	                                     ret	      3025	screen.c	FUNCTION_27
0x4000416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3025	screen.c	FUNCTION_27
0x4000420	    0x3b0500000000	            cmp eax, dword [0x04000426] 	      3011	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x4000426	            0x7cbd	                            jl 0x40003e5	      3011	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x4000428	          0xc6062d	                    mov byte [rsi], 0x2d	      3012	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x400042b	            0xeb96	                           jmp 0x40003c3	      3012	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x400042d	           0xf1f00	                         nop dword [rax]	      3012	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x4000430	          0xc6067c	                    mov byte [rsi], 0x7c	      3014	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x4000433	            0xeb8e	                           jmp 0x40003c3	      3014	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x4000435	           0xf1f00	                         nop dword [rax]	      3014	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x4000438	          0x83ea01	                              sub edx, 1	      3024	screen.c	FUNCTION_27	IF_7
0x400043b	          0x4863c2	                         movsxd rax, edx	      3024	screen.c	FUNCTION_27	IF_7
0x400043e	            0xebcc	                           jmp 0x400040c	      3024	screen.c	FUNCTION_27	IF_7
0x4000440	          0x4885c9	                           test rcx, rcx	      2629	screen.c	FUNCTION_24
0x4000443	      0xba01000000	                              mov edx, 1	      2629	screen.c	FUNCTION_24
0x4000448	     0xf84fbfeffff	                            je 0x4000349	      2629	screen.c	FUNCTION_24
0x400044e	      0xe9f4feffff	                           jmp 0x4000347	      2629	screen.c	FUNCTION_24
redraw_later	functions,0:IF,0:DO,0:ELSE,0:CALL,1:FOR,0:WHILE,0:SWITCH,0	11
0x4001850	    0x8b0500000000	            mov eax, dword [0x04001856] 	       206	screen.c	FUNCTION_2	IF_1
0x4001856	            0x85c0	                           test eax, eax	       206	screen.c	FUNCTION_2	IF_1
0x4001858	            0x750f	                           jne 0x4001869	       206	screen.c	FUNCTION_2	IF_1
0x400185a	    0x488b05000000	            mov rax, qword [0x04001861] 	       198	screen.c	FUNCTION_1	CALL_1
0x4001861	    0x3bb828010000	           cmp edi, dword [rax + 0x128] 	       206	screen.c	FUNCTION_2	IF_1
0x4001867	            0x7f07	                            jg 0x4001870	       206	screen.c	FUNCTION_2	IF_1
0x4001869	            0xf3c3	                                     ret	       206	screen.c	FUNCTION_2	IF_1
0x400186b	       0xf1f440000	                   nop dword [rax + rax]	       206	screen.c	FUNCTION_2	IF_1
0x4001870	            0x89fe	                            mov esi, edi	       206	screen.c	FUNCTION_2	IF_1
0x4001872	          0x4889c7	                            mov rdi, rax	       206	screen.c	FUNCTION_2	IF_1
0x4001875	      0xe9e6feffff	        jmp sym.redraw_win_later.part.10	       206	screen.c	FUNCTION_2	IF_1
redrawWinline	functions,0:IF,4:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	43
0x4001a00	        0x4883ec08	                              sub rsp, 8	       495	screen.c	FUNCTION_10
0x4001a04	    0x488b05000000	            mov rax, qword [0x04001a0b] 	       500	screen.c	FUNCTION_10	IF_1
0x4001a0b	          0x4889fa	                            mov rdx, rdi	       495	screen.c	FUNCTION_10
0x4001a0e	          0x4189f0	                            mov r8d, esi	       495	screen.c	FUNCTION_10
0x4001a11	    0x488b88300100	           mov rcx, qword [rax + 0x130] 	       500	screen.c	FUNCTION_10	IF_1
0x4001a18	          0x4885c9	                           test rcx, rcx	       500	screen.c	FUNCTION_10	IF_1
0x4001a1b	            0x7433	                            je 0x4001a50	       500	screen.c	FUNCTION_10	IF_1
0x4001a1d	          0x4839f9	                            cmp rcx, rdi	       500	screen.c	FUNCTION_10	IF_1
0x4001a20	            0x7f2e	                            jg 0x4001a50	       500	screen.c	FUNCTION_10	IF_1
0x4001a22	    0x488b88380100	           mov rcx, qword [rax + 0x138] 	       502	screen.c	FUNCTION_10	IF_2
0x4001a29	          0x4885c9	                           test rcx, rcx	       502	screen.c	FUNCTION_10	IF_2
0x4001a2c	            0x7435	                            je 0x4001a63	       502	screen.c	FUNCTION_10	IF_2
0x4001a2e	          0x4839ca	                            cmp rdx, rcx	       502	screen.c	FUNCTION_10	IF_2
0x4001a31	            0x7f30	                            jg 0x4001a63	       502	screen.c	FUNCTION_10	IF_2
0x4001a33	      0xbf0a000000	                            mov edi, 0xa	       504	screen.c	FUNCTION_10	CALL_1
0x4001a38	      0xe800000000	                          call 0x4001a3d	       504	screen.c	FUNCTION_10	CALL_1
0x4001a3d	          0x4585c0	                           test r8d, r8d	       507	screen.c	FUNCTION_10	IF_3
0x4001a40	            0x7537	                           jne 0x4001a79	       507	screen.c	FUNCTION_10	IF_3
0x4001a42	        0x4883c408	                              add rsp, 8	       515	screen.c	FUNCTION_10
0x4001a46	              0xc3	                                     ret	       515	screen.c	FUNCTION_10
0x4001a47	    0x660f1f840000	                    nop word [rax + rax]	       515	screen.c	FUNCTION_10
0x4001a50	    0x488b88380100	           mov rcx, qword [rax + 0x138] 	       502	screen.c	FUNCTION_10	IF_2
0x4001a57	    0x488990300100	            mov qword [rax + 0x130], rdx	       501	screen.c	FUNCTION_10	IF_1
0x4001a5e	          0x4885c9	                           test rcx, rcx	       502	screen.c	FUNCTION_10	IF_2
0x4001a61	            0x75cb	                           jne 0x4001a2e	       502	screen.c	FUNCTION_10	IF_2
0x4001a63	    0x488990380100	            mov qword [rax + 0x138], rdx	       503	screen.c	FUNCTION_10	IF_2
0x4001a6a	      0xbf0a000000	                            mov edi, 0xa	       504	screen.c	FUNCTION_10	CALL_1
0x4001a6f	      0xe800000000	                          call 0x4001a74	       504	screen.c	FUNCTION_10	CALL_1
0x4001a74	          0x4585c0	                           test r8d, r8d	       507	screen.c	FUNCTION_10	IF_3
0x4001a77	            0x74c9	                            je 0x4001a42	       507	screen.c	FUNCTION_10	IF_3
0x4001a79	    0x488b3d000000	            mov rdi, qword [0x04001a80] 	       510	screen.c	FUNCTION_10	IF_3	CALL_2
0x4001a80	          0x4889d6	                            mov rsi, rdx	       510	screen.c	FUNCTION_10	IF_3	CALL_2
0x4001a83	      0xe800000000	                          call 0x4001a88	       510	screen.c	FUNCTION_10	IF_3	CALL_2
0x4001a88	            0x85c0	                           test eax, eax	       511	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a8a	            0x78b6	                            js 0x4001a42	       511	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a8c	    0x488b15000000	            mov rdx, qword [0x04001a93] 	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a93	            0x4898	                                    cdqe	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a95	        0x488d0440	                  lea rax, [rax + rax*2]	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a99	        0x48c1e003	                              shl rax, 3	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001a9d	    0x480382000100	            add rax, qword [rdx + 0x100]	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001aa4	        0xc6400a00	                 mov byte [rax + 0xa], 0	       512	screen.c	FUNCTION_10	IF_3	IF_4
0x4001aa8	        0x4883c408	                              add rsp, 8	       515	screen.c	FUNCTION_10
0x4001aac	              0xc3	                                     ret	       515	screen.c	FUNCTION_10
redraw_later_clear	functions,0:IF,1:DO,0:ELSE,1:CALL,1:FOR,0:WHILE,0:SWITCH,0	8
0x40018f0	      0xbf32000000	                           mov edi, 0x32	       223	screen.c	FUNCTION_3	CALL_1
0x40018f5	      0xe800000000	                          call 0x40018fa	       223	screen.c	FUNCTION_3	CALL_1
0x40018fa	    0x833d00000000	               cmp dword [0x04001901], 1	       228	screen.c	FUNCTION_3	IF_1
0x4001901	            0x19c0	                            sbb eax, eax	       228	screen.c	FUNCTION_3	IF_1
0x4001903	          0x83e08b	                     and eax, 0xffffff8b	       228	screen.c	FUNCTION_3	IF_1
0x4001906	       0x500010000	                          add eax, 0x100	       228	screen.c	FUNCTION_3	IF_1
0x400190b	    0x890500000000	            mov dword [0x04001911], eax 	       228	screen.c	FUNCTION_3	IF_1
0x4001911	              0xc3	                                     ret	       228	screen.c	FUNCTION_3	IF_1
screen_draw_rectangle	functions,0:IF,4:DO,0:ELSE,1:CALL,4:FOR,2:WHILE,0:SWITCH,0	80
0x4004c10	            0x4157	                                push r15	      8446	screen.c	FUNCTION_63
0x4004c12	            0x4156	                                push r14	      8446	screen.c	FUNCTION_63
0x4004c14	            0x4155	                                push r13	      8446	screen.c	FUNCTION_63
0x4004c16	            0x4154	                                push r12	      8446	screen.c	FUNCTION_63
0x4004c18	              0x55	                                push rbp	      8446	screen.c	FUNCTION_63
0x4004c19	              0x53	                                push rbx	      8446	screen.c	FUNCTION_63
0x4004c1a	        0x4883ec18	                           sub rsp, 0x18	      8446	screen.c	FUNCTION_63
0x4004c1e	    0x48833d000000	               cmp qword [0x04004c26], 0	      8454	screen.c	FUNCTION_63	IF_1
0x4004c26	        0x89742408	                mov dword [rsp + 8], esi	      8446	screen.c	FUNCTION_63
0x4004c2a	     0xf84ef000000	                            je 0x4004d1f	      8454	screen.c	FUNCTION_63	IF_1
0x4004c30	          0x4585c0	                           test r8d, r8d	      8458	screen.c	FUNCTION_63	IF_2
0x4004c33	      0xb801000000	                              mov eax, 1	      8458	screen.c	FUNCTION_63	IF_2
0x4004c38	     0xf4405000000	           cmove eax, dword [0x04004c3f]	      8458	screen.c	FUNCTION_63	IF_2
0x4004c3f	          0x4c63f7	                         movsxd r14, edi	      8458	screen.c	FUNCTION_63	IF_2
0x4004c42	            0x89fd	                            mov ebp, edi	      8458	screen.c	FUNCTION_63	IF_2
0x4004c44	        0x448d2c0e	                   lea r13d, [rsi + rcx]	      8458	screen.c	FUNCTION_63	IF_2
0x4004c48	    0x890500000000	            mov dword [0x04004c4e], eax 	      8458	screen.c	FUNCTION_63	IF_2
0x4004c4e	          0x8d0417	                    lea eax, [rdi + rdx]	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c51	            0x89c2	                            mov edx, eax	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c53	        0x8944240c	              mov dword [rsp + 0xc], eax	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c57	    0x4a8d04b50000	                        lea rax, [r14*4]	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c5f	            0x39d7	                            cmp edi, edx	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c61	        0x48890424	                    mov qword [rsp], rax	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c65	     0xf8daa000000	                           jge 0x4004d15	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c6b	       0xf1f440000	                   nop dword [rax + rax]	      8459	screen.c	FUNCTION_63	FOR_1
0x4004c70	    0x488b05000000	            mov rax, qword [0x04004c77] 	      8461	screen.c	FUNCTION_63	FOR_1
0x4004c77	        0x488b0c24	                    mov rcx, qword [rsp]	      8461	screen.c	FUNCTION_63	FOR_1
0x4004c7b	    0x8b1d00000000	            mov ebx, dword [0x04004c81] 	      8463	screen.c	FUNCTION_63	FOR_1
0x4004c81	        0x448b2408	             mov r12d, dword [rax + rcx]	      8461	screen.c	FUNCTION_63	FOR_1
0x4004c85	        0x8b442408	                mov eax, dword [rsp + 8]	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004c89	          0x4401e3	                           add ebx, r12d	      8463	screen.c	FUNCTION_63	FOR_1
0x4004c8c	          0x4439e8	                           cmp eax, r13d	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004c8f	          0x4189c7	                           mov r15d, eax	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004c92	            0x7c35	                            jl 0x4004cc9	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004c94	            0xeb6d	                           jmp 0x4004d03	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004ca0	            0x89de	                            mov esi, ebx	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004ca2	          0x4489f7	                           mov edi, r14d	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004ca5	      0xe800000000	                          call 0x4004caa	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004caa	          0x83f801	                              cmp eax, 1	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004cad	            0x7e28	                           jle 0x4004cd7	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004caf	          0x4489fa	                           mov edx, r15d	      8470	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x4004cb2	        0x4183c701	                             add r15d, 1	      8471	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3
0x4004cb6	            0x89ee	                            mov esi, ebp	      8470	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x4004cb8	          0x4489f7	                           mov edi, r14d	      8470	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x4004cbb	        0x4183c701	                             add r15d, 1	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004cbf	      0xe89cecffff	                  call sym.screen_char_2	      8470	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x4004cc4	          0x4539ef	                          cmp r15d, r13d	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004cc7	            0x7d3a	                           jge 0x4004d03	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004cc9	    0x8b0500000000	            mov eax, dword [0x04004ccf] 	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004ccf	        0x478d343c	                   lea r14d, [r12 + r15]	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004cd3	            0x85c0	                           test eax, eax	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004cd5	            0x75c9	                           jne 0x4004ca0	      8468	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x4004cd7	          0x4489fa	                           mov edx, r15d	      8476	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x4004cda	            0x89ee	                            mov esi, ebp	      8476	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x4004cdc	          0x4489f7	                           mov edi, r14d	      8476	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x4004cdf	      0xe85ceaffff	                    call sym.screen_char	      8476	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x4004ce4	            0x89de	                            mov esi, ebx	      8478	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x4004ce6	          0x4489f7	                           mov edi, r14d	      8478	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x4004ce9	      0xe800000000	                          call 0x4004cee	      8478	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x4004cee	          0x83f802	                              cmp eax, 2	      8479	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4
0x4004cf1	           0xf9dc0	                                setge al	      8479	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4
0x4004cf4	           0xfb6c0	                           movzx eax, al	      8479	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4
0x4004cf7	          0x4101c7	                           add r15d, eax	      8479	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4
0x4004cfa	        0x4183c701	                             add r15d, 1	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004cfe	          0x4539ef	                          cmp r15d, r13d	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004d01	            0x7cc6	                            jl 0x4004cc9	      8465	screen.c	FUNCTION_63	FOR_1	FOR_2
0x4004d03	          0x83c501	                              add ebp, 1	      8459	screen.c	FUNCTION_63	FOR_1
0x4004d06	      0x4883042404	                      add qword [rsp], 4	      8459	screen.c	FUNCTION_63	FOR_1
0x4004d0b	        0x3b6c240c	              cmp ebp, dword [rsp + 0xc]	      8459	screen.c	FUNCTION_63	FOR_1
0x4004d0f	     0xf855bffffff	                           jne 0x4004c70	      8459	screen.c	FUNCTION_63	FOR_1
0x4004d15	    0xc70500000000	               mov dword [0x04004d1f], 0	      8484	screen.c	FUNCTION_63
0x4004d1f	        0x4883c418	                           add rsp, 0x18	      8485	screen.c	FUNCTION_63
0x4004d23	              0x5b	                                 pop rbx	      8485	screen.c	FUNCTION_63
0x4004d24	              0x5d	                                 pop rbp	      8485	screen.c	FUNCTION_63
0x4004d25	            0x415c	                                 pop r12	      8485	screen.c	FUNCTION_63
0x4004d27	            0x415d	                                 pop r13	      8485	screen.c	FUNCTION_63
0x4004d29	            0x415e	                                 pop r14	      8485	screen.c	FUNCTION_63
0x4004d2b	            0x415f	                                 pop r15	      8485	screen.c	FUNCTION_63
0x4004d2d	              0xc3	                                     ret	      8485	screen.c	FUNCTION_63
status_redraw_curbuf	functions,0:IF,1:DO,0:ELSE,0:CALL,2:FOR,0:WHILE,0:SWITCH,0	19
0x4001bc0	    0x488b15000000	            mov rdx, qword [0x04001bc7] 	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bc7	          0x4885d2	                           test rdx, rdx	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bca	            0x7424	                            je 0x4001bf0	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bcc	         0xf1f4000	                         nop dword [rax]	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bd0	    0x8b82a4000000	            mov eax, dword [rdx + 0xa4] 	      6513	screen.c	FUNCTION_35	IF_1
0x4001bd6	            0x85c0	                           test eax, eax	      6513	screen.c	FUNCTION_35	IF_1
0x4001bd8	            0x740d	                            je 0x4001be7	      6513	screen.c	FUNCTION_35	IF_1
0x4001bda	    0x488b05000000	            mov rax, qword [0x04001be1] 	      6513	screen.c	FUNCTION_35	IF_1
0x4001be1	        0x48394208	                cmp qword [rdx + 8], rax	      6513	screen.c	FUNCTION_35	IF_1
0x4001be5	            0x7411	                            je 0x4001bf8	      6513	screen.c	FUNCTION_35	IF_1
0x4001be7	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      6512	screen.c	FUNCTION_35	CALL_1
0x4001beb	          0x4885d2	                           test rdx, rdx	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bee	            0x75e0	                           jne 0x4001bd0	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bf0	            0xf3c3	                                     ret	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bf2	    0x660f1f440000	                    nop word [rax + rax]	      6512	screen.c	FUNCTION_35	CALL_1
0x4001bf8	    0xc78240010000	              mov dword [rdx + 0x140], 1	      6515	screen.c	FUNCTION_35	IF_1
0x4001c02	      0xbf0a000000	                            mov edi, 0xa	      6516	screen.c	FUNCTION_35	IF_1	CALL_2
0x4001c07	      0xe800000000	                          call 0x4001c0c	      6516	screen.c	FUNCTION_35	IF_1	CALL_2
0x4001c0c	            0xebd9	                           jmp 0x4001be7	      6516	screen.c	FUNCTION_35	IF_1	CALL_2
win_rest_invalid	functions,0:IF,0:DO,0:ELSE,0:CALL,1:FOR,0:WHILE,1:SWITCH,0	21
0x4001790	          0x4885ff	                           test rdi, rdi	      9736	screen.c	FUNCTION_84	WHILE_1
0x4001793	          0x4889f8	                            mov rax, rdi	      9735	screen.c	FUNCTION_84
0x4001796	            0x751b	                           jne 0x40017b3	      9736	screen.c	FUNCTION_84	WHILE_1
0x4001798	            0xeb3e	                           jmp 0x40017d8	      9736	screen.c	FUNCTION_84	WHILE_1
0x400179a	    0x660f1f440000	                    nop word [rax + rax]	      9736	screen.c	FUNCTION_84	WHILE_1
0x40017a0	    0xc78040010000	              mov dword [rax + 0x140], 1	      9739	screen.c	FUNCTION_84	WHILE_1
0x40017aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9740	screen.c	FUNCTION_84	WHILE_1
0x40017ae	          0x4885c0	                           test rax, rax	      9736	screen.c	FUNCTION_84	WHILE_1
0x40017b1	            0x7425	                            je 0x40017d8	      9736	screen.c	FUNCTION_84	WHILE_1
0x40017b3	    0x8b1500000000	            mov edx, dword [0x040017b9] 	       206	screen.c	FUNCTION_2	IF_1
0x40017b9	            0x85d2	                           test edx, edx	       206	screen.c	FUNCTION_2	IF_1
0x40017bb	            0x75e3	                           jne 0x40017a0	       206	screen.c	FUNCTION_2	IF_1
0x40017bd	    0x83b828010000	          cmp dword [rax + 0x128], 0x27 	       206	screen.c	FUNCTION_2	IF_1
0x40017c4	            0x7fda	                            jg 0x40017a0	       206	screen.c	FUNCTION_2	IF_1
0x40017c6	      0xbe28000000	                           mov esi, 0x28	       206	screen.c	FUNCTION_2	IF_1
0x40017cb	          0x4889c7	                            mov rdi, rax	       206	screen.c	FUNCTION_2	IF_1
0x40017ce	      0xe88dffffff	       call sym.redraw_win_later.part.10	       206	screen.c	FUNCTION_2	IF_1
0x40017d3	            0xebcb	                           jmp 0x40017a0	       206	screen.c	FUNCTION_2	IF_1
0x40017d5	           0xf1f00	                         nop dword [rax]	       206	screen.c	FUNCTION_2	IF_1
0x40017d8	    0xc70500000000	               mov dword [0x040017e2], 1	      9742	screen.c	FUNCTION_84
0x40017e2	              0xc3	                                     ret	      9743	screen.c	FUNCTION_84
showruler	functions,0:IF,5:DO,0:ELSE,1:CALL,6:FOR,0:WHILE,0:SWITCH,0	54
0x4009e70	            0x85ff	                           test edi, edi	     10859	screen.c	FUNCTION_99	IF_1	CALL_1
0x4009e72	              0x53	                                push rbx	     10858	screen.c	FUNCTION_99
0x4009e73	            0x89fb	                            mov ebx, edi	     10858	screen.c	FUNCTION_99
0x4009e75	            0x7509	                           jne 0x4009e80	     10859	screen.c	FUNCTION_99	IF_1	CALL_1
0x4009e77	      0xe800000000	                          call 0x4009e7c	     10859	screen.c	FUNCTION_99	IF_1	CALL_1
0x4009e7c	            0x85c0	                           test eax, eax	     10859	screen.c	FUNCTION_99	IF_1	CALL_1
0x4009e7e	            0x745b	                            je 0x4009edb	     10859	screen.c	FUNCTION_99	IF_1	CALL_1
0x4009e80	      0xe800000000	                          call 0x4009e85	     10862	screen.c	FUNCTION_99	IF_2	CALL_2
0x4009e85	            0x85c0	                           test eax, eax	     10862	screen.c	FUNCTION_99	IF_2	CALL_2
0x4009e87	            0x7557	                           jne 0x4009ee0	     10862	screen.c	FUNCTION_99	IF_2	CALL_2
0x4009e89	    0x488b05000000	            mov rax, qword [0x04009e90] 	     10870	screen.c	FUNCTION_99	IF_3
0x4009e90	    0x488b3d000000	            mov rdi, qword [0x04009e97] 	     10870	screen.c	FUNCTION_99	IF_3
0x4009e97	          0x803800	                       cmp byte [rax], 0	     10870	screen.c	FUNCTION_99	IF_3
0x4009e9a	            0x7574	                           jne 0x4009f10	     10870	screen.c	FUNCTION_99	IF_3
0x4009e9c	    0x488b87800200	           mov rax, qword [rdi + 0x280] 	     10870	screen.c	FUNCTION_99	IF_3
0x4009ea3	          0x803800	                       cmp byte [rax], 0	     10870	screen.c	FUNCTION_99	IF_3
0x4009ea6	            0x7568	                           jne 0x4009f10	     10870	screen.c	FUNCTION_99	IF_3
0x4009ea8	            0x89de	                            mov esi, ebx	     10877	screen.c	FUNCTION_99	CALL_4
0x4009eaa	      0xe891b9ffff	                 call sym.win_redr_ruler	     10877	screen.c	FUNCTION_99	CALL_4
0x4009eaf	    0x8b3500000000	            mov esi, dword [0x04009eb5] 	     10881	screen.c	FUNCTION_99	IF_4
0x4009eb5	            0x85f6	                           test esi, esi	     10881	screen.c	FUNCTION_99	IF_4
0x4009eb7	            0x7513	                           jne 0x4009ecc	     10881	screen.c	FUNCTION_99	IF_4
0x4009eb9	    0x8b0d00000000	            mov ecx, dword [0x04009ebf] 	     10883	screen.c	FUNCTION_99	IF_4
0x4009ebf	            0x85c9	                           test ecx, ecx	     10883	screen.c	FUNCTION_99	IF_4
0x4009ec1	            0x7435	                            je 0x4009ef8	     10883	screen.c	FUNCTION_99	IF_4
0x4009ec3	    0xf60500000000	               test byte [0x04009eca], 1	     10883	screen.c	FUNCTION_99	IF_4
0x4009eca	            0x742c	                            je 0x4009ef8	     10883	screen.c	FUNCTION_99	IF_4
0x4009ecc	      0xe800000000	                          call 0x4009ed1	     10887	screen.c	FUNCTION_99	CALL_5
0x4009ed1	    0x8b0500000000	            mov eax, dword [0x04009ed7] 	     10890	screen.c	FUNCTION_99	IF_5
0x4009ed7	            0x85c0	                           test eax, eax	     10890	screen.c	FUNCTION_99	IF_5
0x4009ed9	            0x754d	                           jne 0x4009f28	     10890	screen.c	FUNCTION_99	IF_5
0x4009edb	              0x5b	                                 pop rbx	     10892	screen.c	FUNCTION_99
0x4009edc	              0xc3	                                     ret	     10892	screen.c	FUNCTION_99
0x4009edd	           0xf1f00	                         nop dword [rax]	     10892	screen.c	FUNCTION_99
0x4009ee0	    0x488b05000000	            mov rax, qword [0x04009ee7] 	     10865	screen.c	FUNCTION_99	IF_2
0x4009ee7	    0xc78040010000	              mov dword [rax + 0x140], 1	     10865	screen.c	FUNCTION_99	IF_2
0x4009ef1	              0x5b	                                 pop rbx	     10892	screen.c	FUNCTION_99
0x4009ef2	              0xc3	                                     ret	     10892	screen.c	FUNCTION_99
0x4009ef3	       0xf1f440000	                   nop dword [rax + rax]	     10892	screen.c	FUNCTION_99
0x4009ef8	    0x8b1500000000	            mov edx, dword [0x04009efe] 	     10884	screen.c	FUNCTION_99	IF_4
0x4009efe	            0x85d2	                           test edx, edx	     10884	screen.c	FUNCTION_99	IF_4
0x4009f00	            0x74cf	                            je 0x4009ed1	     10884	screen.c	FUNCTION_99	IF_4
0x4009f02	    0xf60500000000	               test byte [0x04009f09], 2	     10884	screen.c	FUNCTION_99	IF_4
0x4009f09	            0x74c6	                            je 0x4009ed1	     10884	screen.c	FUNCTION_99	IF_4
0x4009f0b	            0xebbf	                           jmp 0x4009ecc	     10884	screen.c	FUNCTION_99	IF_4
0x4009f0d	           0xf1f00	                         nop dword [rax]	     10884	screen.c	FUNCTION_99	IF_4
0x4009f10	    0x448b87a40000	            mov r8d, dword [rdi + 0xa4] 	     10870	screen.c	FUNCTION_99	IF_3
0x4009f17	          0x4585c0	                           test r8d, r8d	     10870	screen.c	FUNCTION_99	IF_3
0x4009f1a	            0x748c	                            je 0x4009ea8	     10870	screen.c	FUNCTION_99	IF_3
0x4009f1c	      0xe8afabffff	       call sym.redraw_custom_statusline	     10872	screen.c	FUNCTION_99	IF_3	CALL_3
0x4009f21	            0xeb8c	                           jmp 0x4009eaf	     10872	screen.c	FUNCTION_99	IF_3	CALL_3
0x4009f23	       0xf1f440000	                   nop dword [rax + rax]	     10872	screen.c	FUNCTION_99	IF_3	CALL_3
0x4009f28	              0x5b	                                 pop rbx	     10892	screen.c	FUNCTION_99
0x4009f29	      0xe982e8ffff	                    jmp sym.draw_tabline	     10891	screen.c	FUNCTION_99	CALL_6
messaging	functions,0:IF,0:DO,0:ELSE,0:CALL,1:FOR,0:WHILE,0:SWITCH,0	19
0x4009e30	    0x8b0d00000000	            mov ecx, dword [0x04009e36] 	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e36	            0x85c9	                           test ecx, ecx	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e38	            0x7506	                           jne 0x4009e40	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e3a	      0xb801000000	                              mov eax, 1	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e3f	              0xc3	                                     ret	     10783	screen.c	FUNCTION_97
0x4009e40	        0x4883ec08	                              sub rsp, 8	     10781	screen.c	FUNCTION_97
0x4009e44	      0xe800000000	                          call 0x4009e49	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e49	            0x85c0	                           test eax, eax	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e4b	            0x7413	                            je 0x4009e60	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e4d	    0x8b1500000000	            mov edx, dword [0x04009e53] 	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e53	            0x31c0	                            xor eax, eax	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e55	            0x85d2	                           test edx, edx	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e57	           0xf95c0	                                setne al	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e5a	        0x4883c408	                              add rsp, 8	     10783	screen.c	FUNCTION_97
0x4009e5e	              0xc3	                                     ret	     10783	screen.c	FUNCTION_97
0x4009e5f	              0x90	                                     nop	     10783	screen.c	FUNCTION_97
0x4009e60	      0xb801000000	                              mov eax, 1	     10782	screen.c	FUNCTION_97	CALL_1
0x4009e65	        0x4883c408	                              add rsp, 8	     10783	screen.c	FUNCTION_97
0x4009e69	              0xc3	                                     ret	     10783	screen.c	FUNCTION_97
win_line	functions,0:IF,336:DO,0:ELSE,116:CALL,209:FOR,6:WHILE,9:SWITCH,0	4535
0x4009fe0	            0x4157	                                push r15	      3042	screen.c	FUNCTION_28
0x4009fe2	            0x4156	                                push r14	      3042	screen.c	FUNCTION_28
0x4009fe4	          0x4989ff	                            mov r15, rdi	      3042	screen.c	FUNCTION_28
0x4009fe7	            0x4155	                                push r13	      3042	screen.c	FUNCTION_28
0x4009fe9	            0x4154	                                push r12	      3042	screen.c	FUNCTION_28
0x4009feb	              0x55	                                push rbp	      3042	screen.c	FUNCTION_28
0x4009fec	              0x53	                                push rbx	      3042	screen.c	FUNCTION_28
0x4009fed	    0x4881ec780300	                          sub rsp, 0x378	      3042	screen.c	FUNCTION_28
0x4009ff4	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      3042	screen.c	FUNCTION_28
0x4009ffd	    0x48899c246803	            mov qword [rsp + 0x368], rbx	      3042	screen.c	FUNCTION_28
0x400a005	            0x31db	                            xor ebx, ebx	      3042	screen.c	FUNCTION_28
0x400a007	    0x8b1d00000000	            mov ebx, dword [0x0400a00d] 	      3064	screen.c	FUNCTION_28
0x400a00d	            0x39ca	                            cmp edx, ecx	      3230	screen.c	FUNCTION_28	IF_1
0x400a00f	      0x4889742460	             mov qword [rsp + 0x60], rsi	      3042	screen.c	FUNCTION_28
0x400a014	    0x899424d00000	             mov dword [rsp + 0xd0], edx	      3042	screen.c	FUNCTION_28
0x400a01b	    0x898c24f00000	             mov dword [rsp + 0xf0], ecx	      3042	screen.c	FUNCTION_28
0x400a022	    0x448984245c01	            mov dword [rsp + 0x15c], r8d	      3042	screen.c	FUNCTION_28
0x400a02a	    0xc78424980100	              mov dword [rsp + 0x198], 0	      3045	screen.c	FUNCTION_28
0x400a035	    0x899c24940000	             mov dword [rsp + 0x94], ebx	      3064	screen.c	FUNCTION_28
0x400a03c	    0x8b1d00000000	            mov ebx, dword [0x0400a042] 	      3065	screen.c	FUNCTION_28
0x400a042	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	      3058	screen.c	FUNCTION_28
0x400a04e	    0xc78424a40100	    mov dword [rsp + 0x1a4], 0x7fffffff 	      3132	screen.c	FUNCTION_28
0x400a059	    0xc78424a80100	    mov dword [rsp + 0x1a8], 0xffffffff 	      3133	screen.c	FUNCTION_28
0x400a064	    0xc78424ac0100	              mov dword [rsp + 0x1ac], 0	      3205	screen.c	FUNCTION_28
0x400a06f	    0x899c24840000	             mov dword [rsp + 0x84], ebx	      3065	screen.c	FUNCTION_28
0x400a076	            0x7e30	                           jle 0x400a0a8	      3230	screen.c	FUNCTION_28	IF_1
0x400a078	    0x488b9c246803	           mov rbx, qword [rsp + 0x368] 	      5993	screen.c	FUNCTION_28
0x400a080	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5993	screen.c	FUNCTION_28
0x400a089	    0x8b8424d00000	            mov eax, dword [rsp + 0xd0] 	      5993	screen.c	FUNCTION_28
0x400a090	     0xf85f7580000	                           jne 0x400f98d	      5993	screen.c	FUNCTION_28
0x400a096	    0x4881c4780300	                          add rsp, 0x378	      5993	screen.c	FUNCTION_28
0x400a09d	              0x5b	                                 pop rbx	      5993	screen.c	FUNCTION_28
0x400a09e	              0x5d	                                 pop rbp	      5993	screen.c	FUNCTION_28
0x400a09f	            0x415c	                                 pop r12	      5993	screen.c	FUNCTION_28
0x400a0a1	            0x415d	                                 pop r13	      5993	screen.c	FUNCTION_28
0x400a0a3	            0x415e	                                 pop r14	      5993	screen.c	FUNCTION_28
0x400a0a5	            0x415f	                                 pop r15	      5993	screen.c	FUNCTION_28
0x400a0a7	              0xc3	                                     ret	      5993	screen.c	FUNCTION_28
0x400a0a8	    0x8b0500000000	            mov eax, dword [0x0400a0ae] 	      3207	screen.c	FUNCTION_28	CALL_1
0x400a0ae	    0x898424300100	            mov dword [rsp + 0x130], eax	      3207	screen.c	FUNCTION_28	CALL_1
0x400a0b5	    0x8b87a8010000	           mov eax, dword [rdi + 0x1a8] 	      3234	screen.c	FUNCTION_28	CALL_2
0x400a0bb	     0x3879c000000	             add eax, dword [rdi + 0x9c]	      3234	screen.c	FUNCTION_28	CALL_2
0x400a0c1	             0x1d0	                            add eax, edx	      3234	screen.c	FUNCTION_28	CALL_2
0x400a0c3	    0x898424900000	             mov dword [rsp + 0x90], eax	      3234	screen.c	FUNCTION_28	CALL_2
0x400a0ca	    0x8b8730020000	           mov eax, dword [rdi + 0x230] 	      3241	screen.c	FUNCTION_28
0x400a0d0	    0x898424100100	            mov dword [rsp + 0x110], eax	      3241	screen.c	FUNCTION_28
0x400a0d7	      0xe800000000	                          call 0x400a0dc	      3246	screen.c	FUNCTION_28	IF_2	CALL_3
0x400a0dc	            0x85c0	                           test eax, eax	      3246	screen.c	FUNCTION_28	IF_2	CALL_3
0x400a0de	    0xc78424f40000	               mov dword [rsp + 0xf4], 0	      3098	screen.c	FUNCTION_28
0x400a0e9	            0x7412	                            je 0x400a0fd	      3246	screen.c	FUNCTION_28	IF_2	CALL_3
0x400a0eb	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3248	screen.c	FUNCTION_28	IF_2
0x400a0ef	    0x4883b8500200	              cmp qword [rax + 0x250], 0	      3248	screen.c	FUNCTION_28	IF_2
0x400a0f7	     0xf8461130000	                            je 0x400b45e	      3248	screen.c	FUNCTION_28	IF_2
0x400a0fd	    0x4d8bb7380500	           mov r14, qword [r15 + 0x538] 	      3273	screen.c	FUNCTION_28
0x400a104	          0x4d85f6	                           test r14, r14	      3274	screen.c	FUNCTION_28	IF_5
0x400a107	     0xf84c04a0000	                            je 0x400ebcd	      3274	screen.c	FUNCTION_28	IF_5
0x400a10d	          0x418b06	                    mov eax, dword [r14]	      2479	screen.c	FUNCTION_22
0x400a110	            0xf7d0	                                 not eax	      2479	screen.c	FUNCTION_22
0x400a112	          0xc1e81f	                           shr eax, 0x1f	      2479	screen.c	FUNCTION_22
0x400a115	        0x89442474	             mov dword [rsp + 0x74], eax	      2479	screen.c	FUNCTION_22
0x400a119	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3279	screen.c	FUNCTION_28	IF_6	CALL_6
0x400a11d	      0xe800000000	                          call 0x400a122	      3279	screen.c	FUNCTION_28	IF_6	CALL_6
0x400a122	            0x85c0	                           test eax, eax	      3279	screen.c	FUNCTION_28	IF_6	CALL_6
0x400a124	    0xc784243c0100	              mov dword [rsp + 0x13c], 0	      3165	screen.c	FUNCTION_28
0x400a12f	    0xc78424380100	              mov dword [rsp + 0x138], 0	      3164	screen.c	FUNCTION_28
0x400a13a	     0xf850b450000	                           jne 0x400e64b	      3279	screen.c	FUNCTION_28	IF_6	CALL_6
0x400a140	    0x458b87680200	           mov r8d, dword [r15 + 0x268] 	      3288	screen.c	FUNCTION_28	IF_7
0x400a147	          0x4585c0	                           test r8d, r8d	      3288	screen.c	FUNCTION_28	IF_7
0x400a14a	     0xf84b9000000	                            je 0x400a209	      3288	screen.c	FUNCTION_28	IF_7
0x400a150	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3289	screen.c	FUNCTION_28	IF_7
0x400a154	    0x488b90800400	           mov rdx, qword [rax + 0x480] 	      3289	screen.c	FUNCTION_28	IF_7
0x400a15b	          0x803a00	                       cmp byte [rdx], 0	      3289	screen.c	FUNCTION_28	IF_7
0x400a15e	     0xf84a5000000	                            je 0x400a209	      3289	screen.c	FUNCTION_28	IF_7
0x400a164	    0x8bb848030000	           mov edi, dword [rax + 0x348] 	      3290	screen.c	FUNCTION_28	IF_7
0x400a16a	            0x85ff	                           test edi, edi	      3290	screen.c	FUNCTION_28	IF_7
0x400a16c	     0xf8e97000000	                           jle 0x400a209	      3290	screen.c	FUNCTION_28	IF_7
0x400a172	    0x488b80580300	           mov rax, qword [rax + 0x358] 	      3291	screen.c	FUNCTION_28	IF_7
0x400a179	        0x48833800	                      cmp qword [rax], 0	      3291	screen.c	FUNCTION_28	IF_7
0x400a17d	     0xf8486000000	                            je 0x400a209	      3291	screen.c	FUNCTION_28	IF_7
0x400a183	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3301	screen.c	FUNCTION_28	IF_7	IF_8
0x400a187	    0xc68424c60200	               mov byte [rsp + 0x2c6], 0	      3300	screen.c	FUNCTION_28	IF_7
0x400a18f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3301	screen.c	FUNCTION_28	IF_7	IF_8
0x400a194	          0x483b07	                    cmp rax, qword [rdi]	      3301	screen.c	FUNCTION_28	IF_7	IF_8
0x400a197	     0xf8cc24d0000	                            jl 0x400ef5f	      3301	screen.c	FUNCTION_28	IF_7	IF_8
0x400a19d	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      3310	screen.c	FUNCTION_28	IF_7	IF_9
0x400a1a2	    0x483b1d000000	            cmp rbx, qword [0x0400a1a9] 	      3310	screen.c	FUNCTION_28	IF_7	IF_9
0x400a1a9	      0xb800000000	                              mov eax, 0	      3310	screen.c	FUNCTION_28	IF_7	IF_9
0x400a1ae	     0xf4405000000	           cmove eax, dword [0x0400a1b5]	      3310	screen.c	FUNCTION_28	IF_7	IF_9
0x400a1b5	    0x483b1d000000	            cmp rbx, qword [0x0400a1bc] 	      3316	screen.c	FUNCTION_28	IF_7	IF_10
0x400a1bc	    0x48c705000000	               mov qword [0x0400a1c7], 0	      3311	screen.c	FUNCTION_28	IF_7
0x400a1c7	    0x898424740100	            mov dword [rsp + 0x174], eax	      3310	screen.c	FUNCTION_28	IF_7	IF_9
0x400a1ce	            0x740a	                            je 0x400a1da	      3316	screen.c	FUNCTION_28	IF_7	IF_10
0x400a1d0	    0xc70500000000	     mov dword [0x0400a1da], 0xffffffff 	      3317	screen.c	FUNCTION_28	IF_7	IF_10
0x400a1da	    0x48837c246001	               cmp qword [rsp + 0x60], 1	      3318	screen.c	FUNCTION_28	IF_7	IF_11
0x400a1e0	     0xf84db4d0000	                            je 0x400efc1	      3318	screen.c	FUNCTION_28	IF_7	IF_11
0x400a1e6	    0x48c705000000	               mov qword [0x0400a1f1], 0	      3320	screen.c	FUNCTION_28	IF_7
0x400a1f1	    0xc78424100100	              mov dword [rsp + 0x110], 1	      3295	screen.c	FUNCTION_28	IF_7
0x400a1fc	    0xc784241c0100	              mov dword [rsp + 0x11c], 1	      3294	screen.c	FUNCTION_28	IF_7
0x400a207	            0xeb16	                           jmp 0x400a21f	      3294	screen.c	FUNCTION_28	IF_7
0x400a209	    0xc78424740100	              mov dword [rsp + 0x174], 0	      3118	screen.c	FUNCTION_28
0x400a214	    0xc784241c0100	              mov dword [rsp + 0x11c], 0	      3105	screen.c	FUNCTION_28
0x400a21f	    0x8b3500000000	            mov esi, dword [0x0400a225] 	      3329	screen.c	FUNCTION_28	IF_12
0x400a225	    0xc784249c0100	    mov dword [rsp + 0x19c], 0xfffffff6 	      3327	screen.c	FUNCTION_28
0x400a230	    0xc78424a00100	    mov dword [rsp + 0x1a0], 0x7fffffff 	      3328	screen.c	FUNCTION_28
0x400a23b	            0x85f6	                           test esi, esi	      3329	screen.c	FUNCTION_28	IF_12
0x400a23d	            0x7415	                            je 0x400a254	      3329	screen.c	FUNCTION_28	IF_12
0x400a23f	    0x488b05000000	            mov rax, qword [0x0400a246] 	      3329	screen.c	FUNCTION_28	IF_12
0x400a246	        0x488b5808	                mov rbx, qword [rax + 8]	      3329	screen.c	FUNCTION_28	IF_12
0x400a24a	        0x49395f08	                cmp qword [r15 + 8], rbx	      3329	screen.c	FUNCTION_28	IF_12
0x400a24e	     0xf84b34b0000	                            je 0x400ee07	      3329	screen.c	FUNCTION_28	IF_12
0x400a254	    0x8b2d00000000	            mov ebp, dword [0x0400a25a] 	      3419	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400a25a	            0x85ed	                           test ebp, ebp	      3419	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400a25c	     0xf851c110000	                           jne 0x400b37e	      3419	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400a262	    0xc78424280100	              mov dword [rsp + 0x128], 0	      3092	screen.c	FUNCTION_28
0x400a26d	    0xc78424980000	               mov dword [rsp + 0x98], 0	      3090	screen.c	FUNCTION_28
0x400a278	    0xc78424180100	              mov dword [rsp + 0x118], 0	      3084	screen.c	FUNCTION_28
0x400a283	    0xc784242c0100	              mov dword [rsp + 0x12c], 0	      3082	screen.c	FUNCTION_28
0x400a28e	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3445	screen.c	FUNCTION_28	CALL_22
0x400a293	          0x4c89ff	                            mov rdi, r15	      3445	screen.c	FUNCTION_28	CALL_22
0x400a296	      0xe800000000	                          call 0x400a29b	      3445	screen.c	FUNCTION_28	CALL_22
0x400a29b	            0x85c0	                           test eax, eax	      3446	screen.c	FUNCTION_28	IF_31
0x400a29d	    0x898424000100	            mov dword [rsp + 0x100], eax	      3445	screen.c	FUNCTION_28	CALL_22
0x400a2a4	    0xc78424bc0000	               mov dword [rsp + 0xbc], 0	      3131	screen.c	FUNCTION_28
0x400a2af	     0xf88cb430000	                            js 0x400e680	      3446	screen.c	FUNCTION_28	IF_31
0x400a2b5	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3462	screen.c	FUNCTION_28	IF_35
0x400a2ba	        0x493b4778	            cmp rax, qword [r15 + 0x78] 	      3462	screen.c	FUNCTION_28	IF_35
0x400a2be	     0xf8474430000	                            je 0x400e638	      3462	screen.c	FUNCTION_28	IF_35
0x400a2c4	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3470	screen.c	FUNCTION_28	CALL_24
0x400a2c8	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3470	screen.c	FUNCTION_28	CALL_24
0x400a2cd	      0xba01000000	                              mov edx, 1	      3470	screen.c	FUNCTION_28	CALL_24
0x400a2d2	      0xe800000000	                          call 0x400a2d7	      3470	screen.c	FUNCTION_28	CALL_24
0x400a2d7	            0x85c0	                           test eax, eax	      3471	screen.c	FUNCTION_28	IF_36
0x400a2d9	     0xf8516430000	                           jne 0x400e5f5	      3471	screen.c	FUNCTION_28	IF_36
0x400a2df	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400a2e3	      0xe800000000	                          call 0x400a2e8	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400a2e8	            0x85c0	                           test eax, eax	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400a2ea	     0xf85a3450000	                           jne 0x400e893	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400a2f0	    0xc78424c00000	               mov dword [rsp + 0xc0], 0	      3460	screen.c	FUNCTION_28	IF_31
0x400a2fb	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3483	screen.c	FUNCTION_28	CALL_29
0x400a2ff	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3483	screen.c	FUNCTION_28	CALL_29
0x400a304	            0x31d2	                            xor edx, edx	      3483	screen.c	FUNCTION_28	CALL_29
0x400a306	      0xe800000000	                          call 0x400a30b	      3483	screen.c	FUNCTION_28	CALL_29
0x400a30b	    0x448b9c241c01	          mov r11d, dword [rsp + 0x11c] 	      3487	screen.c	FUNCTION_28	IF_39
0x400a313	          0x4889c5	                            mov rbp, rax	      3483	screen.c	FUNCTION_28	CALL_29
0x400a316	          0x4585db	                         test r11d, r11d	      3487	screen.c	FUNCTION_28	IF_39
0x400a319	     0xf848c000000	                            je 0x400a3ab	      3487	screen.c	FUNCTION_28	IF_39
0x400a31f	    0x448b15000000	           mov r10d, dword [0x0400a326] 	      3490	screen.c	FUNCTION_28	IF_39	IF_40
0x400a326	          0x4585d2	                         test r10d, r10d	      3490	screen.c	FUNCTION_28	IF_39	IF_40
0x400a329	     0xf841c110000	                            je 0x400b44b	      3490	screen.c	FUNCTION_28	IF_39	IF_40
0x400a32f	    0x80bc24c60200	               cmp byte [rsp + 0x2c6], 0	      3496	screen.c	FUNCTION_28	IF_39	IF_41
0x400a337	     0xf84f3100000	                            je 0x400b430	      3496	screen.c	FUNCTION_28	IF_39	IF_41
0x400a33d	          0x4889ef	                            mov rdi, rbp	      3504	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x400a340	      0xe800000000	                          call 0x400a345	      3504	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x400a345	    0x483d95000000	                           cmp rax, 0x95	      3505	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a34b	          0x4889c3	                            mov rbx, rax	      3504	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x400a34e	     0xf8fcf490000	                            jg 0x400ed23	      3505	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a354	    0x488dbc243002	                  lea rdi, [rsp + 0x230]	        59	string3.h	FUNCTION_105	CALL_3
0x400a35c	    0x4c8da424c602	                  lea r12, [rsp + 0x2c6]	      3511	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x400a364	      0xb92c010000	                          mov ecx, 0x12c	        59	string3.h	FUNCTION_105	CALL_3
0x400a369	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_105	CALL_3
0x400a36c	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_105	CALL_3
0x400a36f	      0xe800000000	                          call 0x400a374	        59	string3.h	FUNCTION_105	CALL_3
0x400a374	          0x4c89e7	                            mov rdi, r12	      3511	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x400a377	      0xe800000000	                          call 0x400a37c	      3511	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x400a37c	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_105	CALL_3
0x400a380	    0x488d84243002	                  lea rax, [rsp + 0x230]	        59	string3.h	FUNCTION_105	CALL_3
0x400a388	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_105	CALL_3
0x400a38b	        0x488d3c18	                    lea rdi, [rax + rbx]	        59	string3.h	FUNCTION_105	CALL_3
0x400a38f	      0xe800000000	                          call 0x400a394	        59	string3.h	FUNCTION_105	CALL_3
0x400a394	          0x8d4301	                      lea eax, [rbx + 1]	      3512	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a397	    0xc784248c0100	              mov dword [rsp + 0x18c], 0	      3509	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a3a2	    0x898424800100	            mov dword [rsp + 0x180], eax	      3512	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a3a9	            0xeb16	                           jmp 0x400a3c1	      3512	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x400a3ab	    0xc78424800100	              mov dword [rsp + 0x180], 0	      3109	screen.c	FUNCTION_28
0x400a3b6	    0xc784248c0100	              mov dword [rsp + 0x18c], 0	      3108	screen.c	FUNCTION_28
0x400a3c1	    0x458b8f340200	           mov r9d, dword [r15 + 0x234] 	      3525	screen.c	FUNCTION_28	IF_43
0x400a3c8	    0xc78424340100	    mov dword [rsp + 0x134], 0x7fffffff 	      3135	screen.c	FUNCTION_28
0x400a3d3	          0x4585c9	                           test r9d, r9d	      3525	screen.c	FUNCTION_28	IF_43
0x400a3d6	            0x747d	                            je 0x400a455	      3525	screen.c	FUNCTION_28	IF_43
0x400a3d8	    0x448b05000000	            mov r8d, dword [0x0400a3df] 	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3df	          0x4585c0	                           test r8d, r8d	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3e2	            0x755c	                           jne 0x400a440	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3e4	    0x8b3500000000	            mov esi, dword [0x0400a3ea] 	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3ea	            0x85f6	                           test esi, esi	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3ec	            0x7467	                            je 0x400a455	      3527	screen.c	FUNCTION_28	IF_43	IF_44
0x400a3ee	          0x4889ef	                            mov rdi, rbp	      3532	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x400a3f1	      0xe800000000	                          call 0x400a3f6	      3532	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x400a3f6	            0x85c0	                           test eax, eax	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a3f8	    0x898424340100	            mov dword [rsp + 0x134], eax	      3532	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x400a3ff	            0x7e49	                           jle 0x400a44a	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a401	            0x4898	                                    cdqe	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a403	       0xfb65405ff	         movzx edx, byte [rbp + rax - 1]	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a408	          0x80fa20	                            cmp dl, 0x20	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a40b	            0x7405	                            je 0x400a412	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a40d	          0x80fa09	                               cmp dl, 9	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a410	            0x7538	                           jne 0x400a44a	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a412	    0x8b9424340100	           mov edx, dword [rsp + 0x134] 	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a419	          0x4801e8	                            add rax, rbp	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a41c	         0xf1f4000	                         nop dword [rax]	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a420	          0x83ea01	                              sub edx, 1	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a423	            0x7412	                            je 0x400a437	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a425	         0xfb648fe	               movzx ecx, byte [rax - 2]	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a429	        0x4883e801	                              sub rax, 1	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a42d	          0x80f920	                            cmp cl, 0x20	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a430	            0x74ee	                            je 0x400a420	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a432	          0x80f909	                               cmp cl, 9	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a435	            0x74e9	                            je 0x400a420	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a437	    0x899424340100	            mov dword [rsp + 0x134], edx	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a43e	            0xeb0a	                           jmp 0x400a44a	      3533	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x400a440	    0x8b3d00000000	            mov edi, dword [0x0400a446] 	      3530	screen.c	FUNCTION_28	IF_43	IF_45
0x400a446	            0x85ff	                           test edi, edi	      3530	screen.c	FUNCTION_28	IF_43	IF_45
0x400a448	            0x75a4	                           jne 0x400a3ee	      3530	screen.c	FUNCTION_28	IF_43	IF_45
0x400a44a	    0xc78424100100	              mov dword [rsp + 0x110], 1	      3530	screen.c	FUNCTION_28	IF_43	IF_45
0x400a455	    0x418b8f940200	           mov ecx, dword [r15 + 0x294] 	      3543	screen.c	FUNCTION_28	IF_46
0x400a45c	            0x85c9	                           test ecx, ecx	      3543	screen.c	FUNCTION_28	IF_46
0x400a45e	     0xf84c00e0000	                            je 0x400b324	      3543	screen.c	FUNCTION_28	IF_46
0x400a464	    0x49639f980000	         movsxd rbx, dword [r15 + 0x98] 	      3544	screen.c	FUNCTION_28	IF_46
0x400a46b	          0x4885db	                           test rbx, rbx	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400a46e	     0xf8ec00e0000	                           jle 0x400b334	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400a474	            0x31c0	                            xor eax, eax	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400a476	          0x4989ec	                            mov r12, rbp	      3483	screen.c	FUNCTION_28	CALL_29
0x400a479	          0x4889ea	                            mov rdx, rbp	      3483	screen.c	FUNCTION_28	CALL_29
0x400a47c	          0x4989c5	                            mov r13, rax	      3483	screen.c	FUNCTION_28	CALL_29
0x400a47f	            0xeb15	                           jmp 0x400a496	      3483	screen.c	FUNCTION_28	CALL_29
0x400a481	     0xf1f80000000	                         nop dword [rax]	      3483	screen.c	FUNCTION_28	CALL_29
0x400a488	          0x4c01e0	                            add rax, r12	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a48b	          0x4c39eb	                            cmp rbx, r13	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a48e	          0x4c89e2	                            mov rdx, r12	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a491	            0x7e53	                           jle 0x400a4e6	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a493	          0x4989c4	                            mov r12, rax	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a496	      0x41803c2400	                       cmp byte [r12], 0	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a49b	     0xf84103f0000	                            je 0x400e3b1	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4a1	          0x4531c0	                            xor r8d, r8d	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4a4	          0x4489e9	                           mov ecx, r13d	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4a7	          0x4c89e2	                            mov rdx, r12	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4aa	          0x4889ee	                            mov rsi, rbp	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4ad	          0x4c89ff	                            mov rdi, r15	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4b0	      0xe800000000	                          call 0x400a4b5	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4b5	    0x8b1500000000	            mov edx, dword [0x0400a4bb] 	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4bb	    0x898424980100	            mov dword [rsp + 0x198], eax	      3554	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x400a4c2	            0x4898	                                    cdqe	      3555	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4c4	          0x4901c5	                            add r13, rax	      3555	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4c7	      0xb801000000	                              mov eax, 1	      3555	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4cc	            0x85d2	                           test edx, edx	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4ce	            0x74b8	                            je 0x400a488	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4d0	          0x4c89e7	                            mov rdi, r12	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4d3	    0xff1500000000	                 call qword [0x0400a4d9]	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4d9	            0x4898	                                    cdqe	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4db	          0x4c89e2	                            mov rdx, r12	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4de	          0x4c01e0	                            add rax, r12	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x400a4e1	          0x4c39eb	                            cmp rbx, r13	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4e4	            0x7fad	                            jg 0x400a493	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4e6	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      3552	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x400a4eb	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3583	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a4f0	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3078	screen.c	FUNCTION_28
0x400a4f8	          0x4839f3	                            cmp rbx, rsi	      3583	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a4fb	            0x7d33	                           jge 0x400a530	      3583	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a4fd	    0x486384249801	        movsxd rax, dword [rsp + 0x198] 	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a505	          0x4c89e7	                            mov rdi, r12	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a508	          0x4829c6	                            sub rsi, rax	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a50b	      0x4889742428	             mov qword [rsp + 0x28], rsi	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x400a510	    0xff1500000000	                 call qword [0x0400a516]	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a516	    0x3b8424980100	           cmp eax, dword [rsp + 0x198] 	      3593	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a51d	     0xf8c7d480000	                            jl 0x400eda0	      3593	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a523	            0x89d8	                            mov eax, ebx	      3598	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a525	        0x2b442428	             sub eax, dword [rsp + 0x28]	      3598	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a529	        0x89442478	             mov dword [rsp + 0x78], eax	      3598	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a52d	          0x4c89e0	                            mov rax, r12	      3598	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400a530	    0x48639424a001	        movsxd rdx, dword [rsp + 0x1a0] 	      3605	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x400a538	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3605	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x400a53d	     0xf8c443e0000	                            jl 0x400e387	      3605	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x400a543	    0xc784249c0100	              mov dword [rsp + 0x19c], 0	      3606	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x400a54e	    0x458ba7940200	          mov r12d, dword [r15 + 0x294] 	      3137	screen.c	FUNCTION_28
0x400a555	    0x448bac241c01	          mov r13d, dword [rsp + 0x11c] 	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a55d	            0x31db	                            xor ebx, ebx	      3137	screen.c	FUNCTION_28
0x400a55f	          0x4585e4	                         test r12d, r12d	      3137	screen.c	FUNCTION_28
0x400a562	           0xf95c3	                                setne bl	      3137	screen.c	FUNCTION_28
0x400a565	          0x4829e8	                            sub rax, rbp	      3621	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a568	          0x4585ed	                         test r13d, r13d	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a56b	    0x899c24a00000	             mov dword [rsp + 0xa0], ebx	      3137	screen.c	FUNCTION_28
0x400a572	     0xf8532420000	                           jne 0x400e7aa	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a578	          0x4989c5	                            mov r13, rax	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a57b	      0x4889442408	                mov qword [rsp + 8], rax	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a580	          0x890424	                    mov dword [rsp], eax	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400a583	    0xc78424580100	              mov dword [rsp + 0x158], 0	      3112	screen.c	FUNCTION_28
0x400a58e	    0xc78424240100	              mov dword [rsp + 0x124], 0	      3111	screen.c	FUNCTION_28
0x400a599	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3664	screen.c	FUNCTION_28	IF_58
0x400a5a0	    0xc78424040100	    mov dword [rsp + 0x104], 0xfffffffe 	      3081	screen.c	FUNCTION_28
0x400a5ab	            0x85c0	                           test eax, eax	      3664	screen.c	FUNCTION_28	IF_58
0x400a5ad	            0x784f	                            js 0x400a5fe	      3664	screen.c	FUNCTION_28	IF_58
0x400a5af	    0x448b94242c01	          mov r10d, dword [rsp + 0x12c] 	      3666	screen.c	FUNCTION_28	IF_58	IF_59
0x400a5b7	          0x4585d2	                         test r10d, r10d	      3666	screen.c	FUNCTION_28	IF_58	IF_59
0x400a5ba	            0x742e	                            je 0x400a5ea	      3666	screen.c	FUNCTION_28	IF_58	IF_59
0x400a5bc	    0x418bbfd80000	            mov edi, dword [r15 + 0xd8] 	      3668	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400a5c3	            0x39f8	                            cmp eax, edi	      3668	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400a5c5	    0x89bc24040100	            mov dword [rsp + 0x104], edi	      3668	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400a5cc	     0xf84f14a0000	                            je 0x400f0c3	      3668	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400a5d2	    0x8b9c24040100	           mov ebx, dword [rsp + 0x104] 	      3675	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x400a5d9	      0xbafeffffff	                     mov edx, 0xfffffffe	      3081	screen.c	FUNCTION_28
0x400a5de	            0x39d8	                            cmp eax, ebx	      3675	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x400a5e0	           0xf4cd3	                          cmovl edx, ebx	      3081	screen.c	FUNCTION_28
0x400a5e3	    0x899424040100	            mov dword [rsp + 0x104], edx	      3081	screen.c	FUNCTION_28
0x400a5ea	    0x398424a00100	           cmp dword [rsp + 0x1a0], eax 	      3679	screen.c	FUNCTION_28	IF_58	IF_62
0x400a5f1	            0x7f0b	                            jg 0x400a5fe	      3679	screen.c	FUNCTION_28	IF_58	IF_62
0x400a5f3	    0xc784249c0100	    mov dword [rsp + 0x19c], 0xffffffff 	      3680	screen.c	FUNCTION_28	IF_58	IF_62
0x400a5fe	    0x498baf501500	          mov rbp, qword [r15 + 0x1550] 	      3688	screen.c	FUNCTION_28
0x400a605	    0xc70500000000	     mov dword [0x0400a60f], 0x7fffffff 	      3699	screen.c	FUNCTION_28	WHILE_3
0x400a60f	    0xc70500000000	     mov dword [0x0400a619], 0x7fffffff 	      3700	screen.c	FUNCTION_28	WHILE_3
0x400a619	    0xc70500000000	               mov dword [0x0400a623], 0	      3701	screen.c	FUNCTION_28	WHILE_3
0x400a623	    0xc70500000000	               mov dword [0x0400a62d], 0	      3702	screen.c	FUNCTION_28	WHILE_3
0x400a62d	          0x4885ed	                           test rbp, rbp	      3704	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a630	     0xf84f6450000	                            je 0x400ec2c	      3704	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a636	    0xc785f0010000	              mov dword [rbp + 0x1f0], 0	      3705	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a640	      0xbb01000000	                              mov ebx, 1	      3705	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a645	    0x41bc00000000	                             mov r12d, 0	      3705	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a64b	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3705	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a653	          0x4531c0	                            xor r8d, r8d	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a656	      0x4c89742418	             mov qword [rsp + 0x18], r14	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a65b	          0x4989ee	                            mov r14, rbp	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a65e	            0x89dd	                            mov ebp, ebx	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a660	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a665	            0xeb6b	                           jmp 0x400a6d2	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a667	    0x660f1f840000	                    nop word [rax + rax]	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a670	          0x4d8b36	                    mov r14, qword [r14]	      3743	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a673	          0x4d85f6	                           test r14, r14	      3743	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a676	        0x400f95c5	                               setne bpl	      3743	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a67a	          0x4d85f6	                           test r14, r14	      3690	screen.c	FUNCTION_28	WHILE_3
0x400a67d	     0xf8413010000	                            je 0x400a796	      3690	screen.c	FUNCTION_28	WHILE_3
0x400a683	    0x4d8da6080200	                  lea r12, [r14 + 0x208]	      3698	screen.c	FUNCTION_28	WHILE_3	ELSE_21
0x400a68a	    0x41b800000000	                              mov r8d, 0	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a690	    0x41c786780300	    mov dword [r14 + 0x378], 0x7fffffff 	      3699	screen.c	FUNCTION_28	WHILE_3
0x400a69b	    0x41c7867c0300	    mov dword [r14 + 0x37c], 0x7fffffff 	      3700	screen.c	FUNCTION_28	WHILE_3
0x400a6a6	    0x41c7866c0300	              mov dword [r14 + 0x36c], 0	      3701	screen.c	FUNCTION_28	WHILE_3
0x400a6b1	    0x4981fc000000	                              cmp r12, 0	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6b8	    0x41c786800300	              mov dword [r14 + 0x380], 0	      3702	screen.c	FUNCTION_28	WHILE_3
0x400a6c3	    0x41c786f00100	              mov dword [r14 + 0x1f0], 0	      3705	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400a6ce	        0x4d0f45c6	                          cmovne r8, r14	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6d2	          0x8b0c24	                    mov ecx, dword [rsp]	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6d5	          0x4889da	                            mov rdx, rbx	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6d8	          0x4c89e6	                            mov rsi, r12	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6db	          0x4c89ff	                            mov rdi, r15	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6de	      0xe8ed63ffff	                 call sym.next_search_hl	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400a6e3	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3711	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x400a6e7	            0x31d2	                            xor edx, edx	      3711	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x400a6e9	          0x4889de	                            mov rsi, rbx	      3711	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x400a6ec	      0xe800000000	                          call 0x400a6f1	      3711	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x400a6f1	          0x4989c2	                            mov r10, rax	      3711	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x400a6f4	        0x4a8d1428	                    lea rdx, [rax + r13]	      3712	screen.c	FUNCTION_28	WHILE_3
0x400a6f8	    0x498b84245801	           mov rax, qword [r12 + 0x158] 	      3714	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a700	          0x4839c3	                            cmp rbx, rax	      3714	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a703	            0x7c7b	                            jl 0x400a780	      3714	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a705	          0x4885c0	                           test rax, rax	      3714	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a708	            0x7476	                            je 0x400a780	      3714	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a70a	          0x4839c3	                            cmp rbx, rax	      3716	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x400a70d	     0xf8467330000	                            je 0x400da7a	      3716	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x400a713	    0x41c784247001	              mov dword [r12 + 0x170], 0	      3719	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_22
0x400a71f	            0x31c9	                            xor ecx, ecx	      3719	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_22
0x400a721	    0x49038424a800	             add rax, qword [r12 + 0xa8]	      3720	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400a729	      0x492b442408	                sub rax, qword [r12 + 8]	      3720	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400a72e	          0x4839c3	                            cmp rbx, rax	      3720	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400a731	     0xf842e330000	                            je 0x400da65	      3720	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400a737	    0x41c784247401	    mov dword [r12 + 0x174], 0x7fffffff 	      3724	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23
0x400a743	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      3724	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23
0x400a748	            0x39c1	                            cmp ecx, eax	      3726	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x400a74a	          0x4863f1	                         movsxd rsi, ecx	      3726	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x400a74d	     0xf84e9320000	                            je 0x400da3c	      3726	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x400a753	      0x483b742408	                cmp rsi, qword [rsp + 8]	      3735	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a758	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3740	screen.c	FUNCTION_28	WHILE_3	IF_65
0x400a763	            0x7d1b	                           jge 0x400a780	      3735	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a765	    0x418b84246001	           mov eax, dword [r12 + 0x160] 	      3737	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a76d	        0x89442420	             mov dword [rsp + 0x20], eax	      3737	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a771	    0x418984246401	            mov dword [r12 + 0x164], eax	      3737	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a779	     0xf1f80000000	                         nop dword [rax]	      3737	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x400a780	    0x4981fc000000	                              cmp r12, 0	      3742	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a787	     0xf84e6feffff	                            je 0x400a673	      3742	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a78d	          0x4084ed	                           test bpl, bpl	      3742	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a790	     0xf85dafeffff	                           jne 0x400a670	      3742	screen.c	FUNCTION_28	WHILE_3	IF_71
0x400a796	    0x458b87700200	           mov r8d, dword [r15 + 0x270] 	      3751	screen.c	FUNCTION_28	IF_72
0x400a79d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3751	screen.c	FUNCTION_28	IF_72
0x400a7a2	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      3751	screen.c	FUNCTION_28	IF_72
0x400a7a7	          0x4585c0	                           test r8d, r8d	      3751	screen.c	FUNCTION_28	IF_72
0x400a7aa	            0x740f	                            je 0x400a7bb	      3751	screen.c	FUNCTION_28	IF_72
0x400a7ac	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3751	screen.c	FUNCTION_28	IF_72
0x400a7b1	        0x493b4738	            cmp rax, qword [r15 + 0x38] 	      3751	screen.c	FUNCTION_28	IF_72
0x400a7b5	     0xf84e8430000	                            je 0x400eba3	      3751	screen.c	FUNCTION_28	IF_72
0x400a7bb	    0x488b05000000	            mov rax, qword [0x0400a7c2] 	      3759	screen.c	FUNCTION_28
0x400a7c2	    0x418bb7540200	           mov esi, dword [r15 + 0x254] 	      3762	screen.c	FUNCTION_28	IF_73
0x400a7c9	    0x482b05000000	             sub rax, qword [0x0400a7d0]	      3759	screen.c	FUNCTION_28
0x400a7d0	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3760	screen.c	FUNCTION_28
0x400a7d8	            0x85f6	                           test esi, esi	      3762	screen.c	FUNCTION_28	IF_73
0x400a7da	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3759	screen.c	FUNCTION_28
0x400a7de	            0x7414	                            je 0x400a7f4	      3762	screen.c	FUNCTION_28	IF_73
0x400a7e0	    0x418bb7ac0000	            mov esi, dword [r15 + 0xac] 	      3767	screen.c	FUNCTION_28	IF_73
0x400a7e7	          0x8d5eff	                      lea ebx, [rsi - 1]	      3767	screen.c	FUNCTION_28	IF_73
0x400a7ea	             0x1d8	                            add eax, ebx	      3768	screen.c	FUNCTION_28	IF_73
0x400a7ec	        0x895c243c	             mov dword [rsp + 0x3c], ebx	      3767	screen.c	FUNCTION_28	IF_73
0x400a7f0	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3768	screen.c	FUNCTION_28	IF_73
0x400a7f4	    0x8b8c241c0100	           mov ecx, dword [rsp + 0x11c] 	      3768	screen.c	FUNCTION_28	IF_73
0x400a7fb	    0x488d9424b001	                  lea rdx, [rsp + 0x1b0]	      3768	screen.c	FUNCTION_28	IF_73
0x400a803	      0xb800000000	                              mov eax, 0	      3768	screen.c	FUNCTION_28	IF_73
0x400a808	    0xc78424700100	              mov dword [rsp + 0x170], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a813	    0xc78424200100	              mov dword [rsp + 0x120], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a81e	    0xc78424880000	               mov dword [rsp + 0x88], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a829	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a831	            0x85c9	                           test ecx, ecx	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a833	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a83e	    0xc78424d40000	               mov dword [rsp + 0xd4], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a849	        0x480f45c2	                         cmovne rax, rdx	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a84d	    0xc78424080100	              mov dword [rsp + 0x108], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a858	    0xc78424140100	              mov dword [rsp + 0x114], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a863	    0x488984246001	            mov qword [rsp + 0x160], rax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a86b	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a872	            0x31db	                            xor ebx, ebx	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a874	    0xc784247c0100	    mov dword [rsp + 0x17c], 0xffffffff 	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a87f	    0xc78424780100	              mov dword [rsp + 0x178], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a88a	    0xc70424000000	                      mov dword [rsp], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a891	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a89c	        0x89442450	             mov dword [rsp + 0x50], eax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8a0	    0x8b8424d00000	            mov eax, dword [rsp + 0xd0] 	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8a7	    0xc78424840100	              mov dword [rsp + 0x184], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8b2	    0xc78424680100	              mov dword [rsp + 0x168], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8bd	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8c8	    0xc74424700000	               mov dword [rsp + 0x70], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8d0	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8d7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8de	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8e9	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8f4	    0xc784246c0100	              mov dword [rsp + 0x16c], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a8ff	    0xc784240c0100	              mov dword [rsp + 0x10c], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a90a	    0xc74424680000	               mov dword [rsp + 0x68], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a912	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a91a	    0xc78424e00000	               mov dword [rsp + 0xe0], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a925	    0xc74424580000	               mov dword [rsp + 0x58], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a92d	    0xc78424ec0000	               mov dword [rsp + 0xec], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a938	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a940	    0xc78424e80000	               mov dword [rsp + 0xe8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a94b	      0x4889442448	             mov qword [rsp + 0x48], rax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a950	    0x488984245001	            mov qword [rsp + 0x150], rax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a958	    0x8b8424040100	           mov eax, dword [rsp + 0x104] 	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400a95f	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400a964	    0xc78424e40000	               mov dword [rsp + 0xe4], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a96f	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a97b	    0xc78424cc0000	               mov dword [rsp + 0xcc], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a986	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a991	            0xf7d0	                                 not eax	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400a993	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a99b	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a9a7	          0xc1e81f	                           shr eax, 0x1f	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400a9aa	    0xc74424080000	                  mov dword [rsp + 8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a9b2	      0x4c89542418	             mov qword [rsp + 0x18], r10	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400a9b7	    0x898424880100	            mov dword [rsp + 0x188], eax	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400a9be	    0x8b8424180100	           mov eax, dword [rsp + 0x118] 	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9c5	          0x83f001	                              xor eax, 1	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9c8	          0x83e001	                              and eax, 1	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9cb	    0x888424c70000	               mov byte [rsp + 0xc7], al	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9d2	          0x4c89f8	                            mov rax, r15	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9d5	          0x4d89f7	                            mov r15, r14	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9d8	          0x4989c6	                            mov r14, rax	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9db	       0xf1f440000	                   nop dword [rax + rax]	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400a9e0	        0x833c2407	                      cmp dword [rsp], 7	      3781	screen.c	FUNCTION_28	FOR_1	IF_74
0x400a9e4	     0xf8426010000	                            je 0x400ab10	      3781	screen.c	FUNCTION_28	FOR_1	IF_74
0x400a9ea	        0x8b442408	                mov eax, dword [rsp + 8]	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400a9ee	           0xb0424	                     or eax, dword [rsp]	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400a9f1	     0xf8566070000	                           jne 0x400b15d	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400a9f7	    0x8b0500000000	            mov eax, dword [0x0400a9fd] 	      3787	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400a9fd	            0x85c0	                           test eax, eax	      3787	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400a9ff	     0xf84cb1b0000	                            je 0x400c5d0	      3787	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400aa05	    0x4c3b35000000	            cmp r14, qword [0x0400aa0c] 	      3787	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400aa0c	     0xf8476220000	                            je 0x400cc88	      3787	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400aa12	    0x418b96c80100	           mov edx, dword [r14 + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x400aa19	    0x488b0d000000	            mov rcx, qword [0x0400aa20] 	      2628	screen.c	FUNCTION_24
0x400aa20	            0x89c8	                            mov eax, ecx	      2629	screen.c	FUNCTION_24
0x400aa22	    0x418bbeac0000	            mov edi, dword [r14 + 0xac] 	      2632	screen.c	FUNCTION_24	IF_1
0x400aa29	            0x29c7	                            sub edi, eax	      2632	screen.c	FUNCTION_24	IF_1
0x400aa2b	            0x39d7	                            cmp edi, edx	      2632	screen.c	FUNCTION_24	IF_1
0x400aa2d	           0xf4ed7	                         cmovle edx, edi	      2632	screen.c	FUNCTION_24	IF_1
0x400aa30	            0x85d2	                           test edx, edx	      3803	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x400aa32	            0x89d5	                            mov ebp, edx	      3803	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x400aa34	        0x89542408	                mov dword [rsp + 8], edx	      3803	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x400aa38	     0xf8e221b0000	                           jle 0x400c560	      3803	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x400aa3e	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_49
0x400aa46	      0xe800000000	                          call 0x400aa4b	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_49
0x400aa4b	      0xbf0d000000	                            mov edi, 0xd	      3808	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x400aa50	      0xe800000000	                          call 0x400aa55	      3808	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x400aa55	          0x4885c0	                           test rax, rax	      3810	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aa58	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      3808	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x400aa60	     0xf84fa1a0000	                            je 0x400c560	      3810	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aa66	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa6b	            0x31d2	                            xor edx, edx	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa6d	          0x4889c7	                            mov rdi, rax	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa70	          0x4c89f6	                            mov rsi, r14	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa73	          0x4889c3	                            mov rbx, rax	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa76	          0x4531e4	                          xor r12d, r12d	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400aa79	      0xe8a258ffff	                call sym.fill_foldcolumn	      3812	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x400aa7e	          0x4863c5	                         movsxd rax, ebp	      3814	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aa81	        0xc6040300	                 mov byte [rbx + rax], 0	      3814	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aa85	    0x418b86480500	           mov eax, dword [r14 + 0x548] 	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400aa8c	    0x48899c24b801	            mov qword [rsp + 0x1b8], rbx	      3815	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aa94	    0x8b1d00000000	            mov ebx, dword [0x0400aa9a] 	      3817	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_52
0x400aa9a	            0x85c0	                           test eax, eax	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400aa9c	     0xf8511170000	                           jne 0x400c1b3	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400aaa2	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3816	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400aaaa	    0xc70424020000	                      mov dword [rsp], 2	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400aab1	        0x833c2405	                      cmp dword [rsp], 5	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400aab5	        0x400f94c5	                                sete bpl	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400aab9	          0x4084ed	                           test bpl, bpl	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400aabc	            0x7409	                            je 0x400aac7	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400aabe	          0x4584e4	                         test r12b, r12b	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400aac1	     0xf8559070000	                           jne 0x400b220	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400aac7	        0x833c2406	                      cmp dword [rsp], 6	      4035	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400aacb	            0x7543	                           jne 0x400ab10	      4035	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400aacd	          0x4584e4	                         test r12b, r12b	      4035	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400aad0	            0x743e	                            je 0x400ab10	      4035	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400aad2	    0x8b8424cc0000	            mov eax, dword [rsp + 0xcc] 	      4038	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aad9	            0x85c0	                           test eax, eax	      4038	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aadb	     0xf843f1b0000	                            je 0x400c620	      4038	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aae1	    0x488b9c24d800	            mov rbx, qword [rsp + 0xd8] 	      4043	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aae9	    0x8bb424e40000	            mov esi, dword [rsp + 0xe4] 	      4042	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aaf0	        0x89442408	                mov dword [rsp + 8], eax	      4042	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400aaf4	    0xc70424070000	                      mov dword [rsp], 7	      4037	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400aafb	    0x48899c24b801	            mov qword [rsp + 0x1b8], rbx	      4043	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400ab03	    0x8b9c24e80000	            mov ebx, dword [rsp + 0xe8] 	      4044	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400ab0a	        0x8974245c	             mov dword [rsp + 0x5c], esi	      4042	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400ab0e	            0x6690	                                     nop	      4042	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x400ab10	    0x8b3d00000000	            mov edi, dword [0x0400ab16] 	      4052	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ab16	            0x85ff	                           test edi, edi	      4052	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ab18	            0x780d	                            js 0x400ab27	      4052	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ab1a	    0x4c3b35000000	            cmp r14, qword [0x0400ab21] 	      4052	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ab21	     0xf8419230000	                            je 0x400ce40	      4052	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ab27	        0x833c2407	                      cmp dword [rsp], 7	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab2b	       0xf94442420	                  sete byte [rsp + 0x20]	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab30	       0xfb6742420	           movzx esi, byte [rsp + 0x20] 	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab35	            0x89f7	                            mov edi, esi	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab37	    0x4022bc249800	              and dil, byte [rsp + 0x98]	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab3f	    0x4088bc24c600	              mov byte [rsp + 0xc6], dil	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab47	     0xf85fb0c0000	                           jne 0x400b848	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab4d	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab51	            0x89f7	                            mov edi, esi	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab53	          0x4189dc	                           mov r12d, ebx	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400ab56	    0xc78424800000	               mov dword [rsp + 0x80], 0	      3778	screen.c	FUNCTION_28	FOR_1
0x400ab61	          0x83f001	                              xor eax, 1	      3778	screen.c	FUNCTION_28	FOR_1
0x400ab64	            0x21f8	                            and eax, edi	      3778	screen.c	FUNCTION_28	FOR_1
0x400ab66	    0x888424c60000	               mov byte [rsp + 0xc6], al	      3778	screen.c	FUNCTION_28	FOR_1
0x400ab6d	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400ab71	            0x85db	                           test ebx, ebx	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400ab73	     0xf8e77100000	                           jle 0x400bbf0	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400ab79	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      4277	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x400ab7d	            0x85c0	                           test eax, eax	      4277	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x400ab7f	     0xf8483150000	                            je 0x400c108	      4277	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x400ab85	    0x448b1d000000	           mov r11d, dword [0x0400ab8c] 	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400ab8c	    0x898424980100	            mov dword [rsp + 0x198], eax	      4279	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x400ab93	        0x89442470	             mov dword [rsp + 0x70], eax	      4279	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x400ab97	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4289	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	ELSE_45
0x400aba2	          0x4585db	                         test r11d, r11d	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400aba5	     0xf8525230000	                           jne 0x400ced0	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400abab	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400abaf	      0x836c240801	                  sub dword [rsp + 8], 1	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abb4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abb9	            0x85c9	                           test ecx, ecx	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abbb	           0xf9fc3	                                 setg bl	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abbe	    0x229c24c60000	               and bl, byte [rsp + 0xc6]	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abc5	      0x4889442448	             mov qword [rsp + 0x48], rax	      4354	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400abca	    0x448b94248800	           mov r10d, dword [rsp + 0x88] 	      5214	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abd2	          0x4585d2	                         test r10d, r10d	      5214	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abd5	            0x751f	                           jne 0x400abf6	      5214	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abd7	      0x807c242000	                cmp byte [rsp + 0x20], 0	      5214	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abdc	            0x7418	                            je 0x400abf6	      5214	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abde	    0x4c3b35000000	            cmp r14, qword [0x0400abe5] 	      5215	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abe5	     0xf8432260000	                            je 0x400d21d	      5215	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400abeb	    0xc78424880000	               mov dword [rsp + 0x88], 0	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400abf6	            0x84db	                             test bl, bl	      5234	screen.c	FUNCTION_28	FOR_1	IF_250
0x400abf8	    0x440f45a424b4	         cmovne r12d, dword [rsp + 0xb4]	      5234	screen.c	FUNCTION_28	FOR_1	IF_250
0x400ac01	    0x48833d000000	               cmp qword [0x0400ac09], 0	      5240	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac09	            0x7519	                           jne 0x400ac24	      5240	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac0b	    0x48833d000000	               cmp qword [0x0400ac13], 0	      5241	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac13	            0x740f	                            je 0x400ac24	      5241	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac15	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5242	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac1a	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5242	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac1e	     0xf8464210000	                            je 0x400cd88	      5242	screen.c	FUNCTION_28	FOR_1	IF_251
0x400ac24	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      5279	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac2b	            0x85ff	                           test edi, edi	      5279	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac2d	     0xf846d080000	                            je 0x400b4a0	      5279	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac33	    0x418bb6340200	           mov esi, dword [r14 + 0x234] 	      5280	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac3a	            0x85f6	                           test esi, esi	      5280	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac3c	     0xf845e080000	                            je 0x400b4a0	      5280	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac42	    0x418b86940200	           mov eax, dword [r14 + 0x294] 	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac49	            0x85c0	                           test eax, eax	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac4b	     0xf841f210000	                            je 0x400cd70	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac51	    0x418b8e980000	            mov ecx, dword [r14 + 0x98] 	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac58	            0x85c9	                           test ecx, ecx	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac5a	           0xf9fc2	                                 setg dl	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac5d	            0x84d2	                             test dl, dl	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac5f	     0xf843b080000	                            je 0x400b4a0	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac65	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac69	            0x85ed	                           test ebp, ebp	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac6b	        0x400f9ec7	                               setle dil	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac6f	        0x833c2404	                      cmp dword [rsp], 4	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac73	           0xf9fc2	                                 setg dl	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac76	          0x4020d7	                             and dil, dl	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac79	     0xf8421080000	                            je 0x400b4a0	      5285	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac7f	    0x8b9c24980100	           mov ebx, dword [rsp + 0x198] 	      5286	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac86	            0x85db	                           test ebx, ebx	      5286	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac88	     0xf8434080000	                            je 0x400b4c2	      5286	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac8e	    0x448b1d000000	           mov r11d, dword [0x0400ac95] 	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ac95	    0x8b0500000000	            mov eax, dword [0x0400ac9b] 	      5288	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ac9b	          0x4585db	                         test r11d, r11d	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ac9e	    0x898424980100	            mov dword [rsp + 0x198], eax	      5288	screen.c	FUNCTION_28	FOR_1	IF_257
0x400aca5	     0xf85993d0000	                           jne 0x400ea44	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400acab	        0x89442470	             mov dword [rsp + 0x70], eax	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400acaf	    0x448b15000000	           mov r10d, dword [0x0400acb6] 	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400acb6	          0x4585d2	                         test r10d, r10d	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400acb9	     0xf85463d0000	                           jne 0x400ea05	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400acbf	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400acc3	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400acce	            0x85c0	                           test eax, eax	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400acd0	        0x400f94c7	                                sete dil	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400acd4	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      5310	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0x400acd8	    0xc78424840000	               mov dword [rsp + 0x84], 0	      5289	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ace3	            0x85db	                           test ebx, ebx	      5310	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0x400ace5	            0x751e	                           jne 0x400ad05	      5310	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0x400ace7	    0x4489a424e000	            mov dword [rsp + 0xe0], r12d	      5312	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0x400acef	    0x448b25000000	           mov r12d, dword [0x0400acf6] 	      5313	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260	CALL_181
0x400acf6	    0xc74424580100	               mov dword [rsp + 0x58], 1	      5314	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0x400acfe	    0x899c24840000	             mov dword [rsp + 0x84], ebx	      5289	screen.c	FUNCTION_28	FOR_1	IF_257
0x400ad05	    0x83bc24a40000	               cmp dword [rsp + 0xa4], 1	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400ad0d	     0xf84a8070000	                            je 0x400b4bb	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400ad13	       0xf1f440000	                   nop dword [rax + rax]	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400ad18	          0x4084ff	                           test dil, dil	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400ad1b	     0xf859a070000	                           jne 0x400b4bb	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400ad21	            0x85c0	                           test eax, eax	      5461	screen.c	FUNCTION_28	FOR_1	IF_276
0x400ad23	     0xf843d080000	                            je 0x400b566	      5461	screen.c	FUNCTION_28	FOR_1	IF_276
0x400ad29	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad2d	    0x8b0500000000	            mov eax, dword [0x0400ad33] 	      5563	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad33	            0x85c9	                           test ecx, ecx	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad35	        0x400f9ec5	                               setle bpl	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad39	            0x85c0	                           test eax, eax	      5563	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad3b	            0x7415	                            je 0x400ad52	      5563	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad3d	    0x418b96940200	           mov edx, dword [r14 + 0x294] 	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad44	            0x85d2	                           test edx, edx	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad46	           0xf94c2	                                 sete dl	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad49	          0x4020ea	                             and dl, bpl	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad4c	     0xf855e260000	                           jne 0x400d3b0	      5566	screen.c	FUNCTION_28	FOR_1	IF_291
0x400ad52	        0x8b4c2474	            mov ecx, dword [rsp + 0x74] 	      5594	screen.c	FUNCTION_28	FOR_1	IF_293
0x400ad56	            0x85c9	                           test ecx, ecx	      5594	screen.c	FUNCTION_28	FOR_1	IF_293
0x400ad58	            0x743d	                            je 0x400ad97	      5594	screen.c	FUNCTION_28	FOR_1	IF_293
0x400ad5a	          0x418b17	                    mov edx, dword [r15]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad5d	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      5595	screen.c	FUNCTION_28	FOR_1	CALL_192
0x400ad61	        0x2b74247c	             sub esi, dword [rsp + 0x7c]	      5595	screen.c	FUNCTION_28	FOR_1	CALL_192
0x400ad65	            0x89d0	                            mov eax, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad67	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad69	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad6c	            0x39f2	                            cmp edx, esi	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad6e	            0x89c1	                            mov ecx, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad70	            0x7c1a	                            jl 0x400ad8c	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad72	            0xeb1c	                           jmp 0x400ad90	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad74	         0xf1f4000	                         nop dword [rax]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad78	        0x4983c704	                              add r15, 4	      2478	screen.c	FUNCTION_22	WHILE_1
0x400ad7c	          0x418b17	                    mov edx, dword [r15]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad7f	            0x89d0	                            mov eax, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad81	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad83	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad86	            0x39d6	                            cmp esi, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad88	            0x89c1	                            mov ecx, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad8a	            0x7e04	                           jle 0x400ad90	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad8c	            0x84c0	                             test al, al	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad8e	            0x75e8	                           jne 0x400ad78	      2477	screen.c	FUNCTION_22	WHILE_1
0x400ad90	           0xfb6c1	                           movzx eax, cl	      2479	screen.c	FUNCTION_22
0x400ad93	        0x89442474	             mov dword [rsp + 0x74], eax	      2479	screen.c	FUNCTION_22
0x400ad97	    0x80bc24c70000	                cmp byte [rsp + 0xc7], 0	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400ad9f	      0xbbffffffff	                     mov ebx, 0xffffffff	      5601	screen.c	FUNCTION_28	FOR_1
0x400ada4	            0x7462	                            je 0x400ae08	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400ada6	      0x807c242000	                cmp byte [rsp + 0x20], 0	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400adab	            0x745b	                            je 0x400ae08	      5602	screen.c	FUNCTION_28	FOR_1	IF_294
0x400adad	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      5603	screen.c	FUNCTION_28	FOR_1	IF_294
0x400adb1	          0x4409e8	                            or eax, r13d	      5603	screen.c	FUNCTION_28	FOR_1	IF_294
0x400adb4	            0x7552	                           jne 0x400ae08	      5603	screen.c	FUNCTION_28	FOR_1	IF_294
0x400adb6	    0x418b966c0200	           mov edx, dword [r14 + 0x26c] 	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adbd	            0x85d2	                           test edx, edx	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adbf	            0x741d	                            je 0x400adde	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adc1	      0x486344247c	         movsxd rax, dword [rsp + 0x7c] 	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adc6	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adcb	          0x4829c2	                            sub rdx, rax	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adce	    0x496386d80000	         movsxd rax, dword [r14 + 0xd8] 	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400add5	          0x4839c2	                            cmp rdx, rax	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400add8	     0xf84d12b0000	                            je 0x400d9af	      5605	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400adde	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400ade2	      0xbbffffffff	                     mov ebx, 0xffffffff	      5601	screen.c	FUNCTION_28	FOR_1
0x400ade7	            0x85c0	                           test eax, eax	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400ade9	            0x741d	                            je 0x400ae08	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adeb	      0x486344247c	         movsxd rax, dword [rsp + 0x7c] 	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adf0	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adf5	          0x4829c2	                            sub rdx, rax	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adf8	          0x496307	                 movsxd rax, dword [r15]	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adfb	          0x4839c2	                            cmp rdx, rax	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400adfe	     0xf841f360000	                            je 0x400e423	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400ae04	         0xf1f4000	                         nop dword [rax]	      5611	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400ae08	        0x833c2406	                      cmp dword [rsp], 6	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae0c	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae10	           0xf9ec2	                                setle dl	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae13	            0x85c0	                           test eax, eax	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae15	           0xf9ec0	                                setle al	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae18	            0x89d1	                            mov ecx, edx	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae1a	             0x8c1	                               or cl, al	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae1c	     0xf841e120000	                            je 0x400c040	      5624	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae22	    0x8b0500000000	            mov eax, dword [0x0400ae28] 	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae28	            0x85c0	                           test eax, eax	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae2a	            0x740f	                            je 0x400ae3b	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae2c	    0x418b86540200	           mov eax, dword [r14 + 0x254] 	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae33	            0x85c0	                           test eax, eax	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae35	     0xf8575240000	                           jne 0x400d2b0	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400ae3b	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	      5637	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae3f	    0x8b9424980100	           mov edx, dword [rsp + 0x198] 	      5637	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae46	    0x488b05000000	            mov rax, qword [0x0400ae4d] 	      5637	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae4d	          0x881430	                mov byte [rax + rsi], dl	      5637	screen.c	FUNCTION_28	FOR_1	IF_297
0x400ae50	    0x813d00000000	         cmp dword [0x0400ae5a], 0x26cc 	      5639	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400ae5a	     0xf84f0190000	                            je 0x400c850	      5639	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400ae60	    0x8b0500000000	            mov eax, dword [0x0400ae66] 	      5645	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0x400ae66	            0x85c0	                           test eax, eax	      5645	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0x400ae68	     0xf84a2000000	                            je 0x400af10	      5645	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0x400ae6e	    0x8b84249c0000	            mov eax, dword [rsp + 0x9c] 	      5647	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae75	            0x85c0	                           test eax, eax	      5647	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae77	     0xf842b220000	                            je 0x400d0a8	      5647	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae7d	    0x488b05000000	            mov rax, qword [0x0400ae84] 	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae84	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae88	    0x4c8d0cb50000	                         lea r9, [rsi*4]	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae90	          0x893cb0	            mov dword [rax + rsi*4], edi	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0x400ae93	    0x80bc24980100	               cmp byte [rsp + 0x198], 0	      5652	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0x400ae9b	            0x750b	                           jne 0x400aea8	      5652	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0x400ae9d	    0x488b05000000	            mov rax, qword [0x0400aea4] 	      5653	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0x400aea4	        0xc6043080	              mov byte [rax + rsi], 0x80	      5653	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0x400aea8	    0x448b1d000000	           mov r11d, dword [0x0400aeaf] 	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeaf	          0x4585db	                         test r11d, r11d	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeb2	            0x7e5c	                           jle 0x400af10	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeb4	    0x8b9424d00100	           mov edx, dword [rsp + 0x1d0] 	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aebb	    0x488b05000000	            mov rax, qword [0x0400aec2] 	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aec2	      0xb900000000	                              mov ecx, 0	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aec7	          0x8914b0	            mov dword [rax + rsi*4], edx	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeca	    0x448b9424d001	          mov r10d, dword [rsp + 0x1d0] 	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aed2	            0x31d2	                            xor edx, edx	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aed4	    0x488d8424d401	                  lea rax, [rsp + 0x1d4]	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aedc	          0x4585d2	                         test r10d, r10d	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aedf	            0x7524	                           jne 0x400af05	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aee1	            0xeb2d	                           jmp 0x400af10	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aee3	       0xf1f440000	                   nop dword [rax + rax]	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400aee8	          0x4c8b01	                     mov r8, qword [rcx]	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeeb	          0x448b10	                   mov r10d, dword [rax]	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aeee	          0x4889c7	                            mov rdi, rax	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aef1	        0x4883c108	                              add rcx, 8	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aef5	        0x4883c004	                              add rax, 4	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aef9	        0x47891408	               mov dword [r8 + r9], r10d	      5656	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400aefd	          0x448b07	                    mov r8d, dword [rdi]	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400af00	          0x4585c0	                           test r8d, r8d	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400af03	            0x740b	                            je 0x400af10	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0x400af05	          0x83c201	                              add edx, 1	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400af08	    0x391500000000	            cmp dword [0x0400af0e], edx 	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400af0e	            0x7fd8	                            jg 0x400aee8	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0x400af10	    0x8bbc24b80000	            mov edi, dword [rsp + 0xb8] 	      5664	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0x400af17	    0x488b05000000	            mov rax, qword [0x0400af1e] 	      5666	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0x400af1e	            0x85ff	                           test edi, edi	      5664	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0x400af20	     0xf842a160000	                            je 0x400c550	      5664	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0x400af26	        0x66893c70	              mov word [rax + rsi*2], di	      5666	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0x400af2a	    0x8b3d00000000	            mov edi, dword [0x0400af30] 	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400af30	            0x85ff	                           test edi, edi	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400af32	     0xf8568150000	                           jne 0x400c4a0	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400af38	        0x833c2404	                      cmp dword [rsp], 4	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400af3c	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af43	            0x89ea	                            mov edx, ebp	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af45	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af4a	        0x410f9fc1	                                setg r9b	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af4e	      0x4889442428	             mov qword [rsp + 0x28], rax	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af53	          0x4421ca	                            and edx, r9d	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af56	          0x4585c0	                           test r8d, r8d	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af59	     0xf84c4150000	                            je 0x400c523	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af5f	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af63	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5706	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af68	      0x836c246c01	               sub dword [rsp + 0x6c], 1	      5708	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af6d	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5709	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af72	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      5709	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af7d	            0x85c0	                           test eax, eax	      5709	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af7f	           0xf9fc0	                                 setg al	      5709	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af82	            0x21c1	                            and ecx, eax	      5709	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0x400af84	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400af88	          0x80fa01	                               cmp dl, 1	      5814	screen.c	FUNCTION_28	FOR_1	IF_321
0x400af8b	    0x48835c2428ff	sbb qword [rsp + 0x28], 0xffffffffffffffff	      5814	screen.c	FUNCTION_28	FOR_1	IF_321
0x400af91	            0x85db	                           test ebx, ebx	      5817	screen.c	FUNCTION_28	FOR_1	IF_322
0x400af93	        0x410f48dc	                         cmovs ebx, r12d	      5817	screen.c	FUNCTION_28	FOR_1	IF_322
0x400af97	            0x85c0	                           test eax, eax	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400af99	            0x7e19	                           jle 0x400afb4	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400af9b	          0x4584c9	                           test r9b, r9b	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400af9e	      0xb800000000	                              mov eax, 0	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400afa3	       0xf44442458	           cmove eax, dword [rsp + 0x58]	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400afa8	     0xf459c24e000	          cmovne ebx, dword [rsp + 0xe0]	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400afb0	        0x89442458	             mov dword [rsp + 0x58], eax	      5822	screen.c	FUNCTION_28	FOR_1	IF_323
0x400afb4	            0x84c9	                             test cl, cl	      5826	screen.c	FUNCTION_28	FOR_1	IF_324
0x400afb6	            0x740d	                            je 0x400afc5	      5826	screen.c	FUNCTION_28	FOR_1	IF_324
0x400afb8	      0x836c245401	               sub dword [rsp + 0x54], 1	      5827	screen.c	FUNCTION_28	FOR_1	IF_324
0x400afbd	     0xf449c24ec00	           cmove ebx, dword [rsp + 0xec]	      5827	screen.c	FUNCTION_28	FOR_1	IF_324
0x400afc5	          0x4585c0	                           test r8d, r8d	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afc8	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afcc	     0xf845e100000	                            je 0x400c030	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afd2	          0xc1e81f	                           shr eax, 0x1f	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afd5	            0x84c0	                             test al, al	      5833	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afd7	     0xf8403faffff	                            je 0x400a9e0	      5833	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afdd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afe2	          0x803800	                       cmp byte [rax], 0	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afe5	            0x750c	                           jne 0x400aff3	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afe7	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afeb	            0x85c0	                           test eax, eax	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400afed	     0xf8ec51f0000	                           jle 0x400cfb8	      5840	screen.c	FUNCTION_28	FOR_1	IF_325
0x400aff3	    0x448ba4249000	           mov r12d, dword [rsp + 0x90] 	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400affb	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400afff	    0x2b9424b00000	             sub edx, dword [rsp + 0xb0]	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400b006	    0x418b8eac0000	            mov ecx, dword [r14 + 0xac] 	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400b00d	    0x418bb6a80000	            mov esi, dword [r14 + 0xa8] 	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400b014	          0x4489e7	                           mov edi, r12d	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400b017	      0x458d642401	                     lea r12d, [r12 + 1]	      5855	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b01c	      0xe800000000	                          call 0x400b021	      5847	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0x400b021	    0x458b9e940200	          mov r11d, dword [r14 + 0x294] 	      5861	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b028	    0x8384248c0000	               add dword [rsp + 0x8c], 1	      5854	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b030	          0x4585db	                         test r11d, r11d	      5861	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b033	            0x7509	                           jne 0x400b03e	      5861	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b035	          0x4084ed	                           test bpl, bpl	      5861	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b038	     0xf85d32f0000	                           jne 0x400e011	      5861	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b03e	    0x83bc24940000	cmp dword [rsp + 0x94], 0xffffffffffffffff	      5863	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b046	     0xf84c52f0000	                            je 0x400e011	      5863	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0x400b04c	        0x833c2407	                      cmp dword [rsp], 7	      5867	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0x400b050	            0x7409	                            je 0x400b05b	      5867	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0x400b052	          0x4084ed	                           test bpl, bpl	      5867	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0x400b055	     0xf85751c0000	                           jne 0x400ccd0	      5867	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0x400b05b	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400b062	    0x39b424f00000	            cmp dword [rsp + 0xf0], esi 	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400b069	     0xf8466470000	                            je 0x400f7d5	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400b06f	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	      5887	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400b076	    0x390500000000	            cmp dword [0x0400b07c], eax 	      5887	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400b07c	            0x7509	                           jne 0x400b087	      5887	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400b07e	          0x4084ed	                           test bpl, bpl	      5887	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400b081	     0xf85812a0000	                           jne 0x400db08	      5887	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400b087	    0x488b05000000	            mov rax, qword [0x0400b08e] 	      5948	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b08e	    0x418b96540200	           mov edx, dword [r14 + 0x254] 	      5950	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b095	    0x482b05000000	             sub rax, qword [0x0400b09c]	      5948	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b09c	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      5947	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0a4	            0x85d2	                           test edx, edx	      5950	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0a6	        0x8944246c	             mov dword [rsp + 0x6c], eax	      5948	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0aa	            0x7414	                            je 0x400b0c0	      5950	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0ac	    0x418bb6ac0000	            mov esi, dword [r14 + 0xac] 	      5952	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0b3	          0x8d7eff	                      lea edi, [rsi - 1]	      5952	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0b6	             0x1f8	                            add eax, edi	      5953	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0b8	        0x897c243c	             mov dword [rsp + 0x3c], edi	      5952	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0bc	        0x8944246c	             mov dword [rsp + 0x6c], eax	      5953	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0x400b0c0	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      5960	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0c8	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5969	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0x400b0cc	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      5960	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0d4	    0x8b0500000000	            mov eax, dword [0x0400b0da] 	      5964	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0da	            0x85ff	                           test edi, edi	      5969	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0x400b0dc	    0x898424840000	             mov dword [rsp + 0x84], eax	      5964	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b0e3	      0xb801000000	                              mov eax, 1	      5969	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0x400b0e8	     0xf4f8424a000	           cmovg eax, dword [rsp + 0xa0]	      5969	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0x400b0f0	    0x898424a00000	             mov dword [rsp + 0xa0], eax	      5969	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0x400b0f7	            0x89f8	                            mov eax, edi	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b0f9	          0x83e801	                              sub eax, 1	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b0fc	        0x89442450	             mov dword [rsp + 0x50], eax	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b100	            0x750f	                           jne 0x400b111	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b102	    0x418b868c0000	            mov eax, dword [r14 + 0x8c] 	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b109	            0x85c0	                           test eax, eax	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b10b	     0xf85002f0000	                           jne 0x400e011	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b111	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      5975	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0x400b115	    0xc70424000000	                      mov dword [rsp], 0	      5958	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b11c	    0x899c24e80000	             mov dword [rsp + 0xe8], ebx	      5962	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b123	    0x4489a4249000	            mov dword [rsp + 0x90], r12d	      5855	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b12b	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      5849	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b136	    0x898424e40000	             mov dword [rsp + 0xe4], eax	      5849	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b13d	        0x8b442408	                mov eax, dword [rsp + 8]	      5849	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b141	    0xc74424080000	                  mov dword [rsp + 8], 0	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b149	    0x898424cc0000	             mov dword [rsp + 0xcc], eax	      5963	screen.c	FUNCTION_28	FOR_1	IF_325
0x400b150	        0x8b442408	                mov eax, dword [rsp + 8]	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400b154	           0xb0424	                     or eax, dword [rsp]	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400b157	     0xf849af8ffff	                            je 0x400a9f7	      3784	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400b15d	        0x8b542408	                mov edx, dword [rsp + 8]	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b161	            0x85d2	                           test edx, edx	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b163	        0x410f94c4	                               sete r12b	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b167	        0x833c2401	                      cmp dword [rsp], 1	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b16b	            0x7509	                           jne 0x400b176	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b16d	          0x4584e4	                         test r12b, r12b	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b170	     0xf855a140000	                           jne 0x400c5d0	      3798	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400b176	        0x833c2402	                      cmp dword [rsp], 2	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b17a	            0x7509	                           jne 0x400b185	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b17c	          0x4584e4	                         test r12b, r12b	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b17f	     0xf85db130000	                           jne 0x400c560	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b185	        0x833c2403	                      cmp dword [rsp], 3	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b189	           0xf94c0	                                 sete al	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b18c	          0x4421e0	                           and eax, r12d	      3824	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400b18f	            0x84c0	                             test al, al	      3879	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400b191	     0xf840d1b0000	                            je 0x400cca4	      3879	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400b197	    0x4983be380200	              cmp qword [r14 + 0x238], 0	      3884	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b19f	            0x7435	                            je 0x400b1d6	      3884	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b1a1	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      3885	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b1a8	     0x38424d00000	             add eax, dword [rsp + 0xd0]	      3885	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b1af	    0x3984248c0000	            cmp dword [rsp + 0x8c], eax 	      3885	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b1b6	     0xf84041f0000	                            je 0x400d0c0	      3885	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x400b1bc	    0x488b3d000000	            mov rdi, qword [0x0400b1c3] 	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x400b1c3	      0xbe6e000000	                           mov esi, 0x6e	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x400b1c8	      0xe800000000	                          call 0x400b1cd	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x400b1cd	          0x4885c0	                           test rax, rax	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x400b1d0	     0xf849d330000	                            je 0x400e573	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x400b1d6	    0x418b86480500	           mov eax, dword [r14 + 0x548] 	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1dd	            0x85c0	                           test eax, eax	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1df	     0xf8401100000	                            je 0x400c1e6	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1e5	    0x41bc01000000	                             mov r12d, 1	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1eb	    0xc70424040000	                      mov dword [rsp], 4	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1f2	    0xc74424080000	                  mov dword [rsp + 8], 0	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b1fa	    0x488b05000000	            mov rax, qword [0x0400b201] 	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b201	          0x803800	                       cmp byte [rax], 0	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b204	     0xf84b80f0000	                            je 0x400c1c2	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b20a	          0x4584e4	                         test r12b, r12b	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400b20d	    0xc70424050000	                      mov dword [rsp], 5	      3948	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400b214	     0xf84adf8ffff	                            je 0x400aac7	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400b21a	    0x660f1f440000	                    nop word [rax + rax]	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400b220	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	      3994	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x400b224	    0xc74424080000	                  mov dword [rsp + 8], 0	      3994	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x400b22c	            0x85ed	                           test ebp, ebp	      3994	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x400b22e	            0x7e3e	                           jle 0x400b26e	      3994	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x400b230	    0x8b3d00000000	            mov edi, dword [0x0400b236] 	      3997	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x400b236	      0xe800000000	                          call 0x400b23b	      3997	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x400b23b	    0x418b9e540200	           mov ebx, dword [r14 + 0x254] 	      4002	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b242	          0x83f801	                              cmp eax, 1	      4000	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x400b245	      0xb82d000000	                           mov eax, 0x2d	      4000	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x400b24a	     0xf4e05000000	          cmovle eax, dword [0x0400b251]	      4000	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x400b251	            0x85db	                           test ebx, ebx	      4002	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b253	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4000	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x400b257	     0xf84431d0000	                            je 0x400cfa0	      4002	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b25d	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      4003	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b261	          0x83c001	                              add eax, 1	      4003	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b264	        0x89442408	                mov dword [rsp + 8], eax	      4003	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x400b268	    0x8b1d00000000	            mov ebx, dword [0x0400b26e] 	      4007	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	CALL_76
0x400b26e	    0x488b2d000000	            mov rbp, qword [0x0400b275] 	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b275	        0x807d0000	                       cmp byte [rbp], 0	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b279	     0xf84b9110000	                            je 0x400c438	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b27f	    0x448b9c24a000	           mov r11d, dword [rsp + 0xa0] 	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b287	          0x4585db	                         test r11d, r11d	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b28a	     0xf84a8110000	                            je 0x400c438	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b290	          0x4889ef	                            mov rdi, rbp	      4016	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x400b293	    0x4889ac24b801	            mov qword [rsp + 0x1b8], rbp	      4014	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b29b	      0xe800000000	                          call 0x400b2a0	      4016	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x400b2a0	    0x448b0d000000	            mov r9d, dword [0x0400b2a7] 	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2a7	          0x4989c4	                            mov r12, rax	      4016	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x400b2aa	        0x89442408	                mov dword [rsp + 8], eax	      4016	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x400b2ae	    0x8b1d00000000	            mov ebx, dword [0x0400b2b4] 	      4017	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_78
0x400b2b4	            0x4898	                                    cdqe	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2b6	          0x4585c9	                           test r9d, r9d	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2b9	     0xf85712c0000	                           jne 0x400df30	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2bf	    0x48639424a001	        movsxd rdx, dword [rsp + 0x1a0] 	      4022	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400b2c7	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2cc	          0x4801f0	                            add rax, rsi	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2cf	          0x4839d6	                            cmp rsi, rdx	      4022	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400b2d2	    0x488984245001	            mov qword [rsp + 0x150], rax	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400b2da	          0x4889d0	                            mov rax, rdx	      4022	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400b2dd	     0xf84772c0000	                            je 0x400df5a	      4022	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400b2e3	    0x458b86700200	           mov r8d, dword [r14 + 0x270] 	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2ea	          0x4585c0	                           test r8d, r8d	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2ed	            0x740f	                            je 0x400b2fe	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2ef	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2f4	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2f8	     0xf8489390000	                            je 0x400ec87	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b2fe	          0x4585e4	                         test r12d, r12d	      4026	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x400b301	    0xc70424060000	                      mov dword [rsp], 6	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400b308	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      4018	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b313	        0x410f94c4	                               sete r12b	      4018	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b317	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4015	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b31f	      0xe9a9f7ffff	                           jmp 0x400aacd	      4015	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x400b324	    0x49639f940000	         movsxd rbx, dword [r15 + 0x94] 	      3546	screen.c	FUNCTION_28	ELSE_17
0x400b32b	          0x4885db	                           test rbx, rbx	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400b32e	     0xf8f40f1ffff	                            jg 0x400a474	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400b334	    0x48c744240800	                  mov qword [rsp + 8], 0	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400b33d	          0x4531ed	                          xor r13d, r13d	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400b340	    0xc70424000000	                      mov dword [rsp], 0	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47
0x400b347	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      3137	screen.c	FUNCTION_28
0x400b352	    0xc78424580100	              mov dword [rsp + 0x158], 0	      3112	screen.c	FUNCTION_28
0x400b35d	    0xc78424240100	              mov dword [rsp + 0x124], 0	      3111	screen.c	FUNCTION_28
0x400b368	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3078	screen.c	FUNCTION_28
0x400b370	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3046	screen.c	FUNCTION_28
0x400b379	      0xe91bf2ffff	                           jmp 0x400a599	      3046	screen.c	FUNCTION_28
0x400b37e	    0x4c3b3d000000	            cmp r15, qword [0x0400b385] 	      3420	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b385	     0xf85d7eeffff	                           jne 0x400a262	      3420	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b38b	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      3421	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b38f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      3421	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b394	          0x4839d7	                            cmp rdi, rdx	      3421	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b397	     0xf8cc5eeffff	                            jl 0x400a262	      3421	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b39d	    0x488b05000000	            mov rax, qword [0x0400b3a4] 	      3422	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b3a4	        0x488d0c02	                    lea rcx, [rdx + rax]	      3422	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b3a8	          0x4839cf	                            cmp rdi, rcx	      3422	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b3ab	     0xf8fb1eeffff	                            jg 0x400a262	      3422	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b3b1	          0x4839d7	                            cmp rdi, rdx	      3424	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x400b3b4	     0xf8474440000	                            je 0x400f82e	      3424	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x400b3ba	    0xc784249c0100	              mov dword [rsp + 0x19c], 0	      3428	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10
0x400b3c5	          0x4c89ff	                            mov rdi, r15	      3428	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10
0x400b3c8	        0x48034738	             add rax, qword [rdi + 0x38]	      3429	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400b3cc	      0x4839442460	            cmp qword [rsp + 0x60], rax 	      3429	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400b3d1	     0xf8417440000	                            je 0x400f7ee	      3429	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400b3d7	    0xc78424a00100	    mov dword [rsp + 0x1a0], 0x7fffffff 	      3436	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_11
0x400b3e2	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      3436	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_11
0x400b3e7	    0x3984249c0100	           cmp dword [rsp + 0x19c], eax 	      3438	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x400b3ee	     0xf84eb430000	                            je 0x400f7df	      3438	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x400b3f4	    0x8b0500000000	            mov eax, dword [0x0400b3fa] 	      3441	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x400b3fa	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3440	screen.c	FUNCTION_28	ELSE_9	IF_27
0x400b405	    0xc78424180100	              mov dword [rsp + 0x118], 0	      3084	screen.c	FUNCTION_28
0x400b410	    0xc784242c0100	              mov dword [rsp + 0x12c], 0	      3082	screen.c	FUNCTION_28
0x400b41b	    0x898424280100	            mov dword [rsp + 0x128], eax	      3441	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x400b422	      0xe967eeffff	                           jmp 0x400a28e	      3441	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x400b427	    0x660f1f840000	                    nop word [rax + rax]	      3441	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x400b430	    0xc78424800100	              mov dword [rsp + 0x180], 0	      3500	screen.c	FUNCTION_28	IF_39	IF_41
0x400b43b	    0xc784248c0100	    mov dword [rsp + 0x18c], 0x7fffffff 	      3499	screen.c	FUNCTION_28	IF_39	IF_41
0x400b446	      0xe976efffff	                           jmp 0x400a3c1	      3499	screen.c	FUNCTION_28	IF_39	IF_41
0x400b44b	          0x4889c7	                            mov rdi, rax	      3491	screen.c	FUNCTION_28	IF_39	CALL_30
0x400b44e	      0xe800000000	                          call 0x400b453	      3491	screen.c	FUNCTION_28	IF_39	CALL_30
0x400b453	    0x890500000000	            mov dword [0x0400b459], eax 	      3491	screen.c	FUNCTION_28	IF_39	CALL_30
0x400b459	      0xe9d1eeffff	                           jmp 0x400a32f	      3491	screen.c	FUNCTION_28	IF_39	CALL_30
0x400b45e	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3256	screen.c	FUNCTION_28	IF_2	CALL_4
0x400b463	          0x4c89ff	                            mov rdi, r15	      3256	screen.c	FUNCTION_28	IF_2	CALL_4
0x400b466	    0x8b1d00000000	            mov ebx, dword [0x0400b46c] 	      3254	screen.c	FUNCTION_28	IF_2
0x400b46c	    0xc70500000000	               mov dword [0x0400b476], 0	      3255	screen.c	FUNCTION_28	IF_2
0x400b476	      0xe800000000	                          call 0x400b47b	      3256	screen.c	FUNCTION_28	IF_2	CALL_4
0x400b47b	    0x448b15000000	           mov r10d, dword [0x0400b482] 	      3257	screen.c	FUNCTION_28	IF_2	IF_3
0x400b482	          0x4585d2	                         test r10d, r10d	      3257	screen.c	FUNCTION_28	IF_2	IF_3
0x400b485	     0xf843c390000	                            je 0x400edc7	      3257	screen.c	FUNCTION_28	IF_2	IF_3
0x400b48b	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b48f	    0xc78050020000	              mov dword [rax + 0x250], 1	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b499	      0xe95fecffff	                           jmp 0x400a0fd	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b49e	            0x6690	                                     nop	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b4a0	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b4a7	            0x85c0	                           test eax, eax	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b4a9	        0x400f94c7	                                sete dil	      3258	screen.c	FUNCTION_28	IF_2	IF_3
0x400b4ad	    0x83bc24a40000	               cmp dword [rsp + 0xa4], 1	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4b5	     0xf855df8ffff	                           jne 0x400ad18	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4bb	    0x418b86940200	           mov eax, dword [r14 + 0x294] 	      5323	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4c2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5328	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4c7	      0x482b4c2418	             sub rcx, qword [rsp + 0x18]	      5328	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4cc	        0x400fb6d7	                          movzx edx, dil	      5328	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4d0	          0x4889ce	                            mov rsi, rcx	      5328	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4d3	          0x4829d6	                            sub rsi, rdx	      5328	screen.c	FUNCTION_28	FOR_1	IF_261
0x400b4d6	            0x85c0	                           test eax, eax	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4d8	     0xf84f20e0000	                            je 0x400c3d0	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4de	    0x496386980000	         movsxd rax, dword [r14 + 0x98] 	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4e5	          0x4839f0	                            cmp rax, rsi	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4e8	    0x448b0d000000	            mov r9d, dword [0x0400b4ef] 	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b4ef	           0xf9fc0	                                 setg al	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4f2	           0xfb6c0	                           movzx eax, al	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4f5	          0x4801c6	                            add rsi, rax	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400b4f8	          0x4585c9	                           test r9d, r9d	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b4fb	            0x7511	                           jne 0x400b50e	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b4fd	    0x486315000000	         movsxd rdx, dword [0x0400b504] 	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b504	      0xb801000000	                              mov eax, 1	      5342	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b509	          0x4839d6	                            cmp rsi, rdx	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b50c	            0x7436	                            je 0x400b544	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400b50e	    0x498b86501500	          mov rax, qword [r14 + 0x1550] 	      5345	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95
0x400b515	          0x4885c0	                           test rax, rax	      5346	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b518	     0xf846f2a0000	                            je 0x400df8d	      5346	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b51e	            0x6690	                                     nop	      5346	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b520	    0x448b80800300	           mov r8d, dword [rax + 0x380] 	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b527	          0x4585c0	                           test r8d, r8d	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b52a	            0x7510	                           jne 0x400b53c	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b52c	    0x486390780300	        movsxd rdx, dword [rax + 0x378] 	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b533	          0x4839d6	                            cmp rsi, rdx	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b536	     0xf8474120000	                            je 0x400c7b0	      5348	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0x400b53c	          0x488b00	                    mov rax, qword [rax]	      5353	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b53f	          0x4885c0	                           test rax, rax	      5346	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b542	            0x75dc	                           jne 0x400b520	      5346	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0x400b544	    0x8bb424940000	            mov esi, dword [rsp + 0x94] 	      5357	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400b54b	    0x3b3500000000	            cmp esi, dword [0x0400b551] 	      5357	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400b551	     0xf84e9100000	                            je 0x400c640	      5357	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400b557	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      5357	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400b55e	            0x85c0	                           test eax, eax	      5461	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b560	     0xf85c3f7ffff	                           jne 0x400ad29	      5461	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b566	    0x83bc246c0100	              cmp dword [rsp + 0x16c], 1	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b56e	          0x4c89f0	                            mov rax, r14	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b571	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b576	          0x4d89fe	                            mov r14, r15	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b579	          0x4989c7	                            mov r15, rax	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b57c	            0x7519	                           jne 0x400b597	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b57e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b583	    0x496397d80000	         movsxd rdx, dword [r15 + 0xd8] 	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b58a	        0x4883e801	                              sub rax, 1	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b58e	          0x4839d0	                            cmp rax, rdx	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b591	     0xf84f83c0000	                            je 0x400f28f	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400b597	    0x458b8f940200	           mov r9d, dword [r15 + 0x294] 	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0x400b59e	          0x4585c9	                           test r9d, r9d	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0x400b5a1	     0xf84d5310000	                            je 0x400e77c	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0x400b5a7	    0x49639f980000	         movsxd rbx, dword [r15 + 0x98] 	      5475	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0x400b5ae	      0x48636c243c	         movsxd rbp, dword [rsp + 0x3c] 	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5b3	          0x4c89ff	                            mov rdi, r15	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5b6	        0x4c891424	                    mov qword [rsp], r10	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5ba	      0xe800000000	                          call 0x400b5bf	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5bf	            0x4898	                                    cdqe	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5c1	        0x4c8b1424	                    mov r10, qword [rsp]	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5c5	          0x4801dd	                            add rbp, rbx	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5c8	          0x4889ee	                            mov rsi, rbp	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5cb	          0x4829c6	                            sub rsi, rax	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5ce	      0x4839742448	            cmp qword [rsp + 0x48], rsi 	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5d3	     0xf8cac370000	                            jl 0x400ed85	      5480	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0x400b5d9	      0x448b442474	            mov r8d, dword [rsp + 0x74] 	      5489	screen.c	FUNCTION_28	FOR_1	IF_276	IF_280
0x400b5de	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      5485	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b5e2	    0x2b9424b00000	             sub edx, dword [rsp + 0xb0]	      5485	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b5e9	          0x4585c0	                           test r8d, r8d	      5489	screen.c	FUNCTION_28	FOR_1	IF_276	IF_280
0x400b5ec	     0xf8496310000	                            je 0x400e788	      5489	screen.c	FUNCTION_28	FOR_1	IF_276	IF_280
0x400b5f2	          0x418b0e	                    mov ecx, dword [r14]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b5f5	        0x8b7c2448	            mov edi, dword [rsp + 0x48] 	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0x400b5f9	        0x2b7c247c	             sub edi, dword [rsp + 0x7c]	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0x400b5fd	            0x89c8	                            mov eax, ecx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b5ff	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b601	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b604	            0x39f9	                            cmp ecx, edi	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b606	            0x89c6	                            mov esi, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b608	            0x7c1a	                            jl 0x400b624	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b60a	            0xeb1c	                           jmp 0x400b628	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b60c	         0xf1f4000	                         nop dword [rax]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b610	        0x4983c604	                              add r14, 4	      2478	screen.c	FUNCTION_22	WHILE_1
0x400b614	          0x418b0e	                    mov ecx, dword [r14]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b617	            0x89c8	                            mov eax, ecx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b619	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b61b	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b61e	            0x39cf	                            cmp edi, ecx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b620	            0x89c6	                            mov esi, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b622	            0x7e04	                           jle 0x400b628	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b624	            0x84c0	                             test al, al	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b626	            0x75e8	                           jne 0x400b610	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b628	        0x400fb6c6	                          movzx eax, sil	      2479	screen.c	FUNCTION_22
0x400b62c	    0x418bb76c0200	           mov esi, dword [r15 + 0x26c] 	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b633	        0x89442474	             mov dword [rsp + 0x74], eax	      2479	screen.c	FUNCTION_22
0x400b637	            0x85f6	                           test esi, esi	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b639	     0xf84402b0000	                            je 0x400e17f	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b63f	      0x486344247c	         movsxd rax, dword [rsp + 0x7c] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b644	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b649	    0x4963bfd80000	         movsxd rdi, dword [r15 + 0xd8] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b650	          0x4829c1	                            sub rcx, rax	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b653	          0x4889c8	                            mov rax, rcx	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b656	    0x48638c246c01	        movsxd rcx, dword [rsp + 0x16c] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b65e	          0x4889fd	                            mov rbp, rdi	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b661	          0x4829c8	                            sub rax, rcx	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b664	    0x418b8fac0000	            mov ecx, dword [r15 + 0xac] 	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b66b	          0x4839c7	                            cmp rdi, rax	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b66e	     0xf8c122b0000	                            jl 0x400e186	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b674	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b67b	    0x2b8424d00000	             sub eax, dword [rsp + 0xd0]	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b682	          0x83c001	                              add eax, 1	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b685	           0xfafc1	                           imul eax, ecx	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b688	            0x4898	                                    cdqe	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b68a	          0x4801c3	                            add rbx, rax	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b68d	          0x4839df	                            cmp rdi, rbx	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b690	     0xf8df02a0000	                           jge 0x400e186	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b696	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b69b	        0x493b4738	            cmp rax, qword [r15 + 0x38] 	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b69f	     0xf84e12a0000	                            je 0x400e186	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b6a5	    0x458b87540200	           mov r8d, dword [r15 + 0x254] 	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b6ac	          0x4585c0	                           test r8d, r8d	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b6af	     0xf8513010000	                           jne 0x400b7c8	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400b6b5	        0x8b742474	            mov esi, dword [rsp + 0x74] 	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0x400b6b9	            0x85f6	                           test esi, esi	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0x400b6bb	     0xf85ee2a0000	                           jne 0x400e1af	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0x400b6c1	          0x4531c0	                            xor r8d, r8d	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0x400b6c4	            0x39d1	                            cmp ecx, edx	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6c6	     0xf8efc000000	                           jle 0x400b7c8	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6cc	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6d1	      0x448b5c247c	           mov r11d, dword [rsp + 0x7c] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6d6	        0x8b4c246c	            mov ecx, dword [rsp + 0x6c] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6da	          0x4963c3	                        movsxd rax, r11d	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6dd	          0x4989d8	                             mov r8, rbx	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6e0	            0x89de	                            mov esi, ebx	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6e2	          0x4929c0	                             sub r8, rax	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6e5	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6e9	            0x89d3	                            mov ebx, edx	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6eb	          0x8d7901	                      lea edi, [rcx + 1]	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6ee	          0x4429de	                           sub esi, r11d	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6f1	            0x29cb	                            sub ebx, ecx	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6f3	    0x488b15000000	            mov rdx, qword [0x0400b6fa] 	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6fa	        0x448d4fff	                      lea r9d, [rdi - 1]	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b6fe	      0x42c6040a20	               mov byte [rdx + r9], 0x20	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b703	    0x8b1500000000	            mov edx, dword [0x0400b709] 	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0x400b709	            0x85d2	                           test edx, edx	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0x400b70b	            0x740f	                            je 0x400b71c	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0x400b70d	    0x488b15000000	            mov rdx, qword [0x0400b714] 	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0x400b714	    0x42c7048a0000	               mov dword [rdx + r9*4], 0	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0x400b71c	            0x85c0	                           test eax, eax	      5522	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286
0x400b71e	        0x448d1c3b	                   lea r11d, [rbx + rdi]	      5522	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286
0x400b722	     0xf8458390000	                            je 0x400f080	      5522	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286
0x400b728	          0x418b16	                    mov edx, dword [r14]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b72b	            0x89d0	                            mov eax, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b72d	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b72f	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b732	            0x39f2	                            cmp edx, esi	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b734	            0x89c1	                            mov ecx, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b736	            0x7c1c	                            jl 0x400b754	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b738	            0xeb1e	                           jmp 0x400b758	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b73a	    0x660f1f440000	                    nop word [rax + rax]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b740	        0x4983c604	                              add r14, 4	      2478	screen.c	FUNCTION_22	WHILE_1
0x400b744	          0x418b16	                    mov edx, dword [r14]	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b747	            0x89d0	                            mov eax, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b749	            0xf7d0	                                 not eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b74b	          0xc1e81f	                           shr eax, 0x1f	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b74e	            0x39d6	                            cmp esi, edx	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b750	            0x89c1	                            mov ecx, eax	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b752	            0x7e04	                           jle 0x400b758	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b754	            0x84c0	                             test al, al	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b756	            0x75e8	                           jne 0x400b740	      2477	screen.c	FUNCTION_22	WHILE_1
0x400b758	    0x458baf6c0200	          mov r13d, dword [r15 + 0x26c] 	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b75f	           0xfb6c1	                           movzx eax, cl	      2479	screen.c	FUNCTION_22
0x400b762	          0x4585ed	                         test r13d, r13d	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b765	            0x7410	                            je 0x400b777	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b767	    0x496397d80000	         movsxd rdx, dword [r15 + 0xd8] 	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b76e	          0x4939d0	                             cmp r8, rdx	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b771	     0xf841e390000	                            je 0x400f095	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400b777	            0x85c0	                           test eax, eax	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b779	            0x7411	                            je 0x400b78c	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b77b	          0x496316	                 movsxd rdx, dword [r14]	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b77e	      0xb801000000	                              mov eax, 1	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b783	          0x4c39c2	                             cmp rdx, r8	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b786	     0xf8420390000	                            je 0x400f0ac	      5528	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400b78c	    0x488b15000000	            mov rdx, qword [0x0400b793] 	      5531	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0x400b793	          0x4531e4	                          xor r12d, r12d	      5531	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0x400b796	      0x664689244a	             mov word [rdx + r9*2], r12w	      5531	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0x400b79b	          0x4939e8	                             cmp r8, rbp	      5533	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0x400b79e	     0xf8d343c0000	                           jge 0x400f3d8	      5533	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0x400b7a4	    0x418b8fac0000	            mov ecx, dword [r15 + 0xac] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7ab	          0x83c701	                              add edi, 1	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7ae	        0x4983c001	                               add r8, 1	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7b2	          0x83c601	                              add esi, 1	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7b5	          0x4439d9	                           cmp ecx, r11d	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7b8	     0xf8f35ffffff	                            jg 0x400b6f3	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7be	    0x458b87540200	           mov r8d, dword [r15 + 0x254] 	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7c5	          0x4489da	                           mov edx, r11d	      5514	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0x400b7c8	    0x418bb7a80000	            mov esi, dword [r15 + 0xa8] 	      5541	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0x400b7cf	    0x8bbc24900000	            mov edi, dword [rsp + 0x90] 	      5541	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0x400b7d6	        0x4c891424	                    mov qword [rsp], r10	      5541	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0x400b7da	      0xe800000000	                          call 0x400b7df	      5541	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0x400b7df	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      5543	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b7e6	        0x4c8b1424	                    mov r10, qword [rsp]	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b7ea	          0x83c001	                              add eax, 1	      5543	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b7ed	    0x4c3b3d000000	            cmp r15, qword [0x0400b7f4] 	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b7f4	     0xf8523280000	                           jne 0x400e01d	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b7fa	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b7ff	        0x493b7738	            cmp rsi, qword [r15 + 0x38] 	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b803	     0xf8514280000	                           jne 0x400e01d	      5549	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b809	    0x8bbc24d00000	            mov edi, dword [rsp + 0xd0] 	      5551	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b810	            0x89c2	                            mov edx, eax	      5552	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b812	    0x41c787d00000	               mov dword [r15 + 0xd0], 0	      5554	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b81d	    0x41838fb40000	             or dword [r15 + 0xb4], 0x18	      5556	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b825	    0x898424d00000	             mov dword [rsp + 0xd0], eax	      5543	screen.c	FUNCTION_28	FOR_1	IF_276
0x400b82c	            0x29fa	                            sub edx, edi	      5552	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b82e	    0x4189bfd40000	             mov dword [r15 + 0xd4], edi	      5551	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b835	    0x418997cc0000	             mov dword [r15 + 0xcc], edx	      5552	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b83c	      0xe9f1140000	                           jmp 0x400cd32	      5552	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b841	     0xf1f80000000	                         nop dword [rax]	      5552	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0x400b848	    0x486384249c01	        movsxd rax, dword [rsp + 0x19c] 	      4075	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b850	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      4075	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b855	            0x7459	                            je 0x400b8b0	      4075	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b857	    0x8b1500000000	            mov edx, dword [0x0400b85d] 	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b85d	            0x85d2	                           test edx, edx	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b85f	            0x741c	                            je 0x400b87d	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b861	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b866	        0x488d5701	                      lea rdx, [rdi + 1]	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b86a	          0x4839c2	                            cmp rdx, rax	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b86d	            0x750e	                           jne 0x400b87d	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b86f	      0x448b642408	               mov r12d, dword [rsp + 8]	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b874	          0x4585e4	                         test r12d, r12d	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b877	     0xf84bf2b0000	                            je 0x400e43c	      4077	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b87d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b882	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b887	     0xf8e330a0000	                           jle 0x400c2c0	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b88d	    0x398424040100	           cmp dword [rsp + 0x104], eax 	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b894	     0xf85260a0000	                           jne 0x400c2c0	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b89a	    0x48638424a001	        movsxd rax, dword [rsp + 0x1a0] 	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8a2	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8a7	     0xf8d130a0000	                           jge 0x400c2c0	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8ad	           0xf1f00	                         nop dword [rax]	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8b0	    0x8b8424280100	           mov eax, dword [rsp + 0x128] 	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8b7	        0x89442468	             mov dword [rsp + 0x68], eax	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400b8bb	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8bf	    0xc78424800000	               mov dword [rsp + 0x80], 0	      3778	screen.c	FUNCTION_28	FOR_1
0x400b8ca	            0x85db	                           test ebx, ebx	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8cc	     0xf853e020000	                           jne 0x400bb10	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8d2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8d7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8dc	    0x4d8bae501500	          mov r13, qword [r14 + 0x1550] 	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8e3	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8e8	    0xc78424800000	               mov dword [rsp + 0x80], 0	      3778	screen.c	FUNCTION_28	FOR_1
0x400b8f3	    0x4c89bc24f800	             mov qword [rsp + 0xf8], r15	      3778	screen.c	FUNCTION_28	FOR_1
0x400b8fb	          0x4889cb	                            mov rbx, rcx	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b8fe	          0x4889c2	                            mov rdx, rax	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b901	          0x4829c3	                            sub rbx, rax	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400b904	          0x4d85ed	                           test r13, r13	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400b907	        0x400f95c5	                               setne bpl	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400b90b	       0xf1f440000	                   nop dword [rax + rax]	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400b910	          0x4084ed	                           test bpl, bpl	      4106	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b913	     0xf84e70c0000	                            je 0x400c600	      4106	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b919	        0x458b550c	            mov r10d, dword [r13 + 0xc] 	      4107	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b91d	          0x4585d2	                         test r10d, r10d	      4107	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b920	     0xf8ef20a0000	                           jle 0x400c418	      4107	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b926	      0xc644243000	                mov byte [rsp + 0x30], 0	      4107	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b92b	    0xc74424400100	               mov dword [rsp + 0x40], 1	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b933	    0x41bf00000000	                             mov r15d, 0	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400b939	    0x41c785f00100	              mov dword [r13 + 0x1f0], 0	      4116	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400b944	    0x4981ff000000	                              cmp r15, 0	      4116	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400b94b	      0xb800000000	                              mov eax, 0	      4116	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400b950	    0xc74424100100	               mov dword [rsp + 0x10], 1	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400b958	        0x490f45c5	                         cmovne rax, r13	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400b95c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400b961	        0x49833f00	                      cmp qword [r15], 0	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400b965	     0xf8445010000	                            je 0x400bab0	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400b96b	    0x496387700100	        movsxd rax, dword [r15 + 0x170] 	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b972	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b977	     0xf84cb000000	                            je 0x400ba48	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b97d	          0x4839c3	                            cmp rbx, rax	      4122	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b980	    0x496387740100	        movsxd rax, dword [r15 + 0x174] 	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b987	            0x7c0c	                            jl 0x400b995	      4122	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b989	          0x4839c3	                            cmp rbx, rax	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b98c	          0x4889c6	                            mov rsi, rax	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b98f	     0xf8c0f250000	                            jl 0x400dea4	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400b995	          0x4839c3	                            cmp rbx, rax	      4144	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b998	            0x755a	                           jne 0x400b9f4	      4144	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b99a	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b99f	    0x41c787640100	              mov dword [r15 + 0x164], 0	      4146	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9aa	            0x89d9	                            mov ecx, ebx	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b9ac	          0x4c89e2	                            mov rdx, r12	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b9af	          0x4c89fe	                            mov rsi, r15	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b9b2	          0x4c89f7	                            mov rdi, r14	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b9b5	      0xe81651ffff	                 call sym.next_search_hl	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x400b9ba	          0x4084ed	                           test bpl, bpl	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9bd	     0xf840d010000	                            je 0x400bad0	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9c3	    0x458b85f00100	           mov r8d, dword [r13 + 0x1f0] 	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9ca	            0x31c0	                            xor eax, eax	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9cc	          0x4585c0	                           test r8d, r8d	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9cf	           0xf95c0	                                setne al	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9d2	        0x89442410	             mov dword [rsp + 0x10], eax	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9d6	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4154	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x400b9da	            0x31d2	                            xor edx, edx	      4154	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x400b9dc	          0x4c89e6	                            mov rsi, r12	      4154	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x400b9df	      0xe800000000	                          call 0x400b9e4	      4154	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x400b9e4	    0x4d3ba7580100	           cmp r12, qword [r15 + 0x158] 	      4157	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x400b9eb	          0x4889c2	                            mov rdx, rax	      4154	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x400b9ee	        0x488d0c18	                    lea rcx, [rax + rbx]	      4155	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400b9f2	            0x7464	                            je 0x400ba58	      4157	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x400b9f4	    0x4981ff000000	                              cmp r15, 0	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400b9fb	            0x740d	                            je 0x400ba0a	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400b9fd	          0x4084ed	                           test bpl, bpl	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400ba00	     0xf842a090000	                            je 0x400c330	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400ba06	        0x4d8b6d00	                    mov r13, qword [r13]	      4186	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400ba0a	       0xfb6442430	           movzx eax, byte [rsp + 0x30] 	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400ba0f	          0x4d85ed	                           test r13, r13	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400ba12	        0x400f95c5	                               setne bpl	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400ba16	          0x4008e8	                              or al, bpl	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400ba19	     0xf8429090000	                            je 0x400c348	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400ba1f	      0x448b5c2440	           mov r11d, dword [rsp + 0x40] 	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400ba24	          0x4585db	                         test r11d, r11d	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400ba27	     0xf84e3feffff	                            je 0x400b910	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400ba2d	          0x4d85ed	                           test r13, r13	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba30	    0x4d8dbd080200	                  lea r15, [r13 + 0x208]	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400ba37	     0xf85fcfeffff	                           jne 0x400b939	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba3d	      0xe902ffffff	                           jmp 0x400b944	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba42	    0x660f1f440000	                    nop word [rax + rax]	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba48	    0x496387740100	        movsxd rax, dword [r15 + 0x174] 	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba4f	      0xe941ffffff	                           jmp 0x400b995	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba54	         0xf1f4000	                         nop dword [rax]	      4115	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x400ba58	        0x49634710	         movsxd rax, dword [r15 + 0x10] 	      4159	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x400ba5c	    0x4983bfa80000	               cmp qword [r15 + 0xa8], 0	      4160	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x400ba64	    0x418987700100	            mov dword [r15 + 0x170], eax	      4159	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x400ba6b	     0xf857f060000	                           jne 0x400c0f0	      4160	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x400ba71	    0x418bb7b00000	            mov esi, dword [r15 + 0xb0] 	      4161	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x400ba78	    0x4189b7740100	            mov dword [r15 + 0x174], esi	      4161	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x400ba7f	            0x39f0	                            cmp eax, esi	      4165	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x400ba81	     0xf85dafeffff	                           jne 0x400b961	      4165	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x400ba87	    0x8b3d00000000	            mov edi, dword [0x0400ba8d] 	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400ba8d	            0x85ff	                           test edi, edi	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400ba8f	     0xf852a170000	                           jne 0x400d1bf	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400ba95	          0x83c001	                              add eax, 1	      4175	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x400ba98	        0x49833f00	                      cmp qword [r15], 0	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400ba9c	    0x418987740100	            mov dword [r15 + 0x174], eax	      4175	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x400baa3	     0xf85c2feffff	                           jne 0x400b96b	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400baa9	     0xf1f80000000	                         nop dword [rax]	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400bab0	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400bab4	            0x85f6	                           test esi, esi	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400bab6	     0xf8438ffffff	                            je 0x400b9f4	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400babc	          0x4084ed	                           test bpl, bpl	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400babf	     0xf85a6feffff	                           jne 0x400b96b	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400bac5	      0xe92affffff	                           jmp 0x400b9f4	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400baca	    0x660f1f440000	                    nop word [rax + rax]	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x400bad0	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400bad8	      0xe9f9feffff	                           jmp 0x400b9d6	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400badd	           0xf1f00	                         nop dword [rax]	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400bae0	          0x4885c0	                           test rax, rax	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x400bae3	          0x4589c5	                           mov r13d, r8d	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400bae6	           0xf95c2	                                setne dl	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400bae9	     0xf85bf080000	                           jne 0x400c3ae	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400baef	              0x90	                                     nop	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400baf0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400baf5	          0x803800	                       cmp byte [rax], 0	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400baf8	            0x7516	                           jne 0x400bb10	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bafa	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bb01	            0x85c0	                           test eax, eax	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bb03	     0xf84ce1e0000	                            je 0x400d9d7	      4212	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bb09	          0x4531ed	                          xor r13d, r13d	      4214	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bb0c	         0xf1f4000	                         nop dword [rax]	      4214	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400bb10	    0x8b8424bc0000	            mov eax, dword [rsp + 0xbc] 	      4219	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132
0x400bb17	            0x85c0	                           test eax, eax	      4219	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132
0x400bb19	            0x7442	                            je 0x400bb5d	      4219	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132
0x400bb1b	          0x83f818	                           cmp eax, 0x18	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400bb1e	     0xf84ae170000	                            je 0x400d2d2	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400bb24	    0x48638424bc00	         movsxd rax, dword [rsp + 0xbc] 	      4224	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400bb2c	          0x83f81a	                           cmp eax, 0x1a	      4224	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400bb2f	     0xf84cc170000	                            je 0x400d301	      4224	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400bb35	    0x8b0485000000	                  mov eax, dword [rax*4]	      4227	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x400bb3c	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      4227	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x400bb43	    0x418b86700200	           mov eax, dword [r14 + 0x270] 	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb4a	            0x85c0	                           test eax, eax	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb4c	            0x740f	                            je 0x400bb5d	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb4e	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb53	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb57	     0xf840c280000	                            je 0x400e369	      4228	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x400bb5d	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4236	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_136
0x400bb61	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      4237	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x400bb65	            0x85c0	                           test eax, eax	      4236	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_136
0x400bb67	     0xf8506090000	                           jne 0x400c473	      4236	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_136
0x400bb6d	          0x4585ed	                         test r13d, r13d	      4238	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400bb70	     0xf85fa080000	                           jne 0x400c470	      4238	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400bb76	    0x448ba424c000	           mov r12d, dword [rsp + 0xc0] 	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb7e	          0x4585e4	                         test r12d, r12d	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb81	     0xf84590c0000	                            je 0x400c7e0	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb87	    0x486384249c01	        movsxd rax, dword [rsp + 0x19c] 	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb8f	          0x83f8f6	             cmp eax, 0xfffffffffffffff6	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb92	     0xf84ec1d0000	                            je 0x400d984	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb98	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bb9d	          0x4839c6	                            cmp rsi, rax	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bba0	            0x7c26	                            jl 0x400bbc8	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bba2	    0x486384240401	        movsxd rax, dword [rsp + 0x104] 	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbaa	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbaf	            0x7c17	                            jl 0x400bbc8	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbb1	    0x48638424a001	        movsxd rax, dword [rsp + 0x1a0] 	      4244	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbb9	          0x4839c6	                            cmp rsi, rax	      4244	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbbc	     0xf8c1e0c0000	                            jl 0x400c7e0	      4244	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbc2	    0x660f1f440000	                    nop word [rax + rax]	      4244	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400bbc8	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbcc	    0x448ba424c000	           mov r12d, dword [rsp + 0xc0] 	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbd4	    0xc68424c60000	                mov byte [rsp + 0xc6], 0	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbdc	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4234	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400bbe4	            0x85db	                           test ebx, ebx	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbe6	     0xf8f8defffff	                            jg 0x400ab79	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbec	         0xf1f4000	                         nop dword [rax]	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x400bbf0	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      4362	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x400bbf8	          0x4885c0	                           test rax, rax	      4362	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x400bbfb	            0x7408	                            je 0x400bc05	      4362	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x400bbfd	          0x4889c7	                            mov rdi, rax	      4363	screen.c	FUNCTION_28	FOR_1	ELSE_51	CALL_98
0x400bc00	      0xe800000000	                          call 0x400bc05	      4363	screen.c	FUNCTION_28	FOR_1	ELSE_51	CALL_98
0x400bc05	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4367	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x400bc0a	    0x8b1500000000	            mov edx, dword [0x0400bc10] 	      4372	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x400bc10	           0xfb618	                   movzx ebx, byte [rax]	      4367	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x400bc13	            0x85d2	                           test edx, edx	      4372	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x400bc15	    0x899c24980100	            mov dword [rsp + 0x198], ebx	      4367	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x400bc1c	           0xfb628	                   movzx ebp, byte [rax]	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x400bc1f	     0xf8413010000	                            je 0x400bd38	      4372	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x400bc25	    0x448b1d000000	           mov r11d, dword [0x0400bc2c] 	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x400bc2c	          0x4585db	                         test r11d, r11d	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x400bc2f	     0xf85db1a0000	                           jne 0x400d710	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x400bc35	          0x4863c3	                         movsxd rax, ebx	      4485	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x400bc38	     0xfbe80000000	                   movsx eax, byte [rax]	      4485	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x400bc3f	            0x85c0	                           test eax, eax	      4486	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x400bc41	    0x898424c80000	             mov dword [rsp + 0xc8], eax	      4485	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x400bc48	     0xf84fb180000	                            je 0x400d549	      4486	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x400bc4e	          0x83f801	                              cmp eax, 1	      4488	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168
0x400bc51	            0x7e1d	                           jle 0x400bc70	      4488	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168
0x400bc53	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc58	         0xfb64001	               movzx eax, byte [rax + 1]	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc5c	            0x3c1f	                            cmp al, 0x1f	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc5e	     0xf863f260000	                           jbe 0x400e2a3	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc64	          0xc1e308	                              shl ebx, 8	      4494	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc67	             0x1c3	                            add ebx, eax	      4494	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc69	     0xf1f80000000	                         nop dword [rax]	      4494	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x400bc70	    0x418b86540200	           mov eax, dword [r14 + 0x254] 	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc77	            0x85c0	                           test eax, eax	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc79	     0xf84c3160000	                            je 0x400d342	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc7f	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc83	            0x85c0	                           test eax, eax	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc85	     0xf8ecb160000	                           jle 0x400d356	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400bc8b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4542	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bc90	          0x803e00	                       cmp byte [rsi], 0	      4542	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bc93	            0x7412	                            je 0x400bca7	      4542	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bc95	    0x48638424c800	         movsxd rax, dword [rsp + 0xc8] 	      4543	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bc9d	      0x488d4406ff	                lea rax, [rsi + rax - 1]	      4543	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bca2	      0x4889442410	             mov qword [rsp + 0x10], rax	      4543	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x400bca7	        0x8b442408	                mov eax, dword [rsp + 8]	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcab	            0x85c0	                           test eax, eax	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcad	           0xf94c2	                                 sete dl	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcb0	    0x83bc24c80000	               cmp dword [rsp + 0xc8], 1	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcb8	           0xf9fc0	                                 setg al	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcbb	            0x84c2	                             test dl, al	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcbd	     0xf84da170000	                            je 0x400d49d	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcc3	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcc7	            0x85c0	                           test eax, eax	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcc9	     0xf8ece170000	                           jle 0x400d49d	      4548	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bccf	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4553	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x400bcd3	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      4552	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bcde	          0x4409e8	                            or eax, r13d	      4553	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x400bce1	     0xf8589250000	                           jne 0x400e270	      4553	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x400bce7	    0x8b0500000000	            mov eax, dword [0x0400bced] 	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175	CALL_121
0x400bced	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4557	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x400bcf5	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4560	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd00	    0xc74424702000	           mov dword [rsp + 0x70], 0x20 	      4559	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd08	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4561	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd13	    0xc74424540200	               mov dword [rsp + 0x54], 2	      4555	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x400bd1b	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175	CALL_121
0x400bd22	    0xc744245c3c00	           mov dword [rsp + 0x5c], 0x3c 	      4551	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd2a	    0xc74424080100	                  mov dword [rsp + 8], 1	      4550	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd32	    0x660f1f440000	                    nop word [rax + rax]	      4550	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400bd38	    0x8b8424100100	           mov eax, dword [rsp + 0x110] 	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd3f	    0x488344241001	               add qword [rsp + 0x10], 1	      4566	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x400bd45	            0x85c0	                           test eax, eax	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd47	     0xf85330b0000	                           jne 0x400c880	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd4d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd52	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd59	      0x4889442448	             mov qword [rsp + 0x48], rax	      4568	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400bd5e	      0xe800000000	                          call 0x400bd63	      4825	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x400bd63	            0x85c0	                           test eax, eax	      4825	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x400bd65	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      4825	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x400bd71	     0xf85a1010000	                           jne 0x400bf18	      4825	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x400bd77	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400bd7e	          0x83ff09	                              cmp edi, 9	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400bd81	     0xf84ca1a0000	                            je 0x400d851	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400bd87	            0x85ff	                           test edi, edi	      4955	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bd89	     0xf85e11a0000	                           jne 0x400d870	      4955	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bd8f	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      4956	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bd96	            0x85c0	                           test eax, eax	      4956	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bd98	     0xf8585000000	                           jne 0x400be23	      4956	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bd9e	    0x448b9c249c01	          mov r11d, dword [rsp + 0x19c] 	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bda6	          0x4585db	                         test r11d, r11d	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bda9	            0x790e	                           jns 0x400bdb9	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdab	    0x80bc24880100	               cmp byte [rsp + 0x188], 0	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdb3	     0xf84fb160000	                            je 0x400d4b4	      4957	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdb9	    0x48639424a001	        movsxd rdx, dword [rsp + 0x1a0] 	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdc1	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdc6	     0xf8de8160000	                           jge 0x400d4b4	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdcc	    0x833d00000000	           cmp dword [0x0400bdd3], 0x16 	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdd3	     0xf84032d0000	                            je 0x400eadc	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdd9	    0x458b96540200	          mov r10d, dword [r14 + 0x254] 	      4955	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bde0	          0x4585d2	                         test r10d, r10d	      4955	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bde3	     0xf85bd160000	                           jne 0x400d4a6	      4955	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bde9	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bded	    0x413bbeac0000	            cmp edi, dword [r14 + 0xac] 	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdf4	     0xf8dba160000	                           jge 0x400d4b4	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400bdfa	    0x448b84242c01	           mov r8d, dword [rsp + 0x12c] 	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be02	          0x4585c0	                           test r8d, r8d	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be05	            0x741c	                            je 0x400be23	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be07	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4966	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be0c	        0x493b7e38	            cmp rdi, qword [r14 + 0x38] 	      4966	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be10	            0x7511	                           jne 0x400be23	      4966	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be12	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be16	    0x41399ed80000	            cmp dword [r14 + 0xd8], ebx 	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be1d	     0xf8491160000	                            je 0x400d4b4	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be23	    0x8bbc24940000	            mov edi, dword [rsp + 0x94] 	      4968	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be2a	            0x85ff	                           test edi, edi	      4968	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be2c	     0xf8e82160000	                           jle 0x400d4b4	      4968	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400be32	    0x8bb424bc0000	            mov esi, dword [rsp + 0xbc] 	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be39	            0x85f6	                           test esi, esi	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be3b	            0x7536	                           jne 0x400be73	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be3d	    0x8b8c24c00000	            mov ecx, dword [rsp + 0xc0] 	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be44	            0x85c9	                           test ecx, ecx	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be46	            0x752b	                           jne 0x400be73	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0x400be48	    0x8b9424980000	            mov edx, dword [rsp + 0x98] 	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400be4f	            0x85d2	                           test edx, edx	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400be51	     0xf85a1340000	                           jne 0x400f2f8	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400be57	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	      4997	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0x400be63	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4999	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0x400be6b	    0xc74424080100	                  mov dword [rsp + 8], 1	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0x400be73	            0x85c0	                           test eax, eax	      5002	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be75	     0xf849b260000	                            je 0x400e516	      5002	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be7b	    0x8b0500000000	            mov eax, dword [0x0400be81] 	      5002	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be81	            0x85c0	                           test eax, eax	      5002	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be83	     0xf8e8d260000	                           jle 0x400e516	      5002	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be89	    0x898424980100	            mov dword [rsp + 0x198], eax	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be90	        0x89442470	             mov dword [rsp + 0x70], eax	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0x400be94	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0x400be98	    0x48836c241001	               sub qword [rsp + 0x10], 1	      5007	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400be9e	            0x85c0	                           test eax, eax	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0x400bea0	            0x7515	                           jne 0x400beb7	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0x400bea2	    0x8b0500000000	            mov eax, dword [0x0400bea8] 	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223	CALL_151
0x400bea8	    0xc74424540100	               mov dword [rsp + 0x54], 1	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0x400beb0	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223	CALL_151
0x400beb7	    0x8b2d00000000	            mov ebp, dword [0x0400bebd] 	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400bebd	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5022	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_79
0x400bec8	    0xc78424940000	     mov dword [rsp + 0x94], 0xffffffff 	      5006	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400bed3	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5006	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400bedf	            0x85ed	                           test ebp, ebp	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400bee1	            0x7435	                            je 0x400bf18	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400bee3	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400bee7	      0xe800000000	                          call 0x400beec	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400beec	          0x83f801	                              cmp eax, 1	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400beef	            0x7e27	                           jle 0x400bf18	      5015	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0x400bef1	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0x400befc	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0x400bf07	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      5017	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0x400bf12	    0x660f1f440000	                    nop word [rax + rax]	      5017	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0x400bf18	    0x4983bea80200	              cmp qword [r14 + 0x2a8], 0	      5139	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf20	     0xf8efa080000	                           jle 0x400c820	      5139	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf26	    0x4c3b35000000	            cmp r14, qword [0x0400bf2d] 	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf2d	     0xf84cc080000	                            je 0x400c7ff	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf33	    0x8b8424140100	           mov eax, dword [rsp + 0x114] 	      5142	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf3a	      0x2500000200	                        and eax, 0x20000	      5142	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf3f	     0xb8424800000	              or eax, dword [rsp + 0x80]	      5142	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf46	     0xf84d4080000	                            je 0x400c820	      5142	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf4c	    0x8bb424180100	           mov esi, dword [rsp + 0x118] 	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf53	            0x85f6	                           test esi, esi	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf55	     0xf855b160000	                           jne 0x400d5b6	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bf5b	    0x8b8424080100	           mov eax, dword [rsp + 0x108] 	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf62	    0x398424ac0100	           cmp dword [rsp + 0x1ac], eax 	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf69	            0x750a	                           jne 0x400bf75	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf6b	    0x83bc24800000	               cmp dword [rsp + 0x80], 1	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf73	            0x7e20	                           jle 0x400bf95	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf75	      0xe800000000	                          call 0x400bf7a	      5148	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0x400bf7a	     0xb8424200100	             or eax, dword [rsp + 0x120]	      5148	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0x400bf81	     0xf85850f0000	                           jne 0x400cf0c	      5148	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0x400bf87	    0x4983bea80200	              cmp qword [r14 + 0x2a8], 1	      5149	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf8f	     0xf8427200000	                            je 0x400dfbc	      5149	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf95	        0x8b5c2454	            mov ebx, dword [rsp + 0x54] 	      5149	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400bf99	        0x8b6c2478	            mov ebp, dword [rsp + 0x78] 	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bf9d	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfa4	            0x85db	                           test ebx, ebx	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfa6	           0xf9fc3	                                 setg bl	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfa9	    0x229c24c60000	               and bl, byte [rsp + 0xc6]	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfb0	            0x85ed	                           test ebp, ebp	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfb2	        0x89442470	             mov dword [rsp + 0x70], eax	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfb6	            0x7513	                           jne 0x400bfcb	      5186	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfb8	    0xc78424d40000	               mov dword [rsp + 0xd4], 1	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfc3	    0xc74424780100	               mov dword [rsp + 0x78], 1	      5189	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0x400bfcb	    0x448b1d000000	           mov r11d, dword [0x0400bfd2] 	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400bfd2	    0x448ba4243001	          mov r12d, dword [rsp + 0x130] 	      5146	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bfda	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5200	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_89
0x400bfe5	          0x4585db	                         test r11d, r11d	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400bfe8	     0xf84dcebffff	                            je 0x400abca	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400bfee	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400bff2	      0xe800000000	                          call 0x400bff7	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400bff7	    0x8bb424300100	           mov esi, dword [rsp + 0x130] 	      5146	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400bffe	          0x83f801	                              cmp eax, 1	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400c001	          0x4189f4	                           mov r12d, esi	      5146	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400c004	     0xf8ec0ebffff	                           jle 0x400abca	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0x400c00a	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      5196	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0x400c015	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      5197	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0x400c020	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      5195	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0x400c02b	      0xe99aebffff	                           jmp 0x400abca	      5197	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0x400c030	    0x413b86ac0000	            cmp eax, dword [r14 + 0xac] 	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400c037	           0xf9dc0	                                setge al	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400c03a	      0xe996efffff	                           jmp 0x400afd5	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400c03f	              0x90	                                     nop	      5838	screen.c	FUNCTION_28	FOR_1	IF_325
0x400c040	    0x4983bea80200	              cmp qword [r14 + 0x2a8], 0	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c048	           0xf9fc0	                                 setg al	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c04b	    0x228424d40000	               and al, byte [rsp + 0xd4]	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c052	          0x4189c1	                            mov r9d, eax	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c055	     0xf8485030000	                            je 0x400c3e0	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c05b	        0x8b742408	                mov esi, dword [rsp + 8]	      5723	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0x400c05f	      0x8344247c01	               add dword [rsp + 0x7c], 1	      5722	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c064	      0x836c247801	               sub dword [rsp + 0x78], 1	      5721	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c069	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      5722	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0x400c06d	            0x85f6	                           test esi, esi	      5723	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0x400c06f	     0xf8e60150000	                           jle 0x400d5d5	      5723	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0x400c075	    0x458b9e940200	          mov r11d, dword [r14 + 0x294] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400c07c	             0x1f0	                            add eax, esi	      5724	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0x400c07e	        0x8944247c	             mov dword [rsp + 0x7c], eax	      5724	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0x400c082	          0x4585db	                         test r11d, r11d	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400c085	     0xf84d5130000	                            je 0x400d460	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400c08b	          0x4863c6	                         movsxd rax, esi	      5742	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400c08e	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5744	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0x400c095	      0x4803442448	             add rax, qword [rsp + 0x48]	      5742	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400c09a	          0x4585c0	                           test r8d, r8d	      5744	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0x400c09d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5742	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400c0a2	     0xf84e4190000	                            je 0x400da8c	      5744	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0x400c0a8	    0x448b15000000	           mov r10d, dword [0x0400c0af] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400c0af	        0x2974243c	             sub dword [rsp + 0x3c], esi	      5746	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0x400c0b3	    0x29b424b00000	             sub dword [rsp + 0xb0], esi	      5747	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0x400c0ba	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5756	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400c0c2	    0xc74424080000	                  mov dword [rsp + 8], 0	      5755	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400c0ca	          0x4585d2	                         test r10d, r10d	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400c0cd	     0xf85e6190000	                           jne 0x400dab9	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400c0d3	    0x83ac24b00000	               sub dword [rsp + 0xb0], 1	      5782	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400c0db	            0x89ea	                            mov edx, ebp	      5782	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400c0dd	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5783	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400c0e2	      0xe99deeffff	                           jmp 0x400af84	      5783	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400c0e7	    0x660f1f840000	                    nop word [rax + rax]	      5783	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400c0f0	    0x41c787740100	    mov dword [r15 + 0x174], 0x7fffffff 	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400c0fb	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400c100	      0xe97af9ffff	                           jmp 0x400ba7f	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400c105	           0xf1f00	                         nop dword [rax]	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x400c108	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      4294	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x400c110	    0x448b15000000	           mov r10d, dword [0x0400c117] 	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x400c117	           0xfb61f	                   movzx ebx, byte [rdi]	      4294	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x400c11a	          0x4585d2	                         test r10d, r10d	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x400c11d	    0x899c24980100	            mov dword [rsp + 0x198], ebx	      4294	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x400c124	            0x747c	                            je 0x400c1a2	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x400c126	    0x448b0d000000	            mov r9d, dword [0x0400c12d] 	      4299	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400c12d	          0x4585c9	                           test r9d, r9d	      4299	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400c130	     0xf8523140000	                           jne 0x400d559	      4299	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400c136	          0x4863c3	                         movsxd rax, ebx	      4317	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x400c139	     0xfbe80000000	                   movsx eax, byte [rax]	      4317	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x400c140	        0x39442408	                cmp dword [rsp + 8], eax	      4318	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400c144	    0x898424c80000	             mov dword [rsp + 0xc8], eax	      4317	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x400c14b	     0xf8e3c130000	                           jle 0x400d48d	      4318	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400c151	          0x83f801	                              cmp eax, 1	      4320	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x400c154	     0xf8e29140000	                           jle 0x400d583	      4320	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x400c15a	         0xfb64701	               movzx eax, byte [rdi + 1]	      4321	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x400c15e	          0xc1e308	                              shl ebx, 8	      4321	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x400c161	             0x1c3	                            add ebx, eax	      4321	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x400c163	        0x895c2470	             mov dword [rsp + 0x70], ebx	      4304	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400c167	    0x418bbe540200	           mov edi, dword [r14 + 0x254] 	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c16e	            0x85ff	                           test edi, edi	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c170	     0xf84ba0e0000	                            je 0x400d030	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c176	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c17a	            0x85f6	                           test esi, esi	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c17c	     0xf8ec20e0000	                           jle 0x400d044	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400c182	    0x8bbc24c80000	            mov edi, dword [rsp + 0xc8] 	      4347	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c189	    0x488b9424b801	           mov rdx, qword [rsp + 0x1b8] 	      4348	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c191	            0x89f8	                            mov eax, edi	      4347	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c193	          0x83e801	                              sub eax, 1	      4347	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c196	        0x29442408	                sub dword [rsp + 8], eax	      4347	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c19a	          0x4863c7	                         movsxd rax, edi	      4348	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c19d	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	      4348	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x400c1a2	        0x4883c701	                              add rdi, 1	      4352	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x400c1a6	    0x4889bc24b801	            mov qword [rsp + 0x1b8], rdi	      4352	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x400c1ae	      0xe9f8e9ffff	                           jmp 0x400abab	      4352	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x400c1b3	    0xc70424020000	                      mov dword [rsp], 2	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x400c1ba	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3816	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400c1c2	        0x833c2406	                      cmp dword [rsp], 6	      3816	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400c1c6	           0xf94c0	                                 sete al	      3816	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400c1c9	          0x4421e0	                           and eax, r12d	      3816	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x400c1cc	            0x84c0	                             test al, al	      3949	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x400c1ce	     0xf84f5050000	                            je 0x400c7c9	      3949	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x400c1d4	          0x4489e0	                           mov eax, r12d	      3949	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x400c1d7	    0xc70424040000	                      mov dword [rsp], 4	      3951	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x400c1de	            0x84c0	                             test al, al	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x400c1e0	     0xf84cbe8ffff	                            je 0x400aab1	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x400c1e6	    0x418b8eb40100	           mov ecx, dword [r14 + 0x1b4] 	      3958	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c1ed	            0x85c9	                           test ecx, ecx	      3958	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c1ef	     0xf842bf0ffff	                            je 0x400b220	      3958	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c1f5	    0x8bbc24d00000	            mov edi, dword [rsp + 0xd0] 	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c1fc	     0xfb68424a000	           movzx eax, byte [rsp + 0xa0] 	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c204	    0x39bc248c0000	            cmp dword [rsp + 0x8c], edi 	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c20b	           0xf95c2	                                setne dl	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c20e	          0x83e001	                              and eax, 1	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c211	             0x9d0	                             or eax, edx	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c213	    0x8b9424000100	           mov edx, dword [rsp + 0x100] 	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c21a	            0x85d2	                           test edx, edx	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c21c	           0xf94c2	                                 sete dl	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c21f	            0x20d0	                              and al, dl	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c221	            0x89c5	                            mov ebp, eax	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c223	     0xf84f7efffff	                            je 0x400b220	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c229	    0x48638424bc00	         movsxd rax, dword [rsp + 0xbc] 	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99
0x400c231	            0x31db	                            xor ebx, ebx	      3965	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c233	            0x85c0	                           test eax, eax	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99
0x400c235	            0x7422	                            je 0x400c259	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99
0x400c237	    0x458ba6700200	          mov r12d, dword [r14 + 0x270] 	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c23e	    0x8b1c85000000	                  mov ebx, dword [rax*4]	      3969	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	CALL_70
0x400c245	          0x4585e4	                         test r12d, r12d	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c248	            0x740f	                            je 0x400c259	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c24a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c24f	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c253	     0xf84122e0000	                            je 0x400f06b	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x400c259	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c25d	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c262	            0x31d2	                            xor edx, edx	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c264	    0x48c78424b801	              mov qword [rsp + 0x1b8], 0	      3977	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c270	      0xe800000000	                          call 0x400c275	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c275	          0x4c89f7	                            mov rdi, r14	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c278	          0x4889c6	                            mov rsi, rax	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c27b	      0xe800000000	                          call 0x400c280	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c280	    0x48639424a001	        movsxd rdx, dword [rsp + 0x1a0] 	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400c288	            0x89c6	                            mov esi, eax	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c28a	        0x89442408	                mov dword [rsp + 8], eax	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x400c28e	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400c293	          0x4889d0	                            mov rax, rdx	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400c296	     0xf84c8280000	                            je 0x400eb64	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400c29c	            0x85f6	                           test esi, esi	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400c29e	    0xc70424050000	                      mov dword [rsp], 5	      3956	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x400c2a5	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c2ad	        0x410f94c4	                               sete r12b	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c2b1	      0xe903e8ffff	                           jmp 0x400aab9	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c2b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400c2c0	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      4084	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2c4	            0x85ff	                           test edi, edi	      4084	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2c6	     0xf84eff5ffff	                            je 0x400b8bb	      4084	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2cc	    0x48638424a001	        movsxd rax, dword [rsp + 0x1a0] 	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2d4	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2d9	          0x4839c3	                            cmp rbx, rax	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2dc	     0xf8451130000	                            je 0x400d633	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2e2	    0x8bac242c0100	           mov ebp, dword [rsp + 0x12c] 	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2e9	            0x85ed	                           test ebp, ebp	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2eb	     0xf84caf5ffff	                            je 0x400b8bb	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2f1	    0x41399ed80000	            cmp dword [r14 + 0xd8], ebx 	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2f8	      0xb800000000	                              mov eax, 0	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c2fd	           0xf45c7	                         cmovne eax, edi	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c300	        0x89442468	             mov dword [rsp + 0x68], eax	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c304	      0xe9b2f5ffff	                           jmp 0x400b8bb	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400c309	    0x4981ff000000	                              cmp r15, 0	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400c310	    0xc78424800000	               mov dword [rsp + 0x80], 0	      4141	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x400c31b	    0xc78424200100	              mov dword [rsp + 0x120], 0	      4141	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x400c326	     0xf84def6ffff	                            je 0x400ba0a	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400c32c	         0xf1f4000	                         nop dword [rax]	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400c330	       0xfb6442430	           movzx eax, byte [rsp + 0x30] 	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400c335	          0x4531ed	                          xor r13d, r13d	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400c338	          0x4008e8	                              or al, bpl	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400c33b	     0xf85def6ffff	                           jne 0x400ba1f	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400c341	     0xf1f80000000	                         nop dword [rax]	      4103	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x400c348	    0x498b86501500	          mov rax, qword [r14 + 0x1550] 	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c34f	    0x448b05000000	            mov r8d, dword [0x0400c356] 	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c356	    0x4c8bbc24f800	            mov r15, qword [rsp + 0xf8] 	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c35e	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c363	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c368	          0x4885c0	                           test rax, rax	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c36b	          0x4589c5	                           mov r13d, r8d	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x400c36e	           0xf95c2	                                setne dl	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c371	     0xf1f80000000	                         nop dword [rax]	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c378	            0x84d2	                             test dl, dl	      4197	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c37a	            0x740b	                            je 0x400c387	      4197	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c37c	          0x8b480c	              mov ecx, dword [rax + 0xc]	      4198	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c37f	            0x85c9	                           test ecx, ecx	      4198	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c381	     0xf8ed9000000	                           jle 0x400c460	      4198	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c387	            0x31ff	                            xor edi, edi	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c389	          0x4585c0	                           test r8d, r8d	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c38c	      0xbe01000000	                              mov esi, 1	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c391	     0xf8549f7ffff	                           jne 0x400bae0	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c397	          0x4885c0	                           test rax, rax	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c39a	           0xf95c2	                                setne dl	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c39d	            0x84d2	                             test dl, dl	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c39f	            0x7509	                           jne 0x400c3aa	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c3a1	          0x4084ff	                           test dil, dil	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c3a4	     0xf8446f7ffff	                            je 0x400baf0	      4194	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x400c3aa	            0x85f6	                           test esi, esi	      4196	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c3ac	            0x74ca	                            je 0x400c378	      4196	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x400c3ae	    0x8b886c030000	           mov ecx, dword [rax + 0x36c] 	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c3b4	            0x85c9	                           test ecx, ecx	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c3b6	        0x440f45e9	                        cmovne r13d, ecx	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x400c3ba	    0x483d00000000	                              cmp rax, 0	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3c0	            0x74d5	                            je 0x400c397	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3c2	            0x84d2	                             test dl, dl	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3c4	     0xf8486000000	                            je 0x400c450	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3ca	          0x488b00	                    mov rax, qword [rax]	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3cd	            0xebc8	                           jmp 0x400c397	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3cf	              0x90	                                     nop	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x400c3d0	    0x496386940000	         movsxd rax, dword [r14 + 0x94] 	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400c3d7	      0xe909f1ffff	                           jmp 0x400b4e5	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400c3dc	         0xf1f4000	                         nop dword [rax]	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400c3e0	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400c3e4	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5331	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0x400c3e9	            0x89ea	                            mov edx, ebp	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c3eb	      0x836c247801	               sub dword [rsp + 0x78], 1	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c3f0	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c3f7	    0x41b901000000	                              mov r9d, 1	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c3fd	            0x85c0	                           test eax, eax	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c3ff	           0xf9fc0	                                 setg al	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c402	            0x21c1	                            and ecx, eax	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c404	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c409	      0x4889442428	             mov qword [rsp + 0x28], rax	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c40e	      0xe971ebffff	                           jmp 0x400af84	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c413	       0xf1f440000	                   nop dword [rax + rax]	      5805	screen.c	FUNCTION_28	FOR_1	ELSE_115
0x400c418	    0x4d8dbd080200	                  lea r15, [r13 + 0x208]	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c41f	      0x40886c2430	              mov byte [rsp + 0x30], bpl	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c424	    0xc74424400000	               mov dword [rsp + 0x40], 0	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c42c	      0xe908f5ffff	                           jmp 0x400b939	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c431	     0xf1f80000000	                         nop dword [rax]	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c438	      0x448b542408	               mov r10d, dword [rsp + 8]	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x400c43d	    0xc70424060000	                      mov dword [rsp], 6	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c444	          0x4585d2	                         test r10d, r10d	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c447	        0x410f94c4	                               sete r12b	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c44b	      0xe97de6ffff	                           jmp 0x400aacd	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c450	            0x31c0	                            xor eax, eax	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c452	      0xe94affffff	                           jmp 0x400c3a1	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c457	    0x660f1f840000	                    nop word [rax + rax]	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c460	            0x89d7	                            mov edi, edx	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c462	            0x31f6	                            xor esi, esi	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c464	      0xe945ffffff	                           jmp 0x400c3ae	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c469	     0xf1f80000000	                         nop dword [rax]	      3992	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x400c470	          0x4489ee	                           mov esi, r13d	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400c473	    0x8bbc24c00000	            mov edi, dword [rsp + 0xc0] 	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400c47a	      0xe800000000	                          call 0x400c47f	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400c47f	    0xc68424c60000	                mov byte [rsp + 0xc6], 0	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400c487	          0x4189c4	                           mov r12d, eax	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x400c48a	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4234	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400c492	      0xe9d6e6ffff	                           jmp 0x400ab6d	      4234	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400c497	    0x660f1f840000	                    nop word [rax + rax]	      4234	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x400c4a0	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4a4	    0xff1500000000	                 call qword [0x0400c4aa]	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4aa	          0x83f801	                              cmp eax, 1	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4ad	     0xf8e85eaffff	                           jle 0x400af38	      5674	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4b3	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5677	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4b7	    0x8b3500000000	            mov esi, dword [0x0400c4bd] 	      5679	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4bd	    0x488b15000000	            mov rdx, qword [0x0400c4c4] 	      5681	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4c4	          0x8d4801	                      lea ecx, [rax + 1]	      5677	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c4c7	            0x85f6	                           test esi, esi	      5679	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4c9	            0x89c8	                            mov eax, ecx	      5681	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4cb	     0xf84d7100000	                            je 0x400d5a8	      5679	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4d1	        0xc6040200	                 mov byte [rdx + rax], 0	      5681	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0x400c4d5	        0x833c2404	                      cmp dword [rsp], 4	      5685	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4d9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5690	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4de	    0x4863b424a001	        movsxd rsi, dword [rsp + 0x1a0] 	      5693	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400c4e6	        0x410f9fc1	                                setg r9b	      5685	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4ea	          0x4489ca	                            mov edx, r9d	      5687	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4ed	            0x21ea	                            and edx, ebp	      5687	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4ef	          0x80fa01	                               cmp dl, 1	      5690	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4f2	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	      5690	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4f6	          0x4889c7	                            mov rdi, rax	      5690	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4f9	      0x4889442428	             mov qword [rsp + 0x28], rax	      5690	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0x400c4fe	          0x4889f0	                            mov rax, rsi	      5693	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400c501	          0x4839f7	                            cmp rdi, rsi	      5693	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400c504	     0xf844a170000	                            je 0x400dc54	      5693	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400c50a	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5696	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0x400c511	          0x4585c0	                           test r8d, r8d	      5696	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0x400c514	     0xf8545eaffff	                           jne 0x400af5f	      5696	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0x400c51a	      0x8344243c01	               add dword [rsp + 0x3c], 1	      5678	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c51f	        0x894c246c	             mov dword [rsp + 0x6c], ecx	      5677	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c523	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5677	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c527	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5677	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0x400c52c	      0x8344246c01	               add dword [rsp + 0x6c], 1	      5714	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c531	      0x8344243c01	               add dword [rsp + 0x3c], 1	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c536	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c541	            0x85c0	                           test eax, eax	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c543	           0xf9fc0	                                 setg al	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c546	          0x4531c0	                            xor r8d, r8d	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c549	            0x21c1	                            and ecx, eax	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c54b	      0xe934eaffff	                           jmp 0x400af84	      5715	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0x400c550	      0x6644892470	            mov word [rax + rsi*2], r12w	      5671	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0x400c555	      0xe9d0e9ffff	                           jmp 0x400af2a	      5671	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0x400c55a	    0x660f1f440000	                    nop word [rax + rax]	      5671	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0x400c560	          0x4c89f7	                            mov rdi, r14	      3829	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x400c563	      0xe800000000	                          call 0x400c568	      3829	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x400c568	            0x85c0	                           test eax, eax	      3829	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x400c56a	     0xf8427ecffff	                            je 0x400b197	      3829	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x400c570	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c577	     0x38424d00000	             add eax, dword [rsp + 0xd0]	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c57e	    0x3b84248c0000	            cmp eax, dword [rsp + 0x8c] 	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c585	    0x8b1d00000000	            mov ebx, dword [0x0400c58b] 	      3838	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_54
0x400c58b	            0x750c	                           jne 0x400c599	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c58d	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c591	            0x85c0	                           test eax, eax	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c593	     0xf8eb12b0000	                           jle 0x400f14a	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x400c599	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3837	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x400c5a1	    0x418b86480500	           mov eax, dword [r14 + 0x548] 	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5a8	          0x4531e4	                          xor r12d, r12d	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5ab	            0x85c0	                           test eax, eax	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5ad	     0xf8507020000	                           jne 0x400c7ba	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5b3	    0xc74424080200	                  mov dword [rsp + 8], 2	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5bb	    0xc70424030000	                      mov dword [rsp], 3	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5c2	      0xe9eae4ffff	                           jmp 0x400aab1	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5c7	    0x660f1f840000	                    nop word [rax + rax]	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c5d0	    0x4c3b35000000	            cmp r14, qword [0x0400c5d7] 	      2629	screen.c	FUNCTION_24
0x400c5d7	    0x418b96c80100	           mov edx, dword [r14 + 0x1c8] 	      2628	screen.c	FUNCTION_24
0x400c5de	    0x488b0d000000	            mov rcx, qword [0x0400c5e5] 	      2628	screen.c	FUNCTION_24
0x400c5e5	     0xf8535e4ffff	                           jne 0x400aa20	      2629	screen.c	FUNCTION_24
0x400c5eb	          0x4885c9	                           test rcx, rcx	      2629	screen.c	FUNCTION_24
0x400c5ee	      0xb801000000	                              mov eax, 1	      2629	screen.c	FUNCTION_24
0x400c5f3	     0xf8429e4ffff	                            je 0x400aa22	      2629	screen.c	FUNCTION_24
0x400c5f9	      0xe922e4ffff	                           jmp 0x400aa20	      2629	screen.c	FUNCTION_24
0x400c5fe	            0x6690	                                     nop	      2629	screen.c	FUNCTION_24
0x400c600	      0xc644243000	                mov byte [rsp + 0x30], 0	      2629	screen.c	FUNCTION_24
0x400c605	    0xc74424400100	               mov dword [rsp + 0x40], 1	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400c60d	    0x41bf00000000	                             mov r15d, 0	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400c613	      0xe92cf3ffff	                           jmp 0x400b944	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400c618	     0xf1f84000000	                   nop dword [rax + rax]	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400c620	    0xc74424080000	                  mov dword [rsp + 8], 0	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x400c628	    0xc70424070000	                      mov dword [rsp], 7	      4037	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x400c62f	            0x31db	                            xor ebx, ebx	      4047	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	ELSE_31
0x400c631	      0xe9dae4ffff	                           jmp 0x400ab10	      4047	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	ELSE_31
0x400c636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4047	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	ELSE_31
0x400c640	        0x8b542468	            mov edx, dword [rsp + 0x68] 	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c644	            0x85d2	                           test edx, edx	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c646	            0x7413	                            je 0x400c65b	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c648	    0x486394249c01	        movsxd rdx, dword [rsp + 0x19c] 	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c650	      0x4839542448	            cmp qword [rsp + 0x48], rdx 	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c655	     0xf840e190000	                            je 0x400df69	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c65b	          0x83f801	                              cmp eax, 1	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c65e	     0xf85f3eeffff	                           jne 0x400b557	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c664	    0x418bae700200	           mov ebp, dword [r14 + 0x270] 	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c66b	            0x85ed	                           test ebp, ebp	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c66d	            0x740f	                            je 0x400c67e	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c66f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c674	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c678	     0xf848e250000	                            je 0x400ec0c	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c67e	    0x448b9c24bc00	           mov r11d, dword [rsp + 0xbc] 	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c686	          0x4585db	                         test r11d, r11d	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c689	     0xf85c8eeffff	                           jne 0x400b557	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c68f	    0x83bc24a40000	               cmp dword [rsp + 0xa4], 1	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c697	     0xf8fbaeeffff	                            jg 0x400b557	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400c69d	    0x458b9e540200	          mov r11d, dword [r14 + 0x254] 	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0x400c6a4	          0x4585db	                         test r11d, r11d	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0x400c6a7	     0xf844d1d0000	                            je 0x400e3fa	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0x400c6ad	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0x400c6b2	          0x4585d2	                         test r10d, r10d	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0x400c6b5	     0xf88642b0000	                            js 0x400f21f	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0x400c6bb	        0x8b5c246c	            mov ebx, dword [rsp + 0x6c] 	      5404	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0x400c6bf	    0x488b05000000	            mov rax, qword [0x0400c6c6] 	      5404	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0x400c6c6	        0xc6041820	              mov byte [rax + rbx], 0x20	      5404	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0x400c6ca	    0x8b0500000000	            mov eax, dword [0x0400c6d0] 	      5406	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6d0	            0x85c0	                           test eax, eax	      5406	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6d2	            0x740e	                            je 0x400c6e2	      5406	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6d4	    0x488b05000000	            mov rax, qword [0x0400c6db] 	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6db	    0xc70498000000	              mov dword [rax + rbx*4], 0	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6e2	    0x458b9e540200	          mov r11d, dword [r14 + 0x254] 	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0x400c6e9	      0x448b4c2468	            mov r9d, dword [rsp + 0x68] 	      5411	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c6ee	          0x4585c9	                           test r9d, r9d	      5411	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c6f1	     0xf8521150000	                           jne 0x400dc18	      5411	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c6f7	    0x498b86501500	          mov rax, qword [r14 + 0x1550] 	      5416	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c6fe	    0x448b15000000	           mov r10d, dword [0x0400c705] 	      5415	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c705	        0x4c8d49ff	                       lea r9, [rcx - 1]	      5415	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c709	    0x48632d000000	         movsxd rbp, dword [0x0400c710] 	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c710	          0x4885c0	                           test rax, rax	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c713	          0x4589d4	                          mov r12d, r10d	      5415	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0x400c716	           0xf95c2	                                setne dl	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c719	            0xeb30	                           jmp 0x400c74b	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c71b	       0xf1f440000	                   nop dword [rax + rax]	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c720	    0x4881f9000000	                              cmp rcx, 0	      5433	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c727	            0x740b	                            je 0x400c734	      5433	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c729	            0x84d2	                             test dl, dl	      5433	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c72b	     0xf84c11a0000	                            je 0x400e1f2	      5433	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c731	          0x488b00	                    mov rax, qword [rax]	      5434	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c734	          0x4885c0	                           test rax, rax	      5434	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c737	           0xf95c2	                                setne dl	      5434	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0x400c73a	          0x4584c0	                           test r8b, r8b	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c73d	            0x7508	                           jne 0x400c747	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c73f	            0x84d2	                             test dl, dl	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c741	     0xf84d1140000	                            je 0x400dc18	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c747	            0x85f6	                           test esi, esi	      5420	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c749	            0x7529	                           jne 0x400c774	      5420	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c74b	            0x84d2	                             test dl, dl	      5421	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c74d	            0x740d	                            je 0x400c75c	      5421	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c74f	        0x448b400c	              mov r8d, dword [rax + 0xc]	      5422	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c753	          0x4585c0	                           test r8d, r8d	      5422	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c756	     0xf8e0a1b0000	                           jle 0x400e266	      5422	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0x400c75c	          0x4c39cd	                             cmp rbp, r9	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c75f	     0xf84ef230000	                            je 0x400eb54	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c765	          0x4885c0	                           test rax, rax	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c768	           0xf95c2	                                setne dl	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c76b	     0xf84a7140000	                            je 0x400dc18	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c771	          0x4531c0	                            xor r8d, r8d	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c774	      0xbe01000000	                              mov esi, 1	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400c779	    0x4863b8780300	        movsxd rdi, dword [rax + 0x378] 	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c780	    0x488d88080200	                  lea rcx, [rax + 0x208]	      5429	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	ELSE_98
0x400c787	          0x4939f9	                             cmp r9, rdi	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c78a	            0x7594	                           jne 0x400c720	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c78c	    0x4881f9000000	                              cmp rcx, 0	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c793	     0xf84c3230000	                            je 0x400eb5c	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c799	    0x8bb880030000	           mov edi, dword [rax + 0x380] 	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c79f	            0x85ff	                           test edi, edi	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c7a1	            0x7586	                           jne 0x400c729	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c7a3	    0x448ba0680300	          mov r12d, dword [rax + 0x368] 	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c7aa	      0xe971ffffff	                           jmp 0x400c720	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c7af	              0x90	                                     nop	      5431	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400c7b0	      0xb801000000	                              mov eax, 1	      5342	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400c7b5	      0xe98aedffff	                           jmp 0x400b544	      5342	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0x400c7ba	    0xc70424030000	                      mov dword [rsp], 3	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7c1	    0xc74424080200	                  mov dword [rsp + 8], 2	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7c9	        0x833c2404	                      cmp dword [rsp], 4	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7cd	           0xf94c0	                                 sete al	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7d0	          0x4421e0	                           and eax, r12d	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7d3	      0xe906faffff	                           jmp 0x400c1de	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7d8	     0xf1f84000000	                   nop dword [rax + rax]	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400c7e0	    0x8bac24f40000	            mov ebp, dword [rsp + 0xf4] 	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7e7	          0x4531e4	                          xor r12d, r12d	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7ea	      0x4489642430	            mov dword [rsp + 0x30], r12d	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7ef	            0x85ed	                           test ebp, ebp	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7f1	    0x440f45a4240c	        cmovne r12d, dword [rsp + 0x10c]	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7fa	      0xe96ee3ffff	                           jmp 0x400ab6d	      4254	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x400c7ff	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400c804	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400c808	     0xf8525f7ffff	                           jne 0x400bf33	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400c80e	    0x498b86a00200	           mov rax, qword [r14 + 0x2a0] 	       890	screen.c	FUNCTION_15	IF_1
0x400c815	          0x803800	                       cmp byte [rax], 0	       890	screen.c	FUNCTION_15	IF_1
0x400c818	     0xf8566270000	                           jne 0x400ef84	       890	screen.c	FUNCTION_15	IF_1
0x400c81e	            0x6690	                                     nop	       890	screen.c	FUNCTION_15	IF_1
0x400c820	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	       890	screen.c	FUNCTION_15	IF_1
0x400c824	    0xc78424d40000	               mov dword [rsp + 0xd4], 0	      5206	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c82f	    0xc78424080100	              mov dword [rsp + 0x108], 0	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c83a	            0x85c9	                           test ecx, ecx	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c83c	           0xf9fc3	                                 setg bl	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c83f	    0x229c24c60000	               and bl, byte [rsp + 0xc6]	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c846	      0xe97fe3ffff	                           jmp 0x400abca	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c84b	       0xf1f440000	                   nop dword [rax + rax]	      5205	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0x400c850	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400c854	      0x2500ff0000	                         and eax, 0xff00	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400c859	      0x3d008e0000	                         cmp eax, 0x8e00	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400c85e	     0xf84dd0f0000	                            je 0x400d841	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400c864	       0xfb67c2470	           movzx edi, byte [rsp + 0x70] 	      5643	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400c869	    0x488b05000000	            mov rax, qword [0x0400c870] 	      5643	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400c870	        0x40883c30	               mov byte [rax + rsi], dil	      5643	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400c874	      0xe997e6ffff	                           jmp 0x400af10	      5643	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400c879	     0xf1f80000000	                         nop dword [rax]	      5643	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0x400c880	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      4575	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177
0x400c887	    0xc78424b00100	              mov dword [rsp + 0x1b0], 1	      4571	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400c892	            0x85c0	                           test eax, eax	      4575	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177
0x400c894	     0xf85750f0000	                           jne 0x400d80f	      4575	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177
0x400c89a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4589	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400c89f	      0x482b5c2418	             sub rbx, qword [rsp + 0x18]	      4589	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x400c8a4	          0x4885db	                           test rbx, rbx	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8a7	     0xf8ed1000000	                           jle 0x400c97e	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8ad	    0xf68424f40000	               test byte [rsp + 0xf4], 1	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8b5	     0xf84c3000000	                            je 0x400c97e	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8bb	    0x8b0500000000	            mov eax, dword [0x0400c8c1] 	      4594	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8c1	    0x488bb4246001	           mov rsi, qword [rsp + 0x160] 	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x400c8c9	          0x8d7bff	                      lea edi, [rbx - 1]	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x400c8cc	            0x31d2	                            xor edx, edx	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x400c8ce	    0xc70500000000	               mov dword [0x0400c8d8], 0	      4595	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8d8	        0x89442410	             mov dword [rsp + 0x10], eax	      4594	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c8dc	      0xe800000000	                          call 0x400c8e1	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x400c8e1	    0x448b1d000000	           mov r11d, dword [0x0400c8e8] 	      4603	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c8e8	    0x8984240c0100	            mov dword [rsp + 0x10c], eax	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x400c8ef	          0x4585db	                         test r11d, r11d	      4603	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c8f2	     0xf8404110000	                            je 0x400d9fc	      4603	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c8f8	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4605	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c8fc	    0xc78424f40000	               mov dword [rsp + 0xf4], 0	      4606	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c907	    0xc78050020000	              mov dword [rax + 0x250], 1	      4605	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x400c911	    0x448b88540200	           mov r9d, dword [rax + 0x254] 	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x400c918	      0xb800000000	                              mov eax, 0	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x400c91d	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4617	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x400c921	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4617	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x400c926	          0x4585c9	                           test r9d, r9d	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x400c929	     0xf448424f400	           cmove eax, dword [rsp + 0xf4]	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x400c931	            0x31d2	                            xor edx, edx	      4617	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x400c933	    0x898424f40000	             mov dword [rsp + 0xf4], eax	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x400c93a	      0xe800000000	                          call 0x400c93f	      4617	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x400c93f	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      4620	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x400c944	      0x4889442418	             mov qword [rsp + 0x18], rax	      4617	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x400c949	          0x4801d8	                            add rax, rbx	      4618	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c94c	      0x4889442410	             mov qword [rsp + 0x10], rax	      4618	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x400c951	          0x4585d2	                         test r10d, r10d	      4620	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x400c954	     0xf850e180000	                           jne 0x400e168	      4620	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x400c95a	    0x448ba4240c01	          mov r12d, dword [rsp + 0x10c] 	      4621	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x400c962	    0x448b84249801	           mov r8d, dword [rsp + 0x198] 	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x400c96a	    0xc78424140100	              mov dword [rsp + 0x114], 0	      4628	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x400c975	          0x4585c0	                           test r8d, r8d	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x400c978	     0xf855b180000	                           jne 0x400e1d9	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x400c97e	    0x8bbc241c0100	           mov edi, dword [rsp + 0x11c] 	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c985	            0x85ff	                           test edi, edi	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c987	     0xf8493010000	                            je 0x400cb20	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c98d	    0x486384245801	        movsxd rax, dword [rsp + 0x158] 	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c995	          0x4839c3	                            cmp rbx, rax	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c998	     0xf8c82010000	                            jl 0x400cb20	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c99e	    0x486384247401	        movsxd rax, dword [rsp + 0x174] 	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c9a6	          0x4839c3	                            cmp rbx, rax	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c9a9	     0xf8e71010000	                           jle 0x400cb20	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400c9af	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4645	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x400c9b3	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9ba	    0xc78424240100	              mov dword [rsp + 0x124], 0	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9c5	            0x85f6	                           test esi, esi	      4645	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x400c9c7	    0x440f44a4240c	         cmove r12d, dword [rsp + 0x10c]	      4645	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x400c9d0	            0x85ff	                           test edi, edi	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9d2	     0xf847c010000	                            je 0x400cb54	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9d8	    0x8b8c24f40000	            mov ecx, dword [rsp + 0xf4] 	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9df	            0x85c9	                           test ecx, ecx	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9e1	     0xf85cc230000	                           jne 0x400edb3	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9e7	    0x8b0500000000	            mov eax, dword [0x0400c9ed] 	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400c9ed	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4664	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_67
0x400c9f2	    0xc78424b40100	          mov dword [rsp + 0x1b4], 0x2e 	      4655	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400c9fd	            0x85c0	                           test eax, eax	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400c9ff	        0x4c8d56ff	                      lea r10, [rsi - 1]	      4664	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_67
0x400ca03	            0x741a	                            je 0x400ca1f	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca05	    0x8bbc24c80000	            mov edi, dword [rsp + 0xc8] 	      4659	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca0c	          0x4989f2	                            mov r10, rsi	      4659	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca0f	          0x4863c7	                         movsxd rax, edi	      4659	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca12	          0x4929c2	                            sub r10, rax	      4659	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca15	            0x89f8	                            mov eax, edi	      4660	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca17	          0x83e801	                              sub eax, 1	      4660	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca1a	            0x4898	                                    cdqe	      4660	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca1c	          0x4829c3	                            sub rbx, rax	      4660	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x400ca1f	          0x4d89d1	                             mov r9, r10	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca22	      0x4c2b4c2418	              sub r9, qword [rsp + 0x18]	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca27	    0x486384248c01	        movsxd rax, dword [rsp + 0x18c] 	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca2f	          0x4d89d3	                            mov r11, r10	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca32	          0x4c89ce	                             mov rsi, r9	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca35	          0x4829c6	                            sub rsi, rax	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca38	            0x7808	                            js 0x400ca42	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca3a	    0x4c8d9c343002	           lea r11, [rsp + rsi + 0x230] 	      4669	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x400ca42	    0x448b84245c01	           mov r8d, dword [rsp + 0x15c] 	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca4a	    0x488d9424b401	                  lea rdx, [rsp + 0x1b4]	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca52	          0x4c89de	                            mov rsi, r11	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca55	          0x4c89f7	                            mov rdi, r14	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca58	      0xb900000000	                              mov ecx, 0	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca5d	    0x44290d000000	             sub dword [0x0400ca64], r9d	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400ca64	    0x4c899424a800	             mov qword [rsp + 0xa8], r10	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400ca6c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400ca71	      0x4c895c2440	             mov qword [rsp + 0x40], r11	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca76	      0xe800000000	                          call 0x400ca7b	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x400ca7b	    0x8b9424b40100	           mov edx, dword [rsp + 0x1b4] 	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400ca82	          0x8d3c18	                    lea edi, [rax + rbx]	      4675	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400ca85	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400ca8a	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400ca8f	    0x89bc24580100	            mov dword [rsp + 0x158], edi	      4675	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400ca96	    0x4c8b9424a800	            mov r10, qword [rsp + 0xa8] 	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400ca9e	          0x83fa2e	                           cmp edx, 0x2e	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400caa1	     0xf8450250000	                            je 0x400eff7	      4679	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400caa7	    0xf60500000000	           test byte [0x0400caae], 0x10 	      4680	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400caae	            0x740f	                            je 0x400cabf	      4680	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400cab0	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4681	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400cab5	        0x493b5e38	            cmp rbx, qword [r14 + 0x38] 	      4681	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400cab9	     0xf8411250000	                            je 0x400efd0	      4681	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400cabf	    0x8b0495000000	                  mov eax, dword [rdx*4]	      4701	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x400cac6	    0x898424240100	            mov dword [rsp + 0x124], eax	      4701	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x400cacd	    0x8b0500000000	            mov eax, dword [0x0400cad3] 	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x400cad3	            0x85c0	                           test eax, eax	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x400cad5	            0x7e49	                           jle 0x400cb20	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x400cad7	          0x4d39da	                            cmp r10, r11	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cada	     0xf840e290000	                            je 0x400f3ee	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cae0	    0x488d94243002	                  lea rdx, [rsp + 0x230]	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cae8	    0x48638c248001	        movsxd rcx, dword [rsp + 0x180] 	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400caf0	          0x4c89db	                            mov rbx, r11	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400caf3	          0x4829d3	                            sub rbx, rdx	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400caf6	          0x4863d0	                         movsxd rdx, eax	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400caf9	          0x4801da	                            add rdx, rbx	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cafc	          0x4839ca	                            cmp rdx, rcx	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400caff	     0xf8ce9280000	                            jl 0x400f3ee	      4706	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb05	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4710	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb0a	            0x29c8	                            sub eax, ecx	      4711	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb0c	             0x1d8	                            add eax, ebx	      4711	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb0e	    0x890500000000	            mov dword [0x0400cb14], eax 	      4711	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb14	        0x488d5701	                      lea rdx, [rdi + 1]	      4710	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb18	    0x488915000000	            mov qword [0x0400cb1f], rdx 	      4710	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb1f	              0x90	                                     nop	      4710	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x400cb20	    0x8b8424240100	           mov eax, dword [rsp + 0x124] 	      4720	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194
0x400cb27	            0x85c0	                           test eax, eax	      4720	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194
0x400cb29	     0xf84f2040000	                            je 0x400d021	      4720	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194
0x400cb2f	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      4722	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	IF_195
0x400cb33	            0x85c0	                           test eax, eax	      4722	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	IF_195
0x400cb35	     0xf85d4040000	                           jne 0x400d00f	      4722	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	IF_195
0x400cb3b	    0x8bb424240100	           mov esi, dword [rsp + 0x124] 	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x400cb42	          0x4489e7	                           mov edi, r12d	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x400cb45	      0xe800000000	                          call 0x400cb4a	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x400cb4a	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x400cb51	          0x4189c4	                           mov r12d, eax	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x400cb54	    0x418b86300200	           mov eax, dword [r14 + 0x230] 	      4732	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400cb5b	            0x85c0	                           test eax, eax	      4732	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400cb5d	            0x7408	                            je 0x400cb67	      4732	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400cb5f	            0x39fd	                            cmp ebp, edi	      4732	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400cb61	     0xf84631d0000	                            je 0x400e8ca	      4732	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400cb67	    0x418bae340200	           mov ebp, dword [r14 + 0x234] 	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb6e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb73	            0x85ed	                           test ebp, ebp	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb75	      0x4889442448	             mov qword [rsp + 0x48], rax	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb7a	            0x7444	                            je 0x400cbc0	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb7c	    0x81ffa0000000	                           cmp edi, 0xa0	      4772	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb82	     0xf8471160000	                            je 0x400e1f9	      4772	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb88	    0x8b9c249c0000	            mov ebx, dword [rsp + 0x9c] 	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb8f	            0x85db	                           test ebx, ebx	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb91	            0x741a	                            je 0x400cbad	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb93	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb97	      0x3da0000000	                           cmp eax, 0xa0	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cb9c	     0xf840d1b0000	                            je 0x400e6af	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cba2	      0x3d2f200000	                         cmp eax, 0x202f	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cba7	     0xf84021b0000	                            je 0x400e6af	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cbad	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4774	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cbb2	          0x83ff20	                           cmp edi, 0x20	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cbb5	      0x4889442448	             mov qword [rsp + 0x48], rax	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cbba	     0xf84ca180000	                            je 0x400e48a	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400cbc0	    0x486384243401	        movsxd rax, dword [rsp + 0x134] 	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbc8	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbcd	     0xf848bf1ffff	                            je 0x400bd5e	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbd3	      0x4803442418	             add rax, qword [rsp + 0x18]	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbd8	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbdd	     0xf867bf1ffff	                           jbe 0x400bd5e	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbe3	          0x83ff20	                           cmp edi, 0x20	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbe6	     0xf8572f1ffff	                           jne 0x400bd5e	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbec	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      4802	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x400cbf1	    0x8b0500000000	            mov eax, dword [0x0400cbf7] 	      4801	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbf7	          0x4585d2	                         test r10d, r10d	      4802	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x400cbfa	        0x89442470	             mov dword [rsp + 0x70], eax	      4801	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cbfe	    0x898424980100	            mov dword [rsp + 0x198], eax	      4801	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x400cc05	            0x751d	                           jne 0x400cc24	      4802	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x400cc07	    0x8b0500000000	            mov eax, dword [0x0400cc0d] 	      4805	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205	CALL_137
0x400cc0d	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x400cc15	    0xc74424540100	               mov dword [rsp + 0x54], 1	      4804	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x400cc1d	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4805	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205	CALL_137
0x400cc24	    0x448b0d000000	            mov r9d, dword [0x0400cc2b] 	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc2b	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc2f	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4817	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	ELSE_72
0x400cc3a	          0x4585c9	                           test r9d, r9d	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc3d	     0xf841bf1ffff	                            je 0x400bd5e	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc43	      0xe800000000	                          call 0x400cc48	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc48	          0x83f801	                              cmp eax, 1	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc4b	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc52	     0xf8e06f1ffff	                           jle 0x400bd5e	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x400cc58	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      4813	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc63	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc6e	      0xbfc0000000	                           mov edi, 0xc0	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc73	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4812	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc7e	      0xe9dbf0ffff	                           jmp 0x400bd5e	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc83	       0xf1f440000	                   nop dword [rax + rax]	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x400cc88	    0x8b1d00000000	            mov ebx, dword [0x0400cc8e] 	      3792	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76	CALL_47
0x400cc8e	        0x8944245c	             mov dword [rsp + 0x5c], eax	      3792	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76	CALL_47
0x400cc92	          0x4531e4	                          xor r12d, r12d	      3792	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76	CALL_47
0x400cc95	    0xc70424010000	                      mov dword [rsp], 1	      3786	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x400cc9c	    0xc74424080100	                  mov dword [rsp + 8], 1	      3790	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400cca4	        0x833c2404	                      cmp dword [rsp], 4	      3790	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400cca8	           0xf94c0	                                 sete al	      3790	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400ccab	          0x4421e0	                           and eax, r12d	      3790	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x400ccae	    0x418bb6480500	           mov esi, dword [r14 + 0x548] 	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccb5	            0x85f6	                           test esi, esi	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccb7	     0xf8421f5ffff	                            je 0x400c1de	      3945	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccbd	            0x84c0	                             test al, al	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccbf	     0xf84fdf4ffff	                            je 0x400c1c2	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccc5	      0xe930e5ffff	                           jmp 0x400b1fa	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccca	    0x660f1f440000	                    nop word [rax + rax]	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccd0	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3946	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x400ccd5	    0x458b86a00000	            mov r8d, dword [r14 + 0xa0] 	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccdc	    0x41b902000000	                              mov r9d, 2	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400cce2	    0x8b8c248c0000	            mov ecx, dword [rsp + 0x8c] 	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400cce9	      0xba20000000	                           mov edx, 0x20	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccee	      0xbe40000000	                           mov esi, 0x40	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccf3	          0x4c89f7	                            mov rdi, r14	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccf6	        0x4c891424	                    mov qword [rsp], r10	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccfa	      0xe8f187ffff	                   call sym.win_draw_end	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0x400ccff	    0x458b96b00000	           mov r10d, dword [r14 + 0xb0] 	      6568	screen.c	FUNCTION_38	IF_1
0x400cd06	          0x4585d2	                         test r10d, r10d	      6568	screen.c	FUNCTION_38	IF_1
0x400cd09	        0x4c8b1424	                    mov r10, qword [rsp]	      6568	screen.c	FUNCTION_38	IF_1
0x400cd0d	     0xf85590c0000	                           jne 0x400d96c	      6568	screen.c	FUNCTION_38	IF_1
0x400cd13	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      5827	screen.c	FUNCTION_28	FOR_1	IF_324
0x400cd1a	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      5827	screen.c	FUNCTION_28	FOR_1	IF_324
0x400cd21	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      5881	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400cd28	          0x83c001	                              add eax, 1	      5881	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400cd2b	    0x898424d00000	             mov dword [rsp + 0xd0], eax	      5881	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0x400cd32	          0x4c89d7	                            mov rdi, r10	      5984	screen.c	FUNCTION_28	IF_336	CALL_208
0x400cd35	      0xe800000000	                          call 0x400cd3a	      5984	screen.c	FUNCTION_28	IF_336	CALL_208
0x400cd3a	          0x803800	                       cmp byte [rax], 0	      5984	screen.c	FUNCTION_28	IF_336	CALL_208
0x400cd3d	            0x751a	                           jne 0x400cd59	      5984	screen.c	FUNCTION_28	IF_336	CALL_208
0x400cd3f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5986	screen.c	FUNCTION_28	IF_336
0x400cd44	    0xc70500000000	               mov dword [0x0400cd4e], 0	      5987	screen.c	FUNCTION_28	IF_336
0x400cd4e	        0x4883c001	                              add rax, 1	      5986	screen.c	FUNCTION_28	IF_336
0x400cd52	    0x488905000000	            mov qword [0x0400cd59], rax 	      5986	screen.c	FUNCTION_28	IF_336
0x400cd59	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      5991	screen.c	FUNCTION_28	CALL_209
0x400cd61	      0xe800000000	                          call 0x400cd66	      5991	screen.c	FUNCTION_28	CALL_209
0x400cd66	      0xe90dd3ffff	                           jmp 0x400a078	      5992	screen.c	FUNCTION_28
0x400cd6b	       0xf1f440000	                   nop dword [rax + rax]	      5992	screen.c	FUNCTION_28
0x400cd70	    0x418b96940000	            mov edx, dword [r14 + 0x94] 	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400cd77	            0x85d2	                           test edx, edx	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400cd79	           0xf9fc2	                                 setg dl	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400cd7c	      0xe9dcdeffff	                           jmp 0x400ac5d	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400cd81	     0xf1f80000000	                         nop dword [rax]	      5281	screen.c	FUNCTION_28	FOR_1	IF_257
0x400cd88	    0xf60500000000	           test byte [0x0400cd8f], 0x10 	      5243	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cd8f	     0xf848fdeffff	                            je 0x400ac24	      5243	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cd95	    0x448b05000000	            mov r8d, dword [0x0400cd9c] 	      5244	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cd9c	          0x4585c0	                           test r8d, r8d	      5244	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cd9f	     0xf857fdeffff	                           jne 0x400ac24	      5244	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cda5	      0xe800000000	                          call 0x400cdaa	      5245	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_176
0x400cdaa	            0x85c0	                           test eax, eax	      5246	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cdac	     0xf8472deffff	                            je 0x400ac24	      5246	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cdb2	      0x807c242000	                cmp byte [rsp + 0x20], 0	      5246	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cdb7	     0xf8467deffff	                            je 0x400ac24	      5246	screen.c	FUNCTION_28	FOR_1	IF_251
0x400cdbd	    0x8b0500000000	            mov eax, dword [0x0400cdc3] 	      5250	screen.c	FUNCTION_28	FOR_1	IF_251	IF_252
0x400cdc3	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5250	screen.c	FUNCTION_28	FOR_1	IF_251	IF_252
0x400cdc8	     0xf84c42b0000	                            je 0x400f992	      5250	screen.c	FUNCTION_28	FOR_1	IF_251	IF_252
0x400cdce	    0x898424b40100	            mov dword [rsp + 0x1b4], eax	      5253	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92
0x400cdd5	    0x486305000000	         movsxd rax, dword [0x0400cddc] 	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cddc	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cde1	          0x4839c3	                            cmp rbx, rax	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cde4	     0xf8c22260000	                            jl 0x400f40c	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cdea	    0x48638424b401	        movsxd rax, dword [rsp + 0x1b4] 	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cdf2	          0x4839c3	                            cmp rbx, rax	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cdf5	     0xf8d11260000	                           jge 0x400f40c	      5254	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400cdfb	    0x8b84247c0100	           mov eax, dword [rsp + 0x17c] 	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce02	            0x85c0	                           test eax, eax	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce04	     0xf88502a0000	                            js 0x400f85a	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce0a	    0x8b9c24780100	           mov ebx, dword [rsp + 0x178] 	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce11	          0x4189c4	                           mov r12d, eax	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce14	          0x83c301	                              add ebx, 1	      5256	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400ce17	    0x8bbc24780100	           mov edi, dword [rsp + 0x178] 	      5261	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	CALL_178
0x400ce1e	      0xe800000000	                          call 0x400ce23	      5261	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	CALL_178
0x400ce23	            0x85c0	                           test eax, eax	      5263	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_255
0x400ce25	    0x4489a4247c01	           mov dword [rsp + 0x17c], r12d	      5264	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400ce2d	    0x899c24780100	            mov dword [rsp + 0x178], ebx	      5264	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400ce34	        0x440f49e0	                        cmovns r12d, eax	      5264	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400ce38	      0xe9e7ddffff	                           jmp 0x400ac24	      5264	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400ce3d	           0xf1f00	                         nop dword [rax]	      5264	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253
0x400ce40	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4053	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce45	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      4053	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce49	     0xf85d8dcffff	                           jne 0x400ab27	      4053	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce4f	    0x496386d80000	         movsxd rax, dword [r14 + 0xd8] 	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce56	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce5b	     0xf8cc6dcffff	                            jl 0x400ab27	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce61	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce65	            0x85f6	                           test esi, esi	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce67	     0xf8fbadcffff	                            jg 0x400ab27	      4055	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x400ce6d	    0x418b8eac0000	            mov ecx, dword [r14 + 0xac] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce74	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce79	    0x418bb6a80000	            mov esi, dword [r14 + 0xa8] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce80	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce87	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce8b	    0x8bbc24900000	            mov edi, dword [rsp + 0x90] 	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce92	            0xf7d9	                                 neg ecx	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce94	        0x4c891424	                    mov qword [rsp], r10	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce98	      0xe800000000	                          call 0x400ce9d	      4059	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x400ce9d	    0x418b8e6c0200	           mov ecx, dword [r14 + 0x26c] 	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400cea4	        0x4c8b1424	                    mov r10, qword [rsp]	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400cea8	            0x85c9	                           test ecx, ecx	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400ceaa	     0xf84402b0000	                            je 0x400f9f0	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400ceb0	    0x418b86cc0000	            mov eax, dword [r14 + 0xcc] 	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400ceb7	    0x410386d40000	             add eax, dword [r14 + 0xd4]	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400cebe	    0x898424d00000	             mov dword [rsp + 0xd0], eax	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400cec5	      0xe968feffff	                           jmp 0x400cd32	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400ceca	    0x660f1f440000	                    nop word [rax + rax]	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x400ced0	            0x89c7	                            mov edi, eax	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400ced2	            0x89c3	                            mov ebx, eax	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400ced4	      0xe800000000	                          call 0x400ced9	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400ced9	          0x83f801	                              cmp eax, 1	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400cedc	        0x895c2470	             mov dword [rsp + 0x70], ebx	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400cee0	     0xf8ec5dcffff	                           jle 0x400abab	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x400cee6	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x400cef1	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      4286	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x400cefc	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4284	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x400cf07	      0xe99fdcffff	                           jmp 0x400abab	      4286	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x400cf0c	    0x4983bea80200	              cmp qword [r14 + 0x2a8], 3	      5150	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf14	     0xf847bf0ffff	                            je 0x400bf95	      5150	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf1a	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      5154	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0x400cf21	            0x85c0	                           test eax, eax	      5154	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0x400cf23	     0xf8493100000	                            je 0x400dfbc	      5154	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0x400cf29	    0x898424980100	            mov dword [rsp + 0x198], eax	      5157	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0x400cf30	        0x8b7c2408	                mov edi, dword [rsp + 8]	      5165	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0x400cf34	    0x8bb424ac0100	           mov esi, dword [rsp + 0x1ac] 	      5163	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf3b	            0x85ff	                           test edi, edi	      5165	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0x400cf3d	    0x89b424080100	            mov dword [rsp + 0x108], esi	      5163	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf44	     0xf8ea2100000	                           jle 0x400dfec	      5165	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0x400cf4a	          0x4863d7	                         movsxd rdx, edi	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf4d	      0x4801542448	            add qword [rsp + 0x48], rdx 	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf52	    0x418b96940200	           mov edx, dword [r14 + 0x294] 	      5168	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0x400cf59	         0x17c247c	             add dword [rsp + 0x7c], edi	      5166	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0x400cf5d	            0x85d2	                           test edx, edx	      5168	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0x400cf5f	     0xf842b290000	                            je 0x400f890	      5168	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0x400cf65	    0x458ba6540200	          mov r12d, dword [r14 + 0x254] 	      5171	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf6c	          0x4585e4	                         test r12d, r12d	      5171	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf6f	     0xf84eb140000	                            je 0x400e460	      5171	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf75	        0x297c243c	             sub dword [rsp + 0x3c], edi	      5173	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf79	    0x29bc24b00000	             sub dword [rsp + 0xb0], edi	      5174	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf80	            0x31db	                            xor ebx, ebx	      5174	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf82	        0x89442470	             mov dword [rsp + 0x70], eax	      5174	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0x400cf86	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf8e	    0xc74424080000	                  mov dword [rsp + 8], 0	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf96	      0xe930f0ffff	                           jmp 0x400bfcb	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cf9b	       0xf1f440000	                   nop dword [rax + rax]	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400cfa0	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x400cfa7	        0x2b44243c	             sub eax, dword [rsp + 0x3c]	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x400cfab	        0x89442408	                mov dword [rsp + 8], eax	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x400cfaf	      0xe9b4e2ffff	                           jmp 0x400b268	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x400cfb4	         0xf1f4000	                         nop dword [rax]	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x400cfb8	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfbf	            0x85c0	                           test eax, eax	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfc1	            0x741c	                            je 0x400cfdf	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfc3	    0x8b0500000000	            mov eax, dword [0x0400cfc9] 	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfc9	            0x85c0	                           test eax, eax	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfcb	            0x7412	                            je 0x400cfdf	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfcd	    0x4881bc24b801	              cmp qword [rsp + 0x1b8], 0	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfd9	     0xf8514e0ffff	                           jne 0x400aff3	      5842	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfdf	        0x8b442408	                mov eax, dword [rsp + 8]	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfe3	            0x85c0	                           test eax, eax	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfe5	     0xf84f5d9ffff	                            je 0x400a9e0	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cfeb	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cff0	          0x4585e4	                         test r12d, r12d	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cff3	     0xf85fadfffff	                           jne 0x400aff3	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400cff9	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400d001	          0x803800	                       cmp byte [rax], 0	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400d004	     0xf84d6d9ffff	                            je 0x400a9e0	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400d00a	      0xe9e4dfffff	                           jmp 0x400aff3	      5843	screen.c	FUNCTION_28	FOR_1	IF_325
0x400d00f	    0x8bbc24240100	           mov edi, dword [rsp + 0x124] 	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d016	          0x4489e6	                           mov esi, r12d	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d019	      0xe800000000	                          call 0x400d01e	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d01e	          0x4189c4	                           mov r12d, eax	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d021	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d028	      0xe927fbffff	                           jmp 0x400cb54	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d02d	           0xf1f00	                         nop dword [rax]	      4725	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x400d030	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d037	          0x83e801	                              sub eax, 1	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d03a	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d03e	     0xf8c3ef1ffff	                            jl 0x400c182	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d044	            0x89df	                            mov edi, ebx	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d046	    0xff1500000000	                 call qword [0x0400d04c]	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d04c	          0x83f802	                              cmp eax, 2	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d04f	     0xf852df1ffff	                           jne 0x400c182	      4333	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d055	    0x8b0500000000	            mov eax, dword [0x0400d05b] 	      4339	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152	CALL_97
0x400d05b	    0xc78424980100	          mov dword [rsp + 0x198], 0x3e 	      4335	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d066	      0x8344240801	                  add dword [rsp + 8], 1	      4342	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d06b	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4338	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d076	    0xc74424703e00	           mov dword [rsp + 0x70], 0x3e 	      4336	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d07e	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4337	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d089	    0x898424b80000	             mov dword [rsp + 0xb8], eax	      4339	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152	CALL_97
0x400d090	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      4343	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d098	        0x488d78ff	                      lea rdi, [rax - 1]	      4343	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d09c	      0xe901f1ffff	                           jmp 0x400c1a2	      4343	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d0a1	     0xf1f80000000	                         nop dword [rax]	      4343	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x400d0a8	    0x488b05000000	            mov rax, qword [0x0400d0af] 	      5662	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0x400d0af	    0xc704b0000000	              mov dword [rax + rsi*4], 0	      5662	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0x400d0b6	      0xe955deffff	                           jmp 0x400af10	      5662	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0x400d0bb	       0xf1f440000	                   nop dword [rax + rax]	      5662	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0x400d0c0	    0x418b86380200	           mov eax, dword [r14 + 0x238] 	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0c7	            0x85c0	                           test eax, eax	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0c9	     0xf8447110000	                            je 0x400e216	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0cf	    0x418b863c0200	           mov eax, dword [r14 + 0x23c] 	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0d6	            0x85c0	                           test eax, eax	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0d8	     0xf8538110000	                           jne 0x400e216	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0de	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x400d0e3	      0xbb00000000	                              mov ebx, 0	      3899	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x400d0e8	          0x4c89f7	                            mov rdi, r14	      3916	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x400d0eb	      0xe800000000	                          call 0x400d0f0	      3916	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x400d0f0	    0x4c8d94241002	                  lea r10, [rsp + 0x210]	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d0f8	          0x4189c0	                            mov r8d, eax	      3916	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x400d0fb	          0x4889d9	                            mov rcx, rbx	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d0fe	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d100	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d103	      0xba12000000	                           mov edx, 0x12	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d108	          0x4c89d7	                            mov rdi, r10	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d10b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d110	        0x4c891424	                    mov qword [rsp], r10	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d114	      0xe800000000	                          call 0x400d119	        33	stdio2.h	FUNCTION_116	CALL_2
0x400d119	    0x418b9e980000	            mov ebx, dword [r14 + 0x98] 	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x400d120	        0x4c8b1424	                    mov r10, qword [rsp]	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x400d124	            0x85db	                           test ebx, ebx	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x400d126	            0x7e35	                           jle 0x400d15d	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x400d128	    0x80bc24100200	           cmp byte [rsp + 0x210], 0x20 	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d130	    0x4c899424b801	            mov qword [rsp + 0x1b8], r10	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d138	            0x7523	                           jne 0x400d15d	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d13a	          0x4c89d0	                            mov rax, r10	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d13d	           0xf1f00	                         nop dword [rax]	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d140	          0xc6002d	                    mov byte [rax], 0x2d	      3920	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d143	    0x488b9424b801	           mov rdx, qword [rsp + 0x1b8] 	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d14b	        0x488d4201	                      lea rax, [rdx + 1]	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d14f	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d157	        0x807a0120	                cmp byte [rdx + 1], 0x20	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d15b	            0x74e3	                            je 0x400d140	      3919	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x400d15d	    0x458b9e540200	          mov r11d, dword [r14 + 0x254] 	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x400d164	          0x4585db	                         test r11d, r11d	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x400d167	     0xf8531190000	                           jne 0x400ea9e	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x400d16d	    0x4c899424b801	            mov qword [rsp + 0x1b8], r10	      3925	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x400d175	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3926	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x400d17d	          0x4c89f7	                            mov rdi, r14	      3930	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x400d180	      0xe800000000	                          call 0x400d185	      3930	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x400d185	    0x458b8e700200	           mov r9d, dword [r14 + 0x270] 	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d18c	          0x83c001	                              add eax, 1	      3930	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x400d18f	    0x8b1d00000000	            mov ebx, dword [0x0400d195] 	      3931	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_68
0x400d195	        0x89442408	                mov dword [rsp + 8], eax	      3930	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x400d199	          0x4585c9	                           test r9d, r9d	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d19c	            0x7557	                           jne 0x400d1f5	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d19e	    0x458b863c0200	           mov r8d, dword [r14 + 0x23c] 	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1a5	          0x4585c0	                           test r8d, r8d	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1a8	            0x754b	                           jne 0x400d1f5	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1aa	            0x85c0	                           test eax, eax	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1ac	    0xc70424040000	                      mov dword [rsp], 4	      3881	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400d1b3	        0x410f94c4	                               sete r12b	      3881	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400d1b7	          0x4489e0	                           mov eax, r12d	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1ba	      0xe9effaffff	                           jmp 0x400ccae	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1bf	    0x48898c244801	            mov qword [rsp + 0x148], rcx	      3937	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1c7	        0x488d3c02	                    lea rdi, [rdx + rax]	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1cb	    0x488994244001	            mov qword [rsp + 0x140], rdx	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1d3	    0xff1500000000	                 call qword [0x0400d1d9]	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1d9	    0x488b94244001	           mov rdx, qword [rsp + 0x140] 	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1e1	    0x410187740100	            add dword [r15 + 0x174], eax	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1e8	    0x488b8c244801	           mov rcx, qword [rsp + 0x148] 	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1f0	      0xe96ce7ffff	                           jmp 0x400b961	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x400d1f5	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3938	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1fa	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      3938	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d1fe	     0xf84410e0000	                            je 0x400e045	      3938	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d204	        0x8b7c2408	                mov edi, dword [rsp + 8]	      3938	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x400d208	    0xc70424040000	                      mov dword [rsp], 4	      3881	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400d20f	            0x85ff	                           test edi, edi	      3881	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400d211	        0x410f94c4	                               sete r12b	      3881	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x400d215	          0x4489e0	                           mov eax, r12d	      3939	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x400d218	      0xe991faffff	                           jmp 0x400ccae	      3939	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x400d21d	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5215	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d222	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5215	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d226	     0xf85bfd9ffff	                           jne 0x400abeb	      5215	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d22c	    0x498b86a00200	           mov rax, qword [r14 + 0x2a0] 	       890	screen.c	FUNCTION_15	IF_1
0x400d233	          0x803800	                       cmp byte [rax], 0	       890	screen.c	FUNCTION_15	IF_1
0x400d236	     0xf84afd9ffff	                            je 0x400abeb	       890	screen.c	FUNCTION_15	IF_1
0x400d23c	          0x4c89f7	                            mov rdi, r14	       890	screen.c	FUNCTION_15	IF_1
0x400d23f	      0xe8ac45ffff	    call sym.conceal_cursor_line.part.11	       890	screen.c	FUNCTION_15	IF_1
0x400d244	            0x85c0	                           test eax, eax	      5216	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0x400d246	     0xf849fd9ffff	                            je 0x400abeb	      5216	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0x400d24c	      0x4863442478	         movsxd rax, dword [rsp + 0x78] 	      5217	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d251	    0x496396d80000	         movsxd rdx, dword [r14 + 0xd8] 	      5217	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d258	      0x4803442448	             add rax, qword [rsp + 0x48]	      5217	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d25d	          0x4839c2	                            cmp rdx, rax	      5217	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d260	     0xf8f85d9ffff	                            jg 0x400abeb	      5217	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d266	    0x458b8e540200	           mov r9d, dword [r14 + 0x254] 	      5220	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400d26d	          0x4585c9	                           test r9d, r9d	      5220	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400d270	     0xf852a1d0000	                           jne 0x400efa0	      5220	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400d276	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5224	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0x400d27a	    0x2b8424b00000	             sub eax, dword [rsp + 0xb0]	      5224	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0x400d281	    0x418986e00000	             mov dword [r14 + 0xe0], eax	      5224	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0x400d288	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      5225	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d28f	    0xc78424880000	               mov dword [rsp + 0x88], 1	      5226	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d29a	    0x418986dc0000	             mov dword [r14 + 0xdc], eax	      5225	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d2a1	      0xe950d9ffff	                           jmp 0x400abf6	      5225	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d2a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5225	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0x400d2b0	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2b4	    0xff1500000000	                 call qword [0x0400d2ba]	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2ba	          0x83f801	                              cmp eax, 1	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2bd	     0xf8e78dbffff	                           jle 0x400ae3b	      5630	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2c3	      0x836c246c01	               sub dword [rsp + 0x6c], 1	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2c8	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5634	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2cd	      0xe969dbffff	                           jmp 0x400ae3b	      5634	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0x400d2d2	    0x48638424a401	        movsxd rax, dword [rsp + 0x1a4] 	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2da	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2df	      0x482b542418	             sub rdx, qword [rsp + 0x18]	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2e4	          0x4839c2	                            cmp rdx, rax	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2e7	        0x8b442408	                mov eax, dword [rsp + 8]	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2eb	           0xf9dc1	                                setge cl	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2ee	            0x85c0	                           test eax, eax	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2f0	           0xf94c0	                                 sete al	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2f3	            0x20c8	                              and al, cl	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2f5	            0x751d	                           jne 0x400d314	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2f7	      0xb818000000	                           mov eax, 0x18	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d2fc	      0xe934e8ffff	                           jmp 0x400bb35	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d301	        0x8b442408	                mov eax, dword [rsp + 8]	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d305	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d30a	      0x482b542418	             sub rdx, qword [rsp + 0x18]	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d30f	            0x85c0	                           test eax, eax	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d311	           0xf94c0	                                 sete al	      4222	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x400d314	    0x48638c24a801	        movsxd rcx, dword [rsp + 0x1a8] 	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d31c	          0x4839d1	                            cmp rcx, rdx	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d31f	     0xf8d75060000	                           jge 0x400d99a	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d325	            0x84c0	                             test al, al	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d327	     0xf846d060000	                            je 0x400d99a	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d32d	      0xb818000000	                           mov eax, 0x18	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d332	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x18 	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d33d	      0xe9f3e7ffff	                           jmp 0x400bb35	      4225	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x400d342	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d349	          0x83e801	                              sub eax, 1	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d34c	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d350	     0xf8c35e9ffff	                            jl 0x400bc8b	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d356	            0x89df	                            mov edi, ebx	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d358	    0xff1500000000	                 call qword [0x0400d35e]	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d35e	          0x83f802	                              cmp eax, 2	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d361	     0xf8524e9ffff	                           jne 0x400bc8b	      4531	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d367	    0x8b0500000000	            mov eax, dword [0x0400d36d] 	      4537	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x400d36d	    0xc78424980100	          mov dword [rsp + 0x198], 0x3e 	      4533	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d378	    0x48836c241001	               sub qword [rsp + 0x10], 1	      4540	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d37e	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4535	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d389	    0xc74424703e00	           mov dword [rsp + 0x70], 0x3e 	      4534	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d391	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4536	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x400d39c	    0x898424b80000	             mov dword [rsp + 0xb8], eax	      4537	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x400d3a3	      0xe990e9ffff	                           jmp 0x400bd38	      4537	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x400d3a8	     0xf1f84000000	                   nop dword [rax + rax]	      4537	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x400d3b0	    0x418b9e540200	           mov ebx, dword [r14 + 0x254] 	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3b7	            0x85db	                           test ebx, ebx	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3b9	     0xf845b060000	                            je 0x400da1a	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3bf	      0x448b5c243c	           mov r11d, dword [rsp + 0x3c] 	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3c4	          0x4585db	                         test r11d, r11d	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3c7	        0x400f94c5	                                sete bpl	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3cb	          0x4084ed	                           test bpl, bpl	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3ce	     0xf8461060000	                            je 0x400da35	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3d4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5573	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3d9	          0x803e00	                       cmp byte [rsi], 0	      5573	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3dc	            0x7521	                           jne 0x400d3ff	      5573	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3de	    0x458b96340200	          mov r10d, dword [r14 + 0x234] 	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3e5	          0x4585d2	                         test r10d, r10d	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3e8	     0xf845e130000	                            je 0x400e74c	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3ee	    0x448b8c249400	            mov r9d, dword [rsp + 0x94] 	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3f6	          0x4585c9	                           test r9d, r9d	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3f9	     0xf8e4d130000	                           jle 0x400e74c	      5574	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d3ff	    0x8b3500000000	            mov esi, dword [0x0400d405] 	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d405	    0x898424980100	            mov dword [rsp + 0x198], eax	      5577	screen.c	FUNCTION_28	FOR_1	IF_291
0x400d40c	    0x448b25000000	           mov r12d, dword [0x0400d413] 	      5578	screen.c	FUNCTION_28	FOR_1	IF_291	CALL_190
0x400d413	        0x89442470	             mov dword [rsp + 0x70], eax	      5578	screen.c	FUNCTION_28	FOR_1	IF_291	CALL_190
0x400d417	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5588	screen.c	FUNCTION_28	FOR_1	IF_291	ELSE_103
0x400d422	            0x85f6	                           test esi, esi	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d424	     0xf8428d9ffff	                            je 0x400ad52	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d42a	            0x89c7	                            mov edi, eax	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d42c	      0xe800000000	                          call 0x400d431	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d431	          0x83f801	                              cmp eax, 1	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d434	     0xf8e18d9ffff	                           jle 0x400ad52	      5581	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0x400d43a	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      5584	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0x400d445	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      5585	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0x400d450	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      5583	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0x400d45b	      0xe9f2d8ffff	                           jmp 0x400ad52	      5585	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0x400d460	      0x4863442408	            movsxd rax, dword [rsp + 8] 	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d465	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d46c	            0x89ea	                            mov edx, ebp	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d46e	      0x4803442448	             add rax, qword [rsp + 0x48]	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d473	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5798	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d47b	    0xc74424080000	                  mov dword [rsp + 8], 0	      5797	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d483	      0x4889442428	             mov qword [rsp + 0x28], rax	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d488	      0xe9f7daffff	                           jmp 0x400af84	      5796	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0x400d48d	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4319	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400d498	      0xe9c6ecffff	                           jmp 0x400c163	      4319	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400d49d	        0x895c2470	             mov dword [rsp + 0x70], ebx	      4319	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400d4a1	      0xe992e8ffff	                           jmp 0x400bd38	      4319	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x400d4a6	      0x448b4c243c	            mov r9d, dword [rsp + 0x3c] 	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400d4ab	          0x4585c9	                           test r9d, r9d	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400d4ae	     0xf8946e9ffff	                           jns 0x400bdfa	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x400d4b4	    0x448b05000000	            mov r8d, dword [0x0400d4bb] 	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4bb	          0x4585c0	                           test r8d, r8d	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4be	            0x7418	                            je 0x400d4d8	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4c0	    0x8b0500000000	            mov eax, dword [0x0400d4c6] 	      5067	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4c6	          0x83f816	                           cmp eax, 0x16	      5066	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4c9	     0xf841d160000	                            je 0x400eaec	      5066	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4cf	          0x83f876	                           cmp eax, 0x76	      5066	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4d2	     0xf8414160000	                            je 0x400eaec	      5066	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400d4d8	    0x8b9c243c0100	           mov ebx, dword [rsp + 0x13c] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4df	    0x8bac24c00000	            mov ebp, dword [rsp + 0xc0] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4e6	    0x8b8c24bc0000	            mov ecx, dword [rsp + 0xbc] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4ed	            0x85db	                           test ebx, ebx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4ef	           0xf95c2	                                setne dl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4f2	            0x85ed	                           test ebp, ebp	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4f4	           0xf95c0	                                setne al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4f7	            0x85c9	                           test ecx, ecx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4f9	            0x89d3	                            mov ebx, edx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4fb	           0xf95c1	                                setne cl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d4fe	             0x8c1	                               or cl, al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d500	     0xf853a010000	                           jne 0x400d640	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d506	            0x84d2	                             test dl, dl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d508	     0xf8532010000	                           jne 0x400d640	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d50e	    0xc78424bc0000	               mov dword [rsp + 0xbc], 0	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d519	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d525	      0xe9eee9ffff	                           jmp 0x400bf18	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d52a	    0x83bc24c80000	               cmp dword [rsp + 0xc8], 1	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400d532	     0xf8f890b0000	                            jg 0x400e0c1	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400d538	    0x448b8424c800	            mov r8d, dword [rsp + 0xc8] 	      4451	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x400d540	          0x4585c0	                           test r8d, r8d	      4451	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x400d543	     0xf85870b0000	                           jne 0x400e0d0	      4451	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x400d549	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4487	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x400d554	      0xe917e7ffff	                           jmp 0x400bc70	      4487	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x400d559	      0xe800000000	                          call 0x400d55e	      4303	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x400d55e	        0x39442408	                cmp dword [rsp + 8], eax	      4305	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x400d562	    0x898424c80000	             mov dword [rsp + 0xc8], eax	      4303	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x400d569	     0xf8cd0090000	                            jl 0x400df3f	      4305	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x400d56f	          0x83f801	                              cmp eax, 1	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x400d572	     0xf8fb60f0000	                            jg 0x400e52e	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x400d578	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4304	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400d583	    0x448b8424c800	            mov r8d, dword [rsp + 0xc8] 	      4323	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d58b	          0x4585c0	                           test r8d, r8d	      4323	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d58e	     0xf85cfebffff	                           jne 0x400c163	      4323	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d594	        0x895c2470	             mov dword [rsp + 0x70], ebx	      4323	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d598	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4324	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d5a3	      0xe9bfebffff	                           jmp 0x400c167	      4324	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x400d5a8	       0xfb6742470	           movzx esi, byte [rsp + 0x70] 	      5684	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0x400d5ad	        0x40883402	               mov byte [rdx + rax], sil	      5684	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0x400d5b1	      0xe91fefffff	                           jmp 0x400c4d5	      5684	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0x400d5b6	    0x498bbea00200	           mov rdi, qword [r14 + 0x2a0] 	      5144	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0x400d5bd	      0xbe76000000	                           mov esi, 0x76	      5144	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0x400d5c2	      0xe800000000	                          call 0x400d5c7	      5144	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0x400d5c7	          0x4885c0	                           test rax, rax	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400d5ca	     0xf858be9ffff	                           jne 0x400bf5b	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400d5d0	      0xe94bf2ffff	                           jmp 0x400c820	      5143	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400d5d5	    0x418b96940200	           mov edx, dword [r14 + 0x294] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400d5dc	            0x85d2	                           test edx, edx	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400d5de	     0xf84b0090000	                            je 0x400df94	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400d5e4	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400d5e8	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400d5ed	    0x8b3500000000	            mov esi, dword [0x0400d5f3] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d5f3	            0x85d2	                           test edx, edx	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d5f5	           0xf9fc0	                                 setg al	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d5f8	            0x21c1	                            and ecx, eax	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d5fa	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d5ff	            0x85f6	                           test esi, esi	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d601	      0x4889442428	             mov qword [rsp + 0x28], rax	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d606	     0xf85ad040000	                           jne 0x400dab9	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400d60c	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5780	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400d613	          0x4585c0	                           test r8d, r8d	      5780	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400d616	     0xf85b7eaffff	                           jne 0x400c0d3	      5780	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0x400d61c	    0x838424b00000	               add dword [rsp + 0xb0], 1	      5788	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0x400d624	      0x8344243c01	               add dword [rsp + 0x3c], 1	      5789	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0x400d629	            0x89ea	                            mov edx, ebp	      5789	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0x400d62b	          0x4531c0	                            xor r8d, r8d	      5789	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0x400d62e	      0xe951d9ffff	                           jmp 0x400af84	      5789	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0x400d633	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400d63b	      0xe97be2ffff	                           jmp 0x400b8bb	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x400d640	    0x458b9e540200	          mov r11d, dword [r14 + 0x254] 	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d647	          0x4585db	                         test r11d, r11d	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d64a	     0xf84d9090000	                            je 0x400e029	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d650	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d654	            0xf7d2	                                 not edx	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d656	          0xc1ea1f	                           shr edx, 0x1f	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d659	            0x84d2	                             test dl, dl	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d65b	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d667	     0xf84abe8ffff	                            je 0x400bf18	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d66d	    0x838424a40000	               add dword [rsp + 0xa4], 1	      5105	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d675	    0x48836c241001	               sub qword [rsp + 0x10], 1	      5102	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d67b	          0x4539ec	                          cmp r12d, r13d	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d67e	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      5101	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d689	    0x8bbc24a40000	            mov edi, dword [rsp + 0xa4] 	      5105	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400d690	            0x7515	                           jne 0x400d6a7	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d692	            0x84c0	                             test al, al	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d694	            0x7411	                            je 0x400d6a7	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d696	          0x83ff01	                              cmp edi, 1	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d699	     0xf84311c0000	                            je 0x400f2d0	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d69f	    0x448ba424c000	           mov r12d, dword [rsp + 0xc0] 	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400d6a7	    0x83bc24bc0000	           cmp dword [rsp + 0xbc], 0x1a 	      5113	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400d6af	     0xf84e6150000	                            je 0x400ec9b	      5113	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400d6b5	            0x84db	                             test bl, bl	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0x400d6b7	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0x400d6c3	     0xf844fe8ffff	                            je 0x400bf18	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0x400d6c9	    0x418bbe700200	           mov edi, dword [r14 + 0x270] 	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6d0	    0x8b84243c0100	           mov eax, dword [rsp + 0x13c] 	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6d7	            0x85ff	                           test edi, edi	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6d9	          0x4189c4	                           mov r12d, eax	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6dc	     0xf8436e8ffff	                            je 0x400bf18	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6e2	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6e7	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6eb	     0xf8527e8ffff	                           jne 0x400bf18	      5129	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0x400d6f1	    0x8b3500000000	            mov esi, dword [0x0400d6f7] 	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d6f7	          0x4489e7	                           mov edi, r12d	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d6fa	      0xe800000000	                          call 0x400d6ff	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d6ff	          0x4189c4	                           mov r12d, eax	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d702	      0xe911e8ffff	                           jmp 0x400bf18	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d707	    0x660f1f840000	                    nop word [rax + rax]	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0x400d710	          0x4889c7	                            mov rdi, rax	      4379	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x400d713	      0xe800000000	                          call 0x400d718	      4379	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x400d718	          0x83f801	                              cmp eax, 1	      4381	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x400d71b	    0x898424c80000	             mov dword [rsp + 0xc8], eax	      4379	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x400d722	     0xf8f28090000	                            jg 0x400e050	      4381	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x400d728	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4380	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x400d733	    0x83bc24980100	          cmp dword [rsp + 0x198], 0x7f 	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d73b	            0x7e0a	                           jle 0x400d747	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d73d	    0x83bc24c80000	               cmp dword [rsp + 0xc8], 1	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d745	            0x741b	                            je 0x400d762	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d747	    0x448b9424c800	           mov r10d, dword [rsp + 0xc8] 	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d74f	          0x4585d2	                         test r10d, r10d	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d752	     0xf8ed2fdffff	                           jle 0x400d52a	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d758	            0x85db	                           test ebx, ebx	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d75a	     0xf85cafdffff	                           jne 0x400d52a	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d760	            0x31db	                            xor ebx, ebx	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d762	    0x4c8d94241002	                  lea r10, [rsp + 0x210]	      4424	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x400d76a	            0x89de	                            mov esi, ebx	      4424	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x400d76c	          0x4c89d7	                            mov rdi, r10	      4424	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x400d76f	      0x4c89542408	                mov qword [rsp + 8], r10	      4424	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x400d774	      0xe800000000	                          call 0x400d779	      4424	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x400d779	    0x458b8e540200	           mov r9d, dword [r14 + 0x254] 	      4426	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x400d780	      0x4c8b542408	                mov r10, qword [rsp + 8]	      4426	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x400d785	          0x4585c9	                           test r9d, r9d	      4426	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x400d788	     0xf85fe120000	                           jne 0x400ea8c	      4426	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x400d78e	     0xfb684241002	          movzx eax, byte [rsp + 0x210] 	      4439	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d796	    0x488dbc24b801	                  lea rdi, [rsp + 0x1b8]	      4440	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x400d79e	    0x4c899424b801	            mov qword [rsp + 0x1b8], r10	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7a6	    0x898424980100	            mov dword [rsp + 0x198], eax	      4439	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7ad	      0xe800000000	                          call 0x400d7b2	      4440	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x400d7b2	            0x89c3	                            mov ebx, eax	      4440	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x400d7b4	            0x31c0	                            xor eax, eax	      4441	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7b6	    0x83bc24980100	          cmp dword [rsp + 0x198], 0x7f 	      4441	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7be	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      4442	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x400d7c6	           0xf9fc0	                                 setg al	      4441	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7c9	    0x8984249c0000	             mov dword [rsp + 0x9c], eax	      4441	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7d0	      0xe800000000	                          call 0x400d7d5	      4442	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x400d7d5	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7d9	        0x89442408	                mov dword [rsp + 8], eax	      4442	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x400d7dd	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4443	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x400d7e5	          0x4409ee	                            or esi, r13d	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7e8	     0xf8582e4ffff	                           jne 0x400bc70	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7ee	          0x83c001	                              add eax, 1	      4446	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7f1	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4448	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7f9	        0x89442454	             mov dword [rsp + 0x54], eax	      4446	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x400d7fd	    0x8b0500000000	            mov eax, dword [0x0400d803] 	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163	CALL_110
0x400d803	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163	CALL_110
0x400d80a	      0xe961e4ffff	                           jmp 0x400bc70	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163	CALL_110
0x400d80f	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4577	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x400d813	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      4577	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x400d817	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4577	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x400d81c	      0xe800000000	                          call 0x400d821	      4577	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x400d821	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      4579	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x400d825	    0x8984240c0100	            mov dword [rsp + 0x10c], eax	      4577	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x400d82c	            0x85db	                           test ebx, ebx	      4579	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x400d82e	     0xf85f60e0000	                           jne 0x400e72a	      4579	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x400d834	    0x448ba4240c01	          mov r12d, dword [rsp + 0x10c] 	      4580	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x400d83c	      0xe959f0ffff	                           jmp 0x400c89a	      4580	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x400d841	    0x488b05000000	            mov rax, qword [0x0400d848] 	      5642	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400d848	        0xc604308e	              mov byte [rax + rsi], 0x8e	      5642	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400d84c	      0xe913f0ffff	                           jmp 0x400c864	      5642	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0x400d851	    0x418b9e340200	           mov ebx, dword [r14 + 0x234] 	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d858	            0x85db	                           test ebx, ebx	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d85a	     0xf8403040000	                            je 0x400dc63	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d860	    0x448b05000000	            mov r8d, dword [0x0400d867] 	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d867	          0x4585c0	                           test r8d, r8d	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d86a	     0xf85f3030000	                           jne 0x400dc63	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400d870	      0xe800000000	                          call 0x400d875	      5027	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0x400d875	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      5028	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_226
0x400d879	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      5027	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0x400d881	            0x85db	                           test ebx, ebx	      5028	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_226
0x400d883	     0xf8402130000	                            je 0x400eb8b	      5028	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_226
0x400d889	    0xf60500000000	               test byte [0x0400d890], 4	      5031	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0x400d890	            0x7410	                            je 0x400d8a2	      5031	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0x400d892	    0x458b9e540200	          mov r11d, dword [r14 + 0x254] 	      5031	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0x400d899	          0x4585db	                         test r11d, r11d	      5031	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0x400d89c	     0xf85891a0000	                           jne 0x400f32b	      5031	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0x400d8a2	    0x458b96300200	          mov r10d, dword [r14 + 0x230] 	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8a9	          0x4585d2	                         test r10d, r10d	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8ac	     0xf84360e0000	                            je 0x400e6e8	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8b2	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      5040	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8ba	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      5041	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0x400d8be	           0xfb600	                   movzx eax, byte [rax]	      5040	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8c1	          0x8d7b01	                      lea edi, [rbx + 1]	      5041	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0x400d8c4	          0x4863eb	                         movsxd rbp, ebx	      5042	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0x400d8c7	    0x898424980100	            mov dword [rsp + 0x198], eax	      5040	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d8ce	      0xe800000000	                          call 0x400d8d3	      5041	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0x400d8d3	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_107	CALL_6
0x400d8d6	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_107	CALL_6
0x400d8db	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_107	CALL_6
0x400d8de	    0x48898424a800	             mov qword [rsp + 0xa8], rax	        90	string3.h	FUNCTION_107	CALL_6
0x400d8e6	      0xe800000000	                          call 0x400d8eb	        90	string3.h	FUNCTION_107	CALL_6
0x400d8eb	    0x488b9c24b801	           mov rbx, qword [rsp + 0x1b8] 	      5043	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0x400d8f3	          0x4889df	                            mov rdi, rbx	      5043	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0x400d8f6	      0xe800000000	                          call 0x400d8fb	      5043	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0x400d8fb	        0x488d7301	                      lea rsi, [rbx + 1]	       126	string3.h	FUNCTION_112	CALL_3
0x400d8ff	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	       126	string3.h	FUNCTION_112	CALL_3
0x400d907	        0x488d50ff	                      lea rdx, [rax - 1]	       126	string3.h	FUNCTION_112	CALL_3
0x400d90b	          0x4889df	                            mov rdi, rbx	       126	string3.h	FUNCTION_112	CALL_3
0x400d90e	      0xe800000000	                          call 0x400d913	       126	string3.h	FUNCTION_112	CALL_3
0x400d913	        0xc6042b00	                 mov byte [rbx + rbp], 0	      5044	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d917	            0x31ff	                            xor edi, edi	      5045	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_160
0x400d919	      0xe800000000	                          call 0x400d91e	      5045	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_160
0x400d91e	    0x48899c24b801	            mov qword [rsp + 0x1b8], rbx	      5046	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0x400d926	      0x448b4c2430	            mov r9d, dword [rsp + 0x30] 	      5054	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d92b	          0x4585c9	                           test r9d, r9d	      5054	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d92e	     0xf859c0d0000	                           jne 0x400e6d0	      5054	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d934	        0x8b442408	                mov eax, dword [rsp + 8]	      5056	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d938	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d940	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5061	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0x400d94b	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0x400d953	          0x83c001	                              add eax, 1	      5056	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d956	        0x89442454	             mov dword [rsp + 0x54], eax	      5056	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0x400d95a	    0x8b0500000000	            mov eax, dword [0x0400d960] 	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d960	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d967	      0xe9ace5ffff	                           jmp 0x400bf18	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d96c	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d973	          0x4c89f7	                            mov rdi, r14	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d976	      0xe8057bffff	          call sym.draw_vsep_win.part.18	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d97b	        0x4c8b1424	                    mov r10, qword [rsp]	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d97f	      0xe98ff3ffff	                           jmp 0x400cd13	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0x400d984	    0x81bc24a00100	    cmp dword [rsp + 0x1a0], 0x7fffffff 	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d98f	     0xf8503e2ffff	                           jne 0x400bb98	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d995	      0xe92ee2ffff	                           jmp 0x400bbc8	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d99a	      0xb81a000000	                           mov eax, 0x1a	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d99f	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x1a 	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d9aa	      0xe986e1ffff	                           jmp 0x400bb35	      4242	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x400d9af	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5606	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400d9b4	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5606	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400d9b8	     0xf8420d4ffff	                            je 0x400adde	      5606	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400d9be	    0x8b3500000000	            mov esi, dword [0x0400d9c4] 	      5609	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0x400d9c4	          0x4489e7	                           mov edi, r12d	      5609	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0x400d9c7	          0x4489e3	                           mov ebx, r12d	      5608	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0x400d9ca	      0xe800000000	                          call 0x400d9cf	      5609	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0x400d9cf	          0x4189c4	                           mov r12d, eax	      5609	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0x400d9d2	      0xe931d4ffff	                           jmp 0x400ae08	      5609	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0x400d9d7	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      4213	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9de	            0x85c0	                           test eax, eax	      4213	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9e0	     0xf842ae1ffff	                            je 0x400bb10	      4213	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9e6	    0x83bc24940000	cmp dword [rsp + 0x94], 0xffffffffffffffff	      4214	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9ee	    0x440f44ac24a4	          cmove r13d, dword [rsp + 0xa4]	      4214	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9f7	      0xe914e1ffff	                           jmp 0x400bb10	      4214	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x400d9fc	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x400da00	    0xc78424f40000	               mov dword [rsp + 0xf4], 1	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x400da0b	    0x890500000000	            mov dword [0x0400da11], eax 	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x400da11	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x400da15	      0xe9f7eeffff	                           jmp 0x400c911	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x400da1a	    0x418bb6ac0000	            mov esi, dword [r14 + 0xac] 	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da21	          0x8d4eff	                      lea ecx, [rsi - 1]	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da24	        0x3b4c243c	            cmp ecx, dword [rsp + 0x3c] 	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da28	        0x400f94c5	                                sete bpl	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da2c	          0x4084ed	                           test bpl, bpl	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da2f	     0xf859ff9ffff	                           jne 0x400d3d4	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da35	            0x89d5	                            mov ebp, edx	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da37	      0xe916d3ffff	                           jmp 0x400ad52	      5568	screen.c	FUNCTION_28	FOR_1	IF_291
0x400da3c	    0x448b0d000000	            mov r9d, dword [0x0400da43] 	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da43	          0x4585c9	                           test r9d, r9d	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da46	            0x740d	                            je 0x400da55	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da48	        0x498d3c32	                    lea rdi, [r10 + rsi]	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da4c	          0x803f00	                       cmp byte [rdi], 0	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da4f	     0xf85c6160000	                           jne 0x400f11b	      3729	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400da55	          0x83c101	                              add ecx, 1	      3733	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x400da58	    0x41898c247401	            mov dword [r12 + 0x174], ecx	      3733	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x400da60	      0xe9eeccffff	                           jmp 0x400a753	      3733	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x400da65	    0x418b8424b000	            mov eax, dword [r12 + 0xb0] 	      3722	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400da6d	    0x418984247401	            mov dword [r12 + 0x174], eax	      3722	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400da75	      0xe9ceccffff	                           jmp 0x400a748	      3722	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x400da7a	      0x418b4c2410	            mov ecx, dword [r12 + 0x10] 	      3717	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x400da7f	    0x41898c247001	            mov dword [r12 + 0x170], ecx	      3717	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x400da87	      0xe995ccffff	                           jmp 0x400a721	      3717	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x400da8c	        0x8b7c2408	                mov edi, dword [rsp + 8]	      5752	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0x400da90	         0x17c243c	             add dword [rsp + 0x3c], edi	      5752	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0x400da94	     0x1bc24b00000	             add dword [rsp + 0xb0], edi	      5753	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0x400da9b	    0x8b3d00000000	            mov edi, dword [0x0400daa1] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400daa1	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5756	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400daa9	    0xc74424080000	                  mov dword [rsp + 8], 0	      5755	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0x400dab1	            0x85ff	                           test edi, edi	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dab3	     0xf8463fbffff	                            je 0x400d61c	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dab9	      0x44884c2440	              mov byte [rsp + 0x40], r9b	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dabe	        0x884c2420	               mov byte [rsp + 0x20], cl	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dac2	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dac6	    0xff1500000000	                 call qword [0x0400dacc]	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dacc	          0x83f801	                              cmp eax, 1	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dacf	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dad4	    0x440fb64c2440	           movzx r9d, byte [rsp + 0x40] 	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dada	     0xf8e2cfbffff	                           jle 0x400d60c	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0x400dae0	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5765	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400dae7	          0x4585c0	                           test r8d, r8d	      5765	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400daea	     0xf84c80d0000	                            je 0x400e8b8	      5765	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400daf0	    0x83ac24b00000	               sub dword [rsp + 0xb0], 1	      5767	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400daf8	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5768	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400dafd	      0xe9d1e5ffff	                           jmp 0x400c0d3	      5768	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400db02	    0x660f1f440000	                    nop word [rax + rax]	      5768	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0x400db08	    0x496386ac0000	         movsxd rax, dword [r14 + 0xac] 	      5889	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db0f	    0x483b05000000	            cmp rax, qword [0x0400db16] 	      5889	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db16	     0xf856bd5ffff	                           jne 0x400b087	      5889	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db1c	    0x488b05000000	            mov rax, qword [0x0400db23] 	      5892	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db23	          0x4963d4	                        movsxd rdx, r12d	      5892	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db26	      0xc64410ff01	             mov byte [rax + rdx - 1], 1	      5892	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0x400db2b	    0x448b0d000000	            mov r9d, dword [0x0400db32] 	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db32	          0x4585c9	                           test r9d, r9d	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db35	     0xf844cd5ffff	                            je 0x400b087	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db3b	    0x448b05000000	            mov r8d, dword [0x0400db42] 	      5908	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db42	          0x4585c0	                           test r8d, r8d	      5908	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db45	     0xf853cd5ffff	                           jne 0x400b087	      5908	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db4b	    0x8b3d00000000	            mov edi, dword [0x0400db51] 	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db51	    0x488d2c950000	                        lea rbp, [rdx*4]	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db59	            0x85ff	                           test edi, edi	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db5b	     0xf85b7190000	                           jne 0x400f518	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db61	        0x488d4dfc	                      lea rcx, [rbp - 4]	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400db65	    0x8b0500000000	            mov eax, dword [0x0400db6b] 	      5926	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0x400db6b	    0x413986ac0000	            cmp dword [r14 + 0xac], eax 	      5926	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0x400db72	            0x7429	                            je 0x400db9d	      5926	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0x400db74	    0x8b0500000000	            mov eax, dword [0x0400db7a] 	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db7a	    0x8bb424900000	            mov esi, dword [rsp + 0x90] 	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db81	        0x48890c24	                    mov qword [rsp], rcx	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db85	          0x8d50ff	                      lea edx, [rax - 1]	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db88	    0x488b05000000	            mov rax, qword [0x0400db8f] 	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db8f	          0x8b3c08	              mov edi, dword [rax + rcx]	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db92	             0x1d7	                            add edi, edx	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db94	      0xe8a75bffff	                    call sym.screen_char	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db99	        0x488b0c24	                    mov rcx, qword [rsp]	      5927	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0x400db9d	    0x488b05000000	            mov rax, qword [0x0400dba4] 	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dba4	    0x8b3500000000	            mov esi, dword [0x0400dbaa] 	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbaa	          0x8b0408	              mov eax, dword [rax + rcx]	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbad	    0x480305000000	             add rax, qword [0x0400dbb4]	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbb4	    0x480305000000	             add rax, qword [0x0400dbbb]	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbbb	            0x85f6	                           test esi, esi	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbbd	     0xf8447190000	                            je 0x400f50a	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbc3	         0xfb640ff	               movzx eax, byte [rax - 1]	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbc7	    0x80b800000000	                       cmp byte [rax], 1	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbce	          0x4889c7	                            mov rdi, rax	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbd1	     0xf8e37190000	                           jle 0x400f50e	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0x400dbd7	      0xbf20000000	                           mov edi, 0x20	      5936	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_205
0x400dbdc	      0xe800000000	                          call 0x400dbe1	      5936	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_205
0x400dbe1	    0x488b05000000	            mov rax, qword [0x0400dbe8] 	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dbe8	      0xb9ffffffff	                     mov ecx, 0xffffffff	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dbed	    0xc70500000000	         mov dword [0x0400dbf7], 0x270f 	      9222	screen.c	FUNCTION_77
0x400dbf7	    0xc70500000000	         mov dword [0x0400dc01], 0x270f 	      9222	screen.c	FUNCTION_77
0x400dc01	          0x8b1428	              mov edx, dword [rax + rbp]	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dc04	    0x488b05000000	            mov rax, qword [0x0400dc0b] 	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dc0b	        0x66890c50	              mov word [rax + rdx*2], cx	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dc0f	      0xe973d4ffff	                           jmp 0x400b087	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dc14	         0xf1f4000	                         nop dword [rax]	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400dc18	    0x488b05000000	            mov rax, qword [0x0400dc1f] 	      5438	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400dc1f	          0x4585db	                         test r11d, r11d	      5440	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0x400dc22	      0x6644892458	            mov word [rax + rbx*2], r12w	      5438	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400dc27	     0xf84be070000	                            je 0x400e3eb	      5440	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0x400dc2d	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5442	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0x400dc32	      0x836c246c01	               sub dword [rsp + 0x6c], 1	      5443	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0x400dc37	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      5443	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0x400dc3e	    0xc784246c0100	              mov dword [rsp + 0x16c], 1	      5453	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400dc49	    0x488344244801	               add qword [rsp + 0x48], 1	      5451	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400dc4f	      0xe9cdd0ffff	                           jmp 0x400ad21	      5451	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400dc54	          0x83c001	                              add eax, 1	      5694	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400dc57	    0x898424a00100	            mov dword [rsp + 0x1a0], eax	      5694	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400dc5e	      0xe9a7e8ffff	                           jmp 0x400c50a	      5694	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0x400dc63	    0x488b3d000000	            mov rdi, qword [0x0400dc6a] 	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc6a	          0x803f00	                       cmp byte [rdi], 0	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc6d	            0x7416	                            je 0x400dc85	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc6f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc74	    0x488bb4245001	           mov rsi, qword [rsp + 0x150] 	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc7c	          0x4839f0	                            cmp rax, rsi	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc7f	     0xf8466150000	                            je 0x400f1eb	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc85	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400dc8a	        0x498b5608	                mov rdx, qword [r14 + 8]	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dc8e	    0x488b8aa81500	          mov rcx, qword [rdx + 0x15a8] 	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dc95	            0x4899	                                     cqo	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dc97	          0x8d71ff	                      lea esi, [rcx - 1]	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dc9a	          0x4863c9	                         movsxd rcx, ecx	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dc9d	          0x48f7f9	                                idiv rcx	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dca0	            0x89f0	                            mov eax, esi	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dca2	            0x29d0	                            sub eax, edx	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dca4	    0x418b96300200	           mov edx, dword [r14 + 0x230] 	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x400dcab	            0x85d2	                           test edx, edx	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x400dcad	     0xf84ad080000	                            je 0x400e560	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x400dcb3	            0x85db	                           test ebx, ebx	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x400dcb5	     0xf84c5080000	                            je 0x400e580	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x400dcbb	        0x8b5c247c	            mov ebx, dword [rsp + 0x7c] 	      4862	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x400dcbf	          0x8d2c03	                    lea ebp, [rbx + rax]	      4862	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x400dcc2	    0x8b0500000000	            mov eax, dword [0x0400dcc8] 	      4865	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcc8	            0x85c0	                           test eax, eax	      4865	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcca	            0x7414	                            je 0x400dce0	      4865	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dccc	    0x8b8424700100	           mov eax, dword [rsp + 0x170] 	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcd3	            0x85c0	                           test eax, eax	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcd5	            0x7e09	                           jle 0x400dce0	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcd7	        0x8b442408	                mov eax, dword [rsp + 8]	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcdb	            0x39e8	                            cmp eax, ebp	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dcdd	           0xf4fe8	                          cmovg ebp, eax	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x400dce0	    0x8b3d00000000	            mov edi, dword [0x0400dce6] 	      4874	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x400dce6	    0xff1500000000	                 call qword [0x0400dcec]	      4874	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x400dcec	           0xfafc5	                           imul eax, ebp	      4874	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x400dcef	            0x89c3	                            mov ebx, eax	      4874	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x400dcf1	        0x8b442408	                mov eax, dword [rsp + 8]	      4875	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x400dcf5	            0x85c0	                           test eax, eax	      4875	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x400dcf7	            0x7e04	                           jle 0x400dcfd	      4875	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x400dcf9	            0x29e8	                            sub eax, ebp	      4876	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x400dcfb	             0x1c3	                            add ebx, eax	      4876	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x400dcfd	    0x8b0500000000	            mov eax, dword [0x0400dd03] 	      4878	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400dd03	          0x8d7b01	                      lea edi, [rbx + 1]	      4879	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x400dd06	          0x4863db	                         movsxd rbx, ebx	      4880	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x400dd09	    0x898424980100	            mov dword [rsp + 0x198], eax	      4878	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400dd10	      0xe800000000	                          call 0x400dd15	      4879	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x400dd15	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_107	CALL_6
0x400dd18	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_107	CALL_6
0x400dd1d	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_107	CALL_6
0x400dd20	    0x48898424a800	             mov qword [rsp + 0xa8], rax	        90	string3.h	FUNCTION_107	CALL_6
0x400dd28	      0xe800000000	                          call 0x400dd2d	        90	string3.h	FUNCTION_107	CALL_6
0x400dd2d	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400dd35	            0x31ff	                            xor edi, edi	      4882	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_144
0x400dd37	        0xc6041800	                 mov byte [rax + rbx], 0	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400dd3b	      0xe800000000	                          call 0x400dd40	      4882	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_144
0x400dd40	            0x85ed	                           test ebp, ebp	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd42	            0x7e7d	                           jle 0x400ddc1	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd44	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd48	            0x31f6	                            xor esi, esi	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd4a	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd52	      0x4489642440	            mov dword [rsp + 0x40], r12d	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd57	      0x44896c2408	               mov dword [rsp + 8], r13d	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd5c	      0x4c89742448	             mov qword [rsp + 0x48], r14	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd61	            0x85ff	                           test edi, edi	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd63	          0x4189fc	                           mov r12d, edi	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd66	        0x400f9fc6	                                setg sil	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd6a	            0x31d2	                            xor edx, edx	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd6c	          0x4189d5	                           mov r13d, edx	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd6f	          0x4189f6	                           mov r14d, esi	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd72	          0x4889de	                            mov rsi, rbx	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x400dd75	    0x8b3d00000000	            mov edi, dword [0x0400dd7b] 	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x400dd7b	        0x4183c501	                             add r13d, 1	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400dd7f	    0xff1500000000	                 call qword [0x0400dd85]	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x400dd85	    0x8b3d00000000	            mov edi, dword [0x0400dd8b] 	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x400dd8b	    0xff1500000000	                 call qword [0x0400dd91]	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x400dd91	            0x4898	                                    cdqe	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x400dd93	    0x8b3d00000000	            mov edi, dword [0x0400dd99] 	      4889	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x400dd99	          0x4801c3	                            add rbx, rax	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x400dd9c	    0xff1500000000	                 call qword [0x0400dda2]	      4889	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x400dda2	          0x4429f0	                           sub eax, r14d	      4889	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x400dda5	          0x4101c4	                           add r12d, eax	      4889	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x400dda8	          0x4439ed	                           cmp ebp, r13d	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddab	            0x75c5	                           jne 0x400dd72	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddad	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddb2	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddb7	      0x4489642408	               mov dword [rsp + 8], r12d	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddbc	      0x448b642440	           mov r12d, dword [rsp + 0x40] 	      4884	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x400ddc1	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	      4895	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400ddc9	    0x418b9e340200	           mov ebx, dword [r14 + 0x234] 	      4895	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400ddd0	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      4895	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x400ddd8	        0x8b442408	                mov eax, dword [rsp + 8]	      4900	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x400dddc	        0x2b44247c	             sub eax, dword [rsp + 0x7c]	      4900	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x400dde0	        0x8b7c247c	            mov edi, dword [rsp + 0x7c] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dde4	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dde9	             0x1f8	                            add eax, edi	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400ddeb	            0x89c6	                            mov esi, eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dded	        0x89442408	                mov dword [rsp + 8], eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400ddf1	          0x4863c7	                         movsxd rax, edi	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400ddf4	          0x4829c1	                            sub rcx, rax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400ddf7	            0x89f8	                            mov eax, edi	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ddf9	             0x1e8	                            add eax, ebp	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ddfb	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de00	    0x8b8c24b00000	            mov ecx, dword [rsp + 0xb0] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de07	        0x294c243c	             sub dword [rsp + 0x3c], ecx	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de0b	            0x39c6	                            cmp esi, eax	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400de0d	     0xf84f40e0000	                            je 0x400ed07	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400de13	            0x85db	                           test ebx, ebx	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de15	     0xf8496070000	                            je 0x400e5b1	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de1b	    0x8b0500000000	            mov eax, dword [0x0400de21] 	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de21	        0x89442470	             mov dword [rsp + 0x70], eax	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de25	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4929	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de29	    0x418b9e300200	           mov ebx, dword [r14 + 0x230] 	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x400de30	    0x898424980100	            mov dword [rsp + 0x198], eax	      4929	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de37	            0x85db	                           test ebx, ebx	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x400de39	      0xb800000000	                              mov eax, 0	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x400de3e	     0xf4405000000	           cmove eax, dword [0x0400de45]	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x400de45	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x400de49	          0x8d4501	                      lea eax, [rbp + 1]	      4936	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de4c	    0x8b2d00000000	            mov ebp, dword [0x0400de52] 	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400de52	        0x89442454	             mov dword [rsp + 0x54], eax	      4936	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x400de56	    0x8b0500000000	            mov eax, dword [0x0400de5c] 	      4937	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	CALL_148
0x400de5c	            0x85ed	                           test ebp, ebp	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400de5e	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4937	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	CALL_148
0x400de65	     0xf85c3130000	                           jne 0x400f22e	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400de6b	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de72	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de7a	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de82	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de8d	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de98	    0x898424700100	            mov dword [rsp + 0x170], eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400de9f	      0xe974e0ffff	                           jmp 0x400bf18	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400dea4	    0x448b0d000000	            mov r9d, dword [0x0400deab] 	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400deab	      0xb801000000	                              mov eax, 1	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400deb0	          0x4585c9	                           test r9d, r9d	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400deb3	     0xf85fa0b0000	                           jne 0x400eab3	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400deb9	             0x1d8	                            add eax, ebx	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400debb	            0x39f0	                            cmp eax, esi	      4128	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x400debd	            0x7e07	                           jle 0x400dec6	      4128	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x400debf	    0x418987740100	            mov dword [r15 + 0x174], eax	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x400dec6	    0x418b87600100	           mov eax, dword [r15 + 0x160] 	      4131	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400decd	          0x4084ed	                           test bpl, bpl	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400ded0	    0x418987640100	            mov dword [r15 + 0x164], eax	      4131	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x400ded7	     0xf842ce4ffff	                            je 0x400c309	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400dedd	      0xbf00000000	                              mov edi, 0	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400dee2	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400dee7	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400deec	      0xe800000000	                          call 0x400def1	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400def1	        0x413b4518	            cmp eax, dword [r13 + 0x18] 	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400def5	    0xc78424800000	               mov dword [rsp + 0x80], 0	      4141	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x400df00	    0xc78424200100	              mov dword [rsp + 0x120], 0	      4141	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x400df0b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400df10	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400df15	     0xf843d0e0000	                            je 0x400ed58	      4133	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x400df1b	    0x4981ff000000	                              cmp r15, 0	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400df22	     0xf85dedaffff	                           jne 0x400ba06	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400df28	      0xe9f2daffff	                           jmp 0x400ba1f	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400df2d	           0xf1f00	                         nop dword [rax]	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x400df30	          0x4889ef	                            mov rdi, rbp	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400df33	      0xe800000000	                          call 0x400df38	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400df38	            0x4898	                                    cdqe	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400df3a	      0xe980d3ffff	                           jmp 0x400b2bf	      4019	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x400df3f	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4304	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x400df4a	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4306	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x400df55	      0xe909e2ffff	                           jmp 0x400c163	      4306	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x400df5a	          0x4401e0	                           add eax, r12d	      4023	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400df5d	    0x898424a00100	            mov dword [rsp + 0x1a0], eax	      4023	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400df64	      0xe97ad3ffff	                           jmp 0x400b2e3	      4023	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x400df69	    0x833d00000000	           cmp dword [0x0400df70], 0x16 	      5359	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df70	     0xf846e0c0000	                            je 0x400ebe4	      5359	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df76	          0x4084ff	                           test dil, dil	      5362	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df79	     0xf851ee7ffff	                           jne 0x400c69d	      5362	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df7f	          0x83f801	                              cmp eax, 1	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df82	     0xf85a1cdffff	                           jne 0x400ad29	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df88	      0xe9d7e6ffff	                           jmp 0x400c664	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400df8d	            0x31c0	                            xor eax, eax	      5340	screen.c	FUNCTION_28	FOR_1	IF_261
0x400df8f	      0xe9b0d5ffff	                           jmp 0x400b544	      5340	screen.c	FUNCTION_28	FOR_1	IF_261
0x400df94	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5340	screen.c	FUNCTION_28	FOR_1	IF_261
0x400df98	       0xfb64c2420	           movzx ecx, byte [rsp + 0x20] 	      5340	screen.c	FUNCTION_28	FOR_1	IF_261
0x400df9d	            0x89ea	                            mov edx, ebp	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400df9f	    0x458b86540200	           mov r8d, dword [r14 + 0x254] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfa6	            0x85c0	                           test eax, eax	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfa8	           0xf9fc0	                                 setg al	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfab	            0x21c1	                            and ecx, eax	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfad	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfb2	      0x4889442428	             mov qword [rsp + 0x28], rax	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfb7	      0xe9c8cfffff	                           jmp 0x400af84	      5725	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0x400dfbc	      0xe800000000	                          call 0x400dfc1	      5156	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0x400dfc1	            0x85c0	                           test eax, eax	      5156	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0x400dfc3	     0xf85110c0000	                           jne 0x400ebda	      5156	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0x400dfc9	    0x8b0500000000	            mov eax, dword [0x0400dfcf] 	      5158	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0x400dfcf	            0x85c0	                           test eax, eax	      5158	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0x400dfd1	     0xf8552efffff	                           jne 0x400cf29	      5158	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0x400dfd7	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      5161	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_86
0x400dfe2	      0xb820000000	                           mov eax, 0x20	      5161	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_86
0x400dfe7	      0xe944efffff	                           jmp 0x400cf30	      5161	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_86
0x400dfec	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400dff1	        0x89442470	             mov dword [rsp + 0x70], eax	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400dff5	            0x31db	                            xor ebx, ebx	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400dff7	      0x4801542448	            add qword [rsp + 0x48], rdx 	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400dffc	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e004	    0xc74424080000	                  mov dword [rsp + 8], 0	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e00c	      0xe9badfffff	                           jmp 0x400bfcb	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e011	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e016	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      5854	screen.c	FUNCTION_28	FOR_1	IF_325
0x400e01d	    0x898424d00000	             mov dword [rsp + 0xd0], eax	      5854	screen.c	FUNCTION_28	FOR_1	IF_325
0x400e024	      0xe909edffff	                           jmp 0x400cd32	      5854	screen.c	FUNCTION_28	FOR_1	IF_325
0x400e029	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      5854	screen.c	FUNCTION_28	FOR_1	IF_325
0x400e030	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400e034	    0x2b8c24b00000	             sub ecx, dword [rsp + 0xb0]	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400e03b	            0x39d1	                            cmp ecx, edx	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400e03d	           0xf9cc2	                                 setl dl	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400e040	      0xe914f6ffff	                           jmp 0x400d659	      5090	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400e045	    0x8b1d00000000	            mov ebx, dword [0x0400e04b] 	      3939	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x400e04b	      0xe9b4f1ffff	                           jmp 0x400d204	      3939	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x400e050	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4383	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x400e055	    0x488db424d001	                  lea rsi, [rsp + 0x1d0]	      4383	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x400e05d	      0xe800000000	                          call 0x400e062	      4383	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x400e062	          0x83f87f	                           cmp eax, 0x7f	      4386	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x400e065	            0x89c3	                            mov ebx, eax	      4383	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x400e067	            0x7f09	                            jg 0x400e072	      4386	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x400e069	    0x898424980100	            mov dword [rsp + 0x198], eax	      4388	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x400e070	            0x89c5	                            mov ebp, eax	      4388	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x400e072	            0x89df	                            mov edi, ebx	      4397	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x400e074	      0xe800000000	                          call 0x400e079	      4397	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x400e079	            0x85c0	                           test eax, eax	      4397	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x400e07b	     0xf84bb060000	                            je 0x400e73c	      4397	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x400e081	    0x8b0500000000	            mov eax, dword [0x0400e087] 	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e087	          0x83e801	                              sub eax, 1	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e08a	            0x85c0	                           test eax, eax	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e08c	            0x7e1c	                           jle 0x400e0aa	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e08e	          0x8d50ff	                      lea edx, [rax - 1]	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e091	            0x4898	                                    cdqe	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e093	          0x4863ca	                         movsxd rcx, edx	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e096	            0x85d2	                           test edx, edx	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e098	    0x8b8c8cd00100	   mov ecx, dword [rsp + rcx*4 + 0x1d0] 	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e09f	    0x898c84d00100	    mov dword [rsp + rax*4 + 0x1d0], ecx	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e0a6	            0x89d0	                            mov eax, edx	      4402	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e0a8	            0x75e4	                           jne 0x400e08e	      4401	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x400e0aa	    0x899c24d00100	            mov dword [rsp + 0x1d0], ebx	      4403	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158
0x400e0b1	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x400e0bc	      0xbb20000000	                           mov ebx, 0x20	      4404	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158
0x400e0c1	            0x89df	                            mov edi, ebx	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400e0c3	      0xe800000000	                          call 0x400e0c8	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400e0c8	            0x85c0	                           test eax, eax	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400e0ca	     0xf8492f6ffff	                            je 0x400d762	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x400e0d0	    0x8b3d00000000	            mov edi, dword [0x0400e0d6] 	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0d6	            0x85ff	                           test edi, edi	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0d8	     0xf8431100000	                            je 0x400f10f	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0de	    0x8b3500000000	            mov esi, dword [0x0400e0e4] 	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0e4	            0x85f6	                           test esi, esi	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0e6	     0xf8523100000	                           jne 0x400f10f	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0ec	    0x8d83dff9ffff	                  lea eax, [rbx - 0x621]	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0f2	          0x83f84f	                           cmp eax, 0x4f	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0f5	     0xf8714100000	                            ja 0x400f10f	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x400e0fb	    0x418b8e540200	           mov ecx, dword [r14 + 0x254] 	      4462	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e102	    0x4863bc24c800	         movsxd rdi, dword [rsp + 0xc8] 	      4466	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x400e10a	      0x48037c2410	             add rdi, qword [rsp + 0x10]	      4466	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x400e10f	            0x85c9	                           test ecx, ecx	      4462	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e111	     0xf8494170000	                            je 0x400f8ab	      4462	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e117	      0xe800000000	                          call 0x400e11c	      4466	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x400e11c	          0x4189c1	                            mov r9d, eax	      4466	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x400e11f	    0x8b8424d00100	           mov eax, dword [rsp + 0x1d0] 	      4467	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e126	    0x448b84248401	           mov r8d, dword [rsp + 0x184] 	      4465	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e12e	    0x898424840100	            mov dword [rsp + 0x184], eax	      4467	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x400e135	    0x8b8c24680100	           mov ecx, dword [rsp + 0x168] 	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e13c	    0x488d9424d001	                  lea rdx, [rsp + 0x1d0]	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e144	    0x488db4249801	                  lea rsi, [rsp + 0x198]	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e14c	            0x89df	                            mov edi, ebx	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e14e	      0xe800000000	                          call 0x400e153	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e153	    0x899c24680100	            mov dword [rsp + 0x168], ebx	      4455	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x400e15a	            0x89c3	                            mov ebx, eax	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x400e15c	      0xe90fdbffff	                           jmp 0x400bc70	      4455	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x400e161	     0xf1f80000000	                         nop dword [rax]	      4455	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x400e168	    0x8bbc240c0100	           mov edi, dword [rsp + 0x10c] 	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e16f	          0x4489e6	                           mov esi, r12d	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e172	      0xe800000000	                          call 0x400e177	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e177	          0x4189c4	                           mov r12d, eax	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e17a	      0xe9e3e7ffff	                           jmp 0x400c962	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e17f	    0x418b8fac0000	            mov ecx, dword [r15 + 0xac] 	      4623	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x400e186	        0x8b7c2474	            mov edi, dword [rsp + 0x74] 	      5497	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e18a	    0x458b87540200	           mov r8d, dword [r15 + 0x254] 	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e191	            0x85ff	                           test edi, edi	      5497	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e193	     0xf842fd6ffff	                            je 0x400b7c8	      5497	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e199	          0x4585c0	                           test r8d, r8d	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e19c	     0xf8526d6ffff	                           jne 0x400b7c8	      5499	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e1a2	            0x31ed	                            xor ebp, ebp	      5503	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e1a4	            0x85f6	                           test esi, esi	      5506	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0x400e1a6	            0x7407	                            je 0x400e1af	      5506	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0x400e1a8	    0x4963afd80000	         movsxd rbp, dword [r15 + 0xd8] 	      5506	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0x400e1af	          0x496306	                 movsxd rax, dword [r14]	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1b2	            0x85c0	                           test eax, eax	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1b4	            0x7816	                            js 0x400e1cc	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1b6	        0x498d7604	                      lea rsi, [r14 + 4]	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1ba	            0x39c5	                            cmp ebp, eax	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1bc	        0x480f4ce8	                          cmovl rbp, rax	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1c0	        0x4883c604	                              add rsi, 4	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1c4	        0x486346fc	             movsxd rax, dword [rsi - 4]	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1c8	            0x85c0	                           test eax, eax	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1ca	            0x79ee	                           jns 0x400e1ba	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1cc	    0xc74424740100	               mov dword [rsp + 0x74], 1	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1d4	      0xe9e8d4ffff	                           jmp 0x400b6c1	      5510	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0x400e1d9	    0x488dbc24ac01	                  lea rdi, [rsp + 0x1ac]	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1e1	      0xe800000000	                          call 0x400e1e6	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1e6	    0x898424140100	            mov dword [rsp + 0x114], eax	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1ed	      0xe98ce7ffff	                           jmp 0x400c97e	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1f2	            0x31c0	                            xor eax, eax	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1f4	      0xe941e5ffff	                           jmp 0x400c73a	      4630	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x400e1f9	    0x8b0500000000	            mov eax, dword [0x0400e1ff] 	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e1ff	            0x85c0	                           test eax, eax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e201	     0xf85ac020000	                           jne 0x400e4b3	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e207	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e20c	      0x4889442448	             mov qword [rsp + 0x48], rax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e211	      0xe9aae9ffff	                           jmp 0x400cbc0	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e216	      0x488b6c2460	            mov rbp, qword [rsp + 0x60] 	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e21b	          0x4c89f7	                            mov rdi, r14	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e21e	      0xbb00000000	                              mov ebx, 0	      3899	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x400e223	          0x4889ee	                            mov rsi, rbp	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e226	      0xe800000000	                          call 0x400e22b	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e22b	            0x4899	                                     cqo	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e22d	          0x4831d0	                            xor rax, rdx	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e230	          0x4989c4	                            mov r12, rax	      3907	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x400e233	          0x4929d4	                            sub r12, rdx	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e236	     0xf85aceeffff	                           jne 0x400d0e8	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e23c	    0x418b86380200	           mov eax, dword [r14 + 0x238] 	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e243	            0x85c0	                           test eax, eax	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e245	     0xf849deeffff	                            je 0x400d0e8	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e24b	    0x418b863c0200	           mov eax, dword [r14 + 0x23c] 	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e252	            0x85c0	                           test eax, eax	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e254	      0xb800000000	                              mov eax, 0	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e259	        0x4c0f45e5	                         cmovne r12, rbp	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e25d	        0x480f45d8	                         cmovne rbx, rax	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e261	      0xe982eeffff	                           jmp 0x400d0e8	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e266	          0x4189d0	                            mov r8d, edx	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e269	            0x31f6	                            xor esi, esi	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e26b	      0xe909e5ffff	                           jmp 0x400c779	      3908	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x400e270	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4560	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e27b	    0xc74424702000	           mov dword [rsp + 0x70], 0x20 	      4559	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e283	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4561	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e28e	    0xc744245c3c00	           mov dword [rsp + 0x5c], 0x3c 	      4551	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e296	    0xc74424080100	                  mov dword [rsp + 8], 1	      4550	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e29e	      0xe995daffff	                           jmp 0x400bd38	      4550	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x400e2a3	            0x84c0	                             test al, al	      4497	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x400e2a5	    0x4c8d94241002	                  lea r10, [rsp + 0x210]	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2ad	     0xf852d070000	                           jne 0x400e9e0	      4497	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x400e2b3	          0x4c89d7	                            mov rdi, r10	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2b6	            0x89de	                            mov esi, ebx	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2b8	      0x4c89542408	                mov qword [rsp + 8], r10	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2bd	      0xe800000000	                          call 0x400e2c2	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2c2	      0x4c8b542408	                mov r10, qword [rsp + 8]	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x400e2c7	    0xc78424c80000	               mov dword [rsp + 0xc8], 1	      4500	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x400e2d2	    0x4c899424b801	            mov qword [rsp + 0x1b8], r10	      4509	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e2da	          0x4c89d2	                            mov rdx, r10	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2dd	            0x8b0a	                    mov ecx, dword [rdx]	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2df	        0x4883c204	                              add rdx, 4	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2e3	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2e9	            0xf7d1	                                 not ecx	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2eb	            0x21c8	                            and eax, ecx	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2ed	      0x2580808080	                     and eax, 0x80808080	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2f2	            0x74e9	                            je 0x400e2dd	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2f4	            0x89c1	                            mov ecx, eax	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e2f6	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4511	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e2fe	          0xc1e910	                           shr ecx, 0x10	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e301	      0xa980800000	                        test eax, 0x8080	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e306	           0xf44c1	                          cmove eax, ecx	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e309	        0x488d4a02	                      lea rcx, [rdx + 2]	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e30d	            0x89c3	                            mov ebx, eax	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e30f	        0x480f44d1	                          cmove rdx, rcx	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e313	              0xc3	                              add bl, al	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e315	     0xfb69c241002	          movzx ebx, byte [rsp + 0x210] 	      4512	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e31d	        0x4883da03	                              sbb rdx, 3	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e321	          0x4c29d2	                            sub rdx, r10	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e324	          0x8d42ff	                      lea eax, [rdx - 1]	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e327	    0x899c24980100	            mov dword [rsp + 0x198], ebx	      4512	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e32e	        0x89442408	                mov dword [rsp + 8], eax	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x400e332	        0x498d4201	                      lea rax, [r10 + 1]	      4512	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e336	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      4512	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x400e33e	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4513	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x400e342	          0x4409e8	                            or eax, r13d	      4513	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x400e345	     0xf8525d9ffff	                           jne 0x400bc70	      4513	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x400e34b	    0x8b0500000000	            mov eax, dword [0x0400e351] 	      4516	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171	CALL_119
0x400e351	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4517	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x400e359	        0x89542454	             mov dword [rsp + 0x54], edx	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x400e35d	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4516	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171	CALL_119
0x400e364	      0xe907d9ffff	                           jmp 0x400bc70	      4516	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171	CALL_119
0x400e369	    0x8b3500000000	            mov esi, dword [0x0400e36f] 	      4229	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x400e36f	    0x8bbc24c00000	            mov edi, dword [rsp + 0xc0] 	      4229	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x400e376	      0xe800000000	                          call 0x400e37b	      4229	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x400e37b	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      4229	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x400e382	      0xe9d6d7ffff	                           jmp 0x400bb5d	      4229	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x400e387	    0x486394249c01	        movsxd rdx, dword [rsp + 0x19c] 	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e38f	            0x85d2	                           test edx, edx	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e391	     0xf88b7c1ffff	                            js 0x400a54e	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e397	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e39c	          0x4839d6	                            cmp rsi, rdx	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e39f	     0xf8ea9c1ffff	                           jle 0x400a54e	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3a5	    0x89b4249c0100	            mov dword [rsp + 0x19c], esi	      3608	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3ac	      0xe99dc1ffff	                           jmp 0x400a54e	      3608	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3b1	          0x4c89e8	                            mov rax, r13	      3608	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3b4	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      3608	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3b9	          0x4989d5	                            mov r13, rdx	      3608	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x400e3bc	          0x4839c3	                            cmp rbx, rax	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3bf	     0xf8e3f0d0000	                           jle 0x400f104	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3c5	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3c9	    0x410b876c0200	             or eax, dword [r15 + 0x26c]	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3d0	     0xf84020d0000	                            je 0x400f0d8	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3d6	          0x4c89e0	                            mov rax, r12	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3d9	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400e3de	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3078	screen.c	FUNCTION_28
0x400e3e6	      0xe945c1ffff	                           jmp 0x400a530	      3078	screen.c	FUNCTION_28
0x400e3eb	      0x8344243c01	               add dword [rsp + 0x3c], 1	      5448	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_99
0x400e3f0	      0x8344246c01	               add dword [rsp + 0x6c], 1	      5449	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_99
0x400e3f5	      0xe93df8ffff	                           jmp 0x400dc37	      5449	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_99
0x400e3fa	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5391	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0x400e3fe	    0x413b86ac0000	            cmp eax, dword [r14 + 0xac] 	      5391	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0x400e405	     0xf8cb0e2ffff	                            jl 0x400c6bb	      5391	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0x400e40b	      0xb8ffffffff	                     mov eax, 0xffffffff	      5391	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0x400e410	            0x89c2	                            mov edx, eax	      5392	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0x400e412	         0x144246c	             add dword [rsp + 0x6c], eax	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0x400e416	         0x154243c	             add dword [rsp + 0x3c], edx	      5399	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0x400e41a	        0x8b5c246c	            mov ebx, dword [rsp + 0x6c] 	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0x400e41e	      0xe9c6e2ffff	                           jmp 0x400c6e9	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0x400e423	    0x8b3500000000	            mov esi, dword [0x0400e429] 	      5614	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0x400e429	          0x4489e7	                           mov edi, r12d	      5614	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0x400e42c	          0x4489e3	                           mov ebx, r12d	      5613	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0x400e42f	      0xe800000000	                          call 0x400e434	      5614	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0x400e434	          0x4189c4	                           mov r12d, eax	      5614	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0x400e437	      0xe9ccc9ffff	                           jmp 0x400ae08	      5614	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0x400e43c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e441	    0xff1500000000	                 call qword [0x0400e447]	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e447	          0x83f801	                              cmp eax, 1	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e44a	     0xf8e2dd4ffff	                           jle 0x400b87d	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e450	    0x8b8424280100	           mov eax, dword [rsp + 0x128] 	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e457	        0x89442468	             mov dword [rsp + 0x68], eax	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e45b	      0xe972d4ffff	                           jmp 0x400b8d2	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x400e460	        0x8b742408	                mov esi, dword [rsp + 8]	      5179	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0x400e464	        0x89442470	             mov dword [rsp + 0x70], eax	      5180	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0x400e468	            0x31db	                            xor ebx, ebx	      5180	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0x400e46a	     0x1b424b00000	             add dword [rsp + 0xb0], esi	      5179	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0x400e471	         0x174243c	             add dword [rsp + 0x3c], esi	      5180	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0x400e475	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e47d	    0xc74424080000	                  mov dword [rsp + 8], 0	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e485	      0xe941dbffff	                           jmp 0x400bfcb	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400e48a	    0x8b0500000000	            mov eax, dword [0x0400e490] 	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e490	            0x85c0	                           test eax, eax	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e492	     0xf8428e7ffff	                            je 0x400cbc0	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e498	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e49d	    0x486394243401	        movsxd rdx, dword [rsp + 0x134] 	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4a5	      0x482b4c2418	             sub rcx, qword [rsp + 0x18]	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4aa	          0x4839d1	                            cmp rcx, rdx	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4ad	     0xf8f0de7ffff	                            jg 0x400cbc0	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4b3	        0x89442470	             mov dword [rsp + 0x70], eax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4b7	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      4779	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4bb	    0x898424980100	            mov dword [rsp + 0x198], eax	      4779	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e4c2	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4780	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x400e4c6	          0x4409e8	                            or eax, r13d	      4780	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x400e4c9	            0x751d	                           jne 0x400e4e8	      4780	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x400e4cb	    0x8b0500000000	            mov eax, dword [0x0400e4d1] 	      4783	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202	CALL_135
0x400e4d1	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4784	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x400e4d9	    0xc74424540100	               mov dword [rsp + 0x54], 1	      4782	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x400e4e1	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      4783	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202	CALL_135
0x400e4e8	    0x448b1d000000	           mov r11d, dword [0x0400e4ef] 	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400e4ef	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400e4f3	          0x4585db	                         test r11d, r11d	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400e4f6	     0xf8548070000	                           jne 0x400ec44	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400e4fc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400e501	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4795	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	ELSE_71
0x400e50c	      0x4889442448	             mov qword [rsp + 0x48], rax	      4795	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	ELSE_71
0x400e511	      0xe9aae6ffff	                           jmp 0x400cbc0	      4795	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	ELSE_71
0x400e516	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      5005	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400e521	    0xc74424702000	           mov dword [rsp + 0x70], 0x20 	      5005	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400e529	      0xe966d9ffff	                           jmp 0x400be94	      5005	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0x400e52e	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      4309	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x400e536	    0x488db424d001	                  lea rsi, [rsp + 0x1d0]	      4309	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x400e53e	      0xe800000000	                          call 0x400e543	      4309	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x400e543	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      4311	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x400e54e	            0x89c3	                            mov ebx, eax	      4309	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x400e550	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4310	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x400e55b	      0xe903dcffff	                           jmp 0x400c163	      4310	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x400e560	            0x89c5	                            mov ebp, eax	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e562	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e56e	      0xe96df8ffff	                           jmp 0x400dde0	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e573	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3929	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	ELSE_27
0x400e57b	      0xe9fdebffff	                           jmp 0x400d17d	      3929	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	ELSE_27
0x400e580	        0x8b7c247c	            mov edi, dword [rsp + 0x7c] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e584	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e589	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e595	             0x1f8	                            add eax, edi	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e597	        0x89442408	                mov dword [rsp + 8], eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e59b	          0x4863c7	                         movsxd rax, edi	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e59e	          0x4829c3	                            sub rbx, rax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5a1	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5a6	    0x8b9c24b00000	            mov ebx, dword [rsp + 0xb0] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5ad	        0x295c243c	             sub dword [rsp + 0x3c], ebx	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5b1	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5b8	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      4952	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_75
0x400e5c3	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5cb	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5d6	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5e1	    0x898424700100	            mov dword [rsp + 0x170], eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400e5e8	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      4951	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_75
0x400e5f0	      0xe923d9ffff	                           jmp 0x400bf18	      4951	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_75
0x400e5f5	      0xbe01000000	                              mov esi, 1	      3472	screen.c	FUNCTION_28	CALL_25
0x400e5fa	            0x89c7	                            mov edi, eax	      3472	screen.c	FUNCTION_28	CALL_25
0x400e5fc	      0xe800000000	                          call 0x400e601	      3472	screen.c	FUNCTION_28	CALL_25
0x400e601	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e605	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      3472	screen.c	FUNCTION_28	CALL_25
0x400e60c	      0xe800000000	                          call 0x400e611	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e611	            0x85c0	                           test eax, eax	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e613	     0xf85990c0000	                           jne 0x400f2b2	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e619	    0x8b9c24c00000	            mov ebx, dword [rsp + 0xc0] 	      3479	screen.c	FUNCTION_28	IF_38
0x400e620	            0x85db	                           test ebx, ebx	      3479	screen.c	FUNCTION_28	IF_38
0x400e622	     0xf84c8bcffff	                            je 0x400a2f0	      3479	screen.c	FUNCTION_28	IF_38
0x400e628	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3480	screen.c	FUNCTION_28	IF_38
0x400e633	      0xe9c3bcffff	                           jmp 0x400a2fb	      3480	screen.c	FUNCTION_28	IF_38
0x400e638	    0x418b87840000	            mov eax, dword [r15 + 0x84] 	      3463	screen.c	FUNCTION_28	IF_35
0x400e63f	    0x898424000100	            mov dword [rsp + 0x100], eax	      3463	screen.c	FUNCTION_28	IF_35
0x400e646	      0xe979bcffff	                           jmp 0x400a2c4	      3463	screen.c	FUNCTION_28	IF_35
0x400e64b	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3283	screen.c	FUNCTION_28	IF_6	CALL_7
0x400e64f	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3283	screen.c	FUNCTION_28	IF_6	CALL_7
0x400e654	      0xbaffffffff	                     mov edx, 0xffffffff	      3283	screen.c	FUNCTION_28	IF_6	CALL_7
0x400e659	      0xe800000000	                          call 0x400e65e	      3283	screen.c	FUNCTION_28	IF_6	CALL_7
0x400e65e	    0xc78424380100	              mov dword [rsp + 0x138], 1	      3282	screen.c	FUNCTION_28	IF_6
0x400e669	    0x8984243c0100	            mov dword [rsp + 0x13c], eax	      3283	screen.c	FUNCTION_28	IF_6	CALL_7
0x400e670	    0xc78424100100	              mov dword [rsp + 0x110], 1	      3281	screen.c	FUNCTION_28	IF_6
0x400e67b	      0xe9c0baffff	                           jmp 0x400a140	      3281	screen.c	FUNCTION_28	IF_6
0x400e680	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3448	screen.c	FUNCTION_28	IF_31	IF_32
0x400e683	     0xf84ec0d0000	                            je 0x400f475	      3448	screen.c	FUNCTION_28	IF_31	IF_32
0x400e689	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x17 	      3458	screen.c	FUNCTION_28	IF_31	ELSE_14
0x400e694	    0xc78424000100	              mov dword [rsp + 0x100], 0	      3459	screen.c	FUNCTION_28	IF_31
0x400e69f	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3460	screen.c	FUNCTION_28	IF_31
0x400e6aa	      0xe906bcffff	                           jmp 0x400a2b5	      3460	screen.c	FUNCTION_28	IF_31
0x400e6af	    0x8b0500000000	            mov eax, dword [0x0400e6b5] 	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6b5	            0x85c0	                           test eax, eax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6b7	     0xf84f0e4ffff	                            je 0x400cbad	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6bd	          0x83ff20	                           cmp edi, 0x20	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6c0	     0xf4405000000	           cmove eax, dword [0x0400e6c7]	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6c7	        0x89442470	             mov dword [rsp + 0x70], eax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6cb	      0xe9e7fdffff	                           jmp 0x400e4b7	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x400e6d0	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5061	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0x400e6db	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0x400e6e3	      0xe930d8ffff	                           jmp 0x400bf18	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0x400e6e8	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0x400e6ef	      0xe800000000	                          call 0x400e6f4	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0x400e6f4	          0x83e801	                              sub eax, 1	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0x400e6f7	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e703	        0x89442408	                mov dword [rsp + 8], eax	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0x400e707	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e70f	        0x488d5001	                      lea rdx, [rax + 1]	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e713	    0x48899424b801	            mov qword [rsp + 0x1b8], rdx	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e71b	           0xfb600	                   movzx eax, byte [rax]	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e71e	    0x898424980100	            mov dword [rsp + 0x198], eax	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e725	      0xe9fcf1ffff	                           jmp 0x400d926	      5052	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0x400e72a	          0x4489e6	                           mov esi, r12d	      4582	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x400e72d	            0x89c7	                            mov edi, eax	      4582	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x400e72f	      0xe800000000	                          call 0x400e734	      4582	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x400e734	          0x4189c4	                           mov r12d, eax	      4582	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x400e737	      0xe95ee1ffff	                           jmp 0x400c89a	      4582	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x400e73c	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x400e747	      0xe9e7efffff	                           jmp 0x400d733	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x400e74c	      0x448b442408	                mov r8d, dword [rsp + 8]	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e751	          0x4585c0	                           test r8d, r8d	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e754	     0xf84f8c5ffff	                            je 0x400ad52	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e75a	        0x8b7c245c	            mov edi, dword [rsp + 0x5c] 	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e75e	            0x85ff	                           test edi, edi	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e760	     0xf8599ecffff	                           jne 0x400d3ff	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e766	    0x488b9424b801	           mov rdx, qword [rsp + 0x1b8] 	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e76e	          0x803a00	                       cmp byte [rdx], 0	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e771	     0xf84dbc5ffff	                            je 0x400ad52	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e777	      0xe983ecffff	                           jmp 0x400d3ff	      5575	screen.c	FUNCTION_28	FOR_1	IF_291
0x400e77c	    0x49639f940000	         movsxd rbx, dword [r15 + 0x94] 	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0x400e783	      0xe926ceffff	                           jmp 0x400b5ae	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0x400e788	    0x418bb76c0200	           mov esi, dword [r15 + 0x26c] 	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e78f	            0x85f6	                           test esi, esi	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e791	     0xf85a8ceffff	                           jne 0x400b63f	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e797	    0x458b87540200	           mov r8d, dword [r15 + 0x254] 	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e79e	    0x418b8fac0000	            mov ecx, dword [r15 + 0xac] 	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e7a5	      0xe91ed0ffff	                           jmp 0x400b7c8	      5492	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0x400e7aa	        0x498b5740	            mov rdx, qword [r15 + 0x40] 	      3624	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7ae	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      3625	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7b3	          0x4889c5	                            mov rbp, rax	      3621	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7b6	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      3624	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7ba	    0x4c8d8424b401	                   lea r8, [rsp + 0x1b4]	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7c2	        0x41896f40	             mov dword [r15 + 0x40], ebp	      3626	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7c6	      0xb901000000	                              mov ecx, 1	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7cb	      0xbe01000000	                              mov esi, 1	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7d0	          0x4c89ff	                            mov rdi, r15	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7d3	    0x48899424c801	            mov qword [rsp + 0x1c8], rdx	      3624	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7db	        0x49895f38	             mov qword [r15 + 0x38], rbx	      3625	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7df	      0xba01000000	                              mov edx, 1	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7e4	    0xc78424b40100	          mov dword [rsp + 0x1b4], 0x2e 	      3622	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7ef	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	      3624	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e7f7	      0xe800000000	                          call 0x400e7fc	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e7fc	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3630	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x400e800	          0x4189c4	                           mov r12d, eax	      3627	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x400e803	            0x31d2	                            xor edx, edx	      3630	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x400e805	          0x4889de	                            mov rsi, rbx	      3630	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x400e808	      0xe800000000	                          call 0x400e80d	      3630	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x400e80d	          0x4585e4	                         test r12d, r12d	      3633	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e810	          0x4889c3	                            mov rbx, rax	      3630	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x400e813	          0x4863c5	                         movsxd rax, ebp	      3631	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e816	        0x488d2c03	                    lea rbp, [rbx + rax]	      3631	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e81a	            0x740d	                            je 0x400e829	      3633	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e81c	        0x49634f40	         movsxd rcx, dword [r15 + 0x40] 	      3633	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e820	          0x4839c1	                            cmp rcx, rax	      3633	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e823	     0xf8e07070000	                           jle 0x400ef30	      3633	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e829	          0x4c89fe	                            mov rsi, r15	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e82c	          0x4889ef	                            mov rdi, rbp	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e82f	    0xc78424b40100	          mov dword [rsp + 0x1b4], 0x2e 	      3637	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x400e83a	      0xe800000000	                          call 0x400e83f	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e83f	          0x4829d8	                            sub rax, rbx	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e842	    0xc78424240100	              mov dword [rsp + 0x124], 0	      3111	screen.c	FUNCTION_28
0x400e84d	          0x83c001	                              add eax, 1	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e850	    0x898424580100	            mov dword [rsp + 0x158], eax	      3638	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x400e857	    0x448b9c24f400	           mov r11d, dword [rsp + 0xf4] 	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e85f	    0x488b8424c001	           mov rax, qword [rsp + 0x1c0] 	      3649	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e867	    0x488b9424c801	           mov rdx, qword [rsp + 0x1c8] 	      3649	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e86f	          0x4585db	                         test r11d, r11d	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e872	        0x49894738	             mov qword [r15 + 0x38], rax	      3649	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e876	        0x49895740	             mov qword [r15 + 0x40], rdx	      3649	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x400e87a	     0xf85c90a0000	                           jne 0x400f349	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e880	          0x4829dd	                            sub rbp, rbx	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e883	      0x48896c2408	                mov qword [rsp + 8], rbp	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e888	          0x892c24	                    mov dword [rsp], ebp	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e88b	          0x4989ed	                            mov r13, rbp	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e88e	      0xe906bdffff	                           jmp 0x400a599	      3653	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x400e893	          0x4c89ff	                            mov rdi, r15	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e896	      0xe800000000	                          call 0x400e89b	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e89b	      0x4839442460	            cmp qword [rsp + 0x60], rax 	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e8a0	     0xf854abaffff	                           jne 0x400a2f0	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400e8a6	    0x8b0500000000	            mov eax, dword [0x0400e8ac] 	      3477	screen.c	FUNCTION_28	CALL_28
0x400e8ac	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      3477	screen.c	FUNCTION_28	CALL_28
0x400e8b3	      0xe961fdffff	                           jmp 0x400e619	      3477	screen.c	FUNCTION_28	CALL_28
0x400e8b8	    0x838424b00000	               add dword [rsp + 0xb0], 1	      5773	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	ELSE_112
0x400e8c0	      0x8344243c01	               add dword [rsp + 0x3c], 1	      5774	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	ELSE_112
0x400e8c5	      0xe952edffff	                           jmp 0x400d61c	      5774	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	ELSE_112
0x400e8ca	        0x400fb6ed	                          movzx ebp, bpl	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8ce	    0x80bd00000000	                       cmp byte [rbp], 0	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8d5	     0xf848ce2ffff	                            je 0x400cb67	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8db	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8e0	           0xfb600	                   movzx eax, byte [rax]	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8e3	    0x80b800000000	                       cmp byte [rax], 0	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8ea	     0xf8577e2ffff	                           jne 0x400cb67	      4733	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x400e8f0	    0x8b0500000000	            mov eax, dword [0x0400e8f6] 	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e8f6	            0x85c0	                           test eax, eax	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e8f8	     0xf85b20c0000	                           jne 0x400f5b0	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e8fe	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e903	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e907	          0x4531c0	                            xor r8d, r8d	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e90a	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e90f	          0x4c89f7	                            mov rdi, r14	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e912	            0x31db	                            xor ebx, ebx	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e914	        0x488d50ff	                      lea rdx, [rax - 1]	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e918	      0xe800000000	                          call 0x400e91d	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e91d	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e924	          0x83e801	                              sub eax, 1	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e927	        0x89442408	                mov dword [rsp + 8], eax	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400e92b	          0x83ff09	                              cmp edi, 9	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e92e	     0xf85640c0000	                           jne 0x400f598	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e934	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e938	         0x3442408	                add eax, dword [rsp + 8]	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e93c	    0x413b86ac0000	            cmp eax, dword [r14 + 0xac] 	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e943	            0x7e21	                           jle 0x400e966	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e945	        0x498b4608	                mov rax, qword [r14 + 8]	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e949	    0x488b88a81500	          mov rcx, qword [rax + 0x15a8] 	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e950	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e955	          0x8d71ff	                      lea esi, [rcx - 1]	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e958	            0x4899	                                     cqo	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e95a	          0x4863c9	                         movsxd rcx, ecx	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e95d	          0x48f7f9	                                idiv rcx	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e960	            0x29d6	                            sub esi, edx	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e962	        0x89742408	                mov dword [rsp + 8], esi	      4748	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400e966	            0x85db	                           test ebx, ebx	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e968	      0xb820000000	                           mov eax, 0x20	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e96d	      0xba3c000000	                           mov edx, 0x3c	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e972	           0xf4fc2	                          cmovg eax, edx	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e975	    0x8bb424b00000	            mov esi, dword [rsp + 0xb0] 	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e97c	        0x2974243c	             sub dword [rsp + 0x3c], esi	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e980	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400e984	      0x486344247c	         movsxd rax, dword [rsp + 0x7c] 	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e989	         0x1442408	                add dword [rsp + 8], eax	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e98d	      0x4829442428	             sub qword [rsp + 0x28], rax	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e992	    0x89b424700100	            mov dword [rsp + 0x170], esi	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e999	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e9a1	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      4761	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x400e9ac	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      4763	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9b3	            0x85c0	                           test eax, eax	      4763	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9b5	     0xf85c1e1ffff	                           jne 0x400cb7c	      4763	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9bb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9c0	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9cb	      0xbf20000000	                           mov edi, 0x20	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9d0	      0x4889442448	             mov qword [rsp + 0x48], rax	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9d5	      0xe9e6e1ffff	                           jmp 0x400cbc0	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9da	    0x660f1f440000	                    nop word [rax + rax]	      4764	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x400e9e0	      0xba58580000	                         mov edx, 0x5858	       110	string3.h	FUNCTION_110	CALL_3
0x400e9e5	    0xc68424120200	               mov byte [rsp + 0x212], 0	       110	string3.h	FUNCTION_110	CALL_3
0x400e9ed	    0xc78424c80000	               mov dword [rsp + 0xc8], 2	      4506	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	ELSE_61
0x400e9f8	    0x668994241002	              mov word [rsp + 0x210], dx	       110	string3.h	FUNCTION_110	CALL_3
0x400ea00	      0xe9cdf8ffff	                           jmp 0x400e2d2	       110	string3.h	FUNCTION_110	CALL_3
0x400ea05	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400ea09	      0xe800000000	                          call 0x400ea0e	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400ea0e	          0x83f801	                              cmp eax, 1	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400ea11	     0xf8ea4090000	                           jle 0x400f3bb	      5301	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0x400ea17	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      5304	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea22	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      5305	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea2d	            0x31ff	                            xor edi, edi	      5305	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea2f	      0xb8c0000000	                           mov eax, 0xc0	      5305	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea34	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      5303	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea3f	      0xe990c2ffff	                           jmp 0x400acd4	      5305	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0x400ea44	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea48	    0xff1500000000	                 call qword [0x0400ea4e]	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea4e	          0x83f801	                              cmp eax, 1	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea51	     0xf8e04090000	                           jle 0x400f35b	      5291	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea57	    0x8b0500000000	            mov eax, dword [0x0400ea5d] 	      5298	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0x400ea5d	    0xc74424540200	               mov dword [rsp + 0x54], 2	      5297	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea65	    0xc744245c3c00	           mov dword [rsp + 0x5c], 0x3c 	      5295	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea6d	    0xc74424080100	                  mov dword [rsp + 8], 1	      5296	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0x400ea75	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      5298	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0x400ea7c	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      5298	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0x400ea83	        0x89442470	             mov dword [rsp + 0x70], eax	      5298	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0x400ea87	      0xe923c2ffff	                           jmp 0x400acaf	      5298	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0x400ea8c	          0x4c89d7	                            mov rdi, r10	      4427	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x400ea8f	      0xe800000000	                          call 0x400ea94	      4427	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x400ea94	      0x4c8b542408	                mov r10, qword [rsp + 8]	      4427	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x400ea99	      0xe9f0ecffff	                           jmp 0x400d78e	      4427	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x400ea9e	          0x4c89d7	                            mov rdi, r10	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eaa1	        0x4c891424	                    mov qword [rsp], r10	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eaa5	      0xe800000000	                          call 0x400eaaa	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eaaa	        0x4c8b1424	                    mov r10, qword [rsp]	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eaae	      0xe9bae6ffff	                           jmp 0x400d16d	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eab3	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x400eab8	          0x4889cf	                            mov rdi, rcx	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400eabb	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400eac0	    0xff1500000000	                 call qword [0x0400eac6]	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400eac6	    0x418bb7740100	           mov esi, dword [r15 + 0x174] 	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400eacd	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400ead2	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400ead7	      0xe9ddf3ffff	                           jmp 0x400deb9	      4126	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x400eadc	    0x448b1d000000	           mov r11d, dword [0x0400eae3] 	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eae3	          0x4585db	                         test r11d, r11d	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eae6	     0xf84ece9ffff	                            je 0x400d4d8	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eaec	      0xe800000000	                          call 0x400eaf1	      5068	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0x400eaf1	            0x85c0	                           test eax, eax	      5068	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0x400eaf3	     0xf84dfe9ffff	                            je 0x400d4d8	      5068	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0x400eaf9	    0x48638424a001	        movsxd rax, dword [rsp + 0x1a0] 	      5069	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb01	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5069	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb06	     0xf84cce9ffff	                            je 0x400d4d8	      5069	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb0c	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      5070	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb11	     0xf8dc1e9ffff	                           jge 0x400d4d8	      5070	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb17	    0x418bbe540200	           mov edi, dword [r14 + 0x254] 	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb1e	            0x85ff	                           test edi, edi	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb20	     0xf84e70a0000	                            je 0x400f60d	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb26	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	      5071	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb2a	            0x85f6	                           test esi, esi	      5071	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb2c	     0xf881a0e0000	                            js 0x400f94c	      5071	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb32	    0xc78424980100	          mov dword [rsp + 0x198], 0x20 	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb3d	    0x48836c241001	               sub qword [rsp + 0x10], 1	      5078	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb43	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5078	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb4f	      0xe9c4d3ffff	                           jmp 0x400bf18	      5078	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400eb54	          0x4531c0	                            xor r8d, r8d	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400eb57	      0xbe01000000	                              mov esi, 1	      5430	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0x400eb5c	          0x4589d4	                          mov r12d, r10d	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400eb5f	      0xe9d0dbffff	                           jmp 0x400c734	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0x400eb64	        0x8b7c2408	                mov edi, dword [rsp + 8]	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb68	    0xc70424050000	                      mov dword [rsp], 5	      3956	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x400eb6f	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x400eb77	             0x1f8	                            add eax, edi	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb79	            0x85ff	                           test edi, edi	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb7b	    0x898424a00100	            mov dword [rsp + 0x1a0], eax	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb82	        0x410f94c4	                               sete r12b	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb86	      0xe92ebfffff	                           jmp 0x400aab9	      3984	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x400eb8b	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      5029	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0x400eb92	      0xe800000000	                          call 0x400eb97	      5029	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0x400eb97	          0x83e801	                              sub eax, 1	      5029	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0x400eb9a	        0x89442408	                mov dword [rsp + 8], eax	      5029	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0x400eb9e	      0xe9e6ecffff	                           jmp 0x400d889	      5029	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0x400eba3	    0x4c3b3d000000	            cmp r15, qword [0x0400ebaa] 	      3752	screen.c	FUNCTION_28	IF_72
0x400ebaa	     0xf848b0b0000	                            je 0x400f73b	      3752	screen.c	FUNCTION_28	IF_72
0x400ebb0	    0x8b0500000000	            mov eax, dword [0x0400ebb6] 	      3754	screen.c	FUNCTION_28	IF_72	CALL_46
0x400ebb6	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3755	screen.c	FUNCTION_28	IF_72
0x400ebc1	    0x898424c00000	             mov dword [rsp + 0xc0], eax	      3754	screen.c	FUNCTION_28	IF_72	CALL_46
0x400ebc8	      0xe9eebbffff	                           jmp 0x400a7bb	      3754	screen.c	FUNCTION_28	IF_72	CALL_46
0x400ebcd	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3101	screen.c	FUNCTION_28
0x400ebd5	      0xe93fb5ffff	                           jmp 0x400a119	      3101	screen.c	FUNCTION_28
0x400ebda	      0xe800000000	                          call 0x400ebdf	      5157	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0x400ebdf	      0xe945e3ffff	                           jmp 0x400cf29	      5157	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0x400ebe4	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      5360	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ebe9	    0x483b35000000	            cmp rsi, qword [0x0400ebf0] 	      5360	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ebf0	     0xf8480f3ffff	                            je 0x400df76	      5360	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ebf6	    0x488b15000000	            mov rdx, qword [0x0400ebfd] 	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ebfd	        0x483b7238	            cmp rsi, qword [rdx + 0x38] 	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec01	     0xf8554daffff	                           jne 0x400c65b	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec07	      0xe96af3ffff	                           jmp 0x400df76	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec0c	    0x4c3b35000000	            cmp r14, qword [0x0400ec13] 	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec13	     0xf853ec9ffff	                           jne 0x400b557	      5367	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec19	    0x8b1d00000000	            mov ebx, dword [0x0400ec1f] 	      5368	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec1f	            0x85db	                           test ebx, ebx	      5368	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec21	     0xf8430c9ffff	                            je 0x400b557	      5368	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec27	      0xe952daffff	                           jmp 0x400c67e	      5368	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0x400ec2c	            0x31db	                            xor ebx, ebx	      3704	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400ec2e	    0x41bc00000000	                             mov r12d, 0	      3704	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400ec34	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3704	screen.c	FUNCTION_28	WHILE_3	IF_64
0x400ec3c	          0x4531c0	                            xor r8d, r8d	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400ec3f	      0xe912baffff	                           jmp 0x400a656	      3706	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x400ec44	      0xe800000000	                          call 0x400ec49	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400ec49	          0x83f801	                              cmp eax, 1	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400ec4c	     0xf8ef8030000	                           jle 0x400f04a	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400ec52	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec57	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      4791	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec62	      0xbfc0000000	                           mov edi, 0xc0	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec67	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec72	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4790	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec7d	      0x4889442448	             mov qword [rsp + 0x48], rax	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec82	      0xe939dfffff	                           jmp 0x400cbc0	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x400ec87	    0x8b3500000000	            mov esi, dword [0x0400ec8d] 	      4027	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x400ec8d	            0x89df	                            mov edi, ebx	      4027	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x400ec8f	      0xe800000000	                          call 0x400ec94	      4027	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x400ec94	            0x89c3	                            mov ebx, eax	      4027	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x400ec96	      0xe963c6ffff	                           jmp 0x400b2fe	      4027	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x400ec9b	    0x8b8424280100	           mov eax, dword [rsp + 0x128] 	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0x400eca2	            0x85c0	                           test eax, eax	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0x400eca4	            0x7414	                            je 0x400ecba	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0x400eca6	          0x4139c4	                           cmp r12d, eax	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0x400eca9	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x18 	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400ecb4	     0xf84fbe9ffff	                            je 0x400d6b5	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0x400ecba	    0x458b86700200	           mov r8d, dword [r14 + 0x270] 	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400ecc1	    0x448b25000000	           mov r12d, dword [0x0400ecc8] 	      5118	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	CALL_164
0x400ecc8	          0x4585c0	                           test r8d, r8d	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400eccb	     0xf842b070000	                            je 0x400f3fc	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400ecd1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400ecd6	        0x493b4638	            cmp rax, qword [r14 + 0x38] 	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400ecda	     0xf848f0b0000	                            je 0x400f86f	      5119	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0x400ece0	            0x84db	                             test bl, bl	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400ece2	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x18 	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400eced	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400ecf9	    0x440f45a4243c	        cmovne r12d, dword [rsp + 0x13c]	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400ed02	      0xe911d2ffff	                           jmp 0x400bf18	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400ed07	            0x85db	                           test ebx, ebx	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed09	     0xf84a2f8ffff	                            je 0x400e5b1	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed0f	    0x8b0500000000	            mov eax, dword [0x0400ed15] 	      4920	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed15	            0x85c0	                           test eax, eax	      4920	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed17	        0x89442470	             mov dword [rsp + 0x70], eax	      4920	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed1b	           0xf45ee	                         cmovne ebp, esi	      4920	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed1e	      0xe902f1ffff	                           jmp 0x400de25	      4920	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x400ed23	    0x8d806affffff	                   lea eax, [rax - 0x96]	      3517	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x400ed29	    0x488dbc243002	                  lea rdi, [rsp + 0x230]	        59	string3.h	FUNCTION_105	CALL_3
0x400ed31	      0xba96000000	                           mov edx, 0x96	        59	string3.h	FUNCTION_105	CALL_3
0x400ed36	          0x4863f0	                         movsxd rsi, eax	        59	string3.h	FUNCTION_105	CALL_3
0x400ed39	    0x8984248c0100	            mov dword [rsp + 0x18c], eax	      3517	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x400ed40	          0x4801ee	                            add rsi, rbp	        59	string3.h	FUNCTION_105	CALL_3
0x400ed43	      0xe800000000	                          call 0x400ed48	        59	string3.h	FUNCTION_105	CALL_3
0x400ed48	    0xc78424800100	          mov dword [rsp + 0x180], 0x97 	      3519	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x400ed53	      0xe969b6ffff	                           jmp 0x400a3c1	      3519	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x400ed58	    0x496387700100	        movsxd rax, dword [r15 + 0x170] 	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed5f	          0x4839c3	                            cmp rbx, rax	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed62	           0xf94c0	                                 sete al	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed65	           0xfb6c0	                           movzx eax, al	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed68	          0x83c001	                              add eax, 1	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed6b	    0x898424800000	             mov dword [rsp + 0x80], eax	      4137	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed72	    0x418b85980300	           mov eax, dword [r13 + 0x398] 	      4138	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed79	    0x898424200100	            mov dword [rsp + 0x120], eax	      4138	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed80	      0xe996f1ffff	                           jmp 0x400df1b	      4138	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x400ed85	          0x4c89ff	                            mov rdi, r15	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed88	      0xe800000000	                          call 0x400ed8d	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed8d	            0x4898	                                    cdqe	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed8f	        0x4c8b1424	                    mov r10, qword [rsp]	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed93	          0x4829c5	                            sub rbp, rax	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed96	      0x48896c2448	             mov qword [rsp + 0x48], rbp	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400ed9b	      0xe939c8ffff	                           jmp 0x400b5d9	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0x400eda0	      0x41803c2409	                       cmp byte [r12], 9	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400eda5	          0x4c89e0	                            mov rax, r12	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400eda8	     0xf8582b7ffff	                           jne 0x400a530	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400edae	      0xe970b7ffff	                           jmp 0x400a523	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x400edb3	    0x8b9424b00100	           mov edx, dword [rsp + 0x1b0] 	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400edba	            0x85d2	                           test edx, edx	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400edbc	     0xf8492ddffff	                            je 0x400cb54	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400edc2	      0xe920dcffff	                           jmp 0x400c9e7	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x400edc7	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3263	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x400edcb	    0x891d00000000	            mov dword [0x0400edd1], ebx 	      3261	screen.c	FUNCTION_28	IF_2	ELSE_1
0x400edd1	            0x31db	                            xor ebx, ebx	      3098	screen.c	FUNCTION_28
0x400edd3	    0x83b854020000	              cmp dword [rax + 0x254], 1	      3098	screen.c	FUNCTION_28
0x400edda	    0x448b88540200	           mov r9d, dword [rax + 0x254] 	      3098	screen.c	FUNCTION_28
0x400ede1	      0xb801000000	                              mov eax, 1	      3098	screen.c	FUNCTION_28
0x400ede6	           0xf92c3	                                 setb bl	      3098	screen.c	FUNCTION_28
0x400ede9	          0x4585c9	                           test r9d, r9d	      3098	screen.c	FUNCTION_28
0x400edec	     0xf4584241001	         cmovne eax, dword [rsp + 0x110]	      3098	screen.c	FUNCTION_28
0x400edf4	    0x899c24f40000	             mov dword [rsp + 0xf4], ebx	      3098	screen.c	FUNCTION_28
0x400edfb	    0x898424100100	            mov dword [rsp + 0x110], eax	      3098	screen.c	FUNCTION_28
0x400ee02	      0xe9f6b2ffff	                           jmp 0x400a0fd	      3098	screen.c	FUNCTION_28
0x400ee07	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400ee0b	    0x488b15000000	            mov rdx, qword [0x0400ee12] 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400ee12	          0x4839d1	                            cmp rcx, rdx	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400ee15	     0xf841e060000	                            je 0x400f439	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400ee1b	     0xf8d43060000	                           jge 0x400f464	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400ee21	        0x488d6838	                   lea rbp, [rax + 0x38]	      3334	screen.c	FUNCTION_28	IF_12	IF_13
0x400ee25	      0xbb00000000	                              mov ebx, 0	      3335	screen.c	FUNCTION_28	IF_12	IF_13
0x400ee2a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3342	screen.c	FUNCTION_28	IF_12
0x400ee2f	          0x4839c8	                            cmp rax, rcx	      3342	screen.c	FUNCTION_28	IF_12
0x400ee32	     0xf8c33050000	                            jl 0x400f36b	      3342	screen.c	FUNCTION_28	IF_12
0x400ee38	          0x483b03	                    cmp rax, qword [rbx]	      3342	screen.c	FUNCTION_28	IF_12
0x400ee3b	     0xf8f2a050000	                            jg 0x400f36b	      3342	screen.c	FUNCTION_28	IF_12
0x400ee41	    0x8b1500000000	            mov edx, dword [0x0400ee47] 	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400ee47	          0x83fa16	                           cmp edx, 0x16	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400ee4a	     0xf8510080000	                           jne 0x400f660	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400ee50	        0x418b4760	            mov eax, dword [r15 + 0x60] 	      3347	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x400ee54	        0x418b5764	            mov edx, dword [r15 + 0x64] 	      3348	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x400ee58	    0xc78424180100	              mov dword [rsp + 0x118], 1	      3342	screen.c	FUNCTION_28	IF_12
0x400ee63	    0x8984249c0100	            mov dword [rsp + 0x19c], eax	      3347	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x400ee6a	    0x899424a00100	            mov dword [rsp + 0x1a0], edx	      3348	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x400ee71	    0x8b0d00000000	            mov ecx, dword [0x0400ee77] 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee77	    0xc784242c0100	              mov dword [rsp + 0x12c], 0	      3082	screen.c	FUNCTION_28
0x400ee82	            0x85c9	                           test ecx, ecx	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee84	            0x7526	                           jne 0x400eeac	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee86	    0x488b15000000	            mov rdx, qword [0x0400ee8d] 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee8d	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee92	        0x48397a38	            cmp qword [rdx + 0x38], rdi 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee96	            0x7509	                           jne 0x400eea1	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee98	          0x4939d7	                            cmp r15, rdx	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400ee9b	     0xf84360b0000	                            je 0x400f9d7	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400eea1	    0xc784242c0100	              mov dword [rsp + 0x12c], 0	      3082	screen.c	FUNCTION_28
0x400eeac	            0x85c0	                           test eax, eax	      3402	screen.c	FUNCTION_28	IF_12	IF_25
0x400eeae	     0xf886c080000	                            js 0x400f720	      3402	screen.c	FUNCTION_28	IF_12	IF_25
0x400eeb4	    0x8b0500000000	            mov eax, dword [0x0400eeba] 	      3405	screen.c	FUNCTION_28	IF_12	IF_25	CALL_15
0x400eeba	    0x898424280100	            mov dword [rsp + 0x128], eax	      3405	screen.c	FUNCTION_28	IF_12	IF_25	CALL_15
0x400eec1	    0x8b0500000000	            mov eax, dword [0x0400eec7] 	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eec7	            0x85c0	                           test eax, eax	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eec9	            0x7410	                            je 0x400eedb	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eecb	    0x448b2d000000	           mov r13d, dword [0x0400eed2] 	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eed2	          0x4585ed	                         test r13d, r13d	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eed5	     0xf84f9090000	                            je 0x400f8d4	      3407	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eedb	    0x8b0500000000	            mov eax, dword [0x0400eee1] 	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eee1	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3404	screen.c	FUNCTION_28	IF_12	IF_25
0x400eeec	            0x85c0	                           test eax, eax	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eeee	     0xf849ab3ffff	                            je 0x400a28e	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eef4	    0x448b25000000	           mov r12d, dword [0x0400eefb] 	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eefb	          0x4585e4	                         test r12d, r12d	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400eefe	     0xf858ab3ffff	                           jne 0x400a28e	      3409	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x400ef04	      0xe800000000	                          call 0x400ef09	      3410	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x400ef09	            0x85c0	                           test eax, eax	      3410	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x400ef0b	     0xf847db3ffff	                            je 0x400a28e	      3410	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x400ef11	    0x8b0500000000	            mov eax, dword [0x0400ef17] 	      3411	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x400ef17	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3404	screen.c	FUNCTION_28	IF_12	IF_25
0x400ef22	    0x898424280100	            mov dword [rsp + 0x128], eax	      3411	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x400ef29	      0xe960b3ffff	                           jmp 0x400a28e	      3411	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x400ef2e	            0x6690	                                     nop	      3411	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x400ef30	      0x418d440c01	                lea eax, [r12 + rcx + 1]	      3643	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x400ef35	    0x898424580100	            mov dword [rsp + 0x158], eax	      3643	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x400ef3c	    0x8b8424b40100	           mov eax, dword [rsp + 0x1b4] 	      3646	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef43	          0x83f82e	                           cmp eax, 0x2e	      3646	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef46	     0xf843c060000	                            je 0x400f588	      3646	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef4c	    0x8b0485000000	                  mov eax, dword [rax*4]	      3647	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef53	    0x898424240100	            mov dword [rsp + 0x124], eax	      3647	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef5a	      0xe9f8f8ffff	                           jmp 0x400e857	      3647	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x400ef5f	        0x488d7001	                      lea rsi, [rax + 1]	      3303	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x400ef63	            0x31d2	                            xor edx, edx	      3303	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x400ef65	      0xe800000000	                          call 0x400ef6a	      3303	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x400ef6a	    0x488dbc24c602	                  lea rdi, [rsp + 0x2c6]	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef72	      0xba96000000	                           mov edx, 0x96	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef77	          0x4889c6	                            mov rsi, rax	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef7a	      0xe800000000	                          call 0x400ef7f	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef7f	      0xe919b2ffff	                           jmp 0x400a19d	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef84	          0x4c89f7	                            mov rdi, r14	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef87	      0xe86428ffff	    call sym.conceal_cursor_line.part.11	      3304	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x400ef8c	            0x85c0	                           test eax, eax	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400ef8e	     0xf859fcfffff	                           jne 0x400bf33	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400ef94	      0xe987d8ffff	                           jmp 0x400c820	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400ef99	     0xf1f80000000	                         nop dword [rax]	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0x400efa0	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efa7	        0x2b44243c	             sub eax, dword [rsp + 0x3c]	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efab	    0x410386ac0000	             add eax, dword [r14 + 0xac]	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efb2	          0x83e801	                              sub eax, 1	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efb5	    0x418986e00000	             mov dword [r14 + 0xe0], eax	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efbc	      0xe9c7e2ffff	                           jmp 0x400d288	      5221	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0x400efc1	    0xc70500000000	               mov dword [0x0400efcb], 0	      3319	screen.c	FUNCTION_28	IF_7	IF_11
0x400efcb	      0xe916b2ffff	                           jmp 0x400a1e6	      3319	screen.c	FUNCTION_28	IF_7	IF_11
0x400efd0	        0x418b4e40	            mov ecx, dword [r14 + 0x40] 	      4682	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400efd4	          0x4439c9	                            cmp ecx, r9d	      4684	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400efd7	     0xf8ce2daffff	                            jl 0x400cabf	      4684	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400efdd	            0x39cf	                            cmp edi, ecx	      4684	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400efdf	     0xf8edadaffff	                           jle 0x400cabf	      4684	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400efe5	    0xc78424b40100	          mov dword [rsp + 0x1b4], 0x2e 	      4686	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400eff0	    0x48891d000000	            mov qword [0x0400eff7], rbx 	      4687	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x400eff7	          0x4d39da	                            cmp r10, r11	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400effa	            0x743e	                            je 0x400f03a	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400effc	    0x488d94243002	                  lea rdx, [rsp + 0x230]	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f004	    0x4863b4248001	        movsxd rsi, dword [rsp + 0x180] 	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f00c	          0x4c89db	                            mov rbx, r11	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f00f	          0x4863c8	                         movsxd rcx, eax	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f012	          0x4829d3	                            sub rbx, rdx	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f015	          0x4801d9	                            add rcx, rbx	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f018	          0x4889da	                            mov rdx, rbx	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f01b	          0x4839f1	                            cmp rcx, rsi	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f01e	            0x7e1a	                           jle 0x400f03a	      4691	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f020	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4695	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f025	            0x29f0	                            sub eax, esi	      4696	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f027	             0x1c2	                            add edx, eax	      4696	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f029	    0x891500000000	            mov dword [0x0400f02f], edx 	      4696	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f02f	        0x488d4f01	                      lea rcx, [rdi + 1]	      4695	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f033	    0x48890d000000	            mov qword [0x0400f03a], rcx 	      4695	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x400f03a	    0xc78424240100	              mov dword [rsp + 0x124], 0	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400f045	      0xe983daffff	                           jmp 0x400cacd	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x400f04a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400f04f	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400f056	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4795	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	ELSE_71
0x400f061	      0x4889442448	             mov qword [rsp + 0x48], rax	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400f066	      0xe955dbffff	                           jmp 0x400cbc0	      4788	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x400f06b	    0x8b3500000000	            mov esi, dword [0x0400f071] 	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f071	            0x89df	                            mov edi, ebx	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f073	      0xe800000000	                          call 0x400f078	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f078	            0x89c3	                            mov ebx, eax	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f07a	      0xe9dad1ffff	                           jmp 0x400c259	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f07f	              0x90	                                     nop	      3972	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x400f080	    0x458ba76c0200	          mov r12d, dword [r15 + 0x26c] 	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400f087	          0x4585e4	                         test r12d, r12d	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400f08a	     0xf85d7c6ffff	                           jne 0x400b767	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400f090	      0xe9f7c6ffff	                           jmp 0x400b78c	      5526	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0x400f095	    0x8b0d00000000	            mov ecx, dword [0x0400f09b] 	      5527	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0x400f09b	    0x488b15000000	            mov rdx, qword [0x0400f0a2] 	      5527	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0x400f0a2	      0x6642890c4a	               mov word [rdx + r9*2], cx	      5527	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0x400f0a7	      0xe9efc6ffff	                           jmp 0x400b79b	      5527	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0x400f0ac	    0x8b0d00000000	            mov ecx, dword [0x0400f0b2] 	      5529	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400f0b2	    0x488b15000000	            mov rdx, qword [0x0400f0b9] 	      5529	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400f0b9	      0x6642890c4a	               mov word [rdx + r9*2], cx	      5529	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400f0be	      0xe9d8c6ffff	                           jmp 0x400b79b	      5529	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0x400f0c3	    0xc784249c0100	    mov dword [rsp + 0x19c], 0xffffffff 	      3673	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400f0ce	      0xb8ffffffff	                     mov eax, 0xffffffff	      3673	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400f0d3	      0xe912b5ffff	                           jmp 0x400a5ea	      3673	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x400f0d8	      0xe800000000	                          call 0x400f0dd	      3574	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x400f0dd	            0x85c0	                           test eax, eax	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f0df	     0xf85f1f2ffff	                           jne 0x400e3d6	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f0e5	    0x8b0500000000	            mov eax, dword [0x0400f0eb] 	      3574	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x400f0eb	            0x85c0	                           test eax, eax	      3574	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x400f0ed	            0x7415	                            je 0x400f104	      3574	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x400f0ef	    0x488b05000000	            mov rax, qword [0x0400f0f6] 	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f0f6	        0x488b4008	                mov rax, qword [rax + 8]	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f0fa	        0x49394708	                cmp qword [r15 + 8], rax	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f0fe	     0xf84d2f2ffff	                            je 0x400e3d6	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f104	          0x4c89e0	                            mov rax, r12	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f107	          0x4d89ec	                            mov r12, r13	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f10a	      0xe9dcb3ffff	                           jmp 0x400a4eb	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f10f	    0x899c24680100	            mov dword [rsp + 0x168], ebx	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f116	      0xe955cbffff	                           jmp 0x400bc70	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f11b	      0x4889542430	             mov qword [rsp + 0x30], rdx	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f120	      0x4c89542410	             mov qword [rsp + 0x10], r10	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x400f125	    0xff1500000000	                 call qword [0x0400f12b]	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f12b	    0x4963b4247001	        movsxd rsi, dword [r12 + 0x170] 	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f133	    0x410184247401	            add dword [r12 + 0x174], eax	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f13b	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f140	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f145	      0xe909b6ffff	                           jmp 0x400a753	      3730	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x400f14a	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f14f	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f153	      0xba03000000	                              mov edx, 3	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f158	          0x4c89e6	                            mov rsi, r12	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f15b	      0xe800000000	                          call 0x400f160	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f160	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3850	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_56
0x400f164	      0xba02000000	                              mov edx, 2	      3850	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_56
0x400f169	          0x4c89e6	                            mov rsi, r12	      3850	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_56
0x400f16c	            0x89c5	                            mov ebp, eax	      3847	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x400f16e	      0xe800000000	                          call 0x400f173	      3850	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_56
0x400f173	            0x89c2	                            mov edx, eax	      3850	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_56
0x400f175	    0x8b0500000000	            mov eax, dword [0x0400f17b] 	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f17b	            0x85c0	                           test eax, eax	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f17d	        0x410f95c4	                              setne r12b	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f181	            0x85d2	                           test edx, edx	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f183	           0xf95c0	                                setne al	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f186	          0x4120c4	                            and r12b, al	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f189	     0xf8550030000	                           jne 0x400f4df	      3852	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83
0x400f18f	            0x85ed	                           test ebp, ebp	      3864	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85
0x400f191	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      3837	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x400f199	     0xf8402d4ffff	                            je 0x400c5a1	      3864	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85
0x400f19f	            0x89ef	                            mov edi, ebp	      3866	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x400f1a1	      0xe800000000	                          call 0x400f1a6	      3866	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x400f1a6	          0x4885c0	                           test rax, rax	      3867	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x400f1a9	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      3866	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x400f1b1	     0xf8413080000	                            je 0x400f9ca	      3867	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x400f1b7	          0x4889c7	                            mov rdi, rax	      3870	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x400f1ba	      0xe800000000	                          call 0x400f1bf	      3870	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x400f1bf	            0x85c0	                           test eax, eax	      3870	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x400f1c1	        0x89442408	                mov dword [rsp + 8], eax	      3870	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x400f1c5	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3869	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x400f1cd	        0x410f94c4	                               sete r12b	      3869	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x400f1d1	            0x31f6	                            xor esi, esi	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1d3	            0x89ef	                            mov edi, ebp	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1d5	      0xe800000000	                          call 0x400f1da	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1da	    0xc70424030000	                      mov dword [rsp], 3	      3826	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x400f1e1	            0x89c3	                            mov ebx, eax	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1e3	          0x4489e0	                           mov eax, r12d	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1e6	      0xe9a4bfffff	                           jmp 0x400b18f	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x400f1eb	    0x418bb6940200	           mov esi, dword [r14 + 0x294] 	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400f1f2	            0x85f6	                           test esi, esi	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400f1f4	     0xf8490eaffff	                            je 0x400dc8a	      4839	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x400f1fa	    0x8b0d00000000	            mov ecx, dword [0x0400f200] 	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f200	            0x85c9	                           test ecx, ecx	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f202	     0xf85c4020000	                           jne 0x400f4cc	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f208	      0xe800000000	                          call 0x400f20d	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f20d	            0x4898	                                    cdqe	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f20f	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f214	          0x4829c7	                            sub rdi, rax	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f217	          0x4889f8	                            mov rax, rdi	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f21a	      0xe96beaffff	                           jmp 0x400dc8a	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f21f	      0xb801000000	                              mov eax, 1	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f224	      0xba01000000	                              mov edx, 1	      5386	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0x400f229	      0xe9e4f1ffff	                           jmp 0x400e412	      5386	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0x400f22e	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400f232	      0xe800000000	                          call 0x400f237	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400f237	          0x83f801	                              cmp eax, 1	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400f23a	     0xf8e2becffff	                           jle 0x400de6b	      4941	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x400f240	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400f247	    0xc78424d00100	              mov dword [rsp + 0x1d0], 0	      4944	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x400f252	    0xc78424980100	          mov dword [rsp + 0x198], 0xc0 	      4945	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x400f25d	    0x4489a424ec00	            mov dword [rsp + 0xec], r12d	      4945	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x400f265	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400f26d	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400f278	    0x898424700100	            mov dword [rsp + 0x170], eax	      4914	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x400f27f	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4943	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x400f28a	      0xe989ccffff	                           jmp 0x400bf18	      4943	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x400f28f	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      5465	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f294	        0x493b5f38	            cmp rbx, qword [r15 + 0x38] 	      5465	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f298	     0xf85f9c2ffff	                           jne 0x400b597	      5465	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f29e	      0x836c243c01	               sub dword [rsp + 0x3c], 1	      5468	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f2a3	      0x836c246c01	               sub dword [rsp + 0x6c], 1	      5469	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f2a8	      0x4889442448	             mov qword [rsp + 0x48], rax	      5469	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f2ad	      0xe9e5c2ffff	                           jmp 0x400b597	      5469	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0x400f2b2	          0x4c89ff	                            mov rdi, r15	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2b5	      0xe800000000	                          call 0x400f2ba	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2ba	      0x4839442460	            cmp qword [rsp + 0x60], rax 	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2bf	     0xf8554f3ffff	                           jne 0x400e619	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2c5	      0xe9dcf5ffff	                           jmp 0x400e8a6	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2ca	    0x660f1f440000	                    nop word [rax + rax]	      3476	screen.c	FUNCTION_28	IF_37	CALL_27
0x400f2d0	    0x458b96340200	          mov r10d, dword [r14 + 0x234] 	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2d7	          0x4585d2	                         test r10d, r10d	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2da	     0xf84c7e3ffff	                            je 0x400d6a7	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2e0	    0x448b0d000000	            mov r9d, dword [0x0400f2e7] 	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2e7	          0x4585c9	                           test r9d, r9d	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2ea	    0x440f4fa424c0	          cmovg r12d, dword [rsp + 0xc0]	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2f3	      0xe9afe3ffff	                           jmp 0x400d6a7	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0x400f2f8	      0xe800000000	                          call 0x400f2fd	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400f2fd	            0x85c0	                           test eax, eax	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400f2ff	            0x743c	                            je 0x400f33d	      4991	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0x400f301	    0x48638424a001	        movsxd rax, dword [rsp + 0x1a0] 	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f309	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f30e	            0x742d	                            je 0x400f33d	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f310	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f315	            0x7d26	                           jge 0x400f33d	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f317	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f31e	    0xc74424080000	                  mov dword [rsp + 8], 0	      4993	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f326	      0xe948cbffff	                           jmp 0x400be73	      4993	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0x400f32b	    0x488bbc24b801	           mov rdi, qword [rsp + 0x1b8] 	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0x400f333	      0xe800000000	                          call 0x400f338	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0x400f338	      0xe965e5ffff	                           jmp 0x400d8a2	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0x400f33d	    0x418b86340200	           mov eax, dword [r14 + 0x234] 	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0x400f344	      0xe90ecbffff	                           jmp 0x400be57	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0x400f349	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f34e	          0x4c89ff	                            mov rdi, r15	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f351	      0xe800000000	                          call 0x400f356	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f356	      0xe925f5ffff	                           jmp 0x400e880	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f35b	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f362	        0x89442470	             mov dword [rsp + 0x70], eax	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f366	      0xe944b9ffff	                           jmp 0x400acaf	      3654	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x400f36b	    0x8b1500000000	            mov edx, dword [0x0400f371] 	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400f371	          0x83fa16	                           cmp edx, 0x16	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400f374	     0xf84d4030000	                            je 0x400f74e	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400f37a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f37f	    0xc78424180100	              mov dword [rsp + 0x118], 0	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f38a	          0x4839c8	                            cmp rax, rcx	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f38d	     0xf8eef020000	                           jle 0x400f682	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f393	          0x483b03	                    cmp rax, qword [rbx]	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f396	     0xf8ed6020000	                           jle 0x400f672	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f39c	          0x83fa56	                           cmp edx, 0x56	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f39f	            0x740e	                            je 0x400f3af	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3a1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3a6	          0x483b03	                    cmp rax, qword [rbx]	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3a9	     0xf8401030000	                            je 0x400f6b0	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3af	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3b6	      0xe9b6faffff	                           jmp 0x400ee71	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3bb	    0x8b8424980100	           mov eax, dword [rsp + 0x198] 	      3366	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x400f3c2	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3cd	            0x85c0	                           test eax, eax	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3cf	        0x400f94c7	                                sete dil	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3d3	      0xe9fcb8ffff	                           jmp 0x400acd4	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3d8	    0x458b87540200	           mov r8d, dword [r15 + 0x254] 	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3df	    0x418b8fac0000	            mov ecx, dword [r15 + 0xac] 	      5308	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0x400f3e6	          0x4489da	                           mov edx, r11d	      5533	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0x400f3e9	      0xe9dac3ffff	                           jmp 0x400b7c8	      5533	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0x400f3ee	          0x4401c8	                            add eax, r9d	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x400f3f1	    0x890500000000	            mov dword [0x0400f3f7], eax 	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x400f3f7	      0xe924d7ffff	                           jmp 0x400cb20	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x400f3fc	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x18 	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400f407	      0xe9a9e2ffff	                           jmp 0x400d6b5	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400f40c	    0x8b84247c0100	           mov eax, dword [rsp + 0x17c] 	      5266	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f413	            0x85c0	                           test eax, eax	      5266	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f415	     0xf8809b8ffff	                            js 0x400ac24	      5266	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f41b	          0x4189c4	                           mov r12d, eax	      5266	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f41e	    0xc784247c0100	    mov dword [rsp + 0x17c], 0xffffffff 	      5269	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f429	    0xc78424780100	              mov dword [rsp + 0x178], 0	      5270	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f434	      0xe9ebb7ffff	                           jmp 0x400ac24	      5270	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_93	IF_256
0x400f439	    0x8b3500000000	            mov esi, dword [0x0400f43f] 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f43f	          0x397040	            cmp dword [rax + 0x40], esi 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f442	            0x7509	                           jne 0x400f44d	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f444	    0x8b1d00000000	            mov ebx, dword [0x0400f44a] 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f44a	          0x395844	            cmp dword [rax + 0x44], ebx 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f44d	     0xf8ccef9ffff	                            jl 0x400ee21	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f453	    0x488b35000000	            mov rsi, qword [0x0400f45a] 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f45a	        0x48397040	            cmp qword [rax + 0x40], rsi 	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f45e	     0xf84bdf9ffff	                            je 0x400ee21	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f464	        0x488d5838	                   lea rbx, [rax + 0x38]	      3340	screen.c	FUNCTION_28	IF_12	ELSE_2
0x400f468	          0x4889d1	                            mov rcx, rdx	      3332	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x400f46b	      0xbd00000000	                              mov ebp, 0	      3339	screen.c	FUNCTION_28	IF_12	ELSE_2
0x400f470	      0xe9b5f9ffff	                           jmp 0x400ee2a	      3339	screen.c	FUNCTION_28	IF_12	ELSE_2
0x400f475	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f47a	    0x488d8c24a801	                  lea rcx, [rsp + 0x1a8]	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f482	    0x488d9424a401	                  lea rdx, [rsp + 0x1a4]	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f48a	          0x4c89ff	                            mov rdi, r15	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f48d	      0xe800000000	                          call 0x400f492	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f492	            0x85c0	                           test eax, eax	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f494	     0xf85eff1ffff	                           jne 0x400e689	      3450	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x400f49a	    0x83bc24a40100	              cmp dword [rsp + 0x1a4], 1	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4a2	    0xc78424000100	              mov dword [rsp + 0x100], 0	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4ad	    0xc78424980000	               mov dword [rsp + 0x98], 1	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4b8	            0x19c0	                            sbb eax, eax	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4ba	          0x83e002	                              and eax, 2	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4bd	          0x83c018	                           add eax, 0x18	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4c0	    0x898424bc0000	             mov dword [rsp + 0xbc], eax	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4c7	      0xe9e9adffff	                           jmp 0x400a2b5	      3453	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x400f4cc	      0xe800000000	                          call 0x400f4d1	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f4d1	    0x418b9e340200	           mov ebx, dword [r14 + 0x234] 	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f4d8	            0x4898	                                    cdqe	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f4da	      0xe930fdffff	                           jmp 0x400f20f	      4840	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x400f4df	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4e3	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4e8	          0x891424	                    mov dword [rsp], edx	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4eb	      0xe800000000	                          call 0x400f4f0	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4f0	          0x83f801	                              cmp eax, 1	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4f3	          0x8b1424	                    mov edx, dword [rsp]	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4f6	           0xf9fc0	                                 setg al	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4f9	           0xfb6c0	                           movzx eax, al	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4fc	          0x83c001	                              add eax, 1	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f4ff	            0x89d3	                            mov ebx, edx	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f501	        0x8944245c	             mov dword [rsp + 0x5c], eax	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f505	      0xe997d0ffff	                           jmp 0x400c5a1	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f50a	         0xfb678ff	               movzx edi, byte [rax - 1]	      3857	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	IF_83	IF_84	CALL_57
0x400f50e	      0xe800000000	                          call 0x400f513	      5939	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0x400f513	      0xe9c9e6ffff	                           jmp 0x400dbe1	      5939	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0x400f518	    0x488b05000000	            mov rax, qword [0x0400f51f] 	      5913	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f51f	    0x8b3500000000	            mov esi, dword [0x0400f525] 	      5912	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f525	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5913	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f52a	          0x8b3c90	            mov edi, dword [rax + rdx*4]	      5913	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f52d	             0x1fe	                            add esi, edi	      5912	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f52f	    0xff1500000000	                 call qword [0x0400f535]	      5912	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f535	          0x83f802	                              cmp eax, 2	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f538	     0xf8449bbffff	                            je 0x400b087	      5911	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f53e	    0x488b05000000	            mov rax, qword [0x0400f545] 	      5917	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f545	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f54a	        0x488d4dfc	                      lea rcx, [rbp - 4]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f54e	    0x8b3500000000	            mov esi, dword [0x0400f554] 	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f554	        0x48890c24	                    mov qword [rsp], rcx	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f558	           0x33490	            add esi, dword [rax + rdx*4]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f55b	        0x8b5428fc	          mov edx, dword [rax + rbp - 4]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f55f	    0x488b05000000	            mov rax, qword [0x0400f566] 	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f566	        0x8d7c02fe	                lea edi, [rdx + rax - 2]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f56a	    0xff1500000000	                 call qword [0x0400f570]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f570	          0x83f802	                              cmp eax, 2	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f573	        0x488b0c24	                    mov rcx, qword [rsp]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f577	     0xf85e8e5ffff	                           jne 0x400db65	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f57d	      0xe905bbffff	                           jmp 0x400b087	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f582	    0x660f1f440000	                    nop word [rax + rax]	      5915	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0x400f588	    0xc78424240100	              mov dword [rsp + 0x124], 0	      3111	screen.c	FUNCTION_28
0x400f593	      0xe9bff2ffff	                           jmp 0x400e857	      3111	screen.c	FUNCTION_28
0x400f598	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5a0	          0x83ff20	                           cmp edi, 0x20	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f5a3	     0xf85bed5ffff	                           jne 0x400cb67	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f5a9	      0xe9fef3ffff	                           jmp 0x400e9ac	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f5ae	            0x6690	                                     nop	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f5b0	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5b5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5ba	        0x488d75ff	                      lea rsi, [rbp - 1]	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5be	    0xff1500000000	                 call qword [0x0400f5c4]	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5c4	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5c8	          0x4863d0	                         movsxd rdx, eax	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5cb	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5d0	          0x4889d3	                            mov rbx, rdx	      4736	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5d3	          0x48f7d2	                                 not rdx	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5d6	          0x4531c0	                            xor r8d, r8d	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5d9	          0x4801ea	                            add rdx, rbp	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5dc	          0x4c89f7	                            mov rdi, r14	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5df	      0xe800000000	                          call 0x400f5e4	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5e4	    0x8bbc24980100	           mov edi, dword [rsp + 0x198] 	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400f5eb	          0x83e801	                              sub eax, 1	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5ee	        0x89442408	                mov dword [rsp + 8], eax	      4745	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x400f5f2	          0x83ff09	                              cmp edi, 9	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400f5f5	     0xf8439f3ffff	                            je 0x400e934	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x400f5fb	            0x85db	                           test ebx, ebx	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f5fd	     0xf8eb1030000	                           jle 0x400f9b4	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f603	    0xc744245c3c00	           mov dword [rsp + 0x5c], 0x3c 	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f60b	            0xeb93	                           jmp 0x400f5a0	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f60d	    0x418b96ac0000	            mov edx, dword [r14 + 0xac] 	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400f614	        0x3954243c	            cmp dword [rsp + 0x3c], edx 	      5071	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400f618	     0xf8c14f5ffff	                            jl 0x400eb32	      5071	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0x400f61e	    0x8b8c243c0100	           mov ecx, dword [rsp + 0x13c] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f625	    0x8bb424c00000	            mov esi, dword [rsp + 0xc0] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f62c	    0x8bbc24bc0000	            mov edi, dword [rsp + 0xbc] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f633	            0x85c9	                           test ecx, ecx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f635	           0xf95c1	                                setne cl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f638	            0x85f6	                           test esi, esi	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f63a	           0xf95c0	                                setne al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f63d	            0x85ff	                           test edi, edi	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f63f	            0x89cb	                            mov ebx, ecx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f641	        0x400f95c6	                               setne sil	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f645	          0x4008c6	                              or sil, al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f648	     0xf85e2e9ffff	                           jne 0x400e030	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f64e	            0x84c9	                             test cl, cl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f650	     0xf84b8deffff	                            je 0x400d50e	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f656	      0xe9d5e9ffff	                           jmp 0x400e030	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f65b	       0xf1f440000	                   nop dword [rax + rax]	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f660	      0x48394c2460	            cmp qword [rsp + 0x60], rcx 	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f665	    0xc78424180100	              mov dword [rsp + 0x118], 1	      3342	screen.c	FUNCTION_28	IF_12
0x400f670	            0x7e10	                           jle 0x400f682	      3353	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f672	    0xc784249c0100	              mov dword [rsp + 0x19c], 0	      3354	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f67d	      0xe91afdffff	                           jmp 0x400f39c	      3354	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x400f682	      0x48394c2460	            cmp qword [rsp + 0x60], rcx 	      3355	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x400f687	     0xf850ffdffff	                           jne 0x400f39c	      3355	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x400f68d	          0x83fa56	                           cmp edx, 0x56	      3357	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400f690	     0xf85d9000000	                           jne 0x400f76f	      3357	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400f696	    0xc784249c0100	              mov dword [rsp + 0x19c], 0	      3358	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400f6a1	      0xe909fdffff	                           jmp 0x400f3af	      3358	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400f6a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3358	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x400f6b0	    0x488b05000000	            mov rax, qword [0x0400f6b7] 	      3368	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f6b7	          0x803865	                    cmp byte [rax], 0x65	      3368	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f6ba	     0xf8466020000	                            je 0x400f926	      3368	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f6c0	    0x817b08ffffff	        cmp dword [rbx + 8], 0x7fffffff 	      3377	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x400f6c7	     0xf8442020000	                            je 0x400f90f	      3377	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x400f6cd	          0x488b0b	                    mov rcx, qword [rbx]	      3381	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x400f6d0	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3381	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x400f6d4	    0x48898c24c001	            mov qword [rsp + 0x1c0], rcx	      3381	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x400f6dc	    0x48899c24c801	            mov qword [rsp + 0x1c8], rbx	      3381	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x400f6e4	          0x803865	                    cmp byte [rax], 0x65	      3382	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x400f6e7	     0xf84f9010000	                            je 0x400f8e6	      3382	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x400f6ed	    0x4c8d8424a001	                   lea r8, [rsp + 0x1a0]	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f6f5	    0x488db424c001	                  lea rsi, [rsp + 0x1c0]	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f6fd	            0x31c9	                            xor ecx, ecx	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f6ff	            0x31d2	                            xor edx, edx	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f701	          0x4c89ff	                            mov rdi, r15	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f704	      0xe800000000	                          call 0x400f709	      3386	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x400f709	    0x838424a00100	              add dword [rsp + 0x1a0], 1	      3387	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x400f711	      0xe999fcffff	                           jmp 0x400f3af	      3387	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x400f716	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3387	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x400f720	    0xc78424280100	              mov dword [rsp + 0x128], 0	      3092	screen.c	FUNCTION_28
0x400f72b	    0xc78424980000	               mov dword [rsp + 0x98], 0	      3090	screen.c	FUNCTION_28
0x400f736	      0xe953abffff	                           jmp 0x400a28e	      3090	screen.c	FUNCTION_28
0x400f73b	    0x8b3d00000000	            mov edi, dword [0x0400f741] 	      3752	screen.c	FUNCTION_28	IF_72
0x400f741	            0x85ff	                           test edi, edi	      3752	screen.c	FUNCTION_28	IF_72
0x400f743	     0xf8572b0ffff	                           jne 0x400a7bb	      3752	screen.c	FUNCTION_28	IF_72
0x400f749	      0xe962f4ffff	                           jmp 0x400ebb0	      3752	screen.c	FUNCTION_28	IF_72
0x400f74e	    0xc78424180100	              mov dword [rsp + 0x118], 0	      3343	screen.c	FUNCTION_28	IF_12	IF_14
0x400f759	    0x8b1d00000000	            mov ebx, dword [0x0400f75f] 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400f75f	            0x85db	                           test ebx, ebx	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400f761	            0x754c	                           jne 0x400f7af	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400f763	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400f76a	      0xe917f7ffff	                           jmp 0x400ee86	      3394	screen.c	FUNCTION_28	IF_12	IF_24
0x400f76f	    0x488d94249c01	                  lea rdx, [rsp + 0x19c]	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f777	          0x4531c0	                            xor r8d, r8d	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f77a	            0x31c9	                            xor ecx, ecx	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f77c	          0x4889ee	                            mov rsi, rbp	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f77f	          0x4c89ff	                            mov rdi, r15	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f782	      0xe800000000	                          call 0x400f787	      3361	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x400f787	          0x4889ef	                            mov rdi, rbp	      3362	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x400f78a	      0xe800000000	                          call 0x400f78f	      3362	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x400f78f	            0x85c0	                           test eax, eax	      3362	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x400f791	            0x7511	                           jne 0x400f7a4	      3362	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x400f793	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3363	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x400f79a	          0x83c001	                              add eax, 1	      3363	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x400f79d	    0x898424a00100	            mov dword [rsp + 0x1a0], eax	      3363	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x400f7a4	    0x8b1500000000	            mov edx, dword [0x0400f7aa] 	      3363	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x400f7aa	      0xe9edfbffff	                           jmp 0x400f39c	      3363	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x400f7af	    0xc78424280100	              mov dword [rsp + 0x128], 0	      3092	screen.c	FUNCTION_28
0x400f7ba	    0xc78424980000	               mov dword [rsp + 0x98], 0	      3090	screen.c	FUNCTION_28
0x400f7c5	    0xc784242c0100	              mov dword [rsp + 0x12c], 0	      3082	screen.c	FUNCTION_28
0x400f7d0	      0xe9b9aaffff	                           jmp 0x400a28e	      3082	screen.c	FUNCTION_28
0x400f7d5	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      3082	screen.c	FUNCTION_28
0x400f7da	      0xe942d5ffff	                           jmp 0x400cd21	      3082	screen.c	FUNCTION_28
0x400f7df	          0x83c001	                              add eax, 1	      3439	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x400f7e2	    0x898424a00100	            mov dword [rsp + 0x1a0], eax	      3439	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x400f7e9	      0xe906bcffff	                           jmp 0x400b3f4	      3439	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x400f7ee	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3431	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400f7f3	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f7fb	    0x488db424c001	                  lea rsi, [rsp + 0x1c0]	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f803	          0x4531c0	                            xor r8d, r8d	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f806	            0x31c9	                            xor ecx, ecx	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f808	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	      3431	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400f810	    0x8b0500000000	            mov eax, dword [0x0400f816] 	      3432	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400f816	    0x898424c80100	            mov dword [rsp + 0x1c8], eax	      3432	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x400f81d	      0xe800000000	                          call 0x400f822	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f822	    0x8b8424a00100	           mov eax, dword [rsp + 0x1a0] 	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f829	      0xe9b9bbffff	                           jmp 0x400b3e7	      3433	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x400f82e	        0x498d7738	                   lea rsi, [r15 + 0x38]	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f832	    0x488d94249c01	                  lea rdx, [rsp + 0x19c]	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f83a	          0x4c89ff	                            mov rdi, r15	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f83d	          0x4531c0	                            xor r8d, r8d	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f840	            0x31c9	                            xor ecx, ecx	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f842	      0xe800000000	                          call 0x400f847	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f847	    0x488b3d000000	            mov rdi, qword [0x0400f84e] 	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f84e	    0x488b05000000	            mov rax, qword [0x0400f855] 	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f855	      0xe96ebbffff	                           jmp 0x400b3c8	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f85a	      0xbb01000000	                              mov ebx, 1	      3425	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x400f85f	    0xc78424780100	              mov dword [rsp + 0x178], 0	      5258	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400f86a	      0xe9a8d5ffff	                           jmp 0x400ce17	      5258	screen.c	FUNCTION_28	FOR_1	IF_251	ELSE_92	IF_253	IF_254
0x400f86f	    0x8b3500000000	            mov esi, dword [0x0400f875] 	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f875	          0x4489e7	                           mov edi, r12d	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f878	      0xe800000000	                          call 0x400f87d	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f87d	    0xc78424bc0000	           mov dword [rsp + 0xbc], 0x18 	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0x400f888	          0x4189c4	                           mov r12d, eax	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f88b	      0xe925deffff	                           jmp 0x400d6b5	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f890	        0x89442470	             mov dword [rsp + 0x70], eax	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f894	            0x31db	                            xor ebx, ebx	      5120	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0x400f896	    0xc74424540000	               mov dword [rsp + 0x54], 0	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400f89e	    0xc74424080000	                  mov dword [rsp + 8], 0	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400f8a6	      0xe920c7ffff	                           jmp 0x400bfcb	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0x400f8ab	    0x488db424f001	                  lea rsi, [rsp + 0x1f0]	      4471	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x400f8b3	      0xe800000000	                          call 0x400f8b8	      4471	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x400f8b8	    0x448b8c246801	           mov r9d, dword [rsp + 0x168] 	      4472	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x400f8c0	    0x448b8424f001	           mov r8d, dword [rsp + 0x1f0] 	      4473	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x400f8c8	    0x898424680100	            mov dword [rsp + 0x168], eax	      4471	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x400f8cf	      0xe961e8ffff	                           jmp 0x400e135	      4471	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x400f8d4	      0xe800000000	                          call 0x400f8d9	      3408	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x400f8d9	            0x85c0	                           test eax, eax	      3408	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x400f8db	     0xf84faf5ffff	                            je 0x400eedb	      3408	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x400f8e1	      0xe92bf6ffff	                           jmp 0x400ef11	      3408	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x400f8e6	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f8ee	    0x488db424c001	                  lea rsi, [rsp + 0x1c0]	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f8f6	          0x4531c0	                            xor r8d, r8d	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f8f9	            0x31c9	                            xor ecx, ecx	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f8fb	          0x4c89ff	                            mov rdi, r15	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f8fe	      0xe800000000	                          call 0x400f903	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f903	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f90a	      0xe962f5ffff	                           jmp 0x400ee71	      3383	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x400f90f	    0xc78424a00100	    mov dword [rsp + 0x1a0], 0x7fffffff 	      3378	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x400f91a	    0x8b84249c0100	           mov eax, dword [rsp + 0x19c] 	      3378	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x400f921	      0xe94bf5ffff	                           jmp 0x400ee71	      3378	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x400f926	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3370	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f92b	     0xf858ffdffff	                           jne 0x400f6c0	      3370	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f931	    0xc784249c0100	    mov dword [rsp + 0x19c], 0xfffffff6 	      3374	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f93c	    0xc78424a00100	    mov dword [rsp + 0x1a0], 0x7fffffff 	      3375	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f947	      0xe90dfeffff	                           jmp 0x400f759	      3375	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x400f94c	    0x448b84243c01	           mov r8d, dword [rsp + 0x13c] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f954	    0x448b8c24c000	            mov r9d, dword [rsp + 0xc0] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f95c	    0x448b9424bc00	           mov r10d, dword [rsp + 0xbc] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f964	          0x4585c0	                           test r8d, r8d	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f967	           0xf95c2	                                setne dl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f96a	          0x4585c9	                           test r9d, r9d	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f96d	           0xf95c0	                                setne al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f970	          0x4585d2	                         test r10d, r10d	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f973	            0x89d3	                            mov ebx, edx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f975	           0xf95c1	                                setne cl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f978	             0x8c1	                               or cl, al	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f97a	     0xf85d0dcffff	                           jne 0x400d650	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f980	            0x84d2	                             test dl, dl	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f982	     0xf8486dbffff	                            je 0x400d50e	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f988	      0xe9c3dcffff	                           jmp 0x400d650	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0x400f98d	      0xe800000000	                          call 0x400f992	      5993	screen.c	FUNCTION_28
0x400f992	    0x488b3d000000	            mov rdi, qword [0x0400f999] 	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f999	        0x498d7638	                   lea rsi, [r14 + 0x38]	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f99d	    0x488d9424b401	                  lea rdx, [rsp + 0x1b4]	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f9a5	          0x4531c0	                            xor r8d, r8d	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f9a8	            0x31c9	                            xor ecx, ecx	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f9aa	      0xe800000000	                          call 0x400f9af	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f9af	      0xe921d4ffff	                           jmp 0x400cdd5	      5251	screen.c	FUNCTION_28	FOR_1	IF_251	CALL_177
0x400f9b4	          0x83ff20	                           cmp edi, 0x20	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f9b7	    0xc744245c2000	           mov dword [rsp + 0x5c], 0x20 	      4752	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x400f9bf	     0xf84e7efffff	                            je 0x400e9ac	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f9c5	      0xe99dd1ffff	                           jmp 0x400cb67	      4756	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x400f9ca	    0xc74424080200	                  mov dword [rsp + 8], 2	      3839	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x400f9d2	      0xe9faf7ffff	                           jmp 0x400f1d1	      3839	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x400f9d7	    0x8b1500000000	            mov edx, dword [0x0400f9dd] 	      3082	screen.c	FUNCTION_28
0x400f9dd	            0x31db	                            xor ebx, ebx	      3082	screen.c	FUNCTION_28
0x400f9df	            0x85d2	                           test edx, edx	      3082	screen.c	FUNCTION_28
0x400f9e1	           0xf94c3	                                 sete bl	      3082	screen.c	FUNCTION_28
0x400f9e4	    0x899c242c0100	            mov dword [rsp + 0x12c], ebx	      3082	screen.c	FUNCTION_28
0x400f9eb	      0xe9bcf4ffff	                           jmp 0x400eeac	      3082	screen.c	FUNCTION_28
0x400f9f0	    0x418b86a00000	            mov eax, dword [r14 + 0xa0] 	      4068	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x400f9f7	    0x898424d00000	             mov dword [rsp + 0xd0], eax	      4068	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x400f9fe	      0xe92fd3ffff	                           jmp 0x400cd32	      4068	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
