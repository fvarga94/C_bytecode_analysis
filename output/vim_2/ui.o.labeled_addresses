clip_isautosel_star	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	12
0x4001006	    0x8b0500000000	            mov eax, dword [0x0400100c] 	       691	ui.c	FUNCTION_23	CALL_1
0x400100c	    0x833d00000000	               cmp dword [0x04001013], 0	       691	ui.c	FUNCTION_23	CALL_1
0x4001013	            0x7422	                            je 0x4001037	       691	ui.c	FUNCTION_23	CALL_1
0x4001015	        0x4883ec08	                              sub rsp, 8	       688	ui.c	FUNCTION_23
0x4001019	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x400101e	    0x488b3d000000	            mov rdi, qword [0x04001025] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001025	      0xe800000000	                          call 0x400102a	       691	ui.c	FUNCTION_23	CALL_1
0x400102a	          0x4885c0	                           test rax, rax	       691	ui.c	FUNCTION_23	CALL_1
0x400102d	           0xf95c0	                                setne al	       691	ui.c	FUNCTION_23	CALL_1
0x4001030	           0xfb6c0	                           movzx eax, al	       691	ui.c	FUNCTION_23	CALL_1
0x4001033	        0x4883c408	                              add rsp, 8	       694	ui.c	FUNCTION_23
0x4001037	            0xf3c3	                                     ret	       694	ui.c	FUNCTION_23
clip_update_modeless_selection	CALL,2:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	41
0x400033e	            0x4156	                                push r14	      1470	ui.c	FUNCTION_38
0x4000340	            0x4155	                                push r13	      1470	ui.c	FUNCTION_38
0x4000342	            0x4154	                                push r12	      1470	ui.c	FUNCTION_38
0x4000344	              0x55	                                push rbp	      1470	ui.c	FUNCTION_38
0x4000345	              0x53	                                push rbx	      1470	ui.c	FUNCTION_38
0x4000346	          0x4889fb	                            mov rbx, rdi	      1470	ui.c	FUNCTION_38
0x4000349	            0x89f7	                            mov edi, esi	      1470	ui.c	FUNCTION_38
0x400034b	          0x4189d4	                           mov r12d, edx	      1470	ui.c	FUNCTION_38
0x400034e	          0x4189cd	                           mov r13d, ecx	      1470	ui.c	FUNCTION_38
0x4000351	          0x4489c5	                            mov ebp, r8d	      1470	ui.c	FUNCTION_38
0x4000354	          0x4c63f6	                         movsxd r14, esi	      1472	ui.c	FUNCTION_38	IF_1
0x4000357	        0x488b5308	                mov rdx, qword [rbx + 8]	      1472	ui.c	FUNCTION_38	IF_1
0x400035b	          0x4939d6	                            cmp r14, rdx	      1472	ui.c	FUNCTION_38	IF_1
0x400035e	            0x7506	                           jne 0x4000366	      1472	ui.c	FUNCTION_38	IF_1
0x4000360	        0x44396310	           cmp dword [rbx + 0x10], r12d 	      1472	ui.c	FUNCTION_38	IF_1
0x4000364	            0x7419	                            je 0x400037f	      1472	ui.c	FUNCTION_38	IF_1
0x4000366	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4000369	    0x41b803000000	                              mov r8d, 3	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x400036f	          0x4489e6	                           mov esi, r12d	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4000372	      0xe8defeffff	               call sym.clip_invert_area	      1474	ui.c	FUNCTION_38	IF_1	CALL_1
0x4000377	        0x4c897308	                mov qword [rbx + 8], r14	      1476	ui.c	FUNCTION_38	IF_1
0x400037b	        0x44896310	            mov dword [rbx + 0x10], r12d	      1477	ui.c	FUNCTION_38	IF_1
0x400037f	          0x4d63e5	                        movsxd r12, r13d	      1481	ui.c	FUNCTION_38	IF_2
0x4000382	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1481	ui.c	FUNCTION_38	IF_2
0x4000386	          0x4939fc	                            cmp r12, rdi	      1481	ui.c	FUNCTION_38	IF_2
0x4000389	            0x7505	                           jne 0x4000390	      1481	ui.c	FUNCTION_38	IF_2
0x400038b	          0x396b20	            cmp dword [rbx + 0x20], ebp 	      1481	ui.c	FUNCTION_38	IF_2
0x400038e	            0x741a	                            je 0x40003aa	      1481	ui.c	FUNCTION_38	IF_2
0x4000390	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x4000393	    0x41b803000000	                              mov r8d, 3	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x4000399	            0x89e9	                            mov ecx, ebp	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400039b	          0x4489ea	                           mov edx, r13d	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x400039e	      0xe8b2feffff	               call sym.clip_invert_area	      1483	ui.c	FUNCTION_38	IF_2	CALL_2
0x40003a3	        0x4c896318	             mov qword [rbx + 0x18], r12	      1485	ui.c	FUNCTION_38	IF_2
0x40003a7	          0x896b20	             mov dword [rbx + 0x20], ebp	      1486	ui.c	FUNCTION_38	IF_2
0x40003aa	              0x5b	                                 pop rbx	      1488	ui.c	FUNCTION_38
0x40003ab	              0x5d	                                 pop rbp	      1488	ui.c	FUNCTION_38
0x40003ac	            0x415c	                                 pop r12	      1488	ui.c	FUNCTION_38
0x40003ae	            0x415d	                                 pop r13	      1488	ui.c	FUNCTION_38
0x40003b0	            0x415e	                                 pop r14	      1488	ui.c	FUNCTION_38
0x40003b2	              0xc3	                                     ret	      1488	ui.c	FUNCTION_38
add_to_input_buf_csi	CALL,2:SWITCH,0:FOR,1:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	32
0x4001c15	              0x55	                                push rbp	      1716	ui.c	FUNCTION_51
0x4001c16	              0x53	                                push rbx	      1716	ui.c	FUNCTION_51
0x4001c17	        0x4883ec18	                           sub rsp, 0x18	      1716	ui.c	FUNCTION_51
0x4001c1b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1716	ui.c	FUNCTION_51
0x4001c24	      0x4889442408	                mov qword [rsp + 8], rax	      1716	ui.c	FUNCTION_51
0x4001c29	            0x31c0	                            xor eax, eax	      1716	ui.c	FUNCTION_51
0x4001c2b	            0x85f6	                           test esi, esi	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c2d	            0x7e3c	                           jle 0x4001c6b	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c2f	          0x4889fb	                            mov rbx, rdi	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c32	          0x8d46ff	                      lea eax, [rsi - 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c35	      0x488d6c0701	                lea rbp, [rdi + rax + 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c3a	      0xbe01000000	                              mov esi, 1	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x4001c3f	          0x4889df	                            mov rdi, rbx	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x4001c42	      0xe800000000	                          call 0x4001c47	      1722	ui.c	FUNCTION_51	FOR_1	CALL_1
0x4001c47	          0x803b9b	                    cmp byte [rbx], 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4001c4a	            0x7516	                           jne 0x4001c62	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x4001c4c	        0xc60424fd	                    mov byte [rsp], 0xfd	      1726	ui.c	FUNCTION_51	FOR_1	IF_1
0x4001c50	      0xc644240151	                mov byte [rsp + 1], 0x51	      1727	ui.c	FUNCTION_51	FOR_1	IF_1
0x4001c55	      0xbe02000000	                              mov esi, 2	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x4001c5a	          0x4889e7	                            mov rdi, rsp	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x4001c5d	      0xe800000000	                          call 0x4001c62	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x4001c62	        0x4883c301	                              add rbx, 1	      1728	ui.c	FUNCTION_51	FOR_1	IF_1	CALL_2
0x4001c66	          0x4839eb	                            cmp rbx, rbp	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c69	            0x75cf	                           jne 0x4001c3a	      1720	ui.c	FUNCTION_51	FOR_1
0x4001c6b	      0x488b442408	                mov rax, qword [rsp + 8]	      1731	ui.c	FUNCTION_51
0x4001c70	    0x644833042528	                xor rax, qword fs:[0x28]	      1731	ui.c	FUNCTION_51
0x4001c79	            0x7405	                            je 0x4001c80	      1731	ui.c	FUNCTION_51
0x4001c7b	      0xe800000000	                          call 0x4001c80	      1731	ui.c	FUNCTION_51
0x4001c80	        0x4883c418	                           add rsp, 0x18	      1731	ui.c	FUNCTION_51
0x4001c84	              0x5b	                                 pop rbx	      1731	ui.c	FUNCTION_51
0x4001c85	              0x5d	                                 pop rbp	      1731	ui.c	FUNCTION_51
0x4001c86	              0xc3	                                     ret	      1731	ui.c	FUNCTION_51
clip_copy_selection	CALL,5:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	21
0x40015ed	    0x833d00000000	               cmp dword [0x040015f4], 0	       589	ui.c	FUNCTION_18	IF_1
0x40015f4	            0x743e	                            je 0x4001634	       589	ui.c	FUNCTION_18	IF_1
0x40015f6	    0xf60500000000	               test byte [0x040015fd], 1	       589	ui.c	FUNCTION_18	IF_1
0x40015fd	            0x7435	                            je 0x4001634	       589	ui.c	FUNCTION_18	IF_1
0x40015ff	          0x833f00	                      cmp dword [rdi], 0	       589	ui.c	FUNCTION_18	IF_1
0x4001602	            0x7430	                            je 0x4001634	       589	ui.c	FUNCTION_18	IF_1
0x4001604	              0x53	                                push rbx	       588	ui.c	FUNCTION_18
0x4001605	          0x4889fb	                            mov rbx, rdi	       588	ui.c	FUNCTION_18
0x4001608	      0xe800000000	                          call 0x400160d	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x400160d	          0x4889df	                            mov rdi, rbx	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4001610	      0xe800000000	                          call 0x4001615	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4001615	          0x4889df	                            mov rdi, rbx	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0x4001618	      0xe800000000	                          call 0x400161d	       593	ui.c	FUNCTION_18	IF_1	CALL_3
0x400161d	        0x837b0400	                  cmp dword [rbx + 4], 0	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4001621	            0x7408	                            je 0x400162b	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4001623	          0x4889df	                            mov rdi, rbx	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4001626	      0xe800000000	                          call 0x400162b	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x400162b	          0x4889df	                            mov rdi, rbx	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0x400162e	      0xe800000000	                          call 0x4001633	       596	ui.c	FUNCTION_18	IF_1	CALL_5
0x4001633	              0x5b	                                 pop rbx	       598	ui.c	FUNCTION_18
0x4001634	            0xf3c3	                                     ret	       598	ui.c	FUNCTION_18
clip_x11_owner_exists	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	14
0x4002b1f	              0x53	                                push rbx	      2551	ui.c	FUNCTION_73
0x4002b20	        0x488b5f50	            mov rbx, qword [rdi + 0x50] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b24	    0x488b3d000000	            mov rdi, qword [0x04002b2b] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b2b	    0x833d00000000	               cmp dword [0x04002b32], 0	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b32	            0x7408	                            je 0x4002b3c	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b34	      0xe800000000	                          call 0x4002b39	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b39	          0x4889c7	                            mov rdi, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b3c	          0x4889de	                            mov rsi, rbx	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b3f	      0xe800000000	                          call 0x4002b44	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b44	          0x4885c0	                           test rax, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b47	           0xf95c0	                                setne al	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b4a	           0xfb6c0	                           movzx eax, al	      2552	ui.c	FUNCTION_73	CALL_1
0x4002b4d	              0x5b	                                 pop rbx	      2553	ui.c	FUNCTION_73
0x4002b4e	              0xc3	                                     ret	      2553	ui.c	FUNCTION_73
clip_lose_selection	CALL,13:SWITCH,0:FOR,0:functions,0:IF,4:ELSE,0:DO,0:WHILE,0	54
0x4001286	            0x4154	                                push r12	       550	ui.c	FUNCTION_17
0x4001288	              0x55	                                push rbp	       550	ui.c	FUNCTION_17
0x4001289	              0x53	                                push rbx	       550	ui.c	FUNCTION_17
0x400128a	          0x4889fb	                            mov rbx, rdi	       550	ui.c	FUNCTION_17
0x400128d	        0x448b6704	               mov r12d, dword [rdi + 4]	       552	ui.c	FUNCTION_17
0x4001291	    0x4881ff000000	                              cmp rdi, 0	       552	ui.c	FUNCTION_17
0x4001298	        0x400f94c5	                                sete bpl	       552	ui.c	FUNCTION_17
0x400129c	    0x4881ff000000	                              cmp rdi, 0	       552	ui.c	FUNCTION_17
0x40012a3	           0xf94c0	                                 sete al	       552	ui.c	FUNCTION_17
0x40012a6	             0x9c5	                             or ebp, eax	       552	ui.c	FUNCTION_17
0x40012a8	      0xe800000000	                          call 0x40012ad	       559	ui.c	FUNCTION_17	CALL_1
0x40012ad	    0xc74304000000	                  mov dword [rbx + 4], 0	       560	ui.c	FUNCTION_17
0x40012b4	          0x4084ed	                           test bpl, bpl	       561	ui.c	FUNCTION_17	IF_2
0x40012b7	     0xf8481000000	                            je 0x400133e	       561	ui.c	FUNCTION_17	IF_2
0x40012bd	          0x4889df	                            mov rdi, rbx	       562	ui.c	FUNCTION_17	CALL_2
0x40012c0	      0xe800000000	                          call 0x40012c5	       562	ui.c	FUNCTION_17	CALL_2
0x40012c5	          0x4889df	                            mov rdi, rbx	       563	ui.c	FUNCTION_17	CALL_3
0x40012c8	      0xe800000000	                          call 0x40012cd	       563	ui.c	FUNCTION_17	CALL_3
0x40012cd	          0x4585e4	                         test r12d, r12d	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x40012d0	            0x7474	                            je 0x4001346	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x40012d2	      0xe800000000	                          call 0x40012d7	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40012d7	          0x83f802	                              cmp eax, 2	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40012da	            0x740c	                            je 0x40012e8	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x40012dc	      0xe800000000	                          call 0x40012e1	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012e1	      0x3d00100000	                         cmp eax, 0x1000	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012e6	            0x755e	                           jne 0x4001346	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x40012e8	    0x4881fb000000	                              cmp rbx, 0	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x40012ef	            0x750c	                           jne 0x40012fd	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x40012f1	      0xe800000000	                          call 0x40012f6	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0x40012f6	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x40012f8	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x40012fb	            0xeb0a	                           jmp 0x4001307	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x40012fd	      0xe800000000	                          call 0x4001302	       574	ui.c	FUNCTION_17	IF_3	IF_4	CALL_7
0x4001302	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4001304	           0xf95c0	                                setne al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4001307	            0x84c0	                             test al, al	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4001309	            0x743b	                            je 0x4001346	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x400130b	    0x8b0500000000	            mov eax, dword [0x04001311] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001311	    0x390500000000	            cmp dword [0x04001317], eax 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001317	            0x742d	                            je 0x4001346	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001319	      0xbf19000000	                           mov edi, 0x19	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x400131e	      0xe800000000	                          call 0x4001323	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x4001323	      0xe800000000	                          call 0x4001328	       578	ui.c	FUNCTION_17	IF_3	IF_4	CALL_11
0x4001328	      0xe800000000	                          call 0x400132d	       579	ui.c	FUNCTION_17	IF_3	IF_4	CALL_12
0x400132d	      0xbe00000000	                              mov esi, 0	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001332	      0xbf01000000	                              mov edi, 1	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001337	      0xe800000000	                          call 0x400133c	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x400133c	            0xeb08	                           jmp 0x4001346	       584	ui.c	FUNCTION_17
0x400133e	          0x4889df	                            mov rdi, rbx	       563	ui.c	FUNCTION_17	CALL_3
0x4001341	      0xe800000000	                          call 0x4001346	       563	ui.c	FUNCTION_17	CALL_3
0x4001346	              0x5b	                                 pop rbx	       584	ui.c	FUNCTION_17
0x4001347	              0x5d	                                 pop rbp	       584	ui.c	FUNCTION_17
0x4001348	            0x415c	                                 pop r12	       584	ui.c	FUNCTION_17
0x400134a	              0xc3	                                     ret	       584	ui.c	FUNCTION_17
vcol2col	CALL,3:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,1	47
0x4003a5f	            0x4156	                                push r14	      3261	ui.c	FUNCTION_79
0x4003a61	            0x4155	                                push r13	      3261	ui.c	FUNCTION_79
0x4003a63	            0x4154	                                push r12	      3261	ui.c	FUNCTION_79
0x4003a65	              0x55	                                push rbp	      3261	ui.c	FUNCTION_79
0x4003a66	              0x53	                                push rbx	      3261	ui.c	FUNCTION_79
0x4003a67	          0x4989fd	                            mov r13, rdi	      3261	ui.c	FUNCTION_79
0x4003a6a	          0x4189d6	                           mov r14d, edx	      3261	ui.c	FUNCTION_79
0x4003a6d	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3267	ui.c	FUNCTION_79	CALL_1
0x4003a71	      0xba00000000	                              mov edx, 0	      3267	ui.c	FUNCTION_79	CALL_1
0x4003a76	      0xe800000000	                          call 0x4003a7b	      3267	ui.c	FUNCTION_79	CALL_1
0x4003a7b	          0x4989c4	                            mov r12, rax	      3267	ui.c	FUNCTION_79	CALL_1
0x4003a7e	          0x4585f6	                         test r14d, r14d	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a81	            0x7e4d	                           jle 0x4003ad0	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a83	          0x803800	                       cmp byte [rax], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a86	            0x744d	                            je 0x4003ad5	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a88	          0x4889c3	                            mov rbx, rax	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a8b	      0xbd00000000	                              mov ebp, 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003a90	    0x41b800000000	                              mov r8d, 0	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003a96	            0x89e9	                            mov ecx, ebp	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003a98	          0x4889da	                            mov rdx, rbx	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003a9b	          0x4c89e6	                            mov rsi, r12	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003a9e	          0x4c89ef	                            mov rdi, r13	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003aa1	      0xe800000000	                          call 0x4003aa6	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003aa6	             0x1c5	                            add ebp, eax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x4003aa8	      0xb801000000	                              mov eax, 1	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003aad	    0x833d00000000	               cmp dword [0x04003ab4], 0	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003ab4	            0x7409	                            je 0x4003abf	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003ab6	          0x4889df	                            mov rdi, rbx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003ab9	    0xff1500000000	                 call qword [0x04003abf]	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003abf	            0x4898	                                    cdqe	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003ac1	          0x4801c3	                            add rbx, rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4003ac4	          0x4139ee	                           cmp r14d, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003ac7	            0x7e0f	                           jle 0x4003ad8	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003ac9	          0x803b00	                       cmp byte [rbx], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003acc	            0x75c2	                           jne 0x4003a90	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003ace	            0xeb08	                           jmp 0x4003ad8	      3268	ui.c	FUNCTION_79	WHILE_1
0x4003ad0	          0x4889c3	                            mov rbx, rax	      3267	ui.c	FUNCTION_79	CALL_1
0x4003ad3	            0xeb03	                           jmp 0x4003ad8	      3267	ui.c	FUNCTION_79	CALL_1
0x4003ad5	          0x4889c3	                            mov rbx, rax	      3267	ui.c	FUNCTION_79	CALL_1
0x4003ad8	          0x4889d8	                            mov rax, rbx	      3273	ui.c	FUNCTION_79
0x4003adb	          0x4c29e0	                            sub rax, r12	      3273	ui.c	FUNCTION_79
0x4003ade	              0x5b	                                 pop rbx	      3274	ui.c	FUNCTION_79
0x4003adf	              0x5d	                                 pop rbp	      3274	ui.c	FUNCTION_79
0x4003ae0	            0x415c	                                 pop r12	      3274	ui.c	FUNCTION_79
0x4003ae2	            0x415d	                                 pop r13	      3274	ui.c	FUNCTION_79
0x4003ae4	            0x415e	                                 pop r14	      3274	ui.c	FUNCTION_79
0x4003ae6	              0xc3	                                     ret	      3274	ui.c	FUNCTION_79
clip_invert_area	CALL,5:SWITCH,0:FOR,0:functions,0:IF,7:ELSE,2:DO,0:WHILE,0	77
0x4000255	            0x4157	                                push r15	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000257	            0x4156	                                push r14	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000259	            0x4155	                                push r13	      1130	ui.c	ELSE_4	FUNCTION_33
0x400025b	            0x4154	                                push r12	      1130	ui.c	ELSE_4	FUNCTION_33
0x400025d	              0x55	                                push rbp	      1130	ui.c	ELSE_4	FUNCTION_33
0x400025e	              0x53	                                push rbx	      1130	ui.c	ELSE_4	FUNCTION_33
0x400025f	        0x4883ec08	                              sub rsp, 8	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000263	            0x89fd	                            mov ebp, edi	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000265	          0x4189f4	                           mov r12d, esi	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000268	            0x89d3	                            mov ebx, edx	      1130	ui.c	ELSE_4	FUNCTION_33
0x400026a	          0x4189ce	                           mov r14d, ecx	      1130	ui.c	ELSE_4	FUNCTION_33
0x400026d	          0x4589c7	                           mov r15d, r8d	      1130	ui.c	ELSE_4	FUNCTION_33
0x4000270	        0x4183f802	                              cmp r8d, 2	      1131	ui.c	ELSE_4	FUNCTION_33
0x4000274	        0x410f94c5	                               sete r13b	      1131	ui.c	ELSE_4	FUNCTION_33
0x4000278	        0x450fb6ed	                        movzx r13d, r13b	      1131	ui.c	ELSE_4	FUNCTION_33
0x400027c	      0xe8bffdffff	               call sym.clip_compare_pos	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x4000281	            0x85c0	                           test eax, eax	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x4000283	            0x7f0f	                            jg 0x4000294	      1137	ui.c	ELSE_4	FUNCTION_33	IF_2	CALL_1
0x4000285	        0x4183ff03	                             cmp r15d, 3	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000289	      0xb801000000	                              mov eax, 1	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x400028e	        0x440f44e8	                         cmove r13d, eax	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000292	            0xeb0f	                           jmp 0x40002a3	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000294	          0x4489e0	                           mov eax, r12d	      1149	ui.c	ELSE_4	FUNCTION_33	ELSE_1	IF_3
0x4000297	          0x4589f4	                          mov r12d, r14d	      1144	ui.c	ELSE_4	FUNCTION_33	IF_2
0x400029a	          0x4189c6	                           mov r14d, eax	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x400029d	            0x89e8	                            mov eax, ebp	      1146	ui.c	ELSE_4	FUNCTION_33	IF_2
0x400029f	            0x89dd	                            mov ebp, ebx	      1143	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40002a1	            0x89c3	                            mov ebx, eax	      1145	ui.c	ELSE_4	FUNCTION_33	IF_2
0x40002a3	            0x39dd	                            cmp ebp, ebx	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x40002a5	            0x751a	                           jne 0x40002c1	      1152	ui.c	ELSE_4	FUNCTION_33	IF_4
0x40002a7	          0x4489f1	                           mov ecx, r14d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002aa	          0x4429e1	                           sub ecx, r12d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002ad	          0x4589e8	                           mov r8d, r13d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002b0	      0xba01000000	                              mov edx, 1	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002b5	          0x4489e6	                           mov esi, r12d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002b8	            0x89ef	                            mov edi, ebp	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002ba	      0xe878ffffff	          call sym.clip_invert_rectangle	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002bf	            0xeb6e	                           jmp 0x400032f	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x40002c1	          0x4585e4	                         test r12d, r12d	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40002c4	            0x7e1e	                           jle 0x40002e4	      1159	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40002c6	    0x8b0d00000000	            mov ecx, dword [0x040002cc] 	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002cc	          0x4429e1	                           sub ecx, r12d	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002cf	          0x4589e8	                           mov r8d, r13d	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002d2	      0xba01000000	                              mov edx, 1	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002d7	          0x4489e6	                           mov esi, r12d	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002da	            0x89ef	                            mov edi, ebp	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002dc	      0xe856ffffff	          call sym.clip_invert_rectangle	      1161	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5	CALL_3
0x40002e1	          0x83c501	                              add ebp, 1	      1162	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_5
0x40002e4	          0x4963d6	                        movsxd rdx, r14d	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40002e7	    0x488b05000000	            mov rax, qword [0x040002ee] 	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40002ee	        0x4883e801	                              sub rax, 1	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40002f2	          0x4839c2	                            cmp rdx, rax	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40002f5	            0x7d1a	                           jge 0x4000311	      1166	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x40002f7	          0x4589e8	                           mov r8d, r13d	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x40002fa	          0x4489f1	                           mov ecx, r14d	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x40002fd	      0xba01000000	                              mov edx, 1	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000302	      0xbe00000000	                              mov esi, 0	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000307	            0x89df	                            mov edi, ebx	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x4000309	      0xe829ffffff	          call sym.clip_invert_rectangle	      1168	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6	CALL_4
0x400030e	          0x83eb01	                              sub ebx, 1	      1169	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_6
0x4000311	            0x39dd	                            cmp ebp, ebx	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x4000313	            0x7f1a	                            jg 0x400032f	      1173	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7
0x4000315	            0x29eb	                            sub ebx, ebp	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000317	          0x8d5301	                      lea edx, [rbx + 1]	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400031a	          0x4589e8	                           mov r8d, r13d	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400031d	    0x8b0d00000000	            mov ecx, dword [0x04000323] 	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000323	      0xbe00000000	                              mov esi, 0	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x4000328	            0x89ef	                            mov edi, ebp	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400032a	      0xe808ffffff	          call sym.clip_invert_rectangle	      1174	ui.c	ELSE_4	FUNCTION_33	ELSE_2	IF_7	CALL_5
0x400032f	        0x4883c408	                              add rsp, 8	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000333	              0x5b	                                 pop rbx	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000334	              0x5d	                                 pop rbp	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000335	            0x415c	                                 pop r12	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000337	            0x415d	                                 pop r13	      1177	ui.c	ELSE_4	FUNCTION_33
0x4000339	            0x415e	                                 pop r14	      1177	ui.c	ELSE_4	FUNCTION_33
0x400033b	            0x415f	                                 pop r15	      1177	ui.c	ELSE_4	FUNCTION_33
0x400033d	              0xc3	                                     ret	      1177	ui.c	ELSE_4	FUNCTION_33
set_input_buf	CALL,3:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	19
0x4001b8a	          0x4885ff	                           test rdi, rdi	      1678	ui.c	FUNCTION_49	IF_1
0x4001b8d	            0x7439	                            je 0x4001bc8	      1678	ui.c	FUNCTION_49	IF_1
0x4001b8f	              0x53	                                push rbx	      1675	ui.c	FUNCTION_49
0x4001b90	          0x4889fb	                            mov rbx, rdi	      1675	ui.c	FUNCTION_49
0x4001b93	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4001b97	          0x4885f6	                           test rsi, rsi	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4001b9a	            0x7423	                            je 0x4001bbf	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4001b9c	          0x486317	                 movsxd rdx, dword [rdi]	        59	string3.h	FUNCTION_83	CALL_3
0x4001b9f	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x4001ba4	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4001ba9	      0xe800000000	                          call 0x4001bae	        59	string3.h	FUNCTION_83	CALL_3
0x4001bae	            0x8b03	                    mov eax, dword [rbx]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4001bb0	    0x890500000000	            mov dword [0x04001bb6], eax 	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4001bb6	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4001bba	      0xe800000000	                          call 0x4001bbf	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4001bbf	          0x4889df	                            mov rdi, rbx	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4001bc2	      0xe800000000	                          call 0x4001bc7	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4001bc7	              0x5b	                                 pop rbx	      1688	ui.c	FUNCTION_49
0x4001bc8	            0xf3c3	                                     ret	      1688	ui.c	FUNCTION_49
ui_cursor_shape_forced	CALL,4:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	9
0x4002183	        0x4883ec08	                              sub rsp, 8	      1961	ui.c	FUNCTION_57
0x4002187	    0x833d00000000	               cmp dword [0x0400218e], 0	      1963	ui.c	FUNCTION_57	IF_1
0x400218e	            0x7407	                            je 0x4002197	      1963	ui.c	FUNCTION_57	IF_1
0x4002190	      0xe800000000	                          call 0x4002195	      1964	ui.c	FUNCTION_57	CALL_1
0x4002195	            0xeb05	                           jmp 0x400219c	      1964	ui.c	FUNCTION_57	CALL_1
0x4002197	      0xe800000000	                          call 0x400219c	      1967	ui.c	FUNCTION_57	CALL_2
0x400219c	      0xe800000000	                          call 0x40021a1	      1974	ui.c	FUNCTION_57	CALL_4
0x40021a1	        0x4883c408	                              add rsp, 8	      1976	ui.c	FUNCTION_57
0x40021a5	              0xc3	                                     ret	      1976	ui.c	FUNCTION_57
clip_start_selection	CALL,10:SWITCH,1:FOR,0:functions,0:IF,4:ELSE,1:DO,0:WHILE,0	95
0x40021eb	            0x4154	                                push r12	       785	ui.c	FUNCTION_27
0x40021ed	              0x55	                                push rbp	       785	ui.c	FUNCTION_27
0x40021ee	              0x53	                                push rbx	       785	ui.c	FUNCTION_27
0x40021ef	          0x4189fc	                           mov r12d, edi	       785	ui.c	FUNCTION_27
0x40021f2	            0x89f3	                            mov ebx, esi	       785	ui.c	FUNCTION_27
0x40021f4	            0x89d5	                            mov ebp, edx	       785	ui.c	FUNCTION_27
0x40021f6	    0x66833d000000	                cmp word [0x040021fe], 2	       788	ui.c	FUNCTION_27	IF_1
0x40021fe	            0x750a	                           jne 0x400220a	       788	ui.c	FUNCTION_27	IF_1
0x4002200	      0xbf00000000	                              mov edi, 0	       789	ui.c	FUNCTION_27	CALL_1
0x4002205	      0xe800000000	                          call 0x400220a	       789	ui.c	FUNCTION_27	CALL_1
0x400220a	            0x89df	                            mov edi, ebx	       791	ui.c	FUNCTION_27	CALL_2
0x400220c	      0xe800000000	                          call 0x4002211	       791	ui.c	FUNCTION_27	CALL_2
0x4002211	            0x89c3	                            mov ebx, eax	       791	ui.c	FUNCTION_27	CALL_2
0x4002213	          0x4489e7	                           mov edi, r12d	       792	ui.c	FUNCTION_27	CALL_3
0x4002216	      0xe800000000	                          call 0x400221b	       792	ui.c	FUNCTION_27	CALL_3
0x400221b	            0x89de	                            mov esi, ebx	       794	ui.c	FUNCTION_27	CALL_4
0x400221d	            0x89c7	                            mov edi, eax	       794	ui.c	FUNCTION_27	CALL_4
0x400221f	      0xe800000000	                          call 0x4002224	       794	ui.c	FUNCTION_27	CALL_4
0x4002224	          0x4863d3	                         movsxd rdx, ebx	       797	ui.c	FUNCTION_27
0x4002227	    0x488915000000	            mov qword [0x0400222e], rdx 	       797	ui.c	FUNCTION_27
0x400222e	    0x890500000000	            mov dword [0x04002234], eax 	       798	ui.c	FUNCTION_27
0x4002234	    0x488b05000000	            mov rax, qword [0x0400223b] 	       799	ui.c	FUNCTION_27
0x400223b	    0x488b15000000	            mov rdx, qword [0x04002242] 	       799	ui.c	FUNCTION_27
0x4002242	    0x488905000000	            mov qword [0x04002249], rax 	       799	ui.c	FUNCTION_27
0x4002249	    0x488915000000	            mov qword [0x04002250], rdx 	       799	ui.c	FUNCTION_27
0x4002250	    0x66891d000000	               mov word [0x04002257], bx	       800	ui.c	FUNCTION_27
0x4002257	    0x66c705000000	                mov word [0x04002260], 1	       801	ui.c	FUNCTION_27
0x4002260	            0x85ed	                           test ebp, ebp	       803	ui.c	FUNCTION_27	IF_2
0x4002262	            0x7425	                            je 0x4002289	       803	ui.c	FUNCTION_27	IF_2
0x4002264	     0xfb705000000	           movzx eax, word [0x0400226b] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x400226b	          0x83c001	                              add eax, 1	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x400226e	    0x668905000000	               mov word [0x04002275], ax	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002275	        0x6683f802	                               cmp ax, 2	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002279	            0x761c	                           jbe 0x4002297	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x400227b	    0x66c705000000	                mov word [0x04002284], 0	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x4002284	      0xe921010000	                           jmp 0x40023aa	       806	ui.c	FUNCTION_27	IF_2	IF_3
0x4002289	    0x66c705000000	                mov word [0x04002292], 0	       809	ui.c	FUNCTION_27	ELSE_1
0x4002292	      0xe913010000	                           jmp 0x40023aa	       809	ui.c	FUNCTION_27	ELSE_1
0x4002297	    0x833d00000000	               cmp dword [0x0400229e], 0	       813	ui.c	FUNCTION_27	IF_4
0x400229e	            0x7405	                            je 0x40022a5	       813	ui.c	FUNCTION_27	IF_4
0x40022a0	      0xe800000000	                          call 0x40022a5	       814	ui.c	FUNCTION_27	CALL_5
0x40022a5	     0xfb705000000	           movzx eax, word [0x040022ac] 	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022ac	        0x6683f801	                               cmp ax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022b0	            0x7439	                            je 0x40022eb	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022b2	        0x6683f801	                               cmp ax, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022b6	            0x720f	                            jb 0x40022c7	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022b8	        0x6683f802	                               cmp ax, 2	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022bc	     0xf8494000000	                            je 0x4002356	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022c2	      0xe9c5000000	                           jmp 0x400238c	       817	ui.c	FUNCTION_27	SWITCH_1
0x40022c7	    0x8b0500000000	            mov eax, dword [0x040022cd] 	       820	ui.c	FUNCTION_27	SWITCH_1
0x40022cd	    0x668905000000	               mov word [0x040022d4], ax	       820	ui.c	FUNCTION_27	SWITCH_1
0x40022d4	    0x8b3d00000000	            mov edi, dword [0x040022da] 	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x40022da	      0xe880ddffff	              call sym.clip_get_line_end	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x40022df	    0x668905000000	               mov word [0x040022e6], ax	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x40022e6	      0xe9a1000000	                           jmp 0x400238c	       822	ui.c	FUNCTION_27	SWITCH_1
0x40022eb	    0x8b1500000000	            mov edx, dword [0x040022f1] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40022f1	    0x8b3500000000	            mov esi, dword [0x040022f7] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40022f7	      0xbf00000000	                              mov edi, 0	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x40022fc	      0xe8b8ddffff	       call sym.clip_get_word_boundaries	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4002301	     0xfb735000000	           movzx esi, word [0x04002308] 	       826	ui.c	FUNCTION_27	SWITCH_1
0x4002308	    0x668935000000	               mov word [0x0400230f], si	       826	ui.c	FUNCTION_27	SWITCH_1
0x400230f	     0xfb70d000000	           movzx ecx, word [0x04002316] 	       827	ui.c	FUNCTION_27	SWITCH_1
0x4002316	    0x66890d000000	               mov word [0x0400231d], cx	       827	ui.c	FUNCTION_27	SWITCH_1
0x400231d	           0xfb7c9	                           movzx ecx, cx	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002320	           0xfb7f6	                           movzx esi, si	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002323	    0x41b802000000	                              mov r8d, 2	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002329	    0x8b1500000000	            mov edx, dword [0x0400232f] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400232f	    0x8b3d00000000	            mov edi, dword [0x04002335] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002335	      0xe81bdfffff	               call sym.clip_invert_area	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400233a	     0xfb705000000	           movzx eax, word [0x04002341] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x4002341	    0x890500000000	            mov dword [0x04002347], eax 	       831	ui.c	FUNCTION_27	SWITCH_1
0x4002347	     0xfb705000000	           movzx eax, word [0x0400234e] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x400234e	    0x890500000000	            mov dword [0x04002354], eax 	       832	ui.c	FUNCTION_27	SWITCH_1
0x4002354	            0xeb36	                           jmp 0x400238c	       833	ui.c	FUNCTION_27	SWITCH_1
0x4002356	    0x488b3d000000	            mov rdi, qword [0x0400235d] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x400235d	    0x41b802000000	                              mov r8d, 2	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4002363	    0x8b0d00000000	            mov ecx, dword [0x04002369] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4002369	            0x89fa	                            mov edx, edi	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x400236b	      0xbe00000000	                              mov esi, 0	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4002370	      0xe8e0deffff	               call sym.clip_invert_area	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x4002375	    0xc70500000000	               mov dword [0x0400237f], 0	       838	ui.c	FUNCTION_27	SWITCH_1
0x400237f	    0x488b05000000	            mov rax, qword [0x04002386] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x4002386	    0x890500000000	            mov dword [0x0400238c], eax 	       839	ui.c	FUNCTION_27	SWITCH_1
0x400238c	    0x488b05000000	            mov rax, qword [0x04002393] 	       843	ui.c	FUNCTION_27
0x4002393	    0x488b15000000	            mov rdx, qword [0x0400239a] 	       843	ui.c	FUNCTION_27
0x400239a	    0x488905000000	            mov qword [0x040023a1], rax 	       843	ui.c	FUNCTION_27
0x40023a1	    0x488915000000	            mov qword [0x040023a8], rdx 	       843	ui.c	FUNCTION_27
0x40023a8	            0xeb12	                           jmp 0x40023bc	       848	ui.c	FUNCTION_27
0x40023aa	    0x833d00000000	               cmp dword [0x040023b1], 0	       813	ui.c	FUNCTION_27	IF_4
0x40023b1	     0xf85e9feffff	                           jne 0x40022a0	       813	ui.c	FUNCTION_27	IF_4
0x40023b7	      0xe90bffffff	                           jmp 0x40022c7	       813	ui.c	FUNCTION_27	IF_4
0x40023bc	              0x5b	                                 pop rbx	       848	ui.c	FUNCTION_27
0x40023bd	              0x5d	                                 pop rbp	       848	ui.c	FUNCTION_27
0x40023be	            0x415c	                                 pop r12	       848	ui.c	FUNCTION_27
0x40023c0	              0xc3	                                     ret	       848	ui.c	FUNCTION_27
vim_is_input_buf_empty	CALL,0:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	4
0x4001b20	    0x833d00000000	               cmp dword [0x04001b27], 0	      1627	ui.c	FUNCTION_45
0x4001b27	           0xf94c0	                                 sete al	      1627	ui.c	FUNCTION_45
0x4001b2a	           0xfb6c0	                           movzx eax, al	      1627	ui.c	FUNCTION_45
0x4001b2d	              0xc3	                                     ret	      1628	ui.c	FUNCTION_45
check_col	CALL,0:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	9
0x40021b9	            0x85ff	                           test edi, edi	      1993	ui.c	FUNCTION_59	IF_1
0x40021bb	            0x780f	                            js 0x40021cc	      1993	ui.c	FUNCTION_59	IF_1
0x40021bd	    0x8b1500000000	            mov edx, dword [0x040021c3] 	      1995	ui.c	FUNCTION_59	IF_2
0x40021c3	          0x8d42ff	                      lea eax, [rdx - 1]	      1996	ui.c	FUNCTION_59	IF_2
0x40021c6	            0x39d7	                            cmp edi, edx	      1996	ui.c	FUNCTION_59	IF_2
0x40021c8	           0xf4cc7	                          cmovl eax, edi	      1996	ui.c	FUNCTION_59	IF_2
0x40021cb	              0xc3	                                     ret	      1996	ui.c	FUNCTION_59	IF_2
0x40021cc	      0xb800000000	                              mov eax, 0	      1994	ui.c	FUNCTION_59	IF_1
0x40021d1	              0xc3	                                     ret	      1998	ui.c	FUNCTION_59
ui_delay	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	11
0x4000df8	        0x4883ec08	                              sub rsp, 8	       285	ui.c	FUNCTION_6
0x4000dfc	    0x833d00000000	               cmp dword [0x04000e03], 0	       287	ui.c	FUNCTION_6	IF_1
0x4000e03	            0x7411	                            je 0x4000e16	       287	ui.c	FUNCTION_6	IF_1
0x4000e05	            0x85f6	                           test esi, esi	       287	ui.c	FUNCTION_6	IF_1
0x4000e07	            0x750d	                           jne 0x4000e16	       287	ui.c	FUNCTION_6	IF_1
0x4000e09	    0x8b3500000000	            mov esi, dword [0x04000e0f] 	       288	ui.c	FUNCTION_6	CALL_1
0x4000e0f	      0xe800000000	                          call 0x4000e14	       288	ui.c	FUNCTION_6	CALL_1
0x4000e14	            0xeb05	                           jmp 0x4000e1b	       288	ui.c	FUNCTION_6	CALL_1
0x4000e16	      0xe800000000	                          call 0x4000e1b	       291	ui.c	FUNCTION_6	CALL_2
0x4000e1b	        0x4883c408	                              add rsp, 8	       292	ui.c	FUNCTION_6
0x4000e1f	              0xc3	                                     ret	       292	ui.c	FUNCTION_6
ui_inchar	CALL,14:SWITCH,0:FOR,0:functions,0:IF,11:ELSE,1:DO,0:WHILE,0	127
0x4001cd6	            0x4157	                                push r15	       121	ui.c	FUNCTION_3
0x4001cd8	            0x4156	                                push r14	       121	ui.c	FUNCTION_3
0x4001cda	            0x4155	                                push r13	       121	ui.c	FUNCTION_3
0x4001cdc	            0x4154	                                push r12	       121	ui.c	FUNCTION_3
0x4001cde	              0x55	                                push rbp	       121	ui.c	FUNCTION_3
0x4001cdf	              0x53	                                push rbx	       121	ui.c	FUNCTION_3
0x4001ce0	        0x4883ec18	                           sub rsp, 0x18	       121	ui.c	FUNCTION_3
0x4001ce4	          0x4889fd	                            mov rbp, rdi	       121	ui.c	FUNCTION_3
0x4001ce7	            0x89f3	                            mov ebx, esi	       121	ui.c	FUNCTION_3
0x4001ce9	    0x4c8b35000000	            mov r14, qword [0x04001cf0] 	       128	ui.c	FUNCTION_3	IF_1
0x4001cf0	          0x4d85f6	                           test r14, r14	       128	ui.c	FUNCTION_3	IF_1
0x4001cf3	            0x7461	                            je 0x4001d56	       128	ui.c	FUNCTION_3	IF_1
0x4001cf5	    0x8b1500000000	            mov edx, dword [0x04001cfb] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001cfb	    0x448b25000000	           mov r12d, dword [0x04001d02] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d02	            0x89d0	                            mov eax, edx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d04	          0x4429e0	                           sub eax, r12d	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d07	            0x39f0	                            cmp eax, esi	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d09	            0x7f2c	                            jg 0x4001d37	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d0b	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_83	CALL_3
0x4001d0e	          0x4963f4	                        movsxd rsi, r12d	        59	string3.h	FUNCTION_83	CALL_3
0x4001d11	          0x4c01f6	                            add rsi, r14	        59	string3.h	FUNCTION_83	CALL_3
0x4001d14	      0xe800000000	                          call 0x4001d19	        59	string3.h	FUNCTION_83	CALL_3
0x4001d19	          0x4c89f7	                            mov rdi, r14	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4001d1c	      0xe800000000	                          call 0x4001d21	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4001d21	    0x48c705000000	               mov qword [0x04001d2c], 0	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4001d2c	    0x8b0500000000	            mov eax, dword [0x04001d32] 	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d32	      0xe965010000	                           jmp 0x4001e9c	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x4001d37	          0x4863d6	                         movsxd rdx, esi	        59	string3.h	FUNCTION_83	CALL_3
0x4001d3a	          0x4963f4	                        movsxd rsi, r12d	        59	string3.h	FUNCTION_83	CALL_3
0x4001d3d	          0x4c01f6	                            add rsi, r14	        59	string3.h	FUNCTION_83	CALL_3
0x4001d40	      0xe800000000	                          call 0x4001d45	        59	string3.h	FUNCTION_83	CALL_3
0x4001d45	          0x4101dc	                           add r12d, ebx	       137	ui.c	FUNCTION_3	IF_1
0x4001d48	    0x448925000000	           mov dword [0x04001d4f], r12d 	       137	ui.c	FUNCTION_3	IF_1
0x4001d4f	            0x89d8	                            mov eax, ebx	       138	ui.c	FUNCTION_3	IF_1
0x4001d51	      0xe946010000	                           jmp 0x4001e9c	       138	ui.c	FUNCTION_3	IF_1
0x4001d56	          0x4989d4	                            mov r12, rdx	       138	ui.c	FUNCTION_3	IF_1
0x4001d59	          0x4189cd	                           mov r13d, ecx	       138	ui.c	FUNCTION_3	IF_1
0x4001d5c	          0x4885d2	                           test rdx, rdx	       143	ui.c	FUNCTION_3	IF_3
0x4001d5f	        0x410f95c7	                              setne r15b	       143	ui.c	FUNCTION_3	IF_3
0x4001d63	    0x833d00000000	               cmp dword [0x04001d6a], 1	       143	ui.c	FUNCTION_3	IF_3
0x4001d6a	            0x750a	                           jne 0x4001d76	       143	ui.c	FUNCTION_3	IF_3
0x4001d6c	          0x4584ff	                         test r15b, r15b	       143	ui.c	FUNCTION_3	IF_3
0x4001d6f	            0x7405	                            je 0x4001d76	       143	ui.c	FUNCTION_3	IF_3
0x4001d71	      0xe800000000	                          call 0x4001d76	       144	ui.c	FUNCTION_3	CALL_4
0x4001d76	      0xe800000000	                          call 0x4001d7b	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4001d7b	            0x85c0	                           test eax, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4001d7d	            0x746c	                            je 0x4001deb	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4001d7f	        0x4983fc0a	                            cmp r12, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d83	      0xba0a000000	                            mov edx, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d88	        0x490f43d4	                         cmovae rdx, r12	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d8c	          0x4489e9	                           mov ecx, r13d	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d8f	            0x89de	                            mov esi, ebx	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d91	          0x4889ef	                            mov rdi, rbp	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d94	      0xe800000000	                          call 0x4001d99	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d99	            0x89c3	                            mov ebx, eax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4001d9b	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001d9d	     0xf8fe0000000	                            jg 0x4001e83	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001da3	          0x4489ef	                           mov edi, r13d	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001da6	      0xe800000000	                          call 0x4001dab	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001dab	          0x4d85e4	                           test r12, r12	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001dae	     0xf89cf000000	                           jns 0x4001e83	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001db4	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001db6	     0xf85c7000000	                           jne 0x4001e83	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4001dbc	        0x4983fcff	             cmp r12, 0xffffffffffffffff	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dc0	            0x751b	                           jne 0x4001ddd	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dc2	    0x8b0500000000	            mov eax, dword [0x04001dc8] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dc8	          0x83c001	                              add eax, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dcb	    0x890500000000	            mov dword [0x04001dd1], eax 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dd1	      0x3de8030000	                          cmp eax, 0x3e8	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dd6	            0x7505	                           jne 0x4001ddd	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4001dd8	      0xe800000000	                          call 0x4001ddd	       163	ui.c	FUNCTION_3	IF_4	CALL_8
0x4001ddd	        0xc645000d	                     mov byte [rbp], 0xd	       164	ui.c	FUNCTION_3	IF_4
0x4001de1	      0xbb01000000	                              mov ebx, 1	       165	ui.c	FUNCTION_3	IF_4
0x4001de6	      0xe998000000	                           jmp 0x4001e83	       166	ui.c	FUNCTION_3	IF_4
0x4001deb	        0x4983fcff	             cmp r12, 0xffffffffffffffff	       171	ui.c	FUNCTION_3	IF_7
0x4001def	        0x410f94c6	                               sete r14b	       171	ui.c	FUNCTION_3	IF_7
0x4001df3	        0x4983fc64	                           cmp r12, 0x64	       171	ui.c	FUNCTION_3	IF_7
0x4001df7	           0xf9fc0	                                 setg al	       171	ui.c	FUNCTION_3	IF_7
0x4001dfa	          0x4108c6	                             or r14b, al	       171	ui.c	FUNCTION_3	IF_7
0x4001dfd	            0x743c	                            je 0x4001e3b	       171	ui.c	FUNCTION_3	IF_7
0x4001dff	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4001e04	      0xe800000000	                          call 0x4001e09	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4001e09	    0x488b05000000	            mov rax, qword [0x04001e10] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e10	    0x8b80401c0000	          mov eax, dword [rax + 0x1c40] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e16	     0xb0500000000	              or eax, dword [0x04001e1c]	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e1c	        0x8944240c	              mov dword [rsp + 0xc], eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e20	      0xe800000000	                          call 0x4001e25	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e25	        0x2344240c	              and eax, dword [rsp + 0xc]	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4001e29	      0xb800000000	                              mov eax, 0	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4001e2e	     0xf4405000000	           cmove eax, dword [0x04001e35]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4001e35	    0x890500000000	            mov dword [0x04001e3b], eax 	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4001e3b	    0x833d00000000	               cmp dword [0x04001e42], 0	       183	ui.c	FUNCTION_3	IF_9
0x4001e42	            0x7414	                            je 0x4001e58	       183	ui.c	FUNCTION_3	IF_9
0x4001e44	          0x4489e9	                           mov ecx, r13d	       184	ui.c	FUNCTION_3	CALL_11
0x4001e47	          0x4c89e2	                            mov rdx, r12	       184	ui.c	FUNCTION_3	CALL_11
0x4001e4a	            0x89de	                            mov esi, ebx	       184	ui.c	FUNCTION_3	CALL_11
0x4001e4c	          0x4889ef	                            mov rdi, rbp	       184	ui.c	FUNCTION_3	CALL_11
0x4001e4f	      0xe800000000	                          call 0x4001e54	       184	ui.c	FUNCTION_3	CALL_11
0x4001e54	            0x89c3	                            mov ebx, eax	       184	ui.c	FUNCTION_3	CALL_11
0x4001e56	            0xeb12	                           jmp 0x4001e6a	       184	ui.c	FUNCTION_3	CALL_11
0x4001e58	          0x4489e9	                           mov ecx, r13d	       190	ui.c	FUNCTION_3	CALL_12
0x4001e5b	          0x4c89e2	                            mov rdx, r12	       190	ui.c	FUNCTION_3	CALL_12
0x4001e5e	            0x89de	                            mov esi, ebx	       190	ui.c	FUNCTION_3	CALL_12
0x4001e60	          0x4889ef	                            mov rdi, rbp	       190	ui.c	FUNCTION_3	CALL_12
0x4001e63	      0xe800000000	                          call 0x4001e68	       190	ui.c	FUNCTION_3	CALL_12
0x4001e68	            0x89c3	                            mov ebx, eax	       190	ui.c	FUNCTION_3	CALL_12
0x4001e6a	          0x4584f6	                         test r14b, r14b	       193	ui.c	FUNCTION_3	IF_10
0x4001e6d	            0x740a	                            je 0x4001e79	       193	ui.c	FUNCTION_3	IF_10
0x4001e6f	      0xbfffffffff	                     mov edi, 0xffffffff	       195	ui.c	FUNCTION_3	CALL_13
0x4001e74	      0xe800000000	                          call 0x4001e79	       195	ui.c	FUNCTION_3	CALL_13
0x4001e79	    0xc70500000000	               mov dword [0x04001e83], 1	       197	ui.c	FUNCTION_3
0x4001e83	    0x833d00000000	               cmp dword [0x04001e8a], 1	       203	ui.c	FUNCTION_3	IF_11
0x4001e8a	            0x750e	                           jne 0x4001e9a	       203	ui.c	FUNCTION_3	IF_11
0x4001e8c	          0x4584ff	                         test r15b, r15b	       203	ui.c	FUNCTION_3	IF_11
0x4001e8f	            0x7409	                            je 0x4001e9a	       203	ui.c	FUNCTION_3	IF_11
0x4001e91	      0xe800000000	                          call 0x4001e96	       204	ui.c	FUNCTION_3	CALL_14
0x4001e96	            0x89d8	                            mov eax, ebx	       206	ui.c	FUNCTION_3
0x4001e98	            0xeb02	                           jmp 0x4001e9c	       206	ui.c	FUNCTION_3
0x4001e9a	            0x89d8	                            mov eax, ebx	       206	ui.c	FUNCTION_3
0x4001e9c	        0x4883c418	                           add rsp, 0x18	       207	ui.c	FUNCTION_3
0x4001ea0	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4001ea1	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4001ea2	            0x415c	                                 pop r12	       207	ui.c	FUNCTION_3
0x4001ea4	            0x415d	                                 pop r13	       207	ui.c	FUNCTION_3
0x4001ea6	            0x415e	                                 pop r14	       207	ui.c	FUNCTION_3
0x4001ea8	            0x415f	                                 pop r15	       207	ui.c	FUNCTION_3
0x4001eaa	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
get_input_buf	CALL,4:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	22
0x4001b35	              0x53	                                push rbx	      1652	ui.c	FUNCTION_48
0x4001b36	      0xbf18000000	                           mov edi, 0x18	      1656	ui.c	FUNCTION_48	CALL_1
0x4001b3b	      0xe800000000	                          call 0x4001b40	      1656	ui.c	FUNCTION_48	CALL_1
0x4001b40	          0x4889c3	                            mov rbx, rax	      1656	ui.c	FUNCTION_48	CALL_1
0x4001b43	          0x4885c0	                           test rax, rax	      1657	ui.c	FUNCTION_48	IF_1
0x4001b46	            0x7433	                            je 0x4001b7b	      1657	ui.c	FUNCTION_48	IF_1
0x4001b48	    0x8b0500000000	            mov eax, dword [0x04001b4e] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4001b4e	          0x8d7801	                      lea edi, [rax + 1]	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4001b51	      0xe800000000	                          call 0x4001b56	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4001b56	        0x48894310	             mov qword [rbx + 0x10], rax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4001b5a	          0x4885c0	                           test rax, rax	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4001b5d	            0x7414	                            je 0x4001b73	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4001b5f	    0x486315000000	         movsxd rdx, dword [0x04001b66] 	        59	string3.h	FUNCTION_83	CALL_3
0x4001b66	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4001b6b	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4001b6e	      0xe800000000	                          call 0x4001b73	        59	string3.h	FUNCTION_83	CALL_3
0x4001b73	    0x8b0500000000	            mov eax, dword [0x04001b79] 	      1663	ui.c	FUNCTION_48	IF_1
0x4001b79	            0x8903	                    mov dword [rbx], eax	      1663	ui.c	FUNCTION_48	IF_1
0x4001b7b	    0xc70500000000	               mov dword [0x04001b85], 0	      1763	ui.c	FUNCTION_53
0x4001b85	          0x4889d8	                            mov rax, rbx	      1667	ui.c	FUNCTION_48
0x4001b88	              0x5b	                                 pop rbx	      1667	ui.c	FUNCTION_48
0x4001b89	              0xc3	                                     ret	      1667	ui.c	FUNCTION_48
clip_x11_request_selection	CALL,11:SWITCH,1:FOR,1:functions,0:IF,5:ELSE,0:DO,0:WHILE,1	108
0x4002ca4	            0x4156	                                push r14	      2246	ui.c	FUNCTION_66
0x4002ca6	            0x4155	                                push r13	      2246	ui.c	FUNCTION_66
0x4002ca8	            0x4154	                                push r12	      2246	ui.c	FUNCTION_66
0x4002caa	              0x55	                                push rbp	      2246	ui.c	FUNCTION_66
0x4002cab	              0x53	                                push rbx	      2246	ui.c	FUNCTION_66
0x4002cac	    0x4881ecd00000	                           sub rsp, 0xd0	      2246	ui.c	FUNCTION_66
0x4002cb3	          0x4989fe	                            mov r14, rdi	      2246	ui.c	FUNCTION_66
0x4002cb6	          0x4889f3	                            mov rbx, rsi	      2246	ui.c	FUNCTION_66
0x4002cb9	          0x4989d5	                            mov r13, rdx	      2246	ui.c	FUNCTION_66
0x4002cbc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	ui.c	FUNCTION_66
0x4002cc5	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2246	ui.c	FUNCTION_66
0x4002ccd	            0x31c0	                            xor eax, eax	      2246	ui.c	FUNCTION_66
0x4002ccf	      0xbd00000000	                              mov ebp, 0	      2254	ui.c	FUNCTION_66	FOR_1
0x4002cd4	          0x83fd04	                              cmp ebp, 4	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cd7	            0x7743	                            ja 0x4002d1c	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cd9	            0x89e8	                            mov eax, ebp	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cdb	    0xff24c5000000	                       jmp qword [rax*8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002ce2	    0x488b15000000	            mov rdx, qword [0x04002ce9] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002ce9	            0xeb36	                           jmp 0x4002d21	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002ceb	    0x488b15000000	            mov rdx, qword [0x04002cf2] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cf2	            0xeb2d	                           jmp 0x4002d21	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cf4	    0x488b15000000	            mov rdx, qword [0x04002cfb] 	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002cfb	    0x833d00000000	               cmp dword [0x04002d02], 0	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d02	     0xf8419010000	                            je 0x4002e21	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d08	            0xeb33	                           jmp 0x4002d3d	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d0a	    0x488b15000000	            mov rdx, qword [0x04002d11] 	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002d11	            0xeb0e	                           jmp 0x4002d21	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002d13	    0x488b15000000	            mov rdx, qword [0x04002d1a] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002d1a	            0xeb05	                           jmp 0x4002d21	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002d1c	      0xba1f000000	                           mov edx, 0x1f	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4002d21	    0x488b05000000	            mov rax, qword [0x04002d28] 	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d28	          0x4839c2	                            cmp rdx, rax	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d2b	            0x7510	                           jne 0x4002d3d	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d2d	    0x833d00000000	               cmp dword [0x04002d34], 0	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d34	     0xf84c3000000	                            je 0x4002dfd	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d3a	          0x4889c2	                            mov rdx, rax	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x4002d3d	    0xc70500000000	               mov dword [0x04002d47], 2	      2285	ui.c	FUNCTION_66	FOR_1
0x4002d47	        0x498b7550	            mov rsi, qword [r13 + 0x50] 	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d4b	    0x41b900000000	                              mov r9d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d51	    0x41b800000000	                              mov r8d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d57	      0xb900000000	                              mov ecx, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d5c	          0x4c89f7	                            mov rdi, r14	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d5f	      0xe800000000	                          call 0x4002d64	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x4002d64	          0x4889df	                            mov rdi, rbx	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x4002d67	      0xe800000000	                          call 0x4002d6c	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x4002d6c	      0xbf00000000	                              mov edi, 0	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4002d71	      0xe800000000	                          call 0x4002d76	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4002d76	        0x4c8d6002	                      lea r12, [rax + 2]	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4002d7a	            0xeb71	                           jmp 0x4002ded	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4002d7c	          0x4889e2	                            mov rdx, rsp	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d7f	      0xbe1c000000	                           mov esi, 0x1c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d84	          0x4889df	                            mov rdi, rbx	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d87	      0xe800000000	                          call 0x4002d8c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d8c	            0x85c0	                           test eax, eax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d8e	            0x7528	                           jne 0x4002db8	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4002d90	          0x4889e2	                            mov rdx, rsp	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002d93	      0xbe1f000000	                           mov esi, 0x1f	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002d98	          0x4889df	                            mov rdi, rbx	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002d9b	      0xe800000000	                          call 0x4002da0	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002da0	            0x85c0	                           test eax, eax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002da2	            0x7514	                           jne 0x4002db8	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4002da4	          0x4889e2	                            mov rdx, rsp	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002da7	      0xbe1e000000	                           mov esi, 0x1e	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002dac	          0x4889df	                            mov rdi, rbx	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002daf	      0xe800000000	                          call 0x4002db4	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002db4	            0x85c0	                           test eax, eax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002db6	            0x740a	                            je 0x4002dc2	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4002db8	          0x4889e7	                            mov rdi, rsp	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4002dbb	      0xe800000000	                          call 0x4002dc0	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4002dc0	            0xeb2b	                           jmp 0x4002ded	      2312	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2
0x4002dc2	      0xbf00000000	                              mov edi, 0	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4002dc7	      0xe800000000	                          call 0x4002dcc	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4002dcc	          0x4c39e0	                            cmp rax, r12	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4002dcf	            0x7f45	                            jg 0x4002e16	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4002dd1	      0xbe00000000	                              mov esi, 0	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4002dd6	          0x4889df	                            mov rdi, rbx	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4002dd9	      0xe800000000	                          call 0x4002dde	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4002dde	      0xbe01000000	                              mov esi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x4002de3	      0xbf01000000	                              mov edi, 1	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x4002de8	      0xe800000000	                          call 0x4002ded	      2330	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_10
0x4002ded	    0x8b1500000000	            mov edx, dword [0x04002df3] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4002df3	          0x83fa02	                              cmp edx, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4002df6	            0x7484	                            je 0x4002d7c	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4002df8	          0x83fa01	                              cmp edx, 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4002dfb	            0x742c	                            je 0x4002e29	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4002dfd	          0x83c501	                              add ebp, 1	      2260	ui.c	FUNCTION_66	FOR_1
0x4002e00	          0x83fd06	                              cmp ebp, 6	      2254	ui.c	FUNCTION_66	FOR_1
0x4002e03	     0xf85cbfeffff	                           jne 0x4002cd4	      2254	ui.c	FUNCTION_66	FOR_1
0x4002e09	          0x4c89ee	                            mov rsi, r13	      2343	ui.c	FUNCTION_66	CALL_11
0x4002e0c	          0x4889df	                            mov rdi, rbx	      2343	ui.c	FUNCTION_66	CALL_11
0x4002e0f	      0xe800000000	                          call 0x4002e14	      2343	ui.c	FUNCTION_66	CALL_11
0x4002e14	            0xeb13	                           jmp 0x4002e29	      2343	ui.c	FUNCTION_66	CALL_11
0x4002e16	    0x833d00000000	               cmp dword [0x04002e1d], 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4002e1d	            0x75ea	                           jne 0x4002e09	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4002e1f	            0xeb08	                           jmp 0x4002e29	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4002e21	          0x83c501	                              add ebp, 1	      2260	ui.c	FUNCTION_66	FOR_1
0x4002e24	      0xe9abfeffff	                           jmp 0x4002cd4	      2260	ui.c	FUNCTION_66	FOR_1
0x4002e29	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2344	ui.c	FUNCTION_66
0x4002e31	    0x644833042528	                xor rax, qword fs:[0x28]	      2344	ui.c	FUNCTION_66
0x4002e3a	            0x7405	                            je 0x4002e41	      2344	ui.c	FUNCTION_66
0x4002e3c	      0xe800000000	                          call 0x4002e41	      2344	ui.c	FUNCTION_66
0x4002e41	    0x4881c4d00000	                           add rsp, 0xd0	      2344	ui.c	FUNCTION_66
0x4002e48	              0x5b	                                 pop rbx	      2344	ui.c	FUNCTION_66
0x4002e49	              0x5d	                                 pop rbp	      2344	ui.c	FUNCTION_66
0x4002e4a	            0x415c	                                 pop r12	      2344	ui.c	FUNCTION_66
0x4002e4c	            0x415d	                                 pop r13	      2344	ui.c	FUNCTION_66
0x4002e4e	            0x415e	                                 pop r14	      2344	ui.c	FUNCTION_66
0x4002e50	              0xc3	                                     ret	      2344	ui.c	FUNCTION_66
clip_may_redraw_selection	CALL,1:SWITCH,0:FOR,0:functions,0:IF,4:ELSE,0:DO,0:WHILE,0	30
0x400106c	    0x66833d000000	                cmp word [0x04001074], 0	      1044	ui.c	FUNCTION_29	IF_1
0x4001074	            0x7461	                            je 0x40010d7	      1044	ui.c	FUNCTION_29	IF_1
0x4001076	          0x4863c7	                         movsxd rax, edi	      1045	ui.c	FUNCTION_29	IF_1
0x4001079	    0x488b0d000000	            mov rcx, qword [0x04001080] 	      1045	ui.c	FUNCTION_29	IF_1
0x4001080	          0x4839c8	                            cmp rax, rcx	      1045	ui.c	FUNCTION_29	IF_1
0x4001083	            0x7c52	                            jl 0x40010d7	      1045	ui.c	FUNCTION_29	IF_1
0x4001085	    0x4c8b05000000	              mov r8, qword [0x0400108c]	      1046	ui.c	FUNCTION_29	IF_1
0x400108c	          0x4c39c0	                             cmp rax, r8	      1046	ui.c	FUNCTION_29	IF_1
0x400108f	            0x7f46	                            jg 0x40010d7	      1046	ui.c	FUNCTION_29	IF_1
0x4001091	          0x4189f1	                            mov r9d, esi	      1041	ui.c	FUNCTION_29
0x4001094	          0x4839c8	                            cmp rax, rcx	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x4001097	            0x750e	                           jne 0x40010a7	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x4001099	    0x448b0d000000	            mov r9d, dword [0x040010a0] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40010a0	          0x4439ce	                            cmp esi, r9d	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40010a3	        0x440f4dce	                         cmovge r9d, esi	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40010a7	          0x8d0c16	                    lea ecx, [rsi + rdx]	      1042	ui.c	FUNCTION_29
0x40010aa	          0x4c39c0	                             cmp rax, r8	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40010ad	            0x750b	                           jne 0x40010ba	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40010af	    0x8b0500000000	            mov eax, dword [0x040010b5] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40010b5	            0x39c1	                            cmp ecx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40010b7	           0xf4fc8	                          cmovg ecx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40010ba	          0x4139c9	                            cmp r9d, ecx	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40010bd	            0x7d18	                           jge 0x40010d7	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40010bf	        0x4883ec08	                              sub rsp, 8	      1040	ui.c	FUNCTION_29
0x40010c3	    0x41b800000000	                              mov r8d, 0	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40010c9	            0x89fa	                            mov edx, edi	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40010cb	          0x4489ce	                            mov esi, r9d	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40010ce	      0xe882f1ffff	               call sym.clip_invert_area	      1053	ui.c	FUNCTION_29	IF_1	CALL_1
0x40010d3	        0x4883c408	                              add rsp, 8	      1055	ui.c	FUNCTION_29
0x40010d7	            0xf3c3	                                     ret	      1055	ui.c	FUNCTION_29
start_global_changes	CALL,0:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	13
0x4000fb6	    0x8b0500000000	            mov eax, dword [0x04000fbc] 	       615	ui.c	FUNCTION_19	IF_1
0x4000fbc	          0x83c001	                              add eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4000fbf	    0x890500000000	            mov dword [0x04000fc5], eax 	       615	ui.c	FUNCTION_19	IF_1
0x4000fc5	          0x83f801	                              cmp eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4000fc8	            0x7f33	                            jg 0x4000ffd	       615	ui.c	FUNCTION_19	IF_1
0x4000fca	    0x8b0500000000	            mov eax, dword [0x04000fd0] 	       617	ui.c	FUNCTION_19
0x4000fd0	    0x890500000000	            mov dword [0x04000fd6], eax 	       617	ui.c	FUNCTION_19
0x4000fd6	    0xc70500000000	               mov dword [0x04000fe0], 0	       618	ui.c	FUNCTION_19
0x4000fe0	    0x833d00000000	               cmp dword [0x04000fe7], 0	       620	ui.c	FUNCTION_19	IF_2
0x4000fe7	            0x7414	                            je 0x4000ffd	       620	ui.c	FUNCTION_19	IF_2
0x4000fe9	    0xc70500000000	               mov dword [0x04000ff3], 0	       622	ui.c	FUNCTION_19	IF_2
0x4000ff3	    0xc70500000000	               mov dword [0x04000ffd], 0	       623	ui.c	FUNCTION_19	IF_2
0x4000ffd	            0xf3c3	                                     ret	       623	ui.c	FUNCTION_19	IF_2
open_app_context	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	8
0x4002919	    0x48833d000000	               cmp qword [0x04002921], 0	      2029	ui.c	FUNCTION_61	IF_1
0x4002921	            0x7519	                           jne 0x400293c	      2029	ui.c	FUNCTION_61	IF_1
0x4002923	        0x4883ec08	                              sub rsp, 8	      2028	ui.c	FUNCTION_61
0x4002927	      0xe800000000	                          call 0x400292c	      2031	ui.c	FUNCTION_61	IF_1	CALL_1
0x400292c	      0xe800000000	                          call 0x4002931	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4002931	    0x488905000000	            mov qword [0x04002938], rax 	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4002938	        0x4883c408	                              add rsp, 8	      2034	ui.c	FUNCTION_61
0x400293c	            0xf3c3	                                     ret	      2034	ui.c	FUNCTION_61
clip_get_line_end	CALL,0:SWITCH,0:FOR,1:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	25
0x400005f	      0xb800000000	                              mov eax, 0	      1452	ui.c	FUNCTION_37	IF_1
0x4000064	    0x393d00000000	            cmp dword [0x0400006a], edi 	      1451	ui.c	FUNCTION_37	IF_1
0x400006a	            0x7e49	                           jle 0x40000b5	      1451	ui.c	FUNCTION_37	IF_1
0x400006c	    0x488b0d000000	            mov rcx, qword [0x04000073] 	      1451	ui.c	FUNCTION_37	IF_1
0x4000073	          0x4885c9	                           test rcx, rcx	      1451	ui.c	FUNCTION_37	IF_1
0x4000076	            0x7438	                            je 0x40000b0	      1451	ui.c	FUNCTION_37	IF_1
0x4000078	    0x8b0500000000	            mov eax, dword [0x0400007e] 	      1453	ui.c	FUNCTION_37	FOR_1
0x400007e	            0x85c0	                           test eax, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4000080	            0x7e33	                           jle 0x40000b5	      1453	ui.c	FUNCTION_37	FOR_1
0x4000082	          0x4863ff	                         movsxd rdi, edi	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4000085	    0x488b15000000	            mov rdx, qword [0x0400008c] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400008c	          0x8b34ba	            mov esi, dword [rdx + rdi*4]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400008f	        0x8d5430ff	                lea edx, [rax + rsi - 1]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4000093	        0x803c1120	              cmp byte [rcx + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4000097	            0x740c	                            je 0x40000a5	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4000099	            0xf3c3	                                     ret	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400009b	        0x8d5430ff	                lea edx, [rax + rsi - 1]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400009f	        0x803c1120	              cmp byte [rcx + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40000a3	            0x7510	                           jne 0x40000b5	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x40000a5	          0x83e801	                              sub eax, 1	      1453	ui.c	FUNCTION_37	FOR_1
0x40000a8	            0x75f1	                           jne 0x400009b	      1453	ui.c	FUNCTION_37	FOR_1
0x40000aa	      0xb800000000	                              mov eax, 0	      1453	ui.c	FUNCTION_37	FOR_1
0x40000af	              0xc3	                                     ret	      1453	ui.c	FUNCTION_37	FOR_1
0x40000b0	      0xb800000000	                              mov eax, 0	      1452	ui.c	FUNCTION_37	IF_1
0x40000b5	            0xf3c3	                                     ret	      1457	ui.c	FUNCTION_37
jump_to_mouse	CALL,33:SWITCH,0:FOR,2:functions,0:IF,57:ELSE,18:DO,0:WHILE,0	536
0x40030d4	            0x4157	                                push r15	      2641	ui.c	FUNCTION_75
0x40030d6	            0x4156	                                push r14	      2641	ui.c	FUNCTION_75
0x40030d8	            0x4155	                                push r13	      2641	ui.c	FUNCTION_75
0x40030da	            0x4154	                                push r12	      2641	ui.c	FUNCTION_75
0x40030dc	              0x55	                                push rbp	      2641	ui.c	FUNCTION_75
0x40030dd	              0x53	                                push rbx	      2641	ui.c	FUNCTION_75
0x40030de	        0x4883ec38	                           sub rsp, 0x38	      2641	ui.c	FUNCTION_75
0x40030e2	            0x89fb	                            mov ebx, edi	      2641	ui.c	FUNCTION_75
0x40030e4	      0x4889742408	                mov qword [rsp + 8], rsi	      2641	ui.c	FUNCTION_75
0x40030e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2641	ui.c	FUNCTION_75
0x40030f2	      0x4889442428	             mov qword [rsp + 0x28], rax	      2641	ui.c	FUNCTION_75
0x40030f7	            0x31c0	                            xor eax, eax	      2641	ui.c	FUNCTION_75
0x40030f9	    0x8b0500000000	            mov eax, dword [0x040030ff] 	      2656	ui.c	FUNCTION_75
0x40030ff	        0x89442420	             mov dword [rsp + 0x20], eax	      2656	ui.c	FUNCTION_75
0x4003103	    0x8b0d00000000	            mov ecx, dword [0x04003109] 	      2657	ui.c	FUNCTION_75
0x4003109	        0x894c2424	             mov dword [rsp + 0x24], ecx	      2657	ui.c	FUNCTION_75
0x400310d	    0xc70500000000	               mov dword [0x04003117], 0	      2662	ui.c	FUNCTION_75
0x4003117	    0xc70500000000	               mov dword [0x04003121], 0	      2663	ui.c	FUNCTION_75
0x4003121	        0x40f6c720	                          test dil, 0x20	      2665	ui.c	FUNCTION_75	IF_1
0x4003125	            0x742e	                            je 0x4003155	      2665	ui.c	FUNCTION_75	IF_1
0x4003127	    0x48833d000000	               cmp qword [0x0400312f], 0	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x400312f	            0x740f	                            je 0x4003140	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x4003131	            0x89fe	                            mov esi, edi	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003133	          0x83e6fa	                     and esi, 0xfffffffa	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003136	    0x833d00000000	               cmp dword [0x0400313d], 0	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x400313d	           0xf44de	                          cmove ebx, esi	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4003140	    0x48c705000000	               mov qword [0x0400314b], 0	      2671	ui.c	FUNCTION_75	IF_1
0x400314b	    0xc70500000000	               mov dword [0x04003155], 0	      2672	ui.c	FUNCTION_75	IF_1
0x4003155	          0xf6c304	                              test bl, 4	      2675	ui.c	FUNCTION_75	IF_3
0x4003158	     0xf84d4000000	                            je 0x4003232	      2675	ui.c	FUNCTION_75	IF_3
0x400315e	    0x3b0500000000	            cmp eax, dword [0x04003164] 	      2676	ui.c	FUNCTION_75	IF_3
0x4003164	     0xf85c8000000	                           jne 0x4003232	      2676	ui.c	FUNCTION_75	IF_3
0x400316a	    0x3b0d00000000	            cmp ecx, dword [0x04003170] 	      2677	ui.c	FUNCTION_75	IF_3
0x4003170	     0xf85bc000000	                           jne 0x4003232	      2677	ui.c	FUNCTION_75	IF_3
0x4003176	      0xbd02000000	                              mov ebp, 2	      2683	ui.c	FUNCTION_75	IF_3	IF_4
0x400317b	    0x833d00000000	               cmp dword [0x04003182], 0	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003182	     0xf8564080000	                           jne 0x40039ec	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4003188	      0xbd04000000	                              mov ebp, 4	      2685	ui.c	FUNCTION_75	IF_3	IF_5
0x400318d	    0x833d00000000	               cmp dword [0x04003194], 0	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x4003194	     0xf8552080000	                           jne 0x40039ec	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x400319a	    0x833d00000000	               cmp dword [0x040031a1], 0	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x40031a1	            0x744b	                            je 0x40031ee	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x40031a3	      0xbd08080000	                          mov ebp, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40031a8	    0xf60500000000	           test byte [0x040031af], 0x60 	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40031af	     0xf8437080000	                            je 0x40039ec	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40031b5	          0x83e320	                           and ebx, 0x20	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40031b8	            0x89dd	                            mov ebp, ebx	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40031ba	     0xf8520080000	                           jne 0x40039e0	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40031c0	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40031c5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40031ca	      0xe800000000	                          call 0x40031cf	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40031cf	          0x4885c0	                           test rax, rax	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x40031d2	     0xf8414080000	                            je 0x40039ec	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x40031d8	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40031dc	          0x4889c7	                            mov rdi, rax	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40031df	      0xe800000000	                          call 0x40031e4	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40031e4	      0xbd08080000	                          mov ebp, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40031e9	      0xe9fe070000	                           jmp 0x40039ec	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40031ee	          0xf6c310	                           test bl, 0x10	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x40031f1	            0x740f	                            je 0x4003202	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x40031f3	      0xe800000000	                          call 0x40031f8	      2703	ui.c	FUNCTION_75	IF_3	IF_9	CALL_3
0x40031f8	      0xbf14000000	                           mov edi, 0x14	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x40031fd	      0xe800000000	                          call 0x4003202	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4003202	      0xbd01000000	                              mov ebp, 1	      2711	ui.c	FUNCTION_75	IF_3
0x4003207	    0x833d00000000	               cmp dword [0x0400320e], 0	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x400320e	     0xf84d8070000	                            je 0x40039ec	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003214	    0x488b05000000	            mov rax, qword [0x0400321b] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x400321b	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4003221	        0x3b442420	            cmp eax, dword [rsp + 0x20] 	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x4003225	      0xb808000000	                              mov eax, 8	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x400322a	           0xf4fe8	                          cmovg ebp, eax	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x400322d	      0xe9ba070000	                           jmp 0x40039ec	      2709	ui.c	FUNCTION_75	IF_3	IF_10
0x4003232	    0x890500000000	            mov dword [0x04003238], eax 	      2714	ui.c	FUNCTION_75
0x4003238	    0x890d00000000	            mov dword [0x0400323e], ecx 	      2715	ui.c	FUNCTION_75
0x400323e	          0xf6c308	                              test bl, 8	      2717	ui.c	FUNCTION_75	IF_11
0x4003241	     0xf852fffffff	                           jne 0x4003176	      2717	ui.c	FUNCTION_75	IF_11
0x4003247	            0x85c0	                           test eax, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4003249	     0xf88b1070000	                            js 0x4003a00	      2723	ui.c	FUNCTION_75	IF_12
0x400324f	          0x4863f0	                         movsxd rsi, eax	      2723	ui.c	FUNCTION_75	IF_12
0x4003252	    0x483b35000000	            cmp rsi, qword [0x04003259] 	      2723	ui.c	FUNCTION_75	IF_12
0x4003259	            0x7d40	                           jge 0x400329b	      2723	ui.c	FUNCTION_75	IF_12
0x400325b	            0x85c9	                           test ecx, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x400325d	            0x783c	                            js 0x400329b	      2723	ui.c	FUNCTION_75	IF_12
0x400325f	          0x4863f1	                         movsxd rsi, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x4003262	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x400326a	    0x483b35000000	            cmp rsi, qword [0x04003271] 	      2723	ui.c	FUNCTION_75	IF_12
0x4003271	            0x7f3a	                            jg 0x40032ad	      2723	ui.c	FUNCTION_75	IF_12
0x4003273	    0x488b3d000000	            mov rdi, qword [0x0400327a] 	      2724	ui.c	FUNCTION_75	IF_12
0x400327a	          0x4885ff	                           test rdi, rdi	      2724	ui.c	FUNCTION_75	IF_12
0x400327d	            0x7426	                            je 0x40032a5	      2724	ui.c	FUNCTION_75	IF_12
0x400327f	          0x4863f0	                         movsxd rsi, eax	      2725	ui.c	FUNCTION_75	IF_12
0x4003282	    0x4c8b05000000	              mov r8, qword [0x04003289]	      2725	ui.c	FUNCTION_75	IF_12
0x4003289	          0x4189c9	                            mov r9d, ecx	      2725	ui.c	FUNCTION_75	IF_12
0x400328c	        0x45030cb0	             add r9d, dword [r8 + rsi*4]	      2725	ui.c	FUNCTION_75	IF_12
0x4003290	      0x420fb63c0f	              movzx edi, byte [rdi + r9]	      2725	ui.c	FUNCTION_75	IF_12
0x4003295	        0x897c2414	             mov dword [rsp + 0x14], edi	      2725	ui.c	FUNCTION_75	IF_12
0x4003299	            0xeb12	                           jmp 0x40032ad	      2725	ui.c	FUNCTION_75	IF_12
0x400329b	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x40032a3	            0xeb08	                           jmp 0x40032ad	      2727	ui.c	FUNCTION_75	ELSE_1
0x40032a5	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x40032ad	    0x4c8b25000000	            mov r12, qword [0x040032b4] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x40032b4	      0x4d8b742438	            mov r14, qword [r12 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x40032b9	      0x458b7c2440	           mov r15d, dword [r12 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x40032be	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x40032c3	        0x897c2418	             mov dword [rsp + 0x18], edi	      2731	ui.c	FUNCTION_75	ELSE_1
0x40032c7	            0x89dd	                            mov ebp, ebx	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40032c9	          0x83e501	                              and ebp, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40032cc	     0xf8547020000	                           jne 0x4003519	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40032d2	            0x85c9	                           test ecx, ecx	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x40032d4	     0xf8812070000	                            js 0x40039ec	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x40032da	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x40032df	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x40032e4	      0xe800000000	                          call 0x40032e9	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x40032e9	          0x4989c5	                            mov r13, rax	      2739	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_5
0x40032ec	          0x4885c0	                           test rax, rax	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x40032ef	     0xf84f7060000	                            je 0x40039ec	      2740	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_15
0x40032f5	    0x48c705000000	               mov qword [0x04003300], 0	      2742	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003300	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003304	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003307	            0x7520	                           jne 0x4003329	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003309	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x400330d	          0x4c89ef	                            mov rdi, r13	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4003310	      0xe800000000	                          call 0x4003315	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4003315	    0xc70500000000	               mov dword [0x0400331f], 1	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x400331f	      0xbd08080000	                          mov ebp, 0x808	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003324	      0xe9c3060000	                           jmp 0x40039ec	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4003329	    0xc70500000000	               mov dword [0x04003333], 0	      2753	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003333	    0x418b95a00000	            mov edx, dword [r13 + 0xa0] 	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x400333a	            0x39d0	                            cmp eax, edx	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x400333c	            0x7c14	                            jl 0x4003352	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x400333e	            0x29d0	                            sub eax, edx	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003340	          0x83c001	                              add eax, 1	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003343	    0x890500000000	            mov dword [0x04003349], eax 	      2761	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003349	    0x4c892d000000	            mov qword [0x04003350], r13 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003350	            0xeb0a	                           jmp 0x400335c	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x4003352	    0xc70500000000	               mov dword [0x0400335c], 0	      2765	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2
0x400335c	    0x418b95ac0000	            mov edx, dword [r13 + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003363	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003367	            0x39c2	                            cmp edx, eax	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003369	            0x7f1d	                            jg 0x4003388	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400336b	            0x29d0	                            sub eax, edx	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400336d	          0x83c001	                              add eax, 1	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003370	    0x890500000000	            mov dword [0x04003376], eax 	      2768	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x4003376	    0x4c892d000000	            mov qword [0x0400337d], r13 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x400337d	    0x833d00000000	               cmp dword [0x04003384], 0	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4003384	            0x750e	                           jne 0x4003394	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4003386	            0xeb32	                           jmp 0x40033ba	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4003388	    0xc70500000000	               mov dword [0x04003392], 0	      2772	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3
0x4003392	            0xeb26	                           jmp 0x40033ba	      2772	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3
0x4003394	            0x85c0	                           test eax, eax	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4003396	            0x7422	                            je 0x40033ba	      2776	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19
0x4003398	          0x4c89ef	                            mov rdi, r13	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x400339b	      0xe800000000	                          call 0x40033a0	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40033a0	            0x85c0	                           test eax, eax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40033a2	            0x740c	                            je 0x40033b0	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40033a4	    0xc70500000000	               mov dword [0x040033ae], 0	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x40033ae	            0xeb0a	                           jmp 0x40033ba	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x40033b0	    0xc70500000000	               mov dword [0x040033ba], 0	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x40033ba	    0x833d00000000	               cmp dword [0x040033c1], 0	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033c1	     0xf8481000000	                            je 0x4003448	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033c7	    0x488b05000000	            mov rax, qword [0x040033ce] 	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033ce	        0x488b5008	                mov rdx, qword [rax + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033d2	        0x49395508	                cmp qword [r13 + 8], rdx	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033d6	            0x7561	                           jne 0x4003439	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033d8	    0x833d00000000	               cmp dword [0x040033df], 0	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033df	            0x7567	                           jne 0x4003448	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033e1	    0x833d00000000	               cmp dword [0x040033e8], 0	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033e8	            0x755e	                           jne 0x4003448	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033ea	    0x4183bd540200	              cmp dword [r13 + 0x254], 0	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033f2	            0x741a	                            je 0x400340e	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033f4	      0x4863542424	         movsxd rdx, dword [rsp + 0x24] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40033f9	    0x496385ac0000	         movsxd rax, dword [r13 + 0xac] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003400	    0x492b85c80100	            sub rax, qword [r13 + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003407	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400340a	            0x7c28	                            jl 0x4003434	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400340c	            0xeb3a	                           jmp 0x4003448	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400340e	      0x4863542424	         movsxd rdx, dword [rsp + 0x24] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003413	    0x833d00000000	               cmp dword [0x0400341a], 0	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400341a	           0xf95c1	                                setne cl	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400341d	          0x4939c5	                            cmp r13, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003420	           0xf95c0	                                setne al	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003423	             0x9c8	                             or eax, ecx	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003425	           0xfb6c0	                           movzx eax, al	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003428	    0x490385c80100	            add rax, qword [r13 + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400342f	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003432	            0x7c14	                            jl 0x4003448	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003434	          0xf6c310	                           test bl, 0x10	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003437	            0x740f	                            je 0x4003448	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4003439	      0xe800000000	                          call 0x400343e	      2802	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_8
0x400343e	      0xbf14000000	                           mov edi, 0x14	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4003443	      0xe800000000	                          call 0x4003448	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4003448	    0x833d00000000	               cmp dword [0x0400344f], 0	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400344f	            0x7427	                            je 0x4003478	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003451	    0x4c3b2d000000	            cmp r13, qword [0x04003458] 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003458	            0x741e	                            je 0x4003478	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400345a	    0xc70500000000	               mov dword [0x04003464], 0	      2810	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003464	    0x833d00000000	               cmp dword [0x0400346b], 1	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400346b	            0x19ed	                            sbb ebp, ebp	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400346d	          0x83e506	                              and ebp, 6	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003470	          0x83c502	                              add ebp, 2	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003473	      0xe974050000	                           jmp 0x40039ec	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4003478	    0x48833d000000	               cmp qword [0x04003480], 0	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003480	            0x7405	                            je 0x4003487	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003482	          0xf6c320	                           test bl, 0x20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003485	            0x740d	                            je 0x4003494	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4003487	      0xbe01000000	                              mov esi, 1	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x400348c	          0x4c89ef	                            mov rdi, r13	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x400348f	      0xe800000000	                          call 0x4003494	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4003494	    0x488b3d000000	            mov rdi, qword [0x0400349b] 	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x400349b	          0x4939fc	                            cmp r12, rdi	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x400349e	     0xf848a050000	                            je 0x4003a2e	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x40034a4	      0xe800000000	                          call 0x40034a9	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x40034a9	      0xe800000000	                          call 0x40034ae	      2836	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_12
0x40034ae	    0x833d00000000	               cmp dword [0x040034b5], 0	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40034b5	            0x7419	                            je 0x40034d0	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x40034b7	    0x4c3b25000000	            cmp r12, qword [0x040034be] 	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x40034be	      0xb802010000	                          mov eax, 0x102	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x40034c3	      0xbd02000000	                              mov ebp, 2	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x40034c8	           0xf45e8	                         cmovne ebp, eax	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x40034cb	      0xe91c050000	                           jmp 0x40039ec	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x40034d0	    0x833d00000000	               cmp dword [0x040034d7], 0	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x40034d7	            0x7419	                            je 0x40034f2	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x40034d9	    0x4c3b25000000	            cmp r12, qword [0x040034e0] 	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x40034e0	      0xb804010000	                          mov eax, 0x104	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x40034e5	      0xbd04000000	                              mov ebp, 4	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x40034ea	           0xf45e8	                         cmovne ebp, eax	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x40034ed	      0xe9fa040000	                           jmp 0x40039ec	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x40034f2	    0x488b05000000	            mov rax, qword [0x040034f9] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x40034f9	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x40034fd	        0x48895038	             mov qword [rax + 0x38], rdx	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4003501	    0x488915000000	            mov qword [0x04003508], rdx 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4003508	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x400350e	    0x890500000000	            mov dword [0x04003514], eax 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4003514	      0xe955030000	                           jmp 0x400386e	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4003519	    0x448b05000000	            mov r8d, dword [0x04003520] 	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003520	            0x85d2	                           test edx, edx	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003522	           0xf94c2	                                 sete dl	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003525	          0x4585c0	                           test r8d, r8d	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4003528	            0x743d	                            je 0x4003567	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400352a	            0x84d2	                             test dl, dl	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400352c	            0x7439	                            je 0x4003567	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400352e	    0x488b3d000000	            mov rdi, qword [0x04003535] 	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003535	      0xbd02000000	                              mov ebp, 2	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400353a	          0x4885ff	                           test rdi, rdi	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x400353d	     0xf84a9040000	                            je 0x40039ec	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003543	    0x2b879c000000	             sub eax, dword [rdi + 0x9c]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003549	    0x2b87a0000000	             sub eax, dword [rdi + 0xa0]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x400354f	          0x8d5801	                      lea ebx, [rax + 1]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003552	          0x4429c3	                            sub ebx, r8d	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003555	            0x89de	                            mov esi, ebx	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x4003557	      0xe800000000	                          call 0x400355c	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x400355c	     0x91d00000000	              or dword [0x04003562], ebx	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003562	      0xe985040000	                           jmp 0x40039ec	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x4003567	    0x8b0500000000	            mov eax, dword [0x0400356d] 	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x400356d	            0x85c0	                           test eax, eax	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x400356f	            0x743c	                            je 0x40035ad	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003571	            0x84d2	                             test dl, dl	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003573	            0x7438	                            je 0x40035ad	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003575	    0x488b3d000000	            mov rdi, qword [0x0400357c] 	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400357c	      0xbd04000000	                              mov ebp, 4	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x4003581	          0x4885ff	                           test rdi, rdi	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003584	     0xf8462040000	                            je 0x40039ec	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400358a	    0x2b8fa8000000	             sub ecx, dword [rdi + 0xa8]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003590	    0x2b8fac000000	             sub ecx, dword [rdi + 0xac]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003596	          0x8d5901	                      lea ebx, [rcx + 1]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4003599	            0x29c3	                            sub ebx, eax	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400359b	            0x89de	                            mov esi, ebx	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x400359d	      0xe800000000	                          call 0x40035a2	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x40035a2	     0x91d00000000	              or dword [0x040035a8], ebx	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x40035a8	      0xe93f040000	                           jmp 0x40039ec	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x40035ad	      0xbd08080000	                          mov ebp, 0x808	      2893	ui.c	FUNCTION_75	ELSE_9	IF_34
0x40035b2	    0x833d00000000	               cmp dword [0x040035b9], 0	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x40035b9	     0xf852d040000	                           jne 0x40039ec	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x40035bf	          0xf6c310	                           test bl, 0x10	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x40035c2	            0x740f	                            je 0x40035d3	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x40035c4	      0xe800000000	                          call 0x40035c9	      2901	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_15
0x40035c9	      0xbf14000000	                           mov edi, 0x14	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x40035ce	      0xe800000000	                          call 0x40035d3	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x40035d3	    0x833d00000000	               cmp dword [0x040035da], 0	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035da	            0x741c	                            je 0x40035f8	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035dc	      0xbd08000000	                              mov ebp, 8	      2908	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035e1	    0x488b05000000	            mov rax, qword [0x040035e8] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035e8	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035ec	    0x39889c000000	            cmp dword [rax + 0x9c], ecx 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035f2	     0xf8ff4030000	                            jg 0x40039ec	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x40035f8	    0x488b15000000	            mov rdx, qword [0x040035ff] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x40035ff	    0x8b82a8010000	           mov eax, dword [rdx + 0x1a8] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003605	     0x3829c000000	             add eax, dword [rdx + 0x9c]	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x400360b	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x400360f	            0x29c1	                            sub ecx, eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003611	            0x89c8	                            mov eax, ecx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003613	        0x894c2420	             mov dword [rsp + 0x20], ecx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4003617	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x400361d	        0x294c2424	             sub dword [rsp + 0x24], ecx	      2912	ui.c	FUNCTION_75	ELSE_10
0x4003621	            0x85c0	                           test eax, eax	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003623	     0xf8903010000	                           jns 0x400372c	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003629	      0xe9a6000000	                           jmp 0x40036d4	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400362e	    0x448baf840000	           mov r13d, dword [rdi + 0x84] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4003635	      0xe800000000	                          call 0x400363a	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400363a	          0x4139c5	                           cmp r13d, eax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400363d	            0x7d05	                           jge 0x4003644	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x400363f	          0x83c501	                              add ebp, 1	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4003642	            0xeb16	                           jmp 0x400365a	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4003644	    0x488b05000000	            mov rax, qword [0x0400364b] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400364b	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400364f	        0x4883ef01	                              sub rdi, 1	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4003653	      0xe800000000	                          call 0x4003658	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4003658	             0x1c5	                            add ebp, eax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x400365a	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x400365f	            0x750e	                           jne 0x400366f	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4003661	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4003665	            0xf7d8	                                 neg eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4003667	            0x39c5	                            cmp ebp, eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4003669	     0xf8f87000000	                            jg 0x40036f6	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x400366f	    0x488b05000000	            mov rax, qword [0x04003676] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4003676	        0x488d7078	                   lea rsi, [rax + 0x78]	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x400367a	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x400367e	      0xba00000000	                              mov edx, 0	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4003683	      0xe800000000	                          call 0x4003688	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4003688	    0x488b3d000000	            mov rdi, qword [0x0400368f] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x400368f	    0x448baf840000	           mov r13d, dword [rdi + 0x84] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4003696	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x400369a	      0xe800000000	                          call 0x400369f	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x400369f	          0x4139c5	                           cmp r13d, eax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40036a2	            0x7d10	                           jge 0x40036b4	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x40036a4	    0x488b05000000	            mov rax, qword [0x040036ab] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x40036ab	    0x838084000000	               add dword [rax + 0x84], 1	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x40036b2	            0xeb16	                           jmp 0x40036ca	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x40036b4	    0x488b05000000	            mov rax, qword [0x040036bb] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036bb	      0x4883687801	               sub qword [rax + 0x78], 1	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036c0	    0xc78084000000	               mov dword [rax + 0x84], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036ca	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036d2	            0xeb0d	                           jmp 0x40036e1	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036d4	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036dc	      0xbd00000000	                              mov ebp, 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x40036e1	    0x488b3d000000	            mov rdi, qword [0x040036e8] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40036e8	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40036ec	        0x4883fe01	                              cmp rsi, 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40036f0	     0xf8f38ffffff	                            jg 0x400362e	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x40036f6	      0xbe00000000	                              mov esi, 0	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x40036fb	    0x488b3d000000	            mov rdi, qword [0x04003702] 	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4003702	      0xe800000000	                          call 0x4003707	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4003707	    0x488b05000000	            mov rax, qword [0x0400370e] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400370e	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff8e	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003715	      0xbf0a000000	                            mov edi, 0xa	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x400371a	      0xe800000000	                          call 0x400371f	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x400371f	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4003727	      0xe942010000	                           jmp 0x400386e	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x400372c	    0x3b82a0000000	            cmp eax, dword [rdx + 0xa0] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003732	     0xf8dae000000	                           jge 0x40037e6	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003738	      0xe907010000	                           jmp 0x4003844	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400373d	    0x83b884000000	               cmp dword [rax + 0x84], 0	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4003744	            0x7e06	                           jle 0x400374c	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4003746	        0x4183c501	                             add r13d, 1	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x400374a	            0xeb08	                           jmp 0x4003754	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x400374c	      0xe800000000	                          call 0x4003751	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4003751	          0x4101c5	                           add r13d, eax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4003754	            0x85ed	                           test ebp, ebp	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4003756	            0x751d	                           jne 0x4003775	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4003758	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400375c	    0x488b15000000	            mov rdx, qword [0x04003763] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4003763	    0x2b82a0000000	             sub eax, dword [rdx + 0xa0]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4003769	          0x83c001	                              add eax, 1	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400376c	          0x4139c5	                           cmp r13d, eax	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x400376f	     0xf8f97000000	                            jg 0x400380c	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4003775	    0x488b05000000	            mov rax, qword [0x0400377c] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400377c	        0x488d5078	                   lea rdx, [rax + 0x78]	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4003780	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4003784	      0xbe00000000	                              mov esi, 0	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4003789	      0xe800000000	                          call 0x400378e	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x400378e	            0x85c0	                           test eax, eax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4003790	            0x7417	                            je 0x40037a9	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4003792	    0x488b05000000	            mov rax, qword [0x04003799] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4003799	    0x488b15000000	            mov rdx, qword [0x040037a0] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x40037a0	          0x488b00	                    mov rax, qword [rax]	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x40037a3	        0x48394278	            cmp qword [rdx + 0x78], rax 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x40037a7	            0x7463	                            je 0x400380c	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x40037a9	    0x488b2d000000	            mov rbp, qword [0x040037b0] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037b0	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037b6	            0x85c0	                           test eax, eax	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037b8	            0x7e0b	                           jle 0x40037c5	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037ba	          0x83e801	                              sub eax, 1	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037bd	    0x898584000000	            mov dword [rbp + 0x84], eax 	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037c3	            0xeb1a	                           jmp 0x40037df	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x40037c5	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037c9	        0x488d7001	                      lea rsi, [rax + 1]	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037cd	        0x48897578	            mov qword [rbp + 0x78], rsi 	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037d1	          0x4889ef	                            mov rdi, rbp	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40037d4	      0xe800000000	                          call 0x40037d9	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x40037d9	    0x898584000000	            mov dword [rbp + 0x84], eax 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037df	      0xbd00000000	                              mov ebp, 0	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037e4	            0xeb0b	                           jmp 0x40037f1	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037e6	      0xbd01000000	                              mov ebp, 1	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037eb	    0x41bd00000000	                             mov r13d, 0	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x40037f1	    0x488b05000000	            mov rax, qword [0x040037f8] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40037f8	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x40037fc	    0x488b15000000	            mov rdx, qword [0x04003803] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4003803	          0x483b3a	                    cmp rdi, qword [rdx]	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4003806	     0xf8c31ffffff	                            jl 0x400373d	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x400380c	      0xbe00000000	                              mov esi, 0	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x4003811	    0x488b3d000000	            mov rdi, qword [0x04003818] 	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x4003818	      0xe800000000	                          call 0x400381d	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x400381d	      0xbf0a000000	                            mov edi, 0xa	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x4003822	      0xe800000000	                          call 0x4003827	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x4003827	    0x488b05000000	            mov rax, qword [0x0400382e] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400382e	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff8e	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003835	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400383b	          0x83e801	                              sub eax, 1	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x400383e	        0x89442420	             mov dword [rsp + 0x20], eax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003842	            0xeb2a	                           jmp 0x400386e	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4003844	            0x85c0	                           test eax, eax	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4003846	            0x7526	                           jne 0x400386e	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4003848	    0x833d00000000	               cmp dword [0x0400384f], 0	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400384f	            0x7e1d	                           jle 0x400386e	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4003851	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4003855	        0x488b4a08	                mov rcx, qword [rdx + 8]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4003859	          0x483b01	                    cmp rax, qword [rcx]	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400385c	            0x7510	                           jne 0x400386e	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400385e	        0x483b4278	            cmp rax, qword [rdx + 0x78] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4003862	            0x750a	                           jne 0x400386e	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4003864	    0x81a2b4000000	      and dword [rdx + 0xb4], 0xffffff7f	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x400386e	    0x488b3d000000	            mov rdi, qword [0x04003875] 	      3012	ui.c	FUNCTION_75	IF_48
0x4003875	    0x83bf54020000	              cmp dword [rdi + 0x254], 0	      3012	ui.c	FUNCTION_75	IF_48
0x400387c	            0x741b	                            je 0x4003899	      3012	ui.c	FUNCTION_75	IF_48
0x400387e	      0x4863542424	         movsxd rdx, dword [rsp + 0x24] 	      3012	ui.c	FUNCTION_75	IF_48
0x4003883	    0x486387ac0000	         movsxd rax, dword [rdi + 0xac] 	      3012	ui.c	FUNCTION_75	IF_48
0x400388a	    0x482b87c80100	            sub rax, qword [rdi + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x4003891	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x4003894	           0xf9cc0	                                 setl al	      3012	ui.c	FUNCTION_75	IF_48
0x4003897	            0xeb1f	                           jmp 0x40038b8	      3012	ui.c	FUNCTION_75	IF_48
0x4003899	      0x4863542424	         movsxd rdx, dword [rsp + 0x24] 	      3012	ui.c	FUNCTION_75	IF_48
0x400389e	    0x833d00000000	               cmp dword [0x040038a5], 0	      3012	ui.c	FUNCTION_75	IF_48
0x40038a5	           0xf95c0	                                setne al	      3012	ui.c	FUNCTION_75	IF_48
0x40038a8	           0xfb6c0	                           movzx eax, al	      3012	ui.c	FUNCTION_75	IF_48
0x40038ab	    0x480387c80100	            add rax, qword [rdi + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x40038b2	          0x4839c2	                            cmp rdx, rax	      3012	ui.c	FUNCTION_75	IF_48
0x40038b5	           0xf9dc0	                                setge al	      3012	ui.c	FUNCTION_75	IF_48
0x40038b8	            0x84c0	                             test al, al	      3019	ui.c	FUNCTION_75	IF_48
0x40038ba	      0xb820000000	                           mov eax, 0x20	      3019	ui.c	FUNCTION_75	IF_48
0x40038bf	       0xf44442414	           cmove eax, dword [rsp + 0x14]	      3019	ui.c	FUNCTION_75	IF_48
0x40038c4	        0x89442414	             mov dword [rsp + 0x14], eax	      3019	ui.c	FUNCTION_75	IF_48
0x40038c8	        0x488d4f38	                   lea rcx, [rdi + 0x38]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038cc	      0x488d542424	                   lea rdx, [rsp + 0x24]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038d1	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038d6	      0xe800000000	                          call 0x40038db	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038db	            0x85c0	                           test eax, eax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038dd	            0x740a	                            je 0x40038e9	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x40038df	    0xc70500000000	               mov dword [0x040038e9], 1	      3024	ui.c	FUNCTION_75	IF_49
0x40038e9	          0xf6c302	                              test bl, 2	      3027	ui.c	FUNCTION_75	IF_50
0x40038ec	            0x7465	                            je 0x4003953	      3027	ui.c	FUNCTION_75	IF_50
0x40038ee	    0x833d00000000	               cmp dword [0x040038f5], 0	      3027	ui.c	FUNCTION_75	IF_50
0x40038f5	            0x755c	                           jne 0x4003953	      3027	ui.c	FUNCTION_75	IF_50
0x40038f7	      0xe800000000	                          call 0x40038fc	      3029	ui.c	FUNCTION_75	IF_50	CALL_30
0x40038fc	    0x4c8935000000	            mov qword [0x04003903], r14 	      3030	ui.c	FUNCTION_75	IF_50
0x4003903	    0x44893d000000	           mov dword [0x0400390a], r15d 	      3030	ui.c	FUNCTION_75	IF_50
0x400390a	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3030	ui.c	FUNCTION_75	IF_50
0x400390e	    0x890500000000	            mov dword [0x04003914], eax 	      3030	ui.c	FUNCTION_75	IF_50
0x4003914	    0xc70500000000	               mov dword [0x0400391e], 1	      3031	ui.c	FUNCTION_75	IF_50
0x400391e	    0xc70500000000	               mov dword [0x04003928], 1	      3032	ui.c	FUNCTION_75	IF_50
0x4003928	      0xbf6f000000	                           mov edi, 0x6f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x400392d	      0xe800000000	                          call 0x4003932	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4003932	      0xe800000000	                          call 0x4003937	      3035	ui.c	FUNCTION_75	IF_50	CALL_32
0x4003937	    0x833d00000000	               cmp dword [0x0400393e], 0	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400393e	            0x7413	                            je 0x4003953	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4003940	    0x833d00000000	               cmp dword [0x04003947], 0	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4003947	            0x750a	                           jne 0x4003953	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4003949	    0xc70500000000	               mov dword [0x04003953], 1	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x4003953	    0x488b05000000	            mov rax, qword [0x0400395a] 	      3040	ui.c	FUNCTION_75
0x400395a	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      3040	ui.c	FUNCTION_75
0x400395e	          0x897848	             mov dword [rax + 0x48], edi	      3040	ui.c	FUNCTION_75
0x4003961	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3041	ui.c	FUNCTION_75
0x4003968	      0xe800000000	                          call 0x400396d	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x400396d	            0x85c0	                           test eax, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x400396f	            0x751c	                           jne 0x400398d	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4003971	      0x488b442408	                mov rax, qword [rsp + 8]	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4003976	          0x4885c0	                           test rax, rax	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4003979	            0x7406	                            je 0x4003981	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x400397b	    0xc70001000000	                      mov dword [rax], 1	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4003981	    0xc70500000000	               mov dword [0x0400398b], 1	      3046	ui.c	FUNCTION_75	IF_52
0x400398b	            0xeb10	                           jmp 0x400399d	      3046	ui.c	FUNCTION_75	IF_52
0x400398d	      0x488b442408	                mov rax, qword [rsp + 8]	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4003992	          0x4885c0	                           test rax, rax	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4003995	            0x7406	                            je 0x400399d	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4003997	    0xc70000000000	                      mov dword [rax], 0	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x400399d	    0x488b05000000	            mov rax, qword [0x040039a4] 	      3052	ui.c	FUNCTION_75	IF_55
0x40039a4	      0xbd01010000	                          mov ebp, 0x101	      3054	ui.c	FUNCTION_75	IF_55
0x40039a9	          0x4c39e0	                            cmp rax, r12	      3052	ui.c	FUNCTION_75	IF_55
0x40039ac	            0x7512	                           jne 0x40039c0	      3052	ui.c	FUNCTION_75	IF_55
0x40039ae	        0x4c397038	            cmp qword [rax + 0x38], r14 	      3052	ui.c	FUNCTION_75	IF_55
0x40039b2	            0x750c	                           jne 0x40039c0	      3052	ui.c	FUNCTION_75	IF_55
0x40039b4	        0x44397840	           cmp dword [rax + 0x40], r15d 	      3054	ui.c	FUNCTION_75	IF_55
0x40039b8	      0xb801000000	                              mov eax, 1	      3054	ui.c	FUNCTION_75	IF_55
0x40039bd	           0xf44e8	                          cmove ebp, eax	      3054	ui.c	FUNCTION_75	IF_55
0x40039c0	      0x837c24142b	           cmp dword [rsp + 0x14], 0x2b 	      3057	ui.c	FUNCTION_75	IF_56
0x40039c5	            0x7508	                           jne 0x40039cf	      3057	ui.c	FUNCTION_75	IF_56
0x40039c7	    0x81cd00040000	                           or ebp, 0x400	      3058	ui.c	FUNCTION_75	IF_56
0x40039cd	            0xeb1d	                           jmp 0x40039ec	      3058	ui.c	FUNCTION_75	IF_56
0x40039cf	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039d3	            0x89e8	                            mov eax, ebp	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039d5	          0x80cc02	                                or ah, 2	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039d8	          0x83fa20	                           cmp edx, 0x20	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039db	           0xf45e8	                         cmovne ebp, eax	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039de	            0xeb0c	                           jmp 0x40039ec	      3060	ui.c	FUNCTION_75	ELSE_18	IF_57
0x40039e0	      0xbd08080000	                          mov ebp, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40039e5	            0xeb05	                           jmp 0x40039ec	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40039e7	      0xbd04000000	                              mov ebp, 4	      2851	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x40039ec	            0x89e8	                            mov eax, ebp	      3064	ui.c	FUNCTION_75
0x40039ee	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3064	ui.c	FUNCTION_75
0x40039f3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3064	ui.c	FUNCTION_75
0x40039fc	            0x7452	                            je 0x4003a50	      3064	ui.c	FUNCTION_75
0x40039fe	            0xeb4b	                           jmp 0x4003a4b	      3064	ui.c	FUNCTION_75
0x4003a00	    0x4c8b25000000	            mov r12, qword [0x04003a07] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x4003a07	      0x4d8b742438	            mov r14, qword [r12 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003a0c	      0x458b7c2440	           mov r15d, dword [r12 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003a11	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003a16	        0x897c2418	             mov dword [rsp + 0x18], edi	      2731	ui.c	FUNCTION_75	ELSE_1
0x4003a1a	            0x89dd	                            mov ebp, ebx	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003a1c	          0x83e501	                              and ebp, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003a1f	            0x74cb	                            je 0x40039ec	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4003a21	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003a29	      0xe9ebfaffff	                           jmp 0x4003519	      2727	ui.c	FUNCTION_75	ELSE_1
0x4003a2e	      0xbd02000000	                              mov ebp, 2	      2843	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4003a33	    0x833d00000000	               cmp dword [0x04003a3a], 0	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4003a3a	            0x75b0	                           jne 0x40039ec	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4003a3c	    0x833d00000000	               cmp dword [0x04003a43], 0	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4003a43	     0xf84a9faffff	                            je 0x40034f2	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4003a49	            0xeb9c	                           jmp 0x40039e7	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4003a4b	      0xe800000000	                          call 0x4003a50	      3064	ui.c	FUNCTION_75
0x4003a50	        0x4883c438	                           add rsp, 0x38	      3064	ui.c	FUNCTION_75
0x4003a54	              0x5b	                                 pop rbx	      3064	ui.c	FUNCTION_75
0x4003a55	              0x5d	                                 pop rbp	      3064	ui.c	FUNCTION_75
0x4003a56	            0x415c	                                 pop r12	      3064	ui.c	FUNCTION_75
0x4003a58	            0x415d	                                 pop r13	      3064	ui.c	FUNCTION_75
0x4003a5a	            0x415e	                                 pop r14	      3064	ui.c	FUNCTION_75
0x4003a5c	            0x415f	                                 pop r15	      3064	ui.c	FUNCTION_75
0x4003a5e	              0xc3	                                     ret	      3064	ui.c	FUNCTION_75
ui_write	CALL,5:SWITCH,0:FOR,0:functions,0:IF,6:ELSE,0:DO,0:WHILE,0	43
0x4000b91	              0x55	                                push rbp	        29	ui.c	FUNCTION_1
0x4000b92	              0x53	                                push rbx	        29	ui.c	FUNCTION_1
0x4000b93	        0x4883ec18	                           sub rsp, 0x18	        29	ui.c	FUNCTION_1
0x4000b97	          0x4889fb	                            mov rbx, rdi	        29	ui.c	FUNCTION_1
0x4000b9a	        0x8974240c	              mov dword [rsp + 0xc], esi	        29	ui.c	FUNCTION_1
0x4000b9e	    0x833d00000000	               cmp dword [0x04000ba5], 0	        31	ui.c	FUNCTION_1	IF_1
0x4000ba5	            0x7430	                            je 0x4000bd7	        31	ui.c	FUNCTION_1	IF_1
0x4000ba7	    0x833d00000000	               cmp dword [0x04000bae], 0	        31	ui.c	FUNCTION_1	IF_1
0x4000bae	            0x7527	                           jne 0x4000bd7	        31	ui.c	FUNCTION_1	IF_1
0x4000bb0	    0x833d00000000	               cmp dword [0x04000bb7], 0	        31	ui.c	FUNCTION_1	IF_1
0x4000bb7	            0x751e	                           jne 0x4000bd7	        31	ui.c	FUNCTION_1	IF_1
0x4000bb9	      0xe800000000	                          call 0x4000bbe	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4000bbe	    0x488b3d000000	            mov rdi, qword [0x04000bc5] 	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000bc5	          0x4885ff	                           test rdi, rdi	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000bc8	            0x7467	                            je 0x4000c31	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4000bca	    0x8b3500000000	            mov esi, dword [0x04000bd0] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000bd0	      0xe800000000	                          call 0x4000bd5	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000bd5	            0xeb5a	                           jmp 0x4000c31	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x4000bd7	    0x833d00000000	               cmp dword [0x04000bde], 0	        41	ui.c	FUNCTION_1	IF_3
0x4000bde	            0x740a	                            je 0x4000bea	        41	ui.c	FUNCTION_1	IF_3
0x4000be0	    0x48833d000000	               cmp qword [0x04000be8], 0	        41	ui.c	FUNCTION_1	IF_3
0x4000be8	            0x7447	                            je 0x4000c31	        41	ui.c	FUNCTION_1	IF_3
0x4000bea	      0xbd00000000	                              mov ebp, 0	        44	ui.c	FUNCTION_1	IF_3
0x4000bef	    0x833d00000000	               cmp dword [0x04000bf6], 0	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000bf6	            0x741c	                            je 0x4000c14	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x4000bf8	      0x488d54240c	                    lea rdx, [rsp + 0xc]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000bfd	          0x4889de	                            mov rsi, rbx	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000c00	      0xbf00000000	                              mov edi, 0	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000c05	      0xe800000000	                          call 0x4000c0a	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000c0a	          0x4889c5	                            mov rbp, rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4000c0d	          0x4885c0	                           test rax, rax	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000c10	        0x480f45d8	                         cmovne rbx, rax	        51	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4000c14	        0x8b74240c	              mov esi, dword [rsp + 0xc]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000c18	          0x4889df	                            mov rdi, rbx	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000c1b	      0xe800000000	                          call 0x4000c20	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x4000c20	    0x833d00000000	               cmp dword [0x04000c27], 0	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000c27	            0x7408	                            je 0x4000c31	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x4000c29	          0x4889ef	                            mov rdi, rbp	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000c2c	      0xe800000000	                          call 0x4000c31	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4000c31	        0x4883c418	                           add rsp, 0x18	        63	ui.c	FUNCTION_1
0x4000c35	              0x5b	                                 pop rbx	        63	ui.c	FUNCTION_1
0x4000c36	              0x5d	                                 pop rbp	        63	ui.c	FUNCTION_1
0x4000c37	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
clip_modeless	CALL,5:SWITCH,0:FOR,0:functions,0:IF,5:ELSE,3:DO,0:WHILE,0	58
0x400283f	              0x55	                                push rbp	       734	ui.c	FUNCTION_25
0x4002840	              0x53	                                push rbx	       734	ui.c	FUNCTION_25
0x4002841	        0x4883ec08	                              sub rsp, 8	       734	ui.c	FUNCTION_25
0x4002845	            0x89fd	                            mov ebp, edi	       734	ui.c	FUNCTION_25
0x4002847	     0xfb705000000	           movzx eax, word [0x0400284e] 	       737	ui.c	FUNCTION_25
0x400284e	        0x66a9fdff	                         test ax, 0xfffd	       740	ui.c	FUNCTION_25
0x4002852	            0x750e	                           jne 0x4002862	       740	ui.c	FUNCTION_25
0x4002854	      0xbb01000000	                              mov ebx, 1	       740	ui.c	FUNCTION_25
0x4002859	    0xf60500000000	           test byte [0x04002860], 0x20 	       739	ui.c	FUNCTION_25
0x4002860	            0x7517	                           jne 0x4002879	       739	ui.c	FUNCTION_25
0x4002862	      0xbb00000000	                              mov ebx, 0	       740	ui.c	FUNCTION_25
0x4002867	        0x6683f801	                               cmp ax, 1	       740	ui.c	FUNCTION_25
0x400286b	            0x750c	                           jne 0x4002879	       740	ui.c	FUNCTION_25
0x400286d	    0x8b1d00000000	            mov ebx, dword [0x04002873] 	       740	ui.c	FUNCTION_25
0x4002873	          0xc1eb06	                              shr ebx, 6	       740	ui.c	FUNCTION_25
0x4002876	          0x83e301	                              and ebx, 1	       740	ui.c	FUNCTION_25
0x4002879	            0x85f6	                           test esi, esi	       742	ui.c	FUNCTION_25	IF_1
0x400287b	            0x743c	                            je 0x40028b9	       742	ui.c	FUNCTION_25	IF_1
0x400287d	          0x83fd02	                              cmp ebp, 2	       742	ui.c	FUNCTION_25	IF_1
0x4002880	            0x7537	                           jne 0x40028b9	       742	ui.c	FUNCTION_25	IF_1
0x4002882	    0x66833d000000	                cmp word [0x0400288a], 0	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x400288a	            0x7516	                           jne 0x40028a2	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x400288c	      0xba00000000	                              mov edx, 0	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002891	    0x8b3500000000	            mov esi, dword [0x04002897] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x4002897	    0x8b3d00000000	            mov edi, dword [0x0400289d] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x400289d	      0xe800000000	                          call 0x40028a2	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x40028a2	            0x89d9	                            mov ecx, ebx	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028a4	    0x8b1500000000	            mov edx, dword [0x040028aa] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028aa	    0x8b3500000000	            mov esi, dword [0x040028b0] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028b0	            0x89ef	                            mov edi, ebp	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028b2	      0xe800000000	                          call 0x40028b7	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028b7	            0xeb59	                           jmp 0x4002912	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40028b9	            0x85f6	                           test esi, esi	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028bb	            0x7415	                            je 0x40028d2	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028bd	            0x89da	                            mov edx, ebx	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028bf	    0x8b3500000000	            mov esi, dword [0x040028c5] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028c5	    0x8b3d00000000	            mov edi, dword [0x040028cb] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028cb	      0xe800000000	                          call 0x40028d0	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028d0	            0xeb40	                           jmp 0x4002912	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40028d2	            0x85d2	                           test edx, edx	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x40028d4	            0x7421	                            je 0x40028f7	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x40028d6	    0x66833d000000	                cmp word [0x040028de], 0	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x40028de	            0x7432	                            je 0x4002912	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x40028e0	            0x89d9	                            mov ecx, ebx	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028e2	    0x8b1500000000	            mov edx, dword [0x040028e8] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028e8	    0x8b3500000000	            mov esi, dword [0x040028ee] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028ee	            0x89ef	                            mov edi, ebp	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028f0	      0xe800000000	                          call 0x40028f5	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028f5	            0xeb1b	                           jmp 0x4002912	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x40028f7	      0xb900000000	                              mov ecx, 0	       760	ui.c	FUNCTION_25	CALL_5
0x40028fc	    0x8b1500000000	            mov edx, dword [0x04002902] 	       760	ui.c	FUNCTION_25	CALL_5
0x4002902	    0x8b3500000000	            mov esi, dword [0x04002908] 	       760	ui.c	FUNCTION_25	CALL_5
0x4002908	      0xbf03000000	                              mov edi, 3	       760	ui.c	FUNCTION_25	CALL_5
0x400290d	      0xe800000000	                          call 0x4002912	       760	ui.c	FUNCTION_25	CALL_5
0x4002912	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x4002916	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x4002917	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x4002918	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
mouse_comp_pos	CALL,9:SWITCH,0:FOR,0:functions,0:IF,9:ELSE,2:DO,0:WHILE,1	118
0x4002e51	            0x4157	                                push r15	      3077	ui.c	FUNCTION_76
0x4002e53	            0x4156	                                push r14	      3077	ui.c	FUNCTION_76
0x4002e55	            0x4155	                                push r13	      3077	ui.c	FUNCTION_76
0x4002e57	            0x4154	                                push r12	      3077	ui.c	FUNCTION_76
0x4002e59	              0x55	                                push rbp	      3077	ui.c	FUNCTION_76
0x4002e5a	              0x53	                                push rbx	      3077	ui.c	FUNCTION_76
0x4002e5b	        0x4883ec28	                           sub rsp, 0x28	      3077	ui.c	FUNCTION_76
0x4002e5f	          0x4889fb	                            mov rbx, rdi	      3077	ui.c	FUNCTION_76
0x4002e62	          0x4989f6	                            mov r14, rsi	      3077	ui.c	FUNCTION_76
0x4002e65	          0x4989d7	                            mov r15, rdx	      3077	ui.c	FUNCTION_76
0x4002e68	      0x48894c2408	                mov qword [rsp + 8], rcx	      3077	ui.c	FUNCTION_76
0x4002e6d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3077	ui.c	FUNCTION_76
0x4002e76	      0x4889442418	             mov qword [rsp + 0x18], rax	      3077	ui.c	FUNCTION_76
0x4002e7b	            0x31c0	                            xor eax, eax	      3077	ui.c	FUNCTION_76
0x4002e7d	          0x448b2a	                   mov r13d, dword [rdx]	      3078	ui.c	FUNCTION_76
0x4002e80	            0x8b2e	                    mov ebp, dword [rsi]	      3079	ui.c	FUNCTION_76
0x4002e82	    0x83bf54020000	              cmp dword [rdi + 0x254], 0	      3086	ui.c	FUNCTION_76	IF_1
0x4002e89	            0x740a	                            je 0x4002e95	      3086	ui.c	FUNCTION_76	IF_1
0x4002e8b	          0x41f7d5	                                not r13d	      3087	ui.c	FUNCTION_76	IF_1
0x4002e8e	    0x4403afac0000	            add r13d, dword [rdi + 0xac]	      3087	ui.c	FUNCTION_76	IF_1
0x4002e95	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      3090	ui.c	FUNCTION_76
0x4002e99	      0x4889442410	             mov qword [rsp + 0x10], rax	      3090	ui.c	FUNCTION_76
0x4002e9e	            0x85ed	                           test ebp, ebp	      3092	ui.c	FUNCTION_76	WHILE_1
0x4002ea0	     0xf8e24010000	                           jle 0x4002fca	      3092	ui.c	FUNCTION_76	WHILE_1
0x4002ea6	    0x83bbc0010000	              cmp dword [rbx + 0x1c0], 0	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4002ead	            0x745b	                            je 0x4002f0a	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x4002eaf	    0x41b900000000	                              mov r9d, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002eb5	    0x41b801000000	                              mov r8d, 1	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ebb	      0xb900000000	                              mov ecx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ec0	      0xba00000000	                              mov edx, 0	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ec5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002eca	          0x4889df	                            mov rdi, rbx	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ecd	      0xe800000000	                          call 0x4002ed2	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ed2	            0x85c0	                           test eax, eax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ed4	            0x7534	                           jne 0x4002f0a	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4002ed6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4002edb	        0x48397378	            cmp qword [rbx + 0x78], rsi 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4002edf	            0x7508	                           jne 0x4002ee9	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4002ee1	    0x2bab84000000	             sub ebp, dword [rbx + 0x84]	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4002ee7	            0xeb0a	                           jmp 0x4002ef3	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4002ee9	          0x4889df	                            mov rdi, rbx	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4002eec	      0xe800000000	                          call 0x4002ef1	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4002ef1	            0x29c5	                            sub ebp, eax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4002ef3	      0xba01000000	                              mov edx, 1	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002ef8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002efd	          0x4889df	                            mov rdi, rbx	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002f00	      0xe800000000	                          call 0x4002f05	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002f05	          0x4189c4	                           mov r12d, eax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002f08	            0xeb15	                           jmp 0x4002f1f	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4002f0a	      0xba01000000	                              mov edx, 1	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4002f0f	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4002f14	          0x4889df	                            mov rdi, rbx	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4002f17	      0xe800000000	                          call 0x4002f1c	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4002f1c	          0x4189c4	                           mov r12d, eax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x4002f1f	          0x4439e5	                           cmp ebp, r12d	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4002f22	     0xf8ca2000000	                            jl 0x4002fca	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4002f28	    0x41b900000000	                              mov r9d, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f2e	    0x41b801000000	                              mov r8d, 1	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f34	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f39	      0xba00000000	                              mov edx, 0	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f3e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f43	          0x4889df	                            mov rdi, rbx	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f46	      0xe800000000	                          call 0x4002f4b	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x4002f4b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4002f50	        0x488b5308	                mov rdx, qword [rbx + 8]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4002f54	          0x483902	                    cmp qword [rdx], rax	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4002f57	            0x7416	                            je 0x4002f6f	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4002f59	          0x4429e5	                           sub ebp, r12d	      3121	ui.c	FUNCTION_76	WHILE_1
0x4002f5c	        0x4883c001	                              add rax, 1	      3122	ui.c	FUNCTION_76	WHILE_1
0x4002f60	      0x4889442410	             mov qword [rsp + 0x10], rax	      3122	ui.c	FUNCTION_76	WHILE_1
0x4002f65	            0x85ed	                           test ebp, ebp	      3092	ui.c	FUNCTION_76	WHILE_1
0x4002f67	     0xf8f39ffffff	                            jg 0x4002ea6	      3092	ui.c	FUNCTION_76	WHILE_1
0x4002f6d	            0xeb5b	                           jmp 0x4002fca	      3092	ui.c	FUNCTION_76	WHILE_1
0x4002f6f	    0x41bc01000000	                             mov r12d, 1	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4002f75	    0x83bb94020000	              cmp dword [rbx + 0x294], 0	      3136	ui.c	FUNCTION_76	IF_8
0x4002f7c	            0x7507	                           jne 0x4002f85	      3136	ui.c	FUNCTION_76	IF_8
0x4002f7e	    0x4403ab940000	            add r13d, dword [rbx + 0x94]	      3137	ui.c	FUNCTION_76	IF_8
0x4002f85	          0x4889df	                            mov rdi, rbx	      3140	ui.c	FUNCTION_76	CALL_8
0x4002f88	      0xe800000000	                          call 0x4002f8d	      3140	ui.c	FUNCTION_76	CALL_8
0x4002f8d	          0x4129c5	                           sub r13d, eax	      3141	ui.c	FUNCTION_76	IF_9
0x4002f90	            0x7910	                           jns 0x4002fa2	      3141	ui.c	FUNCTION_76	IF_9
0x4002f92	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4002f97	      0xe800000000	                          call 0x4002f9c	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4002f9c	    0x41bd00000000	                             mov r13d, 0	      3146	ui.c	FUNCTION_76	IF_9
0x4002fa2	          0x45892f	                   mov dword [r15], r13d	      3149	ui.c	FUNCTION_76
0x4002fa5	          0x41892e	                    mov dword [r14], ebp	      3150	ui.c	FUNCTION_76
0x4002fa8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3151	ui.c	FUNCTION_76
0x4002fad	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3151	ui.c	FUNCTION_76
0x4002fb2	          0x488901	                    mov qword [rcx], rax	      3151	ui.c	FUNCTION_76
0x4002fb5	          0x4489e0	                           mov eax, r12d	      3153	ui.c	FUNCTION_76
0x4002fb8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3153	ui.c	FUNCTION_76
0x4002fbd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3153	ui.c	FUNCTION_76
0x4002fc6	            0x7445	                            je 0x400300d	      3153	ui.c	FUNCTION_76
0x4002fc8	            0xeb3e	                           jmp 0x4003008	      3153	ui.c	FUNCTION_76
0x4002fca	          0x4889df	                            mov rdi, rbx	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fcd	      0xe800000000	                          call 0x4002fd2	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fd2	          0x4189c4	                           mov r12d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fd5	          0x4889df	                            mov rdi, rbx	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fd8	      0xe800000000	                          call 0x4002fdd	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fdd	          0x4129c4	                           sub r12d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fe0	          0x4539e5	                          cmp r13d, r12d	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fe3	        0x450f4cec	                        cmovl r13d, r12d	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4002fe7	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      3131	ui.c	FUNCTION_76	IF_6
0x4002fed	          0x4429e0	                           sub eax, r12d	      3131	ui.c	FUNCTION_76	IF_6
0x4002ff0	           0xfafc5	                           imul eax, ebp	      3131	ui.c	FUNCTION_76	IF_6
0x4002ff3	          0x4101c5	                           add r13d, eax	      3131	ui.c	FUNCTION_76	IF_6
0x4002ff6	    0x4403ab980000	            add r13d, dword [rbx + 0x98]	      3133	ui.c	FUNCTION_76	IF_6
0x4002ffd	    0x41bc00000000	                             mov r12d, 0	      3133	ui.c	FUNCTION_76	IF_6
0x4003003	      0xe96dffffff	                           jmp 0x4002f75	      3133	ui.c	FUNCTION_76	IF_6
0x4003008	      0xe800000000	                          call 0x400300d	      3153	ui.c	FUNCTION_76
0x400300d	        0x4883c428	                           add rsp, 0x28	      3153	ui.c	FUNCTION_76
0x4003011	              0x5b	                                 pop rbx	      3153	ui.c	FUNCTION_76
0x4003012	              0x5d	                                 pop rbp	      3153	ui.c	FUNCTION_76
0x4003013	            0x415c	                                 pop r12	      3153	ui.c	FUNCTION_76
0x4003015	            0x415d	                                 pop r13	      3153	ui.c	FUNCTION_76
0x4003017	            0x415e	                                 pop r14	      3153	ui.c	FUNCTION_76
0x4003019	            0x415f	                                 pop r15	      3153	ui.c	FUNCTION_76
0x400301b	              0xc3	                                     ret	      3153	ui.c	FUNCTION_76
clip_get_word_boundaries	CALL,3:SWITCH,0:FOR,2:functions,0:IF,7:ELSE,3:DO,0:WHILE,0	111
0x40000b9	    0x393500000000	            cmp dword [0x040000bf], esi 	      1397	ui.c	FUNCTION_36	IF_1
0x40000bf	     0xf8e70010000	                           jle 0x4000235	      1397	ui.c	FUNCTION_36	IF_1
0x40000c5	            0x4157	                                push r15	      1389	ui.c	FUNCTION_36
0x40000c7	            0x4156	                                push r14	      1389	ui.c	FUNCTION_36
0x40000c9	            0x4155	                                push r13	      1389	ui.c	FUNCTION_36
0x40000cb	            0x4154	                                push r12	      1389	ui.c	FUNCTION_36
0x40000cd	              0x55	                                push rbp	      1389	ui.c	FUNCTION_36
0x40000ce	              0x53	                                push rbx	      1389	ui.c	FUNCTION_36
0x40000cf	        0x4883ec08	                              sub rsp, 8	      1389	ui.c	FUNCTION_36
0x40000d3	          0x4989fe	                            mov r14, rdi	      1389	ui.c	FUNCTION_36
0x40000d6	            0x89d3	                            mov ebx, edx	      1389	ui.c	FUNCTION_36
0x40000d8	    0x391500000000	            cmp dword [0x040000de], edx 	      1397	ui.c	FUNCTION_36	IF_1
0x40000de	     0xf8e43010000	                           jle 0x4000227	      1397	ui.c	FUNCTION_36	IF_1
0x40000e4	    0x488b05000000	            mov rax, qword [0x040000eb] 	      1397	ui.c	FUNCTION_36	IF_1
0x40000eb	          0x4885c0	                           test rax, rax	      1397	ui.c	FUNCTION_36	IF_1
0x40000ee	     0xf8433010000	                            je 0x4000227	      1397	ui.c	FUNCTION_36	IF_1
0x40000f4	          0x4863f6	                         movsxd rsi, esi	      1400	ui.c	FUNCTION_36
0x40000f7	    0x488b15000000	            mov rdx, qword [0x040000fe] 	      1400	ui.c	FUNCTION_36
0x40000fe	        0x448b24b2	           mov r12d, dword [rdx + rsi*4]	      1400	ui.c	FUNCTION_36
0x4000102	          0x4901c4	                            add r12, rax	      1400	ui.c	FUNCTION_36
0x4000105	    0x833d00000000	               cmp dword [0x0400010c], 0	      1403	ui.c	FUNCTION_36	IF_2
0x400010c	            0x7412	                            je 0x4000120	      1403	ui.c	FUNCTION_36	IF_2
0x400010e	          0x4863f3	                         movsxd rsi, ebx	      1404	ui.c	FUNCTION_36	CALL_1
0x4000111	          0x4c01e6	                            add rsi, r12	      1404	ui.c	FUNCTION_36	CALL_1
0x4000114	          0x4c89e7	                            mov rdi, r12	      1404	ui.c	FUNCTION_36	CALL_1
0x4000117	      0xe800000000	                          call 0x400011c	      1404	ui.c	FUNCTION_36	CALL_1
0x400011c	            0x29c3	                            sub ebx, eax	      1404	ui.c	FUNCTION_36	CALL_1
0x400011e	            0xeb14	                           jmp 0x4000134	      1404	ui.c	FUNCTION_36	CALL_1
0x4000120	    0x833d00000000	               cmp dword [0x04000127], 0	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x4000127	            0x740b	                            je 0x4000134	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x4000129	          0x4863c3	                         movsxd rax, ebx	      1405	ui.c	FUNCTION_36	ELSE_1	IF_3
0x400012c	      0x41803c0401	                 cmp byte [r12 + rax], 1	      1406	ui.c	FUNCTION_36	ELSE_1	IF_3
0x4000131	          0x83db00	                              sbb ebx, 0	      1406	ui.c	FUNCTION_36	ELSE_1	IF_3
0x4000134	          0x4863c3	                         movsxd rax, ebx	      1408	ui.c	FUNCTION_36
0x4000137	      0x410fb63c04	             movzx edi, byte [r12 + rax]	      1408	ui.c	FUNCTION_36
0x400013c	    0x41bd20000000	                          mov r13d, 0x20	      1408	ui.c	FUNCTION_36
0x4000142	        0x4080ff20	                           cmp dil, 0x20	      1408	ui.c	FUNCTION_36
0x4000146	            0x760c	                           jbe 0x4000154	      1408	ui.c	FUNCTION_36
0x4000148	        0x400fb6ff	                          movzx edi, dil	      1408	ui.c	FUNCTION_36
0x400014c	      0xe800000000	                          call 0x4000151	      1408	ui.c	FUNCTION_36
0x4000151	          0x4189c5	                           mov r13d, eax	      1408	ui.c	FUNCTION_36
0x4000154	            0x85db	                           test ebx, ebx	      1411	ui.c	FUNCTION_36	FOR_1
0x4000156	            0x7e60	                           jle 0x40001b8	      1411	ui.c	FUNCTION_36	FOR_1
0x4000158	            0x89dd	                            mov ebp, ebx	      1411	ui.c	FUNCTION_36	FOR_1
0x400015a	    0x833d00000000	               cmp dword [0x04000161], 0	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x4000161	            0x7418	                            je 0x400017b	      1413	ui.c	FUNCTION_36	FOR_1	IF_4
0x4000163	          0x4863c5	                         movsxd rax, ebp	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4000166	      0x498d7404ff	                lea rsi, [r12 + rax - 1]	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x400016b	          0x4c89e7	                            mov rdi, r12	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x400016e	      0xe800000000	                          call 0x4000173	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4000173	            0x85c0	                           test eax, eax	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4000175	            0x7e04	                           jle 0x400017b	      1414	ui.c	FUNCTION_36	FOR_1	IF_4	CALL_2
0x4000177	            0x29c5	                            sub ebp, eax	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x4000179	            0xeb34	                           jmp 0x40001af	      1415	ui.c	FUNCTION_36	FOR_1	IF_4
0x400017b	          0x4863c5	                         movsxd rax, ebp	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400017e	      0x4d8d7c04ff	                lea r15, [r12 + rax - 1]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4000183	        0x410fb63f	                   movzx edi, byte [r15]	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4000187	      0xb820000000	                           mov eax, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400018c	        0x4080ff20	                           cmp dil, 0x20	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4000190	            0x7609	                           jbe 0x400019b	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4000192	        0x400fb6ff	                          movzx edi, dil	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x4000196	      0xe800000000	                          call 0x400019b	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400019b	          0x4139c5	                           cmp r13d, eax	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x400019e	            0x740f	                            je 0x40001af	      1418	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40001a0	    0x833d00000000	               cmp dword [0x040001a7], 0	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40001a7	            0x7411	                            je 0x40001ba	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40001a9	        0x41803f00	                       cmp byte [r15], 0	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40001ad	            0x750b	                           jne 0x40001ba	      1420	ui.c	FUNCTION_36	ELSE_2	IF_5
0x40001af	          0x83ed01	                              sub ebp, 1	      1411	ui.c	FUNCTION_36	FOR_1
0x40001b2	            0x85ed	                           test ebp, ebp	      1411	ui.c	FUNCTION_36	FOR_1
0x40001b4	            0x7fa4	                            jg 0x400015a	      1411	ui.c	FUNCTION_36	FOR_1
0x40001b6	            0xeb02	                           jmp 0x40001ba	      1411	ui.c	FUNCTION_36	FOR_1
0x40001b8	            0x89dd	                            mov ebp, ebx	      1410	ui.c	FUNCTION_36
0x40001ba	      0x6641896e32	               mov word [r14 + 0x32], bp	      1424	ui.c	FUNCTION_36
0x40001bf	    0x3b1d00000000	            cmp ebx, dword [0x040001c5] 	      1427	ui.c	FUNCTION_36	FOR_2
0x40001c5	            0x7d5b	                           jge 0x4000222	      1427	ui.c	FUNCTION_36	FOR_2
0x40001c7	    0x833d00000000	               cmp dword [0x040001ce], 0	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001ce	            0x7415	                            je 0x40001e5	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001d0	          0x4863fb	                         movsxd rdi, ebx	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001d3	          0x4c01e7	                            add rdi, r12	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001d6	      0xe800000000	                          call 0x40001db	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001db	          0x83f802	                              cmp eax, 2	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001de	            0x7505	                           jne 0x40001e5	      1429	ui.c	FUNCTION_36	FOR_2	IF_6	CALL_3
0x40001e0	          0x83c301	                              add ebx, 1	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x40001e3	            0xeb32	                           jmp 0x4000217	      1430	ui.c	FUNCTION_36	FOR_2	IF_6
0x40001e5	          0x4863eb	                         movsxd rbp, ebx	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001e8	          0x4c01e5	                            add rbp, r12	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001eb	         0xfb67d00	                   movzx edi, byte [rbp]	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001ef	      0xb820000000	                           mov eax, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001f4	        0x4080ff20	                           cmp dil, 0x20	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001f8	            0x7609	                           jbe 0x4000203	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001fa	        0x400fb6ff	                          movzx edi, dil	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x40001fe	      0xe800000000	                          call 0x4000203	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000203	          0x4139c5	                           cmp r13d, eax	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000206	            0x740f	                            je 0x4000217	      1433	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000208	    0x833d00000000	               cmp dword [0x0400020f], 0	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x400020f	            0x7411	                            je 0x4000222	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000211	        0x807d0000	                       cmp byte [rbp], 0	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000215	            0x750b	                           jne 0x4000222	      1435	ui.c	FUNCTION_36	ELSE_3	IF_7
0x4000217	          0x83c301	                              add ebx, 1	      1427	ui.c	FUNCTION_36	FOR_2
0x400021a	    0x391d00000000	            cmp dword [0x04000220], ebx 	      1427	ui.c	FUNCTION_36	FOR_2
0x4000220	            0x7fa5	                            jg 0x40001c7	      1427	ui.c	FUNCTION_36	FOR_2
0x4000222	      0x6641895e34	               mov word [r14 + 0x34], bx	      1439	ui.c	FUNCTION_36
0x4000227	        0x4883c408	                              add rsp, 8	      1440	ui.c	FUNCTION_36
0x400022b	              0x5b	                                 pop rbx	      1440	ui.c	FUNCTION_36
0x400022c	              0x5d	                                 pop rbp	      1440	ui.c	FUNCTION_36
0x400022d	            0x415c	                                 pop r12	      1440	ui.c	FUNCTION_36
0x400022f	            0x415d	                                 pop r13	      1440	ui.c	FUNCTION_36
0x4000231	            0x415e	                                 pop r14	      1440	ui.c	FUNCTION_36
0x4000233	            0x415f	                                 pop r15	      1440	ui.c	FUNCTION_36
0x4000235	            0xf3c3	                                     ret	      1440	ui.c	FUNCTION_36
clip_isautosel_plus	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	12
0x4001039	    0x8b0500000000	            mov eax, dword [0x0400103f] 	       705	ui.c	FUNCTION_24	CALL_1
0x400103f	    0x833d00000000	               cmp dword [0x04001046], 0	       705	ui.c	FUNCTION_24	CALL_1
0x4001046	            0x7422	                            je 0x400106a	       705	ui.c	FUNCTION_24	CALL_1
0x4001048	        0x4883ec08	                              sub rsp, 8	       702	ui.c	FUNCTION_24
0x400104c	      0xbe50000000	                           mov esi, 0x50	       705	ui.c	FUNCTION_24	CALL_1
0x4001051	    0x488b3d000000	            mov rdi, qword [0x04001058] 	       705	ui.c	FUNCTION_24	CALL_1
0x4001058	      0xe800000000	                          call 0x400105d	       705	ui.c	FUNCTION_24	CALL_1
0x400105d	          0x4885c0	                           test rax, rax	       705	ui.c	FUNCTION_24	CALL_1
0x4001060	           0xf95c0	                                setne al	       705	ui.c	FUNCTION_24	CALL_1
0x4001063	           0xfb6c0	                           movzx eax, al	       705	ui.c	FUNCTION_24	CALL_1
0x4001066	        0x4883c408	                              add rsp, 8	       708	ui.c	FUNCTION_24
0x400106a	            0xf3c3	                                     ret	       708	ui.c	FUNCTION_24
ui_get_shellsize	CALL,5:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,1:DO,0:WHILE,0	20
0x4000e3e	              0x53	                                push rbx	       337	ui.c	FUNCTION_9
0x4000e3f	    0x833d00000000	               cmp dword [0x04000e46], 0	       341	ui.c	FUNCTION_9	IF_1
0x4000e46	            0x7409	                            je 0x4000e51	       341	ui.c	FUNCTION_9	IF_1
0x4000e48	      0xe800000000	                          call 0x4000e4d	       342	ui.c	FUNCTION_9	CALL_1
0x4000e4d	            0x89c3	                            mov ebx, eax	       342	ui.c	FUNCTION_9	CALL_1
0x4000e4f	            0xeb07	                           jmp 0x4000e58	       342	ui.c	FUNCTION_9	CALL_1
0x4000e51	      0xe800000000	                          call 0x4000e56	       345	ui.c	FUNCTION_9	CALL_2
0x4000e56	            0x89c3	                            mov ebx, eax	       345	ui.c	FUNCTION_9	CALL_2
0x4000e58	      0xe800000000	                          call 0x4000e5d	       347	ui.c	FUNCTION_9	CALL_3
0x4000e5d	          0x83fb01	                              cmp ebx, 1	       350	ui.c	FUNCTION_9	IF_2
0x4000e60	            0x7522	                           jne 0x4000e84	       350	ui.c	FUNCTION_9	IF_2
0x4000e62	    0x488b35000000	            mov rsi, qword [0x04000e69] 	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4000e69	      0xbf00000000	                              mov edi, 0	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4000e6e	      0xe800000000	                          call 0x4000e73	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4000e73	    0x488b35000000	            mov rsi, qword [0x04000e7a] 	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4000e7a	      0xbf00000000	                              mov edi, 0	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4000e7f	      0xe800000000	                          call 0x4000e84	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4000e84	            0x89d8	                            mov eax, ebx	       356	ui.c	FUNCTION_9
0x4000e86	              0x5b	                                 pop rbx	       356	ui.c	FUNCTION_9
0x4000e87	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
clip_x11_request_selection_cb	CALL,12:SWITCH,0:FOR,0:functions,0:IF,10:ELSE,4:DO,0:WHILE,0	162
0x40008ba	            0x4157	                                push r15	      2137	ui.c	FUNCTION_65
0x40008bc	            0x4156	                                push r14	      2137	ui.c	FUNCTION_65
0x40008be	            0x4155	                                push r13	      2137	ui.c	FUNCTION_65
0x40008c0	            0x4154	                                push r12	      2137	ui.c	FUNCTION_65
0x40008c2	              0x55	                                push rbp	      2137	ui.c	FUNCTION_65
0x40008c3	              0x53	                                push rbx	      2137	ui.c	FUNCTION_65
0x40008c4	        0x4883ec58	                           sub rsp, 0x58	      2137	ui.c	FUNCTION_65
0x40008c8	          0x4989f5	                            mov r13, rsi	      2137	ui.c	FUNCTION_65
0x40008cb	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2137	ui.c	FUNCTION_65
0x40008d3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2137	ui.c	FUNCTION_65
0x40008dc	      0x4889442448	             mov qword [rsp + 0x48], rax	      2137	ui.c	FUNCTION_65
0x40008e1	            0x31c0	                            xor eax, eax	      2137	ui.c	FUNCTION_65
0x40008e3	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2141	ui.c	FUNCTION_65
0x40008ec	          0x488b02	                    mov rax, qword [rdx]	      2147	ui.c	FUNCTION_65	IF_1
0x40008ef	    0x483b05000000	            cmp rax, qword [0x040008f6] 	      2150	ui.c	FUNCTION_65	ELSE_1
0x40008f6	      0xb800000000	                              mov eax, 0	      2150	ui.c	FUNCTION_65	ELSE_1
0x40008fb	      0xbb00000000	                              mov ebx, 0	      2150	ui.c	FUNCTION_65	ELSE_1
0x4000900	        0x480f45d8	                         cmovne rbx, rax	      2150	ui.c	FUNCTION_65	ELSE_1
0x4000904	          0x4d85c0	                             test r8, r8	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000907	            0x740b	                            je 0x4000914	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000909	          0x4d89c4	                             mov r12, r8	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400090c	          0x498b29	                     mov rbp, qword [r9]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400090f	          0x4885ed	                           test rbp, rbp	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000912	            0x7515	                           jne 0x4000929	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000914	          0x4889df	                            mov rdi, rbx	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x4000917	      0xe800000000	                          call 0x400091c	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x400091c	    0x41c745000000	                      mov dword [r13], 0	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000924	      0xe944020000	                           jmp 0x4000b6d	      2156	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000929	          0x488b01	                    mov rax, qword [rcx]	      2160	ui.c	FUNCTION_65	IF_3
0x400092c	    0x483b05000000	            cmp rax, qword [0x04000933] 	      2160	ui.c	FUNCTION_65	IF_3
0x4000933	            0x751a	                           jne 0x400094f	      2160	ui.c	FUNCTION_65	IF_3
0x4000935	        0x4d8d7001	                       lea r14, [r8 + 1]	      2162	ui.c	FUNCTION_65	IF_3
0x4000939	        0x450fb638	                   movzx r15d, byte [r8]	      2162	ui.c	FUNCTION_65	IF_3
0x400093d	        0x4883ed01	                              sub rbp, 1	      2163	ui.c	FUNCTION_65	IF_3
0x4000941	    0x48c744240800	                  mov qword [rsp + 8], 0	      2144	ui.c	FUNCTION_65
0x400094a	      0xe9c0010000	                           jmp 0x4000b0f	      2144	ui.c	FUNCTION_65
0x400094f	    0x483b05000000	            cmp rax, qword [0x04000956] 	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000956	     0xf8594000000	                           jne 0x40009f0	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400095c	        0x498d7001	                       lea rsi, [r8 + 1]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000960	        0x450fb638	                   movzx r15d, byte [r8]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000964	        0x4883ed01	                              sub rbp, 1	      2174	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000968	      0xb800000000	                              mov eax, 0	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x400096d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000974	          0x4889f7	                            mov rdi, rsi	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000977	            0xf2ae	              repne scasb al, byte [rdi]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000979	          0x48f7d1	                                 not rcx	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x400097c	        0x4c8d340e	                    lea r14, [rsi + rcx]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000980	          0x4829cd	                            sub rbp, rcx	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000983	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2182	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400098b	    0x488b15000000	            mov rdx, qword [0x04000992] 	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000992	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000997	      0xe800000000	                          call 0x400099c	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x400099c	    0x48c744240800	                  mov qword [rsp + 8], 0	      2144	ui.c	FUNCTION_65
0x40009a5	      0x837c242000	               cmp dword [rsp + 0x20], 0	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009aa	     0xf845f010000	                            je 0x4000b0f	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009b0	        0x896c2414	             mov dword [rsp + 0x14], ebp	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009b4	      0x488d542414	                   lea rdx, [rsp + 0x14]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009b9	          0x4c89f6	                            mov rsi, r14	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009bc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009c1	      0xe800000000	                          call 0x40009c6	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009c6	      0x4889442408	                mov qword [rsp + 8], rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x40009cb	      0x48636c2414	         movsxd rbp, dword [rsp + 0x14] 	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40009d0	          0x4885c0	                           test rax, rax	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x40009d3	        0x4c0f45f0	                         cmovne r14, rax	      2190	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	IF_6
0x40009d7	      0xba00000000	                              mov edx, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009dc	      0xbe00000000	                              mov esi, 0	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009e1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009e6	      0xe800000000	                          call 0x40009eb	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009eb	      0xe91f010000	                           jmp 0x4000b0f	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40009f0	    0x483b05000000	            cmp rax, qword [0x040009f7] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40009f7	            0x7427	                            je 0x4000a20	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40009f9	    0x483b05000000	            cmp rax, qword [0x04000a00] 	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a00	     0xf8445010000	                            je 0x4000b4b	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a06	    0x833d00000000	               cmp dword [0x04000a0d], 0	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a0d	     0xf84d6000000	                            je 0x4000ae9	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a13	    0x483b05000000	            cmp rax, qword [0x04000a1a] 	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a1a	     0xf85dd000000	                           jne 0x4000afd	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a20	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a28	      0x4c89642420	             mov qword [rsp + 0x20], r12	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a2d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a32	            0x8b16	                    mov edx, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a34	        0x89542430	             mov dword [rsp + 0x30], edx	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a38	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000a3d	    0x483b05000000	            cmp rax, qword [0x04000a44] 	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4000a44	            0x752e	                           jne 0x4000a74	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x4000a46	    0x488b3d000000	            mov rdi, qword [0x04000a4d] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a4d	    0x833d00000000	               cmp dword [0x04000a54], 0	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a54	            0x7408	                            je 0x4000a5e	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a56	      0xe800000000	                          call 0x4000a5b	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a5b	          0x4889c7	                            mov rdi, rax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a5e	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a63	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a68	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a6d	      0xe800000000	                          call 0x4000a72	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a72	            0xeb2c	                           jmp 0x4000aa0	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000a74	    0x488b3d000000	            mov rdi, qword [0x04000a7b] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a7b	    0x833d00000000	               cmp dword [0x04000a82], 0	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a82	            0x7408	                            je 0x4000a8c	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a84	      0xe800000000	                          call 0x4000a89	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a89	          0x4889c7	                            mov rdi, rax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a8c	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a91	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a96	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000a9b	      0xe800000000	                          call 0x4000aa0	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x4000aa0	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000aa2	            0x7507	                           jne 0x4000aab	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000aa4	      0x837c241400	               cmp dword [rsp + 0x14], 0	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000aa9	            0x7f0d	                            jg 0x4000ab8	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000aab	    0x41c745000000	                      mov dword [r13], 0	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000ab3	      0xe9b5000000	                           jmp 0x4000b6d	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000ab8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000abd	          0x4c8b30	                    mov r14, qword [rax]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000ac0	      0xb800000000	                              mov eax, 0	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000ac5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000acc	          0x4c89f7	                            mov rdi, r14	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000acf	            0xf2ae	              repne scasb al, byte [rdi]	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000ad1	          0x48f7d1	                                 not rcx	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000ad4	        0x488d69ff	                      lea rbp, [rcx - 1]	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000ad8	    0x48c744240800	                  mov qword [rsp + 8], 0	      2144	ui.c	FUNCTION_65
0x4000ae1	    0x41bfff000000	                          mov r15d, 0xff	      2138	ui.c	FUNCTION_65
0x4000ae7	            0xeb26	                           jmp 0x4000b0f	      2138	ui.c	FUNCTION_65
0x4000ae9	          0x4d89c6	                             mov r14, r8	      2158	ui.c	FUNCTION_65
0x4000aec	    0x48c744240800	                  mov qword [rsp + 8], 0	      2144	ui.c	FUNCTION_65
0x4000af5	    0x41bfff000000	                          mov r15d, 0xff	      2138	ui.c	FUNCTION_65
0x4000afb	            0xeb12	                           jmp 0x4000b0f	      2138	ui.c	FUNCTION_65
0x4000afd	          0x4d89c6	                             mov r14, r8	      2158	ui.c	FUNCTION_65
0x4000b00	    0x48c744240800	                  mov qword [rsp + 8], 0	      2144	ui.c	FUNCTION_65
0x4000b09	    0x41bfff000000	                          mov r15d, 0xff	      2138	ui.c	FUNCTION_65
0x4000b0f	          0x4889d9	                            mov rcx, rbx	      2230	ui.c	FUNCTION_65	CALL_9
0x4000b12	          0x4889ea	                            mov rdx, rbp	      2230	ui.c	FUNCTION_65	CALL_9
0x4000b15	          0x4c89f6	                            mov rsi, r14	      2230	ui.c	FUNCTION_65	CALL_9
0x4000b18	          0x4489ff	                           mov edi, r15d	      2230	ui.c	FUNCTION_65	CALL_9
0x4000b1b	      0xe800000000	                          call 0x4000b20	      2230	ui.c	FUNCTION_65	CALL_9
0x4000b20	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2232	ui.c	FUNCTION_65	IF_10
0x4000b25	          0x4885ff	                           test rdi, rdi	      2232	ui.c	FUNCTION_65	IF_10
0x4000b28	            0x7405	                            je 0x4000b2f	      2232	ui.c	FUNCTION_65	IF_10
0x4000b2a	      0xe800000000	                          call 0x4000b2f	      2233	ui.c	FUNCTION_65	CALL_10
0x4000b2f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2235	ui.c	FUNCTION_65	CALL_11
0x4000b34	      0xe800000000	                          call 0x4000b39	      2235	ui.c	FUNCTION_65	CALL_11
0x4000b39	          0x4c89e7	                            mov rdi, r12	      2237	ui.c	FUNCTION_65	CALL_12
0x4000b3c	      0xe800000000	                          call 0x4000b41	      2237	ui.c	FUNCTION_65	CALL_12
0x4000b41	    0x41c745000100	                      mov dword [r13], 1	      2238	ui.c	FUNCTION_65
0x4000b49	            0xeb22	                           jmp 0x4000b6d	      2238	ui.c	FUNCTION_65
0x4000b4b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b53	      0x4c89442420	              mov qword [rsp + 0x20], r8	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b58	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b5d	            0x8b06	                    mov eax, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b5f	        0x89442430	             mov dword [rsp + 0x30], eax	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b63	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b68	      0xe9d9feffff	                           jmp 0x4000a46	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000b6d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2239	ui.c	FUNCTION_65
0x4000b72	    0x644833042528	                xor rax, qword fs:[0x28]	      2239	ui.c	FUNCTION_65
0x4000b7b	            0x7405	                            je 0x4000b82	      2239	ui.c	FUNCTION_65
0x4000b7d	      0xe800000000	                          call 0x4000b82	      2239	ui.c	FUNCTION_65
0x4000b82	        0x4883c458	                           add rsp, 0x58	      2239	ui.c	FUNCTION_65
0x4000b86	              0x5b	                                 pop rbx	      2239	ui.c	FUNCTION_65
0x4000b87	              0x5d	                                 pop rbp	      2239	ui.c	FUNCTION_65
0x4000b88	            0x415c	                                 pop r12	      2239	ui.c	FUNCTION_65
0x4000b8a	            0x415d	                                 pop r13	      2239	ui.c	FUNCTION_65
0x4000b8c	            0x415e	                                 pop r14	      2239	ui.c	FUNCTION_65
0x4000b8e	            0x415f	                                 pop r15	      2239	ui.c	FUNCTION_65
0x4000b90	              0xc3	                                     ret	      2239	ui.c	FUNCTION_65
clip_x11_notify_cb	CALL,0:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	1
0x40000b7	            0xf3c3	                                     ret	      2508	ui.c	FUNCTION_70
clip_gen_lose_selection	CALL,3:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	8
0x4001268	        0x4883ec08	                              sub rsp, 8	      1507	ui.c	FUNCTION_40
0x400126c	    0x833d00000000	               cmp dword [0x04001273], 0	      1510	ui.c	FUNCTION_40	IF_1
0x4001273	            0x7407	                            je 0x400127c	      1510	ui.c	FUNCTION_40	IF_1
0x4001275	      0xe800000000	                          call 0x400127a	      1511	ui.c	FUNCTION_40	CALL_1
0x400127a	            0xeb05	                           jmp 0x4001281	      1511	ui.c	FUNCTION_40	CALL_1
0x400127c	      0xe800000000	                          call 0x4001281	      1514	ui.c	FUNCTION_40	CALL_2
0x4001281	        0x4883c408	                              add rsp, 8	      1518	ui.c	FUNCTION_40
0x4001285	              0xc3	                                     ret	      1518	ui.c	FUNCTION_40
clip_invert_rectangle	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	8
0x4000237	        0x4883ec08	                              sub rsp, 8	      1190	ui.c	FUNCTION_34
0x400023b	    0x833d00000000	               cmp dword [0x04000242], 0	      1192	ui.c	FUNCTION_34	IF_1
0x4000242	            0x7407	                            je 0x400024b	      1192	ui.c	FUNCTION_34	IF_1
0x4000244	      0xe800000000	                          call 0x4000249	      1193	ui.c	FUNCTION_34	CALL_1
0x4000249	            0xeb05	                           jmp 0x4000250	      1193	ui.c	FUNCTION_34	CALL_1
0x400024b	      0xe800000000	                          call 0x4000250	      1196	ui.c	FUNCTION_34	CALL_2
0x4000250	        0x4883c408	                              add rsp, 8	      1197	ui.c	FUNCTION_34
0x4000254	              0xc3	                                     ret	      1197	ui.c	FUNCTION_34
ui_char_avail	CALL,4:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	16
0x4000dcb	              0x53	                                push rbx	       260	ui.c	FUNCTION_5
0x4000dcc	    0x8b1d00000000	            mov ebx, dword [0x04000dd2] 	       262	ui.c	FUNCTION_5	IF_1
0x4000dd2	            0x85db	                           test ebx, ebx	       262	ui.c	FUNCTION_5	IF_1
0x4000dd4	            0x740e	                            je 0x4000de4	       262	ui.c	FUNCTION_5	IF_1
0x4000dd6	      0xe800000000	                          call 0x4000ddb	       264	ui.c	FUNCTION_5	IF_1	CALL_1
0x4000ddb	      0xe800000000	                          call 0x4000de0	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x4000de0	            0x89c3	                            mov ebx, eax	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x4000de2	            0xeb10	                           jmp 0x4000df4	       265	ui.c	FUNCTION_5	IF_1	CALL_2
0x4000de4	      0xe800000000	                          call 0x4000de9	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4000de9	            0x85c0	                           test eax, eax	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4000deb	            0x7507	                           jne 0x4000df4	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x4000ded	      0xe800000000	                          call 0x4000df2	       273	ui.c	FUNCTION_5	CALL_4
0x4000df2	            0x89c3	                            mov ebx, eax	       273	ui.c	FUNCTION_5	CALL_4
0x4000df4	            0x89d8	                            mov eax, ebx	       277	ui.c	FUNCTION_5
0x4000df6	              0x5b	                                 pop rbx	       277	ui.c	FUNCTION_5
0x4000df7	              0xc3	                                     ret	       277	ui.c	FUNCTION_5
clip_copy_modeless_selection	CALL,15:SWITCH,0:FOR,4:functions,0:IF,24:ELSE,9:DO,0:WHILE,0	289
0x4001665	            0x4157	                                push r15	      1206	ui.c	FUNCTION_35
0x4001667	            0x4156	                                push r14	      1206	ui.c	FUNCTION_35
0x4001669	            0x4155	                                push r13	      1206	ui.c	FUNCTION_35
0x400166b	            0x4154	                                push r12	      1206	ui.c	FUNCTION_35
0x400166d	              0x55	                                push rbp	      1206	ui.c	FUNCTION_35
0x400166e	              0x53	                                push rbx	      1206	ui.c	FUNCTION_35
0x400166f	        0x4883ec38	                           sub rsp, 0x38	      1206	ui.c	FUNCTION_35
0x4001673	    0x488b15000000	            mov rdx, qword [0x0400167a] 	      1218	ui.c	FUNCTION_35
0x400167a	        0x89542408	                mov dword [rsp + 8], edx	      1218	ui.c	FUNCTION_35
0x400167e	    0x8b0500000000	            mov eax, dword [0x04001684] 	      1219	ui.c	FUNCTION_35
0x4001684	            0x89c6	                            mov esi, eax	      1219	ui.c	FUNCTION_35
0x4001686	        0x89442428	             mov dword [rsp + 0x28], eax	      1219	ui.c	FUNCTION_35
0x400168a	    0x488b05000000	            mov rax, qword [0x04001691] 	      1220	ui.c	FUNCTION_35
0x4001691	        0x8944240c	              mov dword [rsp + 0xc], eax	      1220	ui.c	FUNCTION_35
0x4001695	    0x8b1d00000000	            mov ebx, dword [0x0400169b] 	      1221	ui.c	FUNCTION_35
0x400169b	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1221	ui.c	FUNCTION_35
0x400169f	    0x488b0d000000	            mov rcx, qword [0x040016a6] 	      1224	ui.c	FUNCTION_35	IF_1
0x40016a6	          0x4885c9	                           test rcx, rcx	      1224	ui.c	FUNCTION_35	IF_1
0x40016a9	     0xf8433040000	                            je 0x4001ae2	      1224	ui.c	FUNCTION_35	IF_1
0x40016af	            0x39c2	                            cmp edx, eax	      1230	ui.c	FUNCTION_35	IF_2
0x40016b1	            0x7f2a	                            jg 0x40016dd	      1230	ui.c	FUNCTION_35	IF_2
0x40016b3	            0x39c2	                            cmp edx, eax	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x40016b5	            0x750e	                           jne 0x40016c5	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x40016b7	            0x39de	                            cmp esi, ebx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x40016b9	            0x7e0a	                           jle 0x40016c5	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x40016bb	        0x8954240c	              mov dword [rsp + 0xc], edx	      1218	ui.c	FUNCTION_35
0x40016bf	        0x89442408	                mov dword [rsp + 8], eax	      1220	ui.c	FUNCTION_35
0x40016c3	            0xeb18	                           jmp 0x40016dd	      1220	ui.c	FUNCTION_35
0x40016c5	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1220	ui.c	FUNCTION_35
0x40016c9	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      1219	ui.c	FUNCTION_35
0x40016cd	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1219	ui.c	FUNCTION_35
0x40016d1	        0x89742428	             mov dword [rsp + 0x28], esi	      1221	ui.c	FUNCTION_35
0x40016d5	        0x8954240c	              mov dword [rsp + 0xc], edx	      1218	ui.c	FUNCTION_35
0x40016d9	        0x89442408	                mov dword [rsp + 8], eax	      1220	ui.c	FUNCTION_35
0x40016dd	        0x897c2424	             mov dword [rsp + 0x24], edi	      1220	ui.c	FUNCTION_35
0x40016e1	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      1241	ui.c	FUNCTION_35
0x40016e6	    0x488b15000000	            mov rdx, qword [0x040016ed] 	      1241	ui.c	FUNCTION_35
0x40016ed	          0x8b0482	            mov eax, dword [rdx + rax*4]	      1241	ui.c	FUNCTION_35
0x40016f0	        0x488d3c01	                    lea rdi, [rcx + rax]	      1241	ui.c	FUNCTION_35
0x40016f4	    0x833d00000000	               cmp dword [0x040016fb], 0	      1242	ui.c	FUNCTION_35	IF_4
0x40016fb	            0x7438	                            je 0x4001735	      1242	ui.c	FUNCTION_35	IF_4
0x40016fd	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1243	ui.c	FUNCTION_35	IF_4
0x4001701	          0x4863f3	                         movsxd rsi, ebx	      1243	ui.c	FUNCTION_35	IF_4
0x4001704	          0x4801fe	                            add rsi, rdi	      1243	ui.c	FUNCTION_35	IF_4
0x4001707	    0xff1500000000	                 call qword [0x0400170d]	      1243	ui.c	FUNCTION_35	IF_4
0x400170d	            0x89de	                            mov esi, ebx	      1243	ui.c	FUNCTION_35	IF_4
0x400170f	            0x29c6	                            sub esi, eax	      1243	ui.c	FUNCTION_35	IF_4
0x4001711	        0x89742410	             mov dword [rsp + 0x10], esi	      1243	ui.c	FUNCTION_35	IF_4
0x4001715	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4001719	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x400171d	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4001720	     0xfaf3d000000	            imul edi, dword [0x04001727]	      1249	ui.c	FUNCTION_35
0x4001727	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x400172a	    0x833d00000000	               cmp dword [0x04001731], 0	      1251	ui.c	FUNCTION_35	IF_6
0x4001731	            0x7529	                           jne 0x400175c	      1251	ui.c	FUNCTION_35	IF_6
0x4001733	            0xeb2b	                           jmp 0x4001760	      1251	ui.c	FUNCTION_35	IF_6
0x4001735	    0x833d00000000	               cmp dword [0x0400173c], 0	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400173c	     0xf8486030000	                            je 0x4001ac8	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001742	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001746	            0x89f0	                            mov eax, esi	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001748	            0x4898	                                    cdqe	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400174a	        0x803c0701	                 cmp byte [rdi + rax], 1	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400174e	            0x89f0	                            mov eax, esi	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001750	          0x83d800	                              sbb eax, 0	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001753	        0x89442410	             mov dword [rsp + 0x10], eax	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4001757	      0xe96c030000	                           jmp 0x4001ac8	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400175c	             0x1ff	                            add edi, edi	      1252	ui.c	FUNCTION_35	IF_6
0x400175e	            0xeb0f	                           jmp 0x400176f	      1252	ui.c	FUNCTION_35	IF_6
0x4001760	    0x833d00000000	               cmp dword [0x04001767], 0	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001767	            0x7406	                            je 0x400176f	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4001769	          0x8d04bf	                  lea eax, [rdi + rdi*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x400176c	          0x8d3c87	                  lea edi, [rdi + rax*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x400176f	          0x4863ff	                         movsxd rdi, edi	      1256	ui.c	FUNCTION_35	CALL_1
0x4001772	      0xbe01000000	                              mov esi, 1	      1256	ui.c	FUNCTION_35	CALL_1
0x4001777	      0xe800000000	                          call 0x400177c	      1256	ui.c	FUNCTION_35	CALL_1
0x400177c	      0x4889442418	             mov qword [rsp + 0x18], rax	      1256	ui.c	FUNCTION_35	CALL_1
0x4001781	          0x4885c0	                           test rax, rax	      1257	ui.c	FUNCTION_35	IF_8
0x4001784	     0xf8458030000	                            je 0x4001ae2	      1257	ui.c	FUNCTION_35	IF_8
0x400178a	        0x8b742408	                mov esi, dword [rsp + 8]	      1261	ui.c	FUNCTION_35	FOR_1
0x400178e	          0x4989c7	                            mov r15, rax	      1261	ui.c	FUNCTION_35	FOR_1
0x4001791	        0x3974240c	              cmp dword [rsp + 0xc], esi	      1261	ui.c	FUNCTION_35	FOR_1
0x4001795	     0xf8fa7020000	                            jg 0x4001a42	      1261	ui.c	FUNCTION_35	FOR_1
0x400179b	            0xeb13	                           jmp 0x40017b0	      1261	ui.c	FUNCTION_35	FOR_1
0x400179d	      0x44396c240c	            cmp dword [rsp + 0xc], r13d 	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x40017a2	    0x41be00000000	                             mov r14d, 0	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x40017a8	    0x440f44742410	          cmove r14d, dword [rsp + 0x10]	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x40017ae	            0xeb17	                           jmp 0x40017c7	      1263	ui.c	FUNCTION_35	FOR_1	IF_9
0x40017b0	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      1261	ui.c	FUNCTION_35	FOR_1
0x40017b5	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1261	ui.c	FUNCTION_35	FOR_1
0x40017ba	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	      1261	ui.c	FUNCTION_35	FOR_1
0x40017bf	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1261	ui.c	FUNCTION_35	FOR_1
0x40017c7	      0x44396c2408	               cmp dword [rsp + 8], r13d	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x40017cc	            0x740c	                            je 0x40017da	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x40017ce	    0x8b0500000000	            mov eax, dword [0x040017d4] 	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x40017d4	        0x89442404	                mov dword [rsp + 4], eax	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x40017d8	            0xeb08	                           jmp 0x40017e2	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x40017da	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40017de	        0x89442404	                mov dword [rsp + 4], eax	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40017e2	          0x4489ef	                           mov edi, r13d	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x40017e5	      0xe875e8ffff	              call sym.clip_get_line_end	      1273	ui.c	FUNCTION_35	FOR_1	CALL_2
0x40017ea	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x40017ee	          0x4863d1	                         movsxd rdx, ecx	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x40017f1	    0x483b15000000	            cmp rdx, qword [0x040017f8] 	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x40017f8	            0x7c29	                            jl 0x4001823	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x40017fa	      0x44396c2408	               cmp dword [rsp + 8], r13d	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x40017ff	            0x7f04	                            jg 0x4001805	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001801	            0x39c1	                            cmp ecx, eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001803	            0x7e1e	                           jle 0x4001823	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001805	          0x4139c6	                           cmp r14d, eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001808	        0x410f4dc6	                        cmovge eax, r14d	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x400180c	        0x89442404	                mov dword [rsp + 4], eax	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4001810	      0x44396c2408	               cmp dword [rsp + 8], r13d	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001815	      0xb801000000	                              mov eax, 1	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x400181a	       0xf45442420	          cmovne eax, dword [rsp + 0x20]	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x400181f	        0x89442420	             mov dword [rsp + 0x20], eax	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4001823	      0x44396c240c	            cmp dword [rsp + 0xc], r13d 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001828	            0x7d19	                           jge 0x4001843	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x400182a	          0x4963c5	                        movsxd rax, r13d	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x400182d	    0x488b15000000	            mov rdx, qword [0x04001834] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001834	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001839	            0x7508	                           jne 0x4001843	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x400183b	        0x41c6070a	                     mov byte [r15], 0xa	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x400183f	        0x4d8d7f01	                      lea r15, [r15 + 1]	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4001843	    0x44392d000000	           cmp dword [0x0400184a], r13d 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x400184a	     0xf8ed4010000	                           jle 0x4001a24	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001850	        0x8b5c2404	                mov ebx, dword [rsp + 4]	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001854	    0x3b1d00000000	            cmp ebx, dword [0x0400185a] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x400185a	     0xf8fc4010000	                            jg 0x4001a24	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4001860	    0x833d00000000	               cmp dword [0x04001867], 0	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001867	     0xf84a4000000	                            je 0x4001911	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x400186d	          0x4963c5	                        movsxd rax, r13d	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001870	    0x488d34850000	                        lea rsi, [rax*4]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001878	    0x488b15000000	            mov rdx, qword [0x0400187f] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x400187f	          0x8b0c82	            mov ecx, dword [rdx + rax*4]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001882	    0x48030d000000	             add rcx, qword [0x04001889]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4001889	          0x4139de	                           cmp r14d, ebx	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x400188c	     0xf8d92010000	                           jge 0x4001a24	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001892	            0x89df	                            mov edi, ebx	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001894	    0x813d00000000	         cmp dword [0x0400189e], 0x26cc 	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x400189e	            0x7532	                           jne 0x40018d2	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018a0	          0x4963c6	                        movsxd rax, r14d	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018a3	        0x803c018e	              cmp byte [rcx + rax], 0x8e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018a7	            0x7529	                           jne 0x40018d2	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018a9	        0x41c6078e	                    mov byte [r15], 0x8e	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018ad	    0x488b05000000	            mov rax, qword [0x040018b4] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018b4	          0x4489f2	                           mov edx, r14d	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018b7	           0x31430	              add edx, dword [rax + rsi]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018ba	          0x4889d0	                            mov rax, rdx	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018bd	    0x488b15000000	            mov rdx, qword [0x040018c4] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018c4	         0xfb60402	             movzx eax, byte [rdx + rax]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018c8	        0x41884701	                  mov byte [r15 + 1], al	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018cc	        0x4d8d7f02	                      lea r15, [r15 + 2]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018d0	            0xeb31	                           jmp 0x4001903	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x40018d2	          0x4963c6	                        movsxd rax, r14d	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018d5	          0x4801c8	                            add rax, rcx	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018d8	           0xfb610	                   movzx edx, byte [rax]	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018db	          0x418817	                      mov byte [r15], dl	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018de	           0xfb600	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x40018e1	    0x80b800000000	                       cmp byte [rax], 2	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x40018e8	            0x7406	                            je 0x40018f0	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x40018ea	        0x4983c701	                              add r15, 1	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018ee	            0xeb13	                           jmp 0x4001903	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x40018f0	        0x4183c601	                             add r14d, 1	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x40018f4	          0x4963c6	                        movsxd rax, r14d	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x40018f7	         0xfb60401	             movzx eax, byte [rcx + rax]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x40018fb	        0x41884701	                  mov byte [r15 + 1], al	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x40018ff	        0x4d8d7f02	                      lea r15, [r15 + 2]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4001903	        0x4183c601	                             add r14d, 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001907	          0x4439f7	                           cmp edi, r14d	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x400190a	            0x7f88	                            jg 0x4001894	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x400190c	      0xe913010000	                           jmp 0x4001a24	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4001911	    0x833d00000000	               cmp dword [0x04001918], 0	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001918	     0xf84d4000000	                            je 0x40019f2	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400191e	          0x4963c5	                        movsxd rax, r13d	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001921	    0x488b15000000	            mov rdx, qword [0x04001928] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4001928	          0x8b0482	            mov eax, dword [rdx + rax*4]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400192b	        0x89442414	             mov dword [rsp + 0x14], eax	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x400192f	      0x443b742404	               cmp r14d, dword [rsp + 4]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4001934	     0xf8dea000000	                           jge 0x4001a24	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x400193a	      0x44896c242c	            mov dword [rsp + 0x2c], r13d	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x400193f	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001943	        0x468d2430	                   lea r12d, [rax + r14]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001947	          0x4d63e4	                        movsxd r12, r12d	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400194a	    0x4e8d2ca50000	                        lea r13, [r12*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001952	    0x488b05000000	            mov rax, qword [0x04001959] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001959	        0x428b3ca0	            mov edi, dword [rax + r12*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400195d	            0x85ff	                           test edi, edi	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400195f	            0x7515	                           jne 0x4001976	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001961	    0x488b05000000	            mov rax, qword [0x04001968] 	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001968	      0x420fb60420	             movzx eax, byte [rax + r12]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x400196d	          0x418807	                      mov byte [r15], al	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001970	        0x4d8d7f01	                      lea r15, [r15 + 1]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001974	            0xeb59	                           jmp 0x40019cf	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4001976	          0x4c89fe	                            mov rsi, r15	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001979	      0xe800000000	                          call 0x400197e	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x400197e	            0x4898	                                    cdqe	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001980	          0x4901c7	                            add r15, rax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4001983	    0x833d00000000	               cmp dword [0x0400198a], 0	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x400198a	            0x7e43	                           jle 0x40019cf	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x400198c	    0x488b05000000	            mov rax, qword [0x04001993] 	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001993	        0x428b3ca0	            mov edi, dword [rax + r12*4]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001997	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4001999	            0x7434	                            je 0x40019cf	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x400199b	      0xbd00000000	                              mov ebp, 0	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019a0	      0xbb00000000	                              mov ebx, 0	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019a5	            0xeb10	                           jmp 0x40019b7	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019a7	        0x488b4500	                    mov rax, qword [rbp]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019ab	        0x428b3c28	              mov edi, dword [rax + r13]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019af	        0x4883c508	                              add rbp, 8	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019b3	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019b5	            0x7418	                            je 0x40019cf	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x40019b7	          0x4c89fe	                            mov rsi, r15	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40019ba	      0xe800000000	                          call 0x40019bf	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40019bf	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40019c1	          0x4901c7	                            add r15, rax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x40019c4	          0x83c301	                              add ebx, 1	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40019c7	    0x391d00000000	            cmp dword [0x040019cd], ebx 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40019cd	            0x7fd8	                            jg 0x40019a7	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x40019cf	    0x488b05000000	            mov rax, qword [0x040019d6] 	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x40019d6	    0x42807c200101	            cmp byte [rax + r12 + 1], 1 	      1341	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x40019dc	        0x4183d601	                             adc r14d, 1	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x40019e0	      0x4439742404	               cmp dword [rsp + 4], r14d	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x40019e5	     0xf8f54ffffff	                            jg 0x400193f	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x40019eb	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x40019f0	            0xeb32	                           jmp 0x4001a24	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x40019f2	        0x8b5c2404	                mov ebx, dword [rsp + 4]	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x40019f6	          0x4429f3	                           sub ebx, r14d	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x40019f9	          0x4863db	                         movsxd rbx, ebx	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x40019fc	          0x4963c5	                        movsxd rax, r13d	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x40019ff	    0x488b15000000	            mov rdx, qword [0x04001a06] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4001a06	          0x8b3482	            mov esi, dword [rdx + rax*4]	       126	string3.h	FUNCTION_90	CALL_3
0x4001a09	          0x4d63f6	                        movsxd r14, r14d	       126	string3.h	FUNCTION_90	CALL_3
0x4001a0c	          0x4c01f6	                            add rsi, r14	       126	string3.h	FUNCTION_90	CALL_3
0x4001a0f	    0x480335000000	             add rsi, qword [0x04001a16]	       126	string3.h	FUNCTION_90	CALL_3
0x4001a16	          0x4889da	                            mov rdx, rbx	       126	string3.h	FUNCTION_90	CALL_3
0x4001a19	          0x4c89ff	                            mov rdi, r15	       126	string3.h	FUNCTION_90	CALL_3
0x4001a1c	      0xe800000000	                          call 0x4001a21	       126	string3.h	FUNCTION_90	CALL_3
0x4001a21	          0x4901df	                            add r15, rbx	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x4001a24	        0x4183c501	                             add r13d, 1	      1261	ui.c	FUNCTION_35	FOR_1
0x4001a28	      0x44396c2408	               cmp dword [rsp + 8], r13d	      1261	ui.c	FUNCTION_35	FOR_1
0x4001a2d	     0xf8d6afdffff	                           jge 0x400179d	      1261	ui.c	FUNCTION_35	FOR_1
0x4001a33	      0x837c242000	               cmp dword [rsp + 0x20], 0	      1355	ui.c	FUNCTION_35	IF_23
0x4001a38	            0x7408	                            je 0x4001a42	      1355	ui.c	FUNCTION_35	IF_23
0x4001a3a	        0x41c6070a	                     mov byte [r15], 0xa	      1356	ui.c	FUNCTION_35	IF_23
0x4001a3e	        0x4d8d7f01	                      lea r15, [r15 + 1]	      1356	ui.c	FUNCTION_35	IF_23
0x4001a42	      0xbf00000000	                              mov edi, 0	      1359	ui.c	FUNCTION_35	CALL_7
0x4001a47	      0xe800000000	                          call 0x4001a4c	      1359	ui.c	FUNCTION_35	CALL_7
0x4001a4c	      0xbf00000000	                              mov edi, 0	      1360	ui.c	FUNCTION_35	CALL_8
0x4001a51	      0xe800000000	                          call 0x4001a56	      1360	ui.c	FUNCTION_35	CALL_8
0x4001a56	          0x4c89fb	                            mov rbx, r15	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a59	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a5e	          0x4829c3	                            sub rbx, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a61	      0xb900000000	                              mov ecx, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a66	          0x4889da	                            mov rdx, rbx	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a69	          0x4889c6	                            mov rsi, rax	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a6c	      0xbf00000000	                              mov edi, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a71	      0xe800000000	                          call 0x4001a76	      1363	ui.c	FUNCTION_35	CALL_9
0x4001a76	      0xbf00000000	                              mov edi, 0	      1366	ui.c	FUNCTION_35	CALL_10
0x4001a7b	      0xe800000000	                          call 0x4001a80	      1366	ui.c	FUNCTION_35	CALL_10
0x4001a80	      0x837c242400	               cmp dword [rsp + 0x24], 0	      1369	ui.c	FUNCTION_35	IF_24
0x4001a85	            0x7435	                            je 0x4001abc	      1369	ui.c	FUNCTION_35	IF_24
0x4001a87	      0xbf00000000	                              mov edi, 0	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x4001a8c	      0xe800000000	                          call 0x4001a91	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x4001a91	      0xbf00000000	                              mov edi, 0	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x4001a96	      0xe800000000	                          call 0x4001a9b	      1373	ui.c	FUNCTION_35	IF_24	CALL_12
0x4001a9b	      0xb900000000	                              mov ecx, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4001aa0	          0x4889da	                            mov rdx, rbx	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4001aa3	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4001aa8	      0xbf00000000	                              mov edi, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4001aad	      0xe800000000	                          call 0x4001ab2	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4001ab2	      0xbf00000000	                              mov edi, 0	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x4001ab7	      0xe800000000	                          call 0x4001abc	      1375	ui.c	FUNCTION_35	IF_24	CALL_14
0x4001abc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1378	ui.c	FUNCTION_35	CALL_15
0x4001ac1	      0xe800000000	                          call 0x4001ac6	      1378	ui.c	FUNCTION_35	CALL_15
0x4001ac6	            0xeb1a	                           jmp 0x4001ae2	      1378	ui.c	FUNCTION_35	CALL_15
0x4001ac8	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4001acc	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x4001ad0	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4001ad3	     0xfaf3d000000	            imul edi, dword [0x04001ada]	      1249	ui.c	FUNCTION_35
0x4001ada	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4001add	      0xe97efcffff	                           jmp 0x4001760	      1249	ui.c	FUNCTION_35
0x4001ae2	        0x4883c438	                           add rsp, 0x38	      1379	ui.c	FUNCTION_35
0x4001ae6	              0x5b	                                 pop rbx	      1379	ui.c	FUNCTION_35
0x4001ae7	              0x5d	                                 pop rbp	      1379	ui.c	FUNCTION_35
0x4001ae8	            0x415c	                                 pop r12	      1379	ui.c	FUNCTION_35
0x4001aea	            0x415d	                                 pop r13	      1379	ui.c	FUNCTION_35
0x4001aec	            0x415e	                                 pop r14	      1379	ui.c	FUNCTION_35
0x4001aee	            0x415f	                                 pop r15	      1379	ui.c	FUNCTION_35
0x4001af0	              0xc3	                                     ret	      1379	ui.c	FUNCTION_35
clip_gen_set_selection	CALL,3:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,1:DO,0:WHILE,0	20
0x4001376	        0x4883ec08	                              sub rsp, 8	      1522	ui.c	FUNCTION_41
0x400137a	    0x833d00000000	               cmp dword [0x04001381], 0	      1523	ui.c	FUNCTION_41	IF_1
0x4001381	            0x7530	                           jne 0x40013b3	      1523	ui.c	FUNCTION_41	IF_1
0x4001383	    0x4881ff000000	                              cmp rdi, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x400138a	            0x7509	                           jne 0x4001395	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x400138c	    0xf60500000000	               test byte [0x04001393], 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001393	            0x7512	                           jne 0x40013a7	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001395	    0x4881ff000000	                              cmp rdi, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400139c	            0x7515	                           jne 0x40013b3	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x400139e	    0xf60500000000	               test byte [0x040013a5], 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40013a5	            0x740c	                            je 0x40013b3	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40013a7	    0xc70500000000	               mov dword [0x040013b1], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x40013b1	            0xeb15	                           jmp 0x40013c8	      1531	ui.c	FUNCTION_41	IF_1	IF_2
0x40013b3	    0x833d00000000	               cmp dword [0x040013ba], 0	      1536	ui.c	FUNCTION_41	IF_3
0x40013ba	            0x7407	                            je 0x40013c3	      1536	ui.c	FUNCTION_41	IF_3
0x40013bc	      0xe800000000	                          call 0x40013c1	      1537	ui.c	FUNCTION_41	CALL_1
0x40013c1	            0xeb05	                           jmp 0x40013c8	      1537	ui.c	FUNCTION_41	CALL_1
0x40013c3	      0xe800000000	                          call 0x40013c8	      1540	ui.c	FUNCTION_41	CALL_2
0x40013c8	        0x4883c408	                              add rsp, 8	      1544	ui.c	FUNCTION_41
0x40013cc	              0xc3	                                     ret	      1544	ui.c	FUNCTION_41
ui_set_shellsize	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	10
0x4000e88	        0x4883ec08	                              sub rsp, 8	       366	ui.c	FUNCTION_10
0x4000e8c	    0x833d00000000	               cmp dword [0x04000e93], 0	       368	ui.c	FUNCTION_10	IF_1
0x4000e93	            0x7411	                            je 0x4000ea6	       368	ui.c	FUNCTION_10	IF_1
0x4000e95	      0xba0f000000	                            mov edx, 0xf	       369	ui.c	FUNCTION_10	CALL_1
0x4000e9a	      0xbe01000000	                              mov esi, 1	       369	ui.c	FUNCTION_10	CALL_1
0x4000e9f	      0xe800000000	                          call 0x4000ea4	       369	ui.c	FUNCTION_10	CALL_1
0x4000ea4	            0xeb05	                           jmp 0x4000eab	       369	ui.c	FUNCTION_10	CALL_1
0x4000ea6	      0xe800000000	                          call 0x4000eab	       372	ui.c	FUNCTION_10	CALL_2
0x4000eab	        0x4883c408	                              add rsp, 8	       373	ui.c	FUNCTION_10
0x4000eaf	              0xc3	                                     ret	       373	ui.c	FUNCTION_10
ui_new_shellsize	CALL,2:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,1:DO,0:WHILE,0	13
0x4000eb0	    0x8b0500000000	            mov eax, dword [0x04000eb6] 	       382	ui.c	FUNCTION_11	IF_1
0x4000eb6	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x4000eb8	            0x7426	                            je 0x4000ee0	       382	ui.c	FUNCTION_11	IF_1
0x4000eba	    0x833d00000000	               cmp dword [0x04000ec1], 0	       382	ui.c	FUNCTION_11	IF_1
0x4000ec1	            0x751d	                           jne 0x4000ee0	       382	ui.c	FUNCTION_11	IF_1
0x4000ec3	        0x4883ec08	                              sub rsp, 8	       381	ui.c	FUNCTION_11
0x4000ec7	    0x833d00000000	               cmp dword [0x04000ece], 0	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x4000ece	            0x7407	                            je 0x4000ed7	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       386	ui.c	FUNCTION_11	IF_1	CALL_1
0x4000ed5	            0xeb05	                           jmp 0x4000edc	       386	ui.c	FUNCTION_11	IF_1	CALL_1
0x4000ed7	      0xe800000000	                          call 0x4000edc	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x4000edc	        0x4883c408	                              add rsp, 8	       391	ui.c	FUNCTION_11
0x4000ee0	            0xf3c3	                                     ret	       391	ui.c	FUNCTION_11
clip_gen_own_selection	CALL,3:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	8
0x40011b0	        0x4883ec08	                              sub rsp, 8	      1492	ui.c	FUNCTION_39
0x40011b4	    0x833d00000000	               cmp dword [0x040011bb], 0	      1495	ui.c	FUNCTION_39	IF_1
0x40011bb	            0x7407	                            je 0x40011c4	      1495	ui.c	FUNCTION_39	IF_1
0x40011bd	      0xe800000000	                          call 0x40011c2	      1496	ui.c	FUNCTION_39	CALL_1
0x40011c2	            0xeb05	                           jmp 0x40011c9	      1496	ui.c	FUNCTION_39	CALL_1
0x40011c4	      0xe800000000	                          call 0x40011c9	      1499	ui.c	FUNCTION_39	CALL_2
0x40011c9	        0x4883c408	                              add rsp, 8	      1503	ui.c	FUNCTION_39
0x40011cd	              0xc3	                                     ret	      1503	ui.c	FUNCTION_39
x11_setup_selection	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	8
0x4002a14	        0x4883ec08	                              sub rsp, 8	      2123	ui.c	ELSE_1	FUNCTION_64
0x4002a18	    0x41b800000000	                              mov r8d, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002a1e	      0xb900000000	                              mov ecx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002a23	      0xba00000000	                              mov edx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002a28	      0xbe00004000	                       mov esi, 0x400000	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002a2d	      0xe800000000	                          call 0x4002a32	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4002a32	        0x4883c408	                              add rsp, 8	      2126	ui.c	ELSE_1	FUNCTION_64
0x4002a36	              0xc3	                                     ret	      2126	ui.c	ELSE_1	FUNCTION_64
clip_gen_request_selection	CALL,3:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	8
0x4001af1	        0x4883ec08	                              sub rsp, 8	      1548	ui.c	FUNCTION_42
0x4001af5	    0x833d00000000	               cmp dword [0x04001afc], 0	      1551	ui.c	FUNCTION_42	IF_1
0x4001afc	            0x7407	                            je 0x4001b05	      1551	ui.c	FUNCTION_42	IF_1
0x4001afe	      0xe800000000	                          call 0x4001b03	      1552	ui.c	FUNCTION_42	CALL_1
0x4001b03	            0xeb05	                           jmp 0x4001b0a	      1552	ui.c	FUNCTION_42	CALL_1
0x4001b05	      0xe800000000	                          call 0x4001b0a	      1555	ui.c	FUNCTION_42	CALL_2
0x4001b0a	        0x4883c408	                              add rsp, 8	      1559	ui.c	FUNCTION_42
0x4001b0e	              0xc3	                                     ret	      1559	ui.c	FUNCTION_42
clip_compare_pos	CALL,0:SWITCH,0:FOR,0:functions,0:IF,4:ELSE,0:DO,0:WHILE,0	12
0x4000040	      0xb801000000	                              mov eax, 1	       773	ui.c	FUNCTION_26	IF_1
0x4000045	            0x39d7	                            cmp edi, edx	       773	ui.c	FUNCTION_26	IF_1
0x4000047	            0x7f14	                            jg 0x400005d	       773	ui.c	FUNCTION_26	IF_1
0x4000049	            0x7c0d	                            jl 0x4000058	       774	ui.c	FUNCTION_26	IF_2
0x400004b	            0x39ce	                            cmp esi, ecx	       775	ui.c	FUNCTION_26	IF_3
0x400004d	            0x7f0e	                            jg 0x400005d	       775	ui.c	FUNCTION_26	IF_3
0x400004f	           0xf9cc0	                                 setl al	       776	ui.c	FUNCTION_26	IF_4
0x4000052	           0xfb6c0	                           movzx eax, al	       776	ui.c	FUNCTION_26	IF_4
0x4000055	            0xf7d8	                                 neg eax	       776	ui.c	FUNCTION_26	IF_4
0x4000057	              0xc3	                                     ret	       776	ui.c	FUNCTION_26	IF_4
0x4000058	      0xb8ffffffff	                     mov eax, 0xffffffff	       774	ui.c	FUNCTION_26	IF_2
0x400005d	            0xf3c3	                                     ret	       778	ui.c	FUNCTION_26
clip_x11_timestamp_cb	CALL,3:SWITCH,0:FOR,0:functions,0:IF,6:ELSE,1:DO,0:WHILE,0	70
0x40003b3	              0x55	                                push rbp	      2081	ui.c	FUNCTION_63
0x40003b4	              0x53	                                push rbx	      2081	ui.c	FUNCTION_63
0x40003b5	        0x4883ec38	                           sub rsp, 0x38	      2081	ui.c	FUNCTION_63
0x40003b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2081	ui.c	FUNCTION_63
0x40003c2	      0x4889442428	             mov qword [rsp + 0x28], rax	      2081	ui.c	FUNCTION_63
0x40003c7	            0x31c0	                            xor eax, eax	      2081	ui.c	FUNCTION_63
0x40003c9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2085	ui.c	FUNCTION_63
0x40003d2	          0x833a1c	                   cmp dword [rdx], 0x1c	      2090	ui.c	FUNCTION_63	IF_1
0x40003d5	     0xf85e0000000	                           jne 0x40004bb	      2090	ui.c	FUNCTION_63	IF_1
0x40003db	          0x4889fd	                            mov rbp, rdi	      2090	ui.c	FUNCTION_63	IF_1
0x40003de	          0x4889d3	                            mov rbx, rdx	      2090	ui.c	FUNCTION_63	IF_1
0x40003e1	        0x837a3800	               cmp dword [rdx + 0x38], 0	      2090	ui.c	FUNCTION_63	IF_1
0x40003e5	     0xf85d0000000	                           jne 0x40004bb	      2090	ui.c	FUNCTION_63	IF_1
0x40003eb	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      2091	ui.c	FUNCTION_63	IF_1
0x40003ef	    0x483b15000000	            cmp rdx, qword [0x040003f6] 	      2091	ui.c	FUNCTION_63	IF_1
0x40003f6	            0x740d	                            je 0x4000405	      2091	ui.c	FUNCTION_63	IF_1
0x40003f8	    0x483b15000000	            cmp rdx, qword [0x040003ff] 	      2092	ui.c	FUNCTION_63	IF_1
0x40003ff	     0xf85b6000000	                           jne 0x40004bb	      2092	ui.c	FUNCTION_63	IF_1
0x4000405	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000409	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400040d	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000412	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000413	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000418	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000419	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400041e	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400041f	      0x488d44241c	                   lea rax, [rsp + 0x1c]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000424	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000425	      0x488d442428	                   lea rax, [rsp + 0x28]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400042a	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400042b	    0xff3500000000	                 push qword [0x04000431]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000431	    0x41b900000000	                              mov r9d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000437	    0x41b800000000	                              mov r8d, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400043d	      0xb900000000	                              mov ecx, 0	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000442	      0xe800000000	                          call 0x4000447	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x4000447	        0x4883c430	                           add rsp, 0x30	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400044b	            0x85c0	                           test eax, eax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400044d	            0x756c	                           jne 0x40004bb	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x400044f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2100	ui.c	FUNCTION_63	IF_3
0x4000454	          0x4885ff	                           test rdi, rdi	      2100	ui.c	FUNCTION_63	IF_3
0x4000457	            0x7405	                            je 0x400045e	      2100	ui.c	FUNCTION_63	IF_3
0x4000459	      0xe800000000	                          call 0x400045e	      2101	ui.c	FUNCTION_63	CALL_2
0x400045e	    0x488b05000000	            mov rax, qword [0x04000465] 	      2104	ui.c	FUNCTION_63	IF_4
0x4000465	      0x4839442408	                cmp qword [rsp + 8], rax	      2104	ui.c	FUNCTION_63	IF_4
0x400046a	            0x754f	                           jne 0x40004bb	      2104	ui.c	FUNCTION_63	IF_4
0x400046c	      0x837c240420	               cmp dword [rsp + 4], 0x20	      2104	ui.c	FUNCTION_63	IF_4
0x4000471	            0x7548	                           jne 0x40004bb	      2104	ui.c	FUNCTION_63	IF_4
0x4000473	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000477	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400047b	    0x41b900000000	                              mov r9d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000481	    0x41b800000000	                              mov r8d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000487	      0xb900000000	                              mov ecx, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400048c	          0x4889ef	                            mov rdi, rbp	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400048f	      0xe800000000	                          call 0x4000494	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000494	            0x3c01	                               cmp al, 1	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000496	            0x7523	                           jne 0x40004bb	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000498	    0x488b05000000	            mov rax, qword [0x0400049f] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x400049f	        0x48394328	            cmp qword [rbx + 0x28], rax 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x40004a3	            0x750c	                           jne 0x40004b1	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x40004a5	    0xc70500000000	               mov dword [0x040004af], 1	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x40004af	            0xeb0a	                           jmp 0x40004bb	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x40004b1	    0xc70500000000	               mov dword [0x040004bb], 1	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x40004bb	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004c0	    0x644833042528	                xor rax, qword fs:[0x28]	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004c9	            0x7405	                            je 0x40004d0	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004cb	      0xe800000000	                          call 0x40004d0	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004d0	        0x4883c438	                           add rsp, 0x38	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004d4	              0x5b	                                 pop rbx	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004d5	              0x5d	                                 pop rbp	      2119	ui.c	FUNCTION_63	ELSE_1
0x40004d6	              0xc3	                                     ret	      2119	ui.c	FUNCTION_63	ELSE_1
clip_scroll_selection	CALL,0:SWITCH,0:FOR,0:functions,0:IF,5:ELSE,4:DO,0:WHILE,0	29
0x400113a	    0x66833d000000	                cmp word [0x04001142], 0	      1095	ui.c	FUNCTION_32	IF_1
0x4001142	            0x746a	                            je 0x40011ae	      1095	ui.c	FUNCTION_32	IF_1
0x4001144	    0x8b0500000000	            mov eax, dword [0x0400114a] 	      1098	ui.c	FUNCTION_32
0x400114a	            0x29f8	                            sub eax, edi	      1098	ui.c	FUNCTION_32
0x400114c	            0x85c0	                           test eax, eax	      1099	ui.c	FUNCTION_32	IF_2
0x400114e	            0x7f0d	                            jg 0x400115d	      1099	ui.c	FUNCTION_32	IF_2
0x4001150	    0x48c705000000	               mov qword [0x0400115b], 0	      1100	ui.c	FUNCTION_32	IF_2
0x400115b	            0xeb1c	                           jmp 0x4001179	      1100	ui.c	FUNCTION_32	IF_2
0x400115d	    0x3b0500000000	            cmp eax, dword [0x04001163] 	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4001163	            0x7c0b	                            jl 0x4001170	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4001165	    0x66c705000000	                mov word [0x0400116e], 0	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400116e	            0xeb09	                           jmp 0x4001179	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4001170	            0x4898	                                    cdqe	      1104	ui.c	FUNCTION_32	ELSE_2
0x4001172	    0x488905000000	            mov qword [0x04001179], rax 	      1104	ui.c	FUNCTION_32	ELSE_2
0x4001179	    0x8b0500000000	            mov eax, dword [0x0400117f] 	      1107	ui.c	FUNCTION_32	IF_4
0x400117f	            0x29f8	                            sub eax, edi	      1107	ui.c	FUNCTION_32	IF_4
0x4001181	            0x790a	                           jns 0x400118d	      1107	ui.c	FUNCTION_32	IF_4
0x4001183	    0x66c705000000	                mov word [0x0400118c], 0	      1108	ui.c	FUNCTION_32	IF_4
0x400118c	              0xc3	                                     ret	      1108	ui.c	FUNCTION_32	IF_4
0x400118d	    0x8b1500000000	            mov edx, dword [0x04001193] 	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001193	            0x39d0	                            cmp eax, edx	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001195	            0x7c0e	                            jl 0x40011a5	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4001197	          0x83ea01	                              sub edx, 1	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400119a	          0x4863d2	                         movsxd rdx, edx	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400119d	    0x488915000000	            mov qword [0x040011a4], rdx 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40011a4	              0xc3	                                     ret	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40011a5	            0x4898	                                    cdqe	      1112	ui.c	FUNCTION_32	ELSE_4
0x40011a7	    0x488905000000	            mov qword [0x040011ae], rax 	      1112	ui.c	FUNCTION_32	ELSE_4
0x40011ae	            0xf3c3	                                     ret	      1112	ui.c	FUNCTION_32	ELSE_4
clip_x11_lose_selection	CALL,3:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	16
0x4002a37	              0x55	                                push rbp	      2501	ui.c	FUNCTION_69
0x4002a38	              0x53	                                push rbx	      2501	ui.c	FUNCTION_69
0x4002a39	        0x4883ec08	                              sub rsp, 8	      2501	ui.c	FUNCTION_69
0x4002a3d	          0x4889fb	                            mov rbx, rdi	      2501	ui.c	FUNCTION_69
0x4002a40	          0x4889f5	                            mov rbp, rsi	      2501	ui.c	FUNCTION_69
0x4002a43	      0xe800000000	                          call 0x4002a48	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a48	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a4b	      0xe800000000	                          call 0x4002a50	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a50	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a54	          0x4889c2	                            mov rdx, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a57	          0x4889df	                            mov rdi, rbx	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a5a	      0xe800000000	                          call 0x4002a5f	      2502	ui.c	FUNCTION_69	CALL_1
0x4002a5f	        0x4883c408	                              add rsp, 8	      2504	ui.c	FUNCTION_69
0x4002a63	              0x5b	                                 pop rbx	      2504	ui.c	FUNCTION_69
0x4002a64	              0x5d	                                 pop rbp	      2504	ui.c	FUNCTION_69
0x4002a65	              0xc3	                                     ret	      2504	ui.c	FUNCTION_69
yank_cut_buffer0	CALL,12:SWITCH,0:FOR,0:functions,0:IF,6:ELSE,0:DO,0:WHILE,0	74
0x4002b6d	            0x4155	                                push r13	      2563	ui.c	FUNCTION_74
0x4002b6f	            0x4154	                                push r12	      2563	ui.c	FUNCTION_74
0x4002b71	              0x55	                                push rbp	      2563	ui.c	FUNCTION_74
0x4002b72	              0x53	                                push rbx	      2563	ui.c	FUNCTION_74
0x4002b73	        0x4883ec38	                           sub rsp, 0x38	      2563	ui.c	FUNCTION_74
0x4002b77	          0x4889f5	                            mov rbp, rsi	      2563	ui.c	FUNCTION_74
0x4002b7a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2563	ui.c	FUNCTION_74
0x4002b83	      0x4889442428	             mov qword [rsp + 0x28], rax	      2563	ui.c	FUNCTION_74
0x4002b88	            0x31c0	                            xor eax, eax	      2563	ui.c	FUNCTION_74
0x4002b8a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2564	ui.c	FUNCTION_74
0x4002b92	      0xba00000000	                              mov edx, 0	      2565	ui.c	FUNCTION_74	CALL_1
0x4002b97	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      2565	ui.c	FUNCTION_74	CALL_1
0x4002b9c	      0xe800000000	                          call 0x4002ba1	      2565	ui.c	FUNCTION_74	CALL_1
0x4002ba1	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2567	ui.c	FUNCTION_74	IF_1
0x4002ba6	     0xf8ed8000000	                           jle 0x4002c84	      2567	ui.c	FUNCTION_74	IF_1
0x4002bac	          0x4889c3	                            mov rbx, rax	      2567	ui.c	FUNCTION_74	IF_1
0x4002baf	    0x833d00000000	               cmp dword [0x04002bb6], 0	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4002bb6	            0x747f	                            je 0x4002c37	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4002bb8	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2581	ui.c	FUNCTION_74	IF_1	IF_2
0x4002bc0	    0x488b15000000	            mov rdx, qword [0x04002bc7] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bc7	      0xbe00000000	                              mov esi, 0	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bcc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bd1	      0xe800000000	                          call 0x4002bd6	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bd6	          0x83f801	                              cmp eax, 1	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bd9	            0x755c	                           jne 0x4002c37	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4002bdb	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4002be0	          0x4889de	                            mov rsi, rbx	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4002be3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4002be8	      0xe800000000	                          call 0x4002bed	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4002bed	          0x4989c4	                            mov r12, rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4002bf0	    0x41bd00000000	                             mov r13d, 0	      2570	ui.c	FUNCTION_74	IF_1
0x4002bf6	          0x4885c0	                           test rax, rax	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4002bf9	            0x7423	                            je 0x4002c1e	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4002bfb	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4002c00	          0x4889e9	                            mov rcx, rbp	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4002c03	          0x4889c6	                            mov rsi, rax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4002c06	      0xbf00000000	                              mov edi, 0	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4002c0b	      0xe800000000	                          call 0x4002c10	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4002c10	          0x4c89e7	                            mov rdi, r12	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4002c13	      0xe800000000	                          call 0x4002c18	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4002c18	    0x41bd01000000	                             mov r13d, 1	      2589	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4002c1e	      0xba00000000	                              mov edx, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4002c23	      0xbe00000000	                              mov esi, 0	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4002c28	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4002c2d	      0xe800000000	                          call 0x4002c32	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4002c32	          0x4585ed	                         test r13d, r13d	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x4002c35	            0x7515	                           jne 0x4002c4c	      2594	ui.c	FUNCTION_74	IF_1	IF_5
0x4002c37	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4002c3c	          0x4889e9	                            mov rcx, rbp	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4002c3f	          0x4889de	                            mov rsi, rbx	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4002c42	      0xbf00000000	                              mov edi, 0	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4002c47	      0xe800000000	                          call 0x4002c4c	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4002c4c	          0x4889df	                            mov rdi, rbx	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4002c4f	      0xe800000000	                          call 0x4002c54	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4002c54	    0x48833d000000	               cmp qword [0x04002c5c], 0	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4002c5c	            0x7e26	                           jle 0x4002c84	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4002c5e	      0xe800000000	                          call 0x4002c63	      2600	ui.c	FUNCTION_74	IF_1	IF_6	CALL_9
0x4002c63	      0xba05000000	                              mov edx, 5	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c68	      0xbe00000000	                              mov esi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c6d	      0xbf00000000	                              mov edi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c72	      0xe800000000	                          call 0x4002c77	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c77	          0x4889c7	                            mov rdi, rax	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c7a	      0xe800000000	                          call 0x4002c7f	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4002c7f	      0xe800000000	                          call 0x4002c84	      2602	ui.c	FUNCTION_74	IF_1	IF_6	CALL_12
0x4002c84	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2605	ui.c	FUNCTION_74
0x4002c89	    0x644833042528	                xor rax, qword fs:[0x28]	      2605	ui.c	FUNCTION_74
0x4002c92	            0x7405	                            je 0x4002c99	      2605	ui.c	FUNCTION_74
0x4002c94	      0xe800000000	                          call 0x4002c99	      2605	ui.c	FUNCTION_74
0x4002c99	        0x4883c438	                           add rsp, 0x38	      2605	ui.c	FUNCTION_74
0x4002c9d	              0x5b	                                 pop rbx	      2605	ui.c	FUNCTION_74
0x4002c9e	              0x5d	                                 pop rbp	      2605	ui.c	FUNCTION_74
0x4002c9f	            0x415c	                                 pop r12	      2605	ui.c	FUNCTION_74
0x4002ca1	            0x415d	                                 pop r13	      2605	ui.c	FUNCTION_74
0x4002ca3	              0xc3	                                     ret	      2605	ui.c	FUNCTION_74
clip_gen_owner_exists	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	8
0x4002b4f	        0x4883ec08	                              sub rsp, 8	      1563	ui.c	FUNCTION_43
0x4002b53	    0x833d00000000	               cmp dword [0x04002b5a], 0	      1566	ui.c	FUNCTION_43	IF_1
0x4002b5a	            0x7407	                            je 0x4002b63	      1566	ui.c	FUNCTION_43	IF_1
0x4002b5c	      0xe800000000	                          call 0x4002b61	      1567	ui.c	FUNCTION_43	CALL_1
0x4002b61	            0xeb05	                           jmp 0x4002b68	      1567	ui.c	FUNCTION_43	CALL_1
0x4002b63	      0xe800000000	                          call 0x4002b68	      1570	ui.c	FUNCTION_43	CALL_2
0x4002b68	        0x4883c408	                              add rsp, 8	      1574	ui.c	FUNCTION_43
0x4002b6c	              0xc3	                                     ret	      1574	ui.c	FUNCTION_43
ui_inchar_undo	CALL,5:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,1:DO,0:WHILE,0	58
0x4000c38	            0x4157	                                push r15	        77	ui.c	FUNCTION_2
0x4000c3a	            0x4156	                                push r14	        77	ui.c	FUNCTION_2
0x4000c3c	            0x4155	                                push r13	        77	ui.c	FUNCTION_2
0x4000c3e	            0x4154	                                push r12	        77	ui.c	FUNCTION_2
0x4000c40	              0x55	                                push rbp	        77	ui.c	FUNCTION_2
0x4000c41	              0x53	                                push rbx	        77	ui.c	FUNCTION_2
0x4000c42	        0x4883ec18	                           sub rsp, 0x18	        77	ui.c	FUNCTION_2
0x4000c46	      0x48897c2408	                mov qword [rsp + 8], rdi	        77	ui.c	FUNCTION_2
0x4000c4b	            0x89f5	                            mov ebp, esi	        77	ui.c	FUNCTION_2
0x4000c4d	    0x48833d000000	               cmp qword [0x04000c55], 0	        82	ui.c	FUNCTION_2	IF_1
0x4000c55	            0x7413	                            je 0x4000c6a	        82	ui.c	FUNCTION_2	IF_1
0x4000c57	          0x4189f4	                           mov r12d, esi	        83	ui.c	FUNCTION_2	IF_1
0x4000c5a	    0x442b25000000	            sub r12d, dword [0x04000c61]	        83	ui.c	FUNCTION_2	IF_1
0x4000c61	    0x440325000000	            add r12d, dword [0x04000c68]	        83	ui.c	FUNCTION_2	IF_1
0x4000c68	            0xeb03	                           jmp 0x4000c6d	        83	ui.c	FUNCTION_2	IF_1
0x4000c6a	          0x4189f4	                           mov r12d, esi	        81	ui.c	FUNCTION_2
0x4000c6d	          0x4489e7	                           mov edi, r12d	        84	ui.c	FUNCTION_2	CALL_1
0x4000c70	      0xe800000000	                          call 0x4000c75	        84	ui.c	FUNCTION_2	CALL_1
0x4000c75	          0x4989c5	                            mov r13, rax	        84	ui.c	FUNCTION_2	CALL_1
0x4000c78	          0x4885c0	                           test rax, rax	        85	ui.c	FUNCTION_2	IF_2
0x4000c7b	            0x747b	                            je 0x4000cf8	        85	ui.c	FUNCTION_2	IF_2
0x4000c7d	    0x4c8b35000000	            mov r14, qword [0x04000c84] 	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000c84	          0x4d85f6	                           test r14, r14	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000c87	            0x7447	                            je 0x4000cd0	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x4000c89	    0x8b1d00000000	            mov ebx, dword [0x04000c8f] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000c8f	    0x8b0500000000	            mov eax, dword [0x04000c95] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000c95	          0x4c63f8	                         movsxd r15, eax	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x4000c98	            0x89da	                            mov edx, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4000c9a	            0x29c2	                            sub edx, eax	        59	string3.h	FUNCTION_83	CALL_3
0x4000c9c	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_83	CALL_3
0x4000c9f	        0x4b8d343e	                    lea rsi, [r14 + r15]	        59	string3.h	FUNCTION_83	CALL_3
0x4000ca3	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_83	CALL_3
0x4000ca6	      0xe800000000	                          call 0x4000cab	        59	string3.h	FUNCTION_83	CALL_3
0x4000cab	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_83	CALL_3
0x4000cae	          0x4863fb	                         movsxd rdi, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4000cb1	          0x4889fb	                            mov rbx, rdi	        59	string3.h	FUNCTION_83	CALL_3
0x4000cb4	          0x4c29fb	                            sub rbx, r15	        59	string3.h	FUNCTION_83	CALL_3
0x4000cb7	      0x498d7c1d00	                    lea rdi, [r13 + rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x4000cbc	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_83	CALL_3
0x4000cc1	      0xe800000000	                          call 0x4000cc6	        59	string3.h	FUNCTION_83	CALL_3
0x4000cc6	          0x4c89f7	                            mov rdi, r14	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000cc9	      0xe800000000	                          call 0x4000cce	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000cce	            0xeb10	                           jmp 0x4000ce0	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000cd0	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_83	CALL_3
0x4000cd3	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_83	CALL_3
0x4000cd8	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4000cdb	      0xe800000000	                          call 0x4000ce0	        59	string3.h	FUNCTION_83	CALL_3
0x4000ce0	    0x4c892d000000	            mov qword [0x04000ce7], r13 	        95	ui.c	FUNCTION_2	IF_2
0x4000ce7	    0x448925000000	           mov dword [0x04000cee], r12d 	        96	ui.c	FUNCTION_2	IF_2
0x4000cee	    0xc70500000000	               mov dword [0x04000cf8], 0	        97	ui.c	FUNCTION_2	IF_2
0x4000cf8	        0x4883c418	                           add rsp, 0x18	        99	ui.c	FUNCTION_2
0x4000cfc	              0x5b	                                 pop rbx	        99	ui.c	FUNCTION_2
0x4000cfd	              0x5d	                                 pop rbp	        99	ui.c	FUNCTION_2
0x4000cfe	            0x415c	                                 pop r12	        99	ui.c	FUNCTION_2
0x4000d00	            0x415d	                                 pop r13	        99	ui.c	FUNCTION_2
0x4000d02	            0x415e	                                 pop r14	        99	ui.c	FUNCTION_2
0x4000d04	            0x415f	                                 pop r15	        99	ui.c	FUNCTION_2
0x4000d06	              0xc3	                                     ret	        99	ui.c	FUNCTION_2
ui_wait_for_chars_or_timer	CALL,3:SWITCH,0:FOR,0:functions,0:IF,6:ELSE,0:DO,0:WHILE,1	68
0x4000d07	            0x4157	                                push r15	       221	ui.c	FUNCTION_4
0x4000d09	            0x4156	                                push r14	       221	ui.c	FUNCTION_4
0x4000d0b	            0x4155	                                push r13	       221	ui.c	FUNCTION_4
0x4000d0d	            0x4154	                                push r12	       221	ui.c	FUNCTION_4
0x4000d0f	              0x55	                                push rbp	       221	ui.c	FUNCTION_4
0x4000d10	              0x53	                                push rbx	       221	ui.c	FUNCTION_4
0x4000d11	        0x4883ec18	                           sub rsp, 0x18	       221	ui.c	FUNCTION_4
0x4000d15	          0x4989fd	                            mov r13, rdi	       221	ui.c	FUNCTION_4
0x4000d18	        0x48893424	                    mov qword [rsp], rsi	       221	ui.c	FUNCTION_4
0x4000d1c	        0x894c240c	              mov dword [rsp + 0xc], ecx	       221	ui.c	FUNCTION_4
0x4000d20	        0x4883ff09	                              cmp rdi, 9	       227	ui.c	FUNCTION_4	IF_1
0x4000d24	            0x7616	                           jbe 0x4000d3c	       227	ui.c	FUNCTION_4	IF_1
0x4000d26	          0x4989d4	                            mov r12, rdx	       227	ui.c	FUNCTION_4	IF_1
0x4000d29	    0x448b3d000000	           mov r15d, dword [0x04000d30] 	       224	ui.c	FUNCTION_4
0x4000d30	          0x4889fd	                            mov rbp, rdi	       224	ui.c	FUNCTION_4
0x4000d33	          0x4989fe	                            mov r14, rdi	       230	ui.c	FUNCTION_4	WHILE_1
0x4000d36	        0x49c1ee3f	                           shr r14, 0x3f	       230	ui.c	FUNCTION_4	WHILE_1
0x4000d3a	            0xeb63	                           jmp 0x4000d9f	       230	ui.c	FUNCTION_4	WHILE_1
0x4000d3c	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       228	ui.c	FUNCTION_4	CALL_1
0x4000d40	      0xbe00000000	                              mov esi, 0	       228	ui.c	FUNCTION_4	CALL_1
0x4000d45	        0x488b0424	                    mov rax, qword [rsp]	       228	ui.c	FUNCTION_4	CALL_1
0x4000d49	            0xffd0	                                call rax	       228	ui.c	FUNCTION_4	CALL_1
0x4000d4b	            0xeb6f	                           jmp 0x4000dbc	       228	ui.c	FUNCTION_4	CALL_1
0x4000d4d	      0xe800000000	                          call 0x4000d52	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4000d52	            0x89c3	                            mov ebx, eax	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4000d54	    0x443b3d000000	           cmp r15d, dword [0x04000d5b] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000d5b	            0x7553	                           jne 0x4000db0	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000d5d	            0x85c0	                           test eax, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d5f	            0x7e0c	                           jle 0x4000d6d	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d61	          0x4d85ed	                           test r13, r13	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d64	            0x7e09	                           jle 0x4000d6f	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d66	            0x4898	                                    cdqe	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d68	          0x4839c5	                            cmp rbp, rax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d6b	            0x7d02	                           jge 0x4000d6f	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d6d	            0x89eb	                            mov ebx, ebp	       241	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4000d6f	          0x4863db	                         movsxd rbx, ebx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d72	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d76	          0x4c89e6	                            mov rsi, r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d79	          0x4889df	                            mov rdi, rbx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d7c	        0x488b0424	                    mov rax, qword [rsp]	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d80	            0xffd0	                                call rax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d82	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d84	            0x7531	                           jne 0x4000db7	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4000d86	          0x4d85e4	                           test r12, r12	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000d89	            0x7407	                            je 0x4000d92	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000d8b	      0x41833c2400	                      cmp dword [r12], 0	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000d90	            0x752a	                           jne 0x4000dbc	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4000d92	          0x4889e8	                            mov rax, rbp	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000d95	          0x4829d8	                            sub rax, rbx	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000d98	          0x4d85ed	                           test r13, r13	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000d9b	        0x480f4fe8	                          cmovg rbp, rax	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x4000d9f	          0x4584f6	                         test r14b, r14b	       230	ui.c	FUNCTION_4	WHILE_1
0x4000da2	            0x75a9	                           jne 0x4000d4d	       230	ui.c	FUNCTION_4	WHILE_1
0x4000da4	          0x4885ed	                           test rbp, rbp	       230	ui.c	FUNCTION_4	WHILE_1
0x4000da7	            0x7fa4	                            jg 0x4000d4d	       230	ui.c	FUNCTION_4	WHILE_1
0x4000da9	      0xb800000000	                              mov eax, 0	       251	ui.c	FUNCTION_4
0x4000dae	            0xeb0c	                           jmp 0x4000dbc	       251	ui.c	FUNCTION_4
0x4000db0	      0xb800000000	                              mov eax, 0	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000db5	            0xeb05	                           jmp 0x4000dbc	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4000db7	      0xb801000000	                              mov eax, 1	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4000dbc	        0x4883c418	                           add rsp, 0x18	       252	ui.c	FUNCTION_4
0x4000dc0	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x4000dc1	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x4000dc2	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x4000dc4	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x4000dc6	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x4000dc8	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x4000dca	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
clip_x11_set_selection	CALL,0:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	1
0x4002b1d	            0xf3c3	                                     ret	      2546	ui.c	FUNCTION_72
x11_setup_atoms	CALL,8:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	44
0x400293e	              0x53	                                push rbx	      2048	ui.c	FUNCTION_62
0x400293f	          0x4889fb	                            mov rbx, rdi	      2048	ui.c	FUNCTION_62
0x4002942	      0xba00000000	                              mov edx, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x4002947	      0xbe00000000	                              mov esi, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x400294c	      0xe800000000	                          call 0x4002951	      2049	ui.c	FUNCTION_62	CALL_1
0x4002951	    0x488905000000	            mov qword [0x04002958], rax 	      2049	ui.c	FUNCTION_62	CALL_1
0x4002958	      0xba00000000	                              mov edx, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x400295d	      0xbe00000000	                              mov esi, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x4002962	          0x4889df	                            mov rdi, rbx	      2051	ui.c	FUNCTION_62	CALL_2
0x4002965	      0xe800000000	                          call 0x400296a	      2051	ui.c	FUNCTION_62	CALL_2
0x400296a	    0x488905000000	            mov qword [0x04002971], rax 	      2051	ui.c	FUNCTION_62	CALL_2
0x4002971	      0xba00000000	                              mov edx, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x4002976	      0xbe00000000	                              mov esi, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x400297b	          0x4889df	                            mov rdi, rbx	      2052	ui.c	FUNCTION_62	CALL_3
0x400297e	      0xe800000000	                          call 0x4002983	      2052	ui.c	FUNCTION_62	CALL_3
0x4002983	    0x488905000000	            mov qword [0x0400298a], rax 	      2052	ui.c	FUNCTION_62	CALL_3
0x400298a	      0xba00000000	                              mov edx, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x400298f	      0xbe00000000	                              mov esi, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x4002994	          0x4889df	                            mov rdi, rbx	      2054	ui.c	FUNCTION_62	CALL_4
0x4002997	      0xe800000000	                          call 0x400299c	      2054	ui.c	FUNCTION_62	CALL_4
0x400299c	    0x488905000000	            mov qword [0x040029a3], rax 	      2054	ui.c	FUNCTION_62	CALL_4
0x40029a3	      0xba00000000	                              mov edx, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x40029a8	      0xbe00000000	                              mov esi, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x40029ad	          0x4889df	                            mov rdi, rbx	      2055	ui.c	FUNCTION_62	CALL_5
0x40029b0	      0xe800000000	                          call 0x40029b5	      2055	ui.c	FUNCTION_62	CALL_5
0x40029b5	    0x488905000000	            mov qword [0x040029bc], rax 	      2055	ui.c	FUNCTION_62	CALL_5
0x40029bc	      0xba00000000	                              mov edx, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x40029c1	      0xbe00000000	                              mov esi, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x40029c6	          0x4889df	                            mov rdi, rbx	      2056	ui.c	FUNCTION_62	CALL_6
0x40029c9	      0xe800000000	                          call 0x40029ce	      2056	ui.c	FUNCTION_62	CALL_6
0x40029ce	    0x488905000000	            mov qword [0x040029d5], rax 	      2056	ui.c	FUNCTION_62	CALL_6
0x40029d5	    0x48c705000000	               mov qword [0x040029e0], 1	      2057	ui.c	FUNCTION_62
0x40029e0	      0xba00000000	                              mov edx, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x40029e5	      0xbe00000000	                              mov esi, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x40029ea	          0x4889df	                            mov rdi, rbx	      2058	ui.c	FUNCTION_62	CALL_7
0x40029ed	      0xe800000000	                          call 0x40029f2	      2058	ui.c	FUNCTION_62	CALL_7
0x40029f2	    0x488905000000	            mov qword [0x040029f9], rax 	      2058	ui.c	FUNCTION_62	CALL_7
0x40029f9	      0xba00000000	                              mov edx, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x40029fe	      0xbe00000000	                              mov esi, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x4002a03	          0x4889df	                            mov rdi, rbx	      2059	ui.c	FUNCTION_62	CALL_8
0x4002a06	      0xe800000000	                          call 0x4002a0b	      2059	ui.c	FUNCTION_62	CALL_8
0x4002a0b	    0x488905000000	            mov qword [0x04002a12], rax 	      2059	ui.c	FUNCTION_62	CALL_8
0x4002a12	              0x5b	                                 pop rbx	      2060	ui.c	FUNCTION_62
0x4002a13	              0xc3	                                     ret	      2060	ui.c	FUNCTION_62
vim_used_in_input_buf	CALL,0:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	2
0x4001b2e	    0x8b0500000000	            mov eax, dword [0x04001b34] 	      1643	ui.c	FUNCTION_47
0x4001b34	              0xc3	                                     ret	      1643	ui.c	FUNCTION_47
end_global_changes	CALL,4:SWITCH,0:FOR,0:functions,0:IF,5:ELSE,0:DO,0:WHILE,0	31
0x4001554	    0x8b0500000000	            mov eax, dword [0x0400155a] 	       643	ui.c	FUNCTION_21	IF_1
0x400155a	          0x83e801	                              sub eax, 1	       643	ui.c	FUNCTION_21	IF_1
0x400155d	    0x890500000000	            mov dword [0x04001563], eax 	       643	ui.c	FUNCTION_21	IF_1
0x4001563	            0x85c0	                           test eax, eax	       643	ui.c	FUNCTION_21	IF_1
0x4001565	            0x7f79	                            jg 0x40015e0	       643	ui.c	FUNCTION_21	IF_1
0x4001567	    0x833d00000000	               cmp dword [0x0400156e], 0	       646	ui.c	FUNCTION_21	IF_2
0x400156e	            0x7572	                           jne 0x40015e2	       646	ui.c	FUNCTION_21	IF_2
0x4001570	    0xc70500000000	               mov dword [0x0400157a], 1	       648	ui.c	FUNCTION_21	IF_2
0x400157a	    0x8b0500000000	            mov eax, dword [0x04001580] 	       649	ui.c	FUNCTION_21	IF_2
0x4001580	    0x890500000000	            mov dword [0x04001586], eax 	       649	ui.c	FUNCTION_21	IF_2
0x4001586	    0xc70500000000	               mov dword [0x04001590], 0	       650	ui.c	FUNCTION_21	IF_2
0x4001590	    0x833d00000000	               cmp dword [0x04001597], 0	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001597	            0x7449	                            je 0x40015e2	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001599	        0x4883ec08	                              sub rsp, 8	       642	ui.c	FUNCTION_21
0x400159d	            0xa801	                              test al, 1	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x400159f	            0x7414	                            je 0x40015b5	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x40015a1	      0xbf00000000	                              mov edi, 0	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x40015a6	      0xe800000000	                          call 0x40015ab	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x40015ab	      0xbf00000000	                              mov edi, 0	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x40015b0	      0xe800000000	                          call 0x40015b5	       658	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_2
0x40015b5	    0xf60500000000	               test byte [0x040015bc], 2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x40015bc	            0x7414	                            je 0x40015d2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x40015be	      0xbf00000000	                              mov edi, 0	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x40015c3	      0xe800000000	                          call 0x40015c8	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x40015c8	      0xbf00000000	                              mov edi, 0	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x40015cd	      0xe800000000	                          call 0x40015d2	       663	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_4
0x40015d2	    0xc70500000000	               mov dword [0x040015dc], 0	       667	ui.c	FUNCTION_21
0x40015dc	        0x4883c408	                              add rsp, 8	       668	ui.c	FUNCTION_21
0x40015e0	            0xf3c3	                                     ret	       668	ui.c	FUNCTION_21
0x40015e2	    0xc70500000000	               mov dword [0x040015ec], 0	       667	ui.c	FUNCTION_21
0x40015ec	              0xc3	                                     ret	       667	ui.c	FUNCTION_21
ui_cursor_shape	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	5
0x40021a6	        0x4883ec08	                              sub rsp, 8	      1980	ui.c	FUNCTION_58
0x40021aa	      0xbf00000000	                              mov edi, 0	      1981	ui.c	FUNCTION_58	CALL_1
0x40021af	      0xe800000000	                          call 0x40021b4	      1981	ui.c	FUNCTION_58	CALL_1
0x40021b4	        0x4883c408	                              add rsp, 8	      1982	ui.c	FUNCTION_58
0x40021b8	              0xc3	                                     ret	      1982	ui.c	FUNCTION_58
mouse_find_win	CALL,1:SWITCH,0:FOR,3:functions,0:IF,5:ELSE,1:DO,0:WHILE,0	62
0x400301c	    0x488b05000000	            mov rax, qword [0x04003023] 	      3166	ui.c	FUNCTION_77
0x4003023	    0x488b15000000	            mov rdx, qword [0x0400302a] 	      3167	ui.c	FUNCTION_77
0x400302a	    0x8b929c000000	            mov edx, dword [rdx + 0x9c] 	      3167	ui.c	FUNCTION_77
0x4003030	            0x2917	                    sub dword [rdi], edx	      3167	ui.c	FUNCTION_77
0x4003032	           0xfb610	                   movzx edx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003035	            0x84d2	                             test dl, dl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003037	            0x7461	                            je 0x400309a	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4003039	          0x80fa01	                               cmp dl, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x400303c	            0x752e	                           jne 0x400306c	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x400303e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003042	      0x4883782000	               cmp qword [rax + 0x20], 0	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003047	            0x74e9	                            je 0x4003032	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003049	            0x8b16	                    mov edx, dword [rsi]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400304b	          0x8b4804	                mov ecx, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400304e	            0x39ca	                            cmp edx, ecx	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003050	            0x7d09	                           jge 0x400305b	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003052	            0xebde	                           jmp 0x4003032	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003054	          0x8b4804	                mov ecx, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003057	            0x39d1	                            cmp ecx, edx	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4003059	            0x7fd7	                            jg 0x4003032	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400305b	            0x29ca	                            sub edx, ecx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400305d	            0x8916	                    mov dword [rsi], edx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400305f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003063	      0x4883782000	               cmp qword [rax + 0x20], 0	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4003068	            0x75ea	                           jne 0x4003054	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400306a	            0xebc6	                           jmp 0x4003032	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400306c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003070	      0x4883782000	               cmp qword [rax + 0x20], 0	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003075	            0x74bb	                            je 0x4003032	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003077	            0x8b17	                    mov edx, dword [rdi]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003079	          0x8b480c	              mov ecx, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x400307c	            0x39ca	                            cmp edx, ecx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x400307e	            0x7d09	                           jge 0x4003089	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003080	            0xebb0	                           jmp 0x4003032	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003082	          0x8b480c	              mov ecx, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003085	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003087	            0x7fa9	                            jg 0x4003032	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4003089	            0x29ca	                            sub edx, ecx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x400308b	            0x8917	                    mov dword [rdi], edx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x400308d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003091	      0x4883782000	               cmp qword [rax + 0x20], 0	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003096	            0x75ea	                           jne 0x4003082	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x4003098	            0xeb98	                           jmp 0x4003032	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x400309a	    0x488b15000000	            mov rdx, qword [0x040030a1] 	      3193	ui.c	FUNCTION_77	CALL_1
0x40030a1	          0x4885d2	                           test rdx, rdx	      3193	ui.c	FUNCTION_77	CALL_1
0x40030a4	            0x7428	                            je 0x40030ce	      3193	ui.c	FUNCTION_77	CALL_1
0x40030a6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3194	ui.c	FUNCTION_77	IF_5
0x40030aa	          0x4839c2	                            cmp rdx, rax	      3194	ui.c	FUNCTION_77	IF_5
0x40030ad	            0x7510	                           jne 0x40030bf	      3194	ui.c	FUNCTION_77	IF_5
0x40030af	            0xeb05	                           jmp 0x40030b6	      3194	ui.c	FUNCTION_77	IF_5
0x40030b1	          0x4839c2	                            cmp rdx, rax	      3194	ui.c	FUNCTION_77	IF_5
0x40030b4	            0x7509	                           jne 0x40030bf	      3194	ui.c	FUNCTION_77	IF_5
0x40030b6	    0x8b90a8010000	           mov edx, dword [rax + 0x1a8] 	      3197	ui.c	FUNCTION_77	IF_5
0x40030bc	            0x2917	                    sub dword [rdi], edx	      3197	ui.c	FUNCTION_77	IF_5
0x40030be	              0xc3	                                     ret	      3199	ui.c	FUNCTION_77	IF_5
0x40030bf	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      3193	ui.c	FUNCTION_77	CALL_1
0x40030c3	          0x4885d2	                           test rdx, rdx	      3193	ui.c	FUNCTION_77	CALL_1
0x40030c6	            0x75e9	                           jne 0x40030b1	      3193	ui.c	FUNCTION_77	CALL_1
0x40030c8	      0xb800000000	                              mov eax, 0	      3201	ui.c	FUNCTION_77
0x40030cd	              0xc3	                                     ret	      3201	ui.c	FUNCTION_77
0x40030ce	      0xb800000000	                              mov eax, 0	      3201	ui.c	FUNCTION_77
0x40030d3	              0xc3	                                     ret	      3202	ui.c	FUNCTION_77
clip_may_clear_selection	CALL,1:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	13
0x4001104	    0x66833d000000	                cmp word [0x0400110c], 2	      1079	ui.c	FUNCTION_31	IF_1
0x400110c	            0x752a	                           jne 0x4001138	      1079	ui.c	FUNCTION_31	IF_1
0x400110e	          0x4863f6	                         movsxd rsi, esi	      1080	ui.c	FUNCTION_31	IF_1
0x4001111	    0x483b35000000	            cmp rsi, qword [0x04001118] 	      1080	ui.c	FUNCTION_31	IF_1
0x4001118	            0x7c1e	                            jl 0x4001138	      1080	ui.c	FUNCTION_31	IF_1
0x400111a	          0x4863ff	                         movsxd rdi, edi	      1081	ui.c	FUNCTION_31	IF_1
0x400111d	    0x483b3d000000	            cmp rdi, qword [0x04001124] 	      1081	ui.c	FUNCTION_31	IF_1
0x4001124	            0x7f12	                            jg 0x4001138	      1081	ui.c	FUNCTION_31	IF_1
0x4001126	        0x4883ec08	                              sub rsp, 8	      1078	ui.c	FUNCTION_31
0x400112a	      0xbf00000000	                              mov edi, 0	      1082	ui.c	FUNCTION_31	CALL_1
0x400112f	      0xe800000000	                          call 0x4001134	      1082	ui.c	FUNCTION_31	CALL_1
0x4001134	        0x4883c408	                              add rsp, 8	      1083	ui.c	FUNCTION_31
0x4001138	            0xf3c3	                                     ret	      1083	ui.c	FUNCTION_31
clip_x11_convert_selection_cb	CALL,15:SWITCH,0:FOR,0:functions,0:IF,14:ELSE,5:DO,0:WHILE,0	222
0x40004d7	            0x4157	                                push r15	      2355	ui.c	FUNCTION_67
0x40004d9	            0x4156	                                push r14	      2355	ui.c	FUNCTION_67
0x40004db	            0x4155	                                push r13	      2355	ui.c	FUNCTION_67
0x40004dd	            0x4154	                                push r12	      2355	ui.c	FUNCTION_67
0x40004df	              0x55	                                push rbp	      2355	ui.c	FUNCTION_67
0x40004e0	              0x53	                                push rbx	      2355	ui.c	FUNCTION_67
0x40004e1	        0x4883ec58	                           sub rsp, 0x58	      2355	ui.c	FUNCTION_67
0x40004e5	        0x48890c24	                    mov qword [rsp], rcx	      2355	ui.c	FUNCTION_67
0x40004e9	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	      2355	ui.c	FUNCTION_67
0x40004f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2355	ui.c	FUNCTION_67
0x40004fa	      0x4889442448	             mov qword [rsp + 0x48], rax	      2355	ui.c	FUNCTION_67
0x40004ff	            0x31c0	                            xor eax, eax	      2355	ui.c	FUNCTION_67
0x4000501	          0x488b06	                    mov rax, qword [rsi]	      2363	ui.c	FUNCTION_67	IF_1
0x4000504	    0x483b05000000	            cmp rax, qword [0x0400050b] 	      2366	ui.c	FUNCTION_67	ELSE_1
0x400050b	      0xb800000000	                              mov eax, 0	      2366	ui.c	FUNCTION_67	ELSE_1
0x4000510	    0x41bd00000000	                             mov r13d, 0	      2366	ui.c	FUNCTION_67	ELSE_1
0x4000516	        0x4c0f45e8	                         cmovne r13, rax	      2366	ui.c	FUNCTION_67	ELSE_1
0x400051a	      0xb800000000	                              mov eax, 0	      2369	ui.c	FUNCTION_67	IF_2
0x400051f	      0x41837d0400	                  cmp dword [r13 + 4], 0	      2368	ui.c	FUNCTION_67	IF_2
0x4000524	     0xf846c030000	                            je 0x4000896	      2368	ui.c	FUNCTION_67	IF_2
0x400052a	          0x4889d5	                            mov rbp, rdx	      2368	ui.c	FUNCTION_67	IF_2
0x400052d	          0x4d89c4	                             mov r12, r8	      2368	ui.c	FUNCTION_67	IF_2
0x4000530	          0x4c89cb	                             mov rbx, r9	      2368	ui.c	FUNCTION_67	IF_2
0x4000533	          0x488b12	                    mov rdx, qword [rdx]	      2372	ui.c	FUNCTION_67	IF_3
0x4000536	    0x483b15000000	            cmp rdx, qword [0x0400053d] 	      2372	ui.c	FUNCTION_67	IF_3
0x400053d	     0xf85a8000000	                           jne 0x40005eb	      2372	ui.c	FUNCTION_67	IF_3
0x4000543	    0x49c700000000	                       mov qword [r8], 0	      2376	ui.c	FUNCTION_67	IF_3
0x400054a	    0x488915000000	            mov qword [0x04000551], rdx 	      2378	ui.c	FUNCTION_67	IF_3
0x4000551	    0x488b05000000	            mov rax, qword [0x04000558] 	      2380	ui.c	FUNCTION_67	IF_3
0x4000558	    0x488905000000	            mov qword [0x0400055f], rax 	      2380	ui.c	FUNCTION_67	IF_3
0x400055f	    0x488b05000000	            mov rax, qword [0x04000566] 	      2382	ui.c	FUNCTION_67	IF_3
0x4000566	    0x488905000000	            mov qword [0x0400056d], rax 	      2382	ui.c	FUNCTION_67	IF_3
0x400056d	      0xb803000000	                              mov eax, 3	      2382	ui.c	FUNCTION_67	IF_3
0x4000572	    0x833d00000000	               cmp dword [0x04000579], 0	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x4000579	            0x7413	                            je 0x400058e	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x400057b	    0x488b05000000	            mov rax, qword [0x04000582] 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x4000582	    0x488905000000	            mov qword [0x04000589], rax 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x4000589	      0xb804000000	                              mov eax, 4	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x400058e	          0x4863d0	                         movsxd rdx, eax	      2387	ui.c	FUNCTION_67	IF_3
0x4000591	    0x48c704d50000	                 mov qword [rdx*8], 0x1f	      2387	ui.c	FUNCTION_67	IF_3
0x400059d	          0x8d5001	                      lea edx, [rax + 1]	      2388	ui.c	FUNCTION_67	IF_3
0x40005a0	          0x4863d2	                         movsxd rdx, edx	      2388	ui.c	FUNCTION_67	IF_3
0x40005a3	    0x488b0d000000	            mov rcx, qword [0x040005aa] 	      2388	ui.c	FUNCTION_67	IF_3
0x40005aa	    0x48890cd50000	                  mov qword [rdx*8], rcx	      2388	ui.c	FUNCTION_67	IF_3
0x40005b2	          0x8d5002	                      lea edx, [rax + 2]	      2389	ui.c	FUNCTION_67	IF_3
0x40005b5	          0x4863d2	                         movsxd rdx, edx	      2389	ui.c	FUNCTION_67	IF_3
0x40005b8	    0x488b0d000000	            mov rcx, qword [0x040005bf] 	      2389	ui.c	FUNCTION_67	IF_3
0x40005bf	    0x48890cd50000	                  mov qword [rdx*8], rcx	      2389	ui.c	FUNCTION_67	IF_3
0x40005c7	        0x488b3c24	                    mov rdi, qword [rsp]	      2391	ui.c	FUNCTION_67	IF_3
0x40005cb	    0x48c707040000	                      mov qword [rdi], 4	      2391	ui.c	FUNCTION_67	IF_3
0x40005d2	    0x41c706200000	                   mov dword [r14], 0x20	      2394	ui.c	FUNCTION_67	IF_3
0x40005d9	          0x83c003	                              add eax, 3	      2395	ui.c	FUNCTION_67	IF_3
0x40005dc	            0x4898	                                    cdqe	      2395	ui.c	FUNCTION_67	IF_3
0x40005de	          0x488903	                    mov qword [rbx], rax	      2395	ui.c	FUNCTION_67	IF_3
0x40005e1	      0xb801000000	                              mov eax, 1	      2396	ui.c	FUNCTION_67	IF_3
0x40005e6	      0xe9ab020000	                           jmp 0x4000896	      2396	ui.c	FUNCTION_67	IF_3
0x40005eb	        0x4883fa1f	                           cmp rdx, 0x1f	      2399	ui.c	FUNCTION_67	IF_5
0x40005ef	            0x743f	                            je 0x4000630	      2399	ui.c	FUNCTION_67	IF_5
0x40005f1	    0x483b15000000	            cmp rdx, qword [0x040005f8] 	      2401	ui.c	FUNCTION_67	IF_5
0x40005f8	            0x7436	                            je 0x4000630	      2401	ui.c	FUNCTION_67	IF_5
0x40005fa	    0x483b15000000	            cmp rdx, qword [0x04000601] 	      2402	ui.c	FUNCTION_67	IF_5
0x4000601	            0x7509	                           jne 0x400060c	      2402	ui.c	FUNCTION_67	IF_5
0x4000603	    0x833d00000000	               cmp dword [0x0400060a], 0	      2402	ui.c	FUNCTION_67	IF_5
0x400060a	            0x7524	                           jne 0x4000630	      2402	ui.c	FUNCTION_67	IF_5
0x400060c	    0x483b15000000	            cmp rdx, qword [0x04000613] 	      2404	ui.c	FUNCTION_67	IF_5
0x4000613	            0x741b	                            je 0x4000630	      2404	ui.c	FUNCTION_67	IF_5
0x4000615	    0x483b15000000	            cmp rdx, qword [0x0400061c] 	      2405	ui.c	FUNCTION_67	IF_5
0x400061c	            0x7412	                            je 0x4000630	      2405	ui.c	FUNCTION_67	IF_5
0x400061e	      0xb800000000	                              mov eax, 0	      2407	ui.c	FUNCTION_67	IF_5
0x4000623	    0x483b15000000	            cmp rdx, qword [0x0400062a] 	      2406	ui.c	FUNCTION_67	IF_5
0x400062a	     0xf8566020000	                           jne 0x4000896	      2406	ui.c	FUNCTION_67	IF_5
0x4000630	          0x4c89ef	                            mov rdi, r13	      2409	ui.c	FUNCTION_67	CALL_1
0x4000633	      0xe800000000	                          call 0x4000638	      2409	ui.c	FUNCTION_67	CALL_1
0x4000638	          0x4c89ea	                            mov rdx, r13	      2410	ui.c	FUNCTION_67	CALL_2
0x400063b	          0x4889de	                            mov rsi, rbx	      2410	ui.c	FUNCTION_67	CALL_2
0x400063e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2410	ui.c	FUNCTION_67	CALL_2
0x4000643	      0xe800000000	                          call 0x4000648	      2410	ui.c	FUNCTION_67	CALL_2
0x4000648	        0x8944240c	              mov dword [rsp + 0xc], eax	      2410	ui.c	FUNCTION_67	CALL_2
0x400064c	            0x85c0	                           test eax, eax	      2411	ui.c	FUNCTION_67	IF_6
0x400064e	     0xf883d020000	                            js 0x4000891	      2411	ui.c	FUNCTION_67	IF_6
0x4000654	    0x488b05000000	            mov rax, qword [0x0400065b] 	      2415	ui.c	FUNCTION_67	IF_7
0x400065b	        0x48394500	                    cmp qword [rbp], rax	      2415	ui.c	FUNCTION_67	IF_7
0x400065f	            0x7504	                           jne 0x4000665	      2415	ui.c	FUNCTION_67	IF_7
0x4000661	        0x48830301	                      add qword [rbx], 1	      2416	ui.c	FUNCTION_67	IF_7
0x4000665	    0x488b05000000	            mov rax, qword [0x0400066c] 	      2420	ui.c	FUNCTION_67	IF_8
0x400066c	        0x48394500	                    cmp qword [rbp], rax	      2420	ui.c	FUNCTION_67	IF_8
0x4000670	            0x7518	                           jne 0x400068a	      2420	ui.c	FUNCTION_67	IF_8
0x4000672	    0x488b3d000000	            mov rdi, qword [0x04000679] 	      2421	ui.c	FUNCTION_67	CALL_3
0x4000679	      0xb800000000	                              mov eax, 0	      2421	ui.c	FUNCTION_67	CALL_3
0x400067e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2421	ui.c	FUNCTION_67	CALL_3
0x4000685	            0xf2ae	              repne scasb al, byte [rdi]	      2421	ui.c	FUNCTION_67	CALL_3
0x4000687	          0x48290b	                    sub qword [rbx], rcx	      2421	ui.c	FUNCTION_67	CALL_3
0x400068a	          0x488b33	                    mov rsi, qword [rbx]	      2424	ui.c	FUNCTION_67	IF_9
0x400068d	    0x488b05000000	            mov rax, qword [0x04000694] 	      2424	ui.c	FUNCTION_67	IF_9
0x4000694	          0x4839c6	                            cmp rsi, rax	      2424	ui.c	FUNCTION_67	IF_9
0x4000697	            0x7708	                            ja 0x40006a1	      2424	ui.c	FUNCTION_67	IF_9
0x4000699	          0x48d1e8	                              shr rax, 1	      2424	ui.c	FUNCTION_67	IF_9
0x400069c	          0x4839c6	                            cmp rsi, rax	      2424	ui.c	FUNCTION_67	IF_9
0x400069f	            0x7715	                            ja 0x40006b6	      2424	ui.c	FUNCTION_67	IF_9
0x40006a1	          0x83c601	                              add esi, 1	      2425	ui.c	FUNCTION_67	CALL_4
0x40006a4	    0x488b3d000000	            mov rdi, qword [0x040006ab] 	      2425	ui.c	FUNCTION_67	CALL_4
0x40006ab	      0xe800000000	                          call 0x40006b0	      2425	ui.c	FUNCTION_67	CALL_4
0x40006b0	        0x49890424	                    mov qword [r12], rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40006b4	            0xeb0b	                           jmp 0x40006c1	      2425	ui.c	FUNCTION_67	CALL_4
0x40006b6	    0x488b05000000	            mov rax, qword [0x040006bd] 	      2427	ui.c	FUNCTION_67	ELSE_2
0x40006bd	        0x49890424	                    mov qword [r12], rax	      2427	ui.c	FUNCTION_67	ELSE_2
0x40006c1	        0x4d8b2c24	                    mov r13, qword [r12]	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40006c5	          0x4d85ed	                           test r13, r13	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40006c8	            0x7514	                           jne 0x40006de	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40006ca	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x40006cf	      0xe800000000	                          call 0x40006d4	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x40006d4	      0xb800000000	                              mov eax, 0	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40006d9	      0xe9b8010000	                           jmp 0x4000896	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40006de	    0x4c892d000000	            mov qword [0x040006e5], r13 	      2433	ui.c	FUNCTION_67
0x40006e5	          0x488b13	                    mov rdx, qword [rbx]	      2434	ui.c	FUNCTION_67
0x40006e8	    0x488915000000	            mov qword [0x040006ef], rdx 	      2434	ui.c	FUNCTION_67
0x40006ef	        0x4c8b7d00	                    mov r15, qword [rbp]	      2436	ui.c	FUNCTION_67	IF_11
0x40006f3	        0x4983ff1f	                           cmp r15, 0x1f	      2436	ui.c	FUNCTION_67	IF_11
0x40006f7	            0x7412	                            je 0x400070b	      2436	ui.c	FUNCTION_67	IF_11
0x40006f9	    0x4c3b3d000000	            cmp r15, qword [0x04000700] 	      2438	ui.c	FUNCTION_67	IF_11
0x4000700	            0x7526	                           jne 0x4000728	      2438	ui.c	FUNCTION_67	IF_11
0x4000702	    0x833d00000000	               cmp dword [0x04000709], 0	      2438	ui.c	FUNCTION_67	IF_11
0x4000709	            0x741d	                            je 0x4000728	      2438	ui.c	FUNCTION_67	IF_11
0x400070b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000710	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_83	CALL_3
0x4000713	      0xe800000000	                          call 0x4000718	        59	string3.h	FUNCTION_83	CALL_3
0x4000718	        0x488b4500	                    mov rax, qword [rbp]	      2443	ui.c	FUNCTION_67	IF_11
0x400071c	        0x488b3c24	                    mov rdi, qword [rsp]	      2443	ui.c	FUNCTION_67	IF_11
0x4000720	          0x488907	                    mov qword [rdi], rax	      2443	ui.c	FUNCTION_67	IF_11
0x4000723	      0xe951010000	                           jmp 0x4000879	      2443	ui.c	FUNCTION_67	IF_11
0x4000728	    0x4c3b3d000000	            cmp r15, qword [0x0400072f] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400072f	            0x740d	                            je 0x400073e	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000731	    0x4c3b3d000000	            cmp r15, qword [0x04000738] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000738	     0xf85ac000000	                           jne 0x40007ea	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400073e	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000743	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000748	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_83	CALL_3
0x400074b	      0xe800000000	                          call 0x4000750	        59	string3.h	FUNCTION_83	CALL_3
0x4000750	          0x488b03	                    mov rax, qword [rbx]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000753	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000758	        0xc6040200	                 mov byte [rdx + rax], 0	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400075c	    0x488b3d000000	            mov rdi, qword [0x04000763] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000763	    0x833d00000000	               cmp dword [0x0400076a], 0	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400076a	            0x7408	                            je 0x4000774	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400076c	      0xe800000000	                          call 0x4000771	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000771	          0x4889c7	                            mov rdi, rax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000774	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000779	      0xb901000000	                              mov ecx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400077e	      0xba01000000	                              mov edx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000783	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000788	      0xe800000000	                          call 0x400078d	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400078d	            0x85c0	                           test eax, eax	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x400078f	            0x7414	                            je 0x40007a5	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x4000791	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x4000796	      0xe800000000	                          call 0x400079b	      2458	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13	CALL_9
0x400079b	      0xb800000000	                              mov eax, 0	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40007a0	      0xe9f1000000	                           jmp 0x4000896	      2459	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40007a5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007aa	        0x49890424	                    mov qword [r12], rax	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007ae	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007b3	          0x488903	                    mov qword [rbx], rax	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007b6	    0x488b05000000	            mov rax, qword [0x040007bd] 	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007bd	        0x488b3c24	                    mov rdi, qword [rsp]	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007c1	          0x488907	                    mov qword [rdi], rax	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007c4	    0x488b3d000000	            mov rdi, qword [0x040007cb] 	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x40007cb	      0xe800000000	                          call 0x40007d0	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x40007d0	        0x498b0424	                    mov rax, qword [r12]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007d4	    0x488905000000	            mov qword [0x040007db], rax 	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007db	          0x488b03	                    mov rax, qword [rbx]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007de	    0x488905000000	            mov qword [0x040007e5], rax 	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007e5	      0xe98f000000	                           jmp 0x4000879	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40007ea	    0x4c3b3d000000	            cmp r15, qword [0x040007f1] 	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40007f1	            0x755a	                           jne 0x400084d	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40007f3	    0x488b3d000000	            mov rdi, qword [0x040007fa] 	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x40007fa	      0xb800000000	                              mov eax, 0	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x40007ff	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000806	            0xf2ae	              repne scasb al, byte [rdi]	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000808	          0x48f7d1	                                 not rcx	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x400080b	        0x488d69ff	                      lea rbp, [rcx - 1]	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x400080f	       0xfb644240c	            movzx eax, byte [rsp + 0xc] 	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000814	        0x41884500	                      mov byte [r13], al	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000818	        0x498d7d01	                      lea rdi, [r13 + 1]	       110	string3.h	FUNCTION_88	CALL_3
0x400081c	    0x488b35000000	            mov rsi, qword [0x04000823] 	       110	string3.h	FUNCTION_88	CALL_3
0x4000823	      0xe800000000	                          call 0x4000828	       110	string3.h	FUNCTION_88	CALL_3
0x4000828	          0x4863ed	                         movsxd rbp, ebp	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x400082b	          0x488b13	                    mov rdx, qword [rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x400082e	        0x4883ea02	                              sub rdx, 2	        59	string3.h	FUNCTION_83	CALL_3
0x4000832	          0x4829ea	                            sub rdx, rbp	        59	string3.h	FUNCTION_83	CALL_3
0x4000835	      0x498d7c2d02	                lea rdi, [r13 + rbp + 2]	        59	string3.h	FUNCTION_83	CALL_3
0x400083a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x400083f	      0xe800000000	                          call 0x4000844	        59	string3.h	FUNCTION_83	CALL_3
0x4000844	        0x488b0424	                    mov rax, qword [rsp]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000848	          0x4c8938	                    mov qword [rax], r15	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x400084b	            0xeb2c	                           jmp 0x4000879	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x400084d	       0xfb644240c	            movzx eax, byte [rsp + 0xc] 	      2481	ui.c	FUNCTION_67	ELSE_5
0x4000852	        0x41884500	                      mov byte [r13], al	      2481	ui.c	FUNCTION_67	ELSE_5
0x4000856	          0x488b13	                    mov rdx, qword [rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x4000859	        0x4883ea01	                              sub rdx, 1	        59	string3.h	FUNCTION_83	CALL_3
0x400085d	        0x498d7d01	                      lea rdi, [r13 + 1]	        59	string3.h	FUNCTION_83	CALL_3
0x4000861	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000866	      0xe800000000	                          call 0x400086b	        59	string3.h	FUNCTION_83	CALL_3
0x400086b	    0x488b05000000	            mov rax, qword [0x04000872] 	      2483	ui.c	FUNCTION_67	ELSE_5
0x4000872	        0x488b1c24	                    mov rbx, qword [rsp]	      2483	ui.c	FUNCTION_67	ELSE_5
0x4000876	          0x488903	                    mov qword [rbx], rax	      2483	ui.c	FUNCTION_67	ELSE_5
0x4000879	    0x41c706080000	                      mov dword [r14], 8	      2485	ui.c	FUNCTION_67
0x4000880	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2486	ui.c	FUNCTION_67	CALL_15
0x4000885	      0xe800000000	                          call 0x400088a	      2486	ui.c	FUNCTION_67	CALL_15
0x400088a	      0xb801000000	                              mov eax, 1	      2487	ui.c	FUNCTION_67
0x400088f	            0xeb05	                           jmp 0x4000896	      2487	ui.c	FUNCTION_67
0x4000891	      0xb800000000	                              mov eax, 0	      2412	ui.c	FUNCTION_67	IF_6
0x4000896	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2488	ui.c	FUNCTION_67
0x400089b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2488	ui.c	FUNCTION_67
0x40008a4	            0x7405	                            je 0x40008ab	      2488	ui.c	FUNCTION_67
0x40008a6	      0xe800000000	                          call 0x40008ab	      2488	ui.c	FUNCTION_67
0x40008ab	        0x4883c458	                           add rsp, 0x58	      2488	ui.c	FUNCTION_67
0x40008af	              0x5b	                                 pop rbx	      2488	ui.c	FUNCTION_67
0x40008b0	              0x5d	                                 pop rbp	      2488	ui.c	FUNCTION_67
0x40008b1	            0x415c	                                 pop r12	      2488	ui.c	FUNCTION_67
0x40008b3	            0x415d	                                 pop r13	      2488	ui.c	FUNCTION_67
0x40008b5	            0x415e	                                 pop r14	      2488	ui.c	FUNCTION_67
0x40008b7	            0x415f	                                 pop r15	      2488	ui.c	FUNCTION_67
0x40008b9	              0xc3	                                     ret	      2488	ui.c	FUNCTION_67
check_row	CALL,0:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	9
0x40021d2	            0x85ff	                           test edi, edi	      2006	ui.c	FUNCTION_60	IF_1
0x40021d4	            0x780f	                            js 0x40021e5	      2006	ui.c	FUNCTION_60	IF_1
0x40021d6	    0x8b1500000000	            mov edx, dword [0x040021dc] 	      2008	ui.c	FUNCTION_60	IF_2
0x40021dc	          0x8d42ff	                      lea eax, [rdx - 1]	      2009	ui.c	FUNCTION_60	IF_2
0x40021df	            0x39d7	                            cmp edi, edx	      2009	ui.c	FUNCTION_60	IF_2
0x40021e1	           0xf4cc7	                          cmovl eax, edi	      2009	ui.c	FUNCTION_60	IF_2
0x40021e4	              0xc3	                                     ret	      2009	ui.c	FUNCTION_60	IF_2
0x40021e5	      0xb800000000	                              mov eax, 0	      2007	ui.c	FUNCTION_60	IF_1
0x40021ea	              0xc3	                                     ret	      2011	ui.c	FUNCTION_60
clip_process_selection	CALL,28:SWITCH,1:FOR,0:functions,0:IF,20:ELSE,6:DO,0:WHILE,0	285
0x40023c1	            0x4157	                                push r15	       859	ui.c	FUNCTION_28
0x40023c3	            0x4156	                                push r14	       859	ui.c	FUNCTION_28
0x40023c5	            0x4155	                                push r13	       859	ui.c	FUNCTION_28
0x40023c7	            0x4154	                                push r12	       859	ui.c	FUNCTION_28
0x40023c9	              0x55	                                push rbp	       859	ui.c	FUNCTION_28
0x40023ca	              0x53	                                push rbx	       859	ui.c	FUNCTION_28
0x40023cb	        0x4883ec18	                           sub rsp, 0x18	       859	ui.c	FUNCTION_28
0x40023cf	          0x83ff03	                              cmp edi, 3	       864	ui.c	FUNCTION_28	IF_1
0x40023d2	     0xf85a7000000	                           jne 0x400247f	       864	ui.c	FUNCTION_28	IF_1
0x40023d8	    0x488b05000000	            mov rax, qword [0x040023df] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023df	    0x483905000000	            cmp qword [0x040023e6], rax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023e6	            0x7534	                           jne 0x400241c	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023e8	    0x8b0500000000	            mov eax, dword [0x040023ee] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023ee	    0x390500000000	            cmp dword [0x040023f4], eax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023f4	            0x7526	                           jne 0x400241c	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x40023f6	    0x833d00000000	               cmp dword [0x040023fd], 0	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x40023fd	            0x740f	                            je 0x400240e	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x40023ff	      0xbe00000000	                              mov esi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4002404	      0xbf00000000	                              mov edi, 0	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4002409	      0xe800000000	                          call 0x400240e	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x400240e	    0x66c705000000	                mov word [0x04002417], 0	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4002417	      0xe914040000	                           jmp 0x4002830	       874	ui.c	FUNCTION_28	IF_1	IF_2
0x400241c	      0xe800000000	                          call 0x4002421	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002421	            0x85c0	                           test eax, eax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002423	            0x752a	                           jne 0x400244f	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4002425	    0x833d00000000	               cmp dword [0x0400242c], 0	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400242c	            0x7418	                            je 0x4002446	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x400242e	      0xbe41000000	                           mov esi, 0x41	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4002433	    0x488b3d000000	            mov rdi, qword [0x0400243a] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x400243a	      0xe800000000	                          call 0x400243f	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x400243f	          0x4885c0	                           test rax, rax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002442	            0x750b	                           jne 0x400244f	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002444	            0xeb13	                           jmp 0x4002459	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4002446	    0x833d00000000	               cmp dword [0x0400244d], 0	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x400244d	            0x7422	                            je 0x4002471	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x400244f	      0xbf00000000	                              mov edi, 0	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x4002454	      0xe800000000	                          call 0x4002459	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x4002459	    0x833d00000000	               cmp dword [0x04002460], 0	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4002460	            0x740f	                            je 0x4002471	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4002462	      0xbe00000000	                              mov esi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4002467	      0xbf00000000	                              mov edi, 0	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x400246c	      0xe800000000	                          call 0x4002471	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4002471	    0x66c705000000	                mov word [0x0400247a], 2	       893	ui.c	FUNCTION_28	IF_1
0x400247a	      0xe9b1030000	                           jmp 0x4002830	       894	ui.c	FUNCTION_28	IF_1
0x400247f	          0x4189fd	                           mov r13d, edi	       894	ui.c	FUNCTION_28	IF_1
0x4002482	            0x89f5	                            mov ebp, esi	       894	ui.c	FUNCTION_28	IF_1
0x4002484	          0x4189cc	                           mov r12d, ecx	       894	ui.c	FUNCTION_28	IF_1
0x4002487	            0x89d7	                            mov edi, edx	       897	ui.c	FUNCTION_28	CALL_7
0x4002489	      0xe800000000	                          call 0x400248e	       897	ui.c	FUNCTION_28	CALL_7
0x400248e	            0x89c3	                            mov ebx, eax	       897	ui.c	FUNCTION_28	CALL_7
0x4002490	            0x89ef	                            mov edi, ebp	       898	ui.c	FUNCTION_28	CALL_8
0x4002492	      0xe800000000	                          call 0x4002497	       898	ui.c	FUNCTION_28	CALL_8
0x4002497	            0x89de	                            mov esi, ebx	       900	ui.c	FUNCTION_28	CALL_9
0x4002499	            0x89c7	                            mov edi, eax	       900	ui.c	FUNCTION_28	CALL_9
0x400249b	      0xe800000000	                          call 0x40024a0	       900	ui.c	FUNCTION_28	CALL_9
0x40024a0	            0x89c5	                            mov ebp, eax	       900	ui.c	FUNCTION_28	CALL_9
0x40024a2	    0x3b0500000000	            cmp eax, dword [0x040024a8] 	       903	ui.c	FUNCTION_28	IF_6
0x40024a8	            0x7515	                           jne 0x40024bf	       903	ui.c	FUNCTION_28	IF_6
0x40024aa	          0x4863c3	                         movsxd rax, ebx	       903	ui.c	FUNCTION_28	IF_6
0x40024ad	    0x483905000000	            cmp qword [0x040024b4], rax 	       903	ui.c	FUNCTION_28	IF_6
0x40024b4	            0x7509	                           jne 0x40024bf	       903	ui.c	FUNCTION_28	IF_6
0x40024b6	          0x4585e4	                         test r12d, r12d	       903	ui.c	FUNCTION_28	IF_6
0x40024b9	     0xf8471030000	                            je 0x4002830	       903	ui.c	FUNCTION_28	IF_6
0x40024bf	    0x66833d000000	                cmp word [0x040024c7], 2	       910	ui.c	FUNCTION_28	IF_7
0x40024c7	     0xf85dc000000	                           jne 0x40025a9	       910	ui.c	FUNCTION_28	IF_7
0x40024cd	        0x4183fd02	                             cmp r13d, 2	       910	ui.c	FUNCTION_28	IF_7
0x40024d1	     0xf85d2000000	                           jne 0x40025a9	       910	ui.c	FUNCTION_28	IF_7
0x40024d7	    0x448b2d000000	           mov r13d, dword [0x040024de] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024de	    0x4c8b35000000	            mov r14, qword [0x040024e5] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024e5	          0x4489e9	                           mov ecx, r13d	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024e8	          0x4489f2	                           mov edx, r14d	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024eb	            0x89ee	                            mov esi, ebp	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024ed	            0x89df	                            mov edi, ebx	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024ef	      0xe84cdbffff	               call sym.clip_compare_pos	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024f4	            0x85c0	                           test eax, eax	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024f6	            0x785a	                            js 0x4002552	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x40024f8	    0x8b0500000000	            mov eax, dword [0x040024fe] 	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x40024fe	        0x8944240c	              mov dword [rsp + 0xc], eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4002502	    0x4c8b3d000000	            mov r15, qword [0x04002509] 	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x4002509	            0x89c1	                            mov ecx, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x400250b	          0x4489fa	                           mov edx, r15d	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x400250e	            0x89ee	                            mov esi, ebp	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4002510	            0x89df	                            mov edi, ebx	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4002512	      0xe829dbffff	               call sym.clip_compare_pos	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4002517	            0x85c0	                           test eax, eax	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4002519	            0x795e	                           jns 0x4002579	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x400251b	          0x4d39fe	                            cmp r14, r15	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x400251e	            0x750f	                           jne 0x400252f	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x4002520	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002524	            0x29ea	                            sub edx, ebp	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002526	            0x89e8	                            mov eax, ebp	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4002528	          0x4429e8	                           sub eax, r13d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x400252b	            0x39c2	                            cmp edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x400252d	            0x7f23	                            jg 0x4002552	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x400252f	        0x438d0437	                    lea eax, [r15 + r14]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4002533	            0x29d8	                            sub eax, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4002535	            0x29d8	                            sub eax, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4002537	            0x85c0	                           test eax, eax	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4002539	            0x7f17	                            jg 0x4002552	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x400253b	            0x85c0	                           test eax, eax	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400253d	            0x753a	                           jne 0x4002579	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400253f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4002543	          0x4401e8	                           add eax, r13d	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4002546	      0xb902000000	                              mov ecx, 2	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400254b	              0x99	                                     cdq	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400254c	            0xf7f9	                                idiv ecx	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x400254e	            0x39c5	                            cmp ebp, eax	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4002550	            0x7d27	                           jge 0x4002579	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4002552	    0x488b05000000	            mov rax, qword [0x04002559] 	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4002559	    0x668905000000	               mov word [0x04002560], ax	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4002560	    0x8b0500000000	            mov eax, dword [0x04002566] 	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4002566	          0x8d50ff	                      lea edx, [rax - 1]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4002569	    0x668915000000	               mov word [0x04002570], dx	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4002570	    0x668905000000	               mov word [0x04002577], ax	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4002577	            0xeb18	                           jmp 0x4002591	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4002579	    0x664489350000	            mov word [0x04002581], r14w 	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4002581	    0x6644892d0000	            mov word [0x04002589], r13w 	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4002589	    0x6644892d0000	            mov word [0x04002591], r13w 	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4002591	    0x66833d000000	                cmp word [0x04002599], 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4002599	            0x750e	                           jne 0x40025a9	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x400259b	          0x4585e4	                         test r12d, r12d	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x400259e	            0x7509	                           jne 0x40025a9	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x40025a0	    0x66c705000000	                mov word [0x040025a9], 0	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x40025a9	    0x66c705000000	                mov word [0x040025b2], 1	       942	ui.c	FUNCTION_28
0x40025b2	          0x4585e4	                         test r12d, r12d	       948	ui.c	FUNCTION_28	IF_10
0x40025b5	            0x7424	                            je 0x40025db	       948	ui.c	FUNCTION_28	IF_10
0x40025b7	     0xfb705000000	           movzx eax, word [0x040025be] 	       948	ui.c	FUNCTION_28	IF_10
0x40025be	          0x83c001	                              add eax, 1	       948	ui.c	FUNCTION_28	IF_10
0x40025c1	        0x6683f802	                               cmp ax, 2	       948	ui.c	FUNCTION_28	IF_10
0x40025c5	            0x7709	                            ja 0x40025d0	       948	ui.c	FUNCTION_28	IF_10
0x40025c7	    0x668905000000	               mov word [0x040025ce], ax	       948	ui.c	FUNCTION_28	IF_10
0x40025ce	            0xeb0b	                           jmp 0x40025db	       948	ui.c	FUNCTION_28	IF_10
0x40025d0	    0x66c705000000	                mov word [0x040025d9], 0	       949	ui.c	FUNCTION_28	IF_10
0x40025d9	            0xeb26	                           jmp 0x4002601	       949	ui.c	FUNCTION_28	IF_10
0x40025db	     0xfb705000000	           movzx eax, word [0x040025e2] 	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025e2	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025e6	     0xf8431010000	                            je 0x400271d	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025ec	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025f0	            0x720f	                            jb 0x4002601	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025f2	        0x6683f802	                               cmp ax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025f6	     0xf84bc010000	                            je 0x40027b8	       951	ui.c	FUNCTION_28	SWITCH_1
0x40025fc	      0xe91f020000	                           jmp 0x4002820	       951	ui.c	FUNCTION_28	SWITCH_1
0x4002601	          0x4863c3	                         movsxd rax, ebx	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4002604	    0x483b05000000	            cmp rax, qword [0x0400260b] 	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400260b	            0x740e	                            je 0x400261b	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400260d	            0x89df	                            mov edi, ebx	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400260f	      0xe84bdaffff	              call sym.clip_get_line_end	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x4002614	    0x668905000000	               mov word [0x0400261b], ax	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400261b	    0x440fb72d0000	          movzx r13d, word [0x04002623] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4002623	    0x440fb7250000	          movzx r12d, word [0x0400262b] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400262b	          0x4489e9	                           mov ecx, r13d	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400262e	          0x4489e2	                           mov edx, r12d	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4002631	            0x89ee	                            mov esi, ebp	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4002633	            0x89df	                            mov edi, ebx	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4002635	      0xe806daffff	               call sym.clip_compare_pos	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400263a	            0x85c0	                           test eax, eax	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400263c	            0x786b	                            js 0x40026a9	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x400263e	     0xfb705000000	           movzx eax, word [0x04002645] 	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4002645	            0x39c5	                            cmp ebp, eax	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4002647	            0x7c1e	                            jl 0x4002667	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4002649	    0x448b05000000	            mov r8d, dword [0x04002650] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002650	            0x89d9	                            mov ecx, ebx	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002652	          0x4489ea	                           mov edx, r13d	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002655	          0x4489e6	                           mov esi, r12d	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002658	      0xbf00000000	                              mov edi, 0	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x400265d	      0xe8dcdcffff	 call sym.clip_update_modeless_selection	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002662	      0xe9b9010000	                           jmp 0x4002820	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4002667	      0xb801000000	                              mov eax, 1	       862	ui.c	FUNCTION_28
0x400266c	    0x833d00000000	               cmp dword [0x04002673], 0	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002673	            0x7411	                            je 0x4002686	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002675	            0x89ee	                            mov esi, ebp	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002677	            0x89df	                            mov edi, ebx	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4002679	      0xe800000000	                          call 0x400267e	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x400267e	          0x83f801	                              cmp eax, 1	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002681	            0x19c0	                            sbb eax, eax	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002683	          0x83c002	                              add eax, 2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4002686	     0xfb715000000	           movzx edx, word [0x0400268d] 	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400268d	     0xfb735000000	           movzx esi, word [0x04002694] 	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4002694	        0x448d0428	                    lea r8d, [rax + rbp]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4002698	            0x89d9	                            mov ecx, ebx	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400269a	      0xbf00000000	                              mov edi, 0	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x400269f	      0xe89adcffff	 call sym.clip_update_modeless_selection	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x40026a4	      0xe977010000	                           jmp 0x4002820	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x40026a9	      0xb801000000	                              mov eax, 1	       862	ui.c	FUNCTION_28
0x40026ae	    0x833d00000000	               cmp dword [0x040026b5], 0	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40026b5	            0x7413	                            je 0x40026ca	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40026b7	          0x4489ee	                           mov esi, r13d	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x40026ba	          0x4489e7	                           mov edi, r12d	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x40026bd	      0xe800000000	                          call 0x40026c2	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x40026c2	          0x83f801	                              cmp eax, 1	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40026c5	            0x19c0	                            sbb eax, eax	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40026c7	          0x83c002	                              add eax, 2	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x40026ca	     0xfb715000000	           movzx edx, word [0x040026d1] 	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40026d1	            0x39d5	                            cmp ebp, edx	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40026d3	            0x7c23	                            jl 0x40026f8	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40026d5	     0xfb735000000	           movzx esi, word [0x040026dc] 	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026dc	     0xfb70d000000	           movzx ecx, word [0x040026e3] 	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026e3	        0x448d0406	                    lea r8d, [rsi + rax]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026e7	            0x89de	                            mov esi, ebx	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026e9	      0xbf00000000	                              mov edi, 0	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026ee	      0xe84bdcffff	 call sym.clip_update_modeless_selection	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026f3	      0xe928010000	                           jmp 0x4002820	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40026f8	     0xfb715000000	           movzx edx, word [0x040026ff] 	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x40026ff	     0xfb70d000000	           movzx ecx, word [0x04002706] 	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4002706	        0x448d0402	                    lea r8d, [rdx + rax]	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400270a	            0x89ea	                            mov edx, ebp	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400270c	            0x89de	                            mov esi, ebx	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400270e	      0xbf00000000	                              mov edi, 0	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4002713	      0xe826dcffff	 call sym.clip_update_modeless_selection	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4002718	      0xe903010000	                           jmp 0x4002820	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x400271d	          0x4863c3	                         movsxd rax, ebx	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002720	    0x483b05000000	            cmp rax, qword [0x04002727] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002727	            0x751f	                           jne 0x4002748	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002729	     0xfb705000000	           movzx eax, word [0x04002730] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002730	            0x39c5	                            cmp ebp, eax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002732	            0x7c14	                            jl 0x4002748	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002734	     0xfb705000000	           movzx eax, word [0x0400273b] 	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400273b	            0x39c5	                            cmp ebp, eax	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400273d	            0x7d09	                           jge 0x4002748	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x400273f	          0x4585e4	                         test r12d, r12d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002742	     0xf84e8000000	                            je 0x4002830	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4002748	            0x89ea	                            mov edx, ebp	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x400274a	            0x89de	                            mov esi, ebx	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x400274c	      0xbf00000000	                              mov edi, 0	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4002751	      0xe863d9ffff	       call sym.clip_get_word_boundaries	       998	ui.c	FUNCTION_28	SWITCH_1	CALL_21
0x4002756	    0x440fb72d0000	          movzx r13d, word [0x0400275e] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400275e	    0x440fb7250000	          movzx r12d, word [0x04002766] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002766	          0x4489e9	                           mov ecx, r13d	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002769	          0x4489e2	                           mov edx, r12d	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400276c	            0x89ee	                            mov esi, ebp	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x400276e	            0x89df	                            mov edi, ebx	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002770	      0xe8cbd8ffff	               call sym.clip_compare_pos	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002775	            0x85c0	                           test eax, eax	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002777	            0x781f	                            js 0x4002798	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4002779	    0x440fb7050000	           movzx r8d, word [0x04002781] 	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002781	            0x89d9	                            mov ecx, ebx	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002783	          0x4489ea	                           mov edx, r13d	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002786	          0x4489e6	                           mov esi, r12d	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002789	      0xbf00000000	                              mov edi, 0	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x400278e	      0xe8abdbffff	 call sym.clip_update_modeless_selection	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002793	      0xe988000000	                           jmp 0x4002820	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4002798	     0xfb715000000	           movzx edx, word [0x0400279f] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x400279f	    0x440fb7050000	           movzx r8d, word [0x040027a7] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027a7	          0x4489e1	                           mov ecx, r12d	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027aa	            0x89de	                            mov esi, ebx	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027ac	      0xbf00000000	                              mov edi, 0	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027b1	      0xe888dbffff	 call sym.clip_update_modeless_selection	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027b6	            0xeb68	                           jmp 0x4002820	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x40027b8	          0x4863c3	                         movsxd rax, ebx	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40027bb	    0x483905000000	            cmp qword [0x040027c2], rax 	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40027c2	            0x7505	                           jne 0x40027c9	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40027c4	          0x4585e4	                         test r12d, r12d	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40027c7	            0x7467	                            je 0x4002830	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x40027c9	    0x440fb7250000	          movzx r12d, word [0x040027d1] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027d1	     0xfb70d000000	           movzx ecx, word [0x040027d8] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027d8	          0x4489e2	                           mov edx, r12d	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027db	            0x89ee	                            mov esi, ebp	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027dd	            0x89df	                            mov edi, ebx	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027df	      0xe85cd8ffff	               call sym.clip_compare_pos	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027e4	            0x85c0	                           test eax, eax	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027e6	            0x781d	                            js 0x4002805	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x40027e8	    0x448b05000000	            mov r8d, dword [0x040027ef] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x40027ef	            0x89d9	                            mov ecx, ebx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x40027f1	      0xba00000000	                              mov edx, 0	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x40027f6	          0x4489e6	                           mov esi, r12d	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x40027f9	      0xbf00000000	                              mov edi, 0	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x40027fe	      0xe83bdbffff	 call sym.clip_update_modeless_selection	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002803	            0xeb1b	                           jmp 0x4002820	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4002805	    0x448b05000000	            mov r8d, dword [0x0400280c] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400280c	          0x4489e1	                           mov ecx, r12d	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400280f	      0xba00000000	                              mov edx, 0	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002814	            0x89de	                            mov esi, ebx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002816	      0xbf00000000	                              mov edi, 0	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x400281b	      0xe81edbffff	 call sym.clip_update_modeless_selection	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4002820	          0x4863db	                         movsxd rbx, ebx	      1024	ui.c	FUNCTION_28
0x4002823	    0x48891d000000	            mov qword [0x0400282a], rbx 	      1024	ui.c	FUNCTION_28
0x400282a	    0x892d00000000	            mov dword [0x04002830], ebp 	      1025	ui.c	FUNCTION_28
0x4002830	        0x4883c418	                           add rsp, 0x18	      1031	ui.c	FUNCTION_28
0x4002834	              0x5b	                                 pop rbx	      1031	ui.c	FUNCTION_28
0x4002835	              0x5d	                                 pop rbp	      1031	ui.c	FUNCTION_28
0x4002836	            0x415c	                                 pop r12	      1031	ui.c	FUNCTION_28
0x4002838	            0x415d	                                 pop r13	      1031	ui.c	FUNCTION_28
0x400283a	            0x415e	                                 pop r14	      1031	ui.c	FUNCTION_28
0x400283c	            0x415f	                                 pop r15	      1031	ui.c	FUNCTION_28
0x400283e	              0xc3	                                     ret	      1031	ui.c	FUNCTION_28
read_error_exit	CALL,4:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	15
0x4001c92	        0x4883ec08	                              sub rsp, 8	      1948	ui.c	FUNCTION_56
0x4001c96	    0x833d00000000	               cmp dword [0x04001c9d], 0	      1949	ui.c	FUNCTION_56	IF_1
0x4001c9d	            0x740a	                            je 0x4001ca9	      1949	ui.c	FUNCTION_56	IF_1
0x4001c9f	      0xbf00000000	                              mov edi, 0	      1950	ui.c	FUNCTION_56	CALL_1
0x4001ca4	      0xe800000000	                          call 0x4001ca9	      1950	ui.c	FUNCTION_56	CALL_1
0x4001ca9	      0xba05000000	                              mov edx, 5	      1951	ui.c	FUNCTION_56	CALL_3
0x4001cae	      0xbe00000000	                              mov esi, 0	      1951	ui.c	FUNCTION_56	CALL_3
0x4001cb3	      0xbf00000000	                              mov edi, 0	      1951	ui.c	FUNCTION_56	CALL_3
0x4001cb8	      0xe800000000	                          call 0x4001cbd	      1951	ui.c	FUNCTION_56	CALL_3
0x4001cbd	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_88	CALL_3
0x4001cc0	    0x488b3d000000	            mov rdi, qword [0x04001cc7] 	       110	string3.h	FUNCTION_88	CALL_3
0x4001cc7	      0xe800000000	                          call 0x4001ccc	       110	string3.h	FUNCTION_88	CALL_3
0x4001ccc	      0xe800000000	                          call 0x4001cd1	      1952	ui.c	FUNCTION_56	CALL_4
0x4001cd1	        0x4883c408	                              add rsp, 8	      1953	ui.c	FUNCTION_56
0x4001cd5	              0xc3	                                     ret	      1953	ui.c	FUNCTION_56
add_to_input_buf	CALL,2:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,0:DO,0:WHILE,1	20
0x4001bca	    0x448b05000000	            mov r8d, dword [0x04001bd1] 	      1698	ui.c	FUNCTION_50	IF_1
0x4001bd1	        0x418d0430	                     lea eax, [r8 + rsi]	      1698	ui.c	FUNCTION_50	IF_1
0x4001bd5	      0x3d06100000	                         cmp eax, 0x1006	      1698	ui.c	FUNCTION_50	IF_1
0x4001bda	            0x7f37	                            jg 0x4001c13	      1698	ui.c	FUNCTION_50	IF_1
0x4001bdc	        0x448d4eff	                      lea r9d, [rsi - 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001be0	            0x85f6	                           test esi, esi	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001be2	            0x742f	                            je 0x4001c13	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001be4	          0x8d46ff	                      lea eax, [rsi - 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001be7	      0x488d740701	                lea rsi, [rdi + rax + 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001bec	          0x4489c0	                            mov eax, r8d	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001bef	        0x4883c701	                              add rdi, 1	      1708	ui.c	FUNCTION_50	WHILE_1
0x4001bf3	         0xfb64fff	               movzx ecx, byte [rdi - 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x4001bf7	          0x4863d0	                         movsxd rdx, eax	      1708	ui.c	FUNCTION_50	WHILE_1
0x4001bfa	    0x888a00000000	                      mov byte [rdx], cl	      1708	ui.c	FUNCTION_50	WHILE_1
0x4001c00	          0x8d4001	                      lea eax, [rax + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x4001c03	          0x4839f7	                            cmp rdi, rsi	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001c06	            0x75e7	                           jne 0x4001bef	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001c08	      0x438d440801	                  lea eax, [r8 + r9 + 1]	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001c0d	    0x890500000000	            mov dword [0x04001c13], eax 	      1707	ui.c	FUNCTION_50	WHILE_1
0x4001c13	            0xf3c3	                                     ret	      1707	ui.c	FUNCTION_50	WHILE_1
clip_clear_selection	CALL,1:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	13
0x40010d9	      0x66837f4800	                cmp word [rdi + 0x48], 0	      1065	ui.c	FUNCTION_30	IF_1
0x40010de	            0x7422	                            je 0x4001102	      1065	ui.c	FUNCTION_30	IF_1
0x40010e0	              0x53	                                push rbx	      1063	ui.c	FUNCTION_30
0x40010e1	          0x4889fb	                            mov rbx, rdi	      1063	ui.c	FUNCTION_30
0x40010e4	          0x8b4f20	            mov ecx, dword [rdi + 0x20] 	      1068	ui.c	FUNCTION_30	CALL_1
0x40010e7	          0x8b7710	            mov esi, dword [rdi + 0x10] 	      1068	ui.c	FUNCTION_30	CALL_1
0x40010ea	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x40010f0	          0x8b5718	            mov edx, dword [rdi + 0x18] 	      1068	ui.c	FUNCTION_30	CALL_1
0x40010f3	          0x8b7f08	                mov edi, dword [rdi + 8]	      1068	ui.c	FUNCTION_30	CALL_1
0x40010f6	      0xe85af1ffff	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x40010fb	    0x66c743480000	                mov word [rbx + 0x48], 0	      1070	ui.c	FUNCTION_30
0x4001101	              0x5b	                                 pop rbx	      1071	ui.c	FUNCTION_30
0x4001102	            0xf3c3	                                     ret	      1071	ui.c	FUNCTION_30
clip_update_selection	CALL,8:SWITCH,0:FOR,0:functions,0:IF,4:ELSE,1:DO,0:WHILE,0	104
0x40013cd	    0x833d00000000	               cmp dword [0x040013d4], 0	       481	ui.c	FUNCTION_15	IF_1
0x40013d4	     0xf8578010000	                           jne 0x4001552	       481	ui.c	FUNCTION_15	IF_1
0x40013da	    0x833d00000000	               cmp dword [0x040013e1], 0	       481	ui.c	FUNCTION_15	IF_1
0x40013e1	     0xf846b010000	                            je 0x4001552	       481	ui.c	FUNCTION_15	IF_1
0x40013e7	    0xf60500000000	               test byte [0x040013ee], 1	       481	ui.c	FUNCTION_15	IF_1
0x40013ee	     0xf845e010000	                            je 0x4001552	       481	ui.c	FUNCTION_15	IF_1
0x40013f4	            0x4157	                                push r15	       477	ui.c	FUNCTION_15
0x40013f6	            0x4156	                                push r14	       477	ui.c	FUNCTION_15
0x40013f8	            0x4155	                                push r13	       477	ui.c	FUNCTION_15
0x40013fa	            0x4154	                                push r12	       477	ui.c	FUNCTION_15
0x40013fc	              0x55	                                push rbp	       477	ui.c	FUNCTION_15
0x40013fd	              0x53	                                push rbx	       477	ui.c	FUNCTION_15
0x40013fe	        0x4883ec28	                           sub rsp, 0x28	       477	ui.c	FUNCTION_15
0x4001402	    0x488b2d000000	            mov rbp, qword [0x04001409] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001409	    0x488b05000000	            mov rax, qword [0x04001410] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001410	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001414	          0x4c39e5	                            cmp rbp, r12	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001417	            0x7408	                            je 0x4001421	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001419	          0x4c39e5	                            cmp rbp, r12	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400141c	           0xf9cc2	                                 setl dl	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400141f	            0xeb20	                           jmp 0x4001441	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001421	    0x8b0d00000000	            mov ecx, dword [0x04001427] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001427	          0x8b5040	            mov edx, dword [rax + 0x40] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400142a	            0x39d1	                            cmp ecx, edx	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400142c	            0x7407	                            je 0x4001435	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400142e	            0x39d1	                            cmp ecx, edx	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001430	           0xf9cc2	                                 setl dl	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001433	            0xeb0c	                           jmp 0x4001441	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001435	          0x8b7044	            mov esi, dword [rax + 0x44] 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001438	    0x393500000000	            cmp dword [0x0400143e], esi 	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x400143e	           0xf9cc2	                                 setl dl	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001441	          0x4889fb	                            mov rbx, rdi	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001444	            0x84d2	                             test dl, dl	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001446	            0x744e	                            je 0x4001496	       483	ui.c	FUNCTION_15	IF_1	IF_2	CALL_1
0x4001448	    0x448b35000000	           mov r14d, dword [0x0400144f] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x400144f	    0x448b2d000000	           mov r13d, dword [0x04001456] 	       485	ui.c	FUNCTION_15	IF_1	IF_2
0x4001456	        0x448b7840	           mov r15d, dword [rax + 0x40] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x400145a	          0x8b4044	            mov eax, dword [rax + 0x44] 	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x400145d	        0x89442410	             mov dword [rsp + 0x10], eax	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4001461	      0x4c89642408	                mov qword [rsp + 8], r12	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4001466	    0x833d00000000	               cmp dword [0x0400146d], 0	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x400146d	            0x7448	                            je 0x40014b7	       488	ui.c	FUNCTION_15	IF_1	IF_2	IF_3
0x400146f	    0x488b05000000	            mov rax, qword [0x04001476] 	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001476	      0x4889442408	                mov qword [rsp + 8], rax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400147b	      0xe800000000	                          call 0x4001480	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001480	          0x4889c7	                            mov rdi, rax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001483	      0x488b442408	                mov rax, qword [rsp + 8]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001488	            0xffd0	                                call rax	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400148a	      0x468d7c38ff	               lea r15d, [rax + r15 - 1]	       489	ui.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400148f	      0x4c89642408	                mov qword [rsp + 8], r12	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4001494	            0xeb21	                           jmp 0x40014b7	       486	ui.c	FUNCTION_15	IF_1	IF_2
0x4001496	        0x448b7040	           mov r14d, dword [rax + 0x40] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x400149a	        0x448b6844	           mov r13d, dword [rax + 0x44] 	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x400149e	    0x448b3d000000	           mov r15d, dword [0x040014a5] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40014a5	    0x8b0500000000	            mov eax, dword [0x040014ab] 	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40014ab	        0x89442410	             mov dword [rsp + 0x10], eax	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40014af	      0x48896c2408	                mov qword [rsp + 8], rbp	       495	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40014b4	          0x4c89e5	                            mov rbp, r12	       494	ui.c	FUNCTION_15	IF_1	ELSE_1
0x40014b7	        0x48396b08	                cmp qword [rbx + 8], rbp	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014bb	            0x753e	                           jne 0x40014fb	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014bd	          0x4c89e8	                            mov rax, r13	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014c0	        0x48c1e020	                           shl rax, 0x20	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014c4	          0x4489f2	                           mov edx, r14d	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014c7	          0x4809d0	                             or rax, rdx	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014ca	        0x48394310	            cmp qword [rbx + 0x10], rax 	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014ce	            0x752b	                           jne 0x40014fb	       497	ui.c	FUNCTION_15	IF_1	IF_4	CALL_3
0x40014d0	      0x488b442408	                mov rax, qword [rsp + 8]	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014d5	        0x483b4318	            cmp rax, qword [rbx + 0x18] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014d9	            0x7520	                           jne 0x40014fb	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014db	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014e0	        0x48c1e020	                           shl rax, 0x20	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014e4	          0x4489fa	                           mov edx, r15d	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014e7	          0x4809d0	                             or rax, rdx	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014ea	        0x48394320	            cmp qword [rbx + 0x20], rax 	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014ee	            0x750b	                           jne 0x40014fb	       498	ui.c	FUNCTION_15	IF_1	IF_4	CALL_4
0x40014f0	    0x8b0500000000	            mov eax, dword [0x040014f6] 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x40014f6	          0x394328	            cmp dword [rbx + 0x28], eax 	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x40014f9	            0x7449	                            je 0x4001544	       499	ui.c	FUNCTION_15	IF_1	IF_4
0x40014fb	          0x4889df	                            mov rdi, rbx	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x40014fe	      0xe800000000	                          call 0x4001503	       501	ui.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001503	        0x48896b08	                mov qword [rbx + 8], rbp	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x4001507	        0x44897310	            mov dword [rbx + 0x10], r14d	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x400150b	        0x44896b14	            mov dword [rbx + 0x14], r13d	       502	ui.c	FUNCTION_15	IF_1	IF_4
0x400150f	      0x488b442408	                mov rax, qword [rsp + 8]	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4001514	        0x48894318	             mov qword [rbx + 0x18], rax	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4001518	        0x44897b20	            mov dword [rbx + 0x20], r15d	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x400151c	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4001520	          0x894324	             mov dword [rbx + 0x24], eax	       503	ui.c	FUNCTION_15	IF_1	IF_4
0x4001523	    0x8b0500000000	            mov eax, dword [0x04001529] 	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x4001529	          0x894328	             mov dword [rbx + 0x28], eax	       504	ui.c	FUNCTION_15	IF_1	IF_4
0x400152c	          0x4889df	                            mov rdi, rbx	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x400152f	      0xe800000000	                          call 0x4001534	       505	ui.c	FUNCTION_15	IF_1	IF_4	CALL_6
0x4001534	          0x4889df	                            mov rdi, rbx	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x4001537	      0xe800000000	                          call 0x400153c	       506	ui.c	FUNCTION_15	IF_1	IF_4	CALL_7
0x400153c	          0x4889df	                            mov rdi, rbx	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x400153f	      0xe800000000	                          call 0x4001544	       507	ui.c	FUNCTION_15	IF_1	IF_4	CALL_8
0x4001544	        0x4883c428	                           add rsp, 0x28	       510	ui.c	FUNCTION_15
0x4001548	              0x5b	                                 pop rbx	       510	ui.c	FUNCTION_15
0x4001549	              0x5d	                                 pop rbp	       510	ui.c	FUNCTION_15
0x400154a	            0x415c	                                 pop r12	       510	ui.c	FUNCTION_15
0x400154c	            0x415d	                                 pop r13	       510	ui.c	FUNCTION_15
0x400154e	            0x415e	                                 pop r14	       510	ui.c	FUNCTION_15
0x4001550	            0x415f	                                 pop r15	       510	ui.c	FUNCTION_15
0x4001552	            0xf3c3	                                     ret	       510	ui.c	FUNCTION_15
get_fpos_of_mouse	CALL,3:SWITCH,0:FOR,0:functions,0:IF,7:ELSE,0:DO,0:WHILE,0	67
0x4003ae7	              0x55	                                push rbp	      3213	ui.c	FUNCTION_78
0x4003ae8	              0x53	                                push rbx	      3213	ui.c	FUNCTION_78
0x4003ae9	        0x4883ec18	                           sub rsp, 0x18	      3213	ui.c	FUNCTION_78
0x4003aed	    0x64488b042528	                mov rax, qword fs:[0x28]	      3213	ui.c	FUNCTION_78
0x4003af6	      0x4889442408	                mov qword [rsp + 8], rax	      3213	ui.c	FUNCTION_78
0x4003afb	            0x31c0	                            xor eax, eax	      3213	ui.c	FUNCTION_78
0x4003afd	    0x8b0500000000	            mov eax, dword [0x04003b03] 	      3215	ui.c	FUNCTION_78
0x4003b03	          0x890424	                    mov dword [rsp], eax	      3215	ui.c	FUNCTION_78
0x4003b06	    0x8b1500000000	            mov edx, dword [0x04003b0c] 	      3216	ui.c	FUNCTION_78
0x4003b0c	        0x89542404	                mov dword [rsp + 4], edx	      3216	ui.c	FUNCTION_78
0x4003b10	          0xc1e81f	                           shr eax, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x4003b13	            0x84c0	                             test al, al	      3218	ui.c	FUNCTION_78	IF_1
0x4003b15	     0xf85a0000000	                           jne 0x4003bbb	      3218	ui.c	FUNCTION_78	IF_1
0x4003b1b	          0x4889fb	                            mov rbx, rdi	      3218	ui.c	FUNCTION_78	IF_1
0x4003b1e	          0xc1ea1f	                           shr edx, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x4003b21	            0x84d2	                             test dl, dl	      3218	ui.c	FUNCTION_78	IF_1
0x4003b23	     0xf8592000000	                           jne 0x4003bbb	      3218	ui.c	FUNCTION_78	IF_1
0x4003b29	      0x488d742404	                      lea rsi, [rsp + 4]	      3222	ui.c	FUNCTION_78	CALL_1
0x4003b2e	          0x4889e7	                            mov rdi, rsp	      3222	ui.c	FUNCTION_78	CALL_1
0x4003b31	      0xe800000000	                          call 0x4003b36	      3222	ui.c	FUNCTION_78	CALL_1
0x4003b36	          0x4889c5	                            mov rbp, rax	      3222	ui.c	FUNCTION_78	CALL_1
0x4003b39	          0x4885c0	                           test rax, rax	      3223	ui.c	FUNCTION_78	IF_2
0x4003b3c	     0xf8480000000	                            je 0x4003bc2	      3223	ui.c	FUNCTION_78	IF_2
0x4003b42	      0xb802000000	                              mov eax, 2	      3229	ui.c	FUNCTION_78	IF_3
0x4003b47	          0x8b0c24	                    mov ecx, dword [rsp]	      3228	ui.c	FUNCTION_78	IF_3
0x4003b4a	    0x398da0000000	            cmp dword [rbp + 0xa0], ecx 	      3228	ui.c	FUNCTION_78	IF_3
0x4003b50	            0x7e75	                           jle 0x4003bc7	      3228	ui.c	FUNCTION_78	IF_3
0x4003b52	      0xb804000000	                              mov eax, 4	      3231	ui.c	FUNCTION_78	IF_4
0x4003b57	        0x8b742404	                mov esi, dword [rsp + 4]	      3230	ui.c	FUNCTION_78	IF_4
0x4003b5b	    0x39b5ac000000	            cmp dword [rbp + 0xac], esi 	      3230	ui.c	FUNCTION_78	IF_4
0x4003b61	            0x7e64	                           jle 0x4003bc7	      3230	ui.c	FUNCTION_78	IF_4
0x4003b63	      0xb800000000	                              mov eax, 0	      3234	ui.c	FUNCTION_78	IF_5
0x4003b68	    0x483b2d000000	            cmp rbp, qword [0x04003b6f] 	      3233	ui.c	FUNCTION_78	IF_5
0x4003b6f	            0x7556	                           jne 0x4003bc7	      3233	ui.c	FUNCTION_78	IF_5
0x4003b71	          0x4889d9	                            mov rcx, rbx	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b74	      0x488d542404	                      lea rdx, [rsp + 4]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b79	          0x4889e6	                            mov rsi, rsp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b7c	          0x4889ef	                            mov rdi, rbp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b7f	      0xe800000000	                          call 0x4003b84	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b84	            0x89c2	                            mov edx, eax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b86	      0xb802000000	                              mov eax, 2	      3238	ui.c	FUNCTION_78	IF_6
0x4003b8b	            0x85d2	                           test edx, edx	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b8d	            0x7538	                           jne 0x4003bc7	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x4003b8f	        0x8b542404	                mov edx, dword [rsp + 4]	      3240	ui.c	FUNCTION_78	CALL_3
0x4003b93	          0x488b33	                    mov rsi, qword [rbx]	      3240	ui.c	FUNCTION_78	CALL_3
0x4003b96	          0x4889ef	                            mov rdi, rbp	      3240	ui.c	FUNCTION_78	CALL_3
0x4003b99	      0xe800000000	                          call 0x4003b9e	      3240	ui.c	FUNCTION_78	CALL_3
0x4003b9e	            0x85c0	                           test eax, eax	      3242	ui.c	FUNCTION_78	IF_7
0x4003ba0	            0x7f05	                            jg 0x4003ba7	      3242	ui.c	FUNCTION_78	IF_7
0x4003ba2	          0x894308	                mov dword [rbx + 8], eax	      3240	ui.c	FUNCTION_78	CALL_3
0x4003ba5	            0xeb06	                           jmp 0x4003bad	      3240	ui.c	FUNCTION_78	CALL_3
0x4003ba7	          0x83e801	                              sub eax, 1	      3243	ui.c	FUNCTION_78	IF_7
0x4003baa	          0x894308	                mov dword [rbx + 8], eax	      3243	ui.c	FUNCTION_78	IF_7
0x4003bad	    0xc7430c000000	                mov dword [rbx + 0xc], 0	      3245	ui.c	FUNCTION_78
0x4003bb4	      0xb801000000	                              mov eax, 1	      3247	ui.c	FUNCTION_78
0x4003bb9	            0xeb0c	                           jmp 0x4003bc7	      3247	ui.c	FUNCTION_78
0x4003bbb	      0xb800000000	                              mov eax, 0	      3219	ui.c	FUNCTION_78	IF_1
0x4003bc0	            0xeb05	                           jmp 0x4003bc7	      3219	ui.c	FUNCTION_78	IF_1
0x4003bc2	      0xb800000000	                              mov eax, 0	      3224	ui.c	FUNCTION_78	IF_2
0x4003bc7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3248	ui.c	FUNCTION_78
0x4003bcc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3248	ui.c	FUNCTION_78
0x4003bd5	            0x7405	                            je 0x4003bdc	      3248	ui.c	FUNCTION_78
0x4003bd7	      0xe800000000	                          call 0x4003bdc	      3248	ui.c	FUNCTION_78
0x4003bdc	        0x4883c418	                           add rsp, 0x18	      3248	ui.c	FUNCTION_78
0x4003be0	              0x5b	                                 pop rbx	      3248	ui.c	FUNCTION_78
0x4003be1	              0x5d	                                 pop rbp	      3248	ui.c	FUNCTION_78
0x4003be2	              0xc3	                                     ret	      3248	ui.c	FUNCTION_78
clip_x11_lose_ownership_cb	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	11
0x400134b	        0x4883ec08	                              sub rsp, 8	      2492	ui.c	FUNCTION_68
0x400134f	    0x488b05000000	            mov rax, qword [0x04001356] 	      2493	ui.c	FUNCTION_68	IF_1
0x4001356	          0x483906	                    cmp qword [rsi], rax	      2493	ui.c	FUNCTION_68	IF_1
0x4001359	            0x750c	                           jne 0x4001367	      2493	ui.c	FUNCTION_68	IF_1
0x400135b	      0xbf00000000	                              mov edi, 0	      2494	ui.c	FUNCTION_68	CALL_1
0x4001360	      0xe800000000	                          call 0x4001365	      2494	ui.c	FUNCTION_68	CALL_1
0x4001365	            0xeb0a	                           jmp 0x4001371	      2494	ui.c	FUNCTION_68	CALL_1
0x4001367	      0xbf00000000	                              mov edi, 0	      2496	ui.c	FUNCTION_68	CALL_2
0x400136c	      0xe800000000	                          call 0x4001371	      2496	ui.c	FUNCTION_68	CALL_2
0x4001371	        0x4883c408	                              add rsp, 8	      2497	ui.c	FUNCTION_68
0x4001375	              0xc3	                                     ret	      2497	ui.c	FUNCTION_68
ui_breakcheck	CALL,1:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	5
0x4000f0f	        0x4883ec08	                              sub rsp, 8	       395	ui.c	FUNCTION_12
0x4000f13	      0xbf00000000	                              mov edi, 0	       396	ui.c	FUNCTION_12	CALL_1
0x4000f18	      0xe800000000	                          call 0x4000f1d	       396	ui.c	FUNCTION_12	CALL_1
0x4000f1d	        0x4883c408	                              add rsp, 8	       397	ui.c	FUNCTION_12
0x4000f21	              0xc3	                                     ret	       397	ui.c	FUNCTION_12
ui_suspend	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	8
0x4000e20	        0x4883ec08	                              sub rsp, 8	       301	ui.c	FUNCTION_7
0x4000e24	    0x833d00000000	               cmp dword [0x04000e2b], 0	       303	ui.c	FUNCTION_7	IF_1
0x4000e2b	            0x7407	                            je 0x4000e34	       303	ui.c	FUNCTION_7	IF_1
0x4000e2d	      0xe800000000	                          call 0x4000e32	       305	ui.c	FUNCTION_7	IF_1	CALL_1
0x4000e32	            0xeb05	                           jmp 0x4000e39	       306	ui.c	FUNCTION_7	IF_1
0x4000e34	      0xe800000000	                          call 0x4000e39	       309	ui.c	FUNCTION_7	CALL_2
0x4000e39	        0x4883c408	                              add rsp, 8	       310	ui.c	FUNCTION_7
0x4000e3d	              0xc3	                                     ret	       310	ui.c	FUNCTION_7
clip_auto_select	CALL,4:SWITCH,0:FOR,0:functions,0:IF,2:ELSE,0:DO,0:WHILE,0	13
0x4001636	        0x4883ec08	                              sub rsp, 8	       675	ui.c	FUNCTION_22
0x400163a	      0xe800000000	                          call 0x400163f	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x400163f	            0x85c0	                           test eax, eax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001641	            0x740a	                            je 0x400164d	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001643	      0xbf00000000	                              mov edi, 0	       677	ui.c	FUNCTION_22	CALL_2
0x4001648	      0xe8a0ffffff	            call sym.clip_copy_selection	       677	ui.c	FUNCTION_22	CALL_2
0x400164d	      0xe800000000	                          call 0x4001652	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001652	            0x85c0	                           test eax, eax	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001654	            0x740a	                            je 0x4001660	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001656	      0xbf00000000	                              mov edi, 0	       679	ui.c	FUNCTION_22	CALL_4
0x400165b	      0xe88dffffff	            call sym.clip_copy_selection	       679	ui.c	FUNCTION_22	CALL_4
0x4001660	        0x4883c408	                              add rsp, 8	       680	ui.c	FUNCTION_22
0x4001664	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
clip_x11_own_selection	CALL,8:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,1:DO,0:WHILE,0	53
0x4002a66	            0x4155	                                push r13	      2514	ui.c	FUNCTION_71
0x4002a68	            0x4154	                                push r12	      2514	ui.c	FUNCTION_71
0x4002a6a	              0x55	                                push rbp	      2514	ui.c	FUNCTION_71
0x4002a6b	              0x53	                                push rbx	      2514	ui.c	FUNCTION_71
0x4002a6c	        0x4883ec08	                              sub rsp, 8	      2514	ui.c	FUNCTION_71
0x4002a70	          0x4889fb	                            mov rbx, rdi	      2514	ui.c	FUNCTION_71
0x4002a73	          0x4889f5	                            mov rbp, rsi	      2514	ui.c	FUNCTION_71
0x4002a76	    0x833d00000000	               cmp dword [0x04002a7d], 0	      2520	ui.c	FUNCTION_71	IF_1
0x4002a7d	            0x743a	                            je 0x4002ab9	      2520	ui.c	FUNCTION_71	IF_1
0x4002a7f	      0xe800000000	                          call 0x4002a84	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a84	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a87	      0xe800000000	                          call 0x4002a8c	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a8c	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a90	    0x41b900000000	                              mov r9d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a96	    0x41b800000000	                              mov r8d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002a9c	      0xb900000000	                              mov ecx, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002aa1	          0x4889c2	                            mov rdx, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002aa4	          0x4889df	                            mov rdi, rbx	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002aa7	      0xe800000000	                          call 0x4002aac	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002aac	            0x89c2	                            mov edx, eax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002aae	      0xb800000000	                              mov eax, 0	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x4002ab3	            0x84d2	                             test dl, dl	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002ab5	            0x7546	                           jne 0x4002afd	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002ab7	            0xeb59	                           jmp 0x4002b12	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4002ab9	    0x4c8b2d000000	            mov r13, qword [0x04002ac0] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ac0	        0x4c8b6650	            mov r12, qword [rsi + 0x50] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ac4	      0xe800000000	                          call 0x4002ac9	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ac9	          0x4889c5	                            mov rbp, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002acc	          0x4889df	                            mov rdi, rbx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002acf	      0xe800000000	                          call 0x4002ad4	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ad4	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ad6	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ad8	    0x41b902000000	                              mov r9d, 2	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ade	    0x41b820000000	                           mov r8d, 0x20	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ae4	          0x4c89e9	                            mov rcx, r13	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002ae7	          0x4c89e2	                            mov rdx, r12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002aea	          0x4889ee	                            mov rsi, rbp	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002aed	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002af0	      0xe800000000	                          call 0x4002af5	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002af5	        0x4883c410	                           add rsp, 0x10	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002af9	            0x85c0	                           test eax, eax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002afb	            0x7415	                            je 0x4002b12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4002afd	          0x4889df	                            mov rdi, rbx	      2536	ui.c	FUNCTION_71	CALL_8
0x4002b00	      0xe800000000	                          call 0x4002b05	      2536	ui.c	FUNCTION_71	CALL_8
0x4002b05	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x4002b08	      0xe800000000	                          call 0x4002b0d	      2536	ui.c	FUNCTION_71	CALL_8
0x4002b0d	      0xb801000000	                              mov eax, 1	      2537	ui.c	FUNCTION_71
0x4002b12	        0x4883c408	                              add rsp, 8	      2538	ui.c	FUNCTION_71
0x4002b16	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x4002b17	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x4002b18	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x4002b1a	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x4002b1c	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
clip_own_selection	CALL,9:SWITCH,0:FOR,0:functions,0:IF,4:ELSE,0:DO,0:WHILE,0	46
0x40011ce	          0x833f00	                      cmp dword [rdi], 0	       522	ui.c	FUNCTION_16	IF_1
0x40011d1	     0xf848f000000	                            je 0x4001266	       522	ui.c	FUNCTION_16	IF_1
0x40011d7	              0x55	                                push rbp	       514	ui.c	FUNCTION_16
0x40011d8	              0x53	                                push rbx	       514	ui.c	FUNCTION_16
0x40011d9	        0x4883ec08	                              sub rsp, 8	       514	ui.c	FUNCTION_16
0x40011dd	          0x4889fb	                            mov rbx, rdi	       514	ui.c	FUNCTION_16
0x40011e0	          0x8b6f04	                mov ebp, dword [rdi + 4]	       524	ui.c	FUNCTION_16	IF_1
0x40011e3	      0xe800000000	                          call 0x40011e8	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40011e8	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40011eb	           0xf94c2	                                 sete dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40011ee	           0xfb6d2	                           movzx edx, dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40011f1	          0x895304	                mov dword [rbx + 4], edx	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40011f4	            0x85ed	                           test ebp, ebp	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40011f6	            0x7568	                           jne 0x4001260	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40011f8	    0x4881fb000000	                              cmp rbx, 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x40011ff	            0x7409	                            je 0x400120a	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x4001201	    0x4881fb000000	                              cmp rbx, 0	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x4001208	            0x7556	                           jne 0x4001260	       527	ui.c	FUNCTION_16	IF_1	IF_2
0x400120a	          0x83f801	                              cmp eax, 1	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x400120d	            0x7551	                           jne 0x4001260	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x400120f	      0xe800000000	                          call 0x4001214	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001214	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001217	            0x740c	                            je 0x4001225	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4001219	      0xe800000000	                          call 0x400121e	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x400121e	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001223	            0x753b	                           jne 0x4001260	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4001225	    0x4881fb000000	                              cmp rbx, 0	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x400122c	            0x750c	                           jne 0x400123a	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x400122e	      0xe800000000	                          call 0x4001233	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001233	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001235	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001238	            0xeb0a	                           jmp 0x4001244	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x400123a	      0xe800000000	                          call 0x400123f	       536	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_5
0x400123f	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001241	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001244	            0x84c0	                             test al, al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001246	            0x7418	                            je 0x4001260	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4001248	    0x8b0500000000	            mov eax, dword [0x0400124e] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x400124e	    0x390500000000	            cmp dword [0x04001254], eax 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4001254	            0x740a	                            je 0x4001260	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4001256	      0xbf19000000	                           mov edi, 0x19	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x400125b	      0xe800000000	                          call 0x4001260	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4001260	        0x4883c408	                              add rsp, 8	       546	ui.c	FUNCTION_16
0x4001264	              0x5b	                                 pop rbx	       546	ui.c	FUNCTION_16
0x4001265	              0x5d	                                 pop rbp	       546	ui.c	FUNCTION_16
0x4001266	            0xf3c3	                                     ret	       546	ui.c	FUNCTION_16
is_clipboard_needs_update	CALL,0:SWITCH,0:FOR,0:functions,0:IF,0:ELSE,0:DO,0:WHILE,0	2
0x4000fff	    0x8b0500000000	            mov eax, dword [0x04001005] 	       635	ui.c	FUNCTION_20
0x4001005	              0xc3	                                     ret	       635	ui.c	FUNCTION_20
clip_init	CALL,0:SWITCH,0:FOR,1:functions,0:IF,1:ELSE,0:DO,0:WHILE,0	18
0x4000f22	    0x893d00000000	            mov dword [0x04000f28], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x4000f28	    0xc70500000000	               mov dword [0x04000f32], 0	       455	ui.c	FUNCTION_14	FOR_1
0x4000f32	    0x48c705000000	               mov qword [0x04000f3d], 0	       456	ui.c	FUNCTION_14	FOR_1
0x4000f3d	    0xc70500000000	               mov dword [0x04000f47], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4000f47	    0x48c705000000	               mov qword [0x04000f52], 0	       458	ui.c	FUNCTION_14	FOR_1
0x4000f52	    0xc70500000000	               mov dword [0x04000f5c], 0	       459	ui.c	FUNCTION_14	FOR_1
0x4000f5c	    0x66c705000000	                mov word [0x04000f65], 0	       460	ui.c	FUNCTION_14	FOR_1
0x4000f65	      0xb800000000	                              mov eax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4000f6a	    0x483d00000000	                              cmp rax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4000f70	            0x7443	                            je 0x4000fb5	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4000f72	    0x893d00000000	            mov dword [0x04000f78], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x4000f78	    0xc70500000000	               mov dword [0x04000f82], 0	       455	ui.c	FUNCTION_14	FOR_1
0x4000f82	    0x48c705000000	               mov qword [0x04000f8d], 0	       456	ui.c	FUNCTION_14	FOR_1
0x4000f8d	    0xc70500000000	               mov dword [0x04000f97], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4000f97	    0x48c705000000	               mov qword [0x04000fa2], 0	       458	ui.c	FUNCTION_14	FOR_1
0x4000fa2	    0xc70500000000	               mov dword [0x04000fac], 0	       459	ui.c	FUNCTION_14	FOR_1
0x4000fac	    0x66c705000000	                mov word [0x04000fb5], 0	       460	ui.c	FUNCTION_14	FOR_1
0x4000fb5	              0xc3	                                     ret	       460	ui.c	FUNCTION_14	FOR_1
ui_breakcheck_force	CALL,2:SWITCH,0:FOR,0:functions,0:IF,1:ELSE,1:DO,0:WHILE,0	12
0x4000ee2	              0x53	                                push rbx	       405	ui.c	FUNCTION_13
0x4000ee3	    0x8b1d00000000	            mov ebx, dword [0x04000ee9] 	       406	ui.c	FUNCTION_13
0x4000ee9	          0x8d4301	                      lea eax, [rbx + 1]	       409	ui.c	FUNCTION_13
0x4000eec	    0x890500000000	            mov dword [0x04000ef2], eax 	       409	ui.c	FUNCTION_13
0x4000ef2	    0x833d00000000	               cmp dword [0x04000ef9], 0	       412	ui.c	FUNCTION_13	IF_1
0x4000ef9	            0x7407	                            je 0x4000f02	       412	ui.c	FUNCTION_13	IF_1
0x4000efb	      0xe800000000	                          call 0x4000f00	       413	ui.c	FUNCTION_13	CALL_1
0x4000f00	            0xeb05	                           jmp 0x4000f07	       413	ui.c	FUNCTION_13	CALL_1
0x4000f02	      0xe800000000	                          call 0x4000f07	       416	ui.c	FUNCTION_13	CALL_2
0x4000f07	    0x891d00000000	            mov dword [0x04000f0d], ebx 	       418	ui.c	FUNCTION_13
0x4000f0d	              0x5b	                                 pop rbx	       419	ui.c	FUNCTION_13
0x4000f0e	              0xc3	                                     ret	       419	ui.c	FUNCTION_13
read_from_input_buf	CALL,3:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,0:DO,0:WHILE,0	32
0x4002118	            0x4154	                                push r12	      1772	ui.c	FUNCTION_54
0x400211a	              0x55	                                push rbp	      1772	ui.c	FUNCTION_54
0x400211b	              0x53	                                push rbx	      1772	ui.c	FUNCTION_54
0x400211c	          0x4989fc	                            mov r12, rdi	      1772	ui.c	FUNCTION_54
0x400211f	          0x4889f3	                            mov rbx, rsi	      1772	ui.c	FUNCTION_54
0x4002122	    0x833d00000000	               cmp dword [0x04002129], 0	      1773	ui.c	FUNCTION_54	IF_1
0x4002129	            0x750a	                           jne 0x4002135	      1773	ui.c	FUNCTION_54	IF_1
0x400212b	      0xbf01000000	                              mov edi, 1	      1774	ui.c	FUNCTION_54	CALL_1
0x4002130	      0xe800000000	                          call 0x4002135	      1774	ui.c	FUNCTION_54	CALL_1
0x4002135	    0x8b2d00000000	            mov ebp, dword [0x0400213b] 	      1775	ui.c	FUNCTION_54	IF_2
0x400213b	          0x4863c5	                         movsxd rax, ebp	      1775	ui.c	FUNCTION_54	IF_2
0x400213e	          0x4839d8	                            cmp rax, rbx	      1775	ui.c	FUNCTION_54	IF_2
0x4002141	        0x480f4ed8	                         cmovle rbx, rax	      1775	ui.c	FUNCTION_54	IF_2
0x4002145	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_83	CALL_3
0x4002148	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x400214d	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4002150	      0xe800000000	                          call 0x4002155	        59	string3.h	FUNCTION_83	CALL_3
0x4002155	            0x89ea	                            mov edx, ebp	      1778	ui.c	FUNCTION_54
0x4002157	            0x29da	                            sub edx, ebx	      1778	ui.c	FUNCTION_54
0x4002159	    0x891500000000	            mov dword [0x0400215f], edx 	      1778	ui.c	FUNCTION_54
0x400215f	            0x85d2	                           test edx, edx	      1779	ui.c	FUNCTION_54	IF_3
0x4002161	            0x7419	                            je 0x400217c	      1779	ui.c	FUNCTION_54	IF_3
0x4002163	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_83	CALL_3
0x4002166	    0x488db3000000	                          lea rsi, [rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x400216d	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x4002172	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4002177	      0xe800000000	                          call 0x400217c	        59	string3.h	FUNCTION_83	CALL_3
0x400217c	            0x89d8	                            mov eax, ebx	      1782	ui.c	FUNCTION_54
0x400217e	              0x5b	                                 pop rbx	      1782	ui.c	FUNCTION_54
0x400217f	              0x5d	                                 pop rbp	      1782	ui.c	FUNCTION_54
0x4002180	            0x415c	                                 pop r12	      1782	ui.c	FUNCTION_54
0x4002182	              0xc3	                                     ret	      1782	ui.c	FUNCTION_54
ui_focus_change	CALL,12:SWITCH,0:FOR,0:functions,0:IF,8:ELSE,2:DO,0:WHILE,0	78
0x4003be3	              0x55	                                push rbp	      3287	ui.c	FUNCTION_80
0x4003be4	              0x53	                                push rbx	      3287	ui.c	FUNCTION_80
0x4003be5	        0x4883ec08	                              sub rsp, 8	      3287	ui.c	FUNCTION_80
0x4003be9	            0x85ff	                           test edi, edi	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003beb	     0xf840b010000	                            je 0x4003cfc	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003bf1	    0x488b05000000	            mov rax, qword [0x04003bf8] 	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003bf8	        0x488d6802	                      lea rbp, [rax + 2]	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003bfc	      0xbf00000000	                              mov edi, 0	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003c01	      0xe800000000	                          call 0x4003c06	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003c06	      0xbb00000000	                              mov ebx, 0	      3289	ui.c	FUNCTION_80
0x4003c0b	          0x4839c5	                            cmp rbp, rax	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003c0e	     0xf8dfe000000	                           jge 0x4003d12	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4003c14	    0x8b3d00000000	            mov edi, dword [0x04003c1a] 	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4003c1a	      0xe800000000	                          call 0x4003c1f	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4003c1f	            0x89c3	                            mov ebx, eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4003c21	      0xbf00000000	                              mov edi, 0	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4003c26	      0xe800000000	                          call 0x4003c2b	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4003c2b	    0x488905000000	            mov qword [0x04003c32], rax 	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4003c32	      0xe9db000000	                           jmp 0x4003d12	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4003c37	      0xb900000000	                              mov ecx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x4003c3c	      0xba00000000	                              mov edx, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x4003c41	      0xbe00000000	                              mov esi, 0	      3309	ui.c	FUNCTION_80	CALL_4
0x4003c46	      0xe800000000	                          call 0x4003c4b	      3309	ui.c	FUNCTION_80	CALL_4
0x4003c4b	             0x9d8	                             or eax, ebx	      3312	ui.c	FUNCTION_80	IF_2
0x4003c4d	     0xf8499000000	                            je 0x4003cec	      3312	ui.c	FUNCTION_80	IF_2
0x4003c53	    0xc70500000000	               mov dword [0x04003c5d], 0	      3316	ui.c	FUNCTION_80	IF_2
0x4003c5d	    0x8b0500000000	            mov eax, dword [0x04003c63] 	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4003c63	            0xa808	                              test al, 8	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4003c65	            0x7407	                            je 0x4003c6e	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4003c67	      0xe800000000	                          call 0x4003c6c	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4003c6c	            0xeb57	                           jmp 0x4003cc5	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4003c6e	            0x89c2	                            mov edx, eax	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c70	          0x80e6fd	                            and dh, 0xfd	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c73	    0x81fa00040000	                          cmp edx, 0x400	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c79	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c7c	      0x3d01020000	                          cmp eax, 0x201	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c81	           0xf94c2	                                 sete dl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c84	             0x9ca	                             or edx, ecx	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c86	      0x3d00030000	                          cmp eax, 0x300	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c8b	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c8e	             0x8ca	                               or dl, cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c90	            0x7510	                           jne 0x4003ca2	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c92	      0x3d00080000	                          cmp eax, 0x800	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c97	            0x7409	                            je 0x4003ca2	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003c99	    0x833d00000000	               cmp dword [0x04003ca0], 0	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003ca0	            0x7407	                            je 0x4003ca9	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003ca2	      0xe800000000	                          call 0x4003ca7	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003ca7	            0xeb1c	                           jmp 0x4003cc5	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4003ca9	            0xa811	                           test al, 0x11	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4003cab	            0x7418	                            je 0x4003cc5	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4003cad	    0x833d00000000	               cmp dword [0x04003cb4], 0	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4003cb4	            0x740a	                            je 0x4003cc0	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4003cb6	      0xbf00000000	                              mov edi, 0	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x4003cbb	      0xe800000000	                          call 0x4003cc0	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x4003cc0	      0xe800000000	                          call 0x4003cc5	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x4003cc5	      0xe800000000	                          call 0x4003cca	      3329	ui.c	FUNCTION_80	IF_2	CALL_9
0x4003cca	      0xbe01000000	                              mov esi, 1	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x4003ccf	      0xbf00000000	                              mov edi, 0	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x4003cd4	      0xe800000000	                          call 0x4003cd9	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x4003cd9	    0x833d00000000	               cmp dword [0x04003ce0], 0	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x4003ce0	            0x740a	                            je 0x4003cec	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x4003ce2	      0xbf00000000	                              mov edi, 0	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x4003ce7	      0xe800000000	                          call 0x4003cec	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x4003cec	    0x833d00000000	               cmp dword [0x04003cf3], 0	      3338	ui.c	FUNCTION_80	IF_8
0x4003cf3	            0x742e	                            je 0x4003d23	      3338	ui.c	FUNCTION_80	IF_8
0x4003cf5	      0xe800000000	                          call 0x4003cfa	      3339	ui.c	FUNCTION_80	CALL_12
0x4003cfa	            0xeb27	                           jmp 0x4003d23	      3341	ui.c	FUNCTION_80
0x4003cfc	    0x4c8b05000000	              mov r8, qword [0x04003d03]	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d03	      0xbb00000000	                              mov ebx, 0	      3289	ui.c	FUNCTION_80
0x4003d08	      0xbf35000000	                           mov edi, 0x35	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d0d	      0xe925ffffff	                           jmp 0x4003c37	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d12	    0x4c8b05000000	              mov r8, qword [0x04003d19]	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d19	      0xbf34000000	                           mov edi, 0x34	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d1e	      0xe914ffffff	                           jmp 0x4003c37	      3309	ui.c	FUNCTION_80	CALL_4
0x4003d23	        0x4883c408	                              add rsp, 8	      3341	ui.c	FUNCTION_80
0x4003d27	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x4003d28	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x4003d29	              0xc3	                                     ret	      3341	ui.c	FUNCTION_80
im_save_status	CALL,0:SWITCH,0:FOR,0:functions,0:IF,3:ELSE,1:DO,0:WHILE,0	20
0x4003d2a	    0x833d00000000	               cmp dword [0x04003d31], 0	      3358	ui.c	FUNCTION_81	IF_1
0x4003d31	            0x754c	                           jne 0x4003d7f	      3358	ui.c	FUNCTION_81	IF_1
0x4003d33	    0x833d00000000	               cmp dword [0x04003d3a], 0	      3358	ui.c	FUNCTION_81	IF_1
0x4003d3a	            0x7443	                            je 0x4003d7f	      3358	ui.c	FUNCTION_81	IF_1
0x4003d3c	    0x833d00000000	               cmp dword [0x04003d43], 0	      3358	ui.c	FUNCTION_81	IF_1
0x4003d43	            0x753a	                           jne 0x4003d7f	      3358	ui.c	FUNCTION_81	IF_1
0x4003d45	    0x48833d000000	               cmp qword [0x04003d4d], 0	      3360	ui.c	FUNCTION_81	IF_1
0x4003d4d	            0x7430	                            je 0x4003d7f	      3360	ui.c	FUNCTION_81	IF_1
0x4003d4f	    0x833d00000000	               cmp dword [0x04003d56], 0	      3363	ui.c	FUNCTION_81	IF_1
0x4003d56	            0x7409	                            je 0x4003d61	      3363	ui.c	FUNCTION_81	IF_1
0x4003d58	    0x833d00000000	               cmp dword [0x04003d5f], 0	      3363	ui.c	FUNCTION_81	IF_1
0x4003d5f	            0x741e	                            je 0x4003d7f	      3363	ui.c	FUNCTION_81	IF_1
0x4003d61	    0x833d00000000	               cmp dword [0x04003d68], 0	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x4003d68	            0x7408	                            je 0x4003d72	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x4003d6a	    0x48c707020000	                      mov qword [rdi], 2	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x4003d71	              0xc3	                                     ret	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x4003d72	        0x48833f02	                      cmp qword [rdi], 2	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x4003d76	            0x7507	                           jne 0x4003d7f	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x4003d78	    0x48c707000000	                      mov qword [rdi], 0	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x4003d7f	            0xf3c3	                                     ret	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
