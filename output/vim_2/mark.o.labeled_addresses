clrallmarks	WHILE,0:DO,0:CALL,0:IF,1:ELSE,0:functions,0:FOR,2:SWITCH,0	28
0x4001c10	    0x833d00000000	cmp dword [0x04001c17], 0xffffffffffffffff	       638	mark.c	FUNCTION_15	IF_1
0x4001c17	     0xf8483000000	                            je 0x4001ca0	       638	mark.c	FUNCTION_15	IF_1
0x4001c1d	    0x488d87580100	                  lea rax, [rdi + 0x158]	       638	mark.c	FUNCTION_15	IF_1
0x4001c24	    0x488d97f80200	                  lea rdx, [rdi + 0x2f8]	       638	mark.c	FUNCTION_15	IF_1
0x4001c2b	       0xf1f440000	                   nop dword [rax + rax]	       638	mark.c	FUNCTION_15	IF_1
0x4001c30	    0x48c700000000	                      mov qword [rax], 0	       649	mark.c	FUNCTION_15	FOR_2
0x4001c37	        0x4883c010	                           add rax, 0x10	       649	mark.c	FUNCTION_15	FOR_2
0x4001c3b	          0x4839c2	                            cmp rdx, rax	       648	mark.c	FUNCTION_15	FOR_2
0x4001c3e	            0x75f0	                           jne 0x4001c30	       648	mark.c	FUNCTION_15	FOR_2
0x4001c40	    0xc70500000000	           mov dword [0x04001c4a], 0x1a 	       648	mark.c	FUNCTION_15	FOR_2
0x4001c4a	    0x48c787e01100	            mov qword [rdi + 0x11e0], 0 	       650	mark.c	FUNCTION_15
0x4001c55	    0x48c787001200	            mov qword [rdi + 0x1200], 0 	       651	mark.c	FUNCTION_15
0x4001c60	    0x48c787280300	              mov qword [rdi + 0x328], 1	       652	mark.c	FUNCTION_15
0x4001c6b	    0xc78730030000	              mov dword [rdi + 0x330], 0	       653	mark.c	FUNCTION_15
0x4001c75	    0xc78734030000	              mov dword [rdi + 0x334], 0	       655	mark.c	FUNCTION_15
0x4001c7f	    0x48c787380300	              mov qword [rdi + 0x338], 0	       657	mark.c	FUNCTION_15
0x4001c8a	    0x48c787480300	              mov qword [rdi + 0x348], 0	       658	mark.c	FUNCTION_15
0x4001c95	    0xc78798090000	              mov dword [rdi + 0x998], 0	       660	mark.c	FUNCTION_15
0x4001c9f	              0xc3	                                     ret	       660	mark.c	FUNCTION_15
0x4001ca0	      0xb800000000	                              mov eax, 0	       660	mark.c	FUNCTION_15
0x4001ca5	           0xf1f00	                         nop dword [rax]	       660	mark.c	FUNCTION_15
0x4001ca8	    0x48c700000000	                      mov qword [rax], 0	       641	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001caf	    0x48c740180000	               mov qword [rax + 0x18], 0	       642	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001cb7	        0x4883c028	                           add rax, 0x28	       642	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001cbb	    0x48c740f80000	                  mov qword [rax - 8], 0	       644	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001cc3	    0x483d00000000	                              cmp rax, 0	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001cc9	            0x75dd	                           jne 0x4001ca8	       639	mark.c	FUNCTION_15	IF_1	FOR_1
0x4001ccb	      0xe94dffffff	                           jmp 0x4001c1d	       639	mark.c	FUNCTION_15	IF_1	FOR_1
cleanup_jumplist	WHILE,0:DO,0:CALL,2:IF,6:ELSE,1:functions,0:FOR,3:SWITCH,0	103
0x40029e0	            0x4155	                                push r13	      1309	mark.c	FUNCTION_28
0x40029e2	            0x4154	                                push r12	      1309	mark.c	FUNCTION_28
0x40029e4	              0x55	                                push rbp	      1309	mark.c	FUNCTION_28
0x40029e5	              0x53	                                push rbx	      1309	mark.c	FUNCTION_28
0x40029e6	          0x4889fb	                            mov rbx, rdi	      1309	mark.c	FUNCTION_28
0x40029e9	        0x4883ec08	                              sub rsp, 8	      1309	mark.c	FUNCTION_28
0x40029ed	            0x85f6	                           test esi, esi	      1313	mark.c	FUNCTION_28	IF_1
0x40029ef	    0x8b8f40150000	          mov ecx, dword [rdi + 0x1540] 	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40029f5	     0xf8451010000	                            je 0x4002b4c	      1313	mark.c	FUNCTION_28	IF_1
0x40029fb	            0x85c9	                           test ecx, ecx	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40029fd	            0x89c8	                            mov eax, ecx	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x40029ff	     0xf8e53010000	                           jle 0x4002b58	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a05	    0x4c8dafa00500	                  lea r13, [rdi + 0x5a0]	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a0c	          0x4531e4	                          xor r12d, r12d	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a0f	          0x4c89ed	                            mov rbp, r13	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a12	            0xeb13	                           jmp 0x4002a27	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a14	         0xf1f4000	                         nop dword [rax]	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a18	        0x4183c401	                             add r12d, 1	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a1c	        0x4883c528	                           add rbp, 0x28	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a20	            0x89c1	                            mov ecx, eax	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a22	          0x4439e0	                           cmp eax, r12d	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a25	            0x7e2b	                           jle 0x4002a52	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a27	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002a2a	            0x85d2	                           test edx, edx	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002a2c	            0x75ea	                           jne 0x4002a18	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002a2e	      0x48837d0000	                      cmp qword [rbp], 0	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002a33	            0x74e3	                            je 0x4002a18	      1320	mark.c	FUNCTION_28	IF_1	FOR_1	IF_2
0x4002a35	          0x4889ef	                            mov rdi, rbp	      1322	mark.c	FUNCTION_28	IF_1	FOR_1	CALL_1
0x4002a38	        0x4183c401	                             add r12d, 1	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a3c	        0x4883c528	                           add rbp, 0x28	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a40	      0xe800000000	                          call 0x4002a45	      1322	mark.c	FUNCTION_28	IF_1	FOR_1	CALL_1
0x4002a45	    0x8b8340150000	          mov eax, dword [rbx + 0x1540] 	      1322	mark.c	FUNCTION_28	IF_1	FOR_1	CALL_1
0x4002a4b	          0x4439e0	                           cmp eax, r12d	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a4e	            0x89c1	                            mov ecx, eax	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a50	            0x7fd5	                            jg 0x4002a27	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002a52	          0x4531e4	                          xor r12d, r12d	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002a55	          0x4c89ed	                            mov rbp, r13	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002a58	          0x4531ed	                          xor r13d, r13d	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002a5b	          0x4439e1	                           cmp ecx, r12d	      1327	mark.c	FUNCTION_28	FOR_2
0x4002a5e	     0xf8ea6000000	                           jle 0x4002b0a	      1327	mark.c	FUNCTION_28	FOR_2
0x4002a64	         0xf1f4000	                         nop dword [rax]	      1327	mark.c	FUNCTION_28	FOR_2
0x4002a68	    0x443ba3441500	         cmp r12d, dword [rbx + 0x1544] 	      1329	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002a6f	     0xf84cb000000	                            je 0x4002b40	      1329	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002a75	        0x4183c401	                             add r12d, 1	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a79	          0x4439e1	                           cmp ecx, r12d	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a7c	            0x7e3e	                           jle 0x4002abc	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a7e	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a81	          0x4489e0	                           mov eax, r12d	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a84	            0x85f6	                           test esi, esi	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a86	        0x400f95c7	                               setne dil	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a8a	    0x660f1f440000	                    nop word [rax + rax]	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002a90	          0x4863d0	                         movsxd rdx, eax	      1332	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002a93	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1332	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002a97	        0x488d14d3	                  lea rdx, [rbx + rdx*8]	      1332	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002a9b	    0x39b2b0050000	           cmp dword [rdx + 0x5b0], esi 	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002aa1	            0x7512	                           jne 0x4002ab5	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002aa3	          0x4084ff	                           test dil, dil	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002aa6	            0x740d	                            je 0x4002ab5	      1334	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002aa8	        0x4c8b4500	                     mov r8, qword [rbp]	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002aac	    0x4c3982a00500	            cmp qword [rdx + 0x5a0], r8 	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002ab3	            0x7476	                            je 0x4002b2b	      1335	mark.c	FUNCTION_28	FOR_2	FOR_3	IF_4
0x4002ab5	          0x83c001	                              add eax, 1	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002ab8	            0x39c1	                            cmp ecx, eax	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002aba	            0x75d4	                           jne 0x4002a90	      1331	mark.c	FUNCTION_28	FOR_2	FOR_3
0x4002abc	          0x4963c5	                        movsxd rax, r13d	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002abf	        0x488b7500	                    mov rsi, qword [rbp]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ac3	        0x4183c501	                             add r13d, 1	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ac7	        0x488d0480	                  lea rax, [rax + rax*4]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002acb	        0x488d14c3	                  lea rdx, [rbx + rax*8]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002acf	    0x4889b2a00500	            mov qword [rdx + 0x5a0], rsi	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ad6	    0x488d82a00500	                  lea rax, [rdx + 0x5a0]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002add	        0x488b5508	                mov rdx, qword [rbp + 8]	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ae1	        0x48895008	                mov qword [rax + 8], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ae5	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002ae9	        0x48895010	             mov qword [rax + 0x10], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002aed	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002af1	        0x48895018	             mov qword [rax + 0x18], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002af5	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002af9	        0x48895020	             mov qword [rax + 0x20], rdx	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002afd	        0x4883c528	                           add rbp, 0x28	      1339	mark.c	FUNCTION_28	FOR_2	IF_5
0x4002b01	          0x4439e1	                           cmp ecx, r12d	      1327	mark.c	FUNCTION_28	FOR_2
0x4002b04	     0xf8f5effffff	                            jg 0x4002a68	      1327	mark.c	FUNCTION_28	FOR_2
0x4002b0a	    0x398b44150000	          cmp dword [rbx + 0x1544], ecx 	      1343	mark.c	FUNCTION_28	IF_6
0x4002b10	            0x7507	                           jne 0x4002b19	      1343	mark.c	FUNCTION_28	IF_6
0x4002b12	    0x4489ab441500	         mov dword [rbx + 0x1544], r13d 	      1344	mark.c	FUNCTION_28	IF_6
0x4002b19	    0x4489ab401500	         mov dword [rbx + 0x1540], r13d 	      1345	mark.c	FUNCTION_28
0x4002b20	        0x4883c408	                              add rsp, 8	      1346	mark.c	FUNCTION_28
0x4002b24	              0x5b	                                 pop rbx	      1346	mark.c	FUNCTION_28
0x4002b25	              0x5d	                                 pop rbp	      1346	mark.c	FUNCTION_28
0x4002b26	            0x415c	                                 pop r12	      1346	mark.c	FUNCTION_28
0x4002b28	            0x415d	                                 pop r13	      1346	mark.c	FUNCTION_28
0x4002b2a	              0xc3	                                     ret	      1346	mark.c	FUNCTION_28
0x4002b2b	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002b2f	      0xe800000000	                          call 0x4002b34	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002b34	    0x8b8b40150000	          mov ecx, dword [rbx + 0x1540] 	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002b3a	            0xebc1	                           jmp 0x4002afd	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002b3c	         0xf1f4000	                         nop dword [rax]	      1341	mark.c	FUNCTION_28	FOR_2	CALL_2
0x4002b40	    0x4489ab441500	         mov dword [rbx + 0x1544], r13d 	      1330	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002b47	      0xe929ffffff	                           jmp 0x4002a75	      1330	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002b4c	    0x4c8dafa00500	                  lea r13, [rdi + 0x5a0]	      1330	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002b53	      0xe9fafeffff	                           jmp 0x4002a52	      1330	mark.c	FUNCTION_28	FOR_2	IF_3
0x4002b58	          0x4531ed	                          xor r13d, r13d	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
0x4002b5b	            0xebad	                           jmp 0x4002b0a	      1318	mark.c	FUNCTION_28	IF_1	FOR_1
movemark	WHILE,0:DO,0:CALL,5:IF,8:ELSE,1:functions,0:FOR,1:SWITCH,0	88
0x4002b60	              0x55	                                push rbp	       220	mark.c	FUNCTION_5
0x4002b61	              0x53	                                push rbx	       220	mark.c	FUNCTION_5
0x4002b62	            0x89fd	                            mov ebp, edi	       220	mark.c	FUNCTION_5
0x4002b64	      0xbe01000000	                              mov esi, 1	       224	mark.c	FUNCTION_5	CALL_1
0x4002b69	        0x4883ec08	                              sub rsp, 8	       220	mark.c	FUNCTION_5
0x4002b6d	    0x488b3d000000	            mov rdi, qword [0x04002b74] 	       224	mark.c	FUNCTION_5	CALL_1
0x4002b74	      0xe800000000	                          call 0x4002b79	       224	mark.c	FUNCTION_5	CALL_1
0x4002b79	    0x488b05000000	            mov rax, qword [0x04002b80] 	       226	mark.c	FUNCTION_5	IF_1
0x4002b80	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	       226	mark.c	FUNCTION_5	IF_1
0x4002b86	            0x85c9	                           test ecx, ecx	       226	mark.c	FUNCTION_5	IF_1
0x4002b88	     0xf84d2000000	                            je 0x4002c60	       226	mark.c	FUNCTION_5	IF_1
0x4002b8e	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002b94	            0x89ee	                            mov esi, ebp	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002b96	             0x1d6	                            add esi, edx	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002b98	     0xf88c2000000	                            js 0x4002c60	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002b9e	            0x39f1	                            cmp ecx, esi	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002ba0	     0xf8eba000000	                           jle 0x4002c60	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002ba6	            0x39d1	                            cmp ecx, edx	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002ba8	     0xf84d2000000	                            je 0x4002c80	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002bae	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002bb4	             0x1ea	                            add edx, ebp	       240	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002bb6	    0x899044150000	          mov dword [rax + 0x1544], edx 	       248	mark.c	FUNCTION_5	FOR_1
0x4002bbc	          0x4863d2	                         movsxd rdx, edx	       250	mark.c	FUNCTION_5	FOR_1
0x4002bbf	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       250	mark.c	FUNCTION_5	FOR_1
0x4002bc3	    0x488d9cd0a005	         lea rbx, [rax + rdx*8 + 0x5a0] 	       250	mark.c	FUNCTION_5	FOR_1
0x4002bcb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       251	mark.c	FUNCTION_5	FOR_1	IF_5
0x4002bce	            0x85c0	                           test eax, eax	       251	mark.c	FUNCTION_5	FOR_1	IF_5
0x4002bd0	     0xf849a000000	                            je 0x4002c70	       251	mark.c	FUNCTION_5	FOR_1	IF_5
0x4002bd6	    0x488b05000000	            mov rax, qword [0x04002bdd] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002bdd	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002be0	    0x3bb8b8000000	            cmp edi, dword [rax + 0xb8] 	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002be6	     0xf84c4000000	                            je 0x4002cb0	       253	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002bec	      0xe800000000	                          call 0x4002bf1	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002bf1	          0x4885c0	                           test rax, rax	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002bf4	            0x743a	                            je 0x4002c30	       256	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x4002bf6	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002bf9	          0x488b33	                    mov rsi, qword [rbx]	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002bfc	            0x31c9	                            xor ecx, ecx	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002bfe	            0x31d2	                            xor edx, edx	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002c00	      0xe800000000	                          call 0x4002c05	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002c05	            0x85c0	                           test eax, eax	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002c07	            0x7457	                            je 0x4002c60	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x4002c09	          0x488b0b	                    mov rcx, qword [rbx]	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c0c	    0x488b05000000	            mov rax, qword [0x04002c13] 	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c13	        0x488b5b08	                mov rbx, qword [rbx + 8]	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c17	        0x48894838	             mov qword [rax + 0x38], rcx	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c1b	        0x48895840	             mov qword [rax + 0x40], rbx	       265	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c1f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       266	mark.c	FUNCTION_5	FOR_1	IF_6
0x4002c26	        0x4883c408	                              add rsp, 8	       272	mark.c	FUNCTION_5
0x4002c2a	              0x5b	                                 pop rbx	       272	mark.c	FUNCTION_5
0x4002c2b	              0x5d	                                 pop rbp	       272	mark.c	FUNCTION_5
0x4002c2c	              0xc3	                                     ret	       272	mark.c	FUNCTION_5
0x4002c2d	           0xf1f00	                         nop dword [rax]	       272	mark.c	FUNCTION_5
0x4002c30	            0x89e8	                            mov eax, ebp	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002c32	          0xc1f81f	                           sar eax, 0x1f	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002c35	          0x83c801	                               or eax, 1	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002c38	             0x1c5	                            add ebp, eax	       258	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x4002c3a	    0x488b05000000	            mov rax, qword [0x04002c41] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c41	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c47	            0x89d6	                            mov esi, edx	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c49	             0x1ee	                            add esi, ebp	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c4b	            0x7813	                            js 0x4002c60	       231	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c4d	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c53	            0x39ce	                            cmp esi, ecx	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c55	     0xf8c4bffffff	                            jl 0x4002ba6	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c5b	       0xf1f440000	                   nop dword [rax + rax]	       232	mark.c	FUNCTION_5	FOR_1	IF_2
0x4002c60	            0x31c0	                            xor eax, eax	       227	mark.c	FUNCTION_5	IF_1
0x4002c62	        0x4883c408	                              add rsp, 8	       272	mark.c	FUNCTION_5
0x4002c66	              0x5b	                                 pop rbx	       272	mark.c	FUNCTION_5
0x4002c67	              0x5d	                                 pop rbp	       272	mark.c	FUNCTION_5
0x4002c68	              0xc3	                                     ret	       272	mark.c	FUNCTION_5
0x4002c69	     0xf1f80000000	                         nop dword [rax]	       272	mark.c	FUNCTION_5
0x4002c70	          0x4889df	                            mov rdi, rbx	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x4002c73	      0xe800000000	                          call 0x4002c78	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x4002c78	      0xe959ffffff	                           jmp 0x4002bd6	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x4002c7d	           0xf1f00	                         nop dword [rax]	       252	mark.c	FUNCTION_5	FOR_1	CALL_3
0x4002c80	      0xe800000000	                          call 0x4002c85	       242	mark.c	FUNCTION_5	FOR_1	IF_3	CALL_2
0x4002c85	    0x488b05000000	            mov rax, qword [0x04002c8c] 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002c8c	    0x8b9844150000	          mov ebx, dword [rax + 0x1544] 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002c92	          0x8d53ff	                      lea edx, [rbx - 1]	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002c95	    0x899044150000	          mov dword [rax + 0x1544], edx 	       243	mark.c	FUNCTION_5	FOR_1	IF_3
0x4002c9b	             0x1ea	                            add edx, ebp	       244	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x4002c9d	     0xf8913ffffff	                           jns 0x4002bb6	       244	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x4002ca3	            0x31c0	                            xor eax, eax	       227	mark.c	FUNCTION_5	IF_1
0x4002ca5	            0xebbb	                           jmp 0x4002c62	       227	mark.c	FUNCTION_5	IF_1
0x4002ca7	    0x660f1f840000	                    nop word [rax + rax]	       227	mark.c	FUNCTION_5	IF_1
0x4002cb0	          0x4889d8	                            mov rax, rbx	       269	mark.c	FUNCTION_5	FOR_1	ELSE_1
0x4002cb3	      0xe96effffff	                           jmp 0x4002c26	       269	mark.c	FUNCTION_5	FOR_1	ELSE_1
write_viminfo_marks	WHILE,0:DO,0:CALL,4:IF,0:ELSE,0:functions,1:FOR,0:SWITCH,0	90
0x4003cb0	    0x488b0d000000	            mov rcx, qword [0x04003cb7] 	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cb7	            0x4154	                                push r12	      1895	mark.c	FUNCTION_43
0x4003cb9	    0x4c8b05000000	              mov r8, qword [0x04003cc0]	      1895	mark.c	FUNCTION_43
0x4003cc0	              0x55	                                push rbp	      1895	mark.c	FUNCTION_43
0x4003cc1	          0x4889f5	                            mov rbp, rsi	      1895	mark.c	FUNCTION_43
0x4003cc4	              0x53	                                push rbx	      1895	mark.c	FUNCTION_43
0x4003cc5	          0x4889fb	                            mov rbx, rdi	      1895	mark.c	FUNCTION_43
0x4003cc8	          0x4885c9	                           test rcx, rcx	      1905	mark.c	FUNCTION_43	CALL_1
0x4003ccb	            0x7443	                            je 0x4003d10	      1905	mark.c	FUNCTION_43	CALL_1
0x4003ccd	           0xf1f00	                         nop dword [rax]	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cd0	          0x4939c8	                             cmp r8, rcx	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cd3	     0xf84d7000000	                            je 0x4003db0	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cd9	        0x488b4120	            mov rax, qword [rcx + 0x20] 	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cdd	            0xeb24	                           jmp 0x4003d03	      1905	mark.c	FUNCTION_43	CALL_1
0x4003cdf	              0x90	                                     nop	      1905	mark.c	FUNCTION_43	CALL_1
0x4003ce0	        0x488b5008	                mov rdx, qword [rax + 8]	      1382	mark.c	FUNCTION_31	IF_1
0x4003ce4	          0x4885d2	                           test rdx, rdx	      1382	mark.c	FUNCTION_31	IF_1
0x4003ce7	            0x7416	                            je 0x4003cff	      1382	mark.c	FUNCTION_31	IF_1
0x4003ce9	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1383	mark.c	FUNCTION_31	IF_1
0x4003ced	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1383	mark.c	FUNCTION_31	IF_1
0x4003cf1	    0x4889b2280300	            mov qword [rdx + 0x328], rsi	      1383	mark.c	FUNCTION_31	IF_1
0x4003cf8	    0x4889ba300300	            mov qword [rdx + 0x330], rdi	      1383	mark.c	FUNCTION_31	IF_1
0x4003cff	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d03	          0x4885c0	                           test rax, rax	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d06	            0x75d8	                           jne 0x4003ce0	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d08	          0x488b09	                    mov rcx, qword [rcx]	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d0b	          0x4885c9	                           test rcx, rcx	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d0e	            0x75c0	                           jne 0x4003cd0	      1905	mark.c	FUNCTION_43	CALL_1
0x4003d10	            0x31ff	                            xor edi, edi	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d12	      0xba05000000	                              mov edx, 5	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d17	      0xbe00000000	                              mov esi, 0	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d1c	      0xe800000000	                          call 0x4003d21	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d21	          0x4889de	                            mov rsi, rbx	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d24	          0x4889c7	                            mov rdi, rax	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d27	      0xe800000000	                          call 0x4003d2c	      1908	mark.c	FUNCTION_43	CALL_4
0x4003d2c	    0x4c8b25000000	            mov r12, qword [0x04003d33] 	      1909	mark.c	FUNCTION_43
0x4003d33	          0x4d85e4	                           test r12, r12	      1909	mark.c	FUNCTION_43
0x4003d36	            0x746a	                            je 0x4003da2	      1909	mark.c	FUNCTION_43
0x4003d38	     0xf1f84000000	                   nop dword [rax + rax]	      1909	mark.c	FUNCTION_43
0x4003d40	    0x418b84241012	          mov eax, dword [r12 + 0x1210] 	      1915	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x4003d48	            0x85c0	                           test eax, eax	      1915	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x4003d4a	            0x744c	                            je 0x4003d98	      1915	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x4003d4c	    0x4983bc242803	              cmp qword [r12 + 0x328], 0	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d55	            0x7528	                           jne 0x4003d7f	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d57	    0x498d84245801	                  lea rax, [r12 + 0x158]	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d5f	    0x498d9424f802	                  lea rdx, [r12 + 0x2f8]	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d67	            0xeb10	                           jmp 0x4003d79	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d69	     0xf1f80000000	                         nop dword [rax]	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d70	        0x4883c010	                           add rax, 0x10	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x4003d74	          0x4839c2	                            cmp rdx, rax	      1922	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x4003d77	            0x741f	                            je 0x4003d98	      1922	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x4003d79	        0x48833800	                      cmp qword [rax], 0	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003d7d	            0x74f1	                            je 0x4003d70	      1923	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x4003d7f	    0x498b84248800	            mov rax, qword [r12 + 0x88] 	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d87	          0x4885c0	                           test rax, rax	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d8a	            0x740c	                            je 0x4003d98	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d8c	          0x803800	                       cmp byte [rax], 0	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d8f	            0x752b	                           jne 0x4003dbc	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d91	     0xf1f80000000	                         nop dword [rax]	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x4003d98	      0x4d8b642468	            mov r12, qword [r12 + 0x68] 	      1909	mark.c	FUNCTION_43
0x4003d9d	          0x4d85e4	                           test r12, r12	      1909	mark.c	FUNCTION_43
0x4003da0	            0x759e	                           jne 0x4003d40	      1909	mark.c	FUNCTION_43
0x4003da2	              0x5b	                                 pop rbx	      1940	mark.c	FUNCTION_43
0x4003da3	              0x5d	                                 pop rbp	      1940	mark.c	FUNCTION_43
0x4003da4	            0x415c	                                 pop r12	      1940	mark.c	FUNCTION_43
0x4003da6	              0xc3	                                     ret	      1940	mark.c	FUNCTION_43
0x4003da7	    0x660f1f840000	                    nop word [rax + rax]	      1940	mark.c	FUNCTION_43
0x4003db0	    0x488b05000000	            mov rax, qword [0x04003db7] 	      1905	mark.c	FUNCTION_43	CALL_1
0x4003db7	      0xe947ffffff	                           jmp 0x4003d03	      1905	mark.c	FUNCTION_43	CALL_1
0x4003dbc	          0x4c89e7	                            mov rdi, r12	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003dbf	      0xe80cfaffff	               call sym.skip_for_viminfo	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003dc4	            0x85c0	                           test eax, eax	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003dc6	            0x75d0	                           jne 0x4003d98	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x4003dc8	          0x4885ed	                           test rbp, rbp	      1933	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x4003dcb	            0x7426	                            je 0x4003df3	      1933	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x4003dcd	      0xbe01000000	                              mov esi, 1	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003dd2	          0x4889ef	                            mov rdi, rbp	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003dd5	      0xe800000000	                          call 0x4003dda	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003dda	          0x83f801	                              cmp eax, 1	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003ddd	            0x75b9	                           jne 0x4003d98	      1935	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x4003ddf	        0x48634500	                 movsxd rax, dword [rbp]	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003de3	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003de7	          0x8d4801	                      lea ecx, [rax + 1]	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003dea	          0x894d00	                    mov dword [rbp], ecx	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003ded	        0x4c8924c2	            mov qword [rdx + rax*8], r12	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003df1	            0xeba5	                           jmp 0x4003d98	      1936	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x4003df3	          0x4889de	                            mov rsi, rbx	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x4003df6	          0x4c89e7	                            mov rdi, r12	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x4003df9	      0xe832ccffff	             call sym.write_buffer_marks	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x4003dfe	            0xeb98	                           jmp 0x4003d98	      1934	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
checkpcmark	WHILE,0:DO,0:CALL,1:IF,1:ELSE,0:functions,0:FOR,0:SWITCH,0	21
0x40013c0	    0x488b05000000	            mov rax, qword [0x040013c7] 	       205	mark.c	FUNCTION_4	IF_1
0x40013c7	    0x4883b8900500	              cmp qword [rax + 0x590], 0	       205	mark.c	FUNCTION_4	IF_1
0x40013cf	            0x7439	                            je 0x400140a	       205	mark.c	FUNCTION_4	IF_1
0x40013d1	    0x488b90800500	           mov rdx, qword [rax + 0x580] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x40013d8	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x40013dc	            0x7432	                            je 0x4001410	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x40013de	          0x4885d2	                           test rdx, rdx	       207	mark.c	FUNCTION_4	IF_1
0x40013e1	            0x7527	                           jne 0x400140a	       207	mark.c	FUNCTION_4	IF_1
0x40013e3	    0x488bb0900500	           mov rsi, qword [rax + 0x590] 	       209	mark.c	FUNCTION_4	IF_1
0x40013ea	    0x488bb8980500	           mov rdi, qword [rax + 0x598] 	       209	mark.c	FUNCTION_4	IF_1
0x40013f1	    0x48c780900500	              mov qword [rax + 0x590], 0	       210	mark.c	FUNCTION_4	IF_1
0x40013fc	    0x4889b0800500	            mov qword [rax + 0x580], rsi	       209	mark.c	FUNCTION_4	IF_1
0x4001403	    0x4889b8880500	            mov qword [rax + 0x588], rdi	       209	mark.c	FUNCTION_4	IF_1
0x400140a	            0xf3c3	                                     ret	       209	mark.c	FUNCTION_4	IF_1
0x400140c	         0xf1f4000	                         nop dword [rax]	       209	mark.c	FUNCTION_4	IF_1
0x4001410	        0x488b4840	            mov rcx, qword [rax + 0x40] 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x4001414	    0x483988880500	           cmp qword [rax + 0x588], rcx 	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x400141b	            0x74c6	                            je 0x40013e3	       206	mark.c	FUNCTION_4	IF_1	CALL_1
0x400141d	          0x4885d2	                           test rdx, rdx	       207	mark.c	FUNCTION_4	IF_1
0x4001420	            0x74c1	                            je 0x40013e3	       207	mark.c	FUNCTION_4	IF_1
0x4001422	            0xebe6	                           jmp 0x400140a	       207	mark.c	FUNCTION_4	IF_1
do_marks	WHILE,0:DO,0:CALL,13:IF,4:ELSE,1:functions,0:FOR,2:SWITCH,0	135
0x4001d00	            0x4155	                                push r13	       709	mark.c	FUNCTION_18
0x4001d02	            0x4154	                                push r12	       709	mark.c	FUNCTION_18
0x4001d04	              0x55	                                push rbp	       709	mark.c	FUNCTION_18
0x4001d05	              0x53	                                push rbx	       709	mark.c	FUNCTION_18
0x4001d06	        0x4883ec08	                              sub rsp, 8	       709	mark.c	FUNCTION_18
0x4001d0a	          0x488b1f	                    mov rbx, qword [rdi]	       710	mark.c	FUNCTION_18
0x4001d0d	          0x4885db	                           test rbx, rbx	       714	mark.c	FUNCTION_18	IF_1
0x4001d10	            0x740c	                            je 0x4001d1e	       714	mark.c	FUNCTION_18	IF_1
0x4001d12	          0x803b00	                       cmp byte [rbx], 0	       715	mark.c	FUNCTION_18	IF_1
0x4001d15	      0xb800000000	                              mov eax, 0	       715	mark.c	FUNCTION_18	IF_1
0x4001d1a	        0x480f44d8	                          cmove rbx, rax	       715	mark.c	FUNCTION_18	IF_1
0x4001d1e	    0x488b05000000	            mov rax, qword [0x04001d25] 	       717	mark.c	FUNCTION_18	CALL_1
0x4001d25	    0x41b801000000	                              mov r8d, 1	       717	mark.c	FUNCTION_18	CALL_1
0x4001d2b	            0x31c9	                            xor ecx, ecx	       717	mark.c	FUNCTION_18	CALL_1
0x4001d2d	          0x4889de	                            mov rsi, rbx	       717	mark.c	FUNCTION_18	CALL_1
0x4001d30	      0xbf27000000	                           mov edi, 0x27	       717	mark.c	FUNCTION_18	CALL_1
0x4001d35	            0x31ed	                            xor ebp, ebp	       718	mark.c	FUNCTION_18	FOR_1
0x4001d37	    0x488d90800500	                  lea rdx, [rax + 0x580]	       717	mark.c	FUNCTION_18	CALL_1
0x4001d3e	      0xe81df0ffff	                  call sym.show_one_mark	       717	mark.c	FUNCTION_18	CALL_1
0x4001d43	       0xf1f440000	                   nop dword [rax + rax]	       717	mark.c	FUNCTION_18	CALL_1
0x4001d48	          0x4863d5	                         movsxd rdx, ebp	       719	mark.c	FUNCTION_18	CALL_2
0x4001d4b	          0x8d7d61	                   lea edi, [rbp + 0x61]	       719	mark.c	FUNCTION_18	CALL_2
0x4001d4e	            0x31c9	                            xor ecx, ecx	       719	mark.c	FUNCTION_18	CALL_2
0x4001d50	        0x4883c215	                           add rdx, 0x15	       719	mark.c	FUNCTION_18	CALL_2
0x4001d54	    0x41b801000000	                              mov r8d, 1	       719	mark.c	FUNCTION_18	CALL_2
0x4001d5a	          0x4889de	                            mov rsi, rbx	       719	mark.c	FUNCTION_18	CALL_2
0x4001d5d	        0x48c1e204	                              shl rdx, 4	       719	mark.c	FUNCTION_18	CALL_2
0x4001d61	    0x480315000000	             add rdx, qword [0x04001d68]	       719	mark.c	FUNCTION_18	CALL_2
0x4001d68	          0x83c501	                              add ebp, 1	       718	mark.c	FUNCTION_18	FOR_1
0x4001d6b	        0x4883c208	                              add rdx, 8	       719	mark.c	FUNCTION_18	CALL_2
0x4001d6f	      0xe8ecefffff	                  call sym.show_one_mark	       719	mark.c	FUNCTION_18	CALL_2
0x4001d74	          0x83fd1a	                           cmp ebp, 0x1a	       718	mark.c	FUNCTION_18	FOR_1
0x4001d77	            0x75cf	                           jne 0x4001d48	       718	mark.c	FUNCTION_18	FOR_1
0x4001d79	      0xbd00000000	                              mov ebp, 0	       718	mark.c	FUNCTION_18	FOR_1
0x4001d7e	          0x4531e4	                          xor r12d, r12d	       718	mark.c	FUNCTION_18	FOR_1
0x4001d81	            0xeb59	                           jmp 0x4001ddc	       718	mark.c	FUNCTION_18	FOR_1
0x4001d83	       0xf1f440000	                   nop dword [rax + rax]	       718	mark.c	FUNCTION_18	FOR_1
0x4001d88	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       725	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x4001d8c	          0x4d85ed	                           test r13, r13	       726	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x4001d8f	            0x743d	                            je 0x4001dce	       726	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x4001d91	    0x488b05000000	            mov rax, qword [0x04001d98] 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001d98	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001d9b	          0x4531c0	                            xor r8d, r8d	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001d9e	      0x418d542441	                   lea edx, [r12 + 0x41]	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001da3	      0x418d7c2416	                   lea edi, [r12 + 0x16]	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001da8	          0x4889de	                            mov rsi, rbx	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001dab	    0x3988b8000000	            cmp dword [rax + 0xb8], ecx 	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001db1	          0x4c89e9	                            mov rcx, r13	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001db4	        0x410f94c0	                                sete r8b	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001db8	        0x4183fc1a	                          cmp r12d, 0x1a	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001dbc	           0xf4cfa	                          cmovl edi, edx	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001dbf	          0x4889ea	                            mov rdx, rbp	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001dc2	      0xe899efffff	                  call sym.show_one_mark	       728	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x4001dc7	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x4001dca	            0x85c0	                           test eax, eax	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x4001dcc	            0x752a	                           jne 0x4001df8	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x4001dce	        0x4183c401	                             add r12d, 1	       720	mark.c	FUNCTION_18	FOR_2
0x4001dd2	        0x4883c528	                           add rbp, 0x28	       720	mark.c	FUNCTION_18	FOR_2
0x4001dd6	        0x4183fc24	                          cmp r12d, 0x24	       720	mark.c	FUNCTION_18	FOR_2
0x4001dda	            0x7432	                            je 0x4001e0e	       720	mark.c	FUNCTION_18	FOR_2
0x4001ddc	          0x8b5510	            mov edx, dword [rbp + 0x10] 	       722	mark.c	FUNCTION_18	FOR_2	IF_2
0x4001ddf	            0x85d2	                           test edx, edx	       722	mark.c	FUNCTION_18	FOR_2	IF_2
0x4001de1	            0x74a5	                            je 0x4001d88	       722	mark.c	FUNCTION_18	FOR_2	IF_2
0x4001de3	      0xbe0f000000	                            mov esi, 0xf	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001de8	          0x4889ef	                            mov rdi, rbp	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001deb	      0xe800000000	                          call 0x4001df0	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001df0	          0x4989c5	                            mov r13, rax	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001df3	            0xeb97	                           jmp 0x4001d8c	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001df5	           0xf1f00	                         nop dword [rax]	       723	mark.c	FUNCTION_18	FOR_2	CALL_3
0x4001df8	          0x4c89ef	                            mov rdi, r13	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x4001dfb	        0x4183c401	                             add r12d, 1	       720	mark.c	FUNCTION_18	FOR_2
0x4001dff	        0x4883c528	                           add rbp, 0x28	       720	mark.c	FUNCTION_18	FOR_2
0x4001e03	      0xe800000000	                          call 0x4001e08	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x4001e08	        0x4183fc24	                          cmp r12d, 0x24	       720	mark.c	FUNCTION_18	FOR_2
0x4001e0c	            0x75ce	                           jne 0x4001ddc	       720	mark.c	FUNCTION_18	FOR_2
0x4001e0e	    0x488b05000000	            mov rax, qword [0x04001e15] 	       735	mark.c	FUNCTION_18	CALL_6
0x4001e15	          0x4889de	                            mov rsi, rbx	       735	mark.c	FUNCTION_18	CALL_6
0x4001e18	    0x41b801000000	                              mov r8d, 1	       735	mark.c	FUNCTION_18	CALL_6
0x4001e1e	            0x31c9	                            xor ecx, ecx	       735	mark.c	FUNCTION_18	CALL_6
0x4001e20	      0xbf22000000	                           mov edi, 0x22	       735	mark.c	FUNCTION_18	CALL_6
0x4001e25	    0x488d90280300	                  lea rdx, [rax + 0x328]	       735	mark.c	FUNCTION_18	CALL_6
0x4001e2c	      0xe82fefffff	                  call sym.show_one_mark	       735	mark.c	FUNCTION_18	CALL_6
0x4001e31	    0x488b05000000	            mov rax, qword [0x04001e38] 	       736	mark.c	FUNCTION_18	CALL_7
0x4001e38	          0x4889de	                            mov rsi, rbx	       736	mark.c	FUNCTION_18	CALL_7
0x4001e3b	    0x41b801000000	                              mov r8d, 1	       736	mark.c	FUNCTION_18	CALL_7
0x4001e41	            0x31c9	                            xor ecx, ecx	       736	mark.c	FUNCTION_18	CALL_7
0x4001e43	      0xbf5b000000	                           mov edi, 0x5b	       736	mark.c	FUNCTION_18	CALL_7
0x4001e48	    0x488d90e01100	                 lea rdx, [rax + 0x11e0]	       736	mark.c	FUNCTION_18	CALL_7
0x4001e4f	      0xe80cefffff	                  call sym.show_one_mark	       736	mark.c	FUNCTION_18	CALL_7
0x4001e54	    0x488b05000000	            mov rax, qword [0x04001e5b] 	       737	mark.c	FUNCTION_18	CALL_8
0x4001e5b	          0x4889de	                            mov rsi, rbx	       737	mark.c	FUNCTION_18	CALL_8
0x4001e5e	    0x41b801000000	                              mov r8d, 1	       737	mark.c	FUNCTION_18	CALL_8
0x4001e64	            0x31c9	                            xor ecx, ecx	       737	mark.c	FUNCTION_18	CALL_8
0x4001e66	      0xbf5d000000	                           mov edi, 0x5d	       737	mark.c	FUNCTION_18	CALL_8
0x4001e6b	    0x488d90001200	                 lea rdx, [rax + 0x1200]	       737	mark.c	FUNCTION_18	CALL_8
0x4001e72	      0xe8e9eeffff	                  call sym.show_one_mark	       737	mark.c	FUNCTION_18	CALL_8
0x4001e77	    0x488b05000000	            mov rax, qword [0x04001e7e] 	       738	mark.c	FUNCTION_18	CALL_9
0x4001e7e	          0x4889de	                            mov rsi, rbx	       738	mark.c	FUNCTION_18	CALL_9
0x4001e81	    0x41b801000000	                              mov r8d, 1	       738	mark.c	FUNCTION_18	CALL_9
0x4001e87	            0x31c9	                            xor ecx, ecx	       738	mark.c	FUNCTION_18	CALL_9
0x4001e89	      0xbf5e000000	                           mov edi, 0x5e	       738	mark.c	FUNCTION_18	CALL_9
0x4001e8e	    0x488d90380300	                  lea rdx, [rax + 0x338]	       738	mark.c	FUNCTION_18	CALL_9
0x4001e95	      0xe8c6eeffff	                  call sym.show_one_mark	       738	mark.c	FUNCTION_18	CALL_9
0x4001e9a	    0x488b05000000	            mov rax, qword [0x04001ea1] 	       739	mark.c	FUNCTION_18	CALL_10
0x4001ea1	          0x4889de	                            mov rsi, rbx	       739	mark.c	FUNCTION_18	CALL_10
0x4001ea4	    0x41b801000000	                              mov r8d, 1	       739	mark.c	FUNCTION_18	CALL_10
0x4001eaa	            0x31c9	                            xor ecx, ecx	       739	mark.c	FUNCTION_18	CALL_10
0x4001eac	      0xbf2e000000	                           mov edi, 0x2e	       739	mark.c	FUNCTION_18	CALL_10
0x4001eb1	    0x488d90480300	                  lea rdx, [rax + 0x348]	       739	mark.c	FUNCTION_18	CALL_10
0x4001eb8	      0xe8a3eeffff	                  call sym.show_one_mark	       739	mark.c	FUNCTION_18	CALL_10
0x4001ebd	    0x488b05000000	            mov rax, qword [0x04001ec4] 	       740	mark.c	FUNCTION_18	CALL_11
0x4001ec4	          0x4889de	                            mov rsi, rbx	       740	mark.c	FUNCTION_18	CALL_11
0x4001ec7	    0x41b801000000	                              mov r8d, 1	       740	mark.c	FUNCTION_18	CALL_11
0x4001ecd	            0x31c9	                            xor ecx, ecx	       740	mark.c	FUNCTION_18	CALL_11
0x4001ecf	      0xbf3c000000	                           mov edi, 0x3c	       740	mark.c	FUNCTION_18	CALL_11
0x4001ed4	    0x488d90f80200	                  lea rdx, [rax + 0x2f8]	       740	mark.c	FUNCTION_18	CALL_11
0x4001edb	      0xe880eeffff	                  call sym.show_one_mark	       740	mark.c	FUNCTION_18	CALL_11
0x4001ee0	    0x488b05000000	            mov rax, qword [0x04001ee7] 	       741	mark.c	FUNCTION_18	CALL_12
0x4001ee7	          0x4889de	                            mov rsi, rbx	       741	mark.c	FUNCTION_18	CALL_12
0x4001eea	    0x41b801000000	                              mov r8d, 1	       741	mark.c	FUNCTION_18	CALL_12
0x4001ef0	            0x31c9	                            xor ecx, ecx	       741	mark.c	FUNCTION_18	CALL_12
0x4001ef2	      0xbf3e000000	                           mov edi, 0x3e	       741	mark.c	FUNCTION_18	CALL_12
0x4001ef7	    0x488d90080300	                  lea rdx, [rax + 0x308]	       741	mark.c	FUNCTION_18	CALL_12
0x4001efe	      0xe85deeffff	                  call sym.show_one_mark	       741	mark.c	FUNCTION_18	CALL_12
0x4001f03	        0x4883c408	                              add rsp, 8	       743	mark.c	FUNCTION_18
0x4001f07	          0x4889de	                            mov rsi, rbx	       742	mark.c	FUNCTION_18	CALL_13
0x4001f0a	          0x4531c0	                            xor r8d, r8d	       742	mark.c	FUNCTION_18	CALL_13
0x4001f0d	              0x5b	                                 pop rbx	       743	mark.c	FUNCTION_18
0x4001f0e	              0x5d	                                 pop rbp	       743	mark.c	FUNCTION_18
0x4001f0f	            0x415c	                                 pop r12	       743	mark.c	FUNCTION_18
0x4001f11	            0x415d	                                 pop r13	       743	mark.c	FUNCTION_18
0x4001f13	            0x31c9	                            xor ecx, ecx	       742	mark.c	FUNCTION_18	CALL_13
0x4001f15	            0x31d2	                            xor edx, edx	       742	mark.c	FUNCTION_18	CALL_13
0x4001f17	      0xbfffffffff	                     mov edi, 0xffffffff	       742	mark.c	FUNCTION_18	CALL_13
0x4001f1c	      0xe93feeffff	                   jmp sym.show_one_mark	       742	mark.c	FUNCTION_18	CALL_13
buf_compare	WHILE,0:DO,0:CALL,0:IF,1:ELSE,0:functions,0:FOR,0:SWITCH,0	12
0x4000040	          0x488b17	                    mov rdx, qword [rdi]	      1954	mark.c	FUNCTION_44	IF_1
0x4000043	          0x488b06	                    mov rax, qword [rsi]	      1954	mark.c	FUNCTION_44	IF_1
0x4000046	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      1954	mark.c	FUNCTION_44	IF_1
0x400004d	    0x483982500100	           cmp qword [rdx + 0x150], rax 	      1954	mark.c	FUNCTION_44	IF_1
0x4000054	            0x7412	                            je 0x4000068	      1954	mark.c	FUNCTION_44	IF_1
0x4000056	           0xf9ec0	                                setle al	      1956	mark.c	FUNCTION_44
0x4000059	           0xfb6c0	                           movzx eax, al	      1956	mark.c	FUNCTION_44
0x400005c	        0x8d4400ff	                lea eax, [rax + rax - 1]	      1956	mark.c	FUNCTION_44
0x4000060	              0xc3	                                     ret	      1956	mark.c	FUNCTION_44
0x4000061	     0xf1f80000000	                         nop dword [rax]	      1956	mark.c	FUNCTION_44
0x4000068	            0x31c0	                            xor eax, eax	      1955	mark.c	FUNCTION_44	IF_1
0x400006a	              0xc3	                                     ret	      1957	mark.c	FUNCTION_44
setmark	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	5
0x40013a0	    0x488b05000000	            mov rax, qword [0x040013a7] 	        46	mark.c	FUNCTION_1	CALL_1
0x40013a7	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	        46	mark.c	FUNCTION_1	CALL_1
0x40013ad	    0x488b05000000	            mov rax, qword [0x040013b4] 	        46	mark.c	FUNCTION_1	CALL_1
0x40013b4	        0x488d7038	                   lea rsi, [rax + 0x38]	        46	mark.c	FUNCTION_1	CALL_1
0x40013b8	      0xe993fdffff	                     jmp sym.setmark_pos	        46	mark.c	FUNCTION_1	CALL_1
fname2fnum	WHILE,0:DO,0:CALL,7:IF,2:ELSE,1:functions,0:FOR,0:SWITCH,0	47
0x40015c0	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	       523	mark.c	FUNCTION_11	IF_1
0x40015c4	          0x4885f6	                           test rsi, rsi	       523	mark.c	FUNCTION_11	IF_1
0x40015c7	     0xf84b3000000	                            je 0x4001680	       523	mark.c	FUNCTION_11	IF_1
0x40015cd	              0x55	                                push rbp	       520	mark.c	FUNCTION_11
0x40015ce	              0x53	                                push rbx	       520	mark.c	FUNCTION_11
0x40015cf	          0x4889fb	                            mov rbx, rdi	       520	mark.c	FUNCTION_11
0x40015d2	        0x4883ec08	                              sub rsp, 8	       520	mark.c	FUNCTION_11
0x40015d6	          0x803e7e	                    cmp byte [rsi], 0x7e	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x40015d9	            0x7455	                            je 0x4001630	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x40015db	    0x488b3d000000	            mov rdi, qword [0x040015e2] 	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x40015e2	      0xbaff0f0000	                          mov edx, 0xfff	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x40015e7	      0xe800000000	                          call 0x40015ec	       542	mark.c	FUNCTION_11	IF_1	CALL_4
0x40015ec	    0x488b3d000000	            mov rdi, qword [0x040015f3] 	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x40015f3	      0xbe01040000	                          mov esi, 0x401	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x40015f8	      0xe800000000	                          call 0x40015fd	       545	mark.c	FUNCTION_11	IF_1	CALL_5
0x40015fd	    0x488b35000000	            mov rsi, qword [0x04001604] 	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x4001604	    0x488b3d000000	            mov rdi, qword [0x0400160b] 	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x400160b	      0xe800000000	                          call 0x4001610	       546	mark.c	FUNCTION_11	IF_1	CALL_6
0x4001610	    0x488b3d000000	            mov rdi, qword [0x04001617] 	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x4001617	        0x4883c408	                              add rsp, 8	       551	mark.c	FUNCTION_11
0x400161b	            0x31c9	                            xor ecx, ecx	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x400161d	              0x5b	                                 pop rbx	       551	mark.c	FUNCTION_11
0x400161e	              0x5d	                                 pop rbp	       551	mark.c	FUNCTION_11
0x400161f	      0xba01000000	                              mov edx, 1	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x4001624	          0x4889c6	                            mov rsi, rax	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x4001627	      0xe900000000	                           jmp 0x400162c	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x400162c	         0xf1f4000	                         nop dword [rax]	       549	mark.c	FUNCTION_11	IF_1	CALL_7
0x4001630	        0x807e012f	                cmp byte [rsi + 1], 0x2f	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x4001634	            0x75a5	                           jne 0x40015db	       529	mark.c	FUNCTION_11	IF_1	IF_2
0x4001636	    0x488b35000000	            mov rsi, qword [0x0400163d] 	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x400163d	      0xba00100000	                         mov edx, 0x1000	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4001642	      0xbf00000000	                              mov edi, 0	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x4001647	      0xe800000000	                          call 0x400164c	       537	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x400164c	    0x488b2d000000	            mov rbp, qword [0x04001653] 	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001653	          0x4889ef	                            mov rdi, rbp	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x4001656	      0xe800000000	                          call 0x400165b	       538	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x400165b	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400165f	      0xbaff0f0000	                          mov edx, 0xfff	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001664	            0x29c2	                            sub edx, eax	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001666	            0x4898	                                    cdqe	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001668	      0x488d7c0500	                    lea rdi, [rbp + rax]	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x400166d	          0x4863d2	                         movsxd rdx, edx	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001670	        0x4883c602	                              add rsi, 2	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001674	      0xe800000000	                          call 0x4001679	       539	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x4001679	      0xe96effffff	                           jmp 0x40015ec	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x400167e	            0x6690	                                     nop	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x4001680	            0xf3c3	                                     ret	       534	mark.c	FUNCTION_11	IF_1	IF_2
ex_changes	WHILE,0:DO,0:CALL,12:IF,4:ELSE,0:functions,0:FOR,1:SWITCH,0	100
0x4002270	            0x4154	                                push r12	       944	mark.c	FUNCTION_23
0x4002272	              0x55	                                push rbp	       944	mark.c	FUNCTION_23
0x4002273	      0xba05000000	                              mov edx, 5	       949	mark.c	FUNCTION_23	CALL_2
0x4002278	              0x53	                                push rbx	       944	mark.c	FUNCTION_23
0x4002279	            0x31ff	                            xor edi, edi	       949	mark.c	FUNCTION_23	CALL_2
0x400227b	      0xbe00000000	                              mov esi, 0	       949	mark.c	FUNCTION_23	CALL_2
0x4002280	      0xe800000000	                          call 0x4002285	       949	mark.c	FUNCTION_23	CALL_2
0x4002285	          0x4889c7	                            mov rdi, rax	       949	mark.c	FUNCTION_23	CALL_2
0x4002288	      0xe800000000	                          call 0x400228d	       949	mark.c	FUNCTION_23	CALL_2
0x400228d	    0x488b15000000	            mov rdx, qword [0x04002294] 	       951	mark.c	FUNCTION_23	FOR_1
0x4002294	    0x8b8298090000	           mov eax, dword [rdx + 0x998] 	       951	mark.c	FUNCTION_23	FOR_1
0x400229a	            0x85c0	                           test eax, eax	       951	mark.c	FUNCTION_23	FOR_1
0x400229c	     0xf8e43010000	                           jle 0x40023e5	       951	mark.c	FUNCTION_23	FOR_1
0x40022a2	    0x8b0d00000000	            mov ecx, dword [0x040022a8] 	       951	mark.c	FUNCTION_23	FOR_1
0x40022a8	            0x85c9	                           test ecx, ecx	       951	mark.c	FUNCTION_23	FOR_1
0x40022aa	     0xf8535010000	                           jne 0x40023e5	       951	mark.c	FUNCTION_23	FOR_1
0x40022b0	            0x31db	                            xor ebx, ebx	       951	mark.c	FUNCTION_23	FOR_1
0x40022b2	    0x41bc20000000	                          mov r12d, 0x20	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022b8	      0xe9aa000000	                           jmp 0x4002367	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022bd	           0xf1f00	                         nop dword [rax]	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022c0	          0x4189d9	                            mov r9d, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022c3	    0x41b820000000	                           mov r8d, 0x20	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022c9	          0x4129c1	                            sub r9d, eax	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40022cc	    0x488b3d000000	            mov rdi, qword [0x040022d3] 	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022d3	              0x51	                                push rcx	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022d4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022d9	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022da	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022df	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022e6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022e8	        0x4883c535	                           add rbp, 0x35	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x40022ec	      0xe800000000	                          call 0x40022f1	        33	stdio2.h	FUNCTION_46	CALL_2
0x40022f1	    0x488b3d000000	            mov rdi, qword [0x040022f8] 	       964	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x40022f8	        0x48c1e504	                              shl rbp, 4	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x40022fc	      0xe800000000	                          call 0x4002301	       964	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x4002301	    0x488b05000000	            mov rax, qword [0x04002308] 	       964	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x4002308	      0xbe11000000	                           mov esi, 0x11	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x400230d	      0x488b7c2808	         mov rdi, qword [rax + rbp + 8] 	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002312	      0xe879e9ffff	               call sym.mark_line.isra.2	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x4002317	          0x4889c5	                            mov rbp, rax	       965	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x400231a	          0x4885ed	                           test rbp, rbp	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400231d	              0x58	                                 pop rax	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400231e	              0x5a	                                 pop rdx	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400231f	     0xf84b3000000	                            je 0x40023d8	       966	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4002325	    0x8b3500000000	            mov esi, dword [0x0400232b] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x400232b	          0x4889ef	                            mov rdi, rbp	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x400232e	      0xe800000000	                          call 0x4002333	       968	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x4002333	          0x4889ef	                            mov rdi, rbp	       969	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x4002336	      0xe800000000	                          call 0x400233b	       969	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x400233b	      0xe800000000	                          call 0x4002340	       970	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_10
0x4002340	      0xe800000000	                          call 0x4002345	       972	mark.c	FUNCTION_23	FOR_1	CALL_11
0x4002345	    0x488b15000000	            mov rdx, qword [0x0400234c] 	       951	mark.c	FUNCTION_23	FOR_1
0x400234c	          0x83c301	                              add ebx, 1	       951	mark.c	FUNCTION_23	FOR_1
0x400234f	    0x8b8298090000	           mov eax, dword [rdx + 0x998] 	       951	mark.c	FUNCTION_23	FOR_1
0x4002355	            0x39d8	                            cmp eax, ebx	       951	mark.c	FUNCTION_23	FOR_1
0x4002357	     0xf8e88000000	                           jle 0x40023e5	       951	mark.c	FUNCTION_23	FOR_1
0x400235d	    0x8b0d00000000	            mov ecx, dword [0x04002363] 	       951	mark.c	FUNCTION_23	FOR_1
0x4002363	            0x85c9	                           test ecx, ecx	       951	mark.c	FUNCTION_23	FOR_1
0x4002365	            0x757e	                           jne 0x40023e5	       951	mark.c	FUNCTION_23	FOR_1
0x4002367	          0x4863eb	                         movsxd rbp, ebx	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x400236a	        0x488d4535	                   lea rax, [rbp + 0x35]	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x400236e	        0x48c1e004	                              shl rax, 4	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4002372	    0x48837c020800	            cmp qword [rdx + rax + 8], 0	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x4002378	            0x74c6	                            je 0x4002340	       953	mark.c	FUNCTION_23	FOR_1	IF_1
0x400237a	      0xbf0a000000	                            mov edi, 0xa	       955	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x400237f	      0xe800000000	                          call 0x4002384	       955	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x4002384	    0x8b0500000000	            mov eax, dword [0x0400238a] 	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400238a	            0x85c0	                           test eax, eax	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400238c	            0x754a	                           jne 0x40023d8	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400238e	          0x4889e8	                            mov rax, rbp	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4002391	        0x48c1e004	                              shl rax, 4	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4002395	    0x480305000000	             add rax, qword [0x0400239c]	       956	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400239c	    0x8b8860030000	           mov ecx, dword [rax + 0x360] 	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023a2	    0x488b90580300	           mov rdx, qword [rax + 0x358] 	       962	mark.c	FUNCTION_23	FOR_1	IF_1
0x40023a9	    0x488b05000000	            mov rax, qword [0x040023b0] 	       960	mark.c	FUNCTION_23	FOR_1	IF_1
0x40023b0	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	       960	mark.c	FUNCTION_23	FOR_1	IF_1
0x40023b6	            0x39d8	                            cmp eax, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023b8	     0xf8c02ffffff	                            jl 0x40022c0	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023be	          0x4189c1	                            mov r9d, eax	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023c1	    0x41b83e000000	                           mov r8d, 0x3e	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023c7	          0x4129d9	                            sub r9d, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023ca	            0x39d8	                            cmp eax, ebx	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023cc	        0x450f45c4	                        cmovne r8d, r12d	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023d0	      0xe9f7feffff	                           jmp 0x40022cc	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023d5	           0xf1f00	                         nop dword [rax]	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023d8	    0x488b05000000	            mov rax, qword [0x040023df] 	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023df	    0x8b8098090000	           mov eax, dword [rax + 0x998] 	       958	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x40023e5	    0x488b15000000	            mov rdx, qword [0x040023ec] 	       974	mark.c	FUNCTION_23	IF_4
0x40023ec	    0x398248150000	          cmp dword [rdx + 0x1548], eax 	       974	mark.c	FUNCTION_23	IF_4
0x40023f2	            0x740c	                            je 0x4002400	       974	mark.c	FUNCTION_23	IF_4
0x40023f4	              0x5b	                                 pop rbx	       976	mark.c	FUNCTION_23
0x40023f5	              0x5d	                                 pop rbp	       976	mark.c	FUNCTION_23
0x40023f6	            0x415c	                                 pop r12	       976	mark.c	FUNCTION_23
0x40023f8	              0xc3	                                     ret	       976	mark.c	FUNCTION_23
0x40023f9	     0xf1f80000000	                         nop dword [rax]	       976	mark.c	FUNCTION_23
0x4002400	              0x5b	                                 pop rbx	       976	mark.c	FUNCTION_23
0x4002401	              0x5d	                                 pop rbp	       976	mark.c	FUNCTION_23
0x4002402	            0x415c	                                 pop r12	       976	mark.c	FUNCTION_23
0x4002404	      0xbf00000000	                              mov edi, 0	       975	mark.c	FUNCTION_23	CALL_12
0x4002409	      0xe900000000	                           jmp 0x400240e	       975	mark.c	FUNCTION_23	CALL_12
mark_adjust_internal	WHILE,0:DO,0:CALL,19:IF,6:ELSE,0:functions,1:FOR,3:SWITCH,0	587
0x4000070	            0x4157	                                push r15	      1046	mark.c	FUNCTION_26
0x4000072	            0x4156	                                push r14	      1046	mark.c	FUNCTION_26
0x4000074	            0x4155	                                push r13	      1046	mark.c	FUNCTION_26
0x4000076	            0x4154	                                push r12	      1046	mark.c	FUNCTION_26
0x4000078	              0x55	                                push rbp	      1046	mark.c	FUNCTION_26
0x4000079	              0x53	                                push rbx	      1046	mark.c	FUNCTION_26
0x400007a	        0x4883ec28	                           sub rsp, 0x28	      1046	mark.c	FUNCTION_26
0x400007e	          0x4839fe	                            cmp rsi, rdi	      1054	mark.c	FUNCTION_26	IF_1
0x4000081	            0x7d14	                           jge 0x4000097	      1054	mark.c	FUNCTION_26	IF_1
0x4000083	          0x4885c9	                           test rcx, rcx	      1054	mark.c	FUNCTION_26	IF_1
0x4000086	            0x750f	                           jne 0x4000097	      1054	mark.c	FUNCTION_26	IF_1
0x4000088	        0x4883c428	                           add rsp, 0x28	      1200	mark.c	FUNCTION_26
0x400008c	              0x5b	                                 pop rbx	      1200	mark.c	FUNCTION_26
0x400008d	              0x5d	                                 pop rbp	      1200	mark.c	FUNCTION_26
0x400008e	            0x415c	                                 pop r12	      1200	mark.c	FUNCTION_26
0x4000090	            0x415d	                                 pop r13	      1200	mark.c	FUNCTION_26
0x4000092	            0x415e	                                 pop r14	      1200	mark.c	FUNCTION_26
0x4000094	            0x415f	                                 pop r15	      1200	mark.c	FUNCTION_26
0x4000096	              0xc3	                                     ret	      1200	mark.c	FUNCTION_26
0x4000097	          0x4889f5	                            mov rbp, rsi	      1200	mark.c	FUNCTION_26
0x400009a	    0x8b3500000000	            mov esi, dword [0x040000a0] 	      1057	mark.c	FUNCTION_26	IF_2
0x40000a0	          0x4989cd	                            mov r13, rcx	      1057	mark.c	FUNCTION_26	IF_2
0x40000a3	    0x488b0d000000	            mov rcx, qword [0x040000aa] 	      1048	mark.c	FUNCTION_26
0x40000aa	      0x4489442414	             mov dword [rsp + 0x14], r8d	      1048	mark.c	FUNCTION_26
0x40000af	          0x4989d6	                            mov r14, rdx	      1048	mark.c	FUNCTION_26
0x40000b2	          0x4989fc	                            mov r12, rdi	      1048	mark.c	FUNCTION_26
0x40000b5	            0x85f6	                           test esi, esi	      1057	mark.c	FUNCTION_26	IF_2
0x40000b7	    0x8b99b8000000	            mov ebx, dword [rcx + 0xb8] 	      1048	mark.c	FUNCTION_26
0x40000bd	     0xf8595020000	                           jne 0x4000358	      1057	mark.c	FUNCTION_26	IF_2
0x40000c3	    0x488db9580100	                  lea rdi, [rcx + 0x158]	      1057	mark.c	FUNCTION_26	IF_2
0x40000ca	      0xb800000000	                              mov eax, 0	      1057	mark.c	FUNCTION_26	IF_2
0x40000cf	      0xbe00000000	                              mov esi, 0	      1057	mark.c	FUNCTION_26	IF_2
0x40000d4	            0xeb1b	                           jmp 0x40000f1	      1057	mark.c	FUNCTION_26	IF_2
0x40000d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1057	mark.c	FUNCTION_26	IF_2
0x40000e0	        0x4883c028	                           add rax, 0x28	      1057	mark.c	FUNCTION_26	IF_2
0x40000e4	        0x4883c710	                           add rdi, 0x10	      1057	mark.c	FUNCTION_26	IF_2
0x40000e8	          0x4839c6	                            cmp rsi, rax	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40000eb	     0xf848c000000	                            je 0x400017d	      1060	mark.c	FUNCTION_26	IF_2	FOR_1
0x40000f1	          0x488b17	                    mov rdx, qword [rdi]	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40000f4	          0x4939d4	                            cmp r12, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40000f7	     0xf8fec030000	                            jg 0x40004e9	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40000fd	          0x4839d5	                            cmp rbp, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000100	     0xf8ce3030000	                            jl 0x40004e9	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000106	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400010d	     0xf8410040000	                            je 0x4000523	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000113	          0x4c01f2	                            add rdx, r14	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000116	          0x488917	                    mov qword [rdi], rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000119	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1063	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x400011c	            0x75c2	                           jne 0x40000e0	      1063	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x400011e	          0x488b10	                    mov rdx, qword [rax]	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000121	          0x4939d4	                            cmp r12, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000124	     0xf8fdc030000	                            jg 0x4000506	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400012a	          0x4839d5	                            cmp rbp, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400012d	     0xf8cd3030000	                            jl 0x4000506	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000133	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400013a	     0xf84ed060000	                            je 0x400082d	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000140	          0x4c01f2	                            add rdx, r14	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000143	          0x488910	                    mov qword [rax], rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000146	            0xeb98	                           jmp 0x40000e0	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000148	          0x488b06	                    mov rax, qword [rsi]	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400014b	          0x4939c4	                            cmp r12, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400014e	     0xf8fdb030000	                            jg 0x400052f	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000154	          0x4839c5	                            cmp rbp, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000157	     0xf8cd2030000	                            jl 0x400052f	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400015d	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000164	     0xf84b5080000	                            je 0x4000a1f	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400016a	          0x4c01f0	                            add rax, r14	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400016d	          0x488906	                    mov qword [rsi], rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000170	        0x4883c628	                           add rsi, 0x28	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000174	    0x4881fe000000	                              cmp rsi, 0	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x400017b	            0x7412	                            je 0x400018f	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x400017d	          0x3b5e10	            cmp ebx, dword [rsi + 0x10] 	      1068	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x4000180	            0x74c6	                            je 0x4000148	      1068	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x4000182	        0x4883c628	                           add rsi, 0x28	      1068	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x4000186	    0x4881fe000000	                              cmp rsi, 0	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x400018d	            0x75ee	                           jne 0x400017d	      1066	mark.c	FUNCTION_26	IF_2	FOR_2
0x400018f	    0x488b81380300	           mov rax, qword [rcx + 0x338] 	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000196	          0x4939c4	                            cmp r12, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000199	     0xf8f44080000	                            jg 0x40009e3	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x400019f	          0x4839c5	                            cmp rbp, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001a2	     0xf8c3b080000	                            jl 0x40009e3	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001a8	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001af	     0xf8482070000	                            je 0x4000937	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001b5	          0x4c01f0	                            add rax, r14	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001b8	    0x488981380300	            mov qword [rcx + 0x338], rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40001bf	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001c6	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001c9	     0xf8fee070000	                            jg 0x40009bd	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001cf	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001d2	     0xf8ce5070000	                            jl 0x40009bd	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001d8	          0x4c01f0	                            add rax, r14	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001db	    0x488981480300	            mov qword [rcx + 0x348], rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40001e2	    0x488b81280300	           mov rax, qword [rcx + 0x328] 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40001e9	        0x4883f801	                              cmp rax, 1	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40001ed	     0xf847c070000	                            je 0x400096f	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x40001f3	          0x4839c5	                            cmp rbp, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40001f6	     0xf8c90070000	                            jl 0x400098c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40001fc	          0x4939c4	                            cmp r12, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40001ff	     0xf8f87070000	                            jg 0x400098c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000205	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400020c	     0xf849b070000	                            je 0x40009ad	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000212	          0x4c01f0	                            add rax, r14	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000215	    0x488981280300	            mov qword [rcx + 0x328], rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400021c	    0x8b9198090000	           mov edx, dword [rcx + 0x998] 	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000222	            0x85d2	                           test edx, edx	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000224	            0x7e5d	                           jle 0x4000283	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000226	          0x83ea01	                              sub edx, 1	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000229	    0x488d81580300	                  lea rax, [rcx + 0x358]	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000230	        0x48c1e204	                              shl rdx, 4	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000234	    0x488db4116803	           lea rsi, [rcx + rdx + 0x368] 	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400023c	            0xeb23	                           jmp 0x4000261	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400023e	            0x6690	                                     nop	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000240	          0x4839d5	                            cmp rbp, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000243	            0x7c24	                            jl 0x4000269	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000245	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400024c	     0xf844e060000	                            je 0x40008a0	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000252	          0x4c01f2	                            add rdx, r14	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000255	          0x488910	                    mov qword [rax], rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000258	        0x4883c010	                           add rax, 0x10	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400025c	          0x4839f0	                            cmp rax, rsi	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x400025f	            0x7422	                            je 0x4000283	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000261	          0x488b10	                    mov rdx, qword [rax]	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000264	          0x4939d4	                            cmp r12, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000267	            0x7ed7	                           jle 0x4000240	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000269	          0x4839d5	                            cmp rbp, rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400026c	            0x7dea	                           jge 0x4000258	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400026e	          0x4d85ed	                           test r13, r13	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000271	            0x74e5	                            je 0x4000258	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000273	          0x4c01ea	                            add rdx, r13	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x4000276	        0x4883c010	                           add rax, 0x10	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400027a	        0x488950f0	             mov qword [rax - 0x10], rdx	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x400027e	          0x4839f0	                            cmp rax, rsi	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000281	            0x75de	                           jne 0x4000261	      1085	mark.c	FUNCTION_26	IF_2	FOR_3
0x4000283	    0x488b81f80200	           mov rax, qword [rcx + 0x2f8] 	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400028a	          0x4939c4	                            cmp r12, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400028d	     0xf8f6b060000	                            jg 0x40008fe	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000293	          0x4839c5	                            cmp rbp, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000296	     0xf8c62060000	                            jl 0x40008fe	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400029c	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40002a3	     0xf8431060000	                            je 0x40008da	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40002a9	          0x4c01f0	                            add rax, r14	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40002ac	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40002b3	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002ba	          0x4939c4	                            cmp r12, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002bd	     0xf8ff1050000	                            jg 0x40008b4	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002c3	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002c6	     0xf8ce8050000	                            jl 0x40008b4	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002cc	          0x4c01f0	                            add rax, r14	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002cf	    0x488981080300	            mov qword [rcx + 0x308], rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40002d6	            0x31ff	                            xor edi, edi	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002d8	          0x4d89e8	                             mov r8, r13	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002db	          0x4c89f1	                            mov rcx, r14	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002de	          0x4889ea	                            mov rdx, rbp	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002e1	          0x4c89e6	                            mov rsi, r12	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002e4	      0xe800000000	                          call 0x40002e9	      1095	mark.c	FUNCTION_26	IF_2	CALL_12
0x40002e9	    0x488b05000000	            mov rax, qword [0x040002f0] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40002f0	          0x4885c0	                           test rax, rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40002f3	      0x4889442408	                mov qword [rsp + 8], rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40002f8	            0x744d	                            je 0x4000347	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40002fa	      0x488b442408	                mov rax, qword [rsp + 8]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40002ff	    0x483905000000	            cmp qword [0x04000306], rax 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000306	     0xf849c050000	                            je 0x40008a8	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400030c	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000310	            0xeb1e	                           jmp 0x4000330	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000312	    0x660f1f440000	                    nop word [rax + rax]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000318	          0x4c89ff	                            mov rdi, r15	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x400031b	          0x4d89e8	                             mov r8, r13	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x400031e	          0x4c89f1	                            mov rcx, r14	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x4000321	          0x4889ea	                            mov rdx, rbp	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x4000324	          0x4c89e6	                            mov rsi, r12	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x4000327	      0xe800000000	                          call 0x400032c	      1098	mark.c	FUNCTION_26	IF_2	CALL_14
0x400032c	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000330	          0x4d85ff	                           test r15, r15	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000333	            0x75e3	                           jne 0x4000318	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000335	      0x488b442408	                mov rax, qword [rsp + 8]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400033a	          0x488b00	                    mov rax, qword [rax]	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x400033d	          0x4885c0	                           test rax, rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000340	      0x4889442408	                mov qword [rsp + 8], rax	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000345	            0x75b3	                           jne 0x40002fa	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x4000347	          0x4c89e9	                            mov rcx, r13	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x400034a	          0x4c89f2	                            mov rdx, r14	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x400034d	          0x4889ee	                            mov rsi, rbp	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x4000350	          0x4c89e7	                            mov rdi, r12	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x4000353	      0xe800000000	                          call 0x4000358	      1102	mark.c	FUNCTION_26	IF_2	CALL_15
0x4000358	    0x488b15000000	            mov rdx, qword [0x0400035f] 	      1107	mark.c	FUNCTION_26	CALL_16
0x400035f	    0x488b82800500	           mov rax, qword [rdx + 0x580] 	      1107	mark.c	FUNCTION_26	CALL_16
0x4000366	          0x4839c5	                            cmp rbp, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000369	     0xf8cdd010000	                            jl 0x400054c	      1107	mark.c	FUNCTION_26	CALL_16
0x400036f	          0x4939c4	                            cmp r12, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000372	     0xf8fd4010000	                            jg 0x400054c	      1107	mark.c	FUNCTION_26	CALL_16
0x4000378	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1107	mark.c	FUNCTION_26	CALL_16
0x400037f	     0xf84dd040000	                            je 0x4000862	      1107	mark.c	FUNCTION_26	CALL_16
0x4000385	          0x4c01f0	                            add rax, r14	      1107	mark.c	FUNCTION_26	CALL_16
0x4000388	    0x488982800500	            mov qword [rdx + 0x580], rax	      1107	mark.c	FUNCTION_26	CALL_16
0x400038f	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x4000396	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000399	            0x7c09	                            jl 0x40003a4	      1110	mark.c	FUNCTION_26	CALL_17
0x400039b	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400039e	     0xf8ee7010000	                           jle 0x400058b	      1110	mark.c	FUNCTION_26	CALL_17
0x40003a4	          0x4d85ed	                           test r13, r13	      1110	mark.c	FUNCTION_26	CALL_17
0x40003a7	           0xf95c1	                                setne cl	      1110	mark.c	FUNCTION_26	CALL_17
0x40003aa	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x40003ad	            0x7d0e	                           jge 0x40003bd	      1110	mark.c	FUNCTION_26	CALL_17
0x40003af	            0x84c9	                             test cl, cl	      1110	mark.c	FUNCTION_26	CALL_17
0x40003b1	            0x740a	                            je 0x40003bd	      1110	mark.c	FUNCTION_26	CALL_17
0x40003b3	          0x4c01e8	                            add rax, r13	      1110	mark.c	FUNCTION_26	CALL_17
0x40003b6	    0x488982900500	            mov qword [rdx + 0x590], rax	      1110	mark.c	FUNCTION_26	CALL_17
0x40003bd	    0x488b05000000	            mov rax, qword [0x040003c4] 	      1113	mark.c	FUNCTION_26	IF_6
0x40003c4	          0x4885c0	                           test rax, rax	      1113	mark.c	FUNCTION_26	IF_6
0x40003c7	            0x7429	                            je 0x40003f2	      1113	mark.c	FUNCTION_26	IF_6
0x40003c9	          0x4839c5	                            cmp rbp, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x40003cc	     0xf8c63040000	                            jl 0x4000835	      1114	mark.c	FUNCTION_26	CALL_18
0x40003d2	          0x4939c4	                            cmp r12, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x40003d5	     0xf8f5a040000	                            jg 0x4000835	      1114	mark.c	FUNCTION_26	CALL_18
0x40003db	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1114	mark.c	FUNCTION_26	CALL_18
0x40003e2	     0xf846e040000	                            je 0x4000856	      1114	mark.c	FUNCTION_26	CALL_18
0x40003e8	          0x4c01f0	                            add rax, r14	      1114	mark.c	FUNCTION_26	CALL_18
0x40003eb	    0x488905000000	            mov qword [0x040003f2], rax 	      1114	mark.c	FUNCTION_26	CALL_18
0x40003f2	    0x4c8b15000000	            mov r10, qword [0x040003f9] 	      1119	mark.c	FUNCTION_26
0x40003f9	      0x4d8d5c24ff	                      lea r11, [r12 - 1]	      1178	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x40003fe	          0x4d85d2	                           test r10, r10	      1119	mark.c	FUNCTION_26
0x4000401	     0xf84c3000000	                            je 0x40004ca	      1119	mark.c	FUNCTION_26
0x4000407	    0x4c3915000000	            cmp qword [0x0400040e], r10 	      1119	mark.c	FUNCTION_26
0x400040e	     0xf84d9030000	                            je 0x40007ed	      1119	mark.c	FUNCTION_26
0x4000414	        0x4d8b7a20	            mov r15, qword [r10 + 0x20] 	      1119	mark.c	FUNCTION_26
0x4000418	          0x4d85ff	                           test r15, r15	      1119	mark.c	FUNCTION_26
0x400041b	     0xf849d000000	                            je 0x40004be	      1119	mark.c	FUNCTION_26
0x4000421	     0xf1f80000000	                         nop dword [rax]	      1119	mark.c	FUNCTION_26
0x4000428	    0x8b1500000000	            mov edx, dword [0x0400042e] 	      1122	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x400042e	            0x85d2	                           test edx, edx	      1122	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x4000430	     0xf859a010000	                           jne 0x40005d0	      1122	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x4000436	    0x418b97401500	          mov edx, dword [r15 + 0x1540] 	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400043d	            0x85d2	                           test edx, edx	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400043f	            0x7e5f	                           jle 0x40004a0	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000441	          0x83ea01	                              sub edx, 1	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000444	    0x498d87a00500	                  lea rax, [r15 + 0x5a0]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400044b	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400044f	    0x498d8cd7c805	         lea rcx, [r15 + rdx*8 + 0x5c8] 	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000457	            0xeb10	                           jmp 0x4000469	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000459	     0xf1f80000000	                         nop dword [rax]	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000460	        0x4883c028	                           add rax, 0x28	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000464	          0x4839c8	                            cmp rax, rcx	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000467	            0x7437	                            je 0x40004a0	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x4000469	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1126	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400046c	            0x75f2	                           jne 0x4000460	      1126	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400046e	          0x488b10	                    mov rdx, qword [rax]	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000471	          0x4839d5	                            cmp rbp, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000474	     0xf8c26010000	                            jl 0x40005a0	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400047a	          0x4939d4	                            cmp r12, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400047d	     0xf8f1d010000	                            jg 0x40005a0	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000483	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400048a	     0xf8430010000	                            je 0x40005c0	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000490	          0x4c01f2	                            add rdx, r14	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000493	        0x4883c028	                           add rax, 0x28	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x4000497	        0x488950d8	             mov qword [rax - 0x28], rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x400049b	          0x4839c8	                            cmp rax, rcx	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x400049e	            0x75c9	                           jne 0x4000469	      1125	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x40004a0	    0x488b05000000	            mov rax, qword [0x040004a7] 	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40004a7	        0x49394708	                cmp qword [r15 + 8], rax	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40004ab	     0xf841d020000	                            je 0x40006ce	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40004b1	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      1119	mark.c	FUNCTION_26
0x40004b5	          0x4d85ff	                           test r15, r15	      1119	mark.c	FUNCTION_26
0x40004b8	     0xf856affffff	                           jne 0x4000428	      1119	mark.c	FUNCTION_26
0x40004be	          0x4d8b12	                    mov r10, qword [r10]	      1119	mark.c	FUNCTION_26
0x40004c1	          0x4d85d2	                           test r10, r10	      1119	mark.c	FUNCTION_26
0x40004c4	     0xf853dffffff	                           jne 0x4000407	      1119	mark.c	FUNCTION_26
0x40004ca	        0x4883c428	                           add rsp, 0x28	      1200	mark.c	FUNCTION_26
0x40004ce	          0x4c89e9	                            mov rcx, r13	      1198	mark.c	FUNCTION_26	CALL_19
0x40004d1	          0x4c89f2	                            mov rdx, r14	      1198	mark.c	FUNCTION_26	CALL_19
0x40004d4	              0x5b	                                 pop rbx	      1200	mark.c	FUNCTION_26
0x40004d5	          0x4889ee	                            mov rsi, rbp	      1198	mark.c	FUNCTION_26	CALL_19
0x40004d8	          0x4c89e7	                            mov rdi, r12	      1198	mark.c	FUNCTION_26	CALL_19
0x40004db	              0x5d	                                 pop rbp	      1200	mark.c	FUNCTION_26
0x40004dc	            0x415c	                                 pop r12	      1200	mark.c	FUNCTION_26
0x40004de	            0x415d	                                 pop r13	      1200	mark.c	FUNCTION_26
0x40004e0	            0x415e	                                 pop r14	      1200	mark.c	FUNCTION_26
0x40004e2	            0x415f	                                 pop r15	      1200	mark.c	FUNCTION_26
0x40004e4	      0xe900000000	                           jmp 0x40004e9	      1198	mark.c	FUNCTION_26	CALL_19
0x40004e9	          0x4839d5	                            cmp rbp, rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40004ec	     0xf8d27fcffff	                           jge 0x4000119	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40004f2	          0x4d85ed	                           test r13, r13	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40004f5	     0xf841efcffff	                            je 0x4000119	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40004fb	          0x4c01ea	                            add rdx, r13	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x40004fe	          0x488917	                    mov qword [rdi], rdx	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000501	      0xe913fcffff	                           jmp 0x4000119	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x4000506	          0x4d85ed	                           test r13, r13	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000509	     0xf84d1fbffff	                            je 0x40000e0	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400050f	          0x4839d5	                            cmp rbp, rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000512	     0xf8dc8fbffff	                           jge 0x40000e0	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000518	          0x4c01ea	                            add rdx, r13	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400051b	          0x488910	                    mov qword [rax], rdx	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x400051e	      0xe9bdfbffff	                           jmp 0x40000e0	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000523	    0x48c707000000	                      mov qword [rdi], 0	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400052a	      0xe9eafbffff	                           jmp 0x4000119	      1062	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x400052f	          0x4d85ed	                           test r13, r13	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000532	     0xf8438fcffff	                            je 0x4000170	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000538	          0x4839c5	                            cmp rbp, rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400053b	     0xf8d2ffcffff	                           jge 0x4000170	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000541	          0x4c01e8	                            add rax, r13	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000544	          0x488906	                    mov qword [rsi], rax	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000547	      0xe924fcffff	                           jmp 0x4000170	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x400054c	          0x4d85ed	                           test r13, r13	      1107	mark.c	FUNCTION_26	CALL_16
0x400054f	           0xf95c1	                                setne cl	      1107	mark.c	FUNCTION_26	CALL_16
0x4000552	          0x4839c5	                            cmp rbp, rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000555	            0x7d0e	                           jge 0x4000565	      1107	mark.c	FUNCTION_26	CALL_16
0x4000557	            0x84c9	                             test cl, cl	      1107	mark.c	FUNCTION_26	CALL_16
0x4000559	            0x740a	                            je 0x4000565	      1107	mark.c	FUNCTION_26	CALL_16
0x400055b	          0x4c01e8	                            add rax, r13	      1107	mark.c	FUNCTION_26	CALL_16
0x400055e	    0x488982800500	            mov qword [rdx + 0x580], rax	      1107	mark.c	FUNCTION_26	CALL_16
0x4000565	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x400056c	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x400056f	     0xf8f35feffff	                            jg 0x40003aa	      1110	mark.c	FUNCTION_26	CALL_17
0x4000575	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000578	     0xf8c2cfeffff	                            jl 0x40003aa	      1110	mark.c	FUNCTION_26	CALL_17
0x400057e	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1110	mark.c	FUNCTION_26	CALL_17
0x4000585	     0xf84fb020000	                            je 0x4000886	      1110	mark.c	FUNCTION_26	CALL_17
0x400058b	          0x4c01f0	                            add rax, r14	      1110	mark.c	FUNCTION_26	CALL_17
0x400058e	    0x488982900500	            mov qword [rdx + 0x590], rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000595	      0xe923feffff	                           jmp 0x40003bd	      1110	mark.c	FUNCTION_26	CALL_17
0x400059a	    0x660f1f440000	                    nop word [rax + rax]	      1110	mark.c	FUNCTION_26	CALL_17
0x40005a0	          0x4839d5	                            cmp rbp, rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005a3	     0xf8db7feffff	                           jge 0x4000460	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005a9	          0x4d85ed	                           test r13, r13	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005ac	     0xf84aefeffff	                            je 0x4000460	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005b2	          0x4c01ea	                            add rdx, r13	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005b5	          0x488910	                    mov qword [rax], rdx	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005b8	      0xe9a3feffff	                           jmp 0x4000460	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005bd	           0xf1f00	                         nop dword [rax]	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005c0	          0x4c8920	                    mov qword [rax], r12	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005c3	      0xe998feffff	                           jmp 0x4000460	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005c8	     0xf1f84000000	                   nop dword [rax + rax]	      1127	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x40005d0	        0x498b4708	                mov rax, qword [r15 + 8]	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40005d4	    0x483905000000	            cmp qword [0x040005db], rax 	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40005db	     0xf85d0feffff	                           jne 0x40004b1	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x40005e1	        0x498b4758	            mov rax, qword [r15 + 0x58] 	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x40005e5	          0x4885c0	                           test rax, rax	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x40005e8	            0x7443	                            je 0x400062d	      1139	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x40005ea	          0x4939c4	                            cmp r12, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x40005ed	     0xf8f8b010000	                            jg 0x400077e	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x40005f3	          0x4839c5	                            cmp rbp, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x40005f6	     0xf8c82010000	                            jl 0x400077e	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x40005fc	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000603	     0xf84af010000	                            je 0x40007b8	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000609	          0x4c01f0	                            add rax, r14	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400060c	        0x49894758	             mov qword [r15 + 0x58], rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000610	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000614	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000617	     0xf8cad010000	                            jl 0x40007ca	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400061d	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000620	     0xf8fa4010000	                            jg 0x40007ca	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000626	          0x4c01f0	                            add rax, r14	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000629	        0x49894768	             mov qword [r15 + 0x68], rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400062d	    0x4c393d000000	            cmp qword [0x04000634], r15 	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x4000634	            0x745f	                            je 0x4000695	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x4000636	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x400063a	          0x4839c5	                            cmp rbp, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x400063d	     0xf8c15010000	                            jl 0x4000758	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x4000643	          0x4939c4	                            cmp r12, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x4000646	     0xf8f0c010000	                            jg 0x4000758	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x400064c	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1151	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x4000653	     0xf84a0010000	                            je 0x40007f9	      1151	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x4000659	          0x4c01f0	                            add rax, r14	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x400065c	        0x49894778	             mov qword [r15 + 0x78], rax	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x4000660	    0x41c787840000	               mov dword [r15 + 0x84], 0	      1168	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x400066b	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x400066f	          0x4839c5	                            cmp rbp, rax	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x4000672	     0xf8cc2000000	                            jl 0x400073a	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x4000678	          0x4939c4	                            cmp r12, rax	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x400067b	     0xf8fb9000000	                            jg 0x400073a	      1171	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x4000681	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1173	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000688	     0xf8481010000	                            je 0x400080f	      1173	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x400068e	          0x4c01f0	                            add rax, r14	      1182	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x4000691	        0x49894738	             mov qword [r15 + 0x38], rax	      1182	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x4000695	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x4000699	            0x85c0	                           test eax, eax	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x400069b	     0xf8410feffff	                            je 0x40004b1	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x40006a1	          0x4d89e8	                             mov r8, r13	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006a4	          0x4c89f1	                            mov rcx, r14	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006a7	          0x4889ea	                            mov rdx, rbp	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006aa	          0x4c89e6	                            mov rsi, r12	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006ad	          0x4c89ff	                            mov rdi, r15	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006b0	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006b5	      0x4c89542408	                mov qword [rsp + 8], r10	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006ba	      0xe800000000	                          call 0x40006bf	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006bf	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006c4	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006c9	      0xe9e3fdffff	                           jmp 0x40004b1	      1191	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x40006ce	    0x418b97841800	          mov edx, dword [r15 + 0x1884] 	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006d5	            0x85d2	                           test edx, edx	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006d7	     0xf8e04ffffff	                           jle 0x40005e1	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006dd	          0x83ea01	                              sub edx, 1	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006e0	    0x498d87681500	                 lea rax, [r15 + 0x1568]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006e7	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006eb	    0x498d94d79015	         lea rdx, [r15 + rdx*8 + 0x1590]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006f3	            0xeb10	                           jmp 0x4000705	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006f5	           0xf1f00	                         nop dword [rax]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006f8	        0x4883c028	                           add rax, 0x28	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006fc	          0x4839c2	                            cmp rdx, rax	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x40006ff	     0xf84dcfeffff	                            je 0x40005e1	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x4000705	          0x3b5810	            cmp ebx, dword [rax + 0x10] 	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000708	            0x75ee	                           jne 0x40006f8	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400070a	          0x488b08	                    mov rcx, qword [rax]	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400070d	          0x4939cc	                            cmp r12, rcx	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000710	            0x7f16	                            jg 0x4000728	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000712	          0x4839cd	                            cmp rbp, rcx	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000715	            0x7c11	                            jl 0x4000728	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000717	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400071e	            0x7456	                            je 0x4000776	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000720	          0x4c01f1	                            add rcx, r14	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000723	          0x488908	                    mov qword [rax], rcx	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000726	            0xebd0	                           jmp 0x40006f8	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000728	          0x4d85ed	                           test r13, r13	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400072b	            0x74cb	                            je 0x40006f8	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400072d	          0x4839cd	                            cmp rbp, rcx	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000730	            0x7dc6	                           jge 0x40006f8	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000732	          0x4c01e9	                            add rcx, r13	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000735	          0x488908	                    mov qword [rax], rcx	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000738	            0xebbe	                           jmp 0x40006f8	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400073a	          0x4d85ed	                           test r13, r13	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x400073d	     0xf8452ffffff	                            je 0x4000695	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000743	          0x4839c5	                            cmp rbp, rax	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000746	     0xf8d49ffffff	                           jge 0x4000695	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x400074c	          0x4c01e8	                            add rax, r13	      1185	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x400074f	        0x49894738	             mov qword [r15 + 0x38], rax	      1185	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000753	      0xe93dffffff	                           jmp 0x4000695	      1185	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x4000758	          0x4d85ed	                           test r13, r13	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x400075b	     0xf840affffff	                            je 0x400066b	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x4000761	          0x4839c5	                            cmp rbp, rax	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x4000764	     0xf8d01ffffff	                           jge 0x400066b	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x400076a	          0x4c01e8	                            add rax, r13	      1166	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x400076d	        0x49894778	             mov qword [r15 + 0x78], rax	      1166	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x4000771	      0xe9eafeffff	                           jmp 0x4000660	      1166	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x4000776	          0x4c8920	                    mov qword [rax], r12	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x4000779	      0xe97affffff	                           jmp 0x40006f8	      1136	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x400077e	          0x4d85ed	                           test r13, r13	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000781	           0xf95c2	                                setne dl	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000784	          0x4839c5	                            cmp rbp, rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000787	            0x7d0b	                           jge 0x4000794	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000789	            0x84d2	                             test dl, dl	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400078b	            0x7407	                            je 0x4000794	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x400078d	          0x4c01e8	                            add rax, r13	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000790	        0x49894758	             mov qword [r15 + 0x58], rax	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x4000794	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x4000798	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400079b	            0x7f33	                            jg 0x40007d0	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x400079d	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007a0	            0x7c2e	                            jl 0x40007d0	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007a2	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007a9	     0xf8577feffff	                           jne 0x4000626	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007af	        0x4d896768	             mov qword [r15 + 0x68], r12	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007b3	      0xe975feffff	                           jmp 0x400062d	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007b8	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007bc	        0x4d896758	             mov qword [r15 + 0x58], r12	      1141	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x40007c0	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007c3	            0x7c05	                            jl 0x40007ca	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007c5	          0x4939c4	                            cmp r12, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007c8	            0x7ee5	                           jle 0x40007af	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007ca	          0x4d85ed	                           test r13, r13	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007cd	           0xf95c2	                                setne dl	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007d0	          0x4839c5	                            cmp rbp, rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007d3	     0xf8d54feffff	                           jge 0x400062d	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007d9	            0x84d2	                             test dl, dl	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007db	     0xf844cfeffff	                            je 0x400062d	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007e1	          0x4c01e8	                            add rax, r13	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007e4	        0x49894768	             mov qword [r15 + 0x68], rax	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007e8	      0xe940feffff	                           jmp 0x400062d	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x40007ed	    0x4c8b3d000000	            mov r15, qword [0x040007f4] 	      1119	mark.c	FUNCTION_26
0x40007f4	      0xe91ffcffff	                           jmp 0x4000418	      1119	mark.c	FUNCTION_26
0x40007f9	        0x4983fc01	                              cmp r12, 1	      1153	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x40007fd	      0xb801000000	                              mov eax, 1	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x4000802	        0x490f4fc3	                          cmovg rax, r11	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x4000806	        0x49894778	             mov qword [r15 + 0x78], rax	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x400080a	      0xe951feffff	                           jmp 0x4000660	      1154	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x400080f	        0x4983fc01	                              cmp r12, 1	      1175	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000813	      0xb801000000	                              mov eax, 1	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000818	    0x41c747400000	               mov dword [r15 + 0x40], 0	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x4000820	        0x490f4fc3	                          cmovg rax, r11	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000824	        0x49894738	             mov qword [r15 + 0x38], rax	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x4000828	      0xe968feffff	                           jmp 0x4000695	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x400082d	          0x4c8920	                    mov qword [rax], r12	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000830	      0xe9abf8ffff	                           jmp 0x40000e0	      1064	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x4000835	          0x4d85ed	                           test r13, r13	      1114	mark.c	FUNCTION_26	CALL_18
0x4000838	     0xf84b4fbffff	                            je 0x40003f2	      1114	mark.c	FUNCTION_26	CALL_18
0x400083e	          0x4839c5	                            cmp rbp, rax	      1114	mark.c	FUNCTION_26	CALL_18
0x4000841	     0xf8dabfbffff	                           jge 0x40003f2	      1114	mark.c	FUNCTION_26	CALL_18
0x4000847	          0x4c01e8	                            add rax, r13	      1114	mark.c	FUNCTION_26	CALL_18
0x400084a	    0x488905000000	            mov qword [0x04000851], rax 	      1114	mark.c	FUNCTION_26	CALL_18
0x4000851	      0xe99cfbffff	                           jmp 0x40003f2	      1114	mark.c	FUNCTION_26	CALL_18
0x4000856	    0x4c8925000000	            mov qword [0x0400085d], r12 	      1114	mark.c	FUNCTION_26	CALL_18
0x400085d	      0xe990fbffff	                           jmp 0x40003f2	      1114	mark.c	FUNCTION_26	CALL_18
0x4000862	    0x488b82900500	           mov rax, qword [rdx + 0x590] 	      1110	mark.c	FUNCTION_26	CALL_17
0x4000869	    0x48c782800500	              mov qword [rdx + 0x580], 0	      1107	mark.c	FUNCTION_26	CALL_16
0x4000874	          0x4939c4	                            cmp r12, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000877	     0xf8f27fbffff	                            jg 0x40003a4	      1110	mark.c	FUNCTION_26	CALL_17
0x400087d	          0x4839c5	                            cmp rbp, rax	      1110	mark.c	FUNCTION_26	CALL_17
0x4000880	     0xf8c1efbffff	                            jl 0x40003a4	      1110	mark.c	FUNCTION_26	CALL_17
0x4000886	    0x48c782900500	              mov qword [rdx + 0x590], 0	      1110	mark.c	FUNCTION_26	CALL_17
0x4000891	      0xe927fbffff	                           jmp 0x40003bd	      1110	mark.c	FUNCTION_26	CALL_17
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1110	mark.c	FUNCTION_26	CALL_17
0x40008a0	          0x4c8920	                    mov qword [rax], r12	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x40008a3	      0xe9b0f9ffff	                           jmp 0x4000258	      1086	mark.c	FUNCTION_26	IF_2	CALL_9
0x40008a8	    0x4c8b3d000000	            mov r15, qword [0x040008af] 	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40008af	      0xe97cfaffff	                           jmp 0x4000330	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40008b4	          0x4d85ed	                           test r13, r13	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40008b7	           0xf95c2	                                setne dl	      1097	mark.c	FUNCTION_26	IF_2	CALL_13
0x40008ba	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008bd	     0xf8d13faffff	                           jge 0x40002d6	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008c3	            0x84d2	                             test dl, dl	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008c5	     0xf840bfaffff	                            je 0x40002d6	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008cb	          0x4c01e8	                            add rax, r13	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008ce	    0x488981080300	            mov qword [rcx + 0x308], rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008d5	      0xe9fcf9ffff	                           jmp 0x40002d6	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008da	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008e1	    0x4c89a1f80200	            mov qword [rcx + 0x2f8], r12	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x40008e8	          0x4839e8	                            cmp rax, rbp	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008eb	            0x7fc7	                            jg 0x40008b4	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008ed	          0x4c39e0	                            cmp rax, r12	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008f0	            0x7cc2	                            jl 0x40008b4	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008f2	    0x4c89a1080300	            mov qword [rcx + 0x308], r12	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008f9	      0xe9d8f9ffff	                           jmp 0x40002d6	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x40008fe	          0x4d85ed	                           test r13, r13	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000901	           0xf95c2	                                setne dl	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000904	          0x4839c5	                            cmp rbp, rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000907	            0x7d0e	                           jge 0x4000917	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000909	            0x84d2	                             test dl, dl	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400090b	            0x740a	                            je 0x4000917	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x400090d	          0x4c01e8	                            add rax, r13	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000910	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      1090	mark.c	FUNCTION_26	IF_2	CALL_10
0x4000917	    0x488b81080300	           mov rax, qword [rcx + 0x308] 	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400091e	          0x4939c4	                            cmp r12, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000921	            0x7f97	                            jg 0x40008ba	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000923	          0x4839c5	                            cmp rbp, rax	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000926	            0x7c92	                            jl 0x40008ba	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000928	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x400092f	     0xf8597f9ffff	                           jne 0x40002cc	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000935	            0xebbb	                           jmp 0x40008f2	      1091	mark.c	FUNCTION_26	IF_2	CALL_11
0x4000937	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400093e	    0x48c781380300	              mov qword [rcx + 0x338], 0	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x4000949	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400094c	            0x7f6f	                            jg 0x40009bd	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x400094e	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000951	            0x7c6a	                            jl 0x40009bd	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000953	    0x488b81280300	           mov rax, qword [rcx + 0x328] 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x400095a	    0x48c781480300	              mov qword [rcx + 0x348], 0	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000965	        0x4883f801	                              cmp rax, 1	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x4000969	     0xf8584f8ffff	                           jne 0x40001f3	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x400096f	    0x488b3d000000	            mov rdi, qword [0x04000976] 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x4000976	    0x4839b9300300	           cmp qword [rcx + 0x330], rdi 	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x400097d	     0xf8499f8ffff	                            je 0x400021c	      1079	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x4000983	          0x4839c5	                            cmp rbp, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000986	     0xf8d70f8ffff	                           jge 0x40001fc	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400098c	          0x4839c5	                            cmp rbp, rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400098f	     0xf8d87f8ffff	                           jge 0x400021c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000995	          0x4d85ed	                           test r13, r13	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x4000998	     0xf847ef8ffff	                            je 0x400021c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x400099e	          0x4c01e8	                            add rax, r13	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009a1	    0x488981280300	            mov qword [rcx + 0x328], rax	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009a8	      0xe96ff8ffff	                           jmp 0x400021c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009ad	    0x48c781280300	              mov qword [rcx + 0x328], 0	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009b8	      0xe95ff8ffff	                           jmp 0x400021c	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009bd	          0x4d85ed	                           test r13, r13	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009c0	           0xf95c2	                                setne dl	      1080	mark.c	FUNCTION_26	IF_2	CALL_8
0x40009c3	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009c6	     0xf8d16f8ffff	                           jge 0x40001e2	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009cc	            0x84d2	                             test dl, dl	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009ce	     0xf840ef8ffff	                            je 0x40001e2	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009d4	          0x4c01e8	                            add rax, r13	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009d7	    0x488981480300	            mov qword [rcx + 0x348], rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009de	      0xe9fff7ffff	                           jmp 0x40001e2	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x40009e3	          0x4d85ed	                           test r13, r13	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009e6	           0xf95c2	                                setne dl	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009e9	          0x4839c5	                            cmp rbp, rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009ec	            0x7d0e	                           jge 0x40009fc	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009ee	            0x84d2	                             test dl, dl	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009f0	            0x740a	                            je 0x40009fc	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009f2	          0x4c01e8	                            add rax, r13	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009f5	    0x488981380300	            mov qword [rcx + 0x338], rax	      1073	mark.c	FUNCTION_26	IF_2	CALL_5
0x40009fc	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a03	          0x4939c4	                            cmp r12, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a06	            0x7fbb	                            jg 0x40009c3	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a08	          0x4839c5	                            cmp rbp, rax	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a0b	            0x7cb6	                            jl 0x40009c3	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a0d	    0x4981feffffff	                     cmp r14, 0x7fffffff	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a14	     0xf85bef7ffff	                           jne 0x40001d8	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a1a	      0xe934ffffff	                           jmp 0x4000953	      1076	mark.c	FUNCTION_26	IF_2	CALL_6
0x4000a1f	          0x4c8926	                    mov qword [rsi], r12	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x4000a22	      0xe949f7ffff	                           jmp 0x4000170	      1069	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
read_viminfo_filemark	WHILE,0:DO,0:CALL,11:IF,5:ELSE,3:functions,0:FOR,1:SWITCH,0	129
0x4002fc0	            0x4154	                                push r12	      1401	mark.c	FUNCTION_33
0x4002fc2	              0x55	                                push rbp	      1401	mark.c	FUNCTION_33
0x4002fc3	              0x53	                                push rbx	      1401	mark.c	FUNCTION_33
0x4002fc4	          0x4889fb	                            mov rbx, rdi	      1401	mark.c	FUNCTION_33
0x4002fc7	        0x4883ec20	                           sub rsp, 0x20	      1401	mark.c	FUNCTION_33
0x4002fcb	          0x488b3f	                    mov rdi, qword [rdi]	      1408	mark.c	FUNCTION_33
0x4002fce	    0x64488b042528	                mov rax, qword fs:[0x28]	      1401	mark.c	FUNCTION_33
0x4002fd7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1401	mark.c	FUNCTION_33
0x4002fdc	            0x31c0	                            xor eax, eax	      1401	mark.c	FUNCTION_33
0x4002fde	        0x488d4701	                      lea rax, [rdi + 1]	      1408	mark.c	FUNCTION_33
0x4002fe2	      0x4889442410	             mov qword [rsp + 0x10], rax	      1408	mark.c	FUNCTION_33
0x4002fe7	         0xfb66f01	               movzx ebp, byte [rdi + 1]	      1411	mark.c	FUNCTION_33	IF_1
0x4002feb	          0x4084ed	                           test bpl, bpl	      1409	mark.c	FUNCTION_33	IF_1
0x4002fee	     0xf88c2010000	                            js 0x40031b6	      1409	mark.c	FUNCTION_33	IF_1
0x4002ff4	           0xfb607	                   movzx eax, byte [rdi]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4002ff7	            0x3c27	                            cmp al, 0x27	      1411	mark.c	FUNCTION_33	IF_1
0x4002ff9	     0xf84c9000000	                            je 0x40030c8	      1411	mark.c	FUNCTION_33	IF_1
0x4002fff	        0x4080fd27	                           cmp bpl, 0x27	      1414	mark.c	FUNCTION_33	IF_1
0x4003003	     0xf85ad010000	                           jne 0x40031b6	      1414	mark.c	FUNCTION_33	IF_1
0x4003009	            0x3c2d	                            cmp al, 0x2d	      1414	mark.c	FUNCTION_33	IF_1
0x400300b	     0xf85a5010000	                           jne 0x40031b6	      1414	mark.c	FUNCTION_33	IF_1
0x4003011	    0x4c8b0d000000	              mov r9, qword [0x04003018]	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4003018	    0x458b91401500	          mov r10d, dword [r9 + 0x1540] 	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x400301f	        0x4183fa64	                          cmp r10d, 0x64	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4003023	     0xf848d010000	                            je 0x40031b6	      1420	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4003029	          0x4585d2	                         test r10d, r10d	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400302c	            0x7e63	                           jle 0x4003091	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400302e	          0x4963c2	                        movsxd rax, r10d	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003031	     0xf1f80000000	                         nop dword [rax]	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003038	          0x8d48ff	                      lea ecx, [rax - 1]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400303b	        0x488d0480	                  lea rax, [rax + rax*4]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400303f	          0x4863d1	                         movsxd rdx, ecx	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003042	        0x498d34c1	                   lea rsi, [r9 + rax*8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003046	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400304a	    0x488d86a00500	                  lea rax, [rsi + 0x5a0]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003051	        0x4d8d04d1	                    lea r8, [r9 + rdx*8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003055	    0x498d90a00500	                   lea rdx, [r8 + 0x5a0]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400305c	    0x4d8b80a00500	              mov r8, qword [r8 + 0x5a0]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003063	    0x4c8986a00500	             mov qword [rsi + 0x5a0], r8	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400306a	        0x488b7208	                mov rsi, qword [rdx + 8]	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400306e	        0x48897008	                mov qword [rax + 8], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003072	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003076	        0x48897010	             mov qword [rax + 0x10], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400307a	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400307e	        0x48897018	             mov qword [rax + 0x18], rsi	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003082	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003086	        0x48895020	             mov qword [rax + 0x20], rdx	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400308a	          0x4863c1	                         movsxd rax, ecx	      1425	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400308d	            0x85c0	                           test eax, eax	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x400308f	            0x75a7	                           jne 0x4003038	      1424	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4003091	        0x4183c201	                             add r10d, 1	      1427	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4003095	    0x418381441500	              add dword [r9 + 0x1544], 1	      1426	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x400309d	    0x498da9a00500	                   lea rbp, [r9 + 0x5a0]	      1428	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030a4	    0x458991401500	          mov dword [r9 + 0x1540], r10d 	      1427	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030ab	    0x49c781a00500	               mov qword [r9 + 0x5a0], 0	      1429	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030b6	    0x49c781b80500	               mov qword [r9 + 0x5b8], 0	      1430	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030c1	            0xeb74	                           jmp 0x4003137	      1430	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030c3	       0xf1f440000	                   nop dword [rax + rax]	      1430	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x40030c8	        0x440fb6e5	                         movzx r12d, bpl	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030cc	      0x418d4424d0	                   lea eax, [r12 - 0x30]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030d1	          0x83f809	                              cmp eax, 9	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030d4	     0xf8606010000	                           jbe 0x40031e0	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030da	        0x8974240c	              mov dword [rsp + 0xc], esi	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030de	        0x48893c24	                    mov qword [rsp], rdi	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030e2	      0xe800000000	                          call 0x40030e7	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030e7	          0x488b08	                    mov rcx, qword [rax]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030ea	        0x400fb6d5	                          movzx edx, bpl	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030ee	        0x488b3c24	                    mov rdi, qword [rsp]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030f2	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030f6	      0xf644510101	         test byte [rcx + rdx*2 + 1], 1 	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x40030fb	     0xf84b5000000	                            je 0x40031b6	      1413	mark.c	FUNCTION_33	IF_1	CALL_2
0x4003101	        0x4080fd27	                           cmp bpl, 0x27	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x4003105	     0xf8406ffffff	                            je 0x4003011	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x400310b	        0x4183ec41	                          sub r12d, 0x41	      1439	mark.c	FUNCTION_33	IF_1	ELSE_3
0x400310f	          0x4d63e4	                        movsxd r12, r12d	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003112	        0x4b8d04a4	                  lea rax, [r12 + r12*4]	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003116	        0x48c1e003	                              shl rax, 3	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x400311a	    0x4883b8000000	                      cmp qword [rax], 0	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003122	    0x488da8000000	                          lea rbp, [rax]	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003129	           0xf94c2	                                 sete dl	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x400312c	            0x85f6	                           test esi, esi	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x400312e	           0xf95c0	                                setne al	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003131	             0x9d0	                             or eax, edx	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x4003133	            0x84c0	                             test al, al	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4003135	            0x747f	                            je 0x40031b6	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4003137	        0x4883c702	                              add rdi, 2	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x400313b	      0xe800000000	                          call 0x4003140	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4003140	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4003145	      0x4889442410	             mov qword [rsp + 0x10], rax	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x400314a	      0xe800000000	                          call 0x400314f	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x400314f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4003154	        0x48894500	                    mov qword [rbp], rax	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4003158	      0xe800000000	                          call 0x400315d	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x400315d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4003162	      0x4889442410	             mov qword [rsp + 0x10], rax	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4003167	      0xe800000000	                          call 0x400316c	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x400316c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4003171	          0x894508	                mov dword [rbp + 8], eax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4003174	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      1447	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x400317b	    0xc74510000000	               mov dword [rbp + 0x10], 0	      1449	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4003182	      0xe800000000	                          call 0x4003187	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4003187	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1451	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x400318b	      0x4889442410	             mov qword [rsp + 0x10], rax	      1450	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4003190	      0xe800000000	                          call 0x4003195	      1451	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4003195	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x400319a	          0x482b33	                    sub rsi, qword [rbx]	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x400319d	          0x4889df	                            mov rdi, rbx	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x40031a0	            0x31d2	                            xor edx, edx	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x40031a2	      0xe800000000	                          call 0x40031a7	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x40031a7	          0x488b3b	                    mov rdi, qword [rbx]	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x40031aa	        0x48894518	            mov qword [rbp + 0x18], rax 	      1452	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x40031ae	    0x48c745200000	               mov qword [rbp + 0x20], 0	      1454	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x40031b6	        0x488b5308	                mov rdx, qword [rbx + 8]	      1457	mark.c	FUNCTION_33	CALL_11
0x40031ba	      0xbe00020000	                          mov esi, 0x200	      1457	mark.c	FUNCTION_33	CALL_11
0x40031bf	      0xe800000000	                          call 0x40031c4	      1457	mark.c	FUNCTION_33	CALL_11
0x40031c4	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1458	mark.c	FUNCTION_33
0x40031c9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1458	mark.c	FUNCTION_33
0x40031d2	            0x751f	                           jne 0x40031f3	      1458	mark.c	FUNCTION_33
0x40031d4	        0x4883c420	                           add rsp, 0x20	      1458	mark.c	FUNCTION_33
0x40031d8	              0x5b	                                 pop rbx	      1458	mark.c	FUNCTION_33
0x40031d9	              0x5d	                                 pop rbp	      1458	mark.c	FUNCTION_33
0x40031da	            0x415c	                                 pop r12	      1458	mark.c	FUNCTION_33
0x40031dc	              0xc3	                                     ret	      1458	mark.c	FUNCTION_33
0x40031dd	           0xf1f00	                         nop dword [rax]	      1458	mark.c	FUNCTION_33
0x40031e0	        0x4183ec16	                          sub r12d, 0x16	      1437	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x40031e4	        0x4080fd27	                           cmp bpl, 0x27	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x40031e8	     0xf8521ffffff	                           jne 0x400310f	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x40031ee	      0xe91efeffff	                           jmp 0x4003011	      1416	mark.c	FUNCTION_33	IF_1	IF_2
0x40031f3	      0xe800000000	                          call 0x40031f8	      1458	mark.c	FUNCTION_33
handle_viminfo_mark	WHILE,0:DO,0:CALL,7:IF,20:ELSE,9:functions,0:FOR,5:SWITCH,0	251
0x4003300	          0x833f04	                      cmp dword [rdi], 4	      1517	mark.c	FUNCTION_36	IF_1
0x4003303	            0x7e49	                           jle 0x400334e	      1517	mark.c	FUNCTION_36	IF_1
0x4003305	            0x4157	                                push r15	      1507	mark.c	FUNCTION_36
0x4003307	            0x4156	                                push r14	      1507	mark.c	FUNCTION_36
0x4003309	            0x4155	                                push r13	      1507	mark.c	FUNCTION_36
0x400330b	            0x4154	                                push r12	      1507	mark.c	FUNCTION_36
0x400330d	              0x55	                                push rbp	      1507	mark.c	FUNCTION_36
0x400330e	              0x53	                                push rbx	      1507	mark.c	FUNCTION_36
0x400330f	        0x4883ec18	                           sub rsp, 0x18	      1507	mark.c	FUNCTION_36
0x4003313	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      1508	mark.c	FUNCTION_36
0x4003317	          0x448b03	                    mov r8d, dword [rbx]	      1518	mark.c	FUNCTION_36	IF_1
0x400331a	          0x4585c0	                           test r8d, r8d	      1518	mark.c	FUNCTION_36	IF_1
0x400331d	            0x7521	                           jne 0x4003340	      1518	mark.c	FUNCTION_36	IF_1
0x400331f	          0x8b7b20	            mov edi, dword [rbx + 0x20] 	      1519	mark.c	FUNCTION_36	IF_1
0x4003322	            0x85ff	                           test edi, edi	      1519	mark.c	FUNCTION_36	IF_1
0x4003324	            0x751a	                           jne 0x4003340	      1519	mark.c	FUNCTION_36	IF_1
0x4003326	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      1520	mark.c	FUNCTION_36	IF_1
0x4003329	            0x85c9	                           test ecx, ecx	      1520	mark.c	FUNCTION_36	IF_1
0x400332b	            0x7513	                           jne 0x4003340	      1520	mark.c	FUNCTION_36	IF_1
0x400332d	          0x8b5360	            mov edx, dword [rbx + 0x60] 	      1521	mark.c	FUNCTION_36	IF_1
0x4003330	            0x85d2	                           test edx, edx	      1521	mark.c	FUNCTION_36	IF_1
0x4003332	            0x750c	                           jne 0x4003340	      1521	mark.c	FUNCTION_36	IF_1
0x4003334	    0x83bb80000000	               cmp dword [rbx + 0x80], 1	      1522	mark.c	FUNCTION_36	IF_1
0x400333b	            0x7413	                            je 0x4003350	      1522	mark.c	FUNCTION_36	IF_1
0x400333d	           0xf1f00	                         nop dword [rax]	      1522	mark.c	FUNCTION_36	IF_1
0x4003340	        0x4883c418	                           add rsp, 0x18	      1651	mark.c	FUNCTION_36
0x4003344	              0x5b	                                 pop rbx	      1651	mark.c	FUNCTION_36
0x4003345	              0x5d	                                 pop rbp	      1651	mark.c	FUNCTION_36
0x4003346	            0x415c	                                 pop r12	      1651	mark.c	FUNCTION_36
0x4003348	            0x415d	                                 pop r13	      1651	mark.c	FUNCTION_36
0x400334a	            0x415e	                                 pop r14	      1651	mark.c	FUNCTION_36
0x400334c	            0x415f	                                 pop r15	      1651	mark.c	FUNCTION_36
0x400334e	            0xf3c3	                                     ret	      1651	mark.c	FUNCTION_36
0x4003350	        0x488b4308	                mov rax, qword [rbx + 8]	      1525	mark.c	FUNCTION_36
0x4003354	          0x83f827	                           cmp eax, 0x27	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4003357	          0x8d50d0	                   lea edx, [rax - 0x30]	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x400335a	            0x740d	                            je 0x4003369	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x400335c	          0x83fa09	                              cmp edx, 9	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x400335f	            0x7608	                           jbe 0x4003369	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4003361	          0x8d48bf	                   lea ecx, [rax - 0x41]	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4003364	          0x83f919	                           cmp ecx, 0x19	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4003367	            0x77d7	                            ja 0x4003340	      1526	mark.c	FUNCTION_36	IF_2	CALL_2
0x4003369	        0x4c8b6328	            mov r12, qword [rbx + 0x28] 	      1528	mark.c	FUNCTION_36
0x400336d	        0x4c8b6b48	            mov r13, qword [rbx + 0x48] 	      1529	mark.c	FUNCTION_36
0x4003371	          0x4d85e4	                           test r12, r12	      1530	mark.c	FUNCTION_36	IF_3
0x4003374	            0x7eca	                           jle 0x4003340	      1530	mark.c	FUNCTION_36	IF_3
0x4003376	          0x4489e9	                           mov ecx, r13d	      1530	mark.c	FUNCTION_36	IF_3
0x4003379	          0xc1e91f	                           shr ecx, 0x1f	      1530	mark.c	FUNCTION_36	IF_3
0x400337c	            0x84c9	                             test cl, cl	      1530	mark.c	FUNCTION_36	IF_3
0x400337e	            0x75c0	                           jne 0x4003340	      1530	mark.c	FUNCTION_36	IF_3
0x4003380	          0x83f827	                           cmp eax, 0x27	      1534	mark.c	FUNCTION_36	IF_4
0x4003383	        0x4c8b7368	            mov r14, qword [rbx + 0x68] 	      1532	mark.c	FUNCTION_36
0x4003387	     0xf84ac000000	                            je 0x4003439	      1534	mark.c	FUNCTION_36	IF_4
0x400338d	          0x83fa09	                              cmp edx, 9	      1597	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x4003390	            0x776f	                            ja 0x4003401	      1597	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x4003392	    0x488b15000000	            mov rdx, qword [0x04003399] 	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x4003399	          0x4885d2	                           test rdx, rdx	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x400339c	     0xf84f3000000	                            je 0x4003495	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40033a2	          0x8d68ea	                   lea ebp, [rax - 0x16]	      1600	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40033a5	          0x4863c5	                         movsxd rax, ebp	      1600	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x40033a8	        0x488d0480	                  lea rax, [rax + rax*4]	      1624	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40033ac	        0x488d2cc2	                  lea rbp, [rdx + rax*8]	      1624	mark.c	FUNCTION_36	ELSE_5	IF_17
0x40033b0	          0x4885ed	                           test rbp, rbp	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40033b3	            0x748b	                            je 0x4003340	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x40033b5	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1640	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x40033b9	        0x4c896500	                    mov qword [rbp], r12	      1634	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40033bd	        0x44896d08	               mov dword [rbp + 8], r13d	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40033c1	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      1637	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40033c8	    0xc74510000000	               mov dword [rbp + 0x10], 0	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40033cf	      0xe800000000	                          call 0x40033d4	      1640	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x40033d4	    0x8b839c000000	            mov eax, dword [rbx + 0x9c] 	      1641	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033da	            0x85c0	                           test eax, eax	      1641	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033dc	     0xf849e000000	                            je 0x4003480	      1641	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033e2	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033e9	        0x48894518	            mov qword [rbp + 0x18], rax 	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033ed	    0x48c783900000	               mov qword [rbx + 0x90], 0	      1644	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x40033f8	        0x4c897520	            mov qword [rbp + 0x20], r14 	      1648	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x40033fc	      0xe93fffffff	                           jmp 0x4003340	      1648	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003401	          0x8d68bf	                   lea ebp, [rax - 0x41]	      1622	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4003404	          0x4863c5	                         movsxd rax, ebp	      1622	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4003407	    0x488b15000000	            mov rdx, qword [0x0400340e] 	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x400340e	          0x4885d2	                           test rdx, rdx	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4003411	            0x7595	                           jne 0x40033a8	      1623	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4003413	        0x488d0480	                  lea rax, [rax + rax*4]	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4003417	    0x488d2cc50000	                        lea rbp, [rax*8]	      1626	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x400341f	      0x48837d0000	                      cmp qword [rbp], 0	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003424	            0x748f	                            je 0x40033b5	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003426	        0x4c3b7520	            cmp r14, qword [rbp + 0x20] 	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400342a	            0x7f89	                            jg 0x40033b5	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400342c	            0x85f6	                           test esi, esi	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400342e	     0xf840cffffff	                            je 0x4003340	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003434	      0xe97cffffff	                           jmp 0x40033b5	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003439	    0x488b15000000	            mov rdx, qword [0x04003440] 	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4003440	          0x4885d2	                           test rdx, rdx	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4003443	            0x7474	                            je 0x40034b9	      1537	mark.c	FUNCTION_36	IF_4	IF_5
0x4003445	    0x486305000000	         movsxd rax, dword [0x0400344c] 	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x400344c	          0x83f863	                           cmp eax, 0x63	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x400344f	     0xf8febfeffff	                            jg 0x4003340	      1539	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4003455	          0x8d4801	                      lea ecx, [rax + 1]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4003458	        0x488d0480	                  lea rax, [rax + rax*4]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x400345c	        0x488d2cc2	                  lea rbp, [rdx + rax*8]	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4003460	    0x890d00000000	            mov dword [0x04003466], ecx 	      1540	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4003466	          0x4885ed	                           test rbp, rbp	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x4003469	     0xf84d1feffff	                            je 0x4003340	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18
0x400346f	    0x48833d000000	               cmp qword [0x04003477], 0	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003477	            0x74a6	                            je 0x400341f	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003479	      0xe937ffffff	                           jmp 0x40033b5	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x400347e	            0x6690	                                     nop	      1631	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4003480	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4003487	      0xe800000000	                          call 0x400348c	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x400348c	        0x48894518	            mov qword [rbp + 0x18], rax 	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4003490	      0xe963ffffff	                           jmp 0x40033f8	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4003495	      0xb800000000	                              mov eax, 0	      1647	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x400349a	      0xbd1a000000	                           mov ebp, 0x1a	      1599	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x400349f	          0x4c3b30	                    cmp r14, qword [rax]	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x40034a2	     0xf8f34010000	                            jg 0x40035dc	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x40034a8	          0x83c501	                              add ebp, 1	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x40034ab	        0x4883c028	                           add rax, 0x28	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x40034af	          0x83fd24	                           cmp ebp, 0x24	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x40034b2	            0x75eb	                           jne 0x400349f	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x40034b4	      0xe987feffff	                           jmp 0x4003340	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x40034b9	          0x4d85f6	                           test r14, r14	      1548	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x40034bc	    0x4c8b0d000000	              mov r9, qword [0x040034c3]	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x40034c3	     0xf848e010000	                            je 0x4003657	      1548	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x40034c9	    0x458b91401500	          mov r10d, dword [r9 + 0x1540] 	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x40034d0	          0x4489d5	                           mov ebp, r10d	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x40034d3	          0x83ed01	                              sub ebp, 1	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x40034d6	            0x7835	                            js 0x400350d	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x40034d8	          0x4c63fd	                         movsxd r15, ebp	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034db	        0x496bc728	                     imul rax, r15, 0x28	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034df	    0x4d3bb401c005	      cmp r14, qword [r9 + rax + 0x5c0] 	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034e7	            0x7e1c	                           jle 0x4003505	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034e9	      0xe97c010000	                           jmp 0x400366a	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034ee	            0x6690	                                     nop	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034f0	          0x4c63fd	                         movsxd r15, ebp	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034f3	        0x4b8d04bf	                  lea rax, [r15 + r15*4]	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034f7	    0x4d3bb4c1c005	    cmp r14, qword [r9 + rax*8 + 0x5c0] 	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x40034ff	     0xf8f65010000	                            jg 0x400366a	      1551	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4003505	          0x83ed01	                              sub ebp, 1	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4003508	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x400350b	            0x75e3	                           jne 0x40034f0	      1550	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x400350d	        0x4183fa63	                          cmp r10d, 0x63	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003511	     0xf8f29feffff	                            jg 0x4003340	      1557	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x4003517	    0x458b91401500	          mov r10d, dword [r9 + 0x1540] 	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400351e	        0x4183fa64	                          cmp r10d, 0x64	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003522	     0xf84be010000	                            je 0x40036e6	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003528	            0x31ed	                            xor ebp, ebp	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400352a	          0x4439d5	                           cmp ebp, r10d	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400352d	          0x4963c2	                        movsxd rax, r10d	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003530	            0x7d5f	                           jge 0x4003591	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003532	    0x660f1f440000	                    nop word [rax + rax]	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003538	          0x8d48ff	                      lea ecx, [rax - 1]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400353b	        0x488d0480	                  lea rax, [rax + rax*4]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400353f	          0x4863d1	                         movsxd rdx, ecx	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003542	        0x498d3cc1	                   lea rdi, [r9 + rax*8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003546	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400354a	    0x488d87a00500	                  lea rax, [rdi + 0x5a0]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003551	        0x4d8d04d1	                    lea r8, [r9 + rdx*8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003555	    0x498d90a00500	                   lea rdx, [r8 + 0x5a0]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400355c	    0x4d8b80a00500	              mov r8, qword [r8 + 0x5a0]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003563	    0x4c8987a00500	             mov qword [rdi + 0x5a0], r8	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400356a	        0x488b7a08	                mov rdi, qword [rdx + 8]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400356e	        0x48897808	                mov qword [rax + 8], rdi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003572	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003576	        0x48897810	             mov qword [rax + 0x10], rdi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400357a	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400357e	        0x48897818	             mov qword [rax + 0x18], rdi	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003582	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003586	        0x48895020	             mov qword [rax + 0x20], rdx	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400358a	          0x4863c1	                         movsxd rax, ecx	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400358d	            0x39e8	                            cmp eax, ebp	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x400358f	            0x75a7	                           jne 0x4003538	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4003591	    0x418381441500	              add dword [r9 + 0x1544], 1	      1582	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4003599	        0x4183c201	                             add r10d, 1	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x400359d	          0x4c63fd	                         movsxd r15, ebp	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x40035a0	    0x458991401500	          mov dword [r9 + 0x1540], r10d 	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x40035a7	        0x4d6bff28	                     imul r15, r15, 0x28	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035ab	    0x4b8dac39a005	            lea rbp, [r9 + r15 + 0x5a0] 	      1585	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035b3	          0x4d01f9	                             add r9, r15	      1586	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035b6	    0x49c781a00500	               mov qword [r9 + 0x5a0], 0	      1586	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035c1	    0x49c781b80500	               mov qword [r9 + 0x5b8], 0	      1587	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035cc	    0x49c781c00500	               mov qword [r9 + 0x5c0], 0	      1588	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035d7	      0xe98afeffff	                           jmp 0x4003466	      1588	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x40035dc	    0x488b3d000000	            mov rdi, qword [0x040035e3] 	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40035e3	        0x8974240c	              mov dword [rsp + 0xc], esi	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40035e7	      0xe800000000	                          call 0x40035ec	      1615	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x40035ec	          0x83fd23	                           cmp ebp, 0x23	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x40035ef	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x40035f3	            0x744b	                            je 0x4003640	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x40035f5	      0xb922000000	                           mov ecx, 0x22	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x40035fa	      0xb800000000	                              mov eax, 0	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x40035ff	            0x29e9	                            sub ecx, ebp	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003601	        0x486bc9d8	       imul rcx, rcx, 0xffffffffffffffd8	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003605	    0x4881c1000000	                              add rcx, 0	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400360c	         0xf1f4000	                         nop dword [rax]	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003610	          0x488b10	                    mov rdx, qword [rax]	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003613	        0x4883e828	                           sub rax, 0x28	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003617	        0x48895050	             mov qword [rax + 0x50], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400361b	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400361f	        0x48895058	             mov qword [rax + 0x58], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003623	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003627	        0x48895060	             mov qword [rax + 0x60], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400362b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400362f	        0x48895068	             mov qword [rax + 0x68], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003633	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003637	        0x48895070	             mov qword [rax + 0x70], rdx	      1617	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400363b	          0x4839c8	                            cmp rax, rcx	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x400363e	            0x75d0	                           jne 0x4003610	      1616	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4003640	          0x4863c5	                         movsxd rax, ebp	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003643	        0x486bd028	                     imul rdx, rax, 0x28	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003647	    0x48c782000000	                      mov qword [rdx], 0	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003652	      0xe9b0fdffff	                           jmp 0x4003407	      1618	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4003657	    0x4183b9401500	          cmp dword [r9 + 0x1540], 0x63 	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x400365f	     0xf8eb2feffff	                           jle 0x4003517	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x4003665	      0xe9d6fcffff	                           jmp 0x4003340	      1561	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x400366a	        0x4183fa64	                          cmp r10d, 0x64	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x400366e	            0x7408	                            je 0x4003678	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4003670	          0x83c501	                              add ebp, 1	      1553	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4003673	      0xe9b2feffff	                           jmp 0x400352a	      1553	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4003678	    0x498bb9b80500	            mov rdi, qword [r9 + 0x5b8] 	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x400367f	        0x8974240c	              mov dword [rsp + 0xc], esi	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4003683	      0xe800000000	                          call 0x4003688	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4003688	            0x85ed	                           test ebp, ebp	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x400368a	    0x4c8b0d000000	              mov r9, qword [0x04003691]	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003691	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4003695	     0xf840cffffff	                            je 0x40035a7	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x400369b	          0x8d55ff	                      lea edx, [rbp - 1]	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x400369e	    0x498d81c80500	                   lea rax, [r9 + 0x5c8]	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036a5	        0x486bd228	                     imul rdx, rdx, 0x28	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036a9	    0x498d8c11f005	            lea rcx, [r9 + rdx + 0x5f0] 	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036b1	          0x488b10	                    mov rdx, qword [rax]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036b4	        0x4883c028	                           add rax, 0x28	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036b8	        0x488950b0	             mov qword [rax - 0x50], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036bc	        0x488b50e0	             mov rdx, qword [rax - 0x20]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036c0	        0x488950b8	             mov qword [rax - 0x48], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036c4	        0x488b50e8	             mov rdx, qword [rax - 0x18]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036c8	        0x488950c0	             mov qword [rax - 0x40], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036cc	        0x488b50f0	             mov rdx, qword [rax - 0x10]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036d0	        0x488950c8	             mov qword [rax - 0x38], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036d4	        0x488b50f8	                mov rdx, qword [rax - 8]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036d8	        0x488950d0	             mov qword [rax - 0x30], rdx	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036dc	          0x4839c1	                            cmp rcx, rax	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036df	            0x75d0	                           jne 0x40036b1	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036e1	      0xe9c1feffff	                           jmp 0x40035a7	      1574	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x40036e6	    0x498bb9b80500	            mov rdi, qword [r9 + 0x5b8] 	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x40036ed	        0x8974240c	              mov dword [rsp + 0xc], esi	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x40036f1	        0x4983cfff	              or r15, 0xffffffffffffffff	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x40036f5	      0xe800000000	                          call 0x40036fa	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x40036fa	    0x4c8b0d000000	              mov r9, qword [0x04003701]	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4003701	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4003705	      0xe99dfeffff	                           jmp 0x40035a7	      1573	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
write_viminfo_filemarks	WHILE,0:DO,0:CALL,19:IF,9:ELSE,3:functions,0:FOR,5:SWITCH,0	297
0x4003800	            0x4157	                                push r15	      1668	mark.c	FUNCTION_38
0x4003802	            0x4156	                                push r14	      1668	mark.c	FUNCTION_38
0x4003804	            0x4155	                                push r13	      1668	mark.c	FUNCTION_38
0x4003806	            0x4154	                                push r12	      1668	mark.c	FUNCTION_38
0x4003808	              0x55	                                push rbp	      1668	mark.c	FUNCTION_38
0x4003809	              0x53	                                push rbx	      1668	mark.c	FUNCTION_38
0x400380a	          0x4889fd	                            mov rbp, rdi	      1668	mark.c	FUNCTION_38
0x400380d	      0xbf66000000	                           mov edi, 0x66	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x4003812	        0x4883ec08	                              sub rsp, 8	      1668	mark.c	FUNCTION_38
0x4003816	      0xe800000000	                          call 0x400381b	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x400381b	            0x85c0	                           test eax, eax	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x400381d	            0x7511	                           jne 0x4003830	      1676	mark.c	FUNCTION_38	IF_1	CALL_1
0x400381f	        0x4883c408	                              add rsp, 8	      1778	mark.c	FUNCTION_38
0x4003823	              0x5b	                                 pop rbx	      1778	mark.c	FUNCTION_38
0x4003824	              0x5d	                                 pop rbp	      1778	mark.c	FUNCTION_38
0x4003825	            0x415c	                                 pop r12	      1778	mark.c	FUNCTION_38
0x4003827	            0x415d	                                 pop r13	      1778	mark.c	FUNCTION_38
0x4003829	            0x415e	                                 pop r14	      1778	mark.c	FUNCTION_38
0x400382b	            0x415f	                                 pop r15	      1778	mark.c	FUNCTION_38
0x400382d	              0xc3	                                     ret	      1778	mark.c	FUNCTION_38
0x400382e	            0x6690	                                     nop	      1778	mark.c	FUNCTION_38
0x4003830	      0xba05000000	                              mov edx, 5	      1679	mark.c	FUNCTION_38	CALL_3
0x4003835	      0xbe00000000	                              mov esi, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x400383a	            0x31ff	                            xor edi, edi	      1679	mark.c	FUNCTION_38	CALL_3
0x400383c	      0xe800000000	                          call 0x4003841	      1679	mark.c	FUNCTION_38	CALL_3
0x4003841	          0x4889ee	                            mov rsi, rbp	      1679	mark.c	FUNCTION_38	CALL_3
0x4003844	          0x4889c7	                            mov rdi, rax	      1679	mark.c	FUNCTION_38	CALL_3
0x4003847	    0x41bd00000000	                             mov r13d, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x400384d	      0xe800000000	                          call 0x4003852	      1679	mark.c	FUNCTION_38	CALL_3
0x4003852	      0xbb00000000	                              mov ebx, 0	      1679	mark.c	FUNCTION_38	CALL_3
0x4003857	    0x41bc41000000	                          mov r12d, 0x41	      1679	mark.c	FUNCTION_38	CALL_3
0x400385d	            0xeb0e	                           jmp 0x400386d	      1679	mark.c	FUNCTION_38	CALL_3
0x400385f	              0x90	                                     nop	      1679	mark.c	FUNCTION_38	CALL_3
0x4003860	        0x4883c328	                           add rbx, 0x28	      1679	mark.c	FUNCTION_38	CALL_3
0x4003864	        0x4183c401	                             add r12d, 1	      1679	mark.c	FUNCTION_38	CALL_3
0x4003868	          0x4939dd	                            cmp r13, rbx	      1682	mark.c	FUNCTION_38	FOR_1
0x400386b	            0x744e	                            je 0x40038bb	      1682	mark.c	FUNCTION_38	FOR_1
0x400386d	    0x488b35000000	            mov rsi, qword [0x04003874] 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003874	          0x4885f6	                           test rsi, rsi	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003877	            0x741c	                            je 0x4003895	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003879	          0x4889d8	                            mov rax, rbx	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400387c	    0x482d00000000	                              sub rax, 0	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003882	          0x4801c6	                            add rsi, rax	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003885	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003889	        0x48394620	            cmp qword [rsi + 0x20], rax 	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400388d	            0x7f09	                            jg 0x4003898	      1684	mark.c	FUNCTION_38	FOR_1	IF_2
0x400388f	        0x48833b00	                      cmp qword [rbx], 0	      1685	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003893	            0x7403	                            je 0x4003898	      1685	mark.c	FUNCTION_38	FOR_1	IF_2
0x4003895	          0x4889de	                            mov rsi, rbx	      1688	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4003898	        0x48833e00	                      cmp qword [rsi], 0	      1789	mark.c	FUNCTION_39	IF_1
0x400389c	            0x74c2	                            je 0x4003860	      1789	mark.c	FUNCTION_39	IF_1
0x400389e	          0x4489e1	                           mov ecx, r12d	      1789	mark.c	FUNCTION_39	IF_1
0x40038a1	      0xba27000000	                           mov edx, 0x27	      1789	mark.c	FUNCTION_39	IF_1
0x40038a6	          0x4889ef	                            mov rdi, rbp	      1789	mark.c	FUNCTION_39	IF_1
0x40038a9	        0x4883c328	                           add rbx, 0x28	      1789	mark.c	FUNCTION_39	IF_1
0x40038ad	        0x4183c401	                             add r12d, 1	      1789	mark.c	FUNCTION_39	IF_1
0x40038b1	      0xe85ad6ffff	      call sym.write_one_filemark.part.4	      1789	mark.c	FUNCTION_39	IF_1
0x40038b6	          0x4939dd	                            cmp r13, rbx	      1682	mark.c	FUNCTION_38	FOR_1
0x40038b9	            0x75b2	                           jne 0x400386d	      1682	mark.c	FUNCTION_38	FOR_1
0x40038bb	    0x488b3d000000	            mov rdi, qword [0x040038c2] 	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038c2	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038ca	            0x740d	                            je 0x40038d9	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038cc	      0xe8fffeffff	               call sym.skip_for_viminfo	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038d1	            0x85c0	                           test eax, eax	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038d3	     0xf845b020000	                            je 0x4003b34	      1698	mark.c	FUNCTION_38	IF_3	CALL_5
0x40038d9	      0xbb30000000	                           mov ebx, 0x30	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40038de	    0x41bc1a000000	                          mov r12d, 0x1a	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40038e4	    0x41bd1a000000	                          mov r13d, 0x1a	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40038ea	            0xeb3e	                           jmp 0x400392a	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40038ec	         0xf1f4000	                         nop dword [rax]	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x40038f0	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x40038f8	        0x48397e20	            cmp qword [rsi + 0x20], rdi 	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x40038fc	            0x7f0d	                            jg 0x400390b	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x40038fe	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003906	          0x4885c9	                           test rcx, rcx	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003909	            0x755a	                           jne 0x4003965	      1729	mark.c	FUNCTION_38	FOR_4	IF_5
0x400390b	        0x4183c501	                             add r13d, 1	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x400390f	            0x89d9	                            mov ecx, ebx	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003911	      0xba27000000	                           mov edx, 0x27	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003916	          0x4889ef	                            mov rdi, rbp	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003919	      0xe8f2d5ffff	      call sym.write_one_filemark.part.4	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x400391e	          0x83c301	                              add ebx, 1	      1732	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003921	          0x83fb3a	                           cmp ebx, 0x3a	      1722	mark.c	FUNCTION_38	FOR_4
0x4003924	     0xf84ce000000	                            je 0x40039f8	      1722	mark.c	FUNCTION_38	FOR_4
0x400392a	    0x488b05000000	            mov rax, qword [0x04003931] 	      1724	mark.c	FUNCTION_38	FOR_4
0x4003931	          0x4885c0	                           test rax, rax	      1724	mark.c	FUNCTION_38	FOR_4
0x4003934	     0xf84a6000000	                            je 0x40039e0	      1724	mark.c	FUNCTION_38	FOR_4
0x400393a	          0x4963d5	                        movsxd rdx, r13d	      1724	mark.c	FUNCTION_38	FOR_4
0x400393d	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1724	mark.c	FUNCTION_38	FOR_4
0x4003941	        0x488d34d0	                  lea rsi, [rax + rdx*8]	      1724	mark.c	FUNCTION_38	FOR_4
0x4003945	          0x4885f6	                           test rsi, rsi	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003948	     0xf8492000000	                            je 0x40039e0	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x400394e	          0x488b16	                    mov rdx, qword [rsi]	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003951	          0x4963c4	                        movsxd rax, r12d	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003954	        0x488d0c80	                  lea rcx, [rax + rax*4]	      1728	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003958	          0x4885d2	                           test rdx, rdx	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x400395b	            0x7593	                           jne 0x40038f0	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x400395d	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x4003965	        0x488d3c80	                  lea rdi, [rax + rax*4]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003969	          0x4839ca	                            cmp rdx, rcx	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400396c	      0x458d7c2401	                     lea r15d, [r12 + 1]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003971	    0x4c8d34fd0000	                        lea r14, [rdi*8]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x4003979	            0x7415	                            je 0x4003990	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400397b	          0x4589fc	                          mov r12d, r15d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x400397e	        0x49833e00	                      cmp qword [r14], 0	      1789	mark.c	FUNCTION_39	IF_1
0x4003982	            0x749a	                            je 0x400391e	      1789	mark.c	FUNCTION_39	IF_1
0x4003984	          0x4c89f6	                            mov rsi, r14	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x4003987	            0xeb86	                           jmp 0x400390f	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x4003989	     0xf1f80000000	                         nop dword [rax]	      1747	mark.c	FUNCTION_38	FOR_4	CALL_12
0x4003990	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003994	        0x48397e20	            cmp qword [rsi + 0x20], rdi 	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x4003998	          0x4589fc	                          mov r12d, r15d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x400399b	            0x75e1	                           jne 0x400397e	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x400399d	          0x8b5610	            mov edx, dword [rsi + 0x10] 	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039a0	            0x85d2	                           test edx, edx	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039a2	            0x7406	                            je 0x40039aa	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039a4	        0x413b5610	            cmp edx, dword [r14 + 0x10] 	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039a8	            0x7426	                            je 0x40039d0	      1741	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039aa	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039ae	          0x4885ff	                           test rdi, rdi	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039b1	            0x74c8	                            je 0x400397b	      1742	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039b3	        0x488d0480	                  lea rax, [rax + rax*4]	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039b7	    0x488b34c50000	                  mov rsi, qword [rax*8]	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039bf	          0x4885f6	                           test rsi, rsi	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039c2	            0x74b7	                            je 0x400397b	      1743	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039c4	      0xe800000000	                          call 0x40039c9	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40039c9	            0x85c0	                           test eax, eax	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40039cb	          0x4589fc	                          mov r12d, r15d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039ce	            0x75ae	                           jne 0x400397e	      1744	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x40039d0	        0x4183c501	                             add r13d, 1	      1745	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x40039d4	          0x4589fc	                          mov r12d, r15d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039d7	            0xeba5	                           jmp 0x400397e	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039d9	     0xf1f80000000	                         nop dword [rax]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039e0	          0x4963c4	                        movsxd rax, r12d	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039e3	        0x4183c401	                             add r12d, 1	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039e7	        0x488d0480	                  lea rax, [rax + rax*4]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039eb	    0x4c8d34c50000	                        lea r14, [rax*8]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039f3	            0xeb89	                           jmp 0x400397e	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039f5	           0xf1f00	                         nop dword [rax]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x40039f8	      0xba05000000	                              mov edx, 5	      1752	mark.c	FUNCTION_38	CALL_14
0x40039fd	      0xbe00000000	                              mov esi, 0	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a02	            0x31ff	                            xor edi, edi	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a04	      0xe800000000	                          call 0x4003a09	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a09	          0x4889ee	                            mov rsi, rbp	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a0c	          0x4889c7	                            mov rdi, rax	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a0f	    0x41bc64000000	                          mov r12d, 0x64	      1756	mark.c	FUNCTION_38
0x4003a15	      0xe800000000	                          call 0x4003a1a	      1752	mark.c	FUNCTION_38	CALL_14
0x4003a1a	      0xe800000000	                          call 0x4003a1f	      1753	mark.c	FUNCTION_38	CALL_15
0x4003a1f	    0x488b3d000000	            mov rdi, qword [0x04003a26] 	      1754	mark.c	FUNCTION_38	CALL_16
0x4003a26	            0x31f6	                            xor esi, esi	      1754	mark.c	FUNCTION_38	CALL_16
0x4003a28	          0x4531f6	                          xor r14d, r14d	      1755	mark.c	FUNCTION_38
0x4003a2b	      0xe800000000	                          call 0x4003a30	      1754	mark.c	FUNCTION_38	CALL_16
0x4003a30	    0x488b05000000	            mov rax, qword [0x04003a37] 	      1756	mark.c	FUNCTION_38
0x4003a37	    0x448ba8401500	         mov r13d, dword [rax + 0x1540] 	      1756	mark.c	FUNCTION_38
0x4003a3e	        0x4183ed01	                             sub r13d, 1	      1756	mark.c	FUNCTION_38
0x4003a42	            0xeb23	                           jmp 0x4003a67	      1756	mark.c	FUNCTION_38
0x4003a44	         0xf1f4000	                         nop dword [rax]	      1756	mark.c	FUNCTION_38
0x4003a48	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003a4b	        0x4183c601	                             add r14d, 1	      1768	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003a4f	            0x85ff	                           test edi, edi	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003a51	            0x756e	                           jne 0x4003ac1	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003a53	        0x48833b00	                      cmp qword [rbx], 0	      1789	mark.c	FUNCTION_39	IF_1
0x4003a57	     0xf8583000000	                           jne 0x4003ae0	      1789	mark.c	FUNCTION_39	IF_1
0x4003a5d	        0x4183ec01	                             sub r12d, 1	      1757	mark.c	FUNCTION_38	FOR_5
0x4003a61	     0xf84b8fdffff	                            je 0x400381f	      1757	mark.c	FUNCTION_38	FOR_5
0x4003a67	          0x4585ed	                         test r13d, r13d	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a6a	     0xf8890000000	                            js 0x4003b00	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a70	          0x4963c5	                        movsxd rax, r13d	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a73	        0x488d1480	                  lea rdx, [rax + rax*4]	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a77	    0x488b05000000	            mov rax, qword [0x04003a7e] 	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a7e	    0x488d84d0a005	         lea rax, [rax + rdx*8 + 0x5a0] 	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a86	          0x4885c0	                           test rax, rax	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a89	           0xf94c1	                                 sete cl	      1761	mark.c	FUNCTION_38	FOR_5
0x4003a8c	            0x31db	                            xor ebx, ebx	      1762	mark.c	FUNCTION_38	FOR_5
0x4003a8e	    0x443935000000	           cmp dword [0x04003a95], r14d 	      1762	mark.c	FUNCTION_38	FOR_5
0x4003a95	            0x7f7d	                            jg 0x4003b14	      1762	mark.c	FUNCTION_38	FOR_5
0x4003a97	            0x84c9	                             test cl, cl	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003a99	     0xf8580fdffff	                           jne 0x400381f	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003a9f	          0x4885c0	                           test rax, rax	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003aa2	            0x74a4	                            je 0x4003a48	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003aa4	          0x4885db	                           test rbx, rbx	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003aa7	            0x740a	                            je 0x4003ab3	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003aa9	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003aad	        0x48394820	            cmp qword [rax + 0x20], rcx 	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003ab1	            0x7c95	                            jl 0x4003a48	      1765	mark.c	FUNCTION_38	FOR_5	IF_8
0x4003ab3	          0x4889c3	                            mov rbx, rax	      1771	mark.c	FUNCTION_38	FOR_5	ELSE_3
0x4003ab6	        0x4183ed01	                             sub r13d, 1	      1771	mark.c	FUNCTION_38	FOR_5	ELSE_3
0x4003aba	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003abd	            0x85ff	                           test edi, edi	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003abf	            0x7492	                            je 0x4003a53	      1772	mark.c	FUNCTION_38	FOR_5	IF_9
0x4003ac1	      0xe800000000	                          call 0x4003ac6	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x4003ac6	          0x4885c0	                           test rax, rax	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x4003ac9	            0x7492	                            je 0x4003a5d	      1773	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x4003acb	          0x4889c7	                            mov rdi, rax	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x4003ace	      0xe8fdfcffff	               call sym.skip_for_viminfo	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x4003ad3	            0x85c0	                           test eax, eax	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x4003ad5	            0x7586	                           jne 0x4003a5d	      1774	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x4003ad7	        0x48833b00	                      cmp qword [rbx], 0	      1789	mark.c	FUNCTION_39	IF_1
0x4003adb	            0x7480	                            je 0x4003a5d	      1789	mark.c	FUNCTION_39	IF_1
0x4003add	           0xf1f00	                         nop dword [rax]	      1789	mark.c	FUNCTION_39	IF_1
0x4003ae0	      0xb927000000	                           mov ecx, 0x27	      1789	mark.c	FUNCTION_39	IF_1
0x4003ae5	      0xba2d000000	                           mov edx, 0x2d	      1789	mark.c	FUNCTION_39	IF_1
0x4003aea	          0x4889de	                            mov rsi, rbx	      1789	mark.c	FUNCTION_39	IF_1
0x4003aed	          0x4889ef	                            mov rdi, rbp	      1789	mark.c	FUNCTION_39	IF_1
0x4003af0	      0xe81bd4ffff	      call sym.write_one_filemark.part.4	      1789	mark.c	FUNCTION_39	IF_1
0x4003af5	      0xe963ffffff	                           jmp 0x4003a5d	      1789	mark.c	FUNCTION_39	IF_1
0x4003afa	    0x660f1f440000	                    nop word [rax + rax]	      1789	mark.c	FUNCTION_39	IF_1
0x4003b00	    0x443b35000000	           cmp r14d, dword [0x04003b07] 	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b07	     0xf8d12fdffff	                           jge 0x400381f	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b0d	      0xb901000000	                              mov ecx, 1	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b12	            0x31c0	                            xor eax, eax	      1761	mark.c	FUNCTION_38	FOR_5
0x4003b14	          0x4963d6	                        movsxd rdx, r14d	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b17	        0x488d3492	                  lea rsi, [rdx + rdx*4]	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b1b	    0x488b15000000	            mov rdx, qword [0x04003b22] 	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b22	        0x488d1cf2	                  lea rbx, [rdx + rsi*8]	      1762	mark.c	FUNCTION_38	FOR_5
0x4003b26	          0x4885db	                           test rbx, rbx	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003b29	     0xf8570ffffff	                           jne 0x4003a9f	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003b2f	      0xe963ffffff	                           jmp 0x4003a97	      1763	mark.c	FUNCTION_38	FOR_5	IF_7
0x4003b34	    0x488b05000000	            mov rax, qword [0x04003b3b] 	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b3b	            0x31d2	                            xor edx, edx	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b3d	      0xbe01000000	                              mov esi, 1	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b42	      0xbb1a000000	                           mov ebx, 0x1a	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003b47	    0x8bb8b8000000	            mov edi, dword [rax + 0xb8] 	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b4d	      0xe800000000	                          call 0x4003b52	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b52	          0x4989c7	                            mov r15, rax	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b55	    0x488b05000000	            mov rax, qword [0x04003b5c] 	      1700	mark.c	FUNCTION_38	IF_3	CALL_6
0x4003b5c	    0x4c8b35000000	            mov r14, qword [0x04003b63] 	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b63	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b67	            0xeb17	                           jmp 0x4003b80	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b69	     0xf1f80000000	                         nop dword [rax]	      1704	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b70	          0x83c301	                              add ebx, 1	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003b73	        0x4983c528	                           add r13, 0x28	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003b77	          0x83fb23	                           cmp ebx, 0x23	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003b7a	     0xf8410010000	                            je 0x4003c90	      1701	mark.c	FUNCTION_38	IF_3	FOR_2
0x4003b80	        0x4d396500	                    cmp qword [r13], r12	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b84	            0x75ea	                           jne 0x4003b70	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b86	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b8a	          0x4885f6	                           test rsi, rsi	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b8d	     0xf84e0000000	                            je 0x4003c73	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003b93	          0x4d85ff	                           test r15, r15	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003b96	            0x74d8	                            je 0x4003b70	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003b98	          0x4c89ff	                            mov rdi, r15	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003b9b	      0xe800000000	                          call 0x4003ba0	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003ba0	            0x85c0	                           test eax, eax	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003ba2	            0x75cc	                           jne 0x4003b70	      1706	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4003ba4	          0x4c89ff	                            mov rdi, r15	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003ba7	          0x4c63e3	                         movsxd r12, ebx	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003baa	      0xe800000000	                          call 0x4003baf	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003baf	        0x4b8d14a4	                  lea rdx, [r12 + r12*4]	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003bb3	    0x488b3cd50000	                  mov rdi, qword [rdx*8]	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003bbb	      0xe800000000	                          call 0x4003bc0	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003bc0	          0x83fb1a	                           cmp ebx, 0x1a	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003bc3	            0x7556	                           jne 0x4003c1b	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003bc5	    0x488b05000000	            mov rax, qword [0x04003bcc] 	      1713	mark.c	FUNCTION_38	IF_3
0x4003bcc	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1713	mark.c	FUNCTION_38	IF_3
0x4003bd0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1713	mark.c	FUNCTION_38	IF_3
0x4003bd4	    0x488905000000	            mov qword [0x04003bdb], rax 	      1713	mark.c	FUNCTION_38	IF_3
0x4003bdb	    0x488b05000000	            mov rax, qword [0x04003be2] 	      1714	mark.c	FUNCTION_38	IF_3
0x4003be2	    0x488915000000	            mov qword [0x04003be9], rdx 	      1713	mark.c	FUNCTION_38	IF_3
0x4003be9	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1714	mark.c	FUNCTION_38	IF_3
0x4003bef	    0x48c705000000	               mov qword [0x04003bfa], 0	      1715	mark.c	FUNCTION_38	IF_3
0x4003bfa	    0x890500000000	            mov dword [0x04003c00], eax 	      1714	mark.c	FUNCTION_38	IF_3
0x4003c00	      0xe800000000	                          call 0x4003c05	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x4003c05	    0x488905000000	            mov qword [0x04003c0c], rax 	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x4003c0c	      0xe9c8fcffff	                           jmp 0x40038d9	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x4003c11	     0xf1f80000000	                         nop dword [rax]	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x4003c18	          0x4989c4	                            mov r12, rax	      1716	mark.c	FUNCTION_38	IF_3	CALL_10
0x4003c1b	          0x83eb01	                              sub ebx, 1	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c1e	        0x4b8d34a4	                  lea rsi, [r12 + r12*4]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c22	          0x4863c3	                         movsxd rax, ebx	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c25	          0x83fb1a	                           cmp ebx, 0x1a	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c28	        0x488d3c80	                  lea rdi, [rax + rax*4]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c2c	    0x488d14f50000	                        lea rdx, [rsi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c34	    0x488d0cfd0000	                        lea rcx, [rdi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c3c	    0x488b3cfd0000	                  mov rdi, qword [rdi*8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c44	    0x48893cf50000	                  mov qword [rsi*8], rdi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c4c	        0x488b7108	                mov rsi, qword [rcx + 8]	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c50	        0x48897208	                mov qword [rdx + 8], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c54	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c58	        0x48897210	             mov qword [rdx + 0x10], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c5c	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c60	        0x48897218	             mov qword [rdx + 0x18], rsi	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c64	        0x488b4920	            mov rcx, qword [rcx + 0x20] 	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c68	        0x48894a20	             mov qword [rdx + 0x20], rcx	      1712	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c6c	            0x75aa	                           jne 0x4003c18	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c6e	      0xe952ffffff	                           jmp 0x4003bc5	      1711	mark.c	FUNCTION_38	IF_3	FOR_3
0x4003c73	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003c7a	        0x41394510	            cmp dword [r13 + 0x10], eax 	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003c7e	     0xf85ecfeffff	                           jne 0x4003b70	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003c84	      0xe91bffffff	                           jmp 0x4003ba4	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003c89	     0xf1f80000000	                         nop dword [rax]	      1703	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4003c90	          0x4c89ff	                            mov rdi, r15	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003c93	    0x41bc23000000	                          mov r12d, 0x23	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003c99	      0xe800000000	                          call 0x4003c9e	      1708	mark.c	FUNCTION_38	IF_3	CALL_8
0x4003c9e	    0x488b3d000000	            mov rdi, qword [0x04003ca5] 	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003ca5	      0xe800000000	                          call 0x4003caa	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
0x4003caa	      0xe96cffffff	                           jmp 0x4003c1b	      1710	mark.c	FUNCTION_38	IF_3	CALL_9
ex_jumps	WHILE,0:DO,0:CALL,14:IF,4:ELSE,0:functions,0:FOR,1:SWITCH,0	119
0x4002cc0	            0x4157	                                push r15	       890	mark.c	FUNCTION_21
0x4002cc2	            0x4156	                                push r14	       890	mark.c	FUNCTION_21
0x4002cc4	      0xbe01000000	                              mov esi, 1	       894	mark.c	FUNCTION_21	CALL_1
0x4002cc9	            0x4155	                                push r13	       890	mark.c	FUNCTION_21
0x4002ccb	            0x4154	                                push r12	       890	mark.c	FUNCTION_21
0x4002ccd	              0x55	                                push rbp	       890	mark.c	FUNCTION_21
0x4002cce	              0x53	                                push rbx	       890	mark.c	FUNCTION_21
0x4002ccf	        0x4883ec08	                              sub rsp, 8	       890	mark.c	FUNCTION_21
0x4002cd3	    0x488b3d000000	            mov rdi, qword [0x04002cda] 	       894	mark.c	FUNCTION_21	CALL_1
0x4002cda	      0xe800000000	                          call 0x4002cdf	       894	mark.c	FUNCTION_21	CALL_1
0x4002cdf	      0xba05000000	                              mov edx, 5	       897	mark.c	FUNCTION_21	CALL_3
0x4002ce4	            0x31ff	                            xor edi, edi	       897	mark.c	FUNCTION_21	CALL_3
0x4002ce6	      0xbe00000000	                              mov esi, 0	       897	mark.c	FUNCTION_21	CALL_3
0x4002ceb	      0xe800000000	                          call 0x4002cf0	       897	mark.c	FUNCTION_21	CALL_3
0x4002cf0	          0x4889c7	                            mov rdi, rax	       897	mark.c	FUNCTION_21	CALL_3
0x4002cf3	      0xe800000000	                          call 0x4002cf8	       897	mark.c	FUNCTION_21	CALL_3
0x4002cf8	    0x488b05000000	            mov rax, qword [0x04002cff] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002cff	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002d05	            0x85d2	                           test edx, edx	       898	mark.c	FUNCTION_21	FOR_1
0x4002d07	     0xf8e6b010000	                           jle 0x4002e78	       898	mark.c	FUNCTION_21	FOR_1
0x4002d0d	    0x8b0d00000000	            mov ecx, dword [0x04002d13] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002d13	            0x85c9	                           test ecx, ecx	       898	mark.c	FUNCTION_21	FOR_1
0x4002d15	     0xf855d010000	                           jne 0x4002e78	       898	mark.c	FUNCTION_21	FOR_1
0x4002d1b	            0x31ed	                            xor ebp, ebp	       898	mark.c	FUNCTION_21	FOR_1
0x4002d1d	    0x41bc20000000	                          mov r12d, 0x20	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d23	      0xe9b1000000	                           jmp 0x4002dd9	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d28	     0xf1f84000000	                   nop dword [rax + rax]	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d30	          0x4189e9	                            mov r9d, ebp	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d33	    0x41b820000000	                           mov r8d, 0x20	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d39	          0x4129c1	                            sub r9d, eax	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002d3c	    0x488b3d000000	            mov rdi, qword [0x04002d43] 	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d43	              0x51	                                push rcx	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d44	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d49	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d4a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d4f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d56	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d58	      0xe800000000	                          call 0x4002d5d	        33	stdio2.h	FUNCTION_46	CALL_2
0x4002d5d	    0x488b3d000000	            mov rdi, qword [0x04002d64] 	       918	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x4002d64	      0xe800000000	                          call 0x4002d69	       918	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x4002d69	    0x488b15000000	            mov rdx, qword [0x04002d70] 	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002d70	      0x4b8d44ad00	                  lea rax, [r13 + r13*4]	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002d75	          0x4c89f7	                            mov rdi, r14	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d78	              0x59	                                 pop rcx	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d79	              0x5e	                                 pop rsi	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d7a	        0x488d04c2	                  lea rax, [rdx + rax*8]	       920	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002d7e	    0x488b15000000	            mov rdx, qword [0x04002d85] 	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d85	    0x8bb2b8000000	            mov esi, dword [rdx + 0xb8] 	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d8b	    0x39b0b0050000	           cmp dword [rax + 0x5b0], esi 	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d91	    0x440f443d0000	          cmove r15d, dword [0x04002d99]	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d99	          0x4489fe	                           mov esi, r15d	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002d9c	      0xe800000000	                          call 0x4002da1	       919	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x4002da1	          0x4c89f7	                            mov rdi, r14	       922	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_11
0x4002da4	      0xe800000000	                          call 0x4002da9	       922	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_11
0x4002da9	      0xe800000000	                          call 0x4002dae	       923	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_12
0x4002dae	      0xe800000000	                          call 0x4002db3	       925	mark.c	FUNCTION_21	FOR_1	CALL_13
0x4002db3	    0x488b05000000	            mov rax, qword [0x04002dba] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002dba	          0x83c501	                              add ebp, 1	       898	mark.c	FUNCTION_21	FOR_1
0x4002dbd	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002dc3	            0x39ea	                            cmp edx, ebp	       898	mark.c	FUNCTION_21	FOR_1
0x4002dc5	     0xf8ead000000	                           jle 0x4002e78	       898	mark.c	FUNCTION_21	FOR_1
0x4002dcb	    0x8b0d00000000	            mov ecx, dword [0x04002dd1] 	       898	mark.c	FUNCTION_21	FOR_1
0x4002dd1	            0x85c9	                           test ecx, ecx	       898	mark.c	FUNCTION_21	FOR_1
0x4002dd3	     0xf859f000000	                           jne 0x4002e78	       898	mark.c	FUNCTION_21	FOR_1
0x4002dd9	          0x4c63ed	                         movsxd r13, ebp	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002ddc	      0x4b8d5cad00	                  lea rbx, [r13 + r13*4]	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002de1	        0x48c1e303	                              shl rbx, 3	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002de5	    0x4883bc18a005	        cmp qword [rax + rbx + 0x5a0], 0	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002dee	            0x74be	                            je 0x4002dae	       900	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002df0	    0x488dbc18a005	           lea rdi, [rax + rbx + 0x5a0] 	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002df8	      0xbe10000000	                           mov esi, 0x10	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002dfd	      0xe800000000	                          call 0x4002e02	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002e02	          0x4885c0	                           test rax, rax	       903	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x4002e05	          0x4989c6	                            mov r14, rax	       902	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x4002e08	            0x74a9	                            je 0x4002db3	       903	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x4002e0a	      0xbf0a000000	                            mov edi, 0xa	       906	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x4002e0f	      0xe800000000	                          call 0x4002e14	       906	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x4002e14	    0x448b3d000000	           mov r15d, dword [0x04002e1b] 	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x4002e1b	          0x4585ff	                         test r15d, r15d	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x4002e1e	            0x7540	                           jne 0x4002e60	       907	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x4002e20	    0x488b05000000	            mov rax, qword [0x04002e27] 	       917	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002e27	          0x4801c3	                            add rbx, rax	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e2a	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       914	mark.c	FUNCTION_21	FOR_1	IF_1
0x4002e30	    0x8b8ba8050000	           mov ecx, dword [rbx + 0x5a8] 	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e36	    0x488b93a00500	           mov rdx, qword [rbx + 0x5a0] 	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e3d	            0x39e8	                            cmp eax, ebp	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e3f	     0xf8cebfeffff	                            jl 0x4002d30	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e45	          0x4189c1	                            mov r9d, eax	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e48	    0x41b83e000000	                           mov r8d, 0x3e	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e4e	          0x4129e9	                            sub r9d, ebp	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e51	            0x39e8	                            cmp eax, ebp	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e53	        0x450f45c4	                        cmovne r8d, r12d	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e57	      0xe9e0feffff	                           jmp 0x4002d3c	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e5c	         0xf1f4000	                         nop dword [rax]	       912	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_7
0x4002e60	          0x4c89f7	                            mov rdi, r14	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x4002e63	      0xe800000000	                          call 0x4002e68	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x4002e68	    0x488b05000000	            mov rax, qword [0x04002e6f] 	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x4002e6f	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x4002e75	           0xf1f00	                         nop dword [rax]	       909	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3	CALL_6
0x4002e78	    0x399044150000	          cmp dword [rax + 0x1544], edx 	       927	mark.c	FUNCTION_21	IF_4
0x4002e7e	            0x7410	                            je 0x4002e90	       927	mark.c	FUNCTION_21	IF_4
0x4002e80	        0x4883c408	                              add rsp, 8	       929	mark.c	FUNCTION_21
0x4002e84	              0x5b	                                 pop rbx	       929	mark.c	FUNCTION_21
0x4002e85	              0x5d	                                 pop rbp	       929	mark.c	FUNCTION_21
0x4002e86	            0x415c	                                 pop r12	       929	mark.c	FUNCTION_21
0x4002e88	            0x415d	                                 pop r13	       929	mark.c	FUNCTION_21
0x4002e8a	            0x415e	                                 pop r14	       929	mark.c	FUNCTION_21
0x4002e8c	            0x415f	                                 pop r15	       929	mark.c	FUNCTION_21
0x4002e8e	              0xc3	                                     ret	       929	mark.c	FUNCTION_21
0x4002e8f	              0x90	                                     nop	       929	mark.c	FUNCTION_21
0x4002e90	        0x4883c408	                              add rsp, 8	       929	mark.c	FUNCTION_21
0x4002e94	      0xbf00000000	                              mov edi, 0	       928	mark.c	FUNCTION_21	CALL_14
0x4002e99	              0x5b	                                 pop rbx	       929	mark.c	FUNCTION_21
0x4002e9a	              0x5d	                                 pop rbp	       929	mark.c	FUNCTION_21
0x4002e9b	            0x415c	                                 pop r12	       929	mark.c	FUNCTION_21
0x4002e9d	            0x415d	                                 pop r13	       929	mark.c	FUNCTION_21
0x4002e9f	            0x415e	                                 pop r14	       929	mark.c	FUNCTION_21
0x4002ea1	            0x415f	                                 pop r15	       929	mark.c	FUNCTION_21
0x4002ea3	      0xe900000000	                           jmp 0x4002ea8	       928	mark.c	FUNCTION_21	CALL_14
getnextmark	WHILE,0:DO,0:CALL,4:IF,6:ELSE,2:functions,0:FOR,1:SWITCH,0	79
0x40014b0	            0x85d2	                           test edx, edx	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014b2	          0x4c8b07	                     mov r8, qword [rdi]	       480	mark.c	ELSE_16	FUNCTION_10
0x40014b5	        0x448b4f08	                mov r9d, dword [rdi + 8]	       480	mark.c	ELSE_16	FUNCTION_10
0x40014b9	           0xf95c0	                                setne al	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014bc	          0x83feff	             cmp esi, 0xffffffffffffffff	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014bf	        0x448b570c	            mov r10d, dword [rdi + 0xc] 	       480	mark.c	ELSE_16	FUNCTION_10
0x40014c3	     0xf85d7000000	                           jne 0x40015a0	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014c9	            0x84c0	                             test al, al	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014cb	     0xf84cf000000	                            je 0x40015a0	       486	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014d1	          0x4531c9	                            xor r9d, r9d	       487	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014d4	    0x488b3d000000	            mov rdi, qword [0x040014db] 	       487	mark.c	ELSE_16	FUNCTION_10	IF_1
0x40014db	            0x31c0	                            xor eax, eax	       477	mark.c	ELSE_16	FUNCTION_10
0x40014dd	    0x488d97580100	                  lea rdx, [rdi + 0x158]	       477	mark.c	ELSE_16	FUNCTION_10
0x40014e4	    0x4881c7f80200	                          add rdi, 0x2f8	       477	mark.c	ELSE_16	FUNCTION_10
0x40014eb	            0xeb26	                           jmp 0x4001513	       477	mark.c	ELSE_16	FUNCTION_10
0x40014ed	           0xf1f00	                         nop dword [rax]	       477	mark.c	ELSE_16	FUNCTION_10
0x40014f0	          0x4885c0	                           test rax, rax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40014f3	            0x7407	                            je 0x40014fc	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40014f5	          0x483b08	                    cmp rcx, qword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40014f8	            0x745e	                            je 0x4001558	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40014fa	            0x7e0e	                           jle 0x400150a	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x40014fc	          0x4939c8	                             cmp r8, rcx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x40014ff	            0x7468	                            je 0x4001569	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001501	           0xf9fc1	                                 setg cl	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001504	            0x84c9	                             test cl, cl	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001506	        0x480f45c2	                         cmovne rax, rdx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x400150a	        0x4883c210	                           add rdx, 0x10	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x400150e	          0x4839fa	                            cmp rdx, rdi	       491	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x4001511	            0x7475	                            je 0x4001588	       491	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x4001513	          0x488b0a	                    mov rcx, qword [rdx]	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001516	          0x4885c9	                           test rcx, rcx	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x4001519	            0x7eef	                           jle 0x400150a	       493	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x400151b	          0x83fe01	                              cmp esi, 1	       495	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x400151e	            0x75d0	                           jne 0x40014f0	       495	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x4001520	          0x4885c0	                           test rax, rax	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001523	            0x7407	                            je 0x400152c	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001525	          0x483b08	                    cmp rcx, qword [rax]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001528	            0x7416	                            je 0x4001540	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400152a	            0x7dde	                           jge 0x400150a	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400152c	          0x4939c8	                             cmp r8, rcx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400152f	            0x745f	                            je 0x4001590	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001531	           0xf9cc1	                                 setl cl	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001534	            0xebce	                           jmp 0x4001504	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001540	        0x448b5808	               mov r11d, dword [rax + 8]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001544	        0x44395a08	               cmp dword [rdx + 8], r11d	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001548	            0x75e0	                           jne 0x400152a	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400154a	        0x448b580c	            mov r11d, dword [rax + 0xc] 	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x400154e	        0x44395a0c	            cmp dword [rdx + 0xc], r11d 	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001552	            0xebd6	                           jmp 0x400152a	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001554	         0xf1f4000	                         nop dword [rax]	       497	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x4001558	        0x448b5a08	               mov r11d, dword [rdx + 8]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x400155c	        0x44395808	               cmp dword [rax + 8], r11d	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001560	            0x7416	                            je 0x4001578	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001562	            0x7da6	                           jge 0x400150a	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001564	          0x4939c8	                             cmp r8, rcx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001567	            0x7598	                           jne 0x4001501	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001569	        0x44394a08	                cmp dword [rdx + 8], r9d	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x400156d	            0x75c2	                           jne 0x4001531	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x400156f	        0x443b520c	            cmp r10d, dword [rdx + 0xc] 	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001573	            0xeb8c	                           jmp 0x4001501	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001575	           0xf1f00	                         nop dword [rax]	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x4001578	        0x448b5a0c	            mov r11d, dword [rdx + 0xc] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x400157c	        0x4439580c	            cmp dword [rax + 0xc], r11d 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001580	            0x7d88	                           jge 0x400150a	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001582	            0xebe0	                           jmp 0x4001564	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001584	         0xf1f4000	                         nop dword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x4001588	            0xf3c3	                                     ret	       511	mark.c	ELSE_16	FUNCTION_10
0x400158a	    0x660f1f440000	                    nop word [rax + rax]	       511	mark.c	ELSE_16	FUNCTION_10
0x4001590	        0x44394a08	                cmp dword [rdx + 8], r9d	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x4001594	     0xf8567ffffff	                           jne 0x4001501	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400159a	        0x443b520c	            cmp r10d, dword [rdx + 0xc] 	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x400159e	            0xeb91	                           jmp 0x4001531	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x40015a0	          0x83fe01	                              cmp esi, 1	       488	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40015a3	     0xf852bffffff	                           jne 0x40014d4	       488	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40015a9	            0x84c0	                             test al, al	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40015ab	      0xb8ffffff7f	                     mov eax, 0x7fffffff	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40015b0	        0x440f45c8	                         cmovne r9d, eax	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x40015b4	      0xe91bffffff	                           jmp 0x40014d4	       489	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
mark_col_adjust	WHILE,0:DO,0:CALL,11:IF,3:ELSE,0:functions,1:FOR,3:SWITCH,0	344
0x4002430	          0x4889c8	                            mov rax, rcx	      1233	mark.c	FUNCTION_27	IF_1
0x4002433	          0x4809d0	                             or rax, rdx	      1233	mark.c	FUNCTION_27	IF_1
0x4002436	     0xf8459020000	                            je 0x4002695	      1233	mark.c	FUNCTION_27	IF_1
0x400243c	    0x8b0500000000	            mov eax, dword [0x04002442] 	      1233	mark.c	FUNCTION_27	IF_1
0x4002442	            0x85c0	                           test eax, eax	      1233	mark.c	FUNCTION_27	IF_1
0x4002444	     0xf854b020000	                           jne 0x4002695	      1233	mark.c	FUNCTION_27	IF_1
0x400244a	    0x4c8b1d000000	            mov r11, qword [0x04002451] 	      1229	mark.c	FUNCTION_27
0x4002451	            0x4155	                                push r13	      1227	mark.c	FUNCTION_27
0x4002453	          0x4189cd	                           mov r13d, ecx	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002456	            0x4154	                                push r12	      1227	mark.c	FUNCTION_27
0x4002458	          0x4189ca	                           mov r10d, ecx	      1227	mark.c	FUNCTION_27
0x400245b	              0x55	                                push rbp	      1227	mark.c	FUNCTION_27
0x400245c	      0xb800000000	                              mov eax, 0	      1227	mark.c	FUNCTION_27
0x4002461	              0x53	                                push rbx	      1227	mark.c	FUNCTION_27
0x4002462	        0x4c8d243a	                    lea r12, [rdx + rdi]	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002466	    0x458b83b80000	            mov r8d, dword [r11 + 0xb8] 	      1229	mark.c	FUNCTION_27
0x400246d	    0x4d8d8b600100	                   lea r9, [r11 + 0x160]	      1229	mark.c	FUNCTION_27
0x4002474	      0xbb00000000	                              mov ebx, 0	      1229	mark.c	FUNCTION_27
0x4002479	          0x41f7dd	                                neg r13d	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400247c	            0xeb15	                           jmp 0x4002493	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400247e	            0x6690	                                     nop	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002480	        0x443b4008	                cmp r8d, dword [rax + 8]	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x4002484	            0x7433	                            je 0x40024b9	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x4002486	        0x4883c028	                           add rax, 0x28	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x400248a	        0x4983c110	                            add r9, 0x10	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x400248e	          0x4839c3	                            cmp rbx, rax	      1237	mark.c	FUNCTION_27	FOR_1
0x4002491	            0x7452	                            je 0x40024e5	      1237	mark.c	FUNCTION_27	FOR_1
0x4002493	        0x493979f8	                 cmp qword [r9 - 8], rdi	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002497	            0x75e7	                           jne 0x4002480	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x4002499	          0x418b29	                     mov ebp, dword [r9]	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400249c	            0x39f5	                            cmp ebp, esi	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400249e	            0x7ce0	                            jl 0x4002480	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024a0	          0x4885c9	                           test rcx, rcx	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024a3	        0x4d8961f8	                 mov qword [r9 - 8], r12	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024a7	     0xf88ea010000	                            js 0x4002697	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024ad	          0x4401d5	                           add ebp, r10d	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024b0	          0x418929	                     mov dword [r9], ebp	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40024b3	        0x443b4008	                cmp r8d, dword [rax + 8]	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x40024b7	            0x75cd	                           jne 0x4002486	      1240	mark.c	FUNCTION_27	FOR_1	IF_2
0x40024b9	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024bd	            0x75c7	                           jne 0x4002486	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024bf	            0x8b28	                    mov ebp, dword [rax]	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024c1	            0x39ee	                            cmp esi, ebp	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024c3	            0x7fc1	                            jg 0x4002486	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024c5	          0x4885c9	                           test rcx, rcx	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024c8	        0x4c8960f8	                mov qword [rax - 8], r12	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024cc	     0xf88f6030000	                            js 0x40028c8	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024d2	          0x4401d5	                           add ebp, r10d	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024d5	        0x4883c028	                           add rax, 0x28	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024d9	        0x4983c110	                            add r9, 0x10	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024dd	          0x8968d8	             mov dword [rax - 0x28], ebp	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40024e0	          0x4839c3	                            cmp rbx, rax	      1237	mark.c	FUNCTION_27	FOR_1
0x40024e3	            0x75ae	                           jne 0x4002493	      1237	mark.c	FUNCTION_27	FOR_1
0x40024e5	          0x4589d1	                           mov r9d, r10d	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40024e8	        0x488d2c3a	                    lea rbp, [rdx + rdi]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40024ec	          0x41f7d9	                                 neg r9d	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40024ef	            0xeb0d	                           jmp 0x40024fe	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40024f1	        0x4883c328	                           add rbx, 0x28	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40024f5	    0x4881fb000000	                              cmp rbx, 0	      1243	mark.c	FUNCTION_27	FOR_2
0x40024fc	            0x7432	                            je 0x4002530	      1243	mark.c	FUNCTION_27	FOR_2
0x40024fe	        0x443b4308	                cmp r8d, dword [rbx + 8]	      1245	mark.c	FUNCTION_27	FOR_2	IF_3
0x4002502	            0x75ed	                           jne 0x40024f1	      1245	mark.c	FUNCTION_27	FOR_2	IF_3
0x4002504	        0x483b7bf8	                cmp rdi, qword [rbx - 8]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002508	            0x75e7	                           jne 0x40024f1	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400250a	            0x8b03	                    mov eax, dword [rbx]	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400250c	            0x39c6	                            cmp esi, eax	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400250e	            0x7fe1	                            jg 0x40024f1	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002510	          0x4885c9	                           test rcx, rcx	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002513	        0x48896bf8	                mov qword [rbx - 8], rbp	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002517	     0xf88bf030000	                            js 0x40028dc	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x400251d	          0x4401d0	                           add eax, r10d	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002520	        0x4883c328	                           add rbx, 0x28	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002524	          0x8943d8	             mov dword [rbx - 0x28], eax	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x4002527	    0x4881fb000000	                              cmp rbx, 0	      1243	mark.c	FUNCTION_27	FOR_2
0x400252e	            0x75ce	                           jne 0x40024fe	      1243	mark.c	FUNCTION_27	FOR_2
0x4002530	    0x493bbb380300	           cmp rdi, qword [r11 + 0x338] 	      1250	mark.c	FUNCTION_27	CALL_4
0x4002537	     0xf845e030000	                            je 0x400289b	      1250	mark.c	FUNCTION_27	CALL_4
0x400253d	    0x493bbb480300	           cmp rdi, qword [r11 + 0x348] 	      1253	mark.c	FUNCTION_27	CALL_5
0x4002544	     0xf8420030000	                            je 0x400286a	      1253	mark.c	FUNCTION_27	CALL_5
0x400254a	    0x458b8b980900	           mov r9d, dword [r11 + 0x998] 	      1257	mark.c	FUNCTION_27	FOR_3
0x4002551	          0x4585c9	                           test r9d, r9d	      1257	mark.c	FUNCTION_27	FOR_3
0x4002554	            0x7e5b	                           jle 0x40025b1	      1257	mark.c	FUNCTION_27	FOR_3
0x4002556	        0x4183e901	                              sub r9d, 1	      1257	mark.c	FUNCTION_27	FOR_3
0x400255a	          0x4589d4	                          mov r12d, r10d	      1258	mark.c	FUNCTION_27	CALL_6
0x400255d	    0x498d83600300	                  lea rax, [r11 + 0x360]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002564	        0x4983c137	                            add r9, 0x37	      1258	mark.c	FUNCTION_27	CALL_6
0x4002568	        0x488d2c3a	                    lea rbp, [rdx + rdi]	      1258	mark.c	FUNCTION_27	CALL_6
0x400256c	          0x41f7dc	                                neg r12d	      1258	mark.c	FUNCTION_27	CALL_6
0x400256f	        0x49c1e104	                               shl r9, 4	      1258	mark.c	FUNCTION_27	CALL_6
0x4002573	          0x4d01d9	                             add r9, r11	      1258	mark.c	FUNCTION_27	CALL_6
0x4002576	            0xeb11	                           jmp 0x4002589	      1258	mark.c	FUNCTION_27	CALL_6
0x4002578	     0xf1f84000000	                   nop dword [rax + rax]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002580	        0x4883c010	                           add rax, 0x10	      1258	mark.c	FUNCTION_27	CALL_6
0x4002584	          0x4c39c8	                             cmp rax, r9	      1257	mark.c	FUNCTION_27	FOR_3
0x4002587	            0x7428	                            je 0x40025b1	      1257	mark.c	FUNCTION_27	FOR_3
0x4002589	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1258	mark.c	FUNCTION_27	CALL_6
0x400258d	            0x75f1	                           jne 0x4002580	      1258	mark.c	FUNCTION_27	CALL_6
0x400258f	            0x8b18	                    mov ebx, dword [rax]	      1258	mark.c	FUNCTION_27	CALL_6
0x4002591	            0x39de	                            cmp esi, ebx	      1258	mark.c	FUNCTION_27	CALL_6
0x4002593	            0x7feb	                            jg 0x4002580	      1258	mark.c	FUNCTION_27	CALL_6
0x4002595	          0x4885c9	                           test rcx, rcx	      1258	mark.c	FUNCTION_27	CALL_6
0x4002598	        0x488968f8	                mov qword [rax - 8], rbp	      1258	mark.c	FUNCTION_27	CALL_6
0x400259c	     0xf880a010000	                            js 0x40026ac	      1258	mark.c	FUNCTION_27	CALL_6
0x40025a2	          0x4401d3	                           add ebx, r10d	      1258	mark.c	FUNCTION_27	CALL_6
0x40025a5	        0x4883c010	                           add rax, 0x10	      1258	mark.c	FUNCTION_27	CALL_6
0x40025a9	          0x8958f0	             mov dword [rax - 0x10], ebx	      1258	mark.c	FUNCTION_27	CALL_6
0x40025ac	          0x4c39c8	                             cmp rax, r9	      1257	mark.c	FUNCTION_27	FOR_3
0x40025af	            0x75d8	                           jne 0x4002589	      1257	mark.c	FUNCTION_27	FOR_3
0x40025b1	    0x493bbbf80200	           cmp rdi, qword [r11 + 0x2f8] 	      1262	mark.c	FUNCTION_27	CALL_7
0x40025b8	     0xf847b020000	                            je 0x4002839	      1262	mark.c	FUNCTION_27	CALL_7
0x40025be	    0x493bbb080300	           cmp rdi, qword [r11 + 0x308] 	      1263	mark.c	FUNCTION_27	CALL_8
0x40025c5	     0xf843d020000	                            je 0x4002808	      1263	mark.c	FUNCTION_27	CALL_8
0x40025cb	    0x4c8b25000000	            mov r12, qword [0x040025d2] 	      1266	mark.c	FUNCTION_27	CALL_9
0x40025d2	    0x493bbc248005	           cmp rdi, qword [r12 + 0x580] 	      1266	mark.c	FUNCTION_27	CALL_9
0x40025da	     0xf84f4010000	                            je 0x40027d4	      1266	mark.c	FUNCTION_27	CALL_9
0x40025e0	    0x493bbc249005	           cmp rdi, qword [r12 + 0x590] 	      1269	mark.c	FUNCTION_27	CALL_10
0x40025e8	     0xf84b2010000	                            je 0x40027a0	      1269	mark.c	FUNCTION_27	CALL_10
0x40025ee	    0x483b3d000000	            cmp rdi, qword [0x040025f5] 	      1272	mark.c	FUNCTION_27	CALL_11
0x40025f5	     0xf8476010000	                            je 0x4002771	      1272	mark.c	FUNCTION_27	CALL_11
0x40025fb	    0x488b1d000000	            mov rbx, qword [0x04002602] 	      1277	mark.c	FUNCTION_27
0x4002602	          0x4589d5	                          mov r13d, r10d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002605	        0x488d2c3a	                    lea rbp, [rdx + rdi]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002609	          0x41f7dd	                                neg r13d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400260c	          0x4885db	                           test rbx, rbx	      1277	mark.c	FUNCTION_27
0x400260f	            0x747e	                            je 0x400268f	      1277	mark.c	FUNCTION_27
0x4002611	     0xf1f80000000	                         nop dword [rax]	      1277	mark.c	FUNCTION_27
0x4002618	    0x8b9340150000	          mov edx, dword [rbx + 0x1540] 	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x400261e	            0x85d2	                           test edx, edx	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002620	            0x7e5e	                           jle 0x4002680	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002622	          0x83ea01	                              sub edx, 1	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002625	    0x488d83a80500	                  lea rax, [rbx + 0x5a8]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x400262c	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002630	    0x488d94d3d005	         lea rdx, [rbx + rdx*8 + 0x5d0] 	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002638	            0xeb0f	                           jmp 0x4002649	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x400263a	    0x660f1f440000	                    nop word [rax + rax]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002640	        0x4883c028	                           add rax, 0x28	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002644	          0x4839d0	                            cmp rax, rdx	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002647	            0x7437	                            je 0x4002680	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002649	        0x443b4008	                cmp r8d, dword [rax + 8]	      1282	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400264d	            0x75f1	                           jne 0x4002640	      1282	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400264f	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002653	            0x75eb	                           jne 0x4002640	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002655	          0x448b08	                    mov r9d, dword [rax]	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002658	          0x4439ce	                            cmp esi, r9d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400265b	            0x7fe3	                            jg 0x4002640	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400265d	          0x4885c9	                           test rcx, rcx	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002660	        0x488968f8	                mov qword [rax - 8], rbp	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002664	            0x785a	                            js 0x40026c0	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002666	          0x4501d1	                           add r9d, r10d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002669	        0x4883c028	                           add rax, 0x28	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x400266d	        0x448948d8	             mov dword [rax - 0x28], r9d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x4002671	          0x4839d0	                            cmp rax, rdx	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002674	            0x75d3	                           jne 0x4002649	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1281	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x4002680	        0x4c3b5b08	                cmp r11, qword [rbx + 8]	      1286	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x4002684	            0x744a	                            je 0x40026d0	      1286	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x4002686	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1277	mark.c	FUNCTION_27
0x400268a	          0x4885db	                           test rbx, rbx	      1277	mark.c	FUNCTION_27
0x400268d	            0x7589	                           jne 0x4002618	      1277	mark.c	FUNCTION_27
0x400268f	              0x5b	                                 pop rbx	      1298	mark.c	FUNCTION_27
0x4002690	              0x5d	                                 pop rbp	      1298	mark.c	FUNCTION_27
0x4002691	            0x415c	                                 pop r12	      1298	mark.c	FUNCTION_27
0x4002693	            0x415d	                                 pop r13	      1298	mark.c	FUNCTION_27
0x4002695	            0xf3c3	                                     ret	      1298	mark.c	FUNCTION_27
0x4002697	          0x4439ed	                           cmp ebp, r13d	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x400269a	     0xf8f0dfeffff	                            jg 0x40024ad	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40026a0	    0x41c701000000	                       mov dword [r9], 0	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40026a7	      0xe9d4fdffff	                           jmp 0x4002480	      1239	mark.c	FUNCTION_27	FOR_1	CALL_1
0x40026ac	          0x4439e3	                           cmp ebx, r12d	      1258	mark.c	FUNCTION_27	CALL_6
0x40026af	     0xf8fedfeffff	                            jg 0x40025a2	      1258	mark.c	FUNCTION_27	CALL_6
0x40026b5	    0xc70000000000	                      mov dword [rax], 0	      1258	mark.c	FUNCTION_27	CALL_6
0x40026bb	      0xe9c0feffff	                           jmp 0x4002580	      1258	mark.c	FUNCTION_27	CALL_6
0x40026c0	          0x4539e9	                           cmp r9d, r13d	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x40026c3	            0x7fa1	                            jg 0x4002666	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x40026c5	    0xc70000000000	                      mov dword [rax], 0	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x40026cb	      0xe970ffffff	                           jmp 0x4002640	      1283	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x40026d0	    0x8b9384180000	          mov edx, dword [rbx + 0x1884] 	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026d6	            0x85d2	                           test edx, edx	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026d8	            0x7e54	                           jle 0x400272e	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026da	          0x83ea01	                              sub edx, 1	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026dd	    0x488d83701500	                 lea rax, [rbx + 0x1570]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026e4	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026e8	    0x488d94d39815	         lea rdx, [rbx + rdx*8 + 0x1598]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026f0	            0xeb0f	                           jmp 0x4002701	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026f2	    0x660f1f440000	                    nop word [rax + rax]	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026f8	        0x4883c028	                           add rax, 0x28	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026fc	          0x4839d0	                            cmp rax, rdx	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x40026ff	            0x742d	                            je 0x400272e	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x4002701	        0x443b4008	                cmp r8d, dword [rax + 8]	      1290	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002705	            0x75f1	                           jne 0x40026f8	      1290	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002707	        0x483b78f8	                cmp rdi, qword [rax - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x400270b	            0x75eb	                           jne 0x40026f8	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x400270d	          0x448b08	                    mov r9d, dword [rax]	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002710	          0x4439ce	                            cmp esi, r9d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002713	            0x7fe3	                            jg 0x40026f8	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002715	          0x4885c9	                           test rcx, rcx	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002718	        0x488968f8	                mov qword [rax - 8], rbp	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x400271c	            0x7846	                            js 0x4002764	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x400271e	          0x4501d1	                           add r9d, r10d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002721	        0x4883c028	                           add rax, 0x28	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002725	        0x448948d8	             mov dword [rax - 0x28], r9d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002729	          0x4839d0	                            cmp rax, rdx	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400272c	            0x75d3	                           jne 0x4002701	      1289	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x400272e	          0x4939dc	                            cmp r12, rbx	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x4002731	     0xf844fffffff	                            je 0x4002686	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x4002737	        0x483b7b38	            cmp rdi, qword [rbx + 0x38] 	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400273b	     0xf8545ffffff	                           jne 0x4002686	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002741	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002744	            0x39c6	                            cmp esi, eax	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002746	     0xf8f3affffff	                            jg 0x4002686	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400274c	          0x4885c9	                           test rcx, rcx	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400274f	        0x48896b38	             mov qword [rbx + 0x38], rbp	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002753	     0xf88b5010000	                            js 0x400290e	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002759	          0x4401d0	                           add eax, r10d	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400275c	          0x894340	             mov dword [rbx + 0x40], eax	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400275f	      0xe922ffffff	                           jmp 0x4002686	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002764	          0x4539e9	                           cmp r9d, r13d	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002767	            0x7fb5	                            jg 0x400271e	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002769	    0xc70000000000	                      mov dword [rax], 0	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x400276f	            0xeb87	                           jmp 0x40026f8	      1291	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x4002771	    0x8b0500000000	            mov eax, dword [0x04002777] 	      1272	mark.c	FUNCTION_27	CALL_11
0x4002777	            0x39c6	                            cmp esi, eax	      1272	mark.c	FUNCTION_27	CALL_11
0x4002779	     0xf8f7cfeffff	                            jg 0x40025fb	      1272	mark.c	FUNCTION_27	CALL_11
0x400277f	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1272	mark.c	FUNCTION_27	CALL_11
0x4002783	          0x4885c9	                           test rcx, rcx	      1272	mark.c	FUNCTION_27	CALL_11
0x4002786	    0x4c890d000000	              mov qword [0x0400278d], r9	      1272	mark.c	FUNCTION_27	CALL_11
0x400278d	     0xf885d010000	                            js 0x40028f0	      1272	mark.c	FUNCTION_27	CALL_11
0x4002793	             0x1c8	                            add eax, ecx	      1272	mark.c	FUNCTION_27	CALL_11
0x4002795	    0x890500000000	            mov dword [0x0400279b], eax 	      1272	mark.c	FUNCTION_27	CALL_11
0x400279b	      0xe95bfeffff	                           jmp 0x40025fb	      1272	mark.c	FUNCTION_27	CALL_11
0x40027a0	    0x418b84249805	           mov eax, dword [r12 + 0x598] 	      1269	mark.c	FUNCTION_27	CALL_10
0x40027a8	            0x39c6	                            cmp esi, eax	      1269	mark.c	FUNCTION_27	CALL_10
0x40027aa	     0xf8f3efeffff	                            jg 0x40025ee	      1269	mark.c	FUNCTION_27	CALL_10
0x40027b0	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1269	mark.c	FUNCTION_27	CALL_10
0x40027b4	          0x4885c9	                           test rcx, rcx	      1269	mark.c	FUNCTION_27	CALL_10
0x40027b7	    0x4d898c249005	             mov qword [r12 + 0x590], r9	      1269	mark.c	FUNCTION_27	CALL_10
0x40027bf	     0xf88f6010000	                            js 0x40029bb	      1269	mark.c	FUNCTION_27	CALL_10
0x40027c5	             0x1c8	                            add eax, ecx	      1269	mark.c	FUNCTION_27	CALL_10
0x40027c7	    0x418984249805	            mov dword [r12 + 0x598], eax	      1269	mark.c	FUNCTION_27	CALL_10
0x40027cf	      0xe91afeffff	                           jmp 0x40025ee	      1269	mark.c	FUNCTION_27	CALL_10
0x40027d4	    0x418b84248805	           mov eax, dword [r12 + 0x588] 	      1266	mark.c	FUNCTION_27	CALL_9
0x40027dc	            0x39c6	                            cmp esi, eax	      1266	mark.c	FUNCTION_27	CALL_9
0x40027de	     0xf8ffcfdffff	                            jg 0x40025e0	      1266	mark.c	FUNCTION_27	CALL_9
0x40027e4	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1266	mark.c	FUNCTION_27	CALL_9
0x40027e8	          0x4885c9	                           test rcx, rcx	      1266	mark.c	FUNCTION_27	CALL_9
0x40027eb	    0x4d898c248005	             mov qword [r12 + 0x580], r9	      1266	mark.c	FUNCTION_27	CALL_9
0x40027f3	     0xf88a2010000	                            js 0x400299b	      1266	mark.c	FUNCTION_27	CALL_9
0x40027f9	             0x1c8	                            add eax, ecx	      1266	mark.c	FUNCTION_27	CALL_9
0x40027fb	    0x418984248805	            mov dword [r12 + 0x588], eax	      1266	mark.c	FUNCTION_27	CALL_9
0x4002803	      0xe9d8fdffff	                           jmp 0x40025e0	      1266	mark.c	FUNCTION_27	CALL_9
0x4002808	    0x418b83100300	           mov eax, dword [r11 + 0x310] 	      1263	mark.c	FUNCTION_27	CALL_8
0x400280f	            0x39c6	                            cmp esi, eax	      1263	mark.c	FUNCTION_27	CALL_8
0x4002811	     0xf8fb4fdffff	                            jg 0x40025cb	      1263	mark.c	FUNCTION_27	CALL_8
0x4002817	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1263	mark.c	FUNCTION_27	CALL_8
0x400281b	          0x4885c9	                           test rcx, rcx	      1263	mark.c	FUNCTION_27	CALL_8
0x400281e	    0x4d898b080300	             mov qword [r11 + 0x308], r9	      1263	mark.c	FUNCTION_27	CALL_8
0x4002825	     0xf8851010000	                            js 0x400297c	      1263	mark.c	FUNCTION_27	CALL_8
0x400282b	             0x1c8	                            add eax, ecx	      1263	mark.c	FUNCTION_27	CALL_8
0x400282d	    0x418983100300	            mov dword [r11 + 0x310], eax	      1263	mark.c	FUNCTION_27	CALL_8
0x4002834	      0xe992fdffff	                           jmp 0x40025cb	      1263	mark.c	FUNCTION_27	CALL_8
0x4002839	    0x418b83000300	           mov eax, dword [r11 + 0x300] 	      1262	mark.c	FUNCTION_27	CALL_7
0x4002840	            0x39c6	                            cmp esi, eax	      1262	mark.c	FUNCTION_27	CALL_7
0x4002842	     0xf8f76fdffff	                            jg 0x40025be	      1262	mark.c	FUNCTION_27	CALL_7
0x4002848	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1262	mark.c	FUNCTION_27	CALL_7
0x400284c	          0x4885c9	                           test rcx, rcx	      1262	mark.c	FUNCTION_27	CALL_7
0x400284f	    0x4d898bf80200	             mov qword [r11 + 0x2f8], r9	      1262	mark.c	FUNCTION_27	CALL_7
0x4002856	     0xf8801010000	                            js 0x400295d	      1262	mark.c	FUNCTION_27	CALL_7
0x400285c	             0x1c8	                            add eax, ecx	      1262	mark.c	FUNCTION_27	CALL_7
0x400285e	    0x418983000300	            mov dword [r11 + 0x300], eax	      1262	mark.c	FUNCTION_27	CALL_7
0x4002865	      0xe954fdffff	                           jmp 0x40025be	      1262	mark.c	FUNCTION_27	CALL_7
0x400286a	    0x418b83500300	           mov eax, dword [r11 + 0x350] 	      1253	mark.c	FUNCTION_27	CALL_5
0x4002871	            0x39c6	                            cmp esi, eax	      1253	mark.c	FUNCTION_27	CALL_5
0x4002873	     0xf8fd1fcffff	                            jg 0x400254a	      1253	mark.c	FUNCTION_27	CALL_5
0x4002879	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1253	mark.c	FUNCTION_27	CALL_5
0x400287d	          0x4885c9	                           test rcx, rcx	      1253	mark.c	FUNCTION_27	CALL_5
0x4002880	    0x4d898b480300	             mov qword [r11 + 0x348], r9	      1253	mark.c	FUNCTION_27	CALL_5
0x4002887	     0xf88b1000000	                            js 0x400293e	      1253	mark.c	FUNCTION_27	CALL_5
0x400288d	             0x1c8	                            add eax, ecx	      1253	mark.c	FUNCTION_27	CALL_5
0x400288f	    0x418983500300	            mov dword [r11 + 0x350], eax	      1253	mark.c	FUNCTION_27	CALL_5
0x4002896	      0xe9affcffff	                           jmp 0x400254a	      1253	mark.c	FUNCTION_27	CALL_5
0x400289b	    0x418b83400300	           mov eax, dword [r11 + 0x340] 	      1250	mark.c	FUNCTION_27	CALL_4
0x40028a2	            0x39c6	                            cmp esi, eax	      1250	mark.c	FUNCTION_27	CALL_4
0x40028a4	     0xf8f93fcffff	                            jg 0x400253d	      1250	mark.c	FUNCTION_27	CALL_4
0x40028aa	        0x4c8d0c3a	                     lea r9, [rdx + rdi]	      1250	mark.c	FUNCTION_27	CALL_4
0x40028ae	          0x4885c9	                           test rcx, rcx	      1250	mark.c	FUNCTION_27	CALL_4
0x40028b1	    0x4d898b380300	             mov qword [r11 + 0x338], r9	      1250	mark.c	FUNCTION_27	CALL_4
0x40028b8	            0x7869	                            js 0x4002923	      1250	mark.c	FUNCTION_27	CALL_4
0x40028ba	             0x1c8	                            add eax, ecx	      1250	mark.c	FUNCTION_27	CALL_4
0x40028bc	    0x418983400300	            mov dword [r11 + 0x340], eax	      1250	mark.c	FUNCTION_27	CALL_4
0x40028c3	      0xe975fcffff	                           jmp 0x400253d	      1250	mark.c	FUNCTION_27	CALL_4
0x40028c8	          0x4439ed	                           cmp ebp, r13d	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40028cb	     0xf8f01fcffff	                            jg 0x40024d2	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40028d1	    0xc70000000000	                      mov dword [rax], 0	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40028d7	      0xe9aafbffff	                           jmp 0x4002486	      1241	mark.c	FUNCTION_27	FOR_1	CALL_2
0x40028dc	          0x4439c8	                            cmp eax, r9d	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40028df	     0xf8f38fcffff	                            jg 0x400251d	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40028e5	    0xc70300000000	                      mov dword [rbx], 0	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40028eb	      0xe901fcffff	                           jmp 0x40024f1	      1246	mark.c	FUNCTION_27	FOR_2	CALL_3
0x40028f0	          0x4189c9	                            mov r9d, ecx	      1272	mark.c	FUNCTION_27	CALL_11
0x40028f3	          0x41f7d9	                                 neg r9d	      1272	mark.c	FUNCTION_27	CALL_11
0x40028f6	          0x4439c8	                            cmp eax, r9d	      1272	mark.c	FUNCTION_27	CALL_11
0x40028f9	     0xf8f94feffff	                            jg 0x4002793	      1272	mark.c	FUNCTION_27	CALL_11
0x40028ff	    0xc70500000000	               mov dword [0x04002909], 0	      1272	mark.c	FUNCTION_27	CALL_11
0x4002909	      0xe9edfcffff	                           jmp 0x40025fb	      1272	mark.c	FUNCTION_27	CALL_11
0x400290e	          0x4439e8	                           cmp eax, r13d	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002911	     0xf8f42feffff	                            jg 0x4002759	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002917	    0xc74340000000	               mov dword [rbx + 0x40], 0	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x400291e	      0xe963fdffff	                           jmp 0x4002686	      1295	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x4002923	          0x4189c9	                            mov r9d, ecx	      1250	mark.c	FUNCTION_27	CALL_4
0x4002926	          0x41f7d9	                                 neg r9d	      1250	mark.c	FUNCTION_27	CALL_4
0x4002929	          0x4439c8	                            cmp eax, r9d	      1250	mark.c	FUNCTION_27	CALL_4
0x400292c	            0x7f8c	                            jg 0x40028ba	      1250	mark.c	FUNCTION_27	CALL_4
0x400292e	    0x41c783400300	              mov dword [r11 + 0x340], 0	      1250	mark.c	FUNCTION_27	CALL_4
0x4002939	      0xe9fffbffff	                           jmp 0x400253d	      1250	mark.c	FUNCTION_27	CALL_4
0x400293e	          0x4189c9	                            mov r9d, ecx	      1253	mark.c	FUNCTION_27	CALL_5
0x4002941	          0x41f7d9	                                 neg r9d	      1253	mark.c	FUNCTION_27	CALL_5
0x4002944	          0x4439c8	                            cmp eax, r9d	      1253	mark.c	FUNCTION_27	CALL_5
0x4002947	     0xf8f40ffffff	                            jg 0x400288d	      1253	mark.c	FUNCTION_27	CALL_5
0x400294d	    0x41c783500300	              mov dword [r11 + 0x350], 0	      1253	mark.c	FUNCTION_27	CALL_5
0x4002958	      0xe9edfbffff	                           jmp 0x400254a	      1253	mark.c	FUNCTION_27	CALL_5
0x400295d	          0x4189c9	                            mov r9d, ecx	      1262	mark.c	FUNCTION_27	CALL_7
0x4002960	          0x41f7d9	                                 neg r9d	      1262	mark.c	FUNCTION_27	CALL_7
0x4002963	          0x4439c8	                            cmp eax, r9d	      1262	mark.c	FUNCTION_27	CALL_7
0x4002966	     0xf8ff0feffff	                            jg 0x400285c	      1262	mark.c	FUNCTION_27	CALL_7
0x400296c	    0x41c783000300	              mov dword [r11 + 0x300], 0	      1262	mark.c	FUNCTION_27	CALL_7
0x4002977	      0xe942fcffff	                           jmp 0x40025be	      1262	mark.c	FUNCTION_27	CALL_7
0x400297c	          0x4189c9	                            mov r9d, ecx	      1263	mark.c	FUNCTION_27	CALL_8
0x400297f	          0x41f7d9	                                 neg r9d	      1263	mark.c	FUNCTION_27	CALL_8
0x4002982	          0x4439c8	                            cmp eax, r9d	      1263	mark.c	FUNCTION_27	CALL_8
0x4002985	     0xf8fa0feffff	                            jg 0x400282b	      1263	mark.c	FUNCTION_27	CALL_8
0x400298b	    0x41c783100300	              mov dword [r11 + 0x310], 0	      1263	mark.c	FUNCTION_27	CALL_8
0x4002996	      0xe930fcffff	                           jmp 0x40025cb	      1263	mark.c	FUNCTION_27	CALL_8
0x400299b	          0x4189c9	                            mov r9d, ecx	      1266	mark.c	FUNCTION_27	CALL_9
0x400299e	          0x41f7d9	                                 neg r9d	      1266	mark.c	FUNCTION_27	CALL_9
0x40029a1	          0x4439c8	                            cmp eax, r9d	      1266	mark.c	FUNCTION_27	CALL_9
0x40029a4	     0xf8f4ffeffff	                            jg 0x40027f9	      1266	mark.c	FUNCTION_27	CALL_9
0x40029aa	    0x41c784248805	              mov dword [r12 + 0x588], 0	      1266	mark.c	FUNCTION_27	CALL_9
0x40029b6	      0xe925fcffff	                           jmp 0x40025e0	      1266	mark.c	FUNCTION_27	CALL_9
0x40029bb	          0x4189c9	                            mov r9d, ecx	      1269	mark.c	FUNCTION_27	CALL_10
0x40029be	          0x41f7d9	                                 neg r9d	      1269	mark.c	FUNCTION_27	CALL_10
0x40029c1	          0x4439c8	                            cmp eax, r9d	      1269	mark.c	FUNCTION_27	CALL_10
0x40029c4	     0xf8ffbfdffff	                            jg 0x40027c5	      1269	mark.c	FUNCTION_27	CALL_10
0x40029ca	    0x41c784249805	              mov dword [r12 + 0x598], 0	      1269	mark.c	FUNCTION_27	CALL_10
0x40029d6	      0xe913fcffff	                           jmp 0x40025ee	      1269	mark.c	FUNCTION_27	CALL_10
copy_jumplist	WHILE,0:DO,0:CALL,1:IF,1:ELSE,0:functions,0:FOR,1:SWITCH,0	44
0x4002eb0	            0x4156	                                push r14	      1353	mark.c	FUNCTION_29
0x4002eb2	            0x4155	                                push r13	      1353	mark.c	FUNCTION_29
0x4002eb4	          0x4989f6	                            mov r14, rsi	      1353	mark.c	FUNCTION_29
0x4002eb7	            0x4154	                                push r12	      1353	mark.c	FUNCTION_29
0x4002eb9	              0x55	                                push rbp	      1353	mark.c	FUNCTION_29
0x4002eba	          0x4989fd	                            mov r13, rdi	      1353	mark.c	FUNCTION_29
0x4002ebd	              0x53	                                push rbx	      1353	mark.c	FUNCTION_29
0x4002ebe	    0x8b9740150000	          mov edx, dword [rdi + 0x1540] 	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ec4	            0x85d2	                           test edx, edx	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ec6	            0x7e69	                           jle 0x4002f31	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ec8	    0x488d9fa00500	                  lea rbx, [rdi + 0x5a0]	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ecf	    0x488daea00500	                  lea rbp, [rsi + 0x5a0]	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ed6	          0x4531e4	                          xor r12d, r12d	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ed9	     0xf1f80000000	                         nop dword [rax]	      1356	mark.c	FUNCTION_29	FOR_1
0x4002ee0	          0x488b03	                    mov rax, qword [rbx]	      1358	mark.c	FUNCTION_29	FOR_1
0x4002ee3	        0x48894500	                    mov qword [rbp], rax	      1358	mark.c	FUNCTION_29	FOR_1
0x4002ee7	        0x488b4308	                mov rax, qword [rbx + 8]	      1358	mark.c	FUNCTION_29	FOR_1
0x4002eeb	        0x48894508	                mov qword [rbp + 8], rax	      1358	mark.c	FUNCTION_29	FOR_1
0x4002eef	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002ef3	        0x48894510	            mov qword [rbp + 0x10], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002ef7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002efb	        0x48894518	            mov qword [rbp + 0x18], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002eff	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002f03	        0x48894520	            mov qword [rbp + 0x20], rax 	      1358	mark.c	FUNCTION_29	FOR_1
0x4002f07	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002f0b	          0x4885ff	                           test rdi, rdi	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002f0e	            0x7410	                            je 0x4002f20	      1359	mark.c	FUNCTION_29	FOR_1	IF_1
0x4002f10	      0xe800000000	                          call 0x4002f15	      1360	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4002f15	    0x418b95401500	          mov edx, dword [r13 + 0x1540] 	      1360	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4002f1c	        0x48894518	            mov qword [rbp + 0x18], rax 	      1360	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4002f20	        0x4183c401	                             add r12d, 1	      1356	mark.c	FUNCTION_29	FOR_1
0x4002f24	        0x4883c328	                           add rbx, 0x28	      1356	mark.c	FUNCTION_29	FOR_1
0x4002f28	        0x4883c528	                           add rbp, 0x28	      1356	mark.c	FUNCTION_29	FOR_1
0x4002f2c	          0x4439e2	                           cmp edx, r12d	      1356	mark.c	FUNCTION_29	FOR_1
0x4002f2f	            0x7faf	                            jg 0x4002ee0	      1356	mark.c	FUNCTION_29	FOR_1
0x4002f31	    0x418b85441500	          mov eax, dword [r13 + 0x1544] 	      1363	mark.c	FUNCTION_29
0x4002f38	    0x418996401500	          mov dword [r14 + 0x1540], edx 	      1362	mark.c	FUNCTION_29
0x4002f3f	              0x5b	                                 pop rbx	      1364	mark.c	FUNCTION_29
0x4002f40	              0x5d	                                 pop rbp	      1364	mark.c	FUNCTION_29
0x4002f41	    0x418986441500	          mov dword [r14 + 0x1544], eax 	      1363	mark.c	FUNCTION_29
0x4002f48	            0x415c	                                 pop r12	      1364	mark.c	FUNCTION_29
0x4002f4a	            0x415d	                                 pop r13	      1364	mark.c	FUNCTION_29
0x4002f4c	            0x415e	                                 pop r14	      1364	mark.c	FUNCTION_29
0x4002f4e	              0xc3	                                     ret	      1364	mark.c	FUNCTION_29
removable	WHILE,0:DO,0:CALL,5:IF,3:ELSE,0:functions,0:FOR,1:SWITCH,0	52
0x4003710	              0x55	                                push rbp	      1820	mark.c	FUNCTION_40
0x4003711	              0x53	                                push rbx	      1820	mark.c	FUNCTION_40
0x4003712	          0x4889fe	                            mov rsi, rdi	      1820	mark.c	FUNCTION_40
0x4003715	            0x31ff	                            xor edi, edi	      1826	mark.c	FUNCTION_40	CALL_1
0x4003717	        0x4883ec58	                           sub rsp, 0x58	      1820	mark.c	FUNCTION_40
0x400371b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1820	mark.c	FUNCTION_40
0x4003724	      0x4889442448	             mov qword [rsp + 0x48], rax	      1820	mark.c	FUNCTION_40
0x4003729	            0x31c0	                            xor eax, eax	      1820	mark.c	FUNCTION_40
0x400372b	      0xe800000000	                          call 0x4003730	      1826	mark.c	FUNCTION_40	CALL_1
0x4003730	          0x4885c0	                           test rax, rax	      1827	mark.c	FUNCTION_40	IF_1
0x4003733	     0xf8488000000	                            je 0x40037c1	      1827	mark.c	FUNCTION_40	IF_1
0x4003739	          0x4889c3	                            mov rbx, rax	      1827	mark.c	FUNCTION_40	IF_1
0x400373c	    0x488b05000000	            mov rax, qword [0x04003743] 	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003743	      0x488d6c2411	                   lea rbp, [rsp + 0x11]	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x4003748	      0x4889442408	                mov qword [rsp + 8], rax	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x400374d	            0xeb26	                           jmp 0x4003775	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x400374f	              0x90	                                     nop	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003750	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003755	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x400375a	      0xb900000000	                              mov ecx, 0	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x400375f	      0xba33000000	                           mov edx, 0x33	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003764	      0xe800000000	                          call 0x4003769	      1831	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x4003769	      0x807c241072	            cmp byte [rsp + 0x10], 0x72 	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x400376e	            0x7430	                            je 0x40037a0	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x4003770	      0x488b442408	                mov rax, qword [rsp + 8]	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x4003775	          0x803800	                       cmp byte [rax], 0	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x4003778	            0x75d6	                           jne 0x4003750	      1829	mark.c	FUNCTION_40	IF_1	FOR_1
0x400377a	            0x31ed	                            xor ebp, ebp	      1823	mark.c	FUNCTION_40
0x400377c	          0x4889df	                            mov rdi, rbx	      1842	mark.c	FUNCTION_40	IF_1	CALL_5
0x400377f	      0xe800000000	                          call 0x4003784	      1842	mark.c	FUNCTION_40	IF_1	CALL_5
0x4003784	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1845	mark.c	FUNCTION_40
0x4003789	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1845	mark.c	FUNCTION_40
0x4003792	            0x89e8	                            mov eax, ebp	      1845	mark.c	FUNCTION_40
0x4003794	            0x752f	                           jne 0x40037c5	      1845	mark.c	FUNCTION_40
0x4003796	        0x4883c458	                           add rsp, 0x58	      1845	mark.c	FUNCTION_40
0x400379a	              0x5b	                                 pop rbx	      1845	mark.c	FUNCTION_40
0x400379b	              0x5d	                                 pop rbp	      1845	mark.c	FUNCTION_40
0x400379c	              0xc3	                                     ret	      1845	mark.c	FUNCTION_40
0x400379d	           0xf1f00	                         nop dword [rax]	      1845	mark.c	FUNCTION_40
0x40037a0	          0x4889ef	                            mov rdi, rbp	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x40037a3	      0xe800000000	                          call 0x40037a8	      1834	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x40037a8	          0x4889de	                            mov rsi, rbx	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037ab	          0x4863d0	                         movsxd rdx, eax	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037ae	          0x4889ef	                            mov rdi, rbp	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037b1	      0xe800000000	                          call 0x40037b6	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037b6	            0x85c0	                           test eax, eax	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037b8	            0x75b6	                           jne 0x4003770	      1835	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x40037ba	      0xbd01000000	                              mov ebp, 1	      1837	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3
0x40037bf	            0xebbb	                           jmp 0x400377c	      1837	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3
0x40037c1	            0x31ed	                            xor ebp, ebp	      1823	mark.c	FUNCTION_40
0x40037c3	            0xebbf	                           jmp 0x4003784	      1823	mark.c	FUNCTION_40
0x40037c5	      0xe800000000	                          call 0x40037ca	      1845	mark.c	FUNCTION_40
write_buffer_marks	WHILE,0:DO,0:CALL,10:IF,1:ELSE,0:functions,0:FOR,2:SWITCH,0	132
0x4000a30	            0x4155	                                push r13	      1857	mark.c	FUNCTION_42
0x4000a32	            0x4154	                                push r12	      1857	mark.c	FUNCTION_42
0x4000a34	          0x4989f4	                            mov r12, rsi	      1857	mark.c	FUNCTION_42
0x4000a37	              0x55	                                push rbp	      1857	mark.c	FUNCTION_42
0x4000a38	              0x53	                                push rbx	      1857	mark.c	FUNCTION_42
0x4000a39	    0x41b801000000	                              mov r8d, 1	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a3f	          0x4889fd	                            mov rbp, rdi	      1857	mark.c	FUNCTION_42
0x4000a42	      0xb901040000	                          mov ecx, 0x401	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a47	        0x4883ec08	                              sub rsp, 8	      1857	mark.c	FUNCTION_42
0x4000a4b	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a52	    0x488b15000000	            mov rdx, qword [0x04000a59] 	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a59	            0x31ff	                            xor edi, edi	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a5b	      0xe800000000	                          call 0x4000a60	      1861	mark.c	FUNCTION_42	CALL_1
0x4000a60	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000a63	      0xba03000000	                              mov edx, 3	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000a68	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000a6d	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000a72	      0xe800000000	                          call 0x4000a77	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000a77	    0x488b35000000	            mov rsi, qword [0x04000a7e] 	      1863	mark.c	FUNCTION_42	CALL_3
0x4000a7e	          0x4c89e7	                            mov rdi, r12	      1863	mark.c	FUNCTION_42	CALL_3
0x4000a81	      0xe800000000	                          call 0x4000a86	      1863	mark.c	FUNCTION_42	CALL_3
0x4000a86	    0x4c8b85500100	            mov r8, qword [rbp + 0x150] 	      1867	mark.c	FUNCTION_42
0x4000a8d	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000a90	     0xf8582010000	                           jne 0x4000c18	      1850	mark.c	FUNCTION_41	IF_1
0x4000a96	    0x4c8b85280300	            mov r8, qword [rbp + 0x328] 	      1850	mark.c	FUNCTION_41	IF_1
0x4000a9d	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000aa0	     0xf854a010000	                           jne 0x4000bf0	      1850	mark.c	FUNCTION_41	IF_1
0x4000aa6	    0x4c8b85380300	            mov r8, qword [rbp + 0x338] 	      1850	mark.c	FUNCTION_41	IF_1
0x4000aad	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000ab0	     0xf8512010000	                           jne 0x4000bc8	      1850	mark.c	FUNCTION_41	IF_1
0x4000ab6	    0x4c8b85480300	            mov r8, qword [rbp + 0x348] 	      1850	mark.c	FUNCTION_41	IF_1
0x4000abd	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000ac0	     0xf85da000000	                           jne 0x4000ba0	      1850	mark.c	FUNCTION_41	IF_1
0x4000ac6	    0x8b8598090000	           mov eax, dword [rbp + 0x998] 	      1876	mark.c	FUNCTION_42	FOR_1
0x4000acc	          0x4531ed	                          xor r13d, r13d	      1876	mark.c	FUNCTION_42	FOR_1
0x4000acf	    0x488d9d600300	                  lea rbx, [rbp + 0x360]	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ad6	            0x85c0	                           test eax, eax	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ad8	            0x7f17	                            jg 0x4000af1	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ada	            0xeb64	                           jmp 0x4000b40	      1876	mark.c	FUNCTION_42	FOR_1
0x4000adc	         0xf1f4000	                         nop dword [rax]	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ae0	        0x4183c501	                             add r13d, 1	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ae4	        0x4883c310	                           add rbx, 0x10	      1876	mark.c	FUNCTION_42	FOR_1
0x4000ae8	    0x4439ad980900	          cmp dword [rbp + 0x998], r13d 	      1876	mark.c	FUNCTION_42	FOR_1
0x4000aef	            0x7e4f	                           jle 0x4000b40	      1876	mark.c	FUNCTION_42	FOR_1
0x4000af1	          0x4585ed	                         test r13d, r13d	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000af4	        0x4c8b43f8	                 mov r8, qword [rbx - 8]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000af8	            0x7406	                            je 0x4000b00	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000afa	        0x4c3943e8	              cmp qword [rbx - 0x18], r8	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000afe	            0x7428	                            je 0x4000b28	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b00	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000b03	            0x74db	                            je 0x4000ae0	      1850	mark.c	FUNCTION_41	IF_1
0x4000b05	          0x448b0b	                    mov r9d, dword [rbx]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b08	      0xb92b000000	                           mov ecx, 0x2b	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b0d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b12	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b17	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b1a	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b1c	      0xe800000000	                          call 0x4000b21	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b21	            0xebbd	                           jmp 0x4000ae0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b23	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b28	            0x8b03	                    mov eax, dword [rbx]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b2a	          0x3943f0	            cmp dword [rbx - 0x10], eax 	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b2d	            0x75d1	                           jne 0x4000b00	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b2f	          0x8b4304	                mov eax, dword [rbx + 4]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b32	          0x3943f4	              cmp dword [rbx - 0xc], eax	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b35	            0x75c9	                           jne 0x4000b00	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b37	            0xeba7	                           jmp 0x4000ae0	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b39	     0xf1f80000000	                         nop dword [rax]	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b40	    0x4881c5580100	                          add rbp, 0x158	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b47	      0xbb61000000	                           mov ebx, 0x61	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b4c	            0xeb0e	                           jmp 0x4000b5c	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b4e	            0x6690	                                     nop	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b50	          0x83c301	                              add ebx, 1	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b53	        0x4883c510	                           add rbp, 0x10	      1879	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x4000b57	          0x83fb7b	                           cmp ebx, 0x7b	      1884	mark.c	FUNCTION_42	FOR_2
0x4000b5a	            0x742f	                            je 0x4000b8b	      1884	mark.c	FUNCTION_42	FOR_2
0x4000b5c	        0x4c8b4500	                     mov r8, qword [rbp]	      1850	mark.c	FUNCTION_41	IF_1
0x4000b60	          0x4d85c0	                             test r8, r8	      1850	mark.c	FUNCTION_41	IF_1
0x4000b63	            0x74eb	                            je 0x4000b50	      1850	mark.c	FUNCTION_41	IF_1
0x4000b65	        0x448b4d08	                mov r9d, dword [rbp + 8]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b69	            0x89d9	                            mov ecx, ebx	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b6b	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b6d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b72	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b77	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b7a	          0x83c301	                              add ebx, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b7d	        0x4883c510	                           add rbp, 0x10	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b81	      0xe800000000	                          call 0x4000b86	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000b86	          0x83fb7b	                           cmp ebx, 0x7b	      1884	mark.c	FUNCTION_42	FOR_2
0x4000b89	            0x75d1	                           jne 0x4000b5c	      1884	mark.c	FUNCTION_42	FOR_2
0x4000b8b	        0x4883c408	                              add rsp, 8	      1886	mark.c	FUNCTION_42
0x4000b8f	              0x5b	                                 pop rbx	      1886	mark.c	FUNCTION_42
0x4000b90	              0x5d	                                 pop rbp	      1886	mark.c	FUNCTION_42
0x4000b91	            0x415c	                                 pop r12	      1886	mark.c	FUNCTION_42
0x4000b93	            0x415d	                                 pop r13	      1886	mark.c	FUNCTION_42
0x4000b95	              0xc3	                                     ret	      1886	mark.c	FUNCTION_42
0x4000b96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1886	mark.c	FUNCTION_42
0x4000ba0	    0x448b8d500300	           mov r9d, dword [rbp + 0x350] 	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000ba7	      0xb92e000000	                           mov ecx, 0x2e	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bac	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bb1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bb6	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bb9	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bbb	      0xe800000000	                          call 0x4000bc0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bc0	      0xe901ffffff	                           jmp 0x4000ac6	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bc5	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bc8	    0x448b8d400300	           mov r9d, dword [rbp + 0x340] 	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bcf	      0xb95e000000	                           mov ecx, 0x5e	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bd4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bd9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bde	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000be1	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000be3	      0xe800000000	                          call 0x4000be8	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000be8	      0xe9c9feffff	                           jmp 0x4000ab6	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bed	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bf0	    0x448b8d300300	           mov r9d, dword [rbp + 0x330] 	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bf7	      0xb922000000	                           mov ecx, 0x22	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000bfc	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c01	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c06	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c09	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c0b	      0xe800000000	                          call 0x4000c10	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c10	      0xe991feffff	                           jmp 0x4000aa6	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c15	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c18	          0x4531c9	                            xor r9d, r9d	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c1b	      0xb92a000000	                           mov ecx, 0x2a	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c20	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c25	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c2a	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c2d	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c2f	      0xe800000000	                          call 0x4000c34	        97	stdio2.h	FUNCTION_50	CALL_1
0x4000c34	      0xe95dfeffff	                           jmp 0x4000a96	        97	stdio2.h	FUNCTION_50	CALL_1
prepare_viminfo_marks	WHILE,0:DO,0:CALL,2:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	10
0x4003200	        0x4883ec08	                              sub rsp, 8	      1471	mark.c	FUNCTION_34
0x4003204	      0xbfa0050000	                          mov edi, 0x5a0	      1472	mark.c	FUNCTION_34	CALL_1
0x4003209	      0xe800000000	                          call 0x400320e	      1472	mark.c	FUNCTION_34	CALL_1
0x400320e	      0xbfa00f0000	                          mov edi, 0xfa0	      1475	mark.c	FUNCTION_34	CALL_2
0x4003213	    0x488905000000	            mov qword [0x0400321a], rax 	      1472	mark.c	FUNCTION_34	CALL_1
0x400321a	      0xe800000000	                          call 0x400321f	      1475	mark.c	FUNCTION_34	CALL_2
0x400321f	    0xc70500000000	               mov dword [0x04003229], 0	      1477	mark.c	FUNCTION_34
0x4003229	    0x488905000000	            mov qword [0x04003230], rax 	      1475	mark.c	FUNCTION_34	CALL_2
0x4003230	        0x4883c408	                              add rsp, 8	      1479	mark.c	FUNCTION_34
0x4003234	              0xc3	                                     ret	      1479	mark.c	FUNCTION_34
ex_clearjumps	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	23
0x4002200	            0x4154	                                push r12	       933	mark.c	FUNCTION_22
0x4002202	    0x4c8b25000000	            mov r12, qword [0x04002209] 	       934	mark.c	FUNCTION_22	CALL_1
0x4002209	              0x55	                                push rbp	       933	mark.c	FUNCTION_22
0x400220a	              0x53	                                push rbx	       933	mark.c	FUNCTION_22
0x400220b	    0x418b84244015	          mov eax, dword [r12 + 0x1540] 	      1374	mark.c	FUNCTION_30	FOR_1
0x4002213	            0x85c0	                           test eax, eax	      1374	mark.c	FUNCTION_30	FOR_1
0x4002215	            0x7e32	                           jle 0x4002249	      1374	mark.c	FUNCTION_30	FOR_1
0x4002217	    0x498dac24b805	                  lea rbp, [r12 + 0x5b8]	      1374	mark.c	FUNCTION_30	FOR_1
0x400221f	            0x31db	                            xor ebx, ebx	      1374	mark.c	FUNCTION_30	FOR_1
0x4002221	     0xf1f80000000	                         nop dword [rax]	      1374	mark.c	FUNCTION_30	FOR_1
0x4002228	        0x488b7d00	                    mov rdi, qword [rbp]	      1375	mark.c	FUNCTION_30	CALL_1
0x400222c	          0x83c301	                              add ebx, 1	      1374	mark.c	FUNCTION_30	FOR_1
0x400222f	        0x4883c528	                           add rbp, 0x28	      1374	mark.c	FUNCTION_30	FOR_1
0x4002233	      0xe800000000	                          call 0x4002238	      1375	mark.c	FUNCTION_30	CALL_1
0x4002238	    0x413b9c244015	          cmp ebx, dword [r12 + 0x1540] 	      1374	mark.c	FUNCTION_30	FOR_1
0x4002240	            0x7ce6	                            jl 0x4002228	      1374	mark.c	FUNCTION_30	FOR_1
0x4002242	    0x4c8b25000000	            mov r12, qword [0x04002249] 	      1374	mark.c	FUNCTION_30	FOR_1
0x4002249	    0x41c784244015	            mov dword [r12 + 0x1540], 0 	       935	mark.c	FUNCTION_22
0x4002255	    0x41c784244415	            mov dword [r12 + 0x1544], 0 	       936	mark.c	FUNCTION_22
0x4002261	              0x5b	                                 pop rbx	       937	mark.c	FUNCTION_22
0x4002262	              0x5d	                                 pop rbp	       937	mark.c	FUNCTION_22
0x4002263	            0x415c	                                 pop r12	       937	mark.c	FUNCTION_22
0x4002265	              0xc3	                                     ret	       937	mark.c	FUNCTION_22
movechangelist	WHILE,0:DO,0:CALL,0:IF,5:ELSE,2:functions,0:FOR,0:SWITCH,0	31
0x4001430	    0x488b0d000000	            mov rcx, qword [0x04001437] 	       282	mark.c	FUNCTION_6	IF_1
0x4001437	    0x8b9198090000	           mov edx, dword [rcx + 0x998] 	       282	mark.c	FUNCTION_6	IF_1
0x400143d	            0x85d2	                           test edx, edx	       282	mark.c	FUNCTION_6	IF_1
0x400143f	            0x7436	                            je 0x4001477	       282	mark.c	FUNCTION_6	IF_1
0x4001441	    0x488b35000000	            mov rsi, qword [0x04001448] 	       285	mark.c	FUNCTION_6
0x4001448	    0x8b8648150000	          mov eax, dword [rsi + 0x1548] 	       285	mark.c	FUNCTION_6
0x400144e	             0x1c7	                            add edi, eax	       286	mark.c	FUNCTION_6	IF_2
0x4001450	            0x782e	                            js 0x4001480	       286	mark.c	FUNCTION_6	IF_2
0x4001452	            0x39fa	                            cmp edx, edi	       292	mark.c	FUNCTION_6	ELSE_1	IF_4
0x4001454	            0x7e1a	                           jle 0x4001470	       292	mark.c	FUNCTION_6	ELSE_1	IF_4
0x4001456	          0x4863c7	                         movsxd rax, edi	       292	mark.c	FUNCTION_6	ELSE_1	IF_4
0x4001459	    0x89be48150000	          mov dword [rsi + 0x1548], edi 	       300	mark.c	FUNCTION_6	ELSE_2
0x400145f	        0x48c1e004	                              shl rax, 4	       300	mark.c	FUNCTION_6	ELSE_2
0x4001463	    0x488d84015803	           lea rax, [rcx + rax + 0x358] 	       301	mark.c	FUNCTION_6	ELSE_2
0x400146b	              0xc3	                                     ret	       301	mark.c	FUNCTION_6	ELSE_2
0x400146c	         0xf1f4000	                         nop dword [rax]	       301	mark.c	FUNCTION_6	ELSE_2
0x4001470	          0x8d7aff	                      lea edi, [rdx - 1]	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x4001473	            0x39f8	                            cmp eax, edi	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x4001475	            0x75df	                           jne 0x4001456	       294	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x4001477	            0x31c0	                            xor eax, eax	       283	mark.c	FUNCTION_6	IF_1
0x4001479	              0xc3	                                     ret	       302	mark.c	FUNCTION_6	ELSE_2
0x400147a	    0x660f1f440000	                    nop word [rax + rax]	       302	mark.c	FUNCTION_6	ELSE_2
0x4001480	            0x85c0	                           test eax, eax	       288	mark.c	FUNCTION_6	IF_2	IF_3
0x4001482	      0xb800000000	                              mov eax, 0	       283	mark.c	FUNCTION_6	IF_1
0x4001487	            0x7417	                            je 0x40014a0	       288	mark.c	FUNCTION_6	IF_2	IF_3
0x4001489	            0x31ff	                            xor edi, edi	       290	mark.c	FUNCTION_6	IF_2
0x400148b	    0x488d84015803	           lea rax, [rcx + rax + 0x358] 	       301	mark.c	FUNCTION_6	ELSE_2
0x4001493	    0x89be48150000	          mov dword [rsi + 0x1548], edi 	       300	mark.c	FUNCTION_6	ELSE_2
0x4001499	              0xc3	                                     ret	       301	mark.c	FUNCTION_6	ELSE_2
0x400149a	    0x660f1f440000	                    nop word [rax + rax]	       301	mark.c	FUNCTION_6	ELSE_2
0x40014a0	            0xf3c3	                                     ret	       301	mark.c	FUNCTION_6	ELSE_2
copy_viminfo_marks	WHILE,6:DO,0:CALL,33:IF,31:ELSE,4:functions,1:FOR,0:SWITCH,1	507
0x4003e00	            0x4157	                                push r15	      1972	mark.c	FUNCTION_45
0x4003e02	            0x4156	                                push r14	      1972	mark.c	FUNCTION_45
0x4003e04	          0x4989fe	                            mov r14, rdi	      1972	mark.c	FUNCTION_45
0x4003e07	            0x4155	                                push r13	      1972	mark.c	FUNCTION_45
0x4003e09	            0x4154	                                push r12	      1972	mark.c	FUNCTION_45
0x4003e0b	          0x4989f7	                            mov r15, rsi	      1972	mark.c	FUNCTION_45
0x4003e0e	              0x55	                                push rbp	      1972	mark.c	FUNCTION_45
0x4003e0f	              0x53	                                push rbx	      1972	mark.c	FUNCTION_45
0x4003e10	          0x4989d4	                            mov r12, rdx	      1972	mark.c	FUNCTION_45
0x4003e13	            0x89cb	                            mov ebx, ecx	      1972	mark.c	FUNCTION_45
0x4003e15	    0x4881ec880000	                           sub rsp, 0x88	      1972	mark.c	FUNCTION_45
0x4003e1c	          0x488b2f	                    mov rbp, qword [rdi]	      1973	mark.c	FUNCTION_45
0x4003e1f	      0xbf00020000	                          mov edi, 0x200	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003e24	    0x64488b042528	                mov rax, qword fs:[0x28]	      1972	mark.c	FUNCTION_45
0x4003e2d	      0x4889442478	             mov qword [rsp + 0x78], rax	      1972	mark.c	FUNCTION_45
0x4003e32	            0x31c0	                            xor eax, eax	      1972	mark.c	FUNCTION_45
0x4003e34	      0x4889742408	                mov qword [rsp + 8], rsi	      1972	mark.c	FUNCTION_45
0x4003e39	      0x4489442444	             mov dword [rsp + 0x44], r8d	      1972	mark.c	FUNCTION_45
0x4003e3e	      0xe800000000	                          call 0x4003e43	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003e43	          0x4885c0	                           test rax, rax	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003e46	      0x4889442418	             mov qword [rsp + 0x18], rax	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003e4b	     0xf842c010000	                            je 0x4003f7d	      1990	mark.c	FUNCTION_45	IF_1	CALL_1
0x4003e51	          0x4d85ff	                           test r15, r15	      1994	mark.c	FUNCTION_45	IF_2
0x4003e54	          0xc60000	                       mov byte [rax], 0	      1992	mark.c	FUNCTION_45
0x4003e57	     0xf8443050000	                            je 0x40043a0	      1994	mark.c	FUNCTION_45	IF_2
0x4003e5d	        0x49633424	                 movsxd rsi, dword [r12]	      1994	mark.c	FUNCTION_45	IF_2
0x4003e61	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1988	mark.c	FUNCTION_45
0x4003e6a	            0x85f6	                           test esi, esi	      1994	mark.c	FUNCTION_45	IF_2
0x4003e6c	            0x7e21	                           jle 0x4003e8f	      1994	mark.c	FUNCTION_45	IF_2
0x4003e6e	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003e73	      0xb900000000	                              mov ecx, 0	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003e78	      0xba08000000	                              mov edx, 8	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003e7d	      0xe800000000	                          call 0x4003e82	      1997	mark.c	FUNCTION_45	IF_2	CALL_2
0x4003e82	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1999	mark.c	FUNCTION_45	IF_2
0x4003e87	          0x488b00	                    mov rax, qword [rax]	      1999	mark.c	FUNCTION_45	IF_2
0x4003e8a	      0x4889442420	             mov qword [rsp + 0x20], rax	      1999	mark.c	FUNCTION_45	IF_2
0x4003e8f	      0xbf27000000	                           mov edi, 0x27	      2011	mark.c	FUNCTION_45	CALL_5
0x4003e94	      0xe800000000	                          call 0x4003e99	      2011	mark.c	FUNCTION_45	CALL_5
0x4003e99	            0x85db	                           test ebx, ebx	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003e9b	          0x890424	                    mov dword [rsp], eax	      2011	mark.c	FUNCTION_45	CALL_5
0x4003e9e	     0xf8568060000	                           jne 0x400450c	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003ea4	          0x8b0c24	                    mov ecx, dword [rsp]	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003ea7	            0x85c9	                           test ecx, ecx	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003ea9	     0xf8ec4000000	                           jle 0x4003f73	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003eaf	      0xc644244300	                mov byte [rsp + 0x43], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003eb4	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1984	mark.c	FUNCTION_45
0x4003ebd	        0x488d4501	                      lea rax, [rbp + 1]	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003ec1	            0x31db	                            xor ebx, ebx	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003ec3	    0xc74424040000	                  mov dword [rsp + 4], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003ecb	      0x4889442430	             mov qword [rsp + 0x30], rax	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003ed0	        0x488d4502	                      lea rax, [rbp + 2]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003ed4	      0x4889442428	             mov qword [rsp + 0x28], rax	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4003ed9	         0xfb64500	                   movzx eax, byte [rbp]	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003edd	            0x3c3e	                            cmp al, 0x3e	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003edf	     0xf8410010000	                            je 0x4003ff5	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003ee5	            0x3c23	                            cmp al, 0x23	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003ee7	     0xf86bb000000	                           jbe 0x4003fa8	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003eed	            0x31ff	                            xor edi, edi	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003eef	      0xba05000000	                              mov edx, 5	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ef4	      0xbe00000000	                              mov esi, 0	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003ef9	      0xe800000000	                          call 0x4003efe	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003efe	          0x4889ea	                            mov rdx, rbp	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f01	          0x4889c6	                            mov rsi, rax	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f04	      0xbf00000000	                              mov edi, 0	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f09	      0xe800000000	                          call 0x4003f0e	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f0e	            0x85c0	                           test eax, eax	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f10	     0xf84a6000000	                            je 0x4003fbc	      2018	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x4003f16	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2203	mark.c	FUNCTION_45	IF_31
0x4003f1c	            0x7455	                            je 0x4003f73	      2203	mark.c	FUNCTION_45	IF_31
0x4003f1e	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f22	          0x8b0424	                    mov eax, dword [rsp]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f25	            0x39c1	                            cmp ecx, eax	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f27	            0x7d4a	                           jge 0x4003f73	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f29	        0x413b1c24	                    cmp ebx, dword [r12]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f2d	            0x7d44	                           jge 0x4003f73	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f2f	          0x4189c5	                           mov r13d, eax	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f32	          0x4863eb	                         movsxd rbp, ebx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f35	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f3a	          0x4101dd	                           add r13d, ebx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f3d	        0x48c1e503	                              shl rbp, 3	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f41	          0x4129cd	                           sub r13d, ecx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f44	            0xeb14	                           jmp 0x4003f5a	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f50	        0x4883c508	                              add rbp, 8	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f54	        0x41391c24	                    cmp dword [r12], ebx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f58	            0x7e19	                           jle 0x4003f73	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f5a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f5f	          0x83c301	                              add ebx, 1	      2207	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f62	          0x4c89f6	                            mov rsi, r14	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x4003f65	        0x488b3c28	              mov rdi, qword [rax + rbp]	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x4003f69	      0xe8c2caffff	             call sym.write_buffer_marks	      2208	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x4003f6e	          0x4139dd	                           cmp r13d, ebx	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f71	            0x75dd	                           jne 0x4003f50	      2205	mark.c	FUNCTION_45	IF_31	WHILE_6
0x4003f73	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2212	mark.c	FUNCTION_45	CALL_33
0x4003f78	      0xe800000000	                          call 0x4003f7d	      2212	mark.c	FUNCTION_45	CALL_33
0x4003f7d	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      2213	mark.c	FUNCTION_45
0x4003f82	    0x644833042528	                xor rax, qword fs:[0x28]	      2213	mark.c	FUNCTION_45
0x4003f8b	     0xf85eb060000	                           jne 0x400467c	      2213	mark.c	FUNCTION_45
0x4003f91	    0x4881c4880000	                           add rsp, 0x88	      2213	mark.c	FUNCTION_45
0x4003f98	              0x5b	                                 pop rbx	      2213	mark.c	FUNCTION_45
0x4003f99	              0x5d	                                 pop rbp	      2213	mark.c	FUNCTION_45
0x4003f9a	            0x415c	                                 pop r12	      2213	mark.c	FUNCTION_45
0x4003f9c	            0x415d	                                 pop r13	      2213	mark.c	FUNCTION_45
0x4003f9e	            0x415e	                                 pop r14	      2213	mark.c	FUNCTION_45
0x4003fa0	            0x415f	                                 pop r15	      2213	mark.c	FUNCTION_45
0x4003fa2	              0xc3	                                     ret	      2213	mark.c	FUNCTION_45
0x4003fa3	       0xf1f440000	                   nop dword [rax + rax]	      2213	mark.c	FUNCTION_45
0x4003fa8	    0x48ba00240000	                 movabs rdx, 0x800002400	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003fb2	        0x480fa3c2	                             bt rdx, rax	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003fb6	     0xf8331ffffff	                           jae 0x4003eed	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x4003fbc	        0x498b5608	                mov rdx, qword [r14 + 8]	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003fc0	      0xbe00020000	                          mov esi, 0x200	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003fc5	          0x4889ef	                            mov rdi, rbp	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003fc8	      0xe800000000	                          call 0x4003fcd	      2021	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x4003fcd	            0x85c0	                           test eax, eax	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fcf	     0xf8541ffffff	                           jne 0x4003f16	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fd5	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fd9	          0x390c24	                    cmp dword [rsp], ecx	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fdc	     0xf8ff7feffff	                            jg 0x4003ed9	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fe2	      0x807c244300	                cmp byte [rsp + 0x43], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fe7	            0x748a	                            je 0x4003f73	      2012	mark.c	FUNCTION_45	WHILE_1
0x4003fe9	         0xfb64500	                   movzx eax, byte [rbp]	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003fed	            0x3c3e	                            cmp al, 0x3e	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003fef	     0xf85f0feffff	                           jne 0x4003ee5	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5
0x4003ff5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003ffa	      0xe800000000	                          call 0x4003fff	      2030	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x4003fff	          0x492b06	                    sub rax, qword [r14]	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4004002	            0x31d2	                            xor edx, edx	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4004004	          0x4c89f7	                            mov rdi, r14	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4004007	          0x4889c6	                            mov rsi, rax	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x400400a	      0xe800000000	                          call 0x400400f	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x400400f	          0x4885c0	                           test rax, rax	      2032	mark.c	FUNCTION_45	WHILE_1	IF_8
0x4004012	          0x4989c5	                            mov r13, rax	      2031	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x4004015	            0x74be	                            je 0x4003fd5	      2032	mark.c	FUNCTION_45	WHILE_1	IF_8
0x4004017	          0x4889c7	                            mov rdi, rax	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x400401a	      0xe800000000	                          call 0x400401f	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x400401f	      0x4d8d7c0500	                    lea r15, [r13 + rax]	      2034	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x4004024	          0x4d39fd	                            cmp r13, r15	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004027	            0x7510	                           jne 0x4004039	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004029	            0xeb20	                           jmp 0x400404b	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x400402b	       0xf1f440000	                   nop dword [rax + rax]	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004030	        0x4983ef01	                              sub r15, 1	      2036	mark.c	FUNCTION_45	WHILE_1	WHILE_2
0x4004034	          0x4d39fd	                            cmp r13, r15	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004037	            0x7412	                            je 0x400404b	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004039	        0x410fb63f	                   movzx edi, byte [r15]	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x400403d	          0x4084ff	                           test dil, dil	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004040	            0x74ee	                            je 0x4004030	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004042	      0xe800000000	                          call 0x4004047	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004047	            0x85c0	                           test eax, eax	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x4004049	            0x75e5	                           jne 0x4004030	      2035	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x400404b	        0x41803f01	                       cmp byte [r15], 1	      2038	mark.c	FUNCTION_45	WHILE_1	IF_9
0x400404f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x4004054	        0x4983dfff	             sbb r15, 0xffffffffffffffff	      2038	mark.c	FUNCTION_45	WHILE_1	IF_9
0x4004058	          0x4885c0	                           test rax, rax	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x400405b	        0x41c60700	                       mov byte [r15], 0	      2039	mark.c	FUNCTION_45	WHILE_1
0x400405f	            0x7410	                            je 0x4004071	      2042	mark.c	FUNCTION_45	WHILE_1	IF_10
0x4004061	      0xbaffffffff	                     mov edx, 0xffffffff	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4004066	          0x4c89ee	                            mov rsi, r13	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4004069	          0x4889c7	                            mov rdi, rax	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x400406c	      0xe800000000	                          call 0x4004071	      2043	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x4004071	      0x807c244300	                cmp byte [rsp + 0x43], 0	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11
0x4004076	     0xf85e6030000	                           jne 0x4004462	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11
0x400407c	    0x4c8b3d000000	            mov r15, qword [0x04004083] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4004083	          0x4d85ff	                           test r15, r15	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4004086	            0x7451	                            je 0x40040d9	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4004088	        0x895c2410	             mov dword [rsp + 0x10], ebx	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x400408c	          0x4c89fb	                            mov rbx, r15	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x400408f	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4004094	         0xf1f4000	                         nop dword [rax]	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x4004098	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x400409f	          0x4885f6	                           test rsi, rsi	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x40040a2	            0x7428	                            je 0x40040cc	      2065	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x40040a4	            0x31ff	                            xor edi, edi	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x40040a6	    0x41b801000000	                              mov r8d, 1	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x40040ac	      0xb900020000	                          mov ecx, 0x200	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x40040b1	          0x4c89fa	                            mov rdx, r15	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x40040b4	      0xe800000000	                          call 0x40040b9	      2067	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x40040b9	          0x4c89fe	                            mov rsi, r15	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x40040bc	          0x4c89ef	                            mov rdi, r13	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x40040bf	      0xe800000000	                          call 0x40040c4	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x40040c4	            0x85c0	                           test eax, eax	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x40040c6	     0xf84a4020000	                            je 0x4004370	      2068	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x40040cc	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x40040d0	          0x4885db	                           test rbx, rbx	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x40040d3	            0x75c3	                           jne 0x4004098	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x40040d5	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x40040d9	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x40040df	            0x7410	                            je 0x40040f1	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x40040e1	          0x4c89f7	                            mov rdi, r14	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40040e4	      0xe800000000	                          call 0x40040e9	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40040e9	            0x85c0	                           test eax, eax	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40040eb	     0xf84df010000	                            je 0x40042d0	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40040f1	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x40040f6	      0xbe01000000	                              mov esi, 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x40040fb	      0xbf00000000	                              mov edi, 0	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004100	      0xba03000000	                              mov edx, 3	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004105	          0x4c89f9	                            mov rcx, r15	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004108	      0xe800000000	                          call 0x400410d	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400410d	          0x4c89ee	                            mov rsi, r13	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004110	          0x4c89ff	                            mov rdi, r15	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004113	      0xe800000000	                          call 0x4004118	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004118	      0x8344240401	                  add dword [rsp + 4], 1	      2135	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x400411d	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2136	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4004125	          0x4531ff	                          xor r15d, r15d	      2050	mark.c	FUNCTION_45	WHILE_1
0x4004128	          0x4c89ef	                            mov rdi, r13	      2139	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x400412b	      0xe800000000	                          call 0x4004130	      2139	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x4004130	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	      2142	mark.c	FUNCTION_45	WHILE_1
0x4004138	     0xf1f84000000	                   nop dword [rax + rax]	      2142	mark.c	FUNCTION_45	WHILE_1
0x4004140	          0x4c89f7	                            mov rdi, r14	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004143	      0xe800000000	                          call 0x4004148	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004148	            0x85c0	                           test eax, eax	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x400414a	     0xf8580000000	                           jne 0x40041d0	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004150	        0x807d0009	                       cmp byte [rbp], 9	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x4004154	     0xf8516010000	                           jne 0x4004270	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x400415a	          0x4585ff	                         test r15d, r15d	      2146	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x400415d	     0xf84bd000000	                            je 0x4004220	      2146	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x4004163	        0x807d0100	                   cmp byte [rbp + 1], 0	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4004167	            0x74d7	                            je 0x4004140	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4004169	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x400416e	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4004173	      0x488d542460	                   lea rdx, [rsp + 0x60]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4004178	            0x31c0	                            xor eax, eax	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x400417a	      0xbe00000000	                              mov esi, 0	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x400417f	      0xe800000000	                          call 0x4004184	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x4004184	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x4004188	        0x89442468	             mov dword [rsp + 0x68], eax	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x400418c	         0xfb64501	               movzx eax, byte [rbp + 1]	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004190	            0x3c2b	                            cmp al, 0x2b	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004192	     0xf8480020000	                            je 0x4004418	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004198	     0xf87a2000000	                            ja 0x4004240	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400419e	            0x3c22	                            cmp al, 0x22	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041a0	     0xf84da000000	                            je 0x4004280	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041a6	            0x3c2a	                            cmp al, 0x2a	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041a8	     0xf8532020000	                           jne 0x40043e0	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041ae	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041b3	    0x488b05000000	            mov rax, qword [0x040041ba] 	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041ba	          0x4c89f7	                            mov rdi, r14	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x40041bd	    0x488990500100	            mov qword [rax + 0x150], rdx	      2177	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40041c4	      0xe800000000	                          call 0x40041c9	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x40041c9	            0x85c0	                           test eax, eax	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x40041cb	            0x7483	                            je 0x4004150	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x40041cd	           0xf1f00	                         nop dword [rax]	      2144	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x40041d0	          0x4585ff	                         test r15d, r15d	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041d3	     0xf843dfdffff	                            je 0x4003f16	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041d9	    0x488b05000000	            mov rax, qword [0x040041e0] 	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041e0	          0x4885c0	                           test rax, rax	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041e3	     0xf842dfdffff	                            je 0x4003f16	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041e9	    0x488b15000000	            mov rdx, qword [0x040041f0] 	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041f0	            0xeb13	                           jmp 0x4004205	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041f2	    0x660f1f440000	                    nop word [rax + rax]	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041f8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041fc	          0x4885c0	                           test rax, rax	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x40041ff	     0xf8411fdffff	                            je 0x4003f16	      2193	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004205	        0x48395008	                cmp qword [rax + 8], rdx	      2195	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004209	            0x75ed	                           jne 0x40041f8	      2195	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x400420b	    0x8b8a98090000	           mov ecx, dword [rdx + 0x998] 	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004211	    0x898848150000	          mov dword [rax + 0x1548], ecx 	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004217	            0xebdf	                           jmp 0x40041f8	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004219	     0xf1f80000000	                         nop dword [rax]	      2196	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x4004220	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2184	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004224	            0x85d2	                           test edx, edx	      2184	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004226	     0xf8414ffffff	                            je 0x4004140	      2184	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x400422c	      0x488b742408	                mov rsi, qword [rsp + 8]	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004231	          0x4889ef	                            mov rdi, rbp	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004234	      0xe800000000	                          call 0x4004239	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004239	      0xe902ffffff	                           jmp 0x4004140	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x400423e	            0x6690	                                     nop	      2185	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x4004240	            0x3c2e	                            cmp al, 0x2e	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004242	            0x7464	                            je 0x40042a8	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004244	            0x3c5e	                            cmp al, 0x5e	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004246	     0xf8594010000	                           jne 0x40043e0	      2154	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400424c	    0x488b05000000	            mov rax, qword [0x04004253] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004253	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004258	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400425d	    0x4889b0380300	            mov qword [rax + 0x338], rsi	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004264	    0x4889b8400300	            mov qword [rax + 0x340], rdi	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400426b	      0xe9d0feffff	                           jmp 0x4004140	      2157	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004270	          0x4585ff	                         test r15d, r15d	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004273	     0xf845cfdffff	                            je 0x4003fd5	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004279	      0xe95bffffff	                           jmp 0x40041d9	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x400427e	            0x6690	                                     nop	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x4004280	    0x488b05000000	            mov rax, qword [0x04004287] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004287	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400428c	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004291	    0x4889b0280300	            mov qword [rax + 0x328], rsi	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004298	    0x4889b8300300	            mov qword [rax + 0x330], rdi	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400429f	      0xe99cfeffff	                           jmp 0x4004140	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042a4	         0xf1f4000	                         nop dword [rax]	      2156	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042a8	    0x488b05000000	            mov rax, qword [0x040042af] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042af	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042b4	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042b9	    0x4889b0480300	            mov qword [rax + 0x348], rsi	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042c0	    0x4889b8500300	            mov qword [rax + 0x350], rdi	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042c7	      0xe974feffff	                           jmp 0x4004140	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042cc	         0xf1f4000	                         nop dword [rax]	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x40042d0	        0x807d0009	                       cmp byte [rbp], 9	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40042d4	     0xf8517feffff	                           jne 0x40040f1	      2084	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40042da	        0x807d012a	                cmp byte [rbp + 1], 0x2a	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x40042de	     0xf8490020000	                            je 0x4004574	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x40042e4	          0x8b0c24	                    mov ecx, dword [rsp]	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042e7	        0x394c2404	                cmp dword [rsp + 4], ecx	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042eb	            0x7d74	                           jge 0x4004361	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042ed	          0x4c63fb	                         movsxd r15, ebx	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042f0	        0x49c1e703	                              shl r15, 3	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042f4	        0x41391c24	                    cmp dword [r12], ebx	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042f8	     0xf8e36020000	                           jle 0x4004534	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x40042fe	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004303	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004308	          0x4d89e5	                            mov r13, r12	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400430b	      0x4c89742448	             mov qword [rsp + 0x48], r14	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004310	          0x4189dc	                           mov r12d, ebx	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004313	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004317	          0x4c89fb	                            mov rbx, r15	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400431a	        0x448b3424	                   mov r14d, dword [rsp]	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400431e	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004323	            0xeb11	                           jmp 0x4004336	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004325	           0xf1f00	                         nop dword [rax]	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004328	        0x4883c308	                              add rbx, 8	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400432c	        0x45396500	                   cmp dword [r13], r12d	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004330	     0xf8ee5010000	                           jle 0x400451b	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004336	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      2114	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400433a	          0x4c89fe	                            mov rsi, r15	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x400433d	          0x83c501	                              add ebp, 1	      2117	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004340	        0x4183c401	                             add r12d, 1	      2115	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004344	        0x488b3c19	              mov rdi, qword [rcx + rbx]	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x4004348	      0xe8e3c6ffff	             call sym.write_buffer_marks	      2116	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x400434d	          0x4439f5	                           cmp ebp, r14d	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004350	            0x75d6	                           jne 0x4004328	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004352	          0x4489e3	                           mov ebx, r12d	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004355	          0x4d89ec	                            mov r12, r13	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004358	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x400435d	        0x896c2404	                mov dword [rsp + 4], ebp	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x4004361	          0x4c89ef	                            mov rdi, r13	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4004364	      0xe800000000	                          call 0x4004369	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4004369	      0xe9b0fbffff	                           jmp 0x4003f1e	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x400436e	            0x6690	                                     nop	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4004370	          0x4989df	                            mov r15, rbx	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4004373	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      2124	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x4004377	    0x418b87101200	          mov eax, dword [r15 + 0x1210] 	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x400437e	            0x85c0	                           test eax, eax	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4004380	     0xf8453fdffff	                            je 0x40040d9	      2075	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x4004386	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x400438e	          0x4531ff	                          xor r15d, r15d	      2050	mark.c	FUNCTION_45	WHILE_1
0x4004391	      0xe992fdffff	                           jmp 0x4004128	      2050	mark.c	FUNCTION_45	WHILE_1
0x4004396	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2050	mark.c	FUNCTION_45	WHILE_1
0x40043a0	      0xf64424440c	            test byte [rsp + 0x44], 0xc 	      2003	mark.c	FUNCTION_45	IF_3
0x40043a5	     0xf8515010000	                           jne 0x40044c0	      2003	mark.c	FUNCTION_45	IF_3
0x40043ab	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1984	mark.c	FUNCTION_45
0x40043b4	      0xbf27000000	                           mov edi, 0x27	      2011	mark.c	FUNCTION_45	CALL_5
0x40043b9	      0xe800000000	                          call 0x40043be	      2011	mark.c	FUNCTION_45	CALL_5
0x40043be	            0x85db	                           test ebx, ebx	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043c0	          0x890424	                    mov dword [rsp], eax	      2011	mark.c	FUNCTION_45	CALL_5
0x40043c3	     0xf85aafbffff	                           jne 0x4003f73	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043c9	      0xc644244301	                mov byte [rsp + 0x43], 1	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043ce	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043d7	      0xe9e1faffff	                           jmp 0x4003ebd	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043dc	         0xf1f4000	                         nop dword [rax]	      2012	mark.c	FUNCTION_45	WHILE_1
0x40043e0	          0x83e861	                           sub eax, 0x61	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043e3	          0x83f819	                           cmp eax, 0x19	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043e6	     0xf8754fdffff	                            ja 0x4004140	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043ec	            0x4898	                                    cdqe	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043ee	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043f3	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043f8	        0x4883c015	                           add rax, 0x15	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x40043fc	        0x48c1e004	                              shl rax, 4	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4004400	    0x480305000000	             add rax, qword [0x04004407]	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4004407	        0x48897008	                mov qword [rax + 8], rsi	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x400440b	        0x48897810	             mov qword [rax + 0x10], rdi	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x400440f	      0xe92cfdffff	                           jmp 0x4004140	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4004414	         0xf1f4000	                         nop dword [rax]	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x4004418	    0x488b0d000000	            mov rcx, qword [0x0400441f] 	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x400441f	    0x448ba9980900	          mov r13d, dword [rcx + 0x998] 	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4004426	        0x4183fd64	                          cmp r13d, 0x64	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x400442a	     0xf84b5000000	                            je 0x40044e5	      2163	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x4004430	        0x4183c501	                             add r13d, 1	      2169	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x4004434	    0x4489a9980900	           mov dword [rcx + 0x998], r13d	      2169	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x400443b	        0x418d45ff	                      lea eax, [r13 - 1]	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400443f	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004444	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004449	            0x4898	                                    cdqe	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400444b	        0x4883c035	                           add rax, 0x35	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400444f	        0x48c1e004	                              shl rax, 4	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004453	      0x4889740108	          mov qword [rcx + rax + 8], rsi	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004458	      0x48897c0110	       mov qword [rcx + rax + 0x10], rdi	      2171	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x400445d	      0xe9defcffff	                           jmp 0x4004140	      2173	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x4004462	      0xf644244402	               test byte [rsp + 0x44], 2	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4004467	     0xf8419ffffff	                            je 0x4004386	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x400446d	    0x488b05000000	            mov rax, qword [0x04004474] 	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4004474	          0x4531ff	                          xor r15d, r15d	      2050	mark.c	FUNCTION_45	WHILE_1
0x4004477	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x400447f	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4004486	          0x4885f6	                           test rsi, rsi	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x4004489	     0xf8499fcffff	                            je 0x4004128	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x400448f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x4004494	          0x803800	                       cmp byte [rax], 0	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x4004497	     0xf8483010000	                            je 0x4004620	      2055	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x400449d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x40044a2	          0x4c89ef	                            mov rdi, r13	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x40044a5	          0x4531ff	                          xor r15d, r15d	      2050	mark.c	FUNCTION_45	WHILE_1
0x40044a8	      0xe800000000	                          call 0x40044ad	      2057	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x40044ad	            0x85c0	                           test eax, eax	      2050	mark.c	FUNCTION_45	WHILE_1
0x40044af	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2050	mark.c	FUNCTION_45	WHILE_1
0x40044b7	        0x410f94c7	                               sete r15b	      2050	mark.c	FUNCTION_45	WHILE_1
0x40044bb	      0xe968fcffff	                           jmp 0x4004128	      2050	mark.c	FUNCTION_45	WHILE_1
0x40044c0	      0xe800000000	                          call 0x40044c5	      2005	mark.c	FUNCTION_45	IF_3	CALL_3
0x40044c5	          0x4885c0	                           test rax, rax	      2006	mark.c	FUNCTION_45	IF_3	IF_4
0x40044c8	      0x4889442438	             mov qword [rsp + 0x38], rax	      2005	mark.c	FUNCTION_45	IF_3	CALL_3
0x40044cd	     0xf84e1feffff	                            je 0x40043b4	      2006	mark.c	FUNCTION_45	IF_3	IF_4
0x40044d3	          0x4889c6	                            mov rsi, rax	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x40044d6	      0xbf39000000	                           mov edi, 0x39	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x40044db	      0xe800000000	                          call 0x40044e0	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x40044e0	      0xe9cffeffff	                           jmp 0x40043b4	      2007	mark.c	FUNCTION_45	IF_3	CALL_4
0x40044e5	    0x488db1680300	                  lea rsi, [rcx + 0x368]	        59	string3.h	FUNCTION_67	CALL_3
0x40044ec	    0x488db9580300	                  lea rdi, [rcx + 0x358]	        59	string3.h	FUNCTION_67	CALL_3
0x40044f3	      0xba30060000	                          mov edx, 0x630	        59	string3.h	FUNCTION_67	CALL_3
0x40044f8	      0x48894c2448	             mov qword [rsp + 0x48], rcx	        59	string3.h	FUNCTION_67	CALL_3
0x40044fd	      0xe800000000	                          call 0x4004502	        59	string3.h	FUNCTION_67	CALL_3
0x4004502	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	        59	string3.h	FUNCTION_67	CALL_3
0x4004507	      0xe92fffffff	                           jmp 0x400443b	        59	string3.h	FUNCTION_67	CALL_3
0x400450c	            0x31db	                            xor ebx, ebx	      1987	mark.c	FUNCTION_45
0x400450e	    0xc74424040000	                  mov dword [rsp + 4], 0	      1986	mark.c	FUNCTION_45
0x4004516	      0xe903faffff	                           jmp 0x4003f1e	      1986	mark.c	FUNCTION_45
0x400451b	          0x4489e3	                           mov ebx, r12d	      1986	mark.c	FUNCTION_45
0x400451e	        0x896c2404	                mov dword [rsp + 4], ebp	      1986	mark.c	FUNCTION_45
0x4004522	          0x4d89ec	                            mov r12, r13	      1986	mark.c	FUNCTION_45
0x4004525	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      1986	mark.c	FUNCTION_45
0x400452a	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      1986	mark.c	FUNCTION_45
0x400452f	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1986	mark.c	FUNCTION_45
0x4004534	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2119	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2
0x400453d	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004542	      0xba03000000	                              mov edx, 3	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004547	      0xbe01000000	                              mov esi, 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x400454c	      0xbf00000000	                              mov edi, 0	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004551	          0x4c89f9	                            mov rcx, r15	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004554	      0xe800000000	                          call 0x4004559	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x4004559	          0x4c89ee	                            mov rsi, r13	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400455c	          0x4c89ff	                            mov rdi, r15	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x400455f	      0xe800000000	                          call 0x4004564	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x4004564	          0x4c89fe	                            mov rsi, r15	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x4004567	          0x4889ef	                            mov rdi, rbp	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x400456a	      0xe800000000	                          call 0x400456f	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x400456f	      0xe9a4fbffff	                           jmp 0x4004118	      2133	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x4004574	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4004579	      0x488d542458	                   lea rdx, [rsp + 0x58]	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x400457e	            0x31c0	                            xor eax, eax	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4004580	      0xbe00000000	                              mov esi, 0	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x4004585	      0xe800000000	                          call 0x400458a	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x400458a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x400458f	    0x488b87500100	           mov rax, qword [rdi + 0x150] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x4004596	      0x4839442458	            cmp qword [rsp + 0x58], rax 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x400459b	            0x7d71	                           jge 0x400460e	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x400459d	          0x4863c3	                         movsxd rax, ebx	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045a0	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045a5	    0x4c8d3cc50800	                    lea r15, [rax*8 + 8]	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045ad	          0x4c89fd	                            mov rbp, r15	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045b0	          0x4d89f7	                            mov r15, r14	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045b3	          0x4d89ee	                            mov r14, r13	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045b6	          0x4d89e5	                            mov r13, r12	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045b9	          0x4189dc	                           mov r12d, ebx	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045bc	        0x8b5c2404	                mov ebx, dword [rsp + 4]	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045c0	            0xeb28	                           jmp 0x40045ea	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045c2	        0x4183c401	                             add r12d, 1	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40045c6	        0x453b6500	                   cmp r12d, dword [r13]	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40045ca	     0xf8489000000	                            je 0x4004659	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x40045d0	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045d4	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045d9	        0x488b3c2e	              mov rdi, qword [rsi + rbp]	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045dd	        0x4883c508	                              add rbp, 8	      2102	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045e1	    0x483987500100	           cmp qword [rdi + 0x150], rax 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045e8	            0x7e50	                           jle 0x400463a	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x40045ea	      0x488b742408	                mov rsi, qword [rsp + 8]	      2094	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x40045ef	          0x83c301	                              add ebx, 1	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x40045f2	      0xe839c4ffff	             call sym.write_buffer_marks	      2094	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x40045f7	          0x3b1c24	                    cmp ebx, dword [rsp]	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x40045fa	            0x7cc6	                            jl 0x40045c2	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x40045fc	        0x895c2404	                mov dword [rsp + 4], ebx	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4004600	          0x4489e3	                           mov ebx, r12d	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4004603	          0x4d89ec	                            mov r12, r13	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4004606	          0x4d89f5	                            mov r13, r14	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x4004609	      0xe953fdffff	                           jmp 0x4004361	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x400460e	          0x8b0c24	                    mov ecx, dword [rsp]	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4004611	        0x394c2404	                cmp dword [rsp + 4], ecx	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4004615	     0xf8c22ffffff	                            jl 0x400453d	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x400461b	      0xe941fdffff	                           jmp 0x4004361	      2122	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x4004620	    0x41b801000000	                              mov r8d, 1	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004626	      0xb900020000	                          mov ecx, 0x200	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400462b	          0x4889c2	                            mov rdx, rax	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400462e	            0x31ff	                            xor edi, edi	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004630	      0xe800000000	                          call 0x4004635	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004635	      0xe963feffff	                           jmp 0x400449d	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400463a	        0x895c2404	                mov dword [rsp + 4], ebx	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400463e	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004643	          0x4489e3	                           mov ebx, r12d	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004646	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400464b	          0x4d89ec	                            mov r12, r13	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400464e	          0x4d89f5	                            mov r13, r14	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004651	          0x4d89fe	                            mov r14, r15	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004654	      0xe9e4feffff	                           jmp 0x400453d	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004659	        0x895c2404	                mov dword [rsp + 4], ebx	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x400465d	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004662	          0x4489e3	                           mov ebx, r12d	      2056	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x4004665	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x400466e	          0x4d89ec	                            mov r12, r13	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4004671	          0x4d89f5	                            mov r13, r14	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4004674	          0x4d89fe	                            mov r14, r15	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x4004677	      0xe9c1feffff	                           jmp 0x400453d	      2099	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x400467c	      0xe800000000	                  call section_end..text	      2213	mark.c	FUNCTION_45
mark_adjust_nofold	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	2
0x4002420	          0x4531c0	                            xor r8d, r8d	      1036	mark.c	FUNCTION_25	CALL_1
0x4002423	      0xe948dcffff	            jmp sym.mark_adjust_internal	      1036	mark.c	FUNCTION_25	CALL_1
mark_adjust	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	2
0x4002410	    0x41b801000000	                              mov r8d, 1	      1026	mark.c	FUNCTION_24	CALL_1
0x4002416	      0xe955dcffff	            jmp sym.mark_adjust_internal	      1026	mark.c	FUNCTION_24	CALL_1
fmarks_check_names	WHILE,0:DO,0:CALL,3:IF,2:ELSE,0:functions,1:FOR,1:SWITCH,0	59
0x4001aa0	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	       567	mark.c	FUNCTION_12	IF_1
0x4001aa7	          0x4885f6	                           test rsi, rsi	       567	mark.c	FUNCTION_12	IF_1
0x4001aaa	     0xf84bb000000	                            je 0x4001b6b	       567	mark.c	FUNCTION_12	IF_1
0x4001ab0	            0x4156	                                push r14	       560	mark.c	FUNCTION_12
0x4001ab2	            0x4155	                                push r13	       560	mark.c	FUNCTION_12
0x4001ab4	            0x4154	                                push r12	       560	mark.c	FUNCTION_12
0x4001ab6	              0x55	                                push rbp	       560	mark.c	FUNCTION_12
0x4001ab7	          0x4989fc	                            mov r12, rdi	       560	mark.c	FUNCTION_12
0x4001aba	              0x53	                                push rbx	       560	mark.c	FUNCTION_12
0x4001abb	      0xe800000000	                          call 0x4001ac0	       570	mark.c	FUNCTION_12	CALL_1
0x4001ac0	          0x4885c0	                           test rax, rax	       571	mark.c	FUNCTION_12	IF_2
0x4001ac3	          0x4989c5	                            mov r13, rax	       570	mark.c	FUNCTION_12	CALL_1
0x4001ac6	     0xf8497000000	                            je 0x4001b63	       571	mark.c	FUNCTION_12	IF_2
0x4001acc	    0x4981c4b80000	                           add r12, 0xb8	       571	mark.c	FUNCTION_12	IF_2
0x4001ad3	      0xbb00000000	                              mov ebx, 0	       571	mark.c	FUNCTION_12	IF_2
0x4001ad8	     0xf1f84000000	                   nop dword [rax + rax]	       571	mark.c	FUNCTION_12	IF_2
0x4001ae0	        0x488d7308	                      lea rsi, [rbx + 8]	       575	mark.c	FUNCTION_12	CALL_2
0x4001ae4	          0x4889df	                            mov rdi, rbx	       575	mark.c	FUNCTION_12	CALL_2
0x4001ae7	          0x4c89e1	                            mov rcx, r12	       575	mark.c	FUNCTION_12	CALL_2
0x4001aea	          0x4c89ea	                            mov rdx, r13	       575	mark.c	FUNCTION_12	CALL_2
0x4001aed	        0x4883c328	                           add rbx, 0x28	       575	mark.c	FUNCTION_12	CALL_2
0x4001af1	      0xe84af1ffff	        call sym.fmarks_check_one.isra.0	       575	mark.c	FUNCTION_12	CALL_2
0x4001af6	    0x4881fb000000	                              cmp rbx, 0	       574	mark.c	FUNCTION_12	FOR_1
0x4001afd	            0x75e1	                           jne 0x4001ae0	       574	mark.c	FUNCTION_12	FOR_1
0x4001aff	    0x4c8b35000000	            mov r14, qword [0x04001b06] 	       578	mark.c	FUNCTION_12
0x4001b06	          0x4d85f6	                           test r14, r14	       578	mark.c	FUNCTION_12
0x4001b09	            0x7448	                            je 0x4001b53	       578	mark.c	FUNCTION_12
0x4001b0b	       0xf1f440000	                   nop dword [rax + rax]	       578	mark.c	FUNCTION_12
0x4001b10	    0x418b86401500	          mov eax, dword [r14 + 0x1540] 	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b17	            0x31ed	                            xor ebp, ebp	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b19	    0x498d9eb00500	                  lea rbx, [r14 + 0x5b0]	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b20	            0x85c0	                           test eax, eax	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b22	            0x7e26	                           jle 0x4001b4a	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b24	         0xf1f4000	                         nop dword [rax]	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b28	        0x488d7308	                      lea rsi, [rbx + 8]	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001b2c	          0x4889df	                            mov rdi, rbx	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001b2f	          0x4c89e1	                            mov rcx, r12	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001b32	          0x4c89ea	                            mov rdx, r13	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001b35	          0x83c501	                              add ebp, 1	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b38	        0x4883c328	                           add rbx, 0x28	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b3c	      0xe8fff0ffff	        call sym.fmarks_check_one.isra.0	       581	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x4001b41	    0x4139ae401500	          cmp dword [r14 + 0x1540], ebp 	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b48	            0x7fde	                            jg 0x4001b28	       580	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x4001b4a	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	       578	mark.c	FUNCTION_12
0x4001b4e	          0x4d85f6	                           test r14, r14	       578	mark.c	FUNCTION_12
0x4001b51	            0x75bd	                           jne 0x4001b10	       578	mark.c	FUNCTION_12
0x4001b53	              0x5b	                                 pop rbx	       586	mark.c	FUNCTION_12
0x4001b54	          0x4c89ef	                            mov rdi, r13	       585	mark.c	FUNCTION_12	CALL_3
0x4001b57	              0x5d	                                 pop rbp	       586	mark.c	FUNCTION_12
0x4001b58	            0x415c	                                 pop r12	       586	mark.c	FUNCTION_12
0x4001b5a	            0x415d	                                 pop r13	       586	mark.c	FUNCTION_12
0x4001b5c	            0x415e	                                 pop r14	       586	mark.c	FUNCTION_12
0x4001b5e	      0xe900000000	                           jmp 0x4001b63	       585	mark.c	FUNCTION_12	CALL_3
0x4001b63	              0x5b	                                 pop rbx	       586	mark.c	FUNCTION_12
0x4001b64	              0x5d	                                 pop rbp	       586	mark.c	FUNCTION_12
0x4001b65	            0x415c	                                 pop r12	       586	mark.c	FUNCTION_12
0x4001b67	            0x415d	                                 pop r13	       586	mark.c	FUNCTION_12
0x4001b69	            0x415e	                                 pop r14	       586	mark.c	FUNCTION_12
0x4001b6b	            0xf3c3	                                     ret	       586	mark.c	FUNCTION_12
check_mark	WHILE,0:DO,0:CALL,6:IF,4:ELSE,0:functions,0:FOR,0:SWITCH,0	42
0x4001b70	          0x4885ff	                           test rdi, rdi	       607	mark.c	FUNCTION_14	IF_1
0x4001b73	              0x53	                                push rbx	       606	mark.c	FUNCTION_14
0x4001b74	            0x7472	                            je 0x4001be8	       607	mark.c	FUNCTION_14	IF_1
0x4001b76	          0x488b07	                    mov rax, qword [rdi]	       612	mark.c	FUNCTION_14	IF_2
0x4001b79	        0x4883f800	                              cmp rax, 0	       612	mark.c	FUNCTION_14	IF_2
0x4001b7d	            0x7e41	                           jle 0x4001bc0	       612	mark.c	FUNCTION_14	IF_2
0x4001b7f	    0x488b15000000	            mov rdx, qword [0x04001b86] 	       620	mark.c	FUNCTION_14	IF_4
0x4001b86	      0xbb01000000	                              mov ebx, 1	       625	mark.c	FUNCTION_14
0x4001b8b	          0x483b02	                    cmp rax, qword [rdx]	       620	mark.c	FUNCTION_14	IF_4
0x4001b8e	            0x7f08	                            jg 0x4001b98	       620	mark.c	FUNCTION_14	IF_4
0x4001b90	            0x89d8	                            mov eax, ebx	       626	mark.c	FUNCTION_14
0x4001b92	              0x5b	                                 pop rbx	       626	mark.c	FUNCTION_14
0x4001b93	              0xc3	                                     ret	       626	mark.c	FUNCTION_14
0x4001b94	         0xf1f4000	                         nop dword [rax]	       626	mark.c	FUNCTION_14
0x4001b98	      0xba05000000	                              mov edx, 5	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001b9d	      0xbe00000000	                              mov esi, 0	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001ba2	            0x31ff	                            xor edi, edi	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001ba4	      0xe800000000	                          call 0x4001ba9	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001ba9	            0x31db	                            xor ebx, ebx	       623	mark.c	FUNCTION_14	IF_4
0x4001bab	          0x4889c7	                            mov rdi, rax	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001bae	      0xe800000000	                          call 0x4001bb3	       622	mark.c	FUNCTION_14	IF_4	CALL_6
0x4001bb3	            0x89d8	                            mov eax, ebx	       626	mark.c	FUNCTION_14
0x4001bb5	              0x5b	                                 pop rbx	       626	mark.c	FUNCTION_14
0x4001bb6	              0xc3	                                     ret	       626	mark.c	FUNCTION_14
0x4001bb7	    0x660f1f840000	                    nop word [rax + rax]	       626	mark.c	FUNCTION_14
0x4001bc0	      0xbb00000000	                              mov ebx, 0	       618	mark.c	FUNCTION_14	IF_2
0x4001bc5	            0x75c9	                           jne 0x4001b90	       616	mark.c	FUNCTION_14	IF_2	IF_3
0x4001bc7	            0x31ff	                            xor edi, edi	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001bc9	      0xba05000000	                              mov edx, 5	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001bce	      0xbe00000000	                              mov esi, 0	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001bd3	      0xe800000000	                          call 0x4001bd8	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001bd8	          0x4889c7	                            mov rdi, rax	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001bdb	      0xe800000000	                          call 0x4001be0	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001be0	            0xebae	                           jmp 0x4001b90	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001be2	    0x660f1f440000	                    nop word [rax + rax]	       617	mark.c	FUNCTION_14	IF_2	CALL_4
0x4001be8	      0xba05000000	                              mov edx, 5	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x4001bed	      0xbe00000000	                              mov esi, 0	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x4001bf2	            0x31db	                            xor ebx, ebx	       610	mark.c	FUNCTION_14	IF_1
0x4001bf4	      0xe800000000	                          call 0x4001bf9	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x4001bf9	          0x4889c7	                            mov rdi, rax	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x4001bfc	      0xe800000000	                          call 0x4001c01	       609	mark.c	FUNCTION_14	IF_1	CALL_2
0x4001c01	            0xeb8d	                           jmp 0x4001b90	       610	mark.c	FUNCTION_14	IF_1
getmark_buf	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	2
0x4001a70	            0x31c9	                            xor ecx, ecx	       319	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x4001a72	      0xe919fcffff	                jmp sym.getmark_buf_fnum	       319	mark.c	ELSE_2	FUNCTION_7	CALL_1
getmark	WHILE,0:DO,0:CALL,1:IF,0:ELSE,0:functions,0:FOR,0:SWITCH,0	5
0x4001a80	            0x89f2	                            mov edx, esi	       324	mark.c	FUNCTION_8
0x4001a82	            0x89fe	                            mov esi, edi	       325	mark.c	FUNCTION_8	CALL_1
0x4001a84	    0x488b3d000000	            mov rdi, qword [0x04001a8b] 	       325	mark.c	FUNCTION_8	CALL_1
0x4001a8b	            0x31c9	                            xor ecx, ecx	       325	mark.c	FUNCTION_8	CALL_1
0x4001a8d	      0xe9fefbffff	                jmp sym.getmark_buf_fnum	       325	mark.c	FUNCTION_8	CALL_1
finish_viminfo_marks	WHILE,0:DO,0:CALL,4:IF,2:ELSE,0:functions,0:FOR,2:SWITCH,0	44
0x4003240	              0x55	                                push rbp	      1483	mark.c	FUNCTION_35
0x4003241	              0x53	                                push rbx	      1483	mark.c	FUNCTION_35
0x4003242	        0x4883ec08	                              sub rsp, 8	      1483	mark.c	FUNCTION_35
0x4003246	    0x488b05000000	            mov rax, qword [0x0400324d] 	      1486	mark.c	FUNCTION_35	IF_1
0x400324d	          0x4885c0	                           test rax, rax	      1486	mark.c	FUNCTION_35	IF_1
0x4003250	            0x7448	                            je 0x400329a	      1486	mark.c	FUNCTION_35	IF_1
0x4003252	            0x31db	                            xor ebx, ebx	      1486	mark.c	FUNCTION_35	IF_1
0x4003254	            0xeb11	                           jmp 0x4003267	      1486	mark.c	FUNCTION_35	IF_1
0x4003256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1486	mark.c	FUNCTION_35	IF_1
0x4003260	    0x488b05000000	            mov rax, qword [0x04003267] 	      1486	mark.c	FUNCTION_35	IF_1
0x4003267	      0x488b7c1818	      mov rdi, qword [rax + rbx + 0x18] 	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x400326c	        0x4883c328	                           add rbx, 0x28	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4003270	      0xe800000000	                          call 0x4003275	      1489	mark.c	FUNCTION_35	IF_1	CALL_1
0x4003275	    0x4881fba00500	                          cmp rbx, 0x5a0	      1488	mark.c	FUNCTION_35	IF_1	FOR_1
0x400327c	            0x75e2	                           jne 0x4003260	      1488	mark.c	FUNCTION_35	IF_1	FOR_1
0x400327e	    0x488b3d000000	            mov rdi, qword [0x04003285] 	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4003285	          0x4885ff	                           test rdi, rdi	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x4003288	            0x7410	                            je 0x400329a	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x400328a	      0xe800000000	                          call 0x400328f	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x400328f	    0x48c705000000	               mov qword [0x0400329a], 0	      1490	mark.c	FUNCTION_35	IF_1	CALL_2
0x400329a	    0x488b3d000000	            mov rdi, qword [0x040032a1] 	      1493	mark.c	FUNCTION_35	IF_2
0x40032a1	          0x4885ff	                           test rdi, rdi	      1493	mark.c	FUNCTION_35	IF_2
0x40032a4	            0x7447	                            je 0x40032ed	      1493	mark.c	FUNCTION_35	IF_2
0x40032a6	    0x8b0500000000	            mov eax, dword [0x040032ac] 	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032ac	            0x85c0	                           test eax, eax	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032ae	            0x7e2d	                           jle 0x40032dd	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032b0	            0x31ed	                            xor ebp, ebp	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032b2	            0x31db	                            xor ebx, ebx	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032b4	         0xf1f4000	                         nop dword [rax]	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032b8	      0x488b7c2f18	      mov rdi, qword [rdi + rbp + 0x18] 	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x40032bd	          0x83c301	                              add ebx, 1	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032c0	        0x4883c528	                           add rbp, 0x28	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032c4	      0xe800000000	                          call 0x40032c9	      1496	mark.c	FUNCTION_35	IF_2	CALL_3
0x40032c9	    0x391d00000000	            cmp dword [0x040032cf], ebx 	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032cf	    0x488b3d000000	            mov rdi, qword [0x040032d6] 	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032d6	            0x7fe0	                            jg 0x40032b8	      1495	mark.c	FUNCTION_35	IF_2	FOR_2
0x40032d8	          0x4885ff	                           test rdi, rdi	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x40032db	            0x7410	                            je 0x40032ed	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x40032dd	      0xe800000000	                          call 0x40032e2	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x40032e2	    0x48c705000000	               mov qword [0x040032ed], 0	      1497	mark.c	FUNCTION_35	IF_2	CALL_4
0x40032ed	        0x4883c408	                              add rsp, 8	      1500	mark.c	FUNCTION_35
0x40032f1	              0x5b	                                 pop rbx	      1500	mark.c	FUNCTION_35
0x40032f2	              0x5d	                                 pop rbp	      1500	mark.c	FUNCTION_35
0x40032f3	              0xc3	                                     ret	      1500	mark.c	FUNCTION_35
ex_delmarks	WHILE,0:DO,0:CALL,16:IF,8:ELSE,7:functions,0:FOR,2:SWITCH,1	174
0x4001f30	            0x4157	                                push r15	       805	mark.c	FUNCTION_20
0x4001f32	            0x4156	                                push r14	       805	mark.c	FUNCTION_20
0x4001f34	            0x4155	                                push r13	       805	mark.c	FUNCTION_20
0x4001f36	            0x4154	                                push r12	       805	mark.c	FUNCTION_20
0x4001f38	              0x55	                                push rbp	       805	mark.c	FUNCTION_20
0x4001f39	              0x53	                                push rbx	       805	mark.c	FUNCTION_20
0x4001f3a	        0x4883ec18	                           sub rsp, 0x18	       805	mark.c	FUNCTION_20
0x4001f3e	          0x4c8b2f	                    mov r13, qword [rdi]	       813	mark.c	FUNCTION_20	IF_1
0x4001f41	      0x410fb64500	                   movzx eax, byte [r13]	       813	mark.c	FUNCTION_20	IF_1
0x4001f46	            0x84c0	                             test al, al	       813	mark.c	FUNCTION_20	IF_1
0x4001f48	            0x7532	                           jne 0x4001f7c	       813	mark.c	FUNCTION_20	IF_1
0x4001f4a	          0x8b4f34	            mov ecx, dword [rdi + 0x34] 	       813	mark.c	FUNCTION_20	IF_1
0x4001f4d	      0xba05000000	                              mov edx, 5	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f52	      0xbe00000000	                              mov esi, 0	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f57	            0x85c9	                           test ecx, ecx	       813	mark.c	FUNCTION_20	IF_1
0x4001f59	     0xf8586020000	                           jne 0x40021e5	       813	mark.c	FUNCTION_20	IF_1
0x4001f5f	            0x31ff	                            xor edi, edi	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f61	      0xe800000000	                          call 0x4001f66	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f66	        0x4883c418	                           add rsp, 0x18	       882	mark.c	FUNCTION_20
0x4001f6a	          0x4889c7	                            mov rdi, rax	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f6d	              0x5b	                                 pop rbx	       882	mark.c	FUNCTION_20
0x4001f6e	              0x5d	                                 pop rbp	       882	mark.c	FUNCTION_20
0x4001f6f	            0x415c	                                 pop r12	       882	mark.c	FUNCTION_20
0x4001f71	            0x415d	                                 pop r13	       882	mark.c	FUNCTION_20
0x4001f73	            0x415e	                                 pop r14	       882	mark.c	FUNCTION_20
0x4001f75	            0x415f	                                 pop r15	       882	mark.c	FUNCTION_20
0x4001f77	      0xe900000000	                           jmp 0x4001f7c	       819	mark.c	FUNCTION_20	ELSE_2	IF_3
0x4001f7c	          0x8b5734	            mov edx, dword [rdi + 0x34] 	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f7f	            0x85d2	                           test edx, edx	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f81	     0xf854f020000	                           jne 0x40021d6	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f87	    0x660f1f840000	                    nop word [rax + rax]	       816	mark.c	FUNCTION_20	ELSE_1	IF_2
0x4001f90	           0xfb6d0	                           movzx edx, al	       825	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x4001f93	          0x8d5ad0	                   lea ebx, [rdx - 0x30]	       826	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x4001f96	        0x448d729f	                  lea r14d, [rdx - 0x61]	       825	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x4001f9a	          0x83fb09	                              cmp ebx, 9	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001f9d	            0x7629	                           jbe 0x4001fc8	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001f9f	            0x89c1	                            mov ecx, eax	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001fa1	          0x83e1df	                     and ecx, 0xffffffdf	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001fa4	          0x83e941	                           sub ecx, 0x41	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001fa7	          0x80f919	                            cmp cl, 0x19	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001faa	            0x761c	                           jbe 0x4001fc8	       827	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x4001fac	          0x83e820	                           sub eax, 0x20	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001faf	            0x3c3e	                            cmp al, 0x3e	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001fb1	     0xf8717010000	                            ja 0x40020ce	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001fb7	           0xfb6c0	                           movzx eax, al	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001fba	    0xff24c5000000	                       jmp qword [rax*8]	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001fc1	     0xf1f80000000	                         nop dword [rax]	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4001fc8	      0x41807d012d	                cmp byte [r13 + 1], 0x2d	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001fcd	          0x4189d4	                           mov r12d, edx	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001fd0	     0xf84ba000000	                            je 0x4002090	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4001fd6	          0x4189d7	                           mov r15d, edx	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001fd9	      0x4c896c2408	                mov qword [rsp + 8], r13	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001fde	            0xeb27	                           jmp 0x4002007	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x4001fe0	      0x418d44249f	                   lea eax, [r12 - 0x61]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001fe5	        0x4183c401	                             add r12d, 1	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001fe9	            0x4898	                                    cdqe	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001feb	        0x4883c015	                           add rax, 0x15	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001fef	        0x48c1e004	                              shl rax, 4	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001ff3	    0x480305000000	             add rax, qword [0x04001ffa]	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4001ffa	          0x4539fc	                          cmp r12d, r15d	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4001ffd	    0x48c740080000	                  mov qword [rax + 8], 0	       851	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4002005	            0x7f63	                            jg 0x400206a	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4002007	        0x4183fe19	                          cmp r14d, 0x19	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x400200b	            0x76d3	                           jbe 0x4001fe0	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x400200d	      0x418d4424bf	                   lea eax, [r12 - 0x41]	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4002012	      0x458d6c24ea	                  lea r13d, [r12 - 0x16]	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x4002017	          0x83fb09	                              cmp ebx, 9	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x400201a	        0x440f47e8	                         cmova r13d, eax	       850	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x400201e	          0x4d63ed	                        movsxd r13, r13d	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4002021	      0x4b8d44ad00	                  lea rax, [r13 + r13*4]	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4002026	    0x488d2cc50000	                        lea rbp, [rax*8]	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x400202e	    0x48c704c50000	                    mov qword [rax*8], 0	       858	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x400203a	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x400203e	          0x4885ff	                           test rdi, rdi	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4002041	            0x740d	                            je 0x4002050	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4002043	      0xe800000000	                          call 0x4002048	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4002048	    0x48c745180000	               mov qword [rbp + 0x18], 0	       859	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x4002050	      0x4b8d44ad00	                  lea rax, [r13 + r13*4]	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4002055	        0x4183c401	                             add r12d, 1	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x4002059	          0x4539fc	                          cmp r12d, r15d	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x400205c	    0x48c704c50000	                    mov qword [rax*8], 0	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x4002068	            0x7e9d	                           jle 0x4002007	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x400206a	      0x488b442408	                mov rax, qword [rsp + 8]	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x400206f	        0x4c8d6801	                      lea r13, [rax + 1]	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4002073	         0xfb64001	               movzx eax, byte [rax + 1]	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4002077	            0x84c0	                             test al, al	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x4002079	     0xf8511ffffff	                           jne 0x4001f90	       823	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x400207f	        0x4883c418	                           add rsp, 0x18	       882	mark.c	FUNCTION_20
0x4002083	              0x5b	                                 pop rbx	       882	mark.c	FUNCTION_20
0x4002084	              0x5d	                                 pop rbp	       882	mark.c	FUNCTION_20
0x4002085	            0x415c	                                 pop r12	       882	mark.c	FUNCTION_20
0x4002087	            0x415d	                                 pop r13	       882	mark.c	FUNCTION_20
0x4002089	            0x415e	                                 pop r14	       882	mark.c	FUNCTION_20
0x400208b	            0x415f	                                 pop r15	       882	mark.c	FUNCTION_20
0x400208d	              0xc3	                                     ret	       882	mark.c	FUNCTION_20
0x400208e	            0x6690	                                     nop	       882	mark.c	FUNCTION_20
0x4002090	        0x4183fe19	                          cmp r14d, 0x19	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x4002094	      0x450fb67d02	              movzx r15d, byte [r13 + 2]	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x4002099	            0x7725	                            ja 0x40020c0	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x400209b	        0x418d479f	                   lea eax, [r15 - 0x61]	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x400209f	          0x83f819	                           cmp eax, 0x19	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x40020a2	            0x772a	                            ja 0x40020ce	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x40020a4	          0x4439fa	                           cmp edx, r15d	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020a7	            0x7f25	                            jg 0x40020ce	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020a9	        0x498d4502	                      lea rax, [r13 + 2]	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x40020ad	      0x4889442408	                mov qword [rsp + 8], rax	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x40020b2	      0xe950ffffff	                           jmp 0x4002007	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x40020b7	    0x660f1f840000	                    nop word [rax + rax]	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x40020c0	          0x83fb09	                              cmp ebx, 9	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x40020c3	            0x7733	                            ja 0x40020f8	       834	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x40020c5	        0x418d47d0	                   lea eax, [r15 - 0x30]	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020c9	          0x83f809	                              cmp eax, 9	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020cc	            0x76d6	                           jbe 0x40020a4	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020ce	      0xbe00000000	                              mov esi, 0	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020d3	            0x31ff	                            xor edi, edi	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020d5	      0xba05000000	                              mov edx, 5	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020da	      0xe800000000	                          call 0x40020df	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020df	        0x4883c418	                           add rsp, 0x18	       882	mark.c	FUNCTION_20
0x40020e3	          0x4c89ee	                            mov rsi, r13	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020e6	          0x4889c7	                            mov rdi, rax	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020e9	              0x5b	                                 pop rbx	       882	mark.c	FUNCTION_20
0x40020ea	              0x5d	                                 pop rbp	       882	mark.c	FUNCTION_20
0x40020eb	            0x415c	                                 pop r12	       882	mark.c	FUNCTION_20
0x40020ed	            0x415d	                                 pop r13	       882	mark.c	FUNCTION_20
0x40020ef	            0x415e	                                 pop r14	       882	mark.c	FUNCTION_20
0x40020f1	            0x415f	                                 pop r15	       882	mark.c	FUNCTION_20
0x40020f3	      0xe900000000	                           jmp 0x40020f8	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x40020f8	        0x418d47bf	                   lea eax, [r15 - 0x41]	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020fc	          0x83f819	                           cmp eax, 0x19	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x40020ff	            0x76a3	                           jbe 0x40020a4	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4002101	            0xebcb	                           jmp 0x40020ce	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4002103	       0xf1f440000	                   nop dword [rax + rax]	       837	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x4002108	      0x4c896c2408	                mov qword [rsp + 8], r13	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400210d	      0xe958ffffff	                           jmp 0x400206a	       867	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002112	    0x488b05000000	            mov rax, qword [0x04002119] 	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002119	      0x4c896c2408	                mov qword [rsp + 8], r13	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400211e	    0x48c780380300	              mov qword [rax + 0x338], 0	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002129	      0xe93cffffff	                           jmp 0x400206a	       870	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400212e	    0x488b05000000	            mov rax, qword [0x04002135] 	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002135	      0x4c896c2408	                mov qword [rsp + 8], r13	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400213a	    0x48c780001200	            mov qword [rax + 0x1200], 0 	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002145	      0xe920ffffff	                           jmp 0x400206a	       873	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400214a	    0x488b05000000	            mov rax, qword [0x04002151] 	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002151	      0x4c896c2408	                mov qword [rsp + 8], r13	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002156	    0x48c780e01100	            mov qword [rax + 0x11e0], 0 	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002161	      0xe904ffffff	                           jmp 0x400206a	       872	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002166	    0x488b05000000	            mov rax, qword [0x0400216d] 	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400216d	      0x4c896c2408	                mov qword [rsp + 8], r13	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002172	    0x48c780080300	              mov qword [rax + 0x308], 0	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400217d	      0xe9e8feffff	                           jmp 0x400206a	       875	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002182	    0x488b05000000	            mov rax, qword [0x04002189] 	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002189	      0x4c896c2408	                mov qword [rsp + 8], r13	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400218e	    0x48c780f80200	              mov qword [rax + 0x2f8], 0	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x4002199	      0xe9ccfeffff	                           jmp 0x400206a	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x400219e	    0x488b05000000	            mov rax, qword [0x040021a5] 	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021a5	      0x4c896c2408	                mov qword [rsp + 8], r13	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021aa	    0x48c780480300	              mov qword [rax + 0x348], 0	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021b5	      0xe9b0feffff	                           jmp 0x400206a	       871	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021ba	    0x488b05000000	            mov rax, qword [0x040021c1] 	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021c1	      0x4c896c2408	                mov qword [rsp + 8], r13	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021c6	    0x48c780280300	              mov qword [rax + 0x328], 0	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021d1	      0xe994feffff	                           jmp 0x400206a	       869	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x40021d6	      0xba05000000	                              mov edx, 5	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x40021db	      0xbe00000000	                              mov esi, 0	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x40021e0	      0xe97afdffff	                           jmp 0x4001f5f	       817	mark.c	FUNCTION_20	ELSE_1	IF_2
0x40021e5	    0x488b3d000000	            mov rdi, qword [0x040021ec] 	       815	mark.c	FUNCTION_20	CALL_1
0x40021ec	        0x4883c418	                           add rsp, 0x18	       882	mark.c	FUNCTION_20
0x40021f0	              0x5b	                                 pop rbx	       882	mark.c	FUNCTION_20
0x40021f1	              0x5d	                                 pop rbp	       882	mark.c	FUNCTION_20
0x40021f2	            0x415c	                                 pop r12	       882	mark.c	FUNCTION_20
0x40021f4	            0x415d	                                 pop r13	       882	mark.c	FUNCTION_20
0x40021f6	            0x415e	                                 pop r14	       882	mark.c	FUNCTION_20
0x40021f8	            0x415f	                                 pop r15	       882	mark.c	FUNCTION_20
0x40021fa	      0xe911faffff	                     jmp sym.clrallmarks	       815	mark.c	FUNCTION_20	CALL_1
