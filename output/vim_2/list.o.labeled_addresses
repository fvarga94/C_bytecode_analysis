list_free_contents	SWITCH,0:FOR,1:IF,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	20
0x4000040	              0x55	                                push rbp	       134	list.c	FUNCTION_8
0x4000041	              0x53	                                push rbx	       134	list.c	FUNCTION_8
0x4000042	        0x4883ec08	                              sub rsp, 8	       134	list.c	FUNCTION_8
0x4000046	          0x4889fd	                            mov rbp, rdi	       134	list.c	FUNCTION_8
0x4000049	          0x488b1f	                    mov rbx, qword [rdi]	       137	list.c	FUNCTION_8	FOR_1
0x400004c	          0x4885db	                           test rbx, rbx	       137	list.c	FUNCTION_8	FOR_1
0x400004f	            0x7421	                            je 0x4000072	       137	list.c	FUNCTION_8	FOR_1
0x4000051	          0x488b03	                    mov rax, qword [rbx]	       140	list.c	FUNCTION_8	FOR_1
0x4000054	        0x48894500	                    mov qword [rbp], rax	       140	list.c	FUNCTION_8	FOR_1
0x4000058	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x400005c	      0xe800000000	                          call 0x4000061	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000061	          0x4889df	                            mov rdi, rbx	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000064	      0xe800000000	                          call 0x4000069	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000069	        0x488b5d00	                    mov rbx, qword [rbp]	       137	list.c	FUNCTION_8	FOR_1
0x400006d	          0x4885db	                           test rbx, rbx	       137	list.c	FUNCTION_8	FOR_1
0x4000070	            0x75df	                           jne 0x4000051	       137	list.c	FUNCTION_8	FOR_1
0x4000072	        0x4883c408	                              add rsp, 8	       144	list.c	FUNCTION_8
0x4000076	              0x5b	                                 pop rbx	       144	list.c	FUNCTION_8
0x4000077	              0x5d	                                 pop rbp	       144	list.c	FUNCTION_8
0x4000078	              0xc3	                                     ret	       144	list.c	FUNCTION_8
list_idx_of_item	SWITCH,0:FOR,1:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,0	22
0x40004b2	          0x4885ff	                           test rdi, rdi	       409	list.c	FUNCTION_21	IF_1
0x40004b5	            0x7439	                            je 0x40004f0	       409	list.c	FUNCTION_21	IF_1
0x40004b7	          0x488b17	                    mov rdx, qword [rdi]	       412	list.c	FUNCTION_21	FOR_1
0x40004ba	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x40004bd	            0x741d	                            je 0x40004dc	       412	list.c	FUNCTION_21	FOR_1
0x40004bf	          0x4839f2	                            cmp rdx, rsi	       412	list.c	FUNCTION_21	FOR_1
0x40004c2	            0x7418	                            je 0x40004dc	       412	list.c	FUNCTION_21	FOR_1
0x40004c4	      0xb800000000	                              mov eax, 0	       412	list.c	FUNCTION_21	FOR_1
0x40004c9	        0x4883c001	                              add rax, 1	       413	list.c	FUNCTION_21	FOR_1
0x40004cd	          0x488b12	                    mov rdx, qword [rdx]	       412	list.c	FUNCTION_21	FOR_1
0x40004d0	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x40004d3	            0x740c	                            je 0x40004e1	       412	list.c	FUNCTION_21	FOR_1
0x40004d5	          0x4839d6	                            cmp rsi, rdx	       412	list.c	FUNCTION_21	FOR_1
0x40004d8	            0x75ef	                           jne 0x40004c9	       412	list.c	FUNCTION_21	FOR_1
0x40004da	            0xeb05	                           jmp 0x40004e1	       412	list.c	FUNCTION_21	FOR_1
0x40004dc	      0xb800000000	                              mov eax, 0	       411	list.c	FUNCTION_21
0x40004e1	          0x4885d2	                           test rdx, rdx	       414	list.c	FUNCTION_21	IF_2
0x40004e4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       414	list.c	FUNCTION_21	IF_2
0x40004eb	        0x480f44c2	                          cmove rax, rdx	       414	list.c	FUNCTION_21	IF_2
0x40004ef	              0xc3	                                     ret	       414	list.c	FUNCTION_21	IF_2
0x40004f0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       410	list.c	FUNCTION_21	IF_1
0x40004f7	              0xc3	                                     ret	       417	list.c	FUNCTION_21
list_insert	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,2:WHILE,0:CALL,1	18
0x40006b6	          0x4885d2	                           test rdx, rdx	       560	list.c	FUNCTION_29	IF_1
0x40006b9	            0x7507	                           jne 0x40006c2	       560	list.c	FUNCTION_29	IF_1
0x40006bb	      0xe800000000	                          call 0x40006c0	       562	list.c	FUNCTION_29	CALL_1
0x40006c0	            0xf3c3	                                     ret	       562	list.c	FUNCTION_29	CALL_1
0x40006c2	        0x488b4208	                mov rax, qword [rdx + 8]	       566	list.c	FUNCTION_29	ELSE_1
0x40006c6	        0x48894608	                mov qword [rsi + 8], rax	       566	list.c	FUNCTION_29	ELSE_1
0x40006ca	          0x488916	                    mov qword [rsi], rdx	       567	list.c	FUNCTION_29	ELSE_1
0x40006cd	        0x488b4208	                mov rax, qword [rdx + 8]	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006d1	          0x4885c0	                           test rax, rax	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006d4	            0x7509	                           jne 0x40006df	       568	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006d6	          0x488937	                    mov qword [rdi], rsi	       570	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006d9	        0x83474001	               add dword [rdi + 0x40], 1	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006dd	            0xeb0b	                           jmp 0x40006ea	       571	list.c	FUNCTION_29	ELSE_1	IF_2
0x40006df	          0x488930	                    mov qword [rax], rsi	       575	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x40006e2	    0x48c747180000	               mov qword [rdi + 0x18], 0	       576	list.c	FUNCTION_29	ELSE_1	ELSE_2
0x40006ea	        0x48897208	                mov qword [rdx + 8], rsi	       578	list.c	FUNCTION_29	ELSE_1
0x40006ee	        0x83473c01	               add dword [rdi + 0x3c], 1	       579	list.c	FUNCTION_29	ELSE_1
0x40006f2	              0xc3	                                     ret	       579	list.c	FUNCTION_29	ELSE_1
list_free_nonref	SWITCH,0:FOR,1:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	26
0x4000191	              0x55	                                push rbp	       153	list.c	FUNCTION_9
0x4000192	              0x53	                                push rbx	       153	list.c	FUNCTION_9
0x4000193	        0x4883ec08	                              sub rsp, 8	       153	list.c	FUNCTION_9
0x4000197	    0x488b1d000000	            mov rbx, qword [0x0400019e] 	       157	list.c	FUNCTION_9	FOR_1
0x400019e	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x40001a1	            0x7433	                            je 0x40001d6	       157	list.c	FUNCTION_9	FOR_1
0x40001a3	            0x89fd	                            mov ebp, edi	       157	list.c	FUNCTION_9	FOR_1
0x40001a5	      0xb800000000	                              mov eax, 0	       157	list.c	FUNCTION_9	FOR_1
0x40001aa	            0x89ea	                            mov edx, ebp	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40001ac	          0x335344	             xor edx, dword [rbx + 0x44]	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40001af	    0xf7c2feffffff	                    test edx, 0xfffffffe	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40001b5	            0x7414	                            je 0x40001cb	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x40001b7	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40001bc	            0x750d	                           jne 0x40001cb	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x40001be	          0x4889df	                            mov rdi, rbx	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40001c1	      0xe87afeffff	             call sym.list_free_contents	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x40001c6	      0xb801000000	                              mov eax, 1	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x40001cb	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	       157	list.c	FUNCTION_9	FOR_1
0x40001cf	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x40001d2	            0x75d6	                           jne 0x40001aa	       157	list.c	FUNCTION_9	FOR_1
0x40001d4	            0xeb05	                           jmp 0x40001db	       157	list.c	FUNCTION_9	FOR_1
0x40001d6	      0xb800000000	                              mov eax, 0	       155	list.c	FUNCTION_9
0x40001db	        0x4883c408	                              add rsp, 8	       168	list.c	FUNCTION_9
0x40001df	              0x5b	                                 pop rbx	       168	list.c	FUNCTION_9
0x40001e0	              0x5d	                                 pop rbp	       168	list.c	FUNCTION_9
0x40001e1	              0xc3	                                     ret	       168	list.c	FUNCTION_9
list_free	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	9
0x4000221	    0x833d00000000	               cmp dword [0x04000228], 0	       206	list.c	FUNCTION_12	IF_1
0x4000228	            0x7512	                           jne 0x400023c	       206	list.c	FUNCTION_12	IF_1
0x400022a	              0x53	                                push rbx	       205	list.c	FUNCTION_12
0x400022b	          0x4889fb	                            mov rbx, rdi	       205	list.c	FUNCTION_12
0x400022e	      0xe80dfeffff	             call sym.list_free_contents	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x4000233	          0x4889df	                            mov rdi, rbx	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x4000236	      0xe83efeffff	                 call sym.list_free_list	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x400023b	              0x5b	                                 pop rbx	       211	list.c	FUNCTION_12
0x400023c	            0xf3c3	                                     ret	       211	list.c	FUNCTION_12
list_find	SWITCH,0:FOR,0:IF,7:functions,0:DO,0:ELSE,4:WHILE,2:CALL,0	78
0x4000350	          0x4885ff	                           test rdi, rdi	       292	list.c	FUNCTION_18	IF_1
0x4000353	     0xf84c3000000	                            je 0x400041c	       292	list.c	FUNCTION_18	IF_1
0x4000359	          0x4885f6	                           test rsi, rsi	       296	list.c	FUNCTION_18	IF_2
0x400035c	            0x790d	                           jns 0x400036b	       296	list.c	FUNCTION_18	IF_2
0x400035e	        0x4863473c	         movsxd rax, dword [rdi + 0x3c] 	       297	list.c	FUNCTION_18	IF_2
0x4000362	          0x4801c6	                            add rsi, rax	       300	list.c	FUNCTION_18	IF_3
0x4000365	     0xf88b7000000	                            js 0x4000422	       300	list.c	FUNCTION_18	IF_3
0x400036b	        0x448b473c	            mov r8d, dword [rdi + 0x3c] 	       300	list.c	FUNCTION_18	IF_3
0x400036f	          0x4963c0	                         movsxd rax, r8d	       300	list.c	FUNCTION_18	IF_3
0x4000372	          0x4839f0	                            cmp rax, rsi	       300	list.c	FUNCTION_18	IF_3
0x4000375	     0xf8ead000000	                           jle 0x4000428	       300	list.c	FUNCTION_18	IF_3
0x400037b	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       304	list.c	FUNCTION_18	IF_4
0x400037f	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x4000382	            0x7449	                            je 0x40003cd	       304	list.c	FUNCTION_18	IF_4
0x4000384	          0x8b5740	            mov edx, dword [rdi + 0x40] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000387	            0x89d1	                            mov ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000389	          0xc1e91f	                           shr ecx, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400038c	             0x1d1	                            add ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400038e	            0xd1f9	                              sar ecx, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000390	          0x4863c9	                         movsxd rcx, ecx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000393	          0x4839f1	                            cmp rcx, rsi	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000396	            0x7e08	                           jle 0x40003a0	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000398	          0x488b07	                    mov rax, qword [rdi]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x400039b	      0xe98e000000	                           jmp 0x400042e	       309	list.c	FUNCTION_18	IF_4	IF_5
0x40003a0	        0x418d0c10	                     lea ecx, [r8 + rdx]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003a4	          0x4189c9	                            mov r9d, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003a7	        0x41c1e91f	                           shr r9d, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003ab	          0x4401c9	                            add ecx, r9d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003ae	            0xd1f9	                              sar ecx, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003b0	          0x4863c9	                         movsxd rcx, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003b3	          0x4863d2	                         movsxd rdx, edx	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x40003b6	          0x4839f1	                            cmp rcx, rsi	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003b9	            0x7d0b	                           jge 0x40003c6	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003bb	        0x488b4708	                mov rax, qword [rdi + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003bf	        0x418d50ff	                       lea edx, [r8 - 1]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003c3	          0x4863d2	                         movsxd rdx, edx	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40003c6	          0x4839f2	                            cmp rdx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x40003c9	            0x7c26	                            jl 0x40003f1	       341	list.c	FUNCTION_18	WHILE_1
0x40003cb	            0xeb30	                           jmp 0x40003fd	       341	list.c	FUNCTION_18	WHILE_1
0x40003cd	          0x4489c0	                            mov eax, r8d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003d0	          0xc1e81f	                           shr eax, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003d3	          0x4401c0	                            add eax, r8d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003d6	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003d8	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003da	          0x4839f0	                            cmp rax, rsi	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003dd	            0x7e05	                           jle 0x40003e4	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003df	          0x488b07	                    mov rax, qword [rdi]	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003e2	            0xeb4a	                           jmp 0x400042e	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x40003e4	        0x488b4708	                mov rax, qword [rdi + 8]	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40003e8	        0x418d50ff	                       lea edx, [r8 - 1]	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40003ec	          0x4863d2	                         movsxd rdx, edx	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40003ef	            0xebd5	                           jmp 0x40003c6	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x40003f1	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x40003f4	        0x4883c201	                              add rdx, 1	       345	list.c	FUNCTION_18	WHILE_1
0x40003f8	          0x4839f2	                            cmp rdx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x40003fb	            0x7cf4	                            jl 0x40003f1	       341	list.c	FUNCTION_18	WHILE_1
0x40003fd	          0x4839f2	                            cmp rdx, rsi	       347	list.c	FUNCTION_18	WHILE_2
0x4000400	            0x7e0f	                           jle 0x4000411	       347	list.c	FUNCTION_18	WHILE_2
0x4000402	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x4000406	        0x4883ea01	                              sub rdx, 1	       351	list.c	FUNCTION_18	WHILE_2
0x400040a	          0x4839f2	                            cmp rdx, rsi	       347	list.c	FUNCTION_18	WHILE_2
0x400040d	            0x75f3	                           jne 0x4000402	       347	list.c	FUNCTION_18	WHILE_2
0x400040f	            0xeb03	                           jmp 0x4000414	       347	list.c	FUNCTION_18	WHILE_2
0x4000411	          0x4889d6	                            mov rsi, rdx	       347	list.c	FUNCTION_18	WHILE_2
0x4000414	          0x897740	             mov dword [rdi + 0x40], esi	       355	list.c	FUNCTION_18
0x4000417	        0x48894718	             mov qword [rdi + 0x18], rax	       356	list.c	FUNCTION_18
0x400041b	              0xc3	                                     ret	       358	list.c	FUNCTION_18
0x400041c	      0xb800000000	                              mov eax, 0	       293	list.c	FUNCTION_18	IF_1
0x4000421	              0xc3	                                     ret	       293	list.c	FUNCTION_18	IF_1
0x4000422	      0xb800000000	                              mov eax, 0	       301	list.c	FUNCTION_18	IF_3
0x4000427	              0xc3	                                     ret	       301	list.c	FUNCTION_18	IF_3
0x4000428	      0xb800000000	                              mov eax, 0	       301	list.c	FUNCTION_18	IF_3
0x400042d	              0xc3	                                     ret	       301	list.c	FUNCTION_18	IF_3
0x400042e	      0xba00000000	                              mov edx, 0	       341	list.c	FUNCTION_18	WHILE_1
0x4000433	          0x4885f6	                           test rsi, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x4000436	            0x7fb9	                            jg 0x40003f1	       341	list.c	FUNCTION_18	WHILE_1
0x4000438	      0xbe00000000	                              mov esi, 0	       341	list.c	FUNCTION_18	WHILE_1
0x400043d	            0xebd5	                           jmp 0x4000414	       341	list.c	FUNCTION_18	WHILE_1
list_append_list	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	21
0x40005af	              0x55	                                push rbp	       485	list.c	FUNCTION_25
0x40005b0	              0x53	                                push rbx	       485	list.c	FUNCTION_25
0x40005b1	        0x4883ec08	                              sub rsp, 8	       485	list.c	FUNCTION_25
0x40005b5	          0x4889fd	                            mov rbp, rdi	       485	list.c	FUNCTION_25
0x40005b8	          0x4889f3	                            mov rbx, rsi	       485	list.c	FUNCTION_25
0x40005bb	      0xe800000000	                          call 0x40005c0	       486	list.c	FUNCTION_25	CALL_1
0x40005c0	          0x4889c6	                            mov rsi, rax	       486	list.c	FUNCTION_25	CALL_1
0x40005c3	      0xb800000000	                              mov eax, 0	       489	list.c	FUNCTION_25	IF_1
0x40005c8	          0x4885f6	                           test rsi, rsi	       488	list.c	FUNCTION_25	IF_1
0x40005cb	            0x7420	                            je 0x40005ed	       488	list.c	FUNCTION_25	IF_1
0x40005cd	    0xc74610050000	               mov dword [rsi + 0x10], 5	       490	list.c	FUNCTION_25
0x40005d4	        0xc6461400	                mov byte [rsi + 0x14], 0	       491	list.c	FUNCTION_25
0x40005d8	        0x48895e18	             mov qword [rsi + 0x18], rbx	       492	list.c	FUNCTION_25
0x40005dc	          0x4889ef	                            mov rdi, rbp	       493	list.c	FUNCTION_25	CALL_2
0x40005df	      0xe800000000	                          call 0x40005e4	       493	list.c	FUNCTION_25	CALL_2
0x40005e4	        0x83433801	               add dword [rbx + 0x38], 1	       494	list.c	FUNCTION_25
0x40005e8	      0xb801000000	                              mov eax, 1	       495	list.c	FUNCTION_25
0x40005ed	        0x4883c408	                              add rsp, 8	       496	list.c	FUNCTION_25
0x40005f1	              0x5b	                                 pop rbx	       496	list.c	FUNCTION_25
0x40005f2	              0x5d	                                 pop rbp	       496	list.c	FUNCTION_25
0x40005f3	              0xc3	                                     ret	       496	list.c	FUNCTION_25
list_free_items	SWITCH,0:FOR,1:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	22
0x40001e2	              0x55	                                push rbp	       186	list.c	FUNCTION_11
0x40001e3	              0x53	                                push rbx	       186	list.c	FUNCTION_11
0x40001e4	        0x4883ec08	                              sub rsp, 8	       186	list.c	FUNCTION_11
0x40001e8	            0x89fd	                            mov ebp, edi	       186	list.c	FUNCTION_11
0x40001ea	    0x488b3d000000	            mov rdi, qword [0x040001f1] 	       189	list.c	FUNCTION_11	FOR_1
0x40001f1	          0x4885ff	                           test rdi, rdi	       189	list.c	FUNCTION_11	FOR_1
0x40001f4	            0x7424	                            je 0x400021a	       189	list.c	FUNCTION_11	FOR_1
0x40001f6	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       191	list.c	FUNCTION_11	FOR_1
0x40001fa	            0x89e8	                            mov eax, ebp	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40001fc	          0x334744	             xor eax, dword [rdi + 0x44]	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40001ff	      0xa9feffffff	                    test eax, 0xfffffffe	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x4000204	            0x740c	                            je 0x4000212	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x4000206	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x400020b	            0x7505	                           jne 0x4000212	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x400020d	      0xe867feffff	                 call sym.list_free_list	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000212	          0x4889df	                            mov rdi, rbx	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000215	          0x4885db	                           test rbx, rbx	       189	list.c	FUNCTION_11	FOR_1
0x4000218	            0x75dc	                           jne 0x40001f6	       189	list.c	FUNCTION_11	FOR_1
0x400021a	        0x4883c408	                              add rsp, 8	       201	list.c	FUNCTION_11
0x400021e	              0x5b	                                 pop rbx	       201	list.c	FUNCTION_11
0x400021f	              0x5d	                                 pop rbp	       201	list.c	FUNCTION_11
0x4000220	              0xc3	                                     ret	       201	list.c	FUNCTION_11
list_alloc	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	14
0x4000118	        0x4883ec08	                              sub rsp, 8	        72	list.c	FUNCTION_4
0x400011c	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x4000121	      0xe800000000	                          call 0x4000126	        75	list.c	FUNCTION_4	CALL_1
0x4000126	          0x4885c0	                           test rax, rax	        76	list.c	FUNCTION_4	IF_1
0x4000129	            0x7423	                            je 0x400014e	        76	list.c	FUNCTION_4	IF_1
0x400012b	    0x488b15000000	            mov rdx, qword [0x04000132] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000132	          0x4885d2	                           test rdx, rdx	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000135	            0x7404	                            je 0x400013b	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000137	        0x48894230	             mov qword [rdx + 0x30], rax	        80	list.c	FUNCTION_4	IF_1	IF_2
0x400013b	    0x48c740300000	               mov qword [rax + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x4000143	        0x48895028	             mov qword [rax + 0x28], rdx	        82	list.c	FUNCTION_4	IF_1
0x4000147	    0x488905000000	            mov qword [0x0400014e], rax 	        83	list.c	FUNCTION_4	IF_1
0x400014e	        0x4883c408	                              add rsp, 8	        86	list.c	FUNCTION_4
0x4000152	              0xc3	                                     ret	        86	list.c	FUNCTION_4
rettv_list_alloc	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	13
0x4000168	              0x53	                                push rbx	        94	list.c	FUNCTION_5
0x4000169	          0x4889fb	                            mov rbx, rdi	        94	list.c	FUNCTION_5
0x400016c	      0xe800000000	                          call 0x4000171	        95	list.c	FUNCTION_5	CALL_1
0x4000171	          0x4889c6	                            mov rsi, rax	        95	list.c	FUNCTION_5	CALL_1
0x4000174	      0xb800000000	                              mov eax, 0	        98	list.c	FUNCTION_5	IF_1
0x4000179	          0x4885f6	                           test rsi, rsi	        97	list.c	FUNCTION_5	IF_1
0x400017c	            0x7411	                            je 0x400018f	        97	list.c	FUNCTION_5	IF_1
0x400017e	        0xc6430400	                   mov byte [rbx + 4], 0	       100	list.c	FUNCTION_5
0x4000182	          0x4889df	                            mov rdi, rbx	       101	list.c	FUNCTION_5	CALL_2
0x4000185	      0xe800000000	                          call 0x400018a	       101	list.c	FUNCTION_5	CALL_2
0x400018a	      0xb801000000	                              mov eax, 1	       102	list.c	FUNCTION_5
0x400018f	              0x5b	                                 pop rbx	       103	list.c	FUNCTION_5
0x4000190	              0xc3	                                     ret	       103	list.c	FUNCTION_5
list_free_list	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,1:WHILE,0:CALL,1	17
0x4000079	        0x4883ec08	                              sub rsp, 8	       172	list.c	FUNCTION_10
0x400007d	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x4000081	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x4000084	            0x750d	                           jne 0x4000093	       174	list.c	FUNCTION_10	IF_1
0x4000086	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       175	list.c	FUNCTION_10	IF_1
0x400008a	    0x488905000000	            mov qword [0x04000091], rax 	       175	list.c	FUNCTION_10	IF_1
0x4000091	            0xeb08	                           jmp 0x400009b	       175	list.c	FUNCTION_10	IF_1
0x4000093	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4000097	        0x48895028	             mov qword [rax + 0x28], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x400009b	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       178	list.c	FUNCTION_10	IF_2
0x400009f	          0x4885c0	                           test rax, rax	       178	list.c	FUNCTION_10	IF_2
0x40000a2	            0x7408	                            je 0x40000ac	       178	list.c	FUNCTION_10	IF_2
0x40000a4	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	       179	list.c	FUNCTION_10	IF_2
0x40000a8	        0x48895030	             mov qword [rax + 0x30], rdx	       179	list.c	FUNCTION_10	IF_2
0x40000ac	      0xe800000000	                          call 0x40000b1	       181	list.c	FUNCTION_10	CALL_1
0x40000b1	        0x4883c408	                              add rsp, 8	       182	list.c	FUNCTION_10
0x40000b5	              0xc3	                                     ret	       182	list.c	FUNCTION_10
list_equal	SWITCH,0:FOR,1:IF,4:functions,0:DO,0:ELSE,0:WHILE,0:CALL,3	64
0x4000299	            0x4155	                                push r13	       263	list.c	FUNCTION_17
0x400029b	            0x4154	                                push r12	       263	list.c	FUNCTION_17
0x400029d	              0x55	                                push rbp	       263	list.c	FUNCTION_17
0x400029e	              0x53	                                push rbx	       263	list.c	FUNCTION_17
0x400029f	        0x4883ec08	                              sub rsp, 8	       263	list.c	FUNCTION_17
0x40002a3	          0x4885ff	                           test rdi, rdi	       266	list.c	FUNCTION_17	IF_1
0x40002a6	            0x747f	                            je 0x4000327	       266	list.c	FUNCTION_17	IF_1
0x40002a8	          0x4885f6	                           test rsi, rsi	       266	list.c	FUNCTION_17	IF_1
0x40002ab	            0x747a	                            je 0x4000327	       266	list.c	FUNCTION_17	IF_1
0x40002ad	          0x4839f7	                            cmp rdi, rsi	       268	list.c	FUNCTION_17	IF_2
0x40002b0	            0x747c	                            je 0x400032e	       268	list.c	FUNCTION_17	IF_2
0x40002b2	          0x4885ff	                           test rdi, rdi	       249	list.c	FUNCTION_16	IF_1
0x40002b5	            0x747e	                            je 0x4000335	       249	list.c	FUNCTION_16	IF_1
0x40002b7	        0x4c63473c	          movsxd r8, dword [rdi + 0x3c] 	       251	list.c	FUNCTION_16
0x40002bb	          0x4885f6	                           test rsi, rsi	       249	list.c	FUNCTION_16	IF_1
0x40002be	            0x7406	                            je 0x40002c6	       249	list.c	FUNCTION_16	IF_1
0x40002c0	        0x4c634e3c	          movsxd r9, dword [rsi + 0x3c] 	       251	list.c	FUNCTION_16
0x40002c4	            0xeb06	                           jmp 0x40002cc	       251	list.c	FUNCTION_16
0x40002c6	    0x41b900000000	                              mov r9d, 0	       250	list.c	FUNCTION_16	IF_1
0x40002cc	      0xb800000000	                              mov eax, 0	       271	list.c	FUNCTION_17	IF_3
0x40002d1	          0x4d39c1	                              cmp r9, r8	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40002d4	            0x756f	                           jne 0x4000345	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40002d6	          0x488b1f	                    mov rbx, qword [rdi]	       273	list.c	FUNCTION_17	FOR_1
0x40002d9	          0x488b2e	                    mov rbp, qword [rsi]	       273	list.c	FUNCTION_17	FOR_1
0x40002dc	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x40002df	            0x7433	                            je 0x4000314	       273	list.c	FUNCTION_17	FOR_1
0x40002e1	          0x4189cd	                           mov r13d, ecx	       273	list.c	FUNCTION_17	FOR_1
0x40002e4	          0x4189d4	                           mov r12d, edx	       273	list.c	FUNCTION_17	FOR_1
0x40002e7	          0x4885ed	                           test rbp, rbp	       273	list.c	FUNCTION_17	FOR_1
0x40002ea	            0x7428	                            je 0x4000314	       273	list.c	FUNCTION_17	FOR_1
0x40002ec	        0x488d7510	                   lea rsi, [rbp + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40002f0	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40002f4	          0x4489e9	                           mov ecx, r13d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40002f7	          0x4489e2	                           mov edx, r12d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40002fa	      0xe800000000	                          call 0x40002ff	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40002ff	            0x85c0	                           test eax, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000301	            0x7442	                            je 0x4000345	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4000303	          0x488b1b	                    mov rbx, qword [rbx]	       275	list.c	FUNCTION_17	FOR_1
0x4000306	        0x488b6d00	                    mov rbp, qword [rbp]	       275	list.c	FUNCTION_17	FOR_1
0x400030a	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x400030d	            0x7405	                            je 0x4000314	       273	list.c	FUNCTION_17	FOR_1
0x400030f	          0x4885ed	                           test rbp, rbp	       273	list.c	FUNCTION_17	FOR_1
0x4000312	            0x75d8	                           jne 0x40002ec	       273	list.c	FUNCTION_17	FOR_1
0x4000314	          0x4885db	                           test rbx, rbx	       278	list.c	FUNCTION_17
0x4000317	           0xf94c0	                                 sete al	       278	list.c	FUNCTION_17
0x400031a	          0x4885ed	                           test rbp, rbp	       278	list.c	FUNCTION_17
0x400031d	           0xf94c2	                                 sete dl	       278	list.c	FUNCTION_17
0x4000320	           0xfb6d2	                           movzx edx, dl	       278	list.c	FUNCTION_17
0x4000323	            0x21d0	                            and eax, edx	       278	list.c	FUNCTION_17
0x4000325	            0xeb1e	                           jmp 0x4000345	       278	list.c	FUNCTION_17
0x4000327	      0xb800000000	                              mov eax, 0	       267	list.c	FUNCTION_17	IF_1
0x400032c	            0xeb17	                           jmp 0x4000345	       267	list.c	FUNCTION_17	IF_1
0x400032e	      0xb801000000	                              mov eax, 1	       269	list.c	FUNCTION_17	IF_2
0x4000333	            0xeb10	                           jmp 0x4000345	       269	list.c	FUNCTION_17	IF_2
0x4000335	          0x4885f6	                           test rsi, rsi	       249	list.c	FUNCTION_16	IF_1
0x4000338	            0x749c	                            je 0x40002d6	       249	list.c	FUNCTION_16	IF_1
0x400033a	    0x41b800000000	                              mov r8d, 0	       250	list.c	FUNCTION_16	IF_1
0x4000340	      0xe97bffffff	                           jmp 0x40002c0	       250	list.c	FUNCTION_16	IF_1
0x4000345	        0x4883c408	                              add rsp, 8	       279	list.c	FUNCTION_17
0x4000349	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x400034a	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x400034b	            0x415c	                                 pop r12	       279	list.c	FUNCTION_17
0x400034d	            0x415d	                                 pop r13	       279	list.c	FUNCTION_17
0x400034f	              0xc3	                                     ret	       279	list.c	FUNCTION_17
list_rem_watch	SWITCH,0:FOR,1:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,0	19
0x40000c3	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        41	list.c	FUNCTION_2	FOR_1
0x40000c7	          0x4885d2	                           test rdx, rdx	        41	list.c	FUNCTION_2	FOR_1
0x40000ca	            0x742b	                            je 0x40000f7	        41	list.c	FUNCTION_2	FOR_1
0x40000cc	        0x4883c710	                           add rdi, 0x10	        40	list.c	FUNCTION_2
0x40000d0	          0x4889d0	                            mov rax, rdx	        41	list.c	FUNCTION_2	FOR_1
0x40000d3	          0x4839f2	                            cmp rdx, rsi	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000d6	            0x740b	                            je 0x40000e3	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000d8	            0xeb14	                           jmp 0x40000ee	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000da	          0x4839c6	                            cmp rsi, rax	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000dd	            0x750c	                           jne 0x40000eb	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x40000df	        0x488d7a08	                      lea rdi, [rdx + 8]	        48	list.c	FUNCTION_2	FOR_1
0x40000e3	        0x488b4008	                mov rax, qword [rax + 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x40000e7	          0x488907	                    mov qword [rdi], rax	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x40000ea	              0xc3	                                     ret	        46	list.c	FUNCTION_2	FOR_1	IF_1
0x40000eb	          0x4889c2	                            mov rdx, rax	        41	list.c	FUNCTION_2	FOR_1
0x40000ee	        0x488b4208	                mov rax, qword [rdx + 8]	        41	list.c	FUNCTION_2	FOR_1
0x40000f2	          0x4885c0	                           test rax, rax	        41	list.c	FUNCTION_2	FOR_1
0x40000f5	            0x75e3	                           jne 0x40000da	        41	list.c	FUNCTION_2	FOR_1
0x40000f7	            0xf3c3	                                     ret	        41	list.c	FUNCTION_2	FOR_1
get_list_tv	SWITCH,0:FOR,0:IF,10:functions,0:DO,0:ELSE,1:WHILE,1:CALL,14	113
0x4000ce5	            0x4156	                                push r14	       858	list.c	FUNCTION_37
0x4000ce7	            0x4155	                                push r13	       858	list.c	FUNCTION_37
0x4000ce9	            0x4154	                                push r12	       858	list.c	FUNCTION_37
0x4000ceb	              0x55	                                push rbp	       858	list.c	FUNCTION_37
0x4000cec	              0x53	                                push rbx	       858	list.c	FUNCTION_37
0x4000ced	        0x4883ec20	                           sub rsp, 0x20	       858	list.c	FUNCTION_37
0x4000cf1	          0x4889fd	                            mov rbp, rdi	       858	list.c	FUNCTION_37
0x4000cf4	          0x4989f6	                            mov r14, rsi	       858	list.c	FUNCTION_37
0x4000cf7	          0x4189d4	                           mov r12d, edx	       858	list.c	FUNCTION_37
0x4000cfa	    0x64488b042528	                mov rax, qword fs:[0x28]	       858	list.c	FUNCTION_37
0x4000d03	      0x4889442418	             mov qword [rsp + 0x18], rax	       858	list.c	FUNCTION_37
0x4000d08	            0x31c0	                            xor eax, eax	       858	list.c	FUNCTION_37
0x4000d0a	            0x85d2	                           test edx, edx	       863	list.c	FUNCTION_37	IF_1
0x4000d0c	            0x7412	                            je 0x4000d20	       863	list.c	FUNCTION_37	IF_1
0x4000d0e	      0xe800000000	                          call 0x4000d13	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x4000d13	          0x4989c5	                            mov r13, rax	       865	list.c	FUNCTION_37	IF_1	CALL_1
0x4000d16	          0x4885c0	                           test rax, rax	       866	list.c	FUNCTION_37	IF_1	IF_2
0x4000d19	            0x750b	                           jne 0x4000d26	       866	list.c	FUNCTION_37	IF_1	IF_2
0x4000d1b	      0xe933010000	                           jmp 0x4000e53	       866	list.c	FUNCTION_37	IF_1	IF_2
0x4000d20	    0x41bd00000000	                             mov r13d, 0	       859	list.c	FUNCTION_37
0x4000d26	        0x488b4500	                    mov rax, qword [rbp]	       870	list.c	FUNCTION_37	CALL_2
0x4000d2a	        0x488d7801	                      lea rdi, [rax + 1]	       870	list.c	FUNCTION_37	CALL_2
0x4000d2e	      0xe800000000	                          call 0x4000d33	       870	list.c	FUNCTION_37	CALL_2
0x4000d33	        0x48894500	                    mov qword [rbp], rax	       870	list.c	FUNCTION_37	CALL_2
0x4000d37	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x4000d3a	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x4000d3c	     0xf84a7000000	                            je 0x4000de9	       871	list.c	FUNCTION_37	WHILE_1
0x4000d42	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x4000d44	     0xf849f000000	                            je 0x4000de9	       871	list.c	FUNCTION_37	WHILE_1
0x4000d4a	          0x4489e2	                           mov edx, r12d	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d4d	          0x4889e6	                            mov rsi, rsp	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d50	          0x4889ef	                            mov rdi, rbp	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d53	      0xe800000000	                          call 0x4000d58	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d58	            0x85c0	                           test eax, eax	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d5a	     0xf84b1000000	                            je 0x4000e11	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x4000d60	          0x4585e4	                         test r12d, r12d	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x4000d63	            0x7434	                            je 0x4000d99	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x4000d65	      0xe800000000	                          call 0x4000d6a	       877	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_4
0x4000d6a	          0x4885c0	                           test rax, rax	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d6d	            0x7422	                            je 0x4000d91	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d6f	        0x488b0c24	                    mov rcx, qword [rsp]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d73	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d78	        0x48894810	             mov qword [rax + 0x10], rcx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d7c	        0x48895818	             mov qword [rax + 0x18], rbx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d80	        0xc6401400	                mov byte [rax + 0x14], 0	       881	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x4000d84	          0x4889c6	                            mov rsi, rax	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4000d87	          0x4c89ef	                            mov rdi, r13	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4000d8f	            0xeb08	                           jmp 0x4000d99	       882	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5	CALL_5
0x4000d91	          0x4889e7	                            mov rdi, rsp	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x4000d94	      0xe800000000	                          call 0x4000d99	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x4000d99	        0x488b5d00	                    mov rbx, qword [rbp]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4000d9d	           0xfb603	                   movzx eax, byte [rbx]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4000da0	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4000da2	     0xf8482000000	                            je 0x4000e2a	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4000da8	            0x3c2c	                            cmp al, 0x2c	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4000daa	            0x7421	                            je 0x4000dcd	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4000dac	      0xba05000000	                              mov edx, 5	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000db1	      0xbe00000000	                              mov esi, 0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000db6	      0xbf00000000	                              mov edi, 0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000dbb	      0xe800000000	                          call 0x4000dc0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000dc0	          0x4889de	                            mov rsi, rbx	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000dc3	          0x4889c7	                            mov rdi, rax	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x4000dcb	            0xeb44	                           jmp 0x4000e11	       893	list.c	FUNCTION_37	WHILE_1	IF_7
0x4000dcd	        0x488d7b01	                      lea rdi, [rbx + 1]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4000dd1	      0xe800000000	                          call 0x4000dd6	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4000dd6	        0x48894500	                    mov qword [rbp], rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4000dda	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x4000ddd	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x4000ddf	            0x7408	                            je 0x4000de9	       871	list.c	FUNCTION_37	WHILE_1
0x4000de1	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x4000de3	     0xf8561ffffff	                           jne 0x4000d4a	       871	list.c	FUNCTION_37	WHILE_1
0x4000de9	        0x488b5d00	                    mov rbx, qword [rbp]	       898	list.c	FUNCTION_37	IF_8
0x4000ded	          0x803b5d	                    cmp byte [rbx], 0x5d	       898	list.c	FUNCTION_37	IF_8
0x4000df0	            0x7438	                            je 0x4000e2a	       898	list.c	FUNCTION_37	IF_8
0x4000df2	      0xba05000000	                              mov edx, 5	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000df7	      0xbe00000000	                              mov esi, 0	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000dfc	      0xbf00000000	                              mov edi, 0	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000e01	      0xe800000000	                          call 0x4000e06	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000e06	          0x4889de	                            mov rsi, rbx	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000e09	          0x4889c7	                            mov rdi, rax	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000e0c	      0xe800000000	                          call 0x4000e11	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4000e11	      0xb800000000	                              mov eax, 0	       904	list.c	FUNCTION_37	IF_8
0x4000e16	          0x4585e4	                         test r12d, r12d	       902	list.c	FUNCTION_37	IF_8	IF_9
0x4000e19	            0x743d	                            je 0x4000e58	       902	list.c	FUNCTION_37	IF_8	IF_9
0x4000e1b	          0x4c89ef	                            mov rdi, r13	       903	list.c	FUNCTION_37	IF_8	CALL_12
0x4000e1e	      0xe800000000	                          call 0x4000e23	       903	list.c	FUNCTION_37	IF_8	CALL_12
0x4000e23	      0xb800000000	                              mov eax, 0	       904	list.c	FUNCTION_37	IF_8
0x4000e28	            0xeb2e	                           jmp 0x4000e58	       904	list.c	FUNCTION_37	IF_8
0x4000e2a	        0x488d7b01	                      lea rdi, [rbx + 1]	       907	list.c	FUNCTION_37	CALL_13
0x4000e2e	      0xe800000000	                          call 0x4000e33	       907	list.c	FUNCTION_37	CALL_13
0x4000e33	        0x48894500	                    mov qword [rbp], rax	       907	list.c	FUNCTION_37	CALL_13
0x4000e37	      0xb801000000	                              mov eax, 1	       911	list.c	FUNCTION_37
0x4000e3c	          0x4585e4	                         test r12d, r12d	       908	list.c	FUNCTION_37	IF_10
0x4000e3f	            0x7417	                            je 0x4000e58	       908	list.c	FUNCTION_37	IF_10
0x4000e41	          0x4c89ee	                            mov rsi, r13	       909	list.c	FUNCTION_37	CALL_14
0x4000e44	          0x4c89f7	                            mov rdi, r14	       909	list.c	FUNCTION_37	CALL_14
0x4000e47	      0xe800000000	                          call 0x4000e4c	       909	list.c	FUNCTION_37	CALL_14
0x4000e4c	      0xb801000000	                              mov eax, 1	       911	list.c	FUNCTION_37
0x4000e51	            0xeb05	                           jmp 0x4000e58	       911	list.c	FUNCTION_37
0x4000e53	      0xb800000000	                              mov eax, 0	       867	list.c	FUNCTION_37	IF_1	IF_2
0x4000e58	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       912	list.c	FUNCTION_37
0x4000e5d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       912	list.c	FUNCTION_37
0x4000e66	            0x7405	                            je 0x4000e6d	       912	list.c	FUNCTION_37
0x4000e68	      0xe800000000	                          call 0x4000e6d	       912	list.c	FUNCTION_37
0x4000e6d	        0x4883c420	                           add rsp, 0x20	       912	list.c	FUNCTION_37
0x4000e71	              0x5b	                                 pop rbx	       912	list.c	FUNCTION_37
0x4000e72	              0x5d	                                 pop rbp	       912	list.c	FUNCTION_37
0x4000e73	            0x415c	                                 pop r12	       912	list.c	FUNCTION_37
0x4000e75	            0x415d	                                 pop r13	       912	list.c	FUNCTION_37
0x4000e77	            0x415e	                                 pop r14	       912	list.c	FUNCTION_37
0x4000e79	              0xc3	                                     ret	       912	list.c	FUNCTION_37
listitem_free	SWITCH,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	8
0x4000272	              0x53	                                push rbx	       228	list.c	FUNCTION_14
0x4000273	          0x4889fb	                            mov rbx, rdi	       228	list.c	FUNCTION_14
0x4000276	        0x488d7f10	                   lea rdi, [rdi + 0x10]	       229	list.c	FUNCTION_14	CALL_1
0x400027a	      0xe800000000	                          call 0x400027f	       229	list.c	FUNCTION_14	CALL_1
0x400027f	          0x4889df	                            mov rdi, rbx	       230	list.c	FUNCTION_14	CALL_2
0x4000282	      0xe800000000	                          call 0x4000287	       230	list.c	FUNCTION_14	CALL_2
0x4000287	              0x5b	                                 pop rbx	       231	list.c	FUNCTION_14
0x4000288	              0xc3	                                     ret	       231	list.c	FUNCTION_14
list_append_tv	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,3	21
0x400052d	            0x4154	                                push r12	       448	list.c	FUNCTION_23
0x400052f	              0x55	                                push rbp	       448	list.c	FUNCTION_23
0x4000530	              0x53	                                push rbx	       448	list.c	FUNCTION_23
0x4000531	          0x4889fd	                            mov rbp, rdi	       448	list.c	FUNCTION_23
0x4000534	          0x4989f4	                            mov r12, rsi	       448	list.c	FUNCTION_23
0x4000537	      0xe800000000	                          call 0x400053c	       449	list.c	FUNCTION_23	CALL_1
0x400053c	          0x4889c3	                            mov rbx, rax	       449	list.c	FUNCTION_23	CALL_1
0x400053f	      0xb800000000	                              mov eax, 0	       452	list.c	FUNCTION_23	IF_1
0x4000544	          0x4885db	                           test rbx, rbx	       451	list.c	FUNCTION_23	IF_1
0x4000547	            0x741c	                            je 0x4000565	       451	list.c	FUNCTION_23	IF_1
0x4000549	        0x488d7310	                   lea rsi, [rbx + 0x10]	       453	list.c	FUNCTION_23	CALL_2
0x400054d	          0x4c89e7	                            mov rdi, r12	       453	list.c	FUNCTION_23	CALL_2
0x4000550	      0xe800000000	                          call 0x4000555	       453	list.c	FUNCTION_23	CALL_2
0x4000555	          0x4889de	                            mov rsi, rbx	       454	list.c	FUNCTION_23	CALL_3
0x4000558	          0x4889ef	                            mov rdi, rbp	       454	list.c	FUNCTION_23	CALL_3
0x400055b	      0xe800000000	                          call 0x4000560	       454	list.c	FUNCTION_23	CALL_3
0x4000560	      0xb801000000	                              mov eax, 1	       455	list.c	FUNCTION_23
0x4000565	              0x5b	                                 pop rbx	       456	list.c	FUNCTION_23
0x4000566	              0x5d	                                 pop rbp	       456	list.c	FUNCTION_23
0x4000567	            0x415c	                                 pop r12	       456	list.c	FUNCTION_23
0x4000569	              0xc3	                                     ret	       456	list.c	FUNCTION_23
init_static_list	SWITCH,0:FOR,1:IF,2:functions,0:DO,0:ELSE,2:WHILE,0:CALL,1	39
0x4000f60	          0x4889fe	                            mov rsi, rdi	       959	list.c	FUNCTION_39
0x4000f63	    0x48c787880100	              mov qword [rdi + 0x188], 0	        90	string3.h	FUNCTION_43	CALL_6
0x4000f6e	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_43	CALL_6
0x4000f72	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_43	CALL_6
0x4000f76	          0x4889f1	                            mov rcx, rsi	        90	string3.h	FUNCTION_43	CALL_6
0x4000f79	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_43	CALL_6
0x4000f7c	    0x81c190010000	                          add ecx, 0x190	        90	string3.h	FUNCTION_43	CALL_6
0x4000f82	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_43	CALL_6
0x4000f85	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_43	CALL_6
0x4000f87	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_43	CALL_6
0x4000f8c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_43	CALL_6
0x4000f8f	        0x488d4650	                   lea rax, [rsi + 0x50]	       964	list.c	FUNCTION_39
0x4000f93	          0x488906	                    mov qword [rsi], rax	       964	list.c	FUNCTION_39
0x4000f96	    0x488d86700100	                  lea rax, [rsi + 0x170]	       965	list.c	FUNCTION_39
0x4000f9d	        0x48894608	                mov qword [rsi + 8], rax	       965	list.c	FUNCTION_39
0x4000fa1	    0xc746389f8601	        mov dword [rsi + 0x38], 0x1869f 	       966	list.c	FUNCTION_39
0x4000fa8	        0xc6464802	                mov byte [rsi + 0x48], 2	       967	list.c	FUNCTION_39
0x4000fac	    0xc7463c0a0000	             mov dword [rsi + 0x3c], 0xa	       968	list.c	FUNCTION_39
0x4000fb3	        0x488d4670	                   lea rax, [rsi + 0x70]	       968	list.c	FUNCTION_39
0x4000fb7	      0xba00000000	                              mov edx, 0	       970	list.c	FUNCTION_39	FOR_1
0x4000fbc	            0x85d2	                           test edx, edx	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x4000fbe	            0x7515	                           jne 0x4000fd5	       974	list.c	FUNCTION_39	FOR_1	IF_1
0x4000fc0	    0x48c746580000	               mov qword [rsi + 0x58], 0	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x4000fc8	        0x488940e0	             mov qword [rax - 0x20], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4000fcc	          0x83c201	                              add edx, 1	       970	list.c	FUNCTION_39	FOR_1
0x4000fcf	        0x4883c020	                           add rax, 0x20	       970	list.c	FUNCTION_39	FOR_1
0x4000fd3	            0xebe7	                           jmp 0x4000fbc	       970	list.c	FUNCTION_39	FOR_1
0x4000fd5	        0x488d48c0	                   lea rcx, [rax - 0x40]	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4000fd9	        0x488948e8	             mov qword [rax - 0x18], rcx	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4000fdd	          0x83fa09	                              cmp edx, 9	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4000fe0	            0x750c	                           jne 0x4000fee	       978	list.c	FUNCTION_39	FOR_1	IF_2
0x4000fe2	    0x48c786700100	              mov qword [rsi + 0x170], 0	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x4000fed	              0xc3	                                     ret	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x4000fee	        0x488940e0	             mov qword [rax - 0x20], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4000ff2	          0x83c201	                              add edx, 1	       970	list.c	FUNCTION_39	FOR_1
0x4000ff5	        0x4883c020	                           add rax, 0x20	       970	list.c	FUNCTION_39	FOR_1
0x4000ff9	          0x83fa0a	                            cmp edx, 0xa	       970	list.c	FUNCTION_39	FOR_1
0x4000ffc	            0x75be	                           jne 0x4000fbc	       970	list.c	FUNCTION_39	FOR_1
0x4000ffe	            0xf3c3	                                     ret	       970	list.c	FUNCTION_39	FOR_1
write_list	SWITCH,0:FOR,2:IF,5:functions,0:DO,0:ELSE,1:WHILE,0:CALL,6	70
0x4000e7a	            0x4156	                                push r14	       919	list.c	FUNCTION_38
0x4000e7c	            0x4155	                                push r13	       919	list.c	FUNCTION_38
0x4000e7e	            0x4154	                                push r12	       919	list.c	FUNCTION_38
0x4000e80	              0x55	                                push rbp	       919	list.c	FUNCTION_38
0x4000e81	              0x53	                                push rbx	       919	list.c	FUNCTION_38
0x4000e82	          0x4c8b26	                    mov r12, qword [rsi]	       925	list.c	FUNCTION_38	FOR_1
0x4000e85	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x4000e88	     0xf84b1000000	                            je 0x4000f3f	       925	list.c	FUNCTION_38	FOR_1
0x4000e8e	          0x4189d6	                           mov r14d, edx	       925	list.c	FUNCTION_38	FOR_1
0x4000e91	          0x4889fd	                            mov rbp, rdi	       925	list.c	FUNCTION_38	FOR_1
0x4000e94	    0x41bd01000000	                             mov r13d, 1	       925	list.c	FUNCTION_38	FOR_1
0x4000e9a	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000e9f	      0xe800000000	                          call 0x4000ea4	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ea4	          0x4889c3	                            mov rbx, rax	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ea7	           0xfb638	                   movzx edi, byte [rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000eaa	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ead	            0x743a	                            je 0x4000ee9	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000eaf	        0x4080ff0a	                            cmp dil, 0xa	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x4000eb3	            0x750f	                           jne 0x4000ec4	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x4000eb5	          0x4889ee	                            mov rsi, rbp	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4000eb8	      0xbf00000000	                              mov edi, 0	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4000ebd	      0xe800000000	                          call 0x4000ec2	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4000ec2	            0xeb0c	                           jmp 0x4000ed0	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4000ec4	        0x400fb6ff	                          movzx edi, dil	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4000ec8	          0x4889ee	                            mov rsi, rbp	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4000ecb	      0xe800000000	                          call 0x4000ed0	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4000ed0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4000ed3	            0x740e	                            je 0x4000ee3	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4000ed5	        0x4883c301	                              add rbx, 1	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ed9	           0xfb63b	                   movzx edi, byte [rbx]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000edc	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000edf	            0x75ce	                           jne 0x4000eaf	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ee1	            0xeb06	                           jmp 0x4000ee9	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4000ee3	    0x41bd00000000	                             mov r13d, 0	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4000ee9	          0x4585f6	                         test r14d, r14d	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4000eec	            0x7407	                            je 0x4000ef5	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4000eee	      0x49833c2400	                      cmp qword [r12], 0	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4000ef3	            0x745a	                            je 0x4000f4f	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4000ef5	          0x4889ee	                            mov rsi, rbp	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4000ef8	      0xbf0a000000	                            mov edi, 0xa	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4000efd	      0xe800000000	                          call 0x4000f02	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4000f02	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4000f05	            0x7440	                            je 0x4000f47	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4000f07	          0x4585ed	                         test r13d, r13d	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f0a	            0x7524	                           jne 0x4000f30	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f0c	      0xba05000000	                              mov edx, 5	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f11	      0xbe00000000	                              mov esi, 0	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f16	      0xbf00000000	                              mov edi, 0	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f1b	      0xe800000000	                          call 0x4000f20	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f20	          0x4889c7	                            mov rdi, rax	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f23	      0xe800000000	                          call 0x4000f28	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x4000f28	    0x41bd00000000	                             mov r13d, 0	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f2e	            0xeb24	                           jmp 0x4000f54	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f30	        0x4d8b2424	                    mov r12, qword [r12]	       925	list.c	FUNCTION_38	FOR_1
0x4000f34	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x4000f37	     0xf855dffffff	                           jne 0x4000e9a	       925	list.c	FUNCTION_38	FOR_1
0x4000f3d	            0xeb15	                           jmp 0x4000f54	       925	list.c	FUNCTION_38	FOR_1
0x4000f3f	    0x41bd01000000	                             mov r13d, 1	       922	list.c	FUNCTION_38
0x4000f45	            0xeb0d	                           jmp 0x4000f54	       922	list.c	FUNCTION_38
0x4000f47	    0x41bd00000000	                             mov r13d, 0	       942	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x4000f4d	            0xeb05	                           jmp 0x4000f54	       942	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x4000f4f	          0x4585ed	                         test r13d, r13d	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f52	            0x74b8	                            je 0x4000f0c	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4000f54	          0x4489e8	                           mov eax, r13d	       952	list.c	FUNCTION_38
0x4000f57	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x4000f58	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x4000f59	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x4000f5b	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x4000f5d	            0x415e	                                 pop r14	       952	list.c	FUNCTION_38
0x4000f5f	              0xc3	                                     ret	       952	list.c	FUNCTION_38
list2string	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,6	50
0x4000c2a	            0x4154	                                push r12	       717	list.c	ELSE_2	FUNCTION_34
0x4000c2c	              0x55	                                push rbp	       717	list.c	ELSE_2	FUNCTION_34
0x4000c2d	              0x53	                                push rbx	       717	list.c	ELSE_2	FUNCTION_34
0x4000c2e	        0x4883ec20	                           sub rsp, 0x20	       717	list.c	ELSE_2	FUNCTION_34
0x4000c32	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	list.c	ELSE_2	FUNCTION_34
0x4000c3b	      0x4889442418	             mov qword [rsp + 0x18], rax	       717	list.c	ELSE_2	FUNCTION_34
0x4000c40	            0x31c0	                            xor eax, eax	       717	list.c	ELSE_2	FUNCTION_34
0x4000c42	      0x48837f0800	                  cmp qword [rdi + 8], 0	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000c47	            0x7479	                            je 0x4000cc2	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000c49	          0x4889fb	                            mov rbx, rdi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000c4c	          0x4189f4	                           mov r12d, esi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000c4f	            0x89d5	                            mov ebp, edx	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000c51	      0xba50000000	                           mov edx, 0x50	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000c56	      0xbe01000000	                              mov esi, 1	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000c5b	          0x4889e7	                            mov rdi, rsp	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000c5e	      0xe800000000	                          call 0x4000c63	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4000c63	      0xbe5b000000	                           mov esi, 0x5b	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000c68	          0x4889e7	                            mov rdi, rsp	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000c6b	      0xe800000000	                          call 0x4000c70	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4000c70	        0x488b7308	                mov rsi, qword [rbx + 8]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c74	          0x4589e1	                           mov r9d, r12d	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c77	          0x4189e8	                            mov r8d, ebp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c7a	      0xb900000000	                              mov ecx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c7f	      0xba00000000	                              mov edx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c84	          0x4889e7	                            mov rdi, rsp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c87	      0xe800000000	                          call 0x4000c8c	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c8c	            0x85c0	                           test eax, eax	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c8e	            0x7511	                           jne 0x4000ca1	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4000c90	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000c95	      0xe800000000	                          call 0x4000c9a	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4000c9a	      0xb800000000	                              mov eax, 0	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000c9f	            0xeb26	                           jmp 0x4000cc7	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4000ca1	      0xbe5d000000	                           mov esi, 0x5d	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000ca6	          0x4889e7	                            mov rdi, rsp	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000ca9	      0xe800000000	                          call 0x4000cae	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4000cae	      0xbe00000000	                              mov esi, 0	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000cb3	          0x4889e7	                            mov rdi, rsp	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000cb6	      0xe800000000	                          call 0x4000cbb	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4000cbb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       732	list.c	ELSE_2	FUNCTION_34
0x4000cc0	            0xeb05	                           jmp 0x4000cc7	       732	list.c	ELSE_2	FUNCTION_34
0x4000cc2	      0xb800000000	                              mov eax, 0	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4000cc7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       733	list.c	ELSE_2	FUNCTION_34
0x4000ccc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       733	list.c	ELSE_2	FUNCTION_34
0x4000cd5	            0x7405	                            je 0x4000cdc	       733	list.c	ELSE_2	FUNCTION_34
0x4000cd7	      0xe800000000	                          call 0x4000cdc	       733	list.c	ELSE_2	FUNCTION_34
0x4000cdc	        0x4883c420	                           add rsp, 0x20	       733	list.c	ELSE_2	FUNCTION_34
0x4000ce0	              0x5b	                                 pop rbx	       733	list.c	ELSE_2	FUNCTION_34
0x4000ce1	              0x5d	                                 pop rbp	       733	list.c	ELSE_2	FUNCTION_34
0x4000ce2	            0x415c	                                 pop r12	       733	list.c	ELSE_2	FUNCTION_34
0x4000ce4	              0xc3	                                     ret	       733	list.c	ELSE_2	FUNCTION_34
list_find_str	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,4	19
0x400046f	              0x53	                                push rbx	       387	list.c	FUNCTION_20
0x4000470	          0x4889f3	                            mov rbx, rsi	       387	list.c	FUNCTION_20
0x4000473	        0x488d76ff	                      lea rsi, [rsi - 1]	       390	list.c	FUNCTION_20	CALL_1
0x4000477	      0xe800000000	                          call 0x400047c	       390	list.c	FUNCTION_20	CALL_1
0x400047c	          0x4885c0	                           test rax, rax	       391	list.c	FUNCTION_20	IF_1
0x400047f	            0x7526	                           jne 0x40004a7	       391	list.c	FUNCTION_20	IF_1
0x4000481	      0xba05000000	                              mov edx, 5	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000486	      0xbe00000000	                              mov esi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400048b	      0xbf00000000	                              mov edi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000490	      0xe800000000	                          call 0x4000495	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000495	          0x4889de	                            mov rsi, rbx	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000498	          0x4889c7	                            mov rdi, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400049b	      0xe800000000	                          call 0x40004a0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x40004a0	      0xb800000000	                              mov eax, 0	       394	list.c	FUNCTION_20	IF_1
0x40004a5	            0xeb09	                           jmp 0x40004b0	       394	list.c	FUNCTION_20	IF_1
0x40004a7	        0x488d7810	                   lea rdi, [rax + 0x10]	       396	list.c	FUNCTION_20	CALL_4
0x40004ab	      0xe800000000	                          call 0x40004b0	       396	list.c	FUNCTION_20	CALL_4
0x40004b0	              0x5b	                                 pop rbx	       397	list.c	FUNCTION_20
0x40004b1	              0xc3	                                     ret	       397	list.c	FUNCTION_20
list_unref	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	11
0x400023e	          0x4885ff	                           test rdi, rdi	       124	list.c	FUNCTION_7	IF_1
0x4000241	            0x741a	                            je 0x400025d	       124	list.c	FUNCTION_7	IF_1
0x4000243	          0x8b4738	            mov eax, dword [rdi + 0x38] 	       124	list.c	FUNCTION_7	IF_1
0x4000246	          0x83e801	                              sub eax, 1	       124	list.c	FUNCTION_7	IF_1
0x4000249	          0x894738	             mov dword [rdi + 0x38], eax	       124	list.c	FUNCTION_7	IF_1
0x400024c	            0x85c0	                           test eax, eax	       124	list.c	FUNCTION_7	IF_1
0x400024e	            0x7f0d	                            jg 0x400025d	       124	list.c	FUNCTION_7	IF_1
0x4000250	        0x4883ec08	                              sub rsp, 8	       123	list.c	FUNCTION_7
0x4000254	      0xe800000000	                          call 0x4000259	       125	list.c	FUNCTION_7	CALL_1
0x4000259	        0x4883c408	                              add rsp, 8	       126	list.c	FUNCTION_7
0x400025d	            0xf3c3	                                     ret	       126	list.c	FUNCTION_7
list_insert_tv	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,3	27
0x40006f3	            0x4155	                                push r13	       547	list.c	FUNCTION_28
0x40006f5	            0x4154	                                push r12	       547	list.c	FUNCTION_28
0x40006f7	              0x55	                                push rbp	       547	list.c	FUNCTION_28
0x40006f8	              0x53	                                push rbx	       547	list.c	FUNCTION_28
0x40006f9	        0x4883ec08	                              sub rsp, 8	       547	list.c	FUNCTION_28
0x40006fd	          0x4889fd	                            mov rbp, rdi	       547	list.c	FUNCTION_28
0x4000700	          0x4989f5	                            mov r13, rsi	       547	list.c	FUNCTION_28
0x4000703	          0x4989d4	                            mov r12, rdx	       547	list.c	FUNCTION_28
0x4000706	      0xe800000000	                          call 0x400070b	       548	list.c	FUNCTION_28	CALL_1
0x400070b	          0x4889c3	                            mov rbx, rax	       548	list.c	FUNCTION_28	CALL_1
0x400070e	      0xb800000000	                              mov eax, 0	       551	list.c	FUNCTION_28	IF_1
0x4000713	          0x4885db	                           test rbx, rbx	       550	list.c	FUNCTION_28	IF_1
0x4000716	            0x741f	                            je 0x4000737	       550	list.c	FUNCTION_28	IF_1
0x4000718	        0x488d7310	                   lea rsi, [rbx + 0x10]	       552	list.c	FUNCTION_28	CALL_2
0x400071c	          0x4c89ef	                            mov rdi, r13	       552	list.c	FUNCTION_28	CALL_2
0x400071f	      0xe800000000	                          call 0x4000724	       552	list.c	FUNCTION_28	CALL_2
0x4000724	          0x4c89e2	                            mov rdx, r12	       553	list.c	FUNCTION_28	CALL_3
0x4000727	          0x4889de	                            mov rsi, rbx	       553	list.c	FUNCTION_28	CALL_3
0x400072a	          0x4889ef	                            mov rdi, rbp	       553	list.c	FUNCTION_28	CALL_3
0x400072d	      0xe800000000	                          call 0x4000732	       553	list.c	FUNCTION_28	CALL_3
0x4000732	      0xb801000000	                              mov eax, 1	       554	list.c	FUNCTION_28
0x4000737	        0x4883c408	                              add rsp, 8	       555	list.c	FUNCTION_28
0x400073b	              0x5b	                                 pop rbx	       555	list.c	FUNCTION_28
0x400073c	              0x5d	                                 pop rbp	       555	list.c	FUNCTION_28
0x400073d	            0x415c	                                 pop r12	       555	list.c	FUNCTION_28
0x400073f	            0x415d	                                 pop r13	       555	list.c	FUNCTION_28
0x4000741	              0xc3	                                     ret	       555	list.c	FUNCTION_28
list_fix_watch	SWITCH,0:FOR,1:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,0	11
0x40000f9	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        61	list.c	FUNCTION_3	FOR_1
0x40000fd	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x4000100	            0x7414	                            je 0x4000116	        61	list.c	FUNCTION_3	FOR_1
0x4000102	          0x483930	                    cmp qword [rax], rsi	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x4000105	            0x7506	                           jne 0x400010d	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x4000107	          0x488b16	                    mov rdx, qword [rsi]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x400010a	          0x488910	                    mov qword [rax], rdx	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x400010d	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x4000111	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x4000114	            0x75ec	                           jne 0x4000102	        61	list.c	FUNCTION_3	FOR_1
0x4000116	            0xf3c3	                                     ret	        61	list.c	FUNCTION_3	FOR_1
list_extend	SWITCH,0:FOR,1:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	38
0x4000742	            0x4155	                                push r13	       590	list.c	FUNCTION_30
0x4000744	            0x4154	                                push r12	       590	list.c	FUNCTION_30
0x4000746	              0x55	                                push rbp	       590	list.c	FUNCTION_30
0x4000747	              0x53	                                push rbx	       590	list.c	FUNCTION_30
0x4000748	        0x4883ec08	                              sub rsp, 8	       590	list.c	FUNCTION_30
0x400074c	          0x8b6e3c	            mov ebp, dword [rsi + 0x3c] 	       592	list.c	FUNCTION_30
0x400074f	          0x488b1e	                    mov rbx, qword [rsi]	       596	list.c	FUNCTION_30	FOR_1
0x4000752	          0x4885db	                           test rbx, rbx	       596	list.c	FUNCTION_30	FOR_1
0x4000755	            0x7435	                            je 0x400078c	       596	list.c	FUNCTION_30	FOR_1
0x4000757	          0x4989d5	                            mov r13, rdx	       596	list.c	FUNCTION_30	FOR_1
0x400075a	          0x4989fc	                            mov r12, rdi	       596	list.c	FUNCTION_30	FOR_1
0x400075d	          0x83ed01	                              sub ebp, 1	       596	list.c	FUNCTION_30	FOR_1
0x4000760	            0x7831	                            js 0x4000793	       596	list.c	FUNCTION_30	FOR_1
0x4000762	        0x488d7310	                   lea rsi, [rbx + 0x10]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000766	          0x4c89ea	                            mov rdx, r13	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000769	          0x4c89e7	                            mov rdi, r12	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x400076c	      0xe800000000	                          call 0x4000771	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000771	            0x85c0	                           test eax, eax	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000773	            0x742a	                            je 0x400079f	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4000775	          0x488b1b	                    mov rbx, qword [rbx]	       596	list.c	FUNCTION_30	FOR_1
0x4000778	          0x4885db	                           test rbx, rbx	       596	list.c	FUNCTION_30	FOR_1
0x400077b	            0x741d	                            je 0x400079a	       596	list.c	FUNCTION_30	FOR_1
0x400077d	          0x83ed01	                              sub ebp, 1	       596	list.c	FUNCTION_30	FOR_1
0x4000780	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       596	list.c	FUNCTION_30	FOR_1
0x4000783	            0x75dd	                           jne 0x4000762	       596	list.c	FUNCTION_30	FOR_1
0x4000785	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x400078a	            0xeb13	                           jmp 0x400079f	       599	list.c	FUNCTION_30
0x400078c	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x4000791	            0xeb0c	                           jmp 0x400079f	       599	list.c	FUNCTION_30
0x4000793	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x4000798	            0xeb05	                           jmp 0x400079f	       599	list.c	FUNCTION_30
0x400079a	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x400079f	        0x4883c408	                              add rsp, 8	       600	list.c	FUNCTION_30
0x40007a3	              0x5b	                                 pop rbx	       600	list.c	FUNCTION_30
0x40007a4	              0x5d	                                 pop rbp	       600	list.c	FUNCTION_30
0x40007a5	            0x415c	                                 pop r12	       600	list.c	FUNCTION_30
0x40007a7	            0x415d	                                 pop r13	       600	list.c	FUNCTION_30
0x40007a9	              0xc3	                                     ret	       600	list.c	FUNCTION_30
list_append_dict	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	21
0x400056a	              0x55	                                push rbp	       464	list.c	FUNCTION_24
0x400056b	              0x53	                                push rbx	       464	list.c	FUNCTION_24
0x400056c	        0x4883ec08	                              sub rsp, 8	       464	list.c	FUNCTION_24
0x4000570	          0x4889fd	                            mov rbp, rdi	       464	list.c	FUNCTION_24
0x4000573	          0x4889f3	                            mov rbx, rsi	       464	list.c	FUNCTION_24
0x4000576	      0xe800000000	                          call 0x400057b	       465	list.c	FUNCTION_24	CALL_1
0x400057b	          0x4889c6	                            mov rsi, rax	       465	list.c	FUNCTION_24	CALL_1
0x400057e	      0xb800000000	                              mov eax, 0	       468	list.c	FUNCTION_24	IF_1
0x4000583	          0x4885f6	                           test rsi, rsi	       467	list.c	FUNCTION_24	IF_1
0x4000586	            0x7420	                            je 0x40005a8	       467	list.c	FUNCTION_24	IF_1
0x4000588	    0xc74610060000	               mov dword [rsi + 0x10], 6	       469	list.c	FUNCTION_24
0x400058f	        0xc6461400	                mov byte [rsi + 0x14], 0	       470	list.c	FUNCTION_24
0x4000593	        0x48895e18	             mov qword [rsi + 0x18], rbx	       471	list.c	FUNCTION_24
0x4000597	          0x4889ef	                            mov rdi, rbp	       472	list.c	FUNCTION_24	CALL_2
0x400059a	      0xe800000000	                          call 0x400059f	       472	list.c	FUNCTION_24	CALL_2
0x400059f	        0x83430401	                  add dword [rbx + 4], 1	       473	list.c	FUNCTION_24
0x40005a3	      0xb801000000	                              mov eax, 1	       474	list.c	FUNCTION_24
0x40005a8	        0x4883c408	                              add rsp, 8	       475	list.c	FUNCTION_24
0x40005ac	              0x5b	                                 pop rbx	       475	list.c	FUNCTION_24
0x40005ad	              0x5d	                                 pop rbp	       475	list.c	FUNCTION_24
0x40005ae	              0xc3	                                     ret	       475	list.c	FUNCTION_24
vimlist_remove	SWITCH,0:FOR,1:IF,3:functions,0:DO,0:ELSE,2:WHILE,0:CALL,1	41
0x40008f7	            0x4155	                                push r13	       688	list.c	FUNCTION_33
0x40008f9	            0x4154	                                push r12	       688	list.c	FUNCTION_33
0x40008fb	              0x55	                                push rbp	       688	list.c	FUNCTION_33
0x40008fc	              0x53	                                push rbx	       688	list.c	FUNCTION_33
0x40008fd	          0x4889fd	                            mov rbp, rdi	       688	list.c	FUNCTION_33
0x4000900	          0x4989f5	                            mov r13, rsi	       688	list.c	FUNCTION_33
0x4000903	          0x4989d4	                            mov r12, rdx	       688	list.c	FUNCTION_33
0x4000906	          0x4885f6	                           test rsi, rsi	       692	list.c	FUNCTION_33	FOR_1
0x4000909	            0x741f	                            je 0x400092a	       692	list.c	FUNCTION_33	FOR_1
0x400090b	          0x4889f3	                            mov rbx, rsi	       692	list.c	FUNCTION_33	FOR_1
0x400090e	        0x836d3c01	               sub dword [rbp + 0x3c], 1	       694	list.c	FUNCTION_33	FOR_1
0x4000912	          0x4889de	                            mov rsi, rbx	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000915	          0x4889ef	                            mov rdi, rbp	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x4000918	      0xe800000000	                          call 0x400091d	       695	list.c	FUNCTION_33	FOR_1	CALL_1
0x400091d	          0x4939dc	                            cmp r12, rbx	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000920	            0x7408	                            je 0x400092a	       696	list.c	FUNCTION_33	FOR_1	IF_1
0x4000922	          0x488b1b	                    mov rbx, qword [rbx]	       692	list.c	FUNCTION_33	FOR_1
0x4000925	          0x4885db	                           test rbx, rbx	       692	list.c	FUNCTION_33	FOR_1
0x4000928	            0x75e4	                           jne 0x400090e	       692	list.c	FUNCTION_33	FOR_1
0x400092a	        0x498b0424	                    mov rax, qword [r12]	       700	list.c	FUNCTION_33	IF_2
0x400092e	          0x4885c0	                           test rax, rax	       700	list.c	FUNCTION_33	IF_2
0x4000931	            0x750a	                           jne 0x400093d	       700	list.c	FUNCTION_33	IF_2
0x4000933	        0x498b4508	                mov rax, qword [r13 + 8]	       701	list.c	FUNCTION_33	IF_2
0x4000937	        0x48894508	                mov qword [rbp + 8], rax	       701	list.c	FUNCTION_33	IF_2
0x400093b	            0xeb08	                           jmp 0x4000945	       701	list.c	FUNCTION_33	IF_2
0x400093d	        0x498b5508	                mov rdx, qword [r13 + 8]	       703	list.c	FUNCTION_33	ELSE_1
0x4000941	        0x48895008	                mov qword [rax + 8], rdx	       703	list.c	FUNCTION_33	ELSE_1
0x4000945	        0x498b4508	                mov rax, qword [r13 + 8]	       704	list.c	FUNCTION_33	IF_3
0x4000949	          0x4885c0	                           test rax, rax	       704	list.c	FUNCTION_33	IF_3
0x400094c	            0x750a	                           jne 0x4000958	       704	list.c	FUNCTION_33	IF_3
0x400094e	        0x498b0424	                    mov rax, qword [r12]	       705	list.c	FUNCTION_33	IF_3
0x4000952	        0x48894500	                    mov qword [rbp], rax	       705	list.c	FUNCTION_33	IF_3
0x4000956	            0xeb07	                           jmp 0x400095f	       705	list.c	FUNCTION_33	IF_3
0x4000958	        0x498b1424	                    mov rdx, qword [r12]	       707	list.c	FUNCTION_33	ELSE_2
0x400095c	          0x488910	                    mov qword [rax], rdx	       707	list.c	FUNCTION_33	ELSE_2
0x400095f	    0x48c745180000	               mov qword [rbp + 0x18], 0	       708	list.c	FUNCTION_33	ELSE_2
0x4000967	              0x5b	                                 pop rbx	       709	list.c	FUNCTION_33	ELSE_2
0x4000968	              0x5d	                                 pop rbp	       709	list.c	FUNCTION_33	ELSE_2
0x4000969	            0x415c	                                 pop r12	       709	list.c	FUNCTION_33	ELSE_2
0x400096b	            0x415d	                                 pop r13	       709	list.c	FUNCTION_33	ELSE_2
0x400096d	              0xc3	                                     ret	       709	list.c	FUNCTION_33	ELSE_2
listitem_remove	SWITCH,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	8
0x400096e	              0x53	                                push rbx	       238	list.c	FUNCTION_15
0x400096f	          0x4889f3	                            mov rbx, rsi	       238	list.c	FUNCTION_15
0x4000972	          0x4889f2	                            mov rdx, rsi	       239	list.c	FUNCTION_15	CALL_1
0x4000975	      0xe800000000	                          call 0x400097a	       239	list.c	FUNCTION_15	CALL_1
0x400097a	          0x4889df	                            mov rdi, rbx	       240	list.c	FUNCTION_15	CALL_2
0x400097d	      0xe800000000	                          call 0x4000982	       240	list.c	FUNCTION_15	CALL_2
0x4000982	              0x5b	                                 pop rbx	       241	list.c	FUNCTION_15
0x4000983	              0xc3	                                     ret	       241	list.c	FUNCTION_15
list_add_watch	SWITCH,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,0	4
0x40000b6	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        27	list.c	FUNCTION_1
0x40000ba	        0x48894608	                mov qword [rsi + 8], rax	        27	list.c	FUNCTION_1
0x40000be	        0x48897710	             mov qword [rdi + 0x10], rsi	        28	list.c	FUNCTION_1
0x40000c2	              0xc3	                                     ret	        28	list.c	FUNCTION_1
list_concat	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	28
0x400089e	          0x4885ff	                           test rdi, rdi	       611	list.c	FUNCTION_31	IF_1
0x40008a1	            0x7447	                            je 0x40008ea	       611	list.c	FUNCTION_31	IF_1
0x40008a3	          0x4885f6	                           test rsi, rsi	       611	list.c	FUNCTION_31	IF_1
0x40008a6	            0x7442	                            je 0x40008ea	       611	list.c	FUNCTION_31	IF_1
0x40008a8	              0x55	                                push rbp	       608	list.c	FUNCTION_31
0x40008a9	              0x53	                                push rbx	       608	list.c	FUNCTION_31
0x40008aa	        0x4883ec08	                              sub rsp, 8	       608	list.c	FUNCTION_31
0x40008ae	          0x4889d5	                            mov rbp, rdx	       608	list.c	FUNCTION_31
0x40008b1	          0x4889f3	                            mov rbx, rsi	       608	list.c	FUNCTION_31
0x40008b4	      0xba00000000	                              mov edx, 0	       615	list.c	FUNCTION_31	CALL_1
0x40008b9	      0xbe00000000	                              mov esi, 0	       615	list.c	FUNCTION_31	CALL_1
0x40008be	      0xe800000000	                          call 0x40008c3	       615	list.c	FUNCTION_31	CALL_1
0x40008c3	          0x4889c7	                            mov rdi, rax	       615	list.c	FUNCTION_31	CALL_1
0x40008c6	      0xb800000000	                              mov eax, 0	       617	list.c	FUNCTION_31	IF_2
0x40008cb	          0x4885ff	                           test rdi, rdi	       616	list.c	FUNCTION_31	IF_2
0x40008ce	            0x7420	                            je 0x40008f0	       616	list.c	FUNCTION_31	IF_2
0x40008d0	    0xc74500050000	                      mov dword [rbp], 5	       618	list.c	FUNCTION_31
0x40008d7	        0x48897d08	                mov qword [rbp + 8], rdi	       619	list.c	FUNCTION_31
0x40008db	      0xba00000000	                              mov edx, 0	       622	list.c	FUNCTION_31	CALL_2
0x40008e0	          0x4889de	                            mov rsi, rbx	       622	list.c	FUNCTION_31	CALL_2
0x40008e3	      0xe800000000	                          call 0x40008e8	       622	list.c	FUNCTION_31	CALL_2
0x40008e8	            0xeb06	                           jmp 0x40008f0	       622	list.c	FUNCTION_31	CALL_2
0x40008ea	      0xb800000000	                              mov eax, 0	       612	list.c	FUNCTION_31	IF_1
0x40008ef	              0xc3	                                     ret	       612	list.c	FUNCTION_31	IF_1
0x40008f0	        0x4883c408	                              add rsp, 8	       623	list.c	FUNCTION_31
0x40008f4	              0x5b	                                 pop rbx	       623	list.c	FUNCTION_31
0x40008f5	              0x5d	                                 pop rbp	       623	list.c	FUNCTION_31
0x40008f6	              0xc3	                                     ret	       623	list.c	FUNCTION_31
listitem_alloc	SWITCH,0:FOR,0:IF,0:functions,0:DO,0:ELSE,0:WHILE,0:CALL,1	5
0x400025f	        0x4883ec08	                              sub rsp, 8	       219	list.c	FUNCTION_13
0x4000263	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000268	      0xe800000000	                          call 0x400026d	       220	list.c	FUNCTION_13	CALL_1
0x400026d	        0x4883c408	                              add rsp, 8	       221	list.c	FUNCTION_13
0x4000271	              0xc3	                                     ret	       221	list.c	FUNCTION_13
list_append_string	SWITCH,0:FOR,0:IF,3:functions,0:DO,0:ELSE,1:WHILE,0:CALL,4	41
0x40005f4	            0x4155	                                push r13	       505	list.c	FUNCTION_26
0x40005f6	            0x4154	                                push r12	       505	list.c	FUNCTION_26
0x40005f8	              0x55	                                push rbp	       505	list.c	FUNCTION_26
0x40005f9	              0x53	                                push rbx	       505	list.c	FUNCTION_26
0x40005fa	        0x4883ec08	                              sub rsp, 8	       505	list.c	FUNCTION_26
0x40005fe	          0x4989fd	                            mov r13, rdi	       505	list.c	FUNCTION_26
0x4000601	          0x4889f5	                            mov rbp, rsi	       505	list.c	FUNCTION_26
0x4000604	          0x4189d4	                           mov r12d, edx	       505	list.c	FUNCTION_26
0x4000607	      0xe800000000	                          call 0x400060c	       506	list.c	FUNCTION_26	CALL_1
0x400060c	          0x4889c3	                            mov rbx, rax	       506	list.c	FUNCTION_26	CALL_1
0x400060f	      0xb800000000	                              mov eax, 0	       509	list.c	FUNCTION_26	IF_1
0x4000614	          0x4885db	                           test rbx, rbx	       508	list.c	FUNCTION_26	IF_1
0x4000617	            0x7451	                            je 0x400066a	       508	list.c	FUNCTION_26	IF_1
0x4000619	          0x4889de	                            mov rsi, rbx	       510	list.c	FUNCTION_26	CALL_2
0x400061c	          0x4c89ef	                            mov rdi, r13	       510	list.c	FUNCTION_26	CALL_2
0x400061f	      0xe800000000	                          call 0x4000624	       510	list.c	FUNCTION_26	CALL_2
0x4000624	    0xc74310020000	               mov dword [rbx + 0x10], 2	       511	list.c	FUNCTION_26
0x400062b	        0xc6431400	                mov byte [rbx + 0x14], 0	       512	list.c	FUNCTION_26
0x400062f	          0x4885ed	                           test rbp, rbp	       513	list.c	FUNCTION_26	IF_2
0x4000632	            0x750f	                           jne 0x4000643	       513	list.c	FUNCTION_26	IF_2
0x4000634	    0x48c743180000	               mov qword [rbx + 0x18], 0	       514	list.c	FUNCTION_26	IF_2
0x400063c	      0xb801000000	                              mov eax, 1	       518	list.c	FUNCTION_26
0x4000641	            0xeb27	                           jmp 0x400066a	       518	list.c	FUNCTION_26
0x4000643	          0x4585e4	                         test r12d, r12d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000646	            0x780d	                            js 0x4000655	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000648	          0x4489e6	                           mov esi, r12d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400064b	          0x4889ef	                            mov rdi, rbp	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400064e	      0xe800000000	                          call 0x4000653	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000653	            0xeb08	                           jmp 0x400065d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000655	          0x4889ef	                            mov rdi, rbp	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000658	      0xe800000000	                          call 0x400065d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x400065d	        0x48894318	             mov qword [rbx + 0x18], rax	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000661	          0x4885c0	                           test rax, rax	       509	list.c	FUNCTION_26	IF_1
0x4000664	           0xf95c0	                                setne al	       509	list.c	FUNCTION_26	IF_1
0x4000667	           0xfb6c0	                           movzx eax, al	       509	list.c	FUNCTION_26	IF_1
0x400066a	        0x4883c408	                              add rsp, 8	       519	list.c	FUNCTION_26
0x400066e	              0x5b	                                 pop rbx	       519	list.c	FUNCTION_26
0x400066f	              0x5d	                                 pop rbp	       519	list.c	FUNCTION_26
0x4000670	            0x415c	                                 pop r12	       519	list.c	FUNCTION_26
0x4000672	            0x415d	                                 pop r13	       519	list.c	FUNCTION_26
0x4000674	              0xc3	                                     ret	       519	list.c	FUNCTION_26
list_append	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,1:WHILE,0:CALL,0	14
0x40004f8	        0x488b4708	                mov rax, qword [rdi + 8]	       425	list.c	FUNCTION_22	IF_1
0x40004fc	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x40004ff	            0x7511	                           jne 0x4000512	       425	list.c	FUNCTION_22	IF_1
0x4000501	          0x488937	                    mov qword [rdi], rsi	       428	list.c	FUNCTION_22	IF_1
0x4000504	        0x48897708	                mov qword [rdi + 8], rsi	       429	list.c	FUNCTION_22	IF_1
0x4000508	    0x48c746080000	                  mov qword [rsi + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000510	            0xeb0f	                           jmp 0x4000521	       430	list.c	FUNCTION_22	IF_1
0x4000512	          0x488930	                    mov qword [rax], rsi	       434	list.c	FUNCTION_22	ELSE_1
0x4000515	        0x488b4708	                mov rax, qword [rdi + 8]	       435	list.c	FUNCTION_22	ELSE_1
0x4000519	        0x48894608	                mov qword [rsi + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x400051d	        0x48897708	                mov qword [rdi + 8], rsi	       436	list.c	FUNCTION_22	ELSE_1
0x4000521	        0x83473c01	               add dword [rdi + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000525	    0x48c706000000	                      mov qword [rsi], 0	       439	list.c	FUNCTION_22
0x400052c	              0xc3	                                     ret	       439	list.c	FUNCTION_22
list_append_number	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	20
0x4000675	              0x55	                                push rbp	       527	list.c	FUNCTION_27
0x4000676	              0x53	                                push rbx	       527	list.c	FUNCTION_27
0x4000677	        0x4883ec08	                              sub rsp, 8	       527	list.c	FUNCTION_27
0x400067b	          0x4889fb	                            mov rbx, rdi	       527	list.c	FUNCTION_27
0x400067e	          0x4889f5	                            mov rbp, rsi	       527	list.c	FUNCTION_27
0x4000681	      0xe800000000	                          call 0x4000686	       530	list.c	FUNCTION_27	CALL_1
0x4000686	          0x4889c6	                            mov rsi, rax	       530	list.c	FUNCTION_27	CALL_1
0x4000689	      0xb800000000	                              mov eax, 0	       532	list.c	FUNCTION_27	IF_1
0x400068e	          0x4885f6	                           test rsi, rsi	       531	list.c	FUNCTION_27	IF_1
0x4000691	            0x741c	                            je 0x40006af	       531	list.c	FUNCTION_27	IF_1
0x4000693	    0xc74610010000	               mov dword [rsi + 0x10], 1	       533	list.c	FUNCTION_27
0x400069a	        0xc6461400	                mov byte [rsi + 0x14], 0	       534	list.c	FUNCTION_27
0x400069e	        0x48896e18	             mov qword [rsi + 0x18], rbp	       535	list.c	FUNCTION_27
0x40006a2	          0x4889df	                            mov rdi, rbx	       536	list.c	FUNCTION_27	CALL_2
0x40006a5	      0xe800000000	                          call 0x40006aa	       536	list.c	FUNCTION_27	CALL_2
0x40006aa	      0xb801000000	                              mov eax, 1	       537	list.c	FUNCTION_27
0x40006af	        0x4883c408	                              add rsp, 8	       538	list.c	FUNCTION_27
0x40006b3	              0x5b	                                 pop rbx	       538	list.c	FUNCTION_27
0x40006b4	              0x5d	                                 pop rbp	       538	list.c	FUNCTION_27
0x40006b5	              0xc3	                                     ret	       538	list.c	FUNCTION_27
rettv_list_set	SWITCH,0:FOR,0:IF,1:functions,0:DO,0:ELSE,0:WHILE,0:CALL,0	6
0x4000153	    0xc70705000000	                      mov dword [rdi], 5	       111	list.c	FUNCTION_6
0x4000159	        0x48897708	                mov qword [rdi + 8], rsi	       112	list.c	FUNCTION_6
0x400015d	          0x4885f6	                           test rsi, rsi	       113	list.c	FUNCTION_6	IF_1
0x4000160	            0x7404	                            je 0x4000166	       113	list.c	FUNCTION_6	IF_1
0x4000162	        0x83463801	               add dword [rsi + 0x38], 1	       114	list.c	FUNCTION_6	IF_1
0x4000166	            0xf3c3	                                     ret	       114	list.c	FUNCTION_6	IF_1
list_join	SWITCH,0:FOR,1:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,4	173
0x4000984	            0x4157	                                push r15	       825	list.c	FUNCTION_36
0x4000986	            0x4156	                                push r14	       825	list.c	FUNCTION_36
0x4000988	            0x4155	                                push r13	       825	list.c	FUNCTION_36
0x400098a	            0x4154	                                push r12	       825	list.c	FUNCTION_36
0x400098c	              0x55	                                push rbp	       825	list.c	FUNCTION_36
0x400098d	              0x53	                                push rbx	       825	list.c	FUNCTION_36
0x400098e	    0x4881eca80000	                           sub rsp, 0xa8	       825	list.c	FUNCTION_36
0x4000995	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       825	list.c	FUNCTION_36
0x400099a	      0x4889542410	             mov qword [rsp + 0x10], rdx	       825	list.c	FUNCTION_36
0x400099f	      0x4489442404	                mov dword [rsp + 4], r8d	       825	list.c	FUNCTION_36
0x40009a4	      0x44894c2408	                mov dword [rsp + 8], r9d	       825	list.c	FUNCTION_36
0x40009a9	    0x64488b042528	                mov rax, qword fs:[0x28]	       825	list.c	FUNCTION_36
0x40009b2	    0x488984249800	             mov qword [rsp + 0x98], rax	       825	list.c	FUNCTION_36
0x40009ba	            0x31c0	                            xor eax, eax	       825	list.c	FUNCTION_36
0x40009bc	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	       831	list.c	FUNCTION_36	IF_1
0x40009bf	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       832	list.c	FUNCTION_36	IF_1
0x40009c7	            0x85d2	                           test edx, edx	       831	list.c	FUNCTION_36	IF_1
0x40009c9	     0xf8e2d020000	                           jle 0x4000bfc	       831	list.c	FUNCTION_36	IF_1
0x40009cf	          0x4889f3	                            mov rbx, rsi	       831	list.c	FUNCTION_36	IF_1
0x40009d2	          0x4189cf	                           mov r15d, ecx	       831	list.c	FUNCTION_36	IF_1
0x40009d5	      0xbe10000000	                           mov esi, 0x10	       833	list.c	FUNCTION_36	CALL_1
0x40009da	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       833	list.c	FUNCTION_36	CALL_1
0x40009df	      0xe800000000	                          call 0x40009e4	       833	list.c	FUNCTION_36	CALL_1
0x40009e4	          0x4c8b2b	                    mov r13, qword [rbx]	       761	list.c	FUNCTION_35	FOR_1
0x40009e7	          0x4d85ed	                           test r13, r13	       761	list.c	FUNCTION_35	FOR_1
0x40009ea	     0xf84f1000000	                            je 0x4000ae1	       761	list.c	FUNCTION_35	FOR_1
0x40009f0	    0x8b0500000000	            mov eax, dword [0x040009f6] 	       761	list.c	FUNCTION_35	FOR_1
0x40009f6	        0x8944240c	              mov dword [rsp + 0xc], eax	       761	list.c	FUNCTION_35	FOR_1
0x40009fa	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x40009fc	     0xf85e7000000	                           jne 0x4000ae9	       761	list.c	FUNCTION_35	FOR_1
0x4000a02	    0x41be00000000	                             mov r14d, 0	       761	list.c	FUNCTION_35	FOR_1
0x4000a08	        0x498d7d10	                   lea rdi, [r13 + 0x10]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a0c	        0x4883ec08	                              sub rsp, 8	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a10	          0x4585ff	                         test r15d, r15d	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a13	           0xf94c0	                                 sete al	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a16	           0xfb6c0	                           movzx eax, al	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a19	              0x50	                                push rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a1a	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a1f	          0x4589f8	                           mov r8d, r15d	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a22	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a26	      0x488d542460	                   lea rdx, [rsp + 0x60]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a2b	      0x488d742438	                   lea rsi, [rsp + 0x38]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a30	      0xe800000000	                          call 0x4000a35	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a35	          0x4989c4	                            mov r12, rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4000a38	        0x4883c410	                           add rsp, 0x10	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000a3c	          0x4885c0	                           test rax, rax	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000a3f	     0xf8481010000	                            je 0x4000bc6	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4000a45	      0xb800000000	                              mov eax, 0	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a4a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a51	          0x4c89e7	                            mov rdi, r12	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a54	            0xf2ae	              repne scasb al, byte [rdi]	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a56	          0x4889c8	                            mov rax, rcx	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a59	          0x48f7d0	                                 not rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a5c	        0x488d68ff	                      lea rbp, [rax - 1]	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4000a60	          0x4101ee	                           add r14d, ebp	       769	list.c	FUNCTION_35	FOR_1
0x4000a63	      0xbe01000000	                              mov esi, 1	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000a68	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000a6d	      0xe800000000	                          call 0x4000a72	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4000a72	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	       772	list.c	FUNCTION_35	FOR_1
0x4000a76	          0x8d4301	                      lea eax, [rbx + 1]	       772	list.c	FUNCTION_35	FOR_1
0x4000a79	        0x89442430	             mov dword [rsp + 0x30], eax	       772	list.c	FUNCTION_35	FOR_1
0x4000a7d	          0x4863db	                         movsxd rbx, ebx	       772	list.c	FUNCTION_35	FOR_1
0x4000a80	        0x48c1e304	                              shl rbx, 4	       772	list.c	FUNCTION_35	FOR_1
0x4000a84	      0x48035c2440	             add rbx, qword [rsp + 0x40]	       772	list.c	FUNCTION_35	FOR_1
0x4000a89	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a8f	            0x750a	                           jne 0x4000a9b	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a91	      0x488d442450	                   lea rax, [rsp + 0x50]	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a96	          0x4939c4	                            cmp r12, rax	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a99	            0x740e	                            je 0x4000aa9	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a9b	          0x4c8923	                    mov qword [rbx], r12	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x4000a9e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4000aa3	        0x48894308	                mov qword [rbx + 8], rax	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4000aa7	            0xeb11	                           jmp 0x4000aba	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x4000aa9	            0x89ee	                            mov esi, ebp	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000aab	          0x4c89e7	                            mov rdi, r12	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000aae	      0xe800000000	                          call 0x4000ab3	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000ab3	          0x488903	                    mov qword [rbx], rax	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x4000ab6	        0x48894308	                mov qword [rbx + 8], rax	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x4000aba	      0xe800000000	                          call 0x4000abf	       784	list.c	FUNCTION_35	FOR_1	CALL_5
0x4000abf	    0x833d00000000	               cmp dword [0x04000ac6], 0	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4000ac6	            0x7527	                           jne 0x4000aef	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4000ac8	        0x4d8b6d00	                    mov r13, qword [r13]	       761	list.c	FUNCTION_35	FOR_1
0x4000acc	          0x4d85ed	                           test r13, r13	       761	list.c	FUNCTION_35	FOR_1
0x4000acf	            0x741e	                            je 0x4000aef	       761	list.c	FUNCTION_35	FOR_1
0x4000ad1	    0x8b0500000000	            mov eax, dword [0x04000ad7] 	       761	list.c	FUNCTION_35	FOR_1
0x4000ad7	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x4000ad9	     0xf8429ffffff	                            je 0x4000a08	       761	list.c	FUNCTION_35	FOR_1
0x4000adf	            0xeb0e	                           jmp 0x4000aef	       761	list.c	FUNCTION_35	FOR_1
0x4000ae1	    0x41be00000000	                             mov r14d, 0	       753	list.c	FUNCTION_35
0x4000ae7	            0xeb06	                           jmp 0x4000aef	       753	list.c	FUNCTION_35
0x4000ae9	    0x41be00000000	                             mov r14d, 0	       753	list.c	FUNCTION_35
0x4000aef	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       791	list.c	FUNCTION_35	IF_4
0x4000af3	          0x83fa01	                              cmp edx, 1	       791	list.c	FUNCTION_35	IF_4
0x4000af6	            0x7e23	                           jle 0x4000b1b	       791	list.c	FUNCTION_35	IF_4
0x4000af8	      0xb800000000	                              mov eax, 0	       792	list.c	FUNCTION_35	CALL_6
0x4000afd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       792	list.c	FUNCTION_35	CALL_6
0x4000b04	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       792	list.c	FUNCTION_35	CALL_6
0x4000b09	            0xf2ae	              repne scasb al, byte [rdi]	       792	list.c	FUNCTION_35	CALL_6
0x4000b0b	          0x48f7d1	                                 not rcx	       792	list.c	FUNCTION_35	CALL_6
0x4000b0e	        0x4883e901	                              sub rcx, 1	       792	list.c	FUNCTION_35	CALL_6
0x4000b12	          0x8d42ff	                      lea eax, [rdx - 1]	       792	list.c	FUNCTION_35	CALL_6
0x4000b15	           0xfafc1	                           imul eax, ecx	       792	list.c	FUNCTION_35	CALL_6
0x4000b18	          0x4101c6	                           add r14d, eax	       792	list.c	FUNCTION_35	CALL_6
0x4000b1b	        0x418d7602	                      lea esi, [r14 + 2]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b1f	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b24	          0x4889ef	                            mov rdi, rbp	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b27	      0xe800000000	                          call 0x4000b2c	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b2c	        0x8944240c	              mov dword [rsp + 0xc], eax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b30	            0x85c0	                           test eax, eax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b32	     0xf848e000000	                            je 0x4000bc6	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x4000b38	      0x837c243000	               cmp dword [rsp + 0x30], 0	       796	list.c	FUNCTION_35	FOR_2
0x4000b3d	            0x7e6b	                           jle 0x4000baa	       796	list.c	FUNCTION_35	FOR_2
0x4000b3f	    0x8b0500000000	            mov eax, dword [0x04000b45] 	       796	list.c	FUNCTION_35	FOR_2
0x4000b45	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x4000b47	            0x756b	                           jne 0x4000bb4	       796	list.c	FUNCTION_35	FOR_2
0x4000b49	      0xbb00000000	                              mov ebx, 0	       796	list.c	FUNCTION_35	FOR_2
0x4000b4e	      0xb801000000	                              mov eax, 1	       796	list.c	FUNCTION_35	FOR_2
0x4000b53	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       796	list.c	FUNCTION_35	FOR_2
0x4000b58	            0x85c0	                           test eax, eax	       798	list.c	FUNCTION_35	FOR_2	IF_6
0x4000b5a	            0x750b	                           jne 0x4000b67	       798	list.c	FUNCTION_35	FOR_2	IF_6
0x4000b5c	          0x4c89e6	                            mov rsi, r12	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000b5f	          0x4889ef	                            mov rdi, rbp	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000b62	      0xe800000000	                          call 0x4000b67	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4000b67	          0x4863c3	                         movsxd rax, ebx	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b6a	        0x48c1e004	                              shl rax, 4	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b6e	      0x4803442440	             add rax, qword [rsp + 0x40]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b73	          0x488b30	                    mov rsi, qword [rax]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b76	          0x4885f6	                           test rsi, rsi	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b79	            0x7408	                            je 0x4000b83	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4000b7b	          0x4889ef	                            mov rdi, rbp	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4000b7e	      0xe800000000	                          call 0x4000b83	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4000b83	      0xe800000000	                          call 0x4000b88	       806	list.c	FUNCTION_35	FOR_2	CALL_10
0x4000b88	          0x83c301	                              add ebx, 1	       796	list.c	FUNCTION_35	FOR_2
0x4000b8b	        0x3b5c2430	            cmp ebx, dword [rsp + 0x30] 	       796	list.c	FUNCTION_35	FOR_2
0x4000b8f	            0x7d2d	                           jge 0x4000bbe	       796	list.c	FUNCTION_35	FOR_2
0x4000b91	    0x8b1500000000	            mov edx, dword [0x04000b97] 	       796	list.c	FUNCTION_35	FOR_2
0x4000b97	      0xb800000000	                              mov eax, 0	       796	list.c	FUNCTION_35	FOR_2
0x4000b9c	            0x85d2	                           test edx, edx	       796	list.c	FUNCTION_35	FOR_2
0x4000b9e	            0x74b8	                            je 0x4000b58	       796	list.c	FUNCTION_35	FOR_2
0x4000ba0	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       809	list.c	FUNCTION_35
0x4000ba8	            0xeb1c	                           jmp 0x4000bc6	       809	list.c	FUNCTION_35
0x4000baa	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       809	list.c	FUNCTION_35
0x4000bb2	            0xeb12	                           jmp 0x4000bc6	       809	list.c	FUNCTION_35
0x4000bb4	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       809	list.c	FUNCTION_35
0x4000bbc	            0xeb08	                           jmp 0x4000bc6	       809	list.c	FUNCTION_35
0x4000bbe	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       809	list.c	FUNCTION_35
0x4000bc6	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       838	list.c	FUNCTION_36	IF_2
0x4000bcb	          0x4885db	                           test rbx, rbx	       838	list.c	FUNCTION_36	IF_2
0x4000bce	            0x742c	                            je 0x4000bfc	       838	list.c	FUNCTION_36	IF_2
0x4000bd0	      0x837c243000	               cmp dword [rsp + 0x30], 0	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bd5	            0x7e1b	                           jle 0x4000bf2	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bd7	      0xbd00000000	                              mov ebp, 0	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bdc	        0x488b7b08	                mov rdi, qword [rbx + 8]	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4000be0	      0xe800000000	                          call 0x4000be5	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4000be5	        0x4883c310	                           add rbx, 0x10	       844	list.c	FUNCTION_36	IF_2	FOR_1
0x4000be9	          0x83c501	                              add ebp, 1	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bec	        0x396c2430	            cmp dword [rsp + 0x30], ebp 	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bf0	            0x7fea	                            jg 0x4000bdc	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4000bf2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4000bf7	      0xe800000000	                          call 0x4000bfc	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4000bfc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       850	list.c	FUNCTION_36
0x4000c00	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       850	list.c	FUNCTION_36
0x4000c08	    0x644833142528	                xor rdx, qword fs:[0x28]	       850	list.c	FUNCTION_36
0x4000c11	            0x7405	                            je 0x4000c18	       850	list.c	FUNCTION_36
0x4000c13	      0xe800000000	                          call 0x4000c18	       850	list.c	FUNCTION_36
0x4000c18	    0x4881c4a80000	                           add rsp, 0xa8	       850	list.c	FUNCTION_36
0x4000c1f	              0x5b	                                 pop rbx	       850	list.c	FUNCTION_36
0x4000c20	              0x5d	                                 pop rbp	       850	list.c	FUNCTION_36
0x4000c21	            0x415c	                                 pop r12	       850	list.c	FUNCTION_36
0x4000c23	            0x415d	                                 pop r13	       850	list.c	FUNCTION_36
0x4000c25	            0x415e	                                 pop r14	       850	list.c	FUNCTION_36
0x4000c27	            0x415f	                                 pop r15	       850	list.c	FUNCTION_36
0x4000c29	              0xc3	                                     ret	       850	list.c	FUNCTION_36
list_copy	SWITCH,0:FOR,1:IF,7:functions,0:DO,0:ELSE,1:WHILE,0:CALL,7	76
0x40007aa	          0x4885ff	                           test rdi, rdi	       638	list.c	FUNCTION_32	IF_1
0x40007ad	     0xf84c1000000	                            je 0x4000874	       638	list.c	FUNCTION_32	IF_1
0x40007b3	            0x4156	                                push r14	       633	list.c	FUNCTION_32
0x40007b5	            0x4155	                                push r13	       633	list.c	FUNCTION_32
0x40007b7	            0x4154	                                push r12	       633	list.c	FUNCTION_32
0x40007b9	              0x55	                                push rbp	       633	list.c	FUNCTION_32
0x40007ba	              0x53	                                push rbx	       633	list.c	FUNCTION_32
0x40007bb	          0x4189d6	                           mov r14d, edx	       633	list.c	FUNCTION_32
0x40007be	          0x4189f4	                           mov r12d, esi	       633	list.c	FUNCTION_32
0x40007c1	          0x4889fb	                            mov rbx, rdi	       633	list.c	FUNCTION_32
0x40007c4	      0xe800000000	                          call 0x40007c9	       641	list.c	FUNCTION_32	CALL_1
0x40007c9	          0x4989c5	                            mov r13, rax	       641	list.c	FUNCTION_32	CALL_1
0x40007cc	          0x4885c0	                           test rax, rax	       642	list.c	FUNCTION_32	IF_2
0x40007cf	     0xf84a5000000	                            je 0x400087a	       642	list.c	FUNCTION_32	IF_2
0x40007d5	          0x4585f6	                         test r14d, r14d	       644	list.c	FUNCTION_32	IF_2	IF_3
0x40007d8	            0x7408	                            je 0x40007e2	       644	list.c	FUNCTION_32	IF_2	IF_3
0x40007da	        0x44897344	            mov dword [rbx + 0x44], r14d	       648	list.c	FUNCTION_32	IF_2	IF_3
0x40007de	        0x48894320	             mov qword [rbx + 0x20], rax	       649	list.c	FUNCTION_32	IF_2	IF_3
0x40007e2	          0x488b1b	                    mov rbx, qword [rbx]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007e5	          0x4885db	                           test rbx, rbx	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007e8	     0xf849f000000	                            je 0x400088d	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007ee	    0x8b0500000000	            mov eax, dword [0x040007f4] 	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007f4	            0x85c0	                           test eax, eax	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007f6	     0xf858a000000	                           jne 0x4000886	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x40007fc	      0xe800000000	                          call 0x4000801	       654	list.c	FUNCTION_32	IF_2	FOR_1	CALL_2
0x4000801	          0x4889c5	                            mov rbp, rax	       654	list.c	FUNCTION_32	IF_2	FOR_1	CALL_2
0x4000804	          0x4885c0	                           test rax, rax	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000807	            0x7452	                            je 0x400085b	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000809	          0x4585e4	                         test r12d, r12d	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x400080c	            0x7421	                            je 0x400082f	       657	list.c	FUNCTION_32	IF_2	FOR_1	IF_5
0x400080e	        0x488d7010	                   lea rsi, [rax + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000812	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000816	          0x4489f1	                           mov ecx, r14d	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000819	          0x4489e2	                           mov edx, r12d	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x400081c	      0xe800000000	                          call 0x4000821	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000821	            0x85c0	                           test eax, eax	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000823	            0x7517	                           jne 0x400083c	       659	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_3
0x4000825	          0x4889ef	                            mov rdi, rbp	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x4000828	      0xe800000000	                          call 0x400082d	       661	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6	CALL_4
0x400082d	            0xeb2c	                           jmp 0x400085b	       662	list.c	FUNCTION_32	IF_2	FOR_1	IF_5	IF_6
0x400082f	        0x488d7010	                   lea rsi, [rax + 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000833	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000837	      0xe800000000	                          call 0x400083c	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x400083c	          0x4889ee	                            mov rsi, rbp	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x400083f	          0x4c89ef	                            mov rdi, r13	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000842	      0xe800000000	                          call 0x4000847	       667	list.c	FUNCTION_32	IF_2	FOR_1	CALL_6
0x4000847	          0x488b1b	                    mov rbx, qword [rbx]	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x400084a	          0x4885db	                           test rbx, rbx	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x400084d	            0x743e	                            je 0x400088d	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x400084f	    0x8b0d00000000	            mov ecx, dword [0x04000855] 	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000855	            0x85c9	                           test ecx, ecx	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000857	            0x74a3	                            je 0x40007fc	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000859	            0xeb2b	                           jmp 0x4000886	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x400085b	      0x4183453801	               add dword [r13 + 0x38], 1	       669	list.c	FUNCTION_32	IF_2
0x4000860	          0x4885db	                           test rbx, rbx	       670	list.c	FUNCTION_32	IF_2	IF_7
0x4000863	            0x741c	                            je 0x4000881	       670	list.c	FUNCTION_32	IF_2	IF_7
0x4000865	          0x4c89ef	                            mov rdi, r13	       672	list.c	FUNCTION_32	IF_2	IF_7	CALL_7
0x4000868	      0xe800000000	                          call 0x400086d	       672	list.c	FUNCTION_32	IF_2	IF_7	CALL_7
0x400086d	      0xb800000000	                              mov eax, 0	       673	list.c	FUNCTION_32	IF_2	IF_7
0x4000872	            0xeb21	                           jmp 0x4000895	       673	list.c	FUNCTION_32	IF_2	IF_7
0x4000874	      0xb800000000	                              mov eax, 0	       639	list.c	FUNCTION_32	IF_1
0x4000879	              0xc3	                                     ret	       678	list.c	FUNCTION_32
0x400087a	      0xb800000000	                              mov eax, 0	       641	list.c	FUNCTION_32	CALL_1
0x400087f	            0xeb14	                           jmp 0x4000895	       641	list.c	FUNCTION_32	CALL_1
0x4000881	          0x4c89e8	                            mov rax, r13	       641	list.c	FUNCTION_32	CALL_1
0x4000884	            0xeb0f	                           jmp 0x4000895	       641	list.c	FUNCTION_32	CALL_1
0x4000886	      0x4183453801	               add dword [r13 + 0x38], 1	       669	list.c	FUNCTION_32	IF_2
0x400088b	            0xebd8	                           jmp 0x4000865	       669	list.c	FUNCTION_32	IF_2
0x400088d	      0x4183453801	               add dword [r13 + 0x38], 1	       669	list.c	FUNCTION_32	IF_2
0x4000892	          0x4c89e8	                            mov rax, r13	       641	list.c	FUNCTION_32	CALL_1
0x4000895	              0x5b	                                 pop rbx	       678	list.c	FUNCTION_32
0x4000896	              0x5d	                                 pop rbp	       678	list.c	FUNCTION_32
0x4000897	            0x415c	                                 pop r12	       678	list.c	FUNCTION_32
0x4000899	            0x415d	                                 pop r13	       678	list.c	FUNCTION_32
0x400089b	            0x415e	                                 pop r14	       678	list.c	FUNCTION_32
0x400089d	              0xc3	                                     ret	       678	list.c	FUNCTION_32
list_find_nr	SWITCH,0:FOR,0:IF,2:functions,0:DO,0:ELSE,0:WHILE,0:CALL,2	15
0x400043f	              0x53	                                push rbx	       369	list.c	FUNCTION_19
0x4000440	          0x4889d3	                            mov rbx, rdx	       369	list.c	FUNCTION_19
0x4000443	      0xe800000000	                          call 0x4000448	       372	list.c	FUNCTION_19	CALL_1
0x4000448	          0x4885c0	                           test rax, rax	       373	list.c	FUNCTION_19	IF_1
0x400044b	            0x7514	                           jne 0x4000461	       373	list.c	FUNCTION_19	IF_1
0x400044d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       377	list.c	FUNCTION_19	IF_1
0x4000454	          0x4885db	                           test rbx, rbx	       375	list.c	FUNCTION_19	IF_1	IF_2
0x4000457	            0x7414	                            je 0x400046d	       375	list.c	FUNCTION_19	IF_1	IF_2
0x4000459	    0xc70301000000	                      mov dword [rbx], 1	       376	list.c	FUNCTION_19	IF_1	IF_2
0x400045f	            0xeb0c	                           jmp 0x400046d	       376	list.c	FUNCTION_19	IF_1	IF_2
0x4000461	        0x488d7810	                   lea rdi, [rax + 0x10]	       379	list.c	FUNCTION_19	CALL_2
0x4000465	          0x4889de	                            mov rsi, rbx	       379	list.c	FUNCTION_19	CALL_2
0x4000468	      0xe800000000	                          call 0x400046d	       379	list.c	FUNCTION_19	CALL_2
0x400046d	              0x5b	                                 pop rbx	       380	list.c	FUNCTION_19
0x400046e	              0xc3	                                     ret	       380	list.c	FUNCTION_19
