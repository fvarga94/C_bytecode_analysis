set_option_value	SWITCH,0:functions,0:ELSE,4:FOR,1:IF,10:DO,0:CALL,18:WHILE,0	217
0x400d519	            0x4157	                                push r15	      9697	option.c	FUNCTION_56
0x400d51b	            0x4156	                                push r14	      9697	option.c	FUNCTION_56
0x400d51d	            0x4155	                                push r13	      9697	option.c	FUNCTION_56
0x400d51f	            0x4154	                                push r12	      9697	option.c	FUNCTION_56
0x400d521	              0x55	                                push rbp	      9697	option.c	FUNCTION_56
0x400d522	              0x53	                                push rbx	      9697	option.c	FUNCTION_56
0x400d523	        0x4883ec18	                           sub rsp, 0x18	      9697	option.c	FUNCTION_56
0x400d527	          0x4989fc	                            mov r12, rdi	      9697	option.c	FUNCTION_56
0x400d52a	          0x4989f7	                            mov r15, rsi	      9697	option.c	FUNCTION_56
0x400d52d	          0x4889d5	                            mov rbp, rdx	      9697	option.c	FUNCTION_56
0x400d530	          0x4189cd	                           mov r13d, ecx	      9697	option.c	FUNCTION_56
0x400d533	    0x64488b042528	                mov rax, qword fs:[0x28]	      9697	option.c	FUNCTION_56
0x400d53c	      0x4889442408	                mov qword [rsp + 8], rax	      9697	option.c	FUNCTION_56
0x400d541	            0x31c0	                            xor eax, eax	      9697	option.c	FUNCTION_56
0x400d543	      0xe8cf2dffff	                     call sym.findoption	      9702	option.c	FUNCTION_56	CALL_1
0x400d548	            0x85c0	                           test eax, eax	      9703	option.c	FUNCTION_56	IF_1
0x400d54a	     0xf89b1000000	                           jns 0x400d601	      9703	option.c	FUNCTION_56	IF_1
0x400d550	      0xb800000000	                              mov eax, 0	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d555	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d55c	          0x4c89e7	                            mov rdi, r12	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d55f	            0xf2ae	              repne scasb al, byte [rdi]	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d561	        0x4883f9fa	             cmp rcx, 0xfffffffffffffffa	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d565	            0x7571	                           jne 0x400d5d8	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d567	      0x41803c2474	                    cmp byte [r12], 0x74	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d56c	            0x756a	                           jne 0x400d5d8	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d56e	    0x41807c24015f	                cmp byte [r12 + 1], 0x5f	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d574	            0x7562	                           jne 0x400d5d8	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400d576	          0x4c89e7	                            mov rdi, r12	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400d579	      0xe89750ffff	                call sym.find_key_option	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400d57e	            0x85c0	                           test eax, eax	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400d580	            0x7456	                            je 0x400d5d8	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400d582	            0x85c0	                           test eax, eax	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400d584	            0x7912	                           jns 0x400d598	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400d586	            0x89c2	                            mov edx, eax	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400d588	            0xf7da	                                 neg edx	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400d58a	          0x881424	                      mov byte [rsp], dl	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400d58d	            0xf7d8	                                 neg eax	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400d58f	          0xc1e808	                              shr eax, 8	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400d592	        0x88442401	                  mov byte [rsp + 1], al	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400d596	            0xeb08	                           jmp 0x400d5a0	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400d598	        0xc60424f2	                    mov byte [rsp], 0xf2	      9719	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400d59c	        0x88442401	                  mov byte [rsp + 1], al	      9720	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400d5a0	      0xba00000000	                              mov edx, 0	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400d5a5	          0x4889ee	                            mov rsi, rbp	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400d5a8	          0x4889e7	                            mov rdi, rsp	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400d5ab	      0xe800000000	                          call 0x400d5b0	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400d5b0	    0x8b0500000000	            mov eax, dword [0x0400d5b6] 	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400d5b6	            0x85c0	                           test eax, eax	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400d5b8	            0x740a	                            je 0x400d5c4	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400d5ba	      0xbf00000000	                              mov edi, 0	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400d5bf	      0xe800000000	                          call 0x400d5c4	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400d5c4	      0xbf32000000	                           mov edi, 0x32	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400d5c9	      0xe800000000	                          call 0x400d5ce	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400d5ce	      0xb800000000	                              mov eax, 0	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400d5d3	      0xe945020000	                           jmp 0x400d81d	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400d5d8	      0xba05000000	                              mov edx, 5	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5dd	      0xbe00000000	                              mov esi, 0	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5e2	      0xbf00000000	                              mov edi, 0	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5e7	      0xe800000000	                          call 0x400d5ec	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5ec	          0x4c89e6	                            mov rsi, r12	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5ef	          0x4889c7	                            mov rdi, rax	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5f2	      0xe800000000	                          call 0x400d5f7	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400d5f7	      0xb800000000	                              mov eax, 0	      9777	option.c	FUNCTION_56
0x400d5fc	      0xe91c020000	                           jmp 0x400d81d	      9777	option.c	FUNCTION_56
0x400d601	            0x89c3	                            mov ebx, eax	      9777	option.c	FUNCTION_56
0x400d603	            0x4898	                                    cdqe	      9733	option.c	FUNCTION_56	ELSE_2
0x400d605	        0x48c1e006	                              shl rax, 6	      9733	option.c	FUNCTION_56	ELSE_2
0x400d609	    0x4c8bb0000000	                    mov r14, qword [rax]	      9733	option.c	FUNCTION_56	ELSE_2
0x400d610	    0x833d00000000	               cmp dword [0x0400d617], 0	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d617	            0x7e2f	                           jle 0x400d648	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d619	    0x41f7c6000008	                      test r14d, 0x80000	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d620	            0x7426	                            je 0x400d648	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d622	      0xba05000000	                              mov edx, 5	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d627	      0xbe00000000	                              mov esi, 0	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d62c	      0xbf00000000	                              mov edi, 0	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d631	      0xe800000000	                          call 0x400d636	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d636	          0x4889c7	                            mov rdi, rax	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d639	      0xe800000000	                          call 0x400d63e	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400d63e	      0xb800000000	                              mov eax, 0	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d643	      0xe9d5010000	                           jmp 0x400d81d	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400d648	        0x41f6c604	                            test r14b, 4	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400d64c	     0xf8415010000	                            je 0x400d767	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400d652	          0x4863c3	                         movsxd rax, ebx	      5970	option.c	FUNCTION_38	IF_1
0x400d655	        0x48c1e006	                              shl rax, 6	      5970	option.c	FUNCTION_38	IF_1
0x400d659	    0x488b80000000	                    mov rax, qword [rax]	      5970	option.c	FUNCTION_38	IF_1
0x400d660	          0x4885c0	                           test rax, rax	      5970	option.c	FUNCTION_38	IF_1
0x400d663	     0xf84b4010000	                            je 0x400d81d	      5970	option.c	FUNCTION_38	IF_1
0x400d669	          0x4889ef	                            mov rdi, rbp	      5973	option.c	FUNCTION_38	CALL_1
0x400d66c	      0xe800000000	                          call 0x400d671	      5973	option.c	FUNCTION_38	CALL_1
0x400d671	          0x4989c4	                            mov r12, rax	      5973	option.c	FUNCTION_38	CALL_1
0x400d674	          0x4885c0	                           test rax, rax	      5974	option.c	FUNCTION_38	IF_2
0x400d677	     0xf8494010000	                            je 0x400d811	      5974	option.c	FUNCTION_38	IF_2
0x400d67d	          0x4489ee	                           mov esi, r13d	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d680	        0x41f6c506	                            test r13b, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d684	            0x751d	                           jne 0x400d6a3	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d686	          0x4863c3	                         movsxd rax, ebx	      5978	option.c	FUNCTION_38	IF_2
0x400d689	        0x48c1e006	                              shl rax, 6	      5978	option.c	FUNCTION_38	IF_2
0x400d68d	    0x8b8000000000	                    mov eax, dword [rax]	      5979	option.c	FUNCTION_38	IF_2
0x400d693	      0x2500100000	                         and eax, 0x1000	      5979	option.c	FUNCTION_38	IF_2
0x400d698	          0x83f801	                              cmp eax, 1	      5979	option.c	FUNCTION_38	IF_2
0x400d69b	            0x19f6	                            sbb esi, esi	      5979	option.c	FUNCTION_38	IF_2
0x400d69d	          0x83e602	                              and esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x400d6a0	          0x83c602	                              add esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x400d6a3	          0x4863fb	                         movsxd rdi, ebx	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d6a6	        0x48c1e706	                              shl rdi, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d6aa	    0x4881c7000000	                              add rdi, 0	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d6b1	      0xe8fe3fffff	                 call sym.get_varp_scope	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d6b6	          0x4889c5	                            mov rbp, rax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400d6b9	          0x4c8b38	                    mov r15, qword [rax]	      5981	option.c	FUNCTION_38	IF_2
0x400d6bc	          0x4c8920	                    mov qword [rax], r12	      5982	option.c	FUNCTION_38	IF_2
0x400d6bf	    0x833d00000000	               cmp dword [0x0400d6c6], 0	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x400d6c6	            0x752b	                           jne 0x400d6f3	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x400d6c8	          0x4863c3	                         movsxd rax, ebx	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400d6cb	        0x48c1e006	                              shl rax, 6	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400d6cf	    0x81b800000000	                 cmp dword [rax], 0x402c	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400d6d9	            0x7426	                            je 0x400d701	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400d6db	          0x4c89ff	                            mov rdi, r15	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400d6de	      0xe800000000	                          call 0x400d6e3	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400d6e3	          0x4989c6	                            mov r14, rax	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400d6e6	          0x4c89e7	                            mov rdi, r12	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400d6e9	      0xe800000000	                          call 0x400d6ee	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400d6ee	          0x4989c4	                            mov r12, rax	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400d6f1	            0xeb1a	                           jmp 0x400d70d	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400d6f3	    0x41bc00000000	                             mov r12d, 0	      5966	option.c	FUNCTION_38
0x400d6f9	    0x41be00000000	                             mov r14d, 0	      5965	option.c	FUNCTION_38
0x400d6ff	            0xeb0c	                           jmp 0x400d70d	      5965	option.c	FUNCTION_38
0x400d701	    0x41bc00000000	                             mov r12d, 0	      5966	option.c	FUNCTION_38
0x400d707	    0x41be00000000	                             mov r14d, 0	      5965	option.c	FUNCTION_38
0x400d70d	          0x4589e9	                           mov r9d, r13d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d710	    0x41b800000000	                              mov r8d, 0	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d716	          0x4c89f9	                            mov rcx, r15	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d719	      0xba01000000	                              mov edx, 1	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d71e	          0x4889ee	                            mov rsi, rbp	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d721	            0x89df	                            mov edi, ebx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d723	      0xe89a83ffff	          call sym.did_set_string_option	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d728	          0x4889c5	                            mov rbp, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d72b	          0x4885c0	                           test rax, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d72e	            0x751f	                           jne 0x400d74f	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d730	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400d735	          0x4489ee	                           mov esi, r13d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400d738	            0x89df	                            mov edi, ebx	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400d73a	      0xe8d729ffff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400d73f	          0x4c89e1	                            mov rcx, r12	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400d742	          0x4c89f2	                            mov rdx, r14	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400d745	          0x4489ee	                           mov esi, r13d	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400d748	            0x89df	                            mov edi, ebx	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400d74a	      0xe8604fffff	      call sym.trigger_optionsset_string	      6002	option.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x400d74f	          0x4c89f7	                            mov rdi, r14	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x400d752	      0xe800000000	                          call 0x400d757	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x400d757	          0x4c89e7	                            mov rdi, r12	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400d75a	      0xe800000000	                          call 0x400d75f	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400d75f	          0x4889e8	                            mov rax, rbp	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d762	      0xe9b6000000	                           jmp 0x400d81d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400d767	          0x4863fb	                         movsxd rdi, ebx	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400d76a	        0x48c1e706	                              shl rdi, 6	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400d76e	    0x4881c7000000	                              add rdi, 0	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400d775	          0x4489ee	                           mov esi, r13d	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400d778	      0xe8373fffff	                 call sym.get_varp_scope	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400d77d	          0x4885c0	                           test rax, rax	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400d780	     0xf8492000000	                            je 0x400d818	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400d786	          0x4d85ff	                           test r15, r15	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400d789	            0x7551	                           jne 0x400d7dc	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400d78b	          0x4885ed	                           test rbp, rbp	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400d78e	            0x744c	                            je 0x400d7dc	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400d790	        0x807d0030	                    cmp byte [rbp], 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d794	            0x751d	                           jne 0x400d7b3	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d796	      0xba00000000	                              mov edx, 0	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d79b	          0x83c201	                              add edx, 1	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d79e	          0x4863ca	                         movsxd rcx, edx	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d7a1	       0xfb64c0d00	             movzx ecx, byte [rbp + rcx]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d7a6	          0x80f930	                            cmp cl, 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d7a9	            0x74f0	                            je 0x400d79b	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400d7ab	            0x84c9	                             test cl, cl	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7ad	            0x7504	                           jne 0x400d7b3	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7af	            0x85d2	                           test edx, edx	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7b1	            0x7529	                           jne 0x400d7dc	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7b3	      0xba05000000	                              mov edx, 5	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7b8	      0xbe00000000	                              mov esi, 0	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7bd	      0xbf00000000	                              mov edi, 0	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7c2	      0xe800000000	                          call 0x400d7c7	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7c7	          0x4889ea	                            mov rdx, rbp	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7ca	          0x4c89e6	                            mov rsi, r12	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7cd	          0x4889c7	                            mov rdi, rax	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7d0	      0xe800000000	                          call 0x400d7d5	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400d7d5	      0xb800000000	                              mov eax, 0	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7da	            0xeb41	                           jmp 0x400d81d	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400d7dc	        0x41f6c602	                            test r14b, 2	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400d7e0	            0x741d	                            je 0x400d7ff	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400d7e2	          0x4589e9	                           mov r9d, r13d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7e5	    0x41b800000000	                              mov r8d, 0	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7eb	      0xb900000000	                              mov ecx, 0	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7f0	          0x4c89fa	                            mov rdx, r15	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7f3	          0x4889c6	                            mov rsi, rax	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7f6	            0x89df	                            mov edi, ebx	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7f8	      0xe80bc6ffff	                 call sym.set_num_option	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7fd	            0xeb1e	                           jmp 0x400d81d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400d7ff	          0x4489e9	                           mov ecx, r13d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d802	          0x4489fa	                           mov edx, r15d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d805	          0x4889c6	                            mov rsi, rax	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d808	            0x89df	                            mov edi, ebx	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d80a	      0xe83fd5ffff	                call sym.set_bool_option	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d80f	            0xeb0c	                           jmp 0x400d81d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400d811	      0xb800000000	                              mov eax, 0	      5968	option.c	FUNCTION_38
0x400d816	            0xeb05	                           jmp 0x400d81d	      5968	option.c	FUNCTION_38
0x400d818	      0xb800000000	                              mov eax, 0	      9777	option.c	FUNCTION_56
0x400d81d	      0x488b742408	                mov rsi, qword [rsp + 8]	      9778	option.c	FUNCTION_56
0x400d822	    0x644833342528	                xor rsi, qword fs:[0x28]	      9778	option.c	FUNCTION_56
0x400d82b	            0x7405	                            je 0x400d832	      9778	option.c	FUNCTION_56
0x400d82d	      0xe800000000	                          call 0x400d832	      9778	option.c	FUNCTION_56
0x400d832	        0x4883c418	                           add rsp, 0x18	      9778	option.c	FUNCTION_56
0x400d836	              0x5b	                                 pop rbx	      9778	option.c	FUNCTION_56
0x400d837	              0x5d	                                 pop rbp	      9778	option.c	FUNCTION_56
0x400d838	            0x415c	                                 pop r12	      9778	option.c	FUNCTION_56
0x400d83a	            0x415d	                                 pop r13	      9778	option.c	FUNCTION_56
0x400d83c	            0x415e	                                 pop r14	      9778	option.c	FUNCTION_56
0x400d83e	            0x415f	                                 pop r15	      9778	option.c	FUNCTION_56
0x400d840	              0xc3	                                     ret	      9778	option.c	FUNCTION_56
compatible_set	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,4:WHILE,0	36
0x400409f	              0x55	                                push rbp	     12286	option.c	FUNCTION_104
0x40040a0	              0x53	                                push rbx	     12286	option.c	FUNCTION_104
0x40040a1	        0x4883ec08	                              sub rsp, 8	     12286	option.c	FUNCTION_104
0x40040a5	      0xbb00000000	                              mov ebx, 0	     12286	option.c	FUNCTION_104
0x40040aa	      0xbd00000000	                              mov ebp, 0	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040af	            0xeb3b	                           jmp 0x40040ec	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040b1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040b5	          0xf6c408	                              test ah, 8	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040b8	            0x740b	                            je 0x40040c5	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040ba	    0x833d00000000	               cmp dword [0x040040c1], 0	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040c1	            0x7510	                           jne 0x40040d3	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040c3	            0xeb3f	                           jmp 0x4004104	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40040c5	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40040c8	            0x751b	                           jne 0x40040e5	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40040ca	    0x833d00000000	               cmp dword [0x040040d1], 0	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40040d1	            0x7512	                           jne 0x40040e5	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40040d3	    0x8b1500000000	            mov edx, dword [0x040040d9] 	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40040d9	      0xbe01000000	                              mov esi, 1	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40040de	            0x89ef	                            mov edi, ebp	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40040e0	      0xe842fdffff	             call sym.set_option_default	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40040e5	          0x83c501	                              add ebp, 1	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040e8	        0x4883c340	                           add rbx, 0x40	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040ec	          0x4889df	                            mov rdi, rbx	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040ef	      0xe8fdc0ffff	                   call sym.istermoption	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040f4	            0x85c0	                           test eax, eax	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040f6	            0x74b9	                            je 0x40040b1	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40040f8	      0xe897f2ffff	                 call sym.didset_options	     12293	option.c	FUNCTION_104	CALL_3
0x40040fd	      0xe884e3ffff	                call sym.didset_options2	     12294	option.c	FUNCTION_104	CALL_4
0x4004102	            0xeb07	                           jmp 0x400410b	     12295	option.c	FUNCTION_104
0x4004104	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004107	            0x74ca	                            je 0x40040d3	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004109	            0xebda	                           jmp 0x40040e5	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x400410b	        0x4883c408	                              add rsp, 8	     12295	option.c	FUNCTION_104
0x400410f	              0x5b	                                 pop rbx	     12295	option.c	FUNCTION_104
0x4004110	              0x5d	                                 pop rbp	     12295	option.c	FUNCTION_104
0x4004111	              0xc3	                                     ret	     12295	option.c	FUNCTION_104
did_set_spell_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,4:DO,0:CALL,4:WHILE,0	47
0x4001a22	            0x85ff	                           test edi, edi	      8042	option.c	FUNCTION_46	IF_1
0x4001a24	     0xf8487000000	                            je 0x4001ab1	      8042	option.c	FUNCTION_46	IF_1
0x4001a2a	    0x488b05000000	            mov rax, qword [0x04001a31] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a31	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a35	    0x488b90780400	           mov rdx, qword [rax + 0x478] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a3c	      0xb800000000	                              mov eax, 0	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a41	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a48	          0x4889d7	                            mov rdi, rdx	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a4b	            0xf2ae	              repne scasb al, byte [rdi]	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a4d	          0x48f7d1	                                 not rcx	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a50	        0x4883e901	                              sub rcx, 1	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4001a54	            0x85c9	                           test ecx, ecx	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4001a56	            0x7e59	                           jle 0x4001ab1	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4001a58	      0xb800000000	                              mov eax, 0	      8047	option.c	FUNCTION_46	IF_1	IF_2
0x4001a5d	          0x83f903	                              cmp ecx, 3	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4001a60	            0x7e68	                           jle 0x4001aca	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4001a62	          0x4863c9	                         movsxd rcx, ecx	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a65	      0x488d740afc	                lea rsi, [rdx + rcx - 4]	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a6a	      0xbf00000000	                              mov edi, 0	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a6f	      0xb905000000	                              mov ecx, 5	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a74	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a76	           0xf97c1	                                 seta cl	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a79	           0xf92c2	                                 setb dl	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a7c	            0x38d1	                              cmp cl, dl	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a7e	            0x754a	                           jne 0x4001aca	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a80	            0xeb2f	                           jmp 0x4001ab1	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4001a82	        0x48394708	                cmp qword [rdi + 8], rax	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001a86	            0x7514	                           jne 0x4001a9c	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001a88	    0x83bf68020000	              cmp dword [rdi + 0x268], 0	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001a8f	            0x740b	                            je 0x4001a9c	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001a91	        0x4883ec08	                              sub rsp, 8	      8037	option.c	FUNCTION_46
0x4001a95	      0xe800000000	                          call 0x4001a9a	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4001a9a	            0xeb2a	                           jmp 0x4001ac6	      8056	option.c	FUNCTION_46	IF_3	IF_4
0x4001a9c	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001aa0	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001aa3	            0x75dd	                           jne 0x4001a82	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001aa5	      0xb800000000	                              mov eax, 0	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001aaa	              0xc3	                                     ret	      8060	option.c	FUNCTION_46
0x4001aab	      0xb800000000	                              mov eax, 0	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001ab0	              0xc3	                                     ret	      8059	option.c	FUNCTION_46
0x4001ab1	    0x488b3d000000	            mov rdi, qword [0x04001ab8] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001ab8	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001abb	            0x74ee	                            je 0x4001aab	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4001abd	    0x488b05000000	            mov rax, qword [0x04001ac4] 	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001ac4	            0xebbc	                           jmp 0x4001a82	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4001ac6	        0x4883c408	                              add rsp, 8	      8060	option.c	FUNCTION_46
0x4001aca	            0xf3c3	                                     ret	      8060	option.c	FUNCTION_46
comp_col	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,6:DO,0:CALL,0:WHILE,0	47
0x4004c7e	    0x488b05000000	            mov rax, qword [0x04004c85] 	     10391	option.c	FUNCTION_74
0x4004c85	      0xba01000000	                              mov edx, 1	     10391	option.c	FUNCTION_74
0x4004c8a	        0x4883f802	                              cmp rax, 2	     10391	option.c	FUNCTION_74
0x4004c8e	            0x741f	                            je 0x4004caf	     10391	option.c	FUNCTION_74
0x4004c90	      0xba00000000	                              mov edx, 0	     10391	option.c	FUNCTION_74
0x4004c95	        0x4883f801	                              cmp rax, 1	     10391	option.c	FUNCTION_74
0x4004c99	            0x7514	                           jne 0x4004caf	     10391	option.c	FUNCTION_74
0x4004c9b	    0x488b05000000	            mov rax, qword [0x04004ca2] 	     10391	option.c	FUNCTION_74
0x4004ca2	    0x483905000000	            cmp qword [0x04004ca9], rax 	     10391	option.c	FUNCTION_74
0x4004ca9	           0xf95c2	                                setne dl	     10391	option.c	FUNCTION_74
0x4004cac	           0xfb6d2	                           movzx edx, dl	     10391	option.c	FUNCTION_74
0x4004caf	    0xc70500000000	               mov dword [0x04004cb9], 0	     10393	option.c	FUNCTION_74
0x4004cb9	    0xc70500000000	               mov dword [0x04004cc3], 0	     10394	option.c	FUNCTION_74
0x4004cc3	    0x833d00000000	               cmp dword [0x04004cca], 0	     10395	option.c	FUNCTION_74	IF_1
0x4004cca	            0x7473	                            je 0x4004d3f	     10395	option.c	FUNCTION_74	IF_1
0x4004ccc	    0x8b0d00000000	            mov ecx, dword [0x04004cd2] 	     10398	option.c	FUNCTION_74	IF_1
0x4004cd2	          0x8d4101	                      lea eax, [rcx + 1]	     10398	option.c	FUNCTION_74	IF_1
0x4004cd5	            0x85c9	                           test ecx, ecx	     10398	option.c	FUNCTION_74	IF_1
0x4004cd7	      0xb912000000	                           mov ecx, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x4004cdc	           0xf44c1	                          cmove eax, ecx	     10398	option.c	FUNCTION_74	IF_1
0x4004cdf	    0x890500000000	            mov dword [0x04004ce5], eax 	     10398	option.c	FUNCTION_74	IF_1
0x4004ce5	            0x85d2	                           test edx, edx	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x4004ce7	            0x7556	                           jne 0x4004d3f	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x4004ce9	    0x890500000000	            mov dword [0x04004cef], eax 	     10404	option.c	FUNCTION_74	IF_1	IF_2
0x4004cef	    0x833d00000000	               cmp dword [0x04004cf6], 0	     10406	option.c	FUNCTION_74	IF_3
0x4004cf6	            0x7409	                            je 0x4004d01	     10406	option.c	FUNCTION_74	IF_3
0x4004cf8	          0x83c00a	                            add eax, 0xa	     10408	option.c	FUNCTION_74	IF_3
0x4004cfb	    0x890500000000	            mov dword [0x04004d01], eax 	     10408	option.c	FUNCTION_74	IF_3
0x4004d01	    0x488b05000000	            mov rax, qword [0x04004d08] 	     10412	option.c	FUNCTION_74
0x4004d08	            0x89c2	                            mov edx, eax	     10412	option.c	FUNCTION_74
0x4004d0a	    0x2b1500000000	             sub edx, dword [0x04004d10]	     10412	option.c	FUNCTION_74
0x4004d10	    0x891500000000	            mov dword [0x04004d16], edx 	     10412	option.c	FUNCTION_74
0x4004d16	    0x2b0500000000	             sub eax, dword [0x04004d1c]	     10413	option.c	FUNCTION_74
0x4004d1c	    0x890500000000	            mov dword [0x04004d22], eax 	     10413	option.c	FUNCTION_74
0x4004d22	            0x85d2	                           test edx, edx	     10414	option.c	FUNCTION_74	IF_5
0x4004d24	            0x7f0a	                            jg 0x4004d30	     10414	option.c	FUNCTION_74	IF_5
0x4004d26	    0xc70500000000	               mov dword [0x04004d30], 1	     10415	option.c	FUNCTION_74	IF_5
0x4004d30	            0x85c0	                           test eax, eax	     10416	option.c	FUNCTION_74	IF_6
0x4004d32	            0x7f26	                            jg 0x4004d5a	     10416	option.c	FUNCTION_74	IF_6
0x4004d34	    0xc70500000000	               mov dword [0x04004d3e], 1	     10417	option.c	FUNCTION_74	IF_6
0x4004d3e	              0xc3	                                     ret	     10422	option.c	FUNCTION_74
0x4004d3f	    0x833d00000000	               cmp dword [0x04004d46], 0	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x4004d46	      0xb80b000000	                            mov eax, 0xb	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x4004d4b	     0xf4405000000	           cmove eax, dword [0x04004d52]	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x4004d52	    0x890500000000	            mov dword [0x04004d58], eax 	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x4004d58	            0xeba7	                           jmp 0x4004d01	     10410	option.c	FUNCTION_74	IF_3	IF_4
0x4004d5a	            0xf3c3	                                     ret	     10410	option.c	FUNCTION_74	IF_3	IF_4
file_ff_differs	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,6:DO,0:CALL,2:WHILE,0	62
0x400dded	              0x55	                                push rbp	     12484	option.c	FUNCTION_111
0x400ddee	              0x53	                                push rbx	     12484	option.c	FUNCTION_111
0x400ddef	        0x4883ec08	                              sub rsp, 8	     12484	option.c	FUNCTION_111
0x400ddf3	          0x8b477c	            mov eax, dword [rdi + 0x7c] 	     12486	option.c	FUNCTION_111	IF_1
0x400ddf6	            0x89c5	                            mov ebp, eax	     12486	option.c	FUNCTION_111	IF_1
0x400ddf8	          0x83e504	                              and ebp, 4	     12486	option.c	FUNCTION_111	IF_1
0x400ddfb	     0xf85a1000000	                           jne 0x400dea2	     12486	option.c	FUNCTION_111	IF_1
0x400de01	          0x4889fb	                            mov rbx, rdi	     12486	option.c	FUNCTION_111	IF_1
0x400de04	            0x85f6	                           test esi, esi	     12488	option.c	FUNCTION_111	IF_2
0x400de06	            0x7422	                            je 0x400de2a	     12488	option.c	FUNCTION_111	IF_2
0x400de08	            0xa810	                           test al, 0x10	     12489	option.c	FUNCTION_111	IF_2
0x400de0a	            0x741e	                            je 0x400de2a	     12489	option.c	FUNCTION_111	IF_2
0x400de0c	        0x48833f01	                      cmp qword [rdi], 1	     12490	option.c	FUNCTION_111	IF_2
0x400de10	            0x7518	                           jne 0x400de2a	     12490	option.c	FUNCTION_111	IF_2
0x400de12	      0xba00000000	                              mov edx, 0	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400de17	      0xbe01000000	                              mov esi, 1	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400de1c	      0xe800000000	                          call 0x400de21	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400de21	          0x803800	                       cmp byte [rax], 0	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400de24	     0xf84a7000000	                            je 0x400ded1	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400de2a	    0x488b83901400	          mov rax, qword [rbx + 0x1490] 	     12493	option.c	FUNCTION_111	IF_3
0x400de31	           0xfb600	                   movzx eax, byte [rax]	     12493	option.c	FUNCTION_111	IF_3
0x400de34	      0xbd01000000	                              mov ebp, 1	     12494	option.c	FUNCTION_111	IF_3
0x400de39	    0x398304170000	          cmp dword [rbx + 0x1704], eax 	     12493	option.c	FUNCTION_111	IF_3
0x400de3f	     0xf858c000000	                           jne 0x400ded1	     12493	option.c	FUNCTION_111	IF_3
0x400de45	    0x83bb08140000	             cmp dword [rbx + 0x1408], 0	     12495	option.c	FUNCTION_111	IF_4
0x400de4c	            0x7570	                           jne 0x400debe	     12495	option.c	FUNCTION_111	IF_4
0x400de4e	    0x83bb74140000	             cmp dword [rbx + 0x1474], 0	     12495	option.c	FUNCTION_111	IF_4
0x400de55	            0x7452	                            je 0x400dea9	     12495	option.c	FUNCTION_111	IF_4
0x400de57	      0xbd01000000	                              mov ebp, 1	     12499	option.c	FUNCTION_111	IF_5
0x400de5c	    0x8b830c140000	          mov eax, dword [rbx + 0x140c] 	     12498	option.c	FUNCTION_111	IF_5
0x400de62	    0x398314170000	          cmp dword [rbx + 0x1714], eax 	     12498	option.c	FUNCTION_111	IF_5
0x400de68	            0x7567	                           jne 0x400ded1	     12498	option.c	FUNCTION_111	IF_5
0x400de6a	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	     12500	option.c	FUNCTION_111	IF_6
0x400de71	          0x4885ff	                           test rdi, rdi	     12500	option.c	FUNCTION_111	IF_6
0x400de74	            0x7514	                           jne 0x400de8a	     12500	option.c	FUNCTION_111	IF_6
0x400de76	    0x488b83881400	          mov rax, qword [rbx + 0x1488] 	     12501	option.c	FUNCTION_111	IF_6
0x400de7d	          0x803800	                       cmp byte [rax], 0	     12501	option.c	FUNCTION_111	IF_6
0x400de80	        0x400f95c5	                               setne bpl	     12501	option.c	FUNCTION_111	IF_6
0x400de84	        0x400fb6ed	                          movzx ebp, bpl	     12501	option.c	FUNCTION_111	IF_6
0x400de88	            0xeb47	                           jmp 0x400ded1	     12501	option.c	FUNCTION_111	IF_6
0x400de8a	    0x488bb3881400	          mov rsi, qword [rbx + 0x1488] 	     12502	option.c	FUNCTION_111	CALL_2
0x400de91	      0xe800000000	                          call 0x400de96	     12502	option.c	FUNCTION_111	CALL_2
0x400de96	            0x85c0	                           test eax, eax	     12502	option.c	FUNCTION_111	CALL_2
0x400de98	        0x400f95c5	                               setne bpl	     12502	option.c	FUNCTION_111	CALL_2
0x400de9c	        0x400fb6ed	                          movzx ebp, bpl	     12502	option.c	FUNCTION_111	CALL_2
0x400dea0	            0xeb2f	                           jmp 0x400ded1	     12502	option.c	FUNCTION_111	CALL_2
0x400dea2	      0xbd00000000	                              mov ebp, 0	     12487	option.c	FUNCTION_111	IF_1
0x400dea7	            0xeb28	                           jmp 0x400ded1	     12487	option.c	FUNCTION_111	IF_1
0x400dea9	      0xbd01000000	                              mov ebp, 1	     12496	option.c	FUNCTION_111	IF_4
0x400deae	    0x8b8370140000	          mov eax, dword [rbx + 0x1470] 	     12495	option.c	FUNCTION_111	IF_4
0x400deb4	    0x398300170000	          cmp dword [rbx + 0x1700], eax 	     12495	option.c	FUNCTION_111	IF_4
0x400deba	            0x7515	                           jne 0x400ded1	     12495	option.c	FUNCTION_111	IF_4
0x400debc	            0xeb99	                           jmp 0x400de57	     12495	option.c	FUNCTION_111	IF_4
0x400debe	      0xbd01000000	                              mov ebp, 1	     12496	option.c	FUNCTION_111	IF_4
0x400dec3	    0x8b8370140000	          mov eax, dword [rbx + 0x1470] 	     12495	option.c	FUNCTION_111	IF_4
0x400dec9	    0x398300170000	          cmp dword [rbx + 0x1700], eax 	     12495	option.c	FUNCTION_111	IF_4
0x400decf	            0x7499	                            je 0x400de6a	     12495	option.c	FUNCTION_111	IF_4
0x400ded1	            0x89e8	                            mov eax, ebp	     12506	option.c	FUNCTION_111
0x400ded3	        0x4883c408	                              add rsp, 8	     12506	option.c	FUNCTION_111
0x400ded7	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400ded8	              0x5d	                                 pop rbp	     12506	option.c	FUNCTION_111
0x400ded9	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
get_option_value	SWITCH,0:functions,0:ELSE,4:FOR,0:IF,12:DO,0:CALL,11:WHILE,0	122
0x4004488	            0x4155	                                push r13	      9412	option.c	FUNCTION_53
0x400448a	            0x4154	                                push r12	      9412	option.c	FUNCTION_53
0x400448c	              0x55	                                push rbp	      9412	option.c	FUNCTION_53
0x400448d	              0x53	                                push rbx	      9412	option.c	FUNCTION_53
0x400448e	        0x4883ec18	                           sub rsp, 0x18	      9412	option.c	FUNCTION_53
0x4004492	          0x4889fb	                            mov rbx, rdi	      9412	option.c	FUNCTION_53
0x4004495	          0x4989f5	                            mov r13, rsi	      9412	option.c	FUNCTION_53
0x4004498	          0x4889d5	                            mov rbp, rdx	      9412	option.c	FUNCTION_53
0x400449b	          0x4189cc	                           mov r12d, ecx	      9412	option.c	FUNCTION_53
0x400449e	    0x64488b042528	                mov rax, qword fs:[0x28]	      9412	option.c	FUNCTION_53
0x40044a7	      0x4889442408	                mov qword [rsp + 8], rax	      9412	option.c	FUNCTION_53
0x40044ac	            0x31c0	                            xor eax, eax	      9412	option.c	FUNCTION_53
0x40044ae	      0xe864beffff	                     call sym.findoption	      9416	option.c	FUNCTION_53	CALL_1
0x40044b3	            0x85c0	                           test eax, eax	      9417	option.c	FUNCTION_53	IF_1
0x40044b5	     0xf8993000000	                           jns 0x400454e	      9417	option.c	FUNCTION_53	IF_1
0x40044bb	      0xb800000000	                              mov eax, 0	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044c0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044c7	          0x4889df	                            mov rdi, rbx	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044ca	            0xf2ae	              repne scasb al, byte [rdi]	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044cc	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x40044d1	        0x4883f9fa	             cmp rcx, 0xfffffffffffffffa	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044d5	     0xf854e010000	                           jne 0x4004629	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044db	          0x803b74	                    cmp byte [rbx], 0x74	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044de	     0xf8545010000	                           jne 0x4004629	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044e4	        0x807b015f	                cmp byte [rbx + 1], 0x5f	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044e8	     0xf853b010000	                           jne 0x4004629	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40044ee	          0x4889df	                            mov rdi, rbx	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40044f1	      0xe81fe1ffff	                call sym.find_key_option	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40044f6	            0x85c0	                           test eax, eax	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40044f8	     0xf8411010000	                            je 0x400460f	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40044fe	            0x85c0	                           test eax, eax	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x4004500	            0x7912	                           jns 0x4004514	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x4004502	            0x89c2	                            mov edx, eax	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004504	            0xf7da	                                 neg edx	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004506	          0x881424	                      mov byte [rsp], dl	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004509	            0xf7d8	                                 neg eax	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400450b	          0xc1e808	                              shr eax, 8	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400450e	        0x88442401	                  mov byte [rsp + 1], al	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004512	            0xeb08	                           jmp 0x400451c	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004514	        0xc60424f2	                    mov byte [rsp], 0xf2	      9434	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x4004518	        0x88442401	                  mov byte [rsp + 1], al	      9435	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x400451c	          0x4889e7	                            mov rdi, rsp	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x400451f	      0xe800000000	                          call 0x4004524	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x4004524	          0x4885c0	                           test rax, rax	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x4004527	            0x741b	                            je 0x4004544	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x4004529	          0x4885ed	                           test rbp, rbp	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x400452c	            0x740c	                            je 0x400453a	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x400452e	          0x4889c7	                            mov rdi, rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x4004531	      0xe800000000	                          call 0x4004536	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x4004536	        0x48894500	                    mov qword [rbp], rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x400453a	      0xb800000000	                              mov eax, 0	      9442	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x400453f	      0xe9e5000000	                           jmp 0x4004629	      9442	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x4004544	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x4004549	      0xe9db000000	                           jmp 0x4004629	      9445	option.c	FUNCTION_53	IF_1
0x400454e	            0x4898	                                    cdqe	      9448	option.c	FUNCTION_53	CALL_8
0x4004550	        0x48c1e006	                              shl rax, 6	      9448	option.c	FUNCTION_53	CALL_8
0x4004554	    0x488d98000000	                          lea rbx, [rax]	      9448	option.c	FUNCTION_53	CALL_8
0x400455b	          0x4489e6	                           mov esi, r12d	      9448	option.c	FUNCTION_53	CALL_8
0x400455e	          0x4889df	                            mov rdi, rbx	      9448	option.c	FUNCTION_53	CALL_8
0x4004561	      0xe84ed1ffff	                 call sym.get_varp_scope	      9448	option.c	FUNCTION_53	CALL_8
0x4004566	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      9450	option.c	FUNCTION_53	IF_6
0x400456a	          0xf6c204	                              test dl, 4	      9450	option.c	FUNCTION_53	IF_6
0x400456d	            0x7455	                            je 0x40045c4	      9450	option.c	FUNCTION_53	IF_6
0x400456f	          0x4885c0	                           test rax, rax	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x4004572	     0xf849e000000	                            je 0x4004616	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x4004578	          0x4885ed	                           test rbp, rbp	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x400457b	     0xf849c000000	                            je 0x400461d	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x4004581	    0x488b35000000	            mov rsi, qword [0x04004588] 	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004588	    0x488d96101500	                 lea rdx, [rsi + 0x1510]	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400458f	          0x4839d0	                            cmp rax, rdx	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004592	            0x751d	                           jne 0x40045b1	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004594	          0x488b10	                    mov rdx, qword [rax]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004597	          0x803a00	                       cmp byte [rdx], 0	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400459a	            0x7415	                            je 0x40045b1	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x400459c	      0xbf00000000	                              mov edi, 0	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x40045a1	      0xe800000000	                          call 0x40045a6	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x40045a6	        0x48894500	                    mov qword [rbp], rax	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x40045aa	      0xb800000000	                              mov eax, 0	      9465	option.c	FUNCTION_53	IF_6
0x40045af	            0xeb78	                           jmp 0x4004629	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x40045b1	          0x488b38	                    mov rdi, qword [rax]	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x40045b4	      0xe800000000	                          call 0x40045b9	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x40045b9	        0x48894500	                    mov qword [rbp], rax	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x40045bd	      0xb800000000	                              mov eax, 0	      9465	option.c	FUNCTION_53	IF_6
0x40045c2	            0xeb65	                           jmp 0x4004629	      9465	option.c	FUNCTION_53	IF_6
0x40045c4	          0x4885c0	                           test rax, rax	      9468	option.c	FUNCTION_53	IF_10
0x40045c7	            0x745b	                            je 0x4004624	      9468	option.c	FUNCTION_53	IF_10
0x40045c9	          0xf6c202	                              test dl, 2	      9470	option.c	FUNCTION_53	IF_11
0x40045cc	            0x740e	                            je 0x40045dc	      9470	option.c	FUNCTION_53	IF_11
0x40045ce	          0x488b00	                    mov rax, qword [rax]	      9471	option.c	FUNCTION_53	IF_11
0x40045d1	        0x49894500	                    mov qword [r13], rax	      9471	option.c	FUNCTION_53	IF_11
0x40045d5	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x40045da	            0xeb4d	                           jmp 0x4004629	      9481	option.c	FUNCTION_53
0x40045dc	    0x488b0d000000	            mov rcx, qword [0x040045e3] 	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x40045e3	    0x488d91c80000	                   lea rdx, [rcx + 0xc8]	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x40045ea	          0x4839d0	                            cmp rax, rdx	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x40045ed	            0x7512	                           jne 0x4004601	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x40045ef	      0xe800000000	                          call 0x40045f4	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x40045f4	            0x4898	                                    cdqe	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x40045f6	        0x49894500	                    mov qword [r13], rax	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x40045fa	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x40045ff	            0xeb28	                           jmp 0x4004629	      9481	option.c	FUNCTION_53
0x4004601	          0x486300	                 movsxd rax, dword [rax]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x4004604	        0x49894500	                    mov qword [r13], rax	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x4004608	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x400460d	            0xeb1a	                           jmp 0x4004629	      9481	option.c	FUNCTION_53
0x400460f	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x4004614	            0xeb13	                           jmp 0x4004629	      9445	option.c	FUNCTION_53	IF_1
0x4004616	      0xb8feffffff	                     mov eax, 0xfffffffe	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x400461b	            0xeb0c	                           jmp 0x4004629	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x400461d	      0xb800000000	                              mov eax, 0	      9465	option.c	FUNCTION_53	IF_6
0x4004622	            0xeb05	                           jmp 0x4004629	      9465	option.c	FUNCTION_53	IF_6
0x4004624	      0xb8ffffffff	                     mov eax, 0xffffffff	      9469	option.c	FUNCTION_53	IF_10
0x4004629	      0x488b742408	                mov rsi, qword [rsp + 8]	      9482	option.c	FUNCTION_53
0x400462e	    0x644833342528	                xor rsi, qword fs:[0x28]	      9482	option.c	FUNCTION_53
0x4004637	            0x7405	                            je 0x400463e	      9482	option.c	FUNCTION_53
0x4004639	      0xe800000000	                          call 0x400463e	      9482	option.c	FUNCTION_53
0x400463e	        0x4883c418	                           add rsp, 0x18	      9482	option.c	FUNCTION_53
0x4004642	              0x5b	                                 pop rbx	      9482	option.c	FUNCTION_53
0x4004643	              0x5d	                                 pop rbp	      9482	option.c	FUNCTION_53
0x4004644	            0x415c	                                 pop r12	      9482	option.c	FUNCTION_53
0x4004646	            0x415d	                                 pop r13	      9482	option.c	FUNCTION_53
0x4004648	              0xc3	                                     ret	      9482	option.c	FUNCTION_53
set_context_in_set_cmd	SWITCH,0:functions,0:ELSE,6:FOR,1:IF,27:DO,0:CALL,11:WHILE,5	330
0x4009195	            0x4155	                                push r13	     11339	option.c	FUNCTION_88
0x4009197	            0x4154	                                push r12	     11339	option.c	FUNCTION_88
0x4009199	              0x55	                                push rbp	     11339	option.c	FUNCTION_88
0x400919a	              0x53	                                push rbx	     11339	option.c	FUNCTION_88
0x400919b	        0x4883ec08	                              sub rsp, 8	     11339	option.c	FUNCTION_88
0x400919f	          0x4989fc	                            mov r12, rdi	     11339	option.c	FUNCTION_88
0x40091a2	          0x4889f3	                            mov rbx, rsi	     11339	option.c	FUNCTION_88
0x40091a5	    0x891500000000	            mov dword [0x040091ab], edx 	     11348	option.c	FUNCTION_88
0x40091ab	    0xc70704000000	                      mov dword [rdi], 4	     11350	option.c	FUNCTION_88
0x40091b1	          0x803e00	                       cmp byte [rsi], 0	     11351	option.c	FUNCTION_88	IF_1
0x40091b4	            0x750a	                           jne 0x40091c0	     11351	option.c	FUNCTION_88	IF_1
0x40091b6	      0x4989742408	                mov qword [r12 + 8], rsi	     11353	option.c	FUNCTION_88	IF_1
0x40091bb	      0xe97c040000	                           jmp 0x400963c	     11354	option.c	FUNCTION_88	IF_1
0x40091c0	      0xb800000000	                              mov eax, 0	     11356	option.c	FUNCTION_88	CALL_1
0x40091c5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11356	option.c	FUNCTION_88	CALL_1
0x40091cc	          0x4889f7	                            mov rdi, rsi	     11356	option.c	FUNCTION_88	CALL_1
0x40091cf	            0xf2ae	              repne scasb al, byte [rdi]	     11356	option.c	FUNCTION_88	CALL_1
0x40091d1	          0x4889c8	                            mov rax, rcx	     11356	option.c	FUNCTION_88	CALL_1
0x40091d4	          0x48f7d0	                                 not rax	     11356	option.c	FUNCTION_88	CALL_1
0x40091d7	      0x488d5406fe	                lea rdx, [rsi + rax - 2]	     11356	option.c	FUNCTION_88	CALL_1
0x40091dc	          0x803a20	                    cmp byte [rdx], 0x20	     11357	option.c	FUNCTION_88	IF_2
0x40091df	            0x7506	                           jne 0x40091e7	     11357	option.c	FUNCTION_88	IF_2
0x40091e1	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11357	option.c	FUNCTION_88	IF_2
0x40091e5	            0x750a	                           jne 0x40091f1	     11357	option.c	FUNCTION_88	IF_2
0x40091e7	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x40091ea	            0x7213	                            jb 0x40091ff	     11362	option.c	FUNCTION_88	WHILE_1
0x40091ec	          0x4889d3	                            mov rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x40091ef	            0xeb6b	                           jmp 0x400925c	     11362	option.c	FUNCTION_88	WHILE_1
0x40091f1	        0x4883c201	                              add rdx, 1	     11359	option.c	FUNCTION_88	IF_2
0x40091f5	      0x4989542408	                mov qword [r12 + 8], rdx	     11359	option.c	FUNCTION_88	IF_2
0x40091fa	      0xe93d040000	                           jmp 0x400963c	     11360	option.c	FUNCTION_88	IF_2
0x40091ff	           0xfb60a	                   movzx ecx, byte [rdx]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x4009202	          0x80f920	                            cmp cl, 0x20	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x4009205	            0x7408	                            je 0x400920f	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x4009207	          0x4889d0	                            mov rax, rdx	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400920a	          0x80f92c	                            cmp cl, 0x2c	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400920d	            0x752c	                           jne 0x400923b	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400920f	          0x4839d3	                            cmp rbx, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009212	            0x731a	                           jae 0x400922e	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009214	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009218	            0x7519	                           jne 0x4009233	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400921a	          0x4889d0	                            mov rax, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400921d	        0x4883e801	                              sub rax, 1	     11369	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009221	          0x4839c3	                            cmp rbx, rax	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009224	            0x7412	                            je 0x4009238	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009226	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400922a	            0x74f1	                            je 0x400921d	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400922c	            0xeb0d	                           jmp 0x400923b	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400922e	          0x4889d0	                            mov rax, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009231	            0xeb08	                           jmp 0x400923b	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009233	          0x4889d0	                            mov rax, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009236	            0xeb03	                           jmp 0x400923b	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x4009238	          0x4889d8	                            mov rax, rbx	     11369	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400923b	          0x80f920	                            cmp cl, 0x20	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400923e	            0x7513	                           jne 0x4009253	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009240	          0x4889d6	                            mov rsi, rdx	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009243	          0x4829c6	                            sub rsi, rax	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009246	          0x4889f0	                            mov rax, rsi	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009249	            0xa801	                              test al, 1	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400924b	            0x7506	                           jne 0x4009253	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400924d	        0x488d5a01	                      lea rbx, [rdx + 1]	     11374	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009251	            0xeb09	                           jmp 0x400925c	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x4009253	        0x4883ea01	                              sub rdx, 1	     11377	option.c	FUNCTION_88	WHILE_1
0x4009257	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400925a	            0x75a3	                           jne 0x40091ff	     11362	option.c	FUNCTION_88	WHILE_1
0x400925c	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009261	      0xb902000000	                              mov ecx, 2	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009266	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009269	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400926b	           0xf97c2	                                 seta dl	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400926e	           0xf92c0	                                 setb al	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009271	            0x38c2	                              cmp dl, al	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009273	            0x7525	                           jne 0x400929a	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009275	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400927a	      0xb906000000	                              mov ecx, 6	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400927f	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009282	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009284	           0xf97c2	                                 seta dl	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x4009287	           0xf92c0	                                 setb al	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400928a	            0x38c2	                              cmp dl, al	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400928c	            0x740c	                            je 0x400929a	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400928e	    0x41c704240500	                      mov dword [r12], 5	     11381	option.c	FUNCTION_88	IF_5
0x4009296	        0x4883c302	                              add rbx, 2	     11382	option.c	FUNCTION_88	IF_5
0x400929a	      0xbf00000000	                              mov edi, 0	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400929f	      0xb903000000	                              mov ecx, 3	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092a4	          0x4889de	                            mov rsi, rbx	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092a7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092a9	           0xf97c2	                                 seta dl	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092ac	           0xf92c0	                                 setb al	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092af	            0x38c2	                              cmp dl, al	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092b1	            0x750c	                           jne 0x40092bf	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x40092b3	    0x41c704240500	                      mov dword [r12], 5	     11386	option.c	FUNCTION_88	IF_6
0x40092bb	        0x4883c303	                              add rbx, 3	     11387	option.c	FUNCTION_88	IF_6
0x40092bf	      0x49895c2408	                mov qword [r12 + 8], rbx	     11389	option.c	FUNCTION_88
0x40092c4	           0xfb603	                   movzx eax, byte [rbx]	     11390	option.c	FUNCTION_88	IF_7
0x40092c7	            0x3c3c	                            cmp al, 0x3c	     11390	option.c	FUNCTION_88	IF_7
0x40092c9	            0x7565	                           jne 0x4009330	     11390	option.c	FUNCTION_88	IF_7
0x40092cb	          0x4989dd	                            mov r13, rbx	     11390	option.c	FUNCTION_88	IF_7
0x40092ce	        0x4983c501	                              add r13, 1	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x40092d2	            0x84c0	                             test al, al	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x40092d4	     0xf8462030000	                            je 0x400963c	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x40092da	      0x410fb64500	                   movzx eax, byte [r13]	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x40092df	            0x3c3e	                            cmp al, 0x3e	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x40092e1	            0x75eb	                           jne 0x40092ce	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x40092e3	        0x488d7b01	                      lea rdi, [rbx + 1]	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x40092e7	      0xe800000000	                          call 0x40092ec	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x40092ec	            0x85c0	                           test eax, eax	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x40092ee	            0x750d	                           jne 0x40092fd	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x40092f0	    0x41c704240000	                      mov dword [r12], 0	     11398	option.c	FUNCTION_88	IF_7	IF_9
0x40092f8	      0xe93f030000	                           jmp 0x400963c	     11399	option.c	FUNCTION_88	IF_7	IF_9
0x40092fd	        0x498d6d01	                      lea rbp, [r13 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x4009301	      0x450fb66d01	              movzx r13d, byte [r13 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x4009306	            0x89c2	                            mov edx, eax	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x4009308	            0xf7da	                                 neg edx	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400930a	    0x881500000000	               mov byte [0x04009310], dl	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x4009310	            0xf7d8	                                 neg eax	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x4009312	          0xc1e808	                              shr eax, 8	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x4009315	    0x880500000000	               mov byte [0x0400931b], al	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400931b	      0xb801000000	                              mov eax, 1	     11402	option.c	FUNCTION_88	IF_7
0x4009320	      0xbe00000000	                              mov esi, 0	     11342	option.c	FUNCTION_88
0x4009325	    0x41b800000000	                              mov r8d, 0	     11341	option.c	FUNCTION_88
0x400932b	      0xe9ee000000	                           jmp 0x400941e	     11341	option.c	FUNCTION_88
0x4009330	          0x4889dd	                            mov rbp, rbx	     11341	option.c	FUNCTION_88
0x4009333	            0x3c74	                            cmp al, 0x74	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009335	            0x7556	                           jne 0x400938d	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009337	        0x807b015f	                cmp byte [rbx + 1], 0x5f	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400933b	            0x7550	                           jne 0x400938d	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400933d	        0x488d5302	                      lea rdx, [rbx + 2]	     11410	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009341	        0x488d4303	                      lea rax, [rbx + 3]	     11410	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009345	        0x807b0200	                   cmp byte [rbx + 2], 0	     11410	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009349	        0x480f44c2	                          cmove rax, rdx	     11410	option.c	FUNCTION_88	ELSE_1	IF_10
0x400934d	          0x803800	                       cmp byte [rax], 0	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x4009350	     0xf84e6020000	                            je 0x400963c	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x4009356	        0x488d6801	                      lea rbp, [rax + 1]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400935a	      0x440fb66801	              movzx r13d, byte [rax + 1]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400935f	         0xfb650ff	               movzx edx, byte [rax - 1]	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009363	    0x881500000000	               mov byte [0x04009369], dl	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009369	           0xfb600	                   movzx eax, byte [rax]	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400936c	    0x880500000000	               mov byte [0x04009372], al	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009372	      0xb801000000	                              mov eax, 1	     11416	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009377	      0xbe00000000	                              mov esi, 0	     11342	option.c	FUNCTION_88
0x400937c	    0x41b800000000	                              mov r8d, 0	     11341	option.c	FUNCTION_88
0x4009382	      0xe997000000	                           jmp 0x400941e	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x4009387	        0x4883c501	                              add rbp, 1	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400938b	            0xeb0a	                           jmp 0x4009397	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400938d	    0x48bac1ff0000	            movabs rdx, 0x2000000000ffc1	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x4009397	      0x440fb66d00	                  movzx r13d, byte [rbp]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400939c	          0x4489e8	                           mov eax, r13d	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400939f	          0x83e0df	                     and eax, 0xffffffdf	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093a2	          0x83e841	                           sub eax, 0x41	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093a5	            0x3c19	                            cmp al, 0x19	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093a7	            0x76de	                           jbe 0x4009387	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093a9	        0x418d45d6	                   lea eax, [r13 - 0x2a]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093ad	            0x3c35	                            cmp al, 0x35	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093af	            0x7706	                            ja 0x40093b7	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093b1	        0x480fa3c2	                             bt rdx, rax	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093b5	            0x72d0	                            jb 0x4009387	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x40093b7	          0x4584ed	                         test r13b, r13b	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x40093ba	     0xf847c020000	                            je 0x400963c	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x40093c0	        0xc6450000	                       mov byte [rbp], 0	     11428	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x40093c4	          0x4889df	                            mov rdi, rbx	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x40093c7	      0xe84b6fffff	                     call sym.findoption	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x40093cc	            0x89c6	                            mov esi, eax	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x40093ce	        0x44886d00	                    mov byte [rbp], r13b	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x40093d2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093d5	            0x7410	                            je 0x40093e7	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093d7	            0x4898	                                    cdqe	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093d9	        0x48c1e006	                              shl rax, 6	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093dd	    0x4883b8000000	                      cmp qword [rax], 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093e5	            0x750d	                           jne 0x40093f4	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093e7	    0x41c704240000	                      mov dword [r12], 0	     11433	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093ef	      0xe948020000	                           jmp 0x400963c	     11434	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x40093f4	          0x4863c6	                         movsxd rax, esi	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x40093f7	        0x48c1e006	                              shl rax, 6	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x40093fb	    0x4c8b80000000	                     mov r8, qword [rax]	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x4009402	        0x450fb6ed	                        movzx r13d, r13b	     11427	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x4009406	      0xb800000000	                              mov eax, 0	     11345	option.c	FUNCTION_88
0x400940b	        0x41f6c001	                             test r8b, 1	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400940f	            0x740d	                            je 0x400941e	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x4009411	    0x41c704240000	                      mov dword [r12], 0	     11439	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x4009419	      0xe91e020000	                           jmp 0x400963c	     11440	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400941e	        0x418d55d5	                   lea edx, [r13 - 0x2b]	     11445	option.c	FUNCTION_88	IF_16
0x4009422	    0xf7c2fdffffff	                    test edx, 0xfffffffd	     11445	option.c	FUNCTION_88	IF_16
0x4009428	            0x7406	                            je 0x4009430	     11445	option.c	FUNCTION_88	IF_16
0x400942a	        0x4183fd5e	                          cmp r13d, 0x5e	     11445	option.c	FUNCTION_88	IF_16
0x400942e	            0x750c	                           jne 0x400943c	     11445	option.c	FUNCTION_88	IF_16
0x4009430	        0x807d013d	                cmp byte [rbp + 1], 0x3d	     11445	option.c	FUNCTION_88	IF_16
0x4009434	            0x7506	                           jne 0x400943c	     11445	option.c	FUNCTION_88	IF_16
0x4009436	        0x4883c501	                              add rbp, 1	     11447	option.c	FUNCTION_88	IF_16
0x400943a	            0xeb0c	                           jmp 0x4009448	     11447	option.c	FUNCTION_88	IF_16
0x400943c	        0x4183fd3d	                          cmp r13d, 0x3d	     11450	option.c	FUNCTION_88	IF_17
0x4009440	            0x7406	                            je 0x4009448	     11450	option.c	FUNCTION_88	IF_17
0x4009442	        0x4183fd3a	                          cmp r13d, 0x3a	     11450	option.c	FUNCTION_88	IF_17
0x4009446	            0x7507	                           jne 0x400944f	     11450	option.c	FUNCTION_88	IF_17
0x4009448	      0x41833c2405	                      cmp dword [r12], 5	     11451	option.c	FUNCTION_88	IF_17
0x400944d	            0x750d	                           jne 0x400945c	     11451	option.c	FUNCTION_88	IF_17
0x400944f	    0x41c70424feff	            mov dword [r12], 0xfffffffe 	     11453	option.c	FUNCTION_88	IF_17
0x4009457	      0xe9e0010000	                           jmp 0x400963c	     11454	option.c	FUNCTION_88	IF_17
0x400945c	        0x807d0100	                   cmp byte [rbp + 1], 0	     11456	option.c	FUNCTION_88	IF_18
0x4009460	            0x7526	                           jne 0x4009488	     11456	option.c	FUNCTION_88	IF_18
0x4009462	    0x41c704240700	                      mov dword [r12], 7	     11458	option.c	FUNCTION_88	IF_18
0x400946a	            0x85c0	                           test eax, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400946c	      0xb8ffffffff	                     mov eax, 0xffffffff	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x4009471	           0xf45f0	                         cmovne esi, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x4009474	    0x893500000000	            mov dword [0x0400947a], esi 	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400947a	        0x4883c501	                              add rbp, 1	     11463	option.c	FUNCTION_88	IF_18
0x400947e	      0x49896c2408	                mov qword [r12 + 8], rbp	     11463	option.c	FUNCTION_88	IF_18
0x4009483	      0xe9b4010000	                           jmp 0x400963c	     11464	option.c	FUNCTION_88	IF_18
0x4009488	    0x41c704240000	                      mov dword [r12], 0	     11466	option.c	FUNCTION_88
0x4009490	            0x85c0	                           test eax, eax	     11467	option.c	FUNCTION_88	IF_20
0x4009492	     0xf85a4010000	                           jne 0x400963c	     11467	option.c	FUNCTION_88	IF_20
0x4009498	        0x41f6c002	                             test r8b, 2	     11467	option.c	FUNCTION_88	IF_20
0x400949c	     0xf859a010000	                           jne 0x400963c	     11467	option.c	FUNCTION_88	IF_20
0x40094a2	        0x4883c501	                              add rbp, 1	     11470	option.c	FUNCTION_88
0x40094a6	      0x49896c2408	                mov qword [r12 + 8], rbp	     11470	option.c	FUNCTION_88
0x40094ab	        0x41f6c010	                          test r8b, 0x10	     11472	option.c	FUNCTION_88	IF_21
0x40094af	     0xf84a0000000	                            je 0x4009555	     11472	option.c	FUNCTION_88	IF_21
0x40094b5	          0x4863c6	                         movsxd rax, esi	     11474	option.c	FUNCTION_88	IF_21
0x40094b8	        0x48c1e006	                              shl rax, 6	     11474	option.c	FUNCTION_88	IF_21
0x40094bc	    0x488b80000000	                    mov rax, qword [rax]	     11474	option.c	FUNCTION_88	IF_21
0x40094c3	    0x483d00000000	                              cmp rax, 0	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x40094c9	        0x410f94c1	                                sete r9b	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x40094cd	    0x483d00000000	                              cmp rax, 0	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x40094d3	        0x400f94c7	                                sete dil	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x40094d7	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094dd	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094e0	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094e6	           0xf94c2	                                 sete dl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094e9	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094eb	          0x4409ca	                             or edx, r9d	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094ee	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094f4	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094f7	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094f9	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x40094ff	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x4009502	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x4009504	          0x4008fa	                              or dl, dil	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x4009507	            0x7508	                           jne 0x4009511	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x4009509	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400950f	            0x7528	                           jne 0x4009539	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x4009511	    0x41c704240300	                      mov dword [r12], 3	     11488	option.c	FUNCTION_88	IF_21	IF_22
0x4009519	          0x4584c9	                           test r9b, r9b	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400951c	            0x7505	                           jne 0x4009523	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400951e	          0x4084ff	                           test dil, dil	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x4009521	            0x740b	                            je 0x400952e	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x4009523	    0x41c744242402	               mov dword [r12 + 0x24], 2	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400952c	            0xeb27	                           jmp 0x4009555	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400952e	    0x41c744242401	               mov dword [r12 + 0x24], 1	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x4009537	            0xeb1c	                           jmp 0x4009555	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x4009539	    0x41c704240200	                      mov dword [r12], 2	     11500	option.c	FUNCTION_88	IF_21	ELSE_5
0x4009541	    0x483d00000000	                              cmp rax, 0	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x4009547	           0xf94c0	                                 sete al	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400954a	           0xfb6c0	                           movzx eax, al	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400954d	          0x83c001	                              add eax, 1	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x4009550	      0x4189442424	             mov dword [r12 + 0x24], eax	     11503	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x4009555	      0xb800000000	                              mov eax, 0	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400955a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009561	          0x4889df	                            mov rdi, rbx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009564	            0xf2ae	              repne scasb al, byte [rdi]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009566	          0x4889c8	                            mov rax, rcx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009569	          0x48f7d0	                                 not rax	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400956c	      0x488d5403fe	                lea rdx, [rbx + rax - 2]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009571	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009574	     0xf83c2000000	                           jae 0x400963c	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400957a	          0x4d89c1	                              mov r9, r8	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400957d	    0x4181e1008000	                         and r9d, 0x8000	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x4009584	          0x4c63c6	                          movsxd r8, esi	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x4009587	        0x49c1e006	                               shl r8, 6	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400958b	    0x4981c0000000	                               add r8, 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x4009592	           0xfb60a	                   movzx ecx, byte [rdx]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x4009595	          0x80f920	                            cmp cl, 0x20	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x4009598	            0x7405	                            je 0x400959f	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400959a	          0x80f92c	                            cmp cl, 0x2c	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400959d	            0x7562	                           jne 0x4009601	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400959f	          0x4839d5	                            cmp rbp, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095a2	            0x731a	                           jae 0x40095be	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095a4	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095a8	            0x7519	                           jne 0x40095c3	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095aa	          0x4889d0	                            mov rax, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095ad	        0x4883e801	                              sub rax, 1	     11518	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095b1	          0x4839c5	                            cmp rbp, rax	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095b4	            0x7410	                            je 0x40095c6	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095b6	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095ba	            0x74f1	                            je 0x40095ad	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095bc	            0xeb08	                           jmp 0x40095c6	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095be	          0x4889d0	                            mov rax, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095c1	            0xeb03	                           jmp 0x40095c6	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095c3	          0x4889d0	                            mov rax, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x40095c6	          0x80f920	                            cmp cl, 0x20	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095c9	            0x7514	                           jne 0x40095df	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095cb	    0x41837c242402	               cmp dword [r12 + 0x24], 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095d1	            0x750c	                           jne 0x40095df	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095d3	          0x4889d6	                            mov rsi, rdx	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095d6	          0x4829c6	                            sub rsi, rax	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095d9	        0x4883fe02	                              cmp rsi, 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095dd	            0x7e17	                           jle 0x40095f6	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095df	          0x80f92c	                            cmp cl, 0x2c	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095e2	            0x751d	                           jne 0x4009601	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095e4	          0x4d85c9	                             test r9, r9	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095e7	            0x7418	                            je 0x4009601	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095e9	          0x4889d7	                            mov rdi, rdx	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095ec	          0x4829c7	                            sub rdi, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095ef	          0x4889f8	                            mov rax, rdi	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095f2	            0xa801	                              test al, 1	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095f4	            0x750b	                           jne 0x4009601	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095f6	        0x4883c201	                              add rdx, 1	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095fa	      0x4989542408	                mov qword [r12 + 8], rdx	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x40095ff	            0xeb3b	                           jmp 0x400963c	     11523	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x4009601	    0x498178180000	                cmp qword [r8 + 0x18], 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x4009609	            0x7524	                           jne 0x400962f	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400960b	      0xbf00000000	                              mov edi, 0	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009610	      0xb905000000	                              mov ecx, 5	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009615	          0x4889d6	                            mov rsi, rdx	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009618	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400961a	           0xf97c1	                                 seta cl	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400961d	           0xf92c0	                                 setb al	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009620	            0x38c1	                              cmp cl, al	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009622	            0x750b	                           jne 0x400962f	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x4009624	        0x4883c205	                              add rdx, 5	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x4009628	      0x4989542408	                mov qword [r12 + 8], rdx	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400962d	            0xeb0d	                           jmp 0x400963c	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400962f	        0x4883ea01	                              sub rdx, 1	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009633	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x4009636	     0xf8556ffffff	                           jne 0x4009592	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400963c	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x4009640	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x4009641	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x4009642	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x4009644	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x4009646	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
set_string_default_esc	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,4:DO,0:CALL,5:WHILE,0	44
0x40005d2	            0x4154	                                push r12	      3874	option.c	FUNCTION_4
0x40005d4	              0x55	                                push rbp	      3874	option.c	FUNCTION_4
0x40005d5	              0x53	                                push rbx	      3874	option.c	FUNCTION_4
0x40005d6	          0x4989fc	                            mov r12, rdi	      3874	option.c	FUNCTION_4
0x40005d9	          0x4889f3	                            mov rbx, rsi	      3874	option.c	FUNCTION_4
0x40005dc	            0x85d2	                           test edx, edx	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005de	            0x7424	                            je 0x4000604	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005e0	      0xbe20000000	                           mov esi, 0x20	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005e5	          0x4889df	                            mov rdi, rbx	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005e8	      0xe800000000	                          call 0x40005ed	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005ed	          0x4885c0	                           test rax, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005f0	            0x7412	                            je 0x4000604	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40005f2	      0xbe00000000	                              mov esi, 0	      3879	option.c	FUNCTION_4	CALL_2
0x40005f7	          0x4889df	                            mov rdi, rbx	      3879	option.c	FUNCTION_4	CALL_2
0x40005fa	      0xe800000000	                          call 0x40005ff	      3879	option.c	FUNCTION_4	CALL_2
0x40005ff	          0x4889c5	                            mov rbp, rax	      3879	option.c	FUNCTION_4	CALL_2
0x4000602	            0xeb0b	                           jmp 0x400060f	      3879	option.c	FUNCTION_4	CALL_2
0x4000604	          0x4889df	                            mov rdi, rbx	      3881	option.c	FUNCTION_4	CALL_3
0x4000607	      0xe800000000	                          call 0x400060c	      3881	option.c	FUNCTION_4	CALL_3
0x400060c	          0x4889c5	                            mov rbp, rax	      3881	option.c	FUNCTION_4	CALL_3
0x400060f	          0x4885ed	                           test rbp, rbp	      3882	option.c	FUNCTION_4	IF_2
0x4000612	            0x744d	                            je 0x4000661	      3882	option.c	FUNCTION_4	IF_2
0x4000614	          0x4c89e7	                            mov rdi, r12	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000617	      0xe8fbfcffff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x400061c	            0x89c3	                            mov ebx, eax	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x400061e	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000620	            0x783f	                            js 0x4000661	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000622	            0x4898	                                    cdqe	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000624	        0x48c1e006	                              shl rax, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000628	    0xf68000000000	                   test byte [rax], 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x400062f	            0x7413	                            je 0x4000644	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000631	          0x4863c3	                         movsxd rax, ebx	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000634	        0x48c1e006	                              shl rax, 6	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000638	    0x488bb8000000	                    mov rdi, qword [rax]	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400063f	      0xe800000000	                          call 0x4000644	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000644	          0x4863db	                         movsxd rbx, ebx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000647	        0x48c1e306	                              shl rbx, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x400064b	    0x4889ab000000	                    mov qword [rbx], rbp	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000652	    0x4881c3000000	                              add rbx, 0	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000659	    0x48814b108000	             or qword [rbx + 0x10], 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000661	              0x5b	                                 pop rbx	      3893	option.c	FUNCTION_4
0x4000662	              0x5d	                                 pop rbp	      3893	option.c	FUNCTION_4
0x4000663	            0x415c	                                 pop r12	      3893	option.c	FUNCTION_4
0x4000665	              0xc3	                                     ret	      3893	option.c	FUNCTION_4
makeset	SWITCH,0:functions,0:ELSE,3:FOR,3:IF,19:DO,0:CALL,11:WHILE,0	193
0x4004701	            0x4157	                                push r15	     10047	option.c	FUNCTION_64
0x4004703	            0x4156	                                push r14	     10047	option.c	FUNCTION_64
0x4004705	            0x4155	                                push r13	     10047	option.c	FUNCTION_64
0x4004707	            0x4154	                                push r12	     10047	option.c	FUNCTION_64
0x4004709	              0x55	                                push rbp	     10047	option.c	FUNCTION_64
0x400470a	              0x53	                                push rbx	     10047	option.c	FUNCTION_64
0x400470b	        0x4883ec38	                           sub rsp, 0x38	     10047	option.c	FUNCTION_64
0x400470f	          0x4989fe	                            mov r14, rdi	     10047	option.c	FUNCTION_64
0x4004712	        0x8974241c	             mov dword [rsp + 0x1c], esi	     10047	option.c	FUNCTION_64
0x4004716	        0x8954242c	             mov dword [rsp + 0x2c], edx	     10047	option.c	FUNCTION_64
0x400471a	    0xc74424140100	               mov dword [rsp + 0x14], 1	     10062	option.c	FUNCTION_64	FOR_1
0x4004722	    0x48c744240800	                  mov qword [rsp + 8], 0	     10051	option.c	FUNCTION_64
0x400472b	            0x89f0	                            mov eax, esi	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x400472d	          0x83e004	                              and eax, 4	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4004730	        0x89442428	             mov dword [rsp + 0x28], eax	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4004734	            0x89f0	                            mov eax, esi	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004736	          0x83e002	                              and eax, 2	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004739	        0x89442418	             mov dword [rsp + 0x18], eax	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400473d	      0xe9d1010000	                           jmp 0x4004913	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004742	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004746	          0xf6c402	                              test ah, 2	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x4004749	     0xf859f010000	                           jne 0x40048ee	     10066	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_2
0x400474f	      0x837c241401	               cmp dword [rsp + 0x14], 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004754	           0xf95c1	                                setne cl	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004757	          0x4889c2	                            mov rdx, rax	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400475a	        0x48c1ea18	                           shr rdx, 0x18	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400475e	          0x83e201	                              and edx, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004761	            0x38d1	                              cmp cl, dl	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004763	     0xf8485010000	                            je 0x40048ee	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004769	        0x837b2000	               cmp dword [rbx + 0x20], 0	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400476d	            0x7511	                           jne 0x4004780	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400476f	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4004773	          0x4189cf	                           mov r15d, ecx	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4004776	            0x85c9	                           test ecx, ecx	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4004778	     0xf8470010000	                            je 0x40048ee	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400477e	            0xeb0f	                           jmp 0x400478f	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4004780	        0x8b742418	            mov esi, dword [rsp + 0x18] 	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004784	          0x4189f7	                           mov r15d, esi	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004787	            0x85f6	                           test esi, esi	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004789	     0xf84c5010000	                            je 0x4004954	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400478f	      0xa900002000	                      test eax, 0x200000	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004794	     0xf8554010000	                           jne 0x40048ee	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400479a	      0xe992010000	                           jmp 0x4004931	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400479f	        0x837b2000	               cmp dword [rbx + 0x20], 0	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x40047a3	     0xf84bf010000	                            je 0x4004968	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x40047a9	      0xbd02000000	                              mov ebp, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x40047ae	      0x48837b18ff	cmp qword [rbx + 0x18], 0xffffffffffffffff	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x40047b3	            0x7552	                           jne 0x4004807	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x40047b5	      0x837c242800	               cmp dword [rsp + 0x28], 0	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x40047ba	     0xf842e010000	                            je 0x40048ee	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x40047c0	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x40047c4	          0x4409f8	                            or eax, r15d	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x40047c7	            0x7545	                           jne 0x400480e	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x40047c9	      0xbe02000000	                              mov esi, 2	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x40047ce	          0x4889df	                            mov rdi, rbx	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x40047d1	      0xe8deceffff	                 call sym.get_varp_scope	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x40047d6	      0x4889442420	             mov qword [rsp + 0x20], rax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047db	          0x4889c6	                            mov rsi, rax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047de	          0x4889df	                            mov rdi, rbx	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047e1	      0xe820bdffff	                 call sym.optval_default	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047e6	            0x85c0	                           test eax, eax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047e8	            0x752b	                           jne 0x4004815	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047ea	      0x4c89642408	                mov qword [rsp + 8], r12	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x40047ef	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	     10100	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x40047f4	      0xbd01000000	                              mov ebp, 1	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x40047f9	      0x44896c2420	            mov dword [rsp + 0x20], r13d	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x40047fe	            0xeb1a	                           jmp 0x400481a	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4004800	      0x4c8b642408	                mov r12, qword [rsp + 8]	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4004805	            0xeb13	                           jmp 0x400481a	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4004807	      0x44896c2420	            mov dword [rsp + 0x20], r13d	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400480c	            0xeb0c	                           jmp 0x400481a	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400480e	      0x44896c2420	            mov dword [rsp + 0x20], r13d	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4004813	            0xeb05	                           jmp 0x400481a	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4004815	      0x44896c2420	            mov dword [rsp + 0x20], r13d	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400481a	          0x4585ff	                         test r15d, r15d	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400481d	            0x750b	                           jne 0x400482a	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400481f	    0x41bd00000000	                             mov r13d, 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x4004825	          0x83fd01	                              cmp ebp, 1	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4004828	            0x7506	                           jne 0x4004830	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400482a	    0x41bd00000000	                             mov r13d, 0	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4004830	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4004834	        0x41f6c001	                             test r8b, 1	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4004838	            0x741f	                            je 0x4004859	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400483a	        0x418b0c24	                    mov ecx, dword [r12]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400483e	          0x488b13	                    mov rdx, qword [rbx]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4004841	          0x4c89ee	                            mov rsi, r13	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4004844	          0x4c89f7	                            mov rdi, r14	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4004847	      0xe876e5ffff	                    call sym.put_setbool	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400484c	            0x85c0	                           test eax, eax	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400484e	     0xf858e000000	                           jne 0x40048e2	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4004854	      0xe966010000	                           jmp 0x40049bf	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4004859	        0x41f6c002	                             test r8b, 2	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400485d	            0x741a	                            je 0x4004879	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x400485f	          0x4c89e1	                            mov rcx, r12	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004862	          0x488b13	                    mov rdx, qword [rbx]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004865	          0x4c89ee	                            mov rsi, r13	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004868	          0x4c89f7	                            mov rdi, r14	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x400486b	      0xe8e7e6ffff	                     call sym.put_setnum	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004870	            0x85c0	                           test eax, eax	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004872	            0x756e	                           jne 0x40048e2	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004874	      0xe946010000	                           jmp 0x40049bf	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4004879	          0x8b4320	            mov eax, dword [rbx + 0x20] 	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400487c	      0x3d3f400000	                         cmp eax, 0x403f	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4004881	            0x740b	                            je 0x400488e	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4004883	      0x3d24400000	                         cmp eax, 0x4024	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4004888	     0xf8510010000	                           jne 0x400499e	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x400488e	        0x4d8b0424	                     mov r8, qword [r12]	        97	stdio2.h	CALL_61
0x4004892	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_61
0x4004895	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x400489a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x400489f	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_61
0x40048a2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x40048a7	      0xe800000000	                          call 0x40048ac	        97	stdio2.h	CALL_61
0x40048ac	            0x85c0	                           test eax, eax	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x40048ae	            0x786a	                            js 0x400491a	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x40048b0	          0x4c89f7	                            mov rdi, r14	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x40048b3	      0xe800000000	                          call 0x40048b8	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x40048b8	            0x85c0	                           test eax, eax	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x40048ba	     0xf89b7000000	                           jns 0x4004977	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x40048c0	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x40048c5	          0x4489e8	                           mov eax, r13d	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x40048c8	      0xe9f2000000	                           jmp 0x40049bf	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x40048cd	      0xbe00000000	                              mov esi, 0	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40048d2	          0x4c89f7	                            mov rdi, r14	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40048d5	      0xe800000000	                          call 0x40048da	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40048da	            0x85c0	                           test eax, eax	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40048dc	     0xf84dd000000	                            je 0x40049bf	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40048e2	          0x83c501	                              add ebp, 1	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40048e5	          0x83fd02	                              cmp ebp, 2	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40048e8	     0xf8e12ffffff	                           jle 0x4004800	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40048ee	        0x4883c340	                           add rbx, 0x40	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x40048f2	          0x4889df	                            mov rdi, rbx	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x40048f5	      0xe8f7b8ffff	                   call sym.istermoption	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x40048fa	          0x4189c5	                           mov r13d, eax	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x40048fd	            0x85c0	                           test eax, eax	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x40048ff	     0xf843dfeffff	                            je 0x4004742	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x4004905	      0x836c241401	               sub dword [rsp + 0x14], 1	     10062	option.c	FUNCTION_64	FOR_1
0x400490a	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     10062	option.c	FUNCTION_64	FOR_1
0x400490e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     10062	option.c	FUNCTION_64	FOR_1
0x4004911	            0x7414	                            je 0x4004927	     10062	option.c	FUNCTION_64	FOR_1
0x4004913	      0xbb00000000	                              mov ebx, 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x4004918	            0xebd8	                           jmp 0x40048f2	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x400491a	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x400491f	          0x4489e8	                           mov eax, r13d	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x4004922	      0xe998000000	                           jmp 0x40049bf	     10140	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x4004927	      0xb801000000	                              mov eax, 1	     10155	option.c	FUNCTION_64
0x400492c	      0xe98e000000	                           jmp 0x40049bf	     10155	option.c	FUNCTION_64
0x4004931	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004935	          0x4889df	                            mov rdi, rbx	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004938	      0xe877cdffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400493d	          0x4989c4	                            mov r12, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004940	          0x4889c6	                            mov rsi, rax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4004943	          0x4889df	                            mov rdi, rbx	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4004946	      0xe8bbbbffff	                 call sym.optval_default	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400494b	            0x85c0	                           test eax, eax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400494d	            0x759f	                           jne 0x40048ee	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400494f	      0xe94bfeffff	                           jmp 0x400479f	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4004954	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004958	          0x4889df	                            mov rdi, rbx	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400495b	      0xe854cdffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004960	          0x4989c4	                            mov r12, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004963	      0xe937feffff	                           jmp 0x400479f	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4004968	      0xbd02000000	                              mov ebp, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400496d	      0x44896c2420	            mov dword [rsp + 0x20], r13d	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004972	      0xe9a3feffff	                           jmp 0x400481a	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004977	        0x4c8b4310	              mov r8, qword [rbx + 0x10]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400497b	        0x49c1e804	                               shr r8, 4	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400497f	        0x4183e001	                              and r8d, 1	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4004983	          0x4c89e1	                            mov rcx, r12	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4004986	          0x488b13	                    mov rdx, qword [rbx]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4004989	          0x4c89ee	                            mov rsi, r13	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400498c	          0x4c89f7	                            mov rdi, r14	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400498f	      0xe889e4ffff	                  call sym.put_setstring	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4004994	            0x85c0	                           test eax, eax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4004996	     0xf8531ffffff	                           jne 0x40048cd	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400499c	            0xeb21	                           jmp 0x40049bf	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400499e	        0x49c1e804	                               shr r8, 4	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049a2	        0x4183e001	                              and r8d, 1	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049a6	          0x4c89e1	                            mov rcx, r12	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049a9	          0x488b13	                    mov rdx, qword [rbx]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049ac	          0x4c89ee	                            mov rsi, r13	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049af	          0x4c89f7	                            mov rdi, r14	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049b2	      0xe866e4ffff	                  call sym.put_setstring	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049b7	            0x85c0	                           test eax, eax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049b9	     0xf8523ffffff	                           jne 0x40048e2	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40049bf	        0x4883c438	                           add rsp, 0x38	     10156	option.c	FUNCTION_64
0x40049c3	              0x5b	                                 pop rbx	     10156	option.c	FUNCTION_64
0x40049c4	              0x5d	                                 pop rbp	     10156	option.c	FUNCTION_64
0x40049c5	            0x415c	                                 pop r12	     10156	option.c	FUNCTION_64
0x40049c7	            0x415d	                                 pop r13	     10156	option.c	FUNCTION_64
0x40049c9	            0x415e	                                 pop r14	     10156	option.c	FUNCTION_64
0x40049cb	            0x415f	                                 pop r15	     10156	option.c	FUNCTION_64
0x40049cd	              0xc3	                                     ret	     10156	option.c	FUNCTION_64
set_options_bin	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,9:DO,0:CALL,0:WHILE,0	83
0x4003520	            0x85f6	                           test esi, esi	      5414	option.c	FUNCTION_22	IF_1
0x4003522	     0xf84cc000000	                            je 0x40035f4	      5414	option.c	FUNCTION_22	IF_1
0x4003528	            0x85ff	                           test edi, edi	      5416	option.c	FUNCTION_22	IF_1	IF_2
0x400352a	            0x7554	                           jne 0x4003580	      5416	option.c	FUNCTION_22	IF_1	IF_2
0x400352c	            0x89d1	                            mov ecx, edx	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400352e	          0x83e102	                              and ecx, 2	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003531	     0xf85bf010000	                           jne 0x40036f6	      5418	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003537	    0x488b05000000	            mov rax, qword [0x0400353e] 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400353e	    0x488bb0b81500	          mov rsi, qword [rax + 0x15b8] 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003545	    0x4889b0c01500	          mov qword [rax + 0x15c0], rsi 	      5420	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400354c	    0x488bb0d01500	          mov rsi, qword [rax + 0x15d0] 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003553	    0x4889b0d81500	          mov qword [rax + 0x15d8], rsi 	      5421	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400355a	    0x8bb038150000	          mov esi, dword [rax + 0x1538] 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003560	    0x89b03c150000	          mov dword [rax + 0x153c], esi 	      5422	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003566	    0x8bb078140000	          mov esi, dword [rax + 0x1478] 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x400356c	    0x89b07c140000	          mov dword [rax + 0x147c], esi 	      5423	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x4003572	          0xf6c204	                              test dl, 4	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003575	     0xf8409010000	                            je 0x4003684	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x400357b	      0xe9fa000000	                           jmp 0x400367a	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003580	          0xf6c202	                              test dl, 2	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003583	            0x7531	                           jne 0x40035b6	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003585	    0x488b05000000	            mov rax, qword [0x0400358c] 	      5436	option.c	FUNCTION_22	IF_1	IF_5
0x400358c	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      5436	option.c	FUNCTION_22	IF_1	IF_5
0x4003597	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	      5437	option.c	FUNCTION_22	IF_1	IF_5
0x40035a2	    0xc78038150000	            mov dword [rax + 0x1538], 0 	      5438	option.c	FUNCTION_22	IF_1	IF_5
0x40035ac	    0xc78078140000	            mov dword [rax + 0x1478], 0 	      5439	option.c	FUNCTION_22	IF_1	IF_5
0x40035b6	          0xf6c204	                              test dl, 4	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x40035b9	     0xf8541010000	                           jne 0x4003700	      5441	option.c	FUNCTION_22	IF_1	IF_6
0x40035bf	    0x48c705000000	               mov qword [0x040035ca], 0	      5443	option.c	FUNCTION_22	IF_1	IF_6
0x40035ca	    0x48c705000000	               mov qword [0x040035d5], 0	      5444	option.c	FUNCTION_22	IF_1	IF_6
0x40035d5	    0xc70500000000	               mov dword [0x040035df], 0	      5445	option.c	FUNCTION_22	IF_1	IF_6
0x40035df	    0xc70500000000	               mov dword [0x040035e9], 0	      5446	option.c	FUNCTION_22	IF_1	IF_6
0x40035e9	    0xc70500000000	               mov dword [0x040035f3], 1	      5447	option.c	FUNCTION_22	IF_1	IF_6
0x40035f3	              0xc3	                                     ret	      5447	option.c	FUNCTION_22	IF_1	IF_6
0x40035f4	            0x85ff	                           test edi, edi	      5450	option.c	FUNCTION_22	ELSE_1	IF_7
0x40035f6	     0xf8404010000	                            je 0x4003700	      5450	option.c	FUNCTION_22	ELSE_1	IF_7
0x40035fc	          0xf6c202	                              test dl, 2	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x40035ff	            0x753b	                           jne 0x400363c	      5452	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003601	    0x488b05000000	            mov rax, qword [0x04003608] 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003608	    0x488b88c01500	          mov rcx, qword [rax + 0x15c0] 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x400360f	    0x488988b81500	          mov qword [rax + 0x15b8], rcx 	      5454	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003616	    0x488b88d81500	          mov rcx, qword [rax + 0x15d8] 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x400361d	    0x488988d01500	          mov qword [rax + 0x15d0], rcx 	      5455	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003624	    0x8b883c150000	          mov ecx, dword [rax + 0x153c] 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x400362a	    0x898838150000	          mov dword [rax + 0x1538], ecx 	      5456	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003630	    0x8b887c140000	          mov ecx, dword [rax + 0x147c] 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x4003636	    0x898878140000	          mov dword [rax + 0x1478], ecx 	      5457	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x400363c	          0xf6c204	                              test dl, 4	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x400363f	     0xf85bb000000	                           jne 0x4003700	      5459	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003645	    0x488b05000000	            mov rax, qword [0x0400364c] 	      5461	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x400364c	    0x488905000000	            mov qword [0x04003653], rax 	      5461	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003653	    0x488b05000000	            mov rax, qword [0x0400365a] 	      5462	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x400365a	    0x488905000000	            mov qword [0x04003661], rax 	      5462	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003661	    0x8b0500000000	            mov eax, dword [0x04003667] 	      5463	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003667	    0x890500000000	            mov dword [0x0400366d], eax 	      5463	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x400366d	    0x8b0500000000	            mov eax, dword [0x04003673] 	      5464	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003673	    0x890500000000	            mov dword [0x04003679], eax 	      5464	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x4003679	              0xc3	                                     ret	      5467	option.c	FUNCTION_22
0x400367a	            0x85c9	                           test ecx, ecx	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x400367c	     0xf8403ffffff	                            je 0x4003585	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003682	            0xf3c3	                                     ret	      5434	option.c	FUNCTION_22	IF_1	IF_5
0x4003684	    0x488b05000000	            mov rax, qword [0x0400368b] 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x400368b	    0x488905000000	            mov qword [0x04003692], rax 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003692	    0x488b05000000	            mov rax, qword [0x04003699] 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003699	    0x488905000000	            mov qword [0x040036a0], rax 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036a0	    0x8b0500000000	            mov eax, dword [0x040036a6] 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036a6	    0x890500000000	            mov dword [0x040036ac], eax 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036ac	    0x8b0500000000	            mov eax, dword [0x040036b2] 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036b2	    0x890500000000	            mov dword [0x040036b8], eax 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036b8	      0xe9c8feffff	                           jmp 0x4003585	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036bd	    0x488b05000000	            mov rax, qword [0x040036c4] 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036c4	    0x488905000000	            mov qword [0x040036cb], rax 	      5427	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036cb	    0x488b05000000	            mov rax, qword [0x040036d2] 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036d2	    0x488905000000	            mov qword [0x040036d9], rax 	      5428	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036d9	    0x8b0500000000	            mov eax, dword [0x040036df] 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036df	    0x890500000000	            mov dword [0x040036e5], eax 	      5429	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036e5	    0x8b0500000000	            mov eax, dword [0x040036eb] 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036eb	    0x890500000000	            mov dword [0x040036f1], eax 	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036f1	      0xe9c9feffff	                           jmp 0x40035bf	      5430	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036f6	          0xf6c204	                              test dl, 4	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036f9	            0x74c2	                            je 0x40036bd	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x40036fb	      0xe97affffff	                           jmp 0x400367a	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x4003700	            0xf3c3	                                     ret	      5425	option.c	FUNCTION_22	IF_1	IF_2	IF_4
compile_cap_prog	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,3:DO,0:CALL,4:WHILE,0	33
0x40019a3	            0x4154	                                push r12	      8068	option.c	FUNCTION_47
0x40019a5	              0x55	                                push rbp	      8068	option.c	FUNCTION_47
0x40019a6	              0x53	                                push rbx	      8068	option.c	FUNCTION_47
0x40019a7	          0x4889fb	                            mov rbx, rdi	      8068	option.c	FUNCTION_47
0x40019aa	    0x4c8ba7700400	           mov r12, qword [rdi + 0x470] 	      8069	option.c	FUNCTION_47
0x40019b1	    0x488bb7680400	           mov rsi, qword [rdi + 0x468] 	      8072	option.c	FUNCTION_47	IF_1
0x40019b8	          0x803e00	                       cmp byte [rsi], 0	      8072	option.c	FUNCTION_47	IF_1
0x40019bb	            0x750d	                           jne 0x40019ca	      8072	option.c	FUNCTION_47	IF_1
0x40019bd	    0x48c787700400	              mov qword [rdi + 0x470], 0	      8073	option.c	FUNCTION_47	IF_1
0x40019c8	            0xeb46	                           jmp 0x4001a10	      8073	option.c	FUNCTION_47	IF_1
0x40019ca	      0xbf00000000	                              mov edi, 0	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x40019cf	      0xe800000000	                          call 0x40019d4	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x40019d4	          0x4889c5	                            mov rbp, rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x40019d7	          0x4885c0	                           test rax, rax	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x40019da	            0x7434	                            je 0x4001a10	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x40019dc	      0xbe01000000	                              mov esi, 1	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40019e1	          0x4889c7	                            mov rdi, rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40019e4	      0xe800000000	                          call 0x40019e9	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40019e9	    0x488983700400	            mov qword [rbx + 0x470], rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x40019f0	          0x4889ef	                            mov rdi, rbp	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x40019f3	      0xe800000000	                          call 0x40019f8	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x40019f8	    0x4883bb700400	              cmp qword [rbx + 0x470], 0	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4001a00	            0x750e	                           jne 0x4001a10	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4001a02	    0x4c89a3700400	            mov qword [rbx + 0x470], r12	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4001a09	      0xb800000000	                              mov eax, 0	      8085	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4001a0e	            0xeb0d	                           jmp 0x4001a1d	      8085	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4001a10	          0x4c89e7	                            mov rdi, r12	      8090	option.c	FUNCTION_47	CALL_4
0x4001a13	      0xe800000000	                          call 0x4001a18	      8090	option.c	FUNCTION_47	CALL_4
0x4001a18	      0xb800000000	                              mov eax, 0	      8091	option.c	FUNCTION_47
0x4001a1d	              0x5b	                                 pop rbx	      8092	option.c	FUNCTION_47
0x4001a1e	              0x5d	                                 pop rbp	      8092	option.c	FUNCTION_47
0x4001a1f	            0x415c	                                 pop r12	      8092	option.c	FUNCTION_47
0x4001a21	              0xc3	                                     ret	      8092	option.c	FUNCTION_47
get_winbuf_options	SWITCH,0:functions,0:ELSE,2:FOR,1:IF,5:DO,0:CALL,6:WHILE,0	74
0x400e126	            0x4155	                                push r13	     12715	option.c	FUNCTION_119
0x400e128	            0x4154	                                push r12	     12715	option.c	FUNCTION_119
0x400e12a	              0x55	                                push rbp	     12715	option.c	FUNCTION_119
0x400e12b	              0x53	                                push rbx	     12715	option.c	FUNCTION_119
0x400e12c	        0x4883ec08	                              sub rsp, 8	     12715	option.c	FUNCTION_119
0x400e130	          0x4189fc	                           mov r12d, edi	     12715	option.c	FUNCTION_119
0x400e133	      0xe800000000	                          call 0x400e138	     12719	option.c	FUNCTION_119	CALL_1
0x400e138	          0x4885c0	                           test rax, rax	     12720	option.c	FUNCTION_119	IF_1
0x400e13b	     0xf84e4000000	                            je 0x400e225	     12720	option.c	FUNCTION_119	IF_1
0x400e141	          0x4989c5	                            mov r13, rax	     12720	option.c	FUNCTION_119	IF_1
0x400e144	      0xbd00000000	                              mov ebp, 0	     12720	option.c	FUNCTION_119	IF_1
0x400e149	      0xe9b4000000	                           jmp 0x400e202	     12720	option.c	FUNCTION_119	IF_1
0x400e14e	          0x4585e4	                         test r12d, r12d	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e151	            0x7415	                            je 0x400e168	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e153	          0x4863c5	                         movsxd rax, ebp	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e156	        0x48c1e006	                              shl rax, 6	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e15a	    0xf68000000000	                   test byte [rax], 0x40	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e161	            0x7519	                           jne 0x400e17c	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e163	      0xe997000000	                           jmp 0x400e1ff	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400e168	          0x4863c5	                         movsxd rax, ebp	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400e16b	        0x48c1e006	                              shl rax, 6	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400e16f	    0xf68000000000	                   test byte [rax], 0x20	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400e176	     0xf8483000000	                            je 0x400e1ff	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400e17c	          0x4889df	                            mov rdi, rbx	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x400e17f	      0xe8e224ffff	                       call sym.get_varp	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x400e184	          0x4885c0	                           test rax, rax	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x400e187	            0x7476	                            je 0x400e1ff	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x400e189	          0x4863d5	                         movsxd rdx, ebp	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400e18c	        0x48c1e206	                              shl rdx, 6	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400e190	    0x488b92000000	                    mov rdx, qword [rdx]	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400e197	          0xf6c204	                              test dl, 4	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400e19a	            0x7420	                            je 0x400e1bc	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400e19c	          0x4863f5	                         movsxd rsi, ebp	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e19f	        0x48c1e606	                              shl rsi, 6	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1a3	          0x488b08	                    mov rcx, qword [rax]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1a6	      0xba00000000	                              mov edx, 0	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1ab	    0x488bb6000000	                    mov rsi, qword [rsi]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1b2	          0x4c89ef	                            mov rdi, r13	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1b5	      0xe800000000	                          call 0x400e1ba	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1ba	            0xeb43	                           jmp 0x400e1ff	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400e1bc	          0xf6c202	                              test dl, 2	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1bf	            0x7420	                            je 0x400e1e1	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1c1	          0x4863f5	                         movsxd rsi, ebp	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1c4	        0x48c1e606	                              shl rsi, 6	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1c8	      0xb900000000	                              mov ecx, 0	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1cd	          0x488b10	                    mov rdx, qword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1d0	    0x488bb6000000	                    mov rsi, qword [rsi]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1d7	          0x4c89ef	                            mov rdi, r13	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1da	      0xe800000000	                          call 0x400e1df	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1df	            0xeb1e	                           jmp 0x400e1ff	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400e1e1	          0x486310	                 movsxd rdx, dword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1e4	          0x4863c5	                         movsxd rax, ebp	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1e7	        0x48c1e006	                              shl rax, 6	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1eb	      0xb900000000	                              mov ecx, 0	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1f0	    0x488bb0000000	                    mov rsi, qword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1f7	          0x4c89ef	                            mov rdi, r13	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1fa	      0xe800000000	                          call 0x400e1ff	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400e1ff	          0x83c501	                              add ebp, 1	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e202	          0x4863dd	                         movsxd rbx, ebp	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e205	        0x48c1e306	                              shl rbx, 6	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e209	    0x4881c3000000	                              add rbx, 0	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e210	          0x4889df	                            mov rdi, rbx	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e213	      0xe8d91fffff	                   call sym.istermoption	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e218	            0x85c0	                           test eax, eax	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e21a	     0xf842effffff	                            je 0x400e14e	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400e220	          0x4c89e8	                            mov rax, r13	     12744	option.c	FUNCTION_119
0x400e223	            0xeb05	                           jmp 0x400e22a	     12744	option.c	FUNCTION_119
0x400e225	      0xb800000000	                              mov eax, 0	     12721	option.c	FUNCTION_119	IF_1
0x400e22a	        0x4883c408	                              add rsp, 8	     12745	option.c	FUNCTION_119
0x400e22e	              0x5b	                                 pop rbx	     12745	option.c	FUNCTION_119
0x400e22f	              0x5d	                                 pop rbp	     12745	option.c	FUNCTION_119
0x400e230	            0x415c	                                 pop r12	     12745	option.c	FUNCTION_119
0x400e232	            0x415d	                                 pop r13	     12745	option.c	FUNCTION_119
0x400e234	              0xc3	                                     ret	     12745	option.c	FUNCTION_119
did_set_option	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,2:DO,0:CALL,0:WHILE,0	22
0x4000116	              0x55	                                push rbp	      5300	option.c	FUNCTION_17
0x4000117	              0x53	                                push rbx	      5300	option.c	FUNCTION_17
0x4000118	            0x89f3	                            mov ebx, esi	      5300	option.c	FUNCTION_17
0x400011a	            0x89d5	                            mov ebp, edx	      5300	option.c	FUNCTION_17
0x400011c	          0x4863c7	                         movsxd rax, edi	      5303	option.c	FUNCTION_17
0x400011f	        0x48c1e006	                              shl rax, 6	      5303	option.c	FUNCTION_17
0x4000123	    0x488188000000	                   or qword [rax], 0x100	      5303	option.c	FUNCTION_17
0x400012e	      0xe81fffffff	                  call sym.insecure_flag	      5308	option.c	FUNCTION_17
0x4000133	    0x833d00000000	               cmp dword [0x0400013a], 0	      5309	option.c	FUNCTION_17	IF_1
0x400013a	            0x750e	                           jne 0x400014a	      5309	option.c	FUNCTION_17	IF_1
0x400013c	    0x833d00000000	               cmp dword [0x04000143], 0	      5311	option.c	FUNCTION_17	IF_1
0x4000143	            0x7505	                           jne 0x400014a	      5311	option.c	FUNCTION_17	IF_1
0x4000145	          0xf6c308	                              test bl, 8	      5313	option.c	FUNCTION_17	IF_1
0x4000148	            0x7409	                            je 0x4000153	      5313	option.c	FUNCTION_17	IF_1
0x400014a	    0x488108000080	                or qword [rax], 0x800000	      5314	option.c	FUNCTION_17	IF_1
0x4000151	            0xeb0b	                           jmp 0x400015e	      5314	option.c	FUNCTION_17	IF_1
0x4000153	            0x85ed	                           test ebp, ebp	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4000155	            0x7407	                            je 0x400015e	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4000157	    0x488120ffff7f	     and qword [rax], 0xffffffffff7fffff	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x400015e	              0x5b	                                 pop rbx	      5317	option.c	FUNCTION_17
0x400015f	              0x5d	                                 pop rbp	      5317	option.c	FUNCTION_17
0x4000160	              0xc3	                                     ret	      5317	option.c	FUNCTION_17
get_varp_scope	SWITCH,1:functions,0:ELSE,0:FOR,0:IF,3:DO,0:CALL,3:WHILE,0	140
0x40016b4	        0x4883ec08	                              sub rsp, 8	     10531	option.c	FUNCTION_76
0x40016b8	        0x40f6c602	                             test sil, 2	     10532	option.c	FUNCTION_76	IF_1
0x40016bc	            0x7428	                            je 0x40016e6	     10532	option.c	FUNCTION_76	IF_1
0x40016be	        0x837f2000	               cmp dword [rdi + 0x20], 0	     10532	option.c	FUNCTION_76	IF_1
0x40016c2	     0xf84ca020000	                            je 0x4001992	     10532	option.c	FUNCTION_76	IF_1
0x40016c8	        0x488b4718	            mov rax, qword [rdi + 0x18] 	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x40016cc	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x40016d0	     0xf85c8020000	                           jne 0x400199e	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x40016d6	      0xe88befffff	                       call sym.get_varp	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x40016db	    0x4805b8010000	                          add rax, 0x1b8	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x40016e1	      0xe9b8020000	                           jmp 0x400199e	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x40016e6	        0x40f6c604	                             test sil, 4	     10538	option.c	FUNCTION_76	IF_3
0x40016ea	     0xf84a2020000	                            je 0x4001992	     10538	option.c	FUNCTION_76	IF_3
0x40016f0	          0x8b5720	            mov edx, dword [rdi + 0x20] 	     10538	option.c	FUNCTION_76	IF_3
0x40016f3	          0xf6c610	                           test dh, 0x10	     10538	option.c	FUNCTION_76	IF_3
0x40016f6	     0xf8496020000	                            je 0x4001992	     10538	option.c	FUNCTION_76	IF_3
0x40016fc	    0x81fa18500000	                         cmp edx, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001702	     0xf8421020000	                            je 0x4001929	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001708	    0x81fa18500000	                         cmp edx, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400170e	     0xf87d8000000	                            ja 0x40017ec	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001714	    0x81fa06500000	                         cmp edx, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400171a	     0xf84b2010000	                            je 0x40018d2	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001720	    0x81fa06500000	                         cmp edx, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001726	            0x775c	                            ja 0x4001784	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001728	    0x81fa01500000	                         cmp edx, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400172e	     0xf84c2010000	                            je 0x40018f6	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001734	    0x81fa01500000	                         cmp edx, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400173a	            0x771e	                            ja 0x400175a	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400173c	    0x488b05000000	            mov rax, qword [0x04001743] 	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001743	    0x480580020000	                          add rax, 0x280	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001749	    0x81fa21300000	                         cmp edx, 0x3021	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400174f	     0xf8449020000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001755	      0xe93f020000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400175a	    0x81fa03500000	                         cmp edx, 0x5003	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001760	     0xf840e020000	                            je 0x4001974	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001766	    0x488b05000000	            mov rax, qword [0x0400176d] 	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400176d	    0x480500160000	                         add rax, 0x1600	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001773	    0x81fa05500000	                         cmp edx, 0x5005	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001779	     0xf841f020000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400177f	      0xe915020000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001784	    0x81fa14500000	                         cmp edx, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400178a	     0xf84a8010000	                            je 0x4001938	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001790	    0x81fa14500000	                         cmp edx, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001796	            0x772a	                            ja 0x40017c2	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001798	    0x81fa07500000	                         cmp edx, 0x5007	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400179e	     0xf8440010000	                            je 0x40018e4	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017a4	    0x488b05000000	            mov rax, qword [0x040017ab] 	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017ab	    0x480548170000	                         add rax, 0x1748	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017b1	    0x81fa10500000	                         cmp edx, 0x5010	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017b7	     0xf84e1010000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017bd	      0xe9d7010000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017c2	    0x81fa15500000	                         cmp edx, 0x5015	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017c8	     0xf8479010000	                            je 0x4001947	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017ce	    0x488b05000000	            mov rax, qword [0x040017d5] 	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017d5	    0x4805c0140000	                         add rax, 0x14c0	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017db	    0x81fa17500000	                         cmp edx, 0x5017	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017e1	     0xf84b7010000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017e7	      0xe9ad010000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017ec	    0x81fa30500000	                         cmp edx, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017f2	     0xf846d010000	                            je 0x4001965	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017f8	    0x81fa30500000	                         cmp edx, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40017fe	            0x775c	                            ja 0x400185c	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001800	    0x81fa1e500000	                         cmp edx, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001806	     0xf84b4000000	                            je 0x40018c0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400180c	    0x81fa1e500000	                         cmp edx, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001812	            0x771e	                            ja 0x4001832	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001814	    0x488b05000000	            mov rax, qword [0x0400181b] 	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400181b	    0x480508160000	                         add rax, 0x1608	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001821	    0x81fa1b500000	                         cmp edx, 0x501b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001827	     0xf8471010000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400182d	      0xe967010000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001832	    0x81fa1f500000	                         cmp edx, 0x501f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001838	     0xf8418010000	                            je 0x4001956	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400183e	    0x488b05000000	            mov rax, qword [0x04001845] 	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001845	    0x480518150000	                         add rax, 0x1518	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400184b	    0x81fa2e500000	                         cmp edx, 0x502e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001851	     0xf8447010000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001857	      0xe93d010000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400185c	    0x81fa47500000	                         cmp edx, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001862	     0xf84a0000000	                            je 0x4001908	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001868	    0x81fa47500000	                         cmp edx, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400186e	            0x772a	                            ja 0x400189a	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001870	    0x81fa31500000	                         cmp edx, 0x5031	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001876	     0xf8407010000	                            je 0x4001983	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400187c	    0x488b05000000	            mov rax, qword [0x04001883] 	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001883	    0x480510160000	                         add rax, 0x1610	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001889	    0x81fa38500000	                         cmp edx, 0x5038	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400188f	     0xf8409010000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001895	      0xe9ff000000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400189a	    0x81fa48500000	                         cmp edx, 0x5048	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018a0	            0x7478	                            je 0x400191a	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018a2	    0x488b05000000	            mov rax, qword [0x040018a9] 	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018a9	    0x480548160000	                         add rax, 0x1648	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018af	    0x81fa4d500000	                         cmp edx, 0x504d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018b5	     0xf84e3000000	                            je 0x400199e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018bb	      0xe9d9000000	                           jmp 0x4001999	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018c0	    0x488b05000000	            mov rax, qword [0x040018c7] 	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018c7	    0x4805f8140000	                         add rax, 0x14f8	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018cd	      0xe9cc000000	                           jmp 0x400199e	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018d2	    0x488b05000000	            mov rax, qword [0x040018d9] 	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018d9	    0x4805f0150000	                         add rax, 0x15f0	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018df	      0xe9ba000000	                           jmp 0x400199e	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018e4	    0x488b05000000	            mov rax, qword [0x040018eb] 	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018eb	    0x4805f8150000	                         add rax, 0x15f8	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018f1	      0xe9a8000000	                           jmp 0x400199e	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018f6	    0x488b05000000	            mov rax, qword [0x040018fd] 	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40018fd	    0x480518160000	                         add rax, 0x1618	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001903	      0xe996000000	                           jmp 0x400199e	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001908	    0x488b05000000	            mov rax, qword [0x0400190f] 	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400190f	    0x480520160000	                         add rax, 0x1620	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001915	      0xe984000000	                           jmp 0x400199e	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400191a	    0x488b05000000	            mov rax, qword [0x04001921] 	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001921	    0x480528160000	                         add rax, 0x1628	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001927	            0xeb75	                           jmp 0x400199e	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001929	    0x488b05000000	            mov rax, qword [0x04001930] 	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001930	    0x4805c8140000	                         add rax, 0x14c8	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001936	            0xeb66	                           jmp 0x400199e	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001938	    0x488b05000000	            mov rax, qword [0x0400193f] 	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400193f	    0x480538160000	                         add rax, 0x1638	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001945	            0xeb57	                           jmp 0x400199e	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001947	    0x488b05000000	            mov rax, qword [0x0400194e] 	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400194e	    0x480540160000	                         add rax, 0x1640	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001954	            0xeb48	                           jmp 0x400199e	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001956	    0x488b05000000	            mov rax, qword [0x0400195d] 	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400195d	    0x480538170000	                         add rax, 0x1738	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001963	            0xeb39	                           jmp 0x400199e	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001965	    0x488b05000000	            mov rax, qword [0x0400196c] 	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400196c	    0x480558160000	                         add rax, 0x1658	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001972	            0xeb2a	                           jmp 0x400199e	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001974	    0x488b05000000	            mov rax, qword [0x0400197b] 	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400197b	    0x4805f8130000	                         add rax, 0x13f8	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001981	            0xeb1b	                           jmp 0x400199e	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001983	    0x488b05000000	            mov rax, qword [0x0400198a] 	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400198a	    0x480528150000	                         add rax, 0x1528	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001990	            0xeb0c	                           jmp 0x400199e	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4001992	      0xe8cfecffff	                       call sym.get_varp	     10582	option.c	FUNCTION_76	CALL_3
0x4001997	            0xeb05	                           jmp 0x400199e	     10582	option.c	FUNCTION_76	CALL_3
0x4001999	      0xb800000000	                              mov eax, 0	     10580	option.c	FUNCTION_76	IF_3
0x400199e	        0x4883c408	                              add rsp, 8	     10583	option.c	FUNCTION_76
0x40019a2	              0xc3	                                     ret	     10583	option.c	FUNCTION_76
free_termoptions	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,3:DO,0:CALL,4:WHILE,0	29
0x4004b1c	              0x53	                                push rbx	     10303	option.c	FUNCTION_70
0x4004b1d	    0x48833d000000	               cmp qword [0x04004b25], 0	     10306	option.c	FUNCTION_70	FOR_1
0x4004b25	            0x745d	                            je 0x4004b84	     10306	option.c	FUNCTION_70	FOR_1
0x4004b27	      0xbb00000000	                              mov ebx, 0	     10306	option.c	FUNCTION_70	FOR_1
0x4004b2c	          0x4889df	                            mov rdi, rbx	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4004b2f	      0xe8bdb6ffff	                   call sym.istermoption	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4004b34	            0x85c0	                           test eax, eax	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4004b36	            0x7442	                            je 0x4004b7a	     10307	option.c	FUNCTION_70	FOR_1	IF_1	CALL_1
0x4004b38	        0xf6431008	               test byte [rbx + 0x10], 8	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x4004b3c	            0x740c	                            je 0x4004b4a	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x4004b3e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x4004b42	          0x488b38	                    mov rdi, qword [rax]	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x4004b45	      0xe800000000	                          call 0x4004b4a	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x4004b4a	        0xf6431080	           test byte [rbx + 0x10], 0x80 	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x4004b4e	            0x7409	                            je 0x4004b59	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x4004b50	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x4004b54	      0xe800000000	                          call 0x4004b59	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x4004b59	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b5d	    0x488b15000000	            mov rdx, qword [0x04004b64] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b64	          0x488910	                    mov qword [rax], rdx	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b67	    0x488b05000000	            mov rax, qword [0x04004b6e] 	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b6e	        0x48894328	             mov qword [rbx + 0x28], rax	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b72	    0x4881631077ff	and qword [rbx + 0x10], 0xffffffffffffff77	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x4004b7a	        0x4883c340	                           add rbx, 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x4004b7e	        0x48833b00	                      cmp qword [rbx], 0	     10306	option.c	FUNCTION_70	FOR_1
0x4004b82	            0x75a8	                           jne 0x4004b2c	     10306	option.c	FUNCTION_70	FOR_1
0x4004b84	      0xe800000000	                          call 0x4004b89	     10317	option.c	FUNCTION_70	CALL_4
0x4004b89	              0x5b	                                 pop rbx	     10318	option.c	FUNCTION_70
0x4004b8a	              0xc3	                                     ret	     10318	option.c	FUNCTION_70
find_viminfo_parameter	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,3:DO,0:CALL,1:WHILE,0	38
0x4003702	              0x53	                                push rbx	      5495	option.c	FUNCTION_24
0x4003703	            0x89fb	                            mov ebx, edi	      5495	option.c	FUNCTION_24
0x4003705	    0x488b3d000000	            mov rdi, qword [0x0400370c] 	      5498	option.c	FUNCTION_24	FOR_1
0x400370c	           0xfb607	                   movzx eax, byte [rdi]	      5498	option.c	FUNCTION_24	FOR_1
0x400370f	            0x84c0	                             test al, al	      5498	option.c	FUNCTION_24	FOR_1
0x4003711	            0x7441	                            je 0x4003754	      5498	option.c	FUNCTION_24	FOR_1
0x4003713	           0xfb6d0	                           movzx edx, al	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003716	            0x39d3	                            cmp ebx, edx	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003718	            0x740d	                            je 0x4003727	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x400371a	            0x3c6e	                            cmp al, 0x6e	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x400371c	            0x7514	                           jne 0x4003732	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x400371e	            0xeb3b	                           jmp 0x400375b	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003720	           0xfb6c2	                           movzx eax, dl	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003723	            0x39d8	                            cmp eax, ebx	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003725	            0x7506	                           jne 0x400372d	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x4003727	        0x488d4701	                      lea rax, [rdi + 1]	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x400372b	            0xeb41	                           jmp 0x400376e	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x400372d	          0x80fa6e	                            cmp dl, 0x6e	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003730	            0x7430	                            je 0x4003762	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x4003732	      0xbe2c000000	                           mov esi, 0x2c	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x4003737	      0xe800000000	                          call 0x400373c	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x400373c	          0x4885c0	                           test rax, rax	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x400373f	            0x7428	                            je 0x4003769	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x4003741	        0x488d7801	                      lea rdi, [rax + 1]	      5498	option.c	FUNCTION_24	FOR_1
0x4003745	         0xfb65001	               movzx edx, byte [rax + 1]	      5498	option.c	FUNCTION_24	FOR_1
0x4003749	            0x84d2	                             test dl, dl	      5498	option.c	FUNCTION_24	FOR_1
0x400374b	            0x75d3	                           jne 0x4003720	      5498	option.c	FUNCTION_24	FOR_1
0x400374d	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x4003752	            0xeb1a	                           jmp 0x400376e	      5508	option.c	FUNCTION_24
0x4003754	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x4003759	            0xeb13	                           jmp 0x400376e	      5508	option.c	FUNCTION_24
0x400375b	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x4003760	            0xeb0c	                           jmp 0x400376e	      5508	option.c	FUNCTION_24
0x4003762	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x4003767	            0xeb05	                           jmp 0x400376e	      5508	option.c	FUNCTION_24
0x4003769	      0xb800000000	                              mov eax, 0	      5508	option.c	FUNCTION_24
0x400376e	              0x5b	                                 pop rbx	      5509	option.c	FUNCTION_24
0x400376f	              0xc3	                                     ret	      5509	option.c	FUNCTION_24
put_setnum	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,5:DO,0:CALL,4:WHILE,0	56
0x4002f57	            0x4154	                                push r12	     10238	option.c	FUNCTION_67
0x4002f59	              0x55	                                push rbp	     10238	option.c	FUNCTION_67
0x4002f5a	              0x53	                                push rbx	     10238	option.c	FUNCTION_67
0x4002f5b	          0x4889fb	                            mov rbx, rdi	     10238	option.c	FUNCTION_67
0x4002f5e	          0x4989d0	                             mov r8, rdx	     10238	option.c	FUNCTION_67
0x4002f61	          0x4889cd	                            mov rbp, rcx	     10238	option.c	FUNCTION_67
0x4002f64	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_61
0x4002f67	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002f6c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002f71	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x4002f76	      0xe800000000	                          call 0x4002f7b	        97	stdio2.h	CALL_61
0x4002f7b	      0xba00000000	                              mov edx, 0	     10242	option.c	FUNCTION_67	IF_1
0x4002f80	            0x85c0	                           test eax, eax	     10241	option.c	FUNCTION_67	IF_1
0x4002f82	     0xf8881000000	                            js 0x4003009	     10241	option.c	FUNCTION_67	IF_1
0x4002f88	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4002f8f	            0x7409	                            je 0x4002f9a	     11813	option.c	FUNCTION_92	IF_1
0x4002f91	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4002f98	            0x7533	                           jne 0x4002fcd	     11813	option.c	FUNCTION_92	IF_1
0x4002f9a	        0x4c8b6500	                    mov r12, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x4002f9e	          0x4d85e4	                           test r12, r12	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002fa1	            0x780c	                            js 0x4002faf	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002fa3	          0x4489e7	                           mov edi, r12d	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002fa6	      0xe800000000	                          call 0x4002fab	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002fab	            0x85c0	                           test eax, eax	     10243	option.c	FUNCTION_67	IF_2	CALL_1
0x4002fad	            0x781e	                            js 0x4002fcd	     10243	option.c	FUNCTION_67	IF_2	CALL_1
0x4002faf	      0xbe00000000	                              mov esi, 0	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fb4	          0x4489e7	                           mov edi, r12d	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fb7	      0xe800000000	                          call 0x4002fbc	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fbc	          0x4889de	                            mov rsi, rbx	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fbf	          0x4889c7	                            mov rdi, rax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fc2	      0xe800000000	                          call 0x4002fc7	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fc7	            0x85c0	                           test eax, eax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fc9	            0x7921	                           jns 0x4002fec	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fcb	            0xeb30	                           jmp 0x4002ffd	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002fcd	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_61
0x4002fd1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002fd6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002fdb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x4002fde	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x4002fe3	      0xe800000000	                          call 0x4002fe8	        97	stdio2.h	CALL_61
0x4002fe8	            0x85c0	                           test eax, eax	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4002fea	            0x7818	                            js 0x4003004	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4002fec	          0x4889df	                            mov rdi, rbx	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x4002fef	      0xe800000000	                          call 0x4002ff4	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x4002ff4	            0xf7d0	                                 not eax	     10242	option.c	FUNCTION_67	IF_1
0x4002ff6	            0x89c2	                            mov edx, eax	     10242	option.c	FUNCTION_67	IF_1
0x4002ff8	          0xc1ea1f	                           shr edx, 0x1f	     10242	option.c	FUNCTION_67	IF_1
0x4002ffb	            0xeb0c	                           jmp 0x4003009	     10242	option.c	FUNCTION_67	IF_1
0x4002ffd	      0xba00000000	                              mov edx, 0	     10247	option.c	FUNCTION_67	IF_2	IF_3
0x4003002	            0xeb05	                           jmp 0x4003009	     10247	option.c	FUNCTION_67	IF_2	IF_3
0x4003004	      0xba00000000	                              mov edx, 0	     10250	option.c	FUNCTION_67	ELSE_1	IF_4
0x4003009	            0x89d0	                            mov eax, edx	     10254	option.c	FUNCTION_67
0x400300b	              0x5b	                                 pop rbx	     10254	option.c	FUNCTION_67
0x400300c	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_67
0x400300d	            0x415c	                                 pop r12	     10254	option.c	FUNCTION_67
0x400300f	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
set_imsearch_global	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	4
0x4005aac	    0x488b05000000	            mov rax, qword [0x04005ab3] 	     11326	option.c	FUNCTION_87
0x4005ab3	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	     11326	option.c	FUNCTION_87
0x4005aba	    0x488905000000	            mov qword [0x04005ac1], rax 	     11326	option.c	FUNCTION_87
0x4005ac1	              0xc3	                                     ret	     11326	option.c	FUNCTION_87
ExpandOldSetting	SWITCH,0:functions,0:ELSE,1:FOR,1:IF,7:DO,0:CALL,9:WHILE,0	59
0x4009ad8	              0x55	                                push rbp	     11705	option.c	FUNCTION_90
0x4009ad9	              0x53	                                push rbx	     11705	option.c	FUNCTION_90
0x4009ada	        0x4883ec08	                              sub rsp, 8	     11705	option.c	FUNCTION_90
0x4009ade	          0x4889fd	                            mov rbp, rdi	     11705	option.c	FUNCTION_90
0x4009ae1	          0x4889f3	                            mov rbx, rsi	     11705	option.c	FUNCTION_90
0x4009ae4	    0xc70700000000	                      mov dword [rdi], 0	     11709	option.c	FUNCTION_90
0x4009aea	      0xbf08000000	                              mov edi, 8	     11710	option.c	FUNCTION_90	CALL_1
0x4009aef	      0xe800000000	                          call 0x4009af4	     11710	option.c	FUNCTION_90	CALL_1
0x4009af4	          0x488903	                    mov qword [rbx], rax	     11710	option.c	FUNCTION_90	CALL_1
0x4009af7	          0x4885c0	                           test rax, rax	     11711	option.c	FUNCTION_90	IF_1
0x4009afa	     0xf849e000000	                            je 0x4009b9e	     11711	option.c	FUNCTION_90	IF_1
0x4009b00	    0x8b0500000000	            mov eax, dword [0x04009b06] 	     11717	option.c	FUNCTION_90	IF_2
0x4009b06	            0x85c0	                           test eax, eax	     11717	option.c	FUNCTION_90	IF_2
0x4009b08	            0x792a	                           jns 0x4009b34	     11717	option.c	FUNCTION_90	IF_2
0x4009b0a	      0xbf00000000	                              mov edi, 0	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4009b0f	      0xe800000000	                          call 0x4009b14	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4009b14	          0x4889c7	                            mov rdi, rax	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x4009b17	          0x4885c0	                           test rax, rax	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x4009b1a	     0xf8585000000	                           jne 0x4009ba5	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x4009b20	      0xbf00000000	                              mov edi, 0	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x4009b25	      0xe8ed67ffff	                     call sym.findoption	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x4009b2a	    0x890500000000	            mov dword [0x04009b30], eax 	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x4009b30	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x4009b32	            0x7825	                            js 0x4009b59	     11724	option.c	FUNCTION_90	IF_4
0x4009b34	          0x4863f8	                         movsxd rdi, eax	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b37	          0x4889fa	                            mov rdx, rdi	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b3a	        0x48c1e206	                              shl rdx, 6	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b3e	    0x488dba000000	                          lea rdi, [rdx]	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b45	    0x8b3500000000	            mov esi, dword [0x04009b4b] 	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b4b	      0xe82f8dffff	            call sym.option_value2string	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x4009b50	    0x488b3d000000	            mov rdi, qword [0x04009b57] 	     11728	option.c	FUNCTION_90	IF_4
0x4009b57	            0xeb05	                           jmp 0x4009b5e	     11728	option.c	FUNCTION_90	IF_4
0x4009b59	      0xbf00000000	                              mov edi, 0	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
0x4009b5e	    0x488b35000000	            mov rsi, qword [0x04009b65] 	     11735	option.c	FUNCTION_90	CALL_5
0x4009b65	      0xe800000000	                          call 0x4009b6a	     11735	option.c	FUNCTION_90	CALL_5
0x4009b6a	          0x4885c0	                           test rax, rax	     11737	option.c	FUNCTION_90	IF_6
0x4009b6d	            0x751b	                           jne 0x4009b8a	     11737	option.c	FUNCTION_90	IF_6
0x4009b6f	          0x488b3b	                    mov rdi, qword [rbx]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4009b72	          0x4885ff	                           test rdi, rdi	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4009b75	            0x743a	                            je 0x4009bb1	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4009b77	      0xe800000000	                          call 0x4009b7c	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4009b7c	    0x48c703000000	                      mov qword [rbx], 0	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x4009b83	      0xb800000000	                              mov eax, 0	     11740	option.c	FUNCTION_90	IF_6
0x4009b88	            0xeb27	                           jmp 0x4009bb1	     11740	option.c	FUNCTION_90	IF_6
0x4009b8a	          0x488b13	                    mov rdx, qword [rbx]	     11755	option.c	FUNCTION_90
0x4009b8d	          0x488902	                    mov qword [rdx], rax	     11755	option.c	FUNCTION_90
0x4009b90	    0xc74500010000	                      mov dword [rbp], 1	     11756	option.c	FUNCTION_90
0x4009b97	      0xb801000000	                              mov eax, 1	     11757	option.c	FUNCTION_90
0x4009b9c	            0xeb13	                           jmp 0x4009bb1	     11757	option.c	FUNCTION_90
0x4009b9e	      0xb800000000	                              mov eax, 0	     11712	option.c	FUNCTION_90	IF_1
0x4009ba3	            0xeb0c	                           jmp 0x4009bb1	     11712	option.c	FUNCTION_90	IF_1
0x4009ba5	    0x8b0500000000	            mov eax, dword [0x04009bab] 	     11724	option.c	FUNCTION_90	IF_4
0x4009bab	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x4009bad	            0x78af	                            js 0x4009b5e	     11724	option.c	FUNCTION_90	IF_4
0x4009baf	            0xeb83	                           jmp 0x4009b34	     11724	option.c	FUNCTION_90	IF_4
0x4009bb1	        0x4883c408	                              add rsp, 8	     11758	option.c	FUNCTION_90
0x4009bb5	              0x5b	                                 pop rbx	     11758	option.c	FUNCTION_90
0x4009bb6	              0x5d	                                 pop rbp	     11758	option.c	FUNCTION_90
0x4009bb7	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
set_option_default	SWITCH,0:functions,0:ELSE,4:FOR,0:IF,9:DO,0:CALL,8:WHILE,0	117
0x4003e27	            0x4157	                                push r15	      3764	option.c	FUNCTION_2
0x4003e29	            0x4156	                                push r14	      3764	option.c	FUNCTION_2
0x4003e2b	            0x4155	                                push r13	      3764	option.c	FUNCTION_2
0x4003e2d	            0x4154	                                push r12	      3764	option.c	FUNCTION_2
0x4003e2f	              0x55	                                push rbp	      3764	option.c	FUNCTION_2
0x4003e30	              0x53	                                push rbx	      3764	option.c	FUNCTION_2
0x4003e31	        0x4883ec08	                              sub rsp, 8	      3764	option.c	FUNCTION_2
0x4003e35	          0x4189fc	                           mov r12d, edi	      3764	option.c	FUNCTION_2
0x4003e38	            0x89f5	                            mov ebp, esi	      3764	option.c	FUNCTION_2
0x4003e3a	          0x4189d6	                           mov r14d, edx	      3764	option.c	FUNCTION_2
0x4003e3d	          0x4189f5	                           mov r13d, esi	      3771	option.c	FUNCTION_2	CALL_1
0x4003e40	        0x4183e506	                             and r13d, 6	      3771	option.c	FUNCTION_2	CALL_1
0x4003e44	      0xbe04000000	                              mov esi, 4	      3771	option.c	FUNCTION_2	CALL_1
0x4003e49	           0xf45f5	                         cmovne esi, ebp	      3771	option.c	FUNCTION_2	CALL_1
0x4003e4c	          0x4863df	                         movsxd rbx, edi	      3771	option.c	FUNCTION_2	CALL_1
0x4003e4f	        0x48c1e306	                              shl rbx, 6	      3771	option.c	FUNCTION_2	CALL_1
0x4003e53	    0x4881c3000000	                              add rbx, 0	      3771	option.c	FUNCTION_2	CALL_1
0x4003e5a	          0x4889df	                            mov rdi, rbx	      3771	option.c	FUNCTION_2	CALL_1
0x4003e5d	      0xe852d8ffff	                 call sym.get_varp_scope	      3771	option.c	FUNCTION_2	CALL_1
0x4003e62	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      3772	option.c	FUNCTION_2
0x4003e66	          0x4885c0	                           test rax, rax	      3773	option.c	FUNCTION_2	IF_1
0x4003e69	     0xf844c010000	                            je 0x4003fbb	      3773	option.c	FUNCTION_2	IF_1
0x4003e6f	          0x4989c7	                            mov r15, rax	      3773	option.c	FUNCTION_2	IF_1
0x4003e72	          0x4889d0	                            mov rax, rdx	      3775	option.c	FUNCTION_2	IF_1
0x4003e75	        0x48c1e80a	                            shr rax, 0xa	      3775	option.c	FUNCTION_2	IF_1
0x4003e79	        0x4883f001	                              xor rax, 1	      3775	option.c	FUNCTION_2	IF_1
0x4003e7d	          0x4585f6	                         test r14d, r14d	      3775	option.c	FUNCTION_2	IF_1
0x4003e80	        0x410f94c6	                               sete r14b	      3775	option.c	FUNCTION_2	IF_1
0x4003e84	        0x450fb6f6	                        movzx r14d, r14b	      3775	option.c	FUNCTION_2	IF_1
0x4003e88	          0x4121c6	                           and r14d, eax	      3775	option.c	FUNCTION_2	IF_1
0x4003e8b	          0xf6c204	                              test dl, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4003e8e	            0x7477	                            je 0x4003f07	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4003e90	          0x4963c4	                        movsxd rax, r12d	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4003e93	        0x48c1e006	                              shl rax, 6	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4003e97	    0x83b800000000	                      cmp dword [rax], 0	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4003e9e	            0x742d	                            je 0x4003ecd	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4003ea0	          0x4963c6	                        movsxd rax, r14d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ea3	          0x4963d4	                        movsxd rdx, r12d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ea6	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003eab	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003eb3	    0x41b800000000	                              mov r8d, 0	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003eb9	            0x89e9	                            mov ecx, ebp	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ebb	          0x4489e6	                           mov esi, r12d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ebe	      0xbf00000000	                              mov edi, 0	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ec3	      0xe800000000	                          call 0x4003ec8	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ec8	      0xe9dd000000	                           jmp 0x4003faa	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4003ecd	        0x40f6c501	                             test bpl, 1	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4003ed1	            0x740d	                            je 0x4003ee0	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4003ed3	          0xf6c208	                              test dl, 8	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4003ed6	            0x7408	                            je 0x4003ee0	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4003ed8	          0x498b3f	                    mov rdi, qword [r15]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x4003edb	      0xe800000000	                          call 0x4003ee0	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x4003ee0	          0x4d63f6	                        movsxd r14, r14d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003ee3	          0x4963c4	                        movsxd rax, r12d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003ee6	      0x498d54c604	              lea rdx, [r14 + rax*8 + 4]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003eeb	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003ef3	          0x498917	                    mov qword [r15], rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003ef6	        0x48c1e006	                              shl rax, 6	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003efa	    0x4883a0000000	     and qword [rax], 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003f02	      0xe9a3000000	                           jmp 0x4003faa	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4003f07	          0xf6c202	                              test dl, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4003f0a	            0x7451	                            je 0x4003f5d	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4003f0c	          0x4963c4	                        movsxd rax, r12d	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4003f0f	        0x48c1e006	                              shl rax, 6	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4003f13	    0x81b800000000	                 cmp dword [rax], 0x201c	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4003f1d	            0x750e	                           jne 0x4003f2d	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4003f1f	    0x488b3d000000	            mov rdi, qword [0x04003f26] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4003f26	      0xe800000000	                          call 0x4003f2b	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4003f2b	            0xeb7d	                           jmp 0x4003faa	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4003f2d	          0x4963c6	                        movsxd rax, r14d	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4003f30	          0x4963d4	                        movsxd rdx, r12d	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4003f33	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4003f38	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4003f40	          0x498907	                    mov qword [r15], rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4003f43	          0x4585ed	                         test r13d, r13d	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4003f46	            0x7562	                           jne 0x4003faa	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4003f48	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4003f4d	          0x4889df	                            mov rdi, rbx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4003f50	      0xe85fd7ffff	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4003f55	          0x498b17	                    mov rdx, qword [r15]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4003f58	          0x488910	                    mov qword [rax], rdx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4003f5b	            0xeb4d	                           jmp 0x4003faa	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4003f5d	          0x4963c6	                        movsxd rax, r14d	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4003f60	          0x4963d4	                        movsxd rdx, r12d	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4003f63	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4003f68	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4003f70	          0x418907	                    mov dword [r15], eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4003f73	        0x48c1e206	                              shl rdx, 6	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f77	    0x81ba00000000	                 cmp dword [rdx], 0x4033	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f81	            0x7510	                           jne 0x4003f93	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f83	      0xe800000000	                          call 0x4003f88	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f88	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f8a	            0x7507	                           jne 0x4003f93	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4003f8c	    0x41c707000000	                      mov dword [r15], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4003f93	          0x4585ed	                         test r13d, r13d	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4003f96	            0x7512	                           jne 0x4003faa	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4003f98	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4003f9d	          0x4889df	                            mov rdi, rbx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4003fa0	      0xe80fd7ffff	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4003fa5	          0x418b17	                    mov edx, dword [r15]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4003fa8	            0x8910	                    mov dword [rax], edx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4003faa	            0x89ee	                            mov esi, ebp	      3821	option.c	FUNCTION_2	IF_1
0x4003fac	          0x4489e7	                           mov edi, r12d	      3821	option.c	FUNCTION_2	IF_1
0x4003faf	      0xe89ec0ffff	                  call sym.insecure_flag	      3821	option.c	FUNCTION_2	IF_1
0x4003fb4	    0x488120ffff7f	     and qword [rax], 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x4003fbb	    0x8b1500000000	            mov edx, dword [0x04003fc1] 	      3826	option.c	FUNCTION_2	CALL_8
0x4003fc1	            0x89ee	                            mov esi, ebp	      3826	option.c	FUNCTION_2	CALL_8
0x4003fc3	          0x4489e7	                           mov edi, r12d	      3826	option.c	FUNCTION_2	CALL_8
0x4003fc6	      0xe8b0c1ffff	        call sym.set_option_scriptID_idx	      3826	option.c	FUNCTION_2	CALL_8
0x4003fcb	        0x4883c408	                              add rsp, 8	      3828	option.c	FUNCTION_2
0x4003fcf	              0x5b	                                 pop rbx	      3828	option.c	FUNCTION_2
0x4003fd0	              0x5d	                                 pop rbp	      3828	option.c	FUNCTION_2
0x4003fd1	            0x415c	                                 pop r12	      3828	option.c	FUNCTION_2
0x4003fd3	            0x415d	                                 pop r13	      3828	option.c	FUNCTION_2
0x4003fd5	            0x415e	                                 pop r14	      3828	option.c	FUNCTION_2
0x4003fd7	            0x415f	                                 pop r15	      3828	option.c	FUNCTION_2
0x4003fd9	              0xc3	                                     ret	      3828	option.c	FUNCTION_2
get_bkc_value	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	4
0x400e0d6	    0x8b8700140000	          mov eax, dword [rdi + 0x1400] 	     12687	option.c	FUNCTION_117
0x400e0dc	            0x85c0	                           test eax, eax	     12687	option.c	FUNCTION_117
0x400e0de	     0xf4405000000	           cmove eax, dword [0x0400e0e5]	     12687	option.c	FUNCTION_117
0x400e0e5	              0xc3	                                     ret	     12688	option.c	FUNCTION_117
set_term_defaults	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,3:DO,0:CALL,2:WHILE,0	30
0x4004c18	    0x48833d000000	               cmp qword [0x04004c20], 0	     10350	option.c	FUNCTION_72	FOR_1
0x4004c20	            0x745a	                            je 0x4004c7c	     10350	option.c	FUNCTION_72	FOR_1
0x4004c22	              0x53	                                push rbx	     10347	option.c	FUNCTION_72
0x4004c23	      0xbb00000000	                              mov ebx, 0	     10350	option.c	FUNCTION_72	FOR_1
0x4004c28	          0x4889df	                            mov rdi, rbx	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c2b	      0xe8c1b5ffff	                   call sym.istermoption	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c30	            0x85c0	                           test eax, eax	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c32	            0x743d	                            je 0x4004c71	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c34	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c38	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c3c	          0x483b38	                    cmp rdi, qword [rax]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c3f	            0x7430	                            je 0x4004c71	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4004c41	        0xf6431080	           test byte [rbx + 0x10], 0x80 	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4004c45	            0x740d	                            je 0x4004c54	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4004c47	      0xe800000000	                          call 0x4004c4c	     10356	option.c	FUNCTION_72	FOR_1	IF_1	IF_2	CALL_2
0x4004c4c	    0x488163107fff	and qword [rbx + 0x10], 0xffffffffffffff7f	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4004c54	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x4004c58	          0x488b00	                    mov rax, qword [rax]	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x4004c5b	        0x48894328	             mov qword [rbx + 0x28], rax	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x4004c5f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c63	            0xa808	                              test al, 8	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c65	            0x740a	                            je 0x4004c71	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c67	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c6b	             0xc80	                             or al, 0x80	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c6d	        0x48894310	             mov qword [rbx + 0x10], rax	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4004c71	        0x4883c340	                           add rbx, 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x4004c75	        0x48833b00	                      cmp qword [rbx], 0	     10350	option.c	FUNCTION_72	FOR_1
0x4004c79	            0x75ad	                           jne 0x4004c28	     10350	option.c	FUNCTION_72	FOR_1
0x4004c7b	              0x5b	                                 pop rbx	     10367	option.c	FUNCTION_72
0x4004c7c	            0xf3c3	                                     ret	     10367	option.c	FUNCTION_72
langmap_adjust_mb	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,2:DO,0:CALL,0:WHILE,1	45
0x4009bb8	    0x4c8b15000000	            mov r10, qword [0x04009bbf] 	     11895	option.c	FUNCTION_94
0x4009bbf	    0x8b0d00000000	            mov ecx, dword [0x04009bc5] 	     11897	option.c	FUNCTION_94
0x4009bc5	      0xb800000000	                              mov eax, 0	     11896	option.c	FUNCTION_94
0x4009bca	            0xeb37	                           jmp 0x4009c03	     11899	option.c	FUNCTION_94	WHILE_1
0x4009bcc	          0x8d1430	                    lea edx, [rax + rsi]	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bcf	            0x89d1	                            mov ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bd1	          0xc1e91f	                           shr ecx, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bd4	             0x1ca	                            add edx, ecx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bd6	            0xd1fa	                              sar edx, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bd8	          0x4189d1	                            mov r9d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bdb	          0x4863ca	                         movsxd rcx, edx	     11902	option.c	FUNCTION_94	WHILE_1
0x4009bde	        0x4d8d04ca	                   lea r8, [r10 + rcx*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x4009be2	          0x418b08	                     mov ecx, dword [r8]	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009be5	            0x29f9	                            sub ecx, edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009be7	            0x7505	                           jne 0x4009bee	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009be9	        0x418b4004	                 mov eax, dword [r8 + 4]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009bed	              0xc3	                                     ret	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009bee	            0x85c9	                           test ecx, ecx	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009bf0	            0x780b	                            js 0x4009bfd	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009bf2	            0x89d6	                            mov esi, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009bf4	            0x39f0	                            cmp eax, esi	     11899	option.c	FUNCTION_94	WHILE_1
0x4009bf6	            0x75d4	                           jne 0x4009bcc	     11899	option.c	FUNCTION_94	WHILE_1
0x4009bf8	            0x89f8	                            mov eax, edi	     11911	option.c	FUNCTION_94	ELSE_1
0x4009bfa	              0xc3	                                     ret	     11911	option.c	FUNCTION_94	ELSE_1
0x4009bfb	            0x89ce	                            mov esi, ecx	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009bfd	        0x418d4101	                       lea eax, [r9 + 1]	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009c01	            0x89f1	                            mov ecx, esi	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009c03	            0x39c8	                            cmp eax, ecx	     11899	option.c	FUNCTION_94	WHILE_1
0x4009c05	            0x7427	                            je 0x4009c2e	     11899	option.c	FUNCTION_94	WHILE_1
0x4009c07	          0x8d1408	                    lea edx, [rax + rcx]	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c0a	          0x4189d1	                            mov r9d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c0d	        0x41c1e91f	                           shr r9d, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c11	          0x4101d1	                            add r9d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c14	          0x41d1f9	                              sar r9d, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c17	          0x4489ce	                            mov esi, r9d	     11901	option.c	FUNCTION_94	WHILE_1
0x4009c1a	          0x4963d1	                         movsxd rdx, r9d	     11902	option.c	FUNCTION_94	WHILE_1
0x4009c1d	        0x4d8d04d2	                   lea r8, [r10 + rdx*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x4009c21	          0x418b10	                     mov edx, dword [r8]	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009c24	            0x29fa	                            sub edx, edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009c26	            0x74c1	                            je 0x4009be9	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x4009c28	            0x85d2	                           test edx, edx	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009c2a	            0x79c8	                           jns 0x4009bf4	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009c2c	            0xebcd	                           jmp 0x4009bfb	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x4009c2e	            0x89f8	                            mov eax, edi	     11911	option.c	FUNCTION_94	ELSE_1
0x4009c30	              0xc3	                                     ret	     11912	option.c	FUNCTION_94	ELSE_1
option_was_set	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,2:DO,0:CALL,1:WHILE,0	13
0x4009cfe	        0x4883ec08	                              sub rsp, 8	     12253	option.c	FUNCTION_102
0x4009d02	      0xe81066ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x4009d07	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x4009d09	            0x7816	                            js 0x4009d21	     12257	option.c	FUNCTION_102	IF_1
0x4009d0b	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x4009d0d	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x4009d11	    0x488b80000000	                    mov rax, qword [rax]	     12258	option.c	FUNCTION_102	IF_1
0x4009d18	        0x48c1e808	                              shr rax, 8	     12258	option.c	FUNCTION_102	IF_1
0x4009d1c	          0x83e001	                              and eax, 1	     12258	option.c	FUNCTION_102	IF_1
0x4009d1f	            0xeb05	                           jmp 0x4009d26	     12258	option.c	FUNCTION_102	IF_1
0x4009d21	      0xb800000000	                              mov eax, 0	     12258	option.c	FUNCTION_102	IF_1
0x4009d26	        0x4883c408	                              add rsp, 8	     12262	option.c	FUNCTION_102
0x4009d2a	              0xc3	                                     ret	     12262	option.c	FUNCTION_102
reset_option_was_set	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	9
0x400ac6d	        0x4883ec08	                              sub rsp, 8	     12269	option.c	FUNCTION_103
0x400ac71	      0xe8a156ffff	                     call sym.findoption	     12270	option.c	FUNCTION_103	CALL_1
0x400ac76	            0x85c0	                           test eax, eax	     12272	option.c	FUNCTION_103	IF_1
0x400ac78	            0x7811	                            js 0x400ac8b	     12272	option.c	FUNCTION_103	IF_1
0x400ac7a	            0x4898	                                    cdqe	     12273	option.c	FUNCTION_103	IF_1
0x400ac7c	        0x48c1e006	                              shl rax, 6	     12273	option.c	FUNCTION_103	IF_1
0x400ac80	    0x4881a0000000	     and qword [rax], 0xfffffffffffffeff	     12273	option.c	FUNCTION_103	IF_1
0x400ac8b	        0x4883c408	                              add rsp, 8	     12274	option.c	FUNCTION_103
0x400ac8f	              0xc3	                                     ret	     12274	option.c	FUNCTION_103
vimrc_found	SWITCH,0:functions,0:ELSE,1:FOR,1:IF,6:DO,0:CALL,10:WHILE,0	66
0x400ab79	            0x4155	                                push r13	     12196	option.c	FUNCTION_100
0x400ab7b	            0x4154	                                push r12	     12196	option.c	FUNCTION_100
0x400ab7d	              0x55	                                push rbp	     12196	option.c	FUNCTION_100
0x400ab7e	              0x53	                                push rbx	     12196	option.c	FUNCTION_100
0x400ab7f	        0x4883ec18	                           sub rsp, 0x18	     12196	option.c	FUNCTION_100
0x400ab83	          0x4989fc	                            mov r12, rdi	     12196	option.c	FUNCTION_100
0x400ab86	          0x4989f5	                            mov r13, rsi	     12196	option.c	FUNCTION_100
0x400ab89	    0x64488b042528	                mov rax, qword fs:[0x28]	     12196	option.c	FUNCTION_100
0x400ab92	      0x4889442408	                mov qword [rsp + 8], rax	     12196	option.c	FUNCTION_100
0x400ab97	            0x31c0	                            xor eax, eax	     12196	option.c	FUNCTION_100
0x400ab99	    0xc74424040000	                  mov dword [rsp + 4], 0	     12198	option.c	FUNCTION_100
0x400aba1	      0xbf00000000	                              mov edi, 0	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x400aba6	      0xe800000000	                          call 0x400abab	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x400abab	            0x85c0	                           test eax, eax	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x400abad	            0x754e	                           jne 0x400abfd	     12201	option.c	FUNCTION_100	IF_1	CALL_1
0x400abaf	    0xc70500000000	               mov dword [0x0400abb9], 0	     12203	option.c	FUNCTION_100	IF_1
0x400abb9	      0xbb00000000	                              mov ebx, 0	     12203	option.c	FUNCTION_100	IF_1
0x400abbe	      0xbd00000000	                              mov ebp, 0	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abc3	            0xeb22	                           jmp 0x400abe7	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abc5	    0x48f743100005	         test qword [rbx + 0x10], 0x500 	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abcd	            0x7511	                           jne 0x400abe0	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abcf	      0xba00000000	                              mov edx, 0	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abd4	      0xbe01000000	                              mov esi, 1	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abd9	            0x89ef	                            mov edi, ebp	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abdb	      0xe84792ffff	             call sym.set_option_default	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400abe0	          0x83c501	                              add ebp, 1	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abe3	        0x4883c340	                           add rbx, 0x40	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abe7	          0x4889df	                            mov rdi, rbx	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abea	      0xe80256ffff	                   call sym.istermoption	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abef	            0x85c0	                           test eax, eax	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abf1	            0x74d2	                            je 0x400abc5	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400abf3	      0xe89c87ffff	                 call sym.didset_options	     12207	option.c	FUNCTION_100	IF_1	CALL_4
0x400abf8	      0xe88978ffff	                call sym.didset_options2	     12208	option.c	FUNCTION_100	IF_1	CALL_5
0x400abfd	          0x4d85e4	                           test r12, r12	     12211	option.c	FUNCTION_100	IF_3
0x400ac00	            0x744b	                            je 0x400ac4d	     12211	option.c	FUNCTION_100	IF_3
0x400ac02	      0x488d742404	                      lea rsi, [rsp + 4]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400ac07	          0x4c89ef	                            mov rdi, r13	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400ac0a	      0xe800000000	                          call 0x400ac0f	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400ac0f	          0x4885c0	                           test rax, rax	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400ac12	            0x752a	                           jne 0x400ac3e	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400ac14	      0xbe00000000	                              mov esi, 0	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400ac19	          0x4c89e7	                            mov rdi, r12	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400ac1c	      0xe800000000	                          call 0x400ac21	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400ac21	          0x4889c3	                            mov rbx, rax	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400ac24	          0x4885c0	                           test rax, rax	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400ac27	            0x7424	                            je 0x400ac4d	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400ac29	          0x4889c6	                            mov rsi, rax	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400ac2c	          0x4c89ef	                            mov rdi, r13	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400ac2f	      0xe800000000	                          call 0x400ac34	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400ac34	          0x4889df	                            mov rdi, rbx	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400ac37	      0xe800000000	                          call 0x400ac3c	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400ac3c	            0xeb0f	                           jmp 0x400ac4d	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400ac3e	      0x837c240400	                  cmp dword [rsp + 4], 0	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400ac43	            0x7408	                            je 0x400ac4d	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400ac45	          0x4889c7	                            mov rdi, rax	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400ac48	      0xe800000000	                          call 0x400ac4d	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400ac4d	      0x488b442408	                mov rax, qword [rsp + 8]	     12227	option.c	FUNCTION_100
0x400ac52	    0x644833042528	                xor rax, qword fs:[0x28]	     12227	option.c	FUNCTION_100
0x400ac5b	            0x7405	                            je 0x400ac62	     12227	option.c	FUNCTION_100
0x400ac5d	      0xe800000000	                          call 0x400ac62	     12227	option.c	FUNCTION_100
0x400ac62	        0x4883c418	                           add rsp, 0x18	     12227	option.c	FUNCTION_100
0x400ac66	              0x5b	                                 pop rbx	     12227	option.c	FUNCTION_100
0x400ac67	              0x5d	                                 pop rbp	     12227	option.c	FUNCTION_100
0x400ac68	            0x415c	                                 pop r12	     12227	option.c	FUNCTION_100
0x400ac6a	            0x415d	                                 pop r13	     12227	option.c	FUNCTION_100
0x400ac6c	              0xc3	                                     ret	     12227	option.c	FUNCTION_100
set_chars_option	SWITCH,0:functions,0:ELSE,3:FOR,3:IF,15:DO,0:CALL,6:WHILE,1	155
0x4002002	            0x4157	                                push r15	      7751	option.c	FUNCTION_43
0x4002004	            0x4156	                                push r14	      7751	option.c	FUNCTION_43
0x4002006	            0x4155	                                push r13	      7751	option.c	FUNCTION_43
0x4002008	            0x4154	                                push r12	      7751	option.c	FUNCTION_43
0x400200a	              0x55	                                push rbp	      7751	option.c	FUNCTION_43
0x400200b	              0x53	                                push rbx	      7751	option.c	FUNCTION_43
0x400200c	        0x4883ec48	                           sub rsp, 0x48	      7751	option.c	FUNCTION_43
0x4002010	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      7751	option.c	FUNCTION_43
0x4002015	    0x64488b042528	                mov rax, qword fs:[0x28]	      7751	option.c	FUNCTION_43
0x400201e	      0x4889442438	             mov qword [rsp + 0x38], rax	      7751	option.c	FUNCTION_43
0x4002023	            0x31c0	                            xor eax, eax	      7751	option.c	FUNCTION_43
0x4002025	    0x4881ff000000	                              cmp rdi, 0	      7792	option.c	FUNCTION_43	ELSE_1
0x400202c	      0xb800000000	                              mov eax, 0	      7792	option.c	FUNCTION_43	ELSE_1
0x4002031	      0xba00000000	                              mov edx, 0	      7792	option.c	FUNCTION_43	ELSE_1
0x4002036	        0x480f44c2	                          cmove rax, rdx	      7792	option.c	FUNCTION_43	ELSE_1
0x400203a	          0x4889c6	                            mov rsi, rax	      7792	option.c	FUNCTION_43	ELSE_1
0x400203d	      0x4889442408	                mov qword [rsp + 8], rax	      7792	option.c	FUNCTION_43	ELSE_1
0x4002042	        0x410f94c6	                               sete r14b	      7792	option.c	FUNCTION_43	ELSE_1
0x4002046	        0x450fb6f6	                        movzx r14d, r14b	      7792	option.c	FUNCTION_43	ELSE_1
0x400204a	      0x478d747605	            lea r14d, [r14 + r14*2 + 5] 	      7792	option.c	FUNCTION_43	ELSE_1
0x400204f	      0xb820000000	                           mov eax, 0x20	      7792	option.c	FUNCTION_43	ELSE_1
0x4002054	      0xba00000000	                              mov edx, 0	      7792	option.c	FUNCTION_43	ELSE_1
0x4002059	           0xf44c2	                          cmove eax, edx	      7792	option.c	FUNCTION_43	ELSE_1
0x400205c	        0x89442424	             mov dword [rsp + 0x24], eax	      7792	option.c	FUNCTION_43	ELSE_1
0x4002060	        0x418d46ff	                      lea eax, [r14 - 1]	      7792	option.c	FUNCTION_43	ELSE_1
0x4002064	        0x4883c001	                              add rax, 1	      7792	option.c	FUNCTION_43	ELSE_1
0x4002068	        0x48c1e004	                              shl rax, 4	      7792	option.c	FUNCTION_43	ELSE_1
0x400206c	          0x4801f0	                            add rax, rsi	      7792	option.c	FUNCTION_43	ELSE_1
0x400206f	      0x4889442428	             mov qword [rsp + 0x28], rax	      7792	option.c	FUNCTION_43	ELSE_1
0x4002074	    0xc74424200000	               mov dword [rsp + 0x20], 0	      7754	option.c	FUNCTION_43
0x400207c	    0xc74424140000	               mov dword [rsp + 0x14], 0	      7797	option.c	FUNCTION_43	FOR_1
0x4002084	    0x41bf00000000	                             mov r15d, 0	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x400208a	            0xeb4e	                           jmp 0x40020da	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x400208c	      0x837c241400	               cmp dword [rsp + 0x14], 0	      7799	option.c	FUNCTION_43	FOR_1	IF_2
0x4002091	            0x7e47	                           jle 0x40020da	      7799	option.c	FUNCTION_43	FOR_1	IF_2
0x4002093	          0x4585f6	                         test r14d, r14d	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4002096	            0x7e21	                           jle 0x40020b9	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4002098	      0x488b442408	                mov rax, qword [rsp + 8]	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x400209d	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x40020a1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x40020a6	          0x488b10	                    mov rdx, qword [rax]	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x40020a9	          0x4885d2	                           test rdx, rdx	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x40020ac	            0x7402	                            je 0x40020b0	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x40020ae	            0x8932	                    mov dword [rdx], esi	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x40020b0	        0x4883c010	                           add rax, 0x10	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x40020b4	          0x4839c8	                            cmp rax, rcx	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x40020b7	            0x75ed	                           jne 0x40020a6	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x40020b9	    0x48817c241800	               cmp qword [rsp + 0x18], 0	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x40020c2	            0x750c	                           jne 0x40020d0	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x40020c4	    0xc70500000000	               mov dword [0x040020ce], 0	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x40020ce	            0xeb0a	                           jmp 0x40020da	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x40020d0	    0xc70500000000	           mov dword [0x040020da], 0x2d 	      7809	option.c	FUNCTION_43	FOR_1	IF_2	ELSE_2
0x40020da	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x40020df	          0x4c8b28	                    mov r13, qword [rax]	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x40020e2	      0xe915010000	                           jmp 0x40021fc	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x40020e7	        0x48892c24	                    mov qword [rsp], rbp	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020eb	        0x488b7508	                mov rsi, qword [rbp + 8]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020ef	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020f6	          0x4889f7	                            mov rdi, rsi	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020f9	          0x4489f8	                           mov eax, r15d	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020fc	            0xf2ae	              repne scasb al, byte [rdi]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x40020fe	          0x48f7d1	                                 not rcx	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4002101	        0x488d59ff	                      lea rbx, [rcx - 1]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4002105	          0x4863db	                         movsxd rbx, ebx	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4002108	          0x4889da	                            mov rdx, rbx	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x400210b	          0x4c89ef	                            mov rdi, r13	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x400210e	      0xe800000000	                          call 0x4002113	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4002113	            0x85c0	                           test eax, eax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4002115	     0xf85b0000000	                           jne 0x40021cb	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x400211b	    0x41807c1d003a	              cmp byte [r13 + rbx], 0x3a	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4002121	     0xf85a4000000	                           jne 0x40021cb	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4002127	      0x498d441d01	                lea rax, [r13 + rbx + 1]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x400212c	          0x803800	                       cmp byte [rax], 0	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x400212f	     0xf8496000000	                            je 0x40021cb	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4002135	      0x4889442430	             mov qword [rsp + 0x30], rax	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x400213a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x400213f	      0xe800000000	                          call 0x4002144	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4002144	            0x89c3	                            mov ebx, eax	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4002146	            0x89c7	                            mov edi, eax	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4002148	    0xff1500000000	                 call qword [0x0400214e]	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x400214e	          0x83f801	                              cmp eax, 1	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4002151	            0x7f78	                            jg 0x40021cb	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4002153	        0x488b0424	                    mov rax, qword [rsp]	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4002157	    0x488138000000	                      cmp qword [rax], 0	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x400215e	            0x7525	                           jne 0x4002185	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4002160	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4002165	          0x803800	                       cmp byte [rax], 0	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4002168	            0x7461	                            je 0x40021cb	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x400216a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x400216f	      0xe800000000	                          call 0x4002174	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4002174	        0x89442420	             mov dword [rsp + 0x20], eax	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4002178	            0x89c7	                            mov edi, eax	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x400217a	    0xff1500000000	                 call qword [0x04002180]	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4002180	          0x83f801	                              cmp eax, 1	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4002183	            0x7f46	                            jg 0x40021cb	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4002185	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x400218a	           0xfb600	                   movzx eax, byte [rax]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x400218d	            0x3c2c	                            cmp al, 0x2c	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x400218f	            0x7404	                            je 0x4002195	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4002191	            0x84c0	                             test al, al	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4002193	            0x7536	                           jne 0x40021cb	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4002195	      0x837c241400	               cmp dword [rsp + 0x14], 0	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x400219a	            0x7428	                            je 0x40021c4	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x400219c	        0x488b0424	                    mov rax, qword [rsp]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021a0	          0x488b00	                    mov rax, qword [rax]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021a3	    0x483d00000000	                              cmp rax, 0	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021a9	            0x7512	                           jne 0x40021bd	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021ab	    0x891d00000000	            mov dword [0x040021b1], ebx 	      7847	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021b1	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021b5	    0x890500000000	            mov dword [0x040021bb], eax 	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021bb	            0xeb07	                           jmp 0x40021c4	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x40021bd	          0x4885c0	                           test rax, rax	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x40021c0	            0x7402	                            je 0x40021c4	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x40021c2	            0x8918	                    mov dword [rax], ebx	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x40021c4	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      7854	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x40021c9	            0xeb1e	                           jmp 0x40021e9	      7855	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x40021cb	        0x4183c401	                             add r12d, 1	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x40021cf	        0x4883c510	                           add rbp, 0x10	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x40021d3	          0x4539e6	                          cmp r14d, r12d	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x40021d6	     0xf850bffffff	                           jne 0x40020e7	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x40021dc	      0xb800000000	                              mov eax, 0	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x40021e1	            0xeb53	                           jmp 0x4002236	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x40021e3	    0x41bc00000000	                             mov r12d, 0	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x40021e9	          0x4539e6	                          cmp r14d, r12d	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x40021ec	            0x7443	                            je 0x4002231	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x40021ee	      0x41807d002c	                    cmp byte [r13], 0x2c	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x40021f3	           0xf94c0	                                 sete al	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x40021f6	           0xfb6c0	                           movzx eax, al	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x40021f9	          0x4901c5	                            add r13, rax	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x40021fc	      0x41807d0000	                       cmp byte [r13], 0	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4002201	            0x7415	                            je 0x4002218	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4002203	          0x4585f6	                         test r14d, r14d	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4002206	            0x7edb	                           jle 0x40021e3	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4002208	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x400220d	    0x41bc00000000	                             mov r12d, 0	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4002213	      0xe9cffeffff	                           jmp 0x40020e7	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4002218	      0x8344241401	               add dword [rsp + 0x14], 1	      7797	option.c	FUNCTION_43	FOR_1
0x400221d	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      7797	option.c	FUNCTION_43	FOR_1
0x4002221	          0x83f802	                              cmp eax, 2	      7797	option.c	FUNCTION_43	FOR_1
0x4002224	     0xf8562feffff	                           jne 0x400208c	      7797	option.c	FUNCTION_43	FOR_1
0x400222a	      0xb800000000	                              mov eax, 0	      7867	option.c	FUNCTION_43
0x400222f	            0xeb05	                           jmp 0x4002236	      7867	option.c	FUNCTION_43
0x4002231	      0xb800000000	                              mov eax, 0	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4002236	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      7868	option.c	FUNCTION_43
0x400223b	    0x644833142528	                xor rdx, qword fs:[0x28]	      7868	option.c	FUNCTION_43
0x4002244	            0x7405	                            je 0x400224b	      7868	option.c	FUNCTION_43
0x4002246	      0xe800000000	                          call 0x400224b	      7868	option.c	FUNCTION_43
0x400224b	        0x4883c448	                           add rsp, 0x48	      7868	option.c	FUNCTION_43
0x400224f	              0x5b	                                 pop rbx	      7868	option.c	FUNCTION_43
0x4002250	              0x5d	                                 pop rbp	      7868	option.c	FUNCTION_43
0x4002251	            0x415c	                                 pop r12	      7868	option.c	FUNCTION_43
0x4002253	            0x415d	                                 pop r13	      7868	option.c	FUNCTION_43
0x4002255	            0x415e	                                 pop r14	      7868	option.c	FUNCTION_43
0x4002257	            0x415f	                                 pop r15	      7868	option.c	FUNCTION_43
0x4002259	              0xc3	                                     ret	      7868	option.c	FUNCTION_43
check_colorcolumn	SWITCH,0:functions,0:ELSE,3:FOR,2:IF,12:DO,0:CALL,7:WHILE,0	126
0x4004112	            0x4154	                                push r12	      7680	option.c	FUNCTION_42
0x4004114	              0x55	                                push rbp	      7680	option.c	FUNCTION_42
0x4004115	              0x53	                                push rbx	      7680	option.c	FUNCTION_42
0x4004116	    0x4881ec200400	                          sub rsp, 0x420	      7680	option.c	FUNCTION_42
0x400411d	    0x64488b042528	                mov rax, qword fs:[0x28]	      7680	option.c	FUNCTION_42
0x4004126	    0x488984241804	            mov qword [rsp + 0x418], rax	      7680	option.c	FUNCTION_42
0x400412e	            0x31c0	                            xor eax, eax	      7680	option.c	FUNCTION_42
0x4004130	      0x48837f0800	                  cmp qword [rdi + 8], 0	      7688	option.c	FUNCTION_42	IF_1
0x4004135	     0xf848f010000	                            je 0x40042ca	      7688	option.c	FUNCTION_42	IF_1
0x400413b	          0x4889fd	                            mov rbp, rdi	      7688	option.c	FUNCTION_42	IF_1
0x400413e	    0x488b87780200	           mov rax, qword [rdi + 0x278] 	      7691	option.c	FUNCTION_42	FOR_1
0x4004145	      0x4889442408	                mov qword [rsp + 8], rax	      7691	option.c	FUNCTION_42	FOR_1
0x400414a	      0xbb00000000	                              mov ebx, 0	      7683	option.c	FUNCTION_42
0x400414f	      0xe9a6000000	                           jmp 0x40041fa	      7691	option.c	FUNCTION_42	FOR_1
0x4004154	          0x8d48d5	                   lea ecx, [rax - 0x2b]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4004157	          0xf6c1fd	                           test cl, 0xfd	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x400415a	            0x7550	                           jne 0x40041ac	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x400415c	            0x3c2d	                            cmp al, 0x2d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x400415e	        0x410f95c4	                              setne r12b	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x4004162	        0x450fb6e4	                        movzx r12d, r12b	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x4004166	      0x478d6424ff	               lea r12d, [r12 + r12 - 1]	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x400416b	        0x488d4201	                      lea rax, [rdx + 1]	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x400416f	      0x4889442408	                mov qword [rsp + 8], rax	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x4004174	         0xfb65201	               movzx edx, byte [rdx + 1]	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x4004178	          0x83ea30	                           sub edx, 0x30	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x400417b	          0x83fa09	                              cmp edx, 9	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x400417e	     0xf874d010000	                            ja 0x40042d1	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x4004184	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x4004189	      0xe800000000	                          call 0x400418e	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x400418e	        0x488b5508	                mov rdx, qword [rbp + 8]	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4004192	    0x488b92b81500	          mov rdx, qword [rdx + 0x15b8] 	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4004199	          0x4885d2	                           test rdx, rdx	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x400419c	            0x7434	                            je 0x40041d2	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x400419e	        0x410fafc4	                          imul eax, r12d	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x40041a2	             0x1c2	                            add edx, eax	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x40041a4	            0x89d0	                            mov eax, edx	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x40041a6	            0x85d2	                           test edx, edx	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x40041a8	            0x791b	                           jns 0x40041c5	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x40041aa	            0xeb26	                           jmp 0x40041d2	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x40041ac	           0xfb6c0	                           movzx eax, al	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x40041af	          0x83e830	                           sub eax, 0x30	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x40041b2	          0x83f809	                              cmp eax, 9	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x40041b5	     0xf871d010000	                            ja 0x40042d8	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x40041bb	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x40041c0	      0xe800000000	                          call 0x40041c5	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x40041c5	          0x4863d3	                         movsxd rdx, ebx	      7711	option.c	FUNCTION_42	FOR_1
0x40041c8	          0x83e801	                              sub eax, 1	      7711	option.c	FUNCTION_42	FOR_1
0x40041cb	        0x89449410	     mov dword [rsp + rdx*4 + 0x10], eax	      7711	option.c	FUNCTION_42	FOR_1
0x40041cf	          0x8d5b01	                      lea ebx, [rbx + 1]	      7711	option.c	FUNCTION_42	FOR_1
0x40041d2	      0x488b442408	                mov rax, qword [rsp + 8]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40041d7	           0xfb610	                   movzx edx, byte [rax]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40041da	            0x84d2	                             test dl, dl	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40041dc	            0x7434	                            je 0x4004212	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40041de	          0x80fa2c	                            cmp dl, 0x2c	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40041e1	     0xf85f8000000	                           jne 0x40042df	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40041e7	        0x488d5001	                      lea rdx, [rax + 1]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40041eb	      0x4889542408	                mov qword [rsp + 8], rdx	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40041f0	        0x80780100	                   cmp byte [rax + 1], 0	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40041f4	     0xf84ec000000	                            je 0x40042e6	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40041fa	      0x488b542408	                mov rdx, qword [rsp + 8]	      7691	option.c	FUNCTION_42	FOR_1
0x40041ff	           0xfb602	                   movzx eax, byte [rdx]	      7691	option.c	FUNCTION_42	FOR_1
0x4004202	    0x81fbfe000000	                           cmp ebx, 0xfe	      7691	option.c	FUNCTION_42	FOR_1
0x4004208	            0x7f08	                            jg 0x4004212	      7691	option.c	FUNCTION_42	FOR_1
0x400420a	            0x84c0	                             test al, al	      7691	option.c	FUNCTION_42	FOR_1
0x400420c	     0xf8542ffffff	                           jne 0x4004154	      7691	option.c	FUNCTION_42	FOR_1
0x4004212	    0x488bbd380500	           mov rdi, qword [rbp + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x4004219	      0xe800000000	                          call 0x400421e	      7721	option.c	FUNCTION_42	CALL_5
0x400421e	            0x85db	                           test ebx, ebx	      7722	option.c	FUNCTION_42	IF_10
0x4004220	            0x7515	                           jne 0x4004237	      7722	option.c	FUNCTION_42	IF_10
0x4004222	    0x48c785380500	              mov qword [rbp + 0x538], 0	      7723	option.c	FUNCTION_42	IF_10
0x400422d	      0xb800000000	                              mov eax, 0	      7741	option.c	FUNCTION_42
0x4004232	      0xe9b4000000	                           jmp 0x40042eb	      7741	option.c	FUNCTION_42
0x4004237	    0x8d3c9d040000	                    lea edi, [rbx*4 + 4]	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x400423e	      0xe800000000	                          call 0x4004243	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4004243	    0x488985380500	           mov qword [rbp + 0x538], rax 	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x400424a	          0x4885c0	                           test rax, rax	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x400424d	     0xf8498000000	                            je 0x40042eb	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x4004253	          0x4863f3	                         movsxd rsi, ebx	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004256	      0xb900000000	                              mov ecx, 0	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x400425b	      0xba04000000	                              mov edx, 4	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004260	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004265	      0xe800000000	                          call 0x400426a	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x400426a	            0x85db	                           test ebx, ebx	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x400426c	            0x7e40	                           jle 0x40042ae	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x400426e	      0xba00000000	                              mov edx, 0	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4004273	      0xb800000000	                              mov eax, 0	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4004278	            0x85c0	                           test eax, eax	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400427a	            0x7414	                            je 0x4004290	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400427c	          0x4863c8	                         movsxd rcx, eax	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400427f	    0x488bb5380500	           mov rsi, qword [rbp + 0x538] 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004286	        0x8b7c9410	    mov edi, dword [rsp + rdx*4 + 0x10] 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400428a	        0x397c8efc	       cmp dword [rsi + rcx*4 - 4], edi 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400428e	            0x7414	                            je 0x40042a4	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004290	        0x8b7c9410	    mov edi, dword [rsp + rdx*4 + 0x10] 	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004294	          0x4863f0	                         movsxd rsi, eax	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004297	    0x488b8d380500	           mov rcx, qword [rbp + 0x538] 	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400429e	          0x893cb1	            mov dword [rcx + rsi*4], edi	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40042a1	          0x8d4001	                      lea eax, [rax + 1]	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40042a4	        0x4883c201	                              add rdx, 1	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x40042a8	            0x39d3	                            cmp ebx, edx	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x40042aa	            0x7fcc	                            jg 0x4004278	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x40042ac	            0xeb05	                           jmp 0x40042b3	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x40042ae	      0xb800000000	                              mov eax, 0	      7686	option.c	FUNCTION_42
0x40042b3	            0x4898	                                    cdqe	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x40042b5	    0x488b95380500	           mov rdx, qword [rbp + 0x538] 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x40042bc	    0xc70482ffffff	    mov dword [rdx + rax*4], 0xffffffff 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x40042c3	      0xb800000000	                              mov eax, 0	      7741	option.c	FUNCTION_42
0x40042c8	            0xeb21	                           jmp 0x40042eb	      7741	option.c	FUNCTION_42
0x40042ca	      0xb800000000	                              mov eax, 0	      7689	option.c	FUNCTION_42	IF_1
0x40042cf	            0xeb1a	                           jmp 0x40042eb	      7689	option.c	FUNCTION_42	IF_1
0x40042d1	      0xb800000000	                              mov eax, 0	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x40042d6	            0xeb13	                           jmp 0x40042eb	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x40042d8	      0xb800000000	                              mov eax, 0	      7710	option.c	FUNCTION_42	FOR_1	ELSE_2
0x40042dd	            0xeb0c	                           jmp 0x40042eb	      7710	option.c	FUNCTION_42	FOR_1	ELSE_2
0x40042df	      0xb800000000	                              mov eax, 0	      7716	option.c	FUNCTION_42	FOR_1	IF_8
0x40042e4	            0xeb05	                           jmp 0x40042eb	      7716	option.c	FUNCTION_42	FOR_1	IF_8
0x40042e6	      0xb800000000	                              mov eax, 0	      7718	option.c	FUNCTION_42	FOR_1	IF_9
0x40042eb	    0x488bb4241804	           mov rsi, qword [rsp + 0x418] 	      7742	option.c	FUNCTION_42
0x40042f3	    0x644833342528	                xor rsi, qword fs:[0x28]	      7742	option.c	FUNCTION_42
0x40042fc	            0x7405	                            je 0x4004303	      7742	option.c	FUNCTION_42
0x40042fe	      0xe800000000	                          call 0x4004303	      7742	option.c	FUNCTION_42
0x4004303	    0x4881c4200400	                          add rsp, 0x420	      7742	option.c	FUNCTION_42
0x400430a	              0x5b	                                 pop rbx	      7742	option.c	FUNCTION_42
0x400430b	              0x5d	                                 pop rbp	      7742	option.c	FUNCTION_42
0x400430c	            0x415c	                                 pop r12	      7742	option.c	FUNCTION_42
0x400430e	              0xc3	                                     ret	      7742	option.c	FUNCTION_42
unset_global_local_option	SWITCH,1:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,20:WHILE,0	136
0x4004d5c	              0x53	                                push rbx	     10429	option.c	FUNCTION_75
0x4004d5d	          0x4889f3	                            mov rbx, rsi	     10429	option.c	FUNCTION_75
0x4004d60	      0xe8b2b5ffff	                     call sym.findoption	     10434	option.c	FUNCTION_75	CALL_1
0x4004d65	            0x85c0	                           test eax, eax	     10435	option.c	FUNCTION_75	IF_1
0x4004d67	     0xf8896020000	                            js 0x4005003	     10435	option.c	FUNCTION_75	IF_1
0x4004d6d	            0x4898	                                    cdqe	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d6f	        0x48c1e006	                              shl rax, 6	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d73	    0x8b8000000000	                    mov eax, dword [rax]	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d79	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d7e	     0xf84c3010000	                            je 0x4004f47	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d84	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d89	     0xf8797000000	                            ja 0x4004e26	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d8f	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d94	     0xf84fc010000	                            je 0x4004f96	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d9a	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004d9f	            0x773d	                            ja 0x4004dde	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004da1	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004da6	     0xf8434010000	                            je 0x4004ee0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dac	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004db1	            0x7710	                            ja 0x4004dc3	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004db3	      0x3d21300000	                         cmp eax, 0x3021	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004db8	     0xf8410020000	                            je 0x4004fce	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dbe	      0xe940020000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dc3	      0x3d03500000	                         cmp eax, 0x5003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dc8	     0xf8421010000	                            je 0x4004eef	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dce	      0x3d05500000	                         cmp eax, 0x5005	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dd3	     0xf84af010000	                            je 0x4004f88	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dd9	      0xe925020000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dde	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004de3	     0xf846f010000	                            je 0x4004f58	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004de9	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dee	            0x771b	                            ja 0x4004e0b	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004df0	      0x3d07500000	                         cmp eax, 0x5007	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004df5	     0xf84a9010000	                            je 0x4004fa4	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004dfb	      0x3d10500000	                         cmp eax, 0x5010	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e00	     0xf84ba010000	                            je 0x4004fc0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e06	      0xe9f8010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e0b	      0x3d15500000	                         cmp eax, 0x5015	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e10	     0xf8453010000	                            je 0x4004f69	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e16	      0x3d17500000	                         cmp eax, 0x5017	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e1b	     0xf8415010000	                            je 0x4004f36	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e21	      0xe9dd010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e26	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e2b	     0xf84b8010000	                            je 0x4004fe9	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e31	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e36	            0x7735	                            ja 0x4004e6d	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e38	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e3d	     0xf8437010000	                            je 0x4004f7a	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e43	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e48	            0x770c	                            ja 0x4004e56	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e4a	      0x3d1b500000	                         cmp eax, 0x501b	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e4f	            0x745c	                            je 0x4004ead	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e51	      0xe9ad010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e56	      0x3d1f500000	                         cmp eax, 0x501f	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e5b	     0xf8451010000	                            je 0x4004fb2	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e61	      0x3d2e500000	                         cmp eax, 0x502e	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e66	            0x7456	                            je 0x4004ebe	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e68	      0xe996010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e6d	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e72	     0xf8492000000	                            je 0x4004f0a	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e78	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e7d	            0x7717	                            ja 0x4004e96	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e7f	      0x3d31500000	                         cmp eax, 0x5031	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e84	     0xf846d010000	                            je 0x4004ff7	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e8a	      0x3d38500000	                         cmp eax, 0x5038	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e8f	            0x743e	                            je 0x4004ecf	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e91	      0xe96d010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e96	      0x3d48500000	                         cmp eax, 0x5048	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e9b	            0x747e	                            je 0x4004f1b	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004e9d	      0x3d4d500000	                         cmp eax, 0x504d	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004ea2	     0xf8434010000	                            je 0x4004fdc	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004ea8	      0xe956010000	                           jmp 0x4005003	     10439	option.c	FUNCTION_75	SWITCH_1
0x4004ead	    0x488dbb081600	                 lea rdi, [rbx + 0x1608]	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x4004eb4	      0xe800000000	                          call 0x4004eb9	     10443	option.c	FUNCTION_75	SWITCH_1	CALL_2
0x4004eb9	      0xe945010000	                           jmp 0x4005003	     10444	option.c	FUNCTION_75	SWITCH_1
0x4004ebe	    0x488dbb181500	                 lea rdi, [rbx + 0x1518]	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x4004ec5	      0xe800000000	                          call 0x4004eca	     10446	option.c	FUNCTION_75	SWITCH_1	CALL_3
0x4004eca	      0xe934010000	                           jmp 0x4005003	     10447	option.c	FUNCTION_75	SWITCH_1
0x4004ecf	    0x488dbb101600	                 lea rdi, [rbx + 0x1610]	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x4004ed6	      0xe800000000	                          call 0x4004edb	     10449	option.c	FUNCTION_75	SWITCH_1	CALL_4
0x4004edb	      0xe923010000	                           jmp 0x4005003	     10450	option.c	FUNCTION_75	SWITCH_1
0x4004ee0	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     10452	option.c	FUNCTION_75	SWITCH_1
0x4004eea	      0xe914010000	                           jmp 0x4005003	     10453	option.c	FUNCTION_75	SWITCH_1
0x4004eef	    0x488dbbf81300	                 lea rdi, [rbx + 0x13f8]	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x4004ef6	      0xe800000000	                          call 0x4004efb	     10455	option.c	FUNCTION_75	SWITCH_1	CALL_5
0x4004efb	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     10456	option.c	FUNCTION_75	SWITCH_1
0x4004f05	      0xe9f9000000	                           jmp 0x4005003	     10457	option.c	FUNCTION_75	SWITCH_1
0x4004f0a	    0x488dbb201600	                 lea rdi, [rbx + 0x1620]	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x4004f11	      0xe800000000	                          call 0x4004f16	     10459	option.c	FUNCTION_75	SWITCH_1	CALL_6
0x4004f16	      0xe9e8000000	                           jmp 0x4005003	     10460	option.c	FUNCTION_75	SWITCH_1
0x4004f1b	    0x488dbb281600	                 lea rdi, [rbx + 0x1628]	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x4004f22	      0xe800000000	                          call 0x4004f27	     10462	option.c	FUNCTION_75	SWITCH_1	CALL_7
0x4004f27	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     10463	option.c	FUNCTION_75	SWITCH_1
0x4004f31	      0xe9cd000000	                           jmp 0x4005003	     10464	option.c	FUNCTION_75	SWITCH_1
0x4004f36	    0x488dbbc01400	                 lea rdi, [rbx + 0x14c0]	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x4004f3d	      0xe800000000	                          call 0x4004f42	     10467	option.c	FUNCTION_75	SWITCH_1	CALL_8
0x4004f42	      0xe9bc000000	                           jmp 0x4005003	     10468	option.c	FUNCTION_75	SWITCH_1
0x4004f47	    0x488dbbc81400	                 lea rdi, [rbx + 0x14c8]	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x4004f4e	      0xe800000000	                          call 0x4004f53	     10470	option.c	FUNCTION_75	SWITCH_1	CALL_9
0x4004f53	      0xe9ab000000	                           jmp 0x4005003	     10471	option.c	FUNCTION_75	SWITCH_1
0x4004f58	    0x488dbb381600	                 lea rdi, [rbx + 0x1638]	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x4004f5f	      0xe800000000	                          call 0x4004f64	     10475	option.c	FUNCTION_75	SWITCH_1	CALL_10
0x4004f64	      0xe99a000000	                           jmp 0x4005003	     10476	option.c	FUNCTION_75	SWITCH_1
0x4004f69	    0x488dbb401600	                 lea rdi, [rbx + 0x1640]	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x4004f70	      0xe800000000	                          call 0x4004f75	     10478	option.c	FUNCTION_75	SWITCH_1	CALL_11
0x4004f75	      0xe989000000	                           jmp 0x4005003	     10479	option.c	FUNCTION_75	SWITCH_1
0x4004f7a	    0x488dbbf81400	                 lea rdi, [rbx + 0x14f8]	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x4004f81	      0xe800000000	                          call 0x4004f86	     10482	option.c	FUNCTION_75	SWITCH_1	CALL_12
0x4004f86	            0xeb7b	                           jmp 0x4005003	     10483	option.c	FUNCTION_75	SWITCH_1
0x4004f88	    0x488dbb001600	                 lea rdi, [rbx + 0x1600]	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x4004f8f	      0xe800000000	                          call 0x4004f94	     10486	option.c	FUNCTION_75	SWITCH_1	CALL_13
0x4004f94	            0xeb6d	                           jmp 0x4005003	     10487	option.c	FUNCTION_75	SWITCH_1
0x4004f96	    0x488dbbf01500	                 lea rdi, [rbx + 0x15f0]	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x4004f9d	      0xe800000000	                          call 0x4004fa2	     10489	option.c	FUNCTION_75	SWITCH_1	CALL_14
0x4004fa2	            0xeb5f	                           jmp 0x4005003	     10490	option.c	FUNCTION_75	SWITCH_1
0x4004fa4	    0x488dbbf81500	                 lea rdi, [rbx + 0x15f8]	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x4004fab	      0xe800000000	                          call 0x4004fb0	     10492	option.c	FUNCTION_75	SWITCH_1	CALL_15
0x4004fb0	            0xeb51	                           jmp 0x4005003	     10493	option.c	FUNCTION_75	SWITCH_1
0x4004fb2	    0x488dbb381700	                 lea rdi, [rbx + 0x1738]	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x4004fb9	      0xe800000000	                          call 0x4004fbe	     10497	option.c	FUNCTION_75	SWITCH_1	CALL_16
0x4004fbe	            0xeb43	                           jmp 0x4005003	     10498	option.c	FUNCTION_75	SWITCH_1
0x4004fc0	    0x488dbb481700	                 lea rdi, [rbx + 0x1748]	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x4004fc7	      0xe800000000	                          call 0x4004fcc	     10502	option.c	FUNCTION_75	SWITCH_1	CALL_17
0x4004fcc	            0xeb35	                           jmp 0x4005003	     10503	option.c	FUNCTION_75	SWITCH_1
0x4004fce	    0x488dbb800200	                  lea rdi, [rbx + 0x280]	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x4004fd5	      0xe800000000	                          call 0x4004fda	     10507	option.c	FUNCTION_75	SWITCH_1	CALL_18
0x4004fda	            0xeb27	                           jmp 0x4005003	     10508	option.c	FUNCTION_75	SWITCH_1
0x4004fdc	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     10511	option.c	FUNCTION_75	SWITCH_1
0x4004fe7	            0xeb1a	                           jmp 0x4005003	     10512	option.c	FUNCTION_75	SWITCH_1
0x4004fe9	    0x488dbb581600	                 lea rdi, [rbx + 0x1658]	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x4004ff0	      0xe800000000	                          call 0x4004ff5	     10515	option.c	FUNCTION_75	SWITCH_1	CALL_19
0x4004ff5	            0xeb0c	                           jmp 0x4005003	     10516	option.c	FUNCTION_75	SWITCH_1
0x4004ff7	    0x488dbb281500	                 lea rdi, [rbx + 0x1528]	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x4004ffe	      0xe800000000	                          call 0x4005003	     10520	option.c	FUNCTION_75	SWITCH_1	CALL_20
0x4005003	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4005004	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
set_init_1	SWITCH,0:functions,0:ELSE,9:FOR,3:IF,41:DO,0:CALL,86:WHILE,0	330
0x400d891	            0x4157	                                push r15	      3329	option.c	FUNCTION_1
0x400d893	            0x4156	                                push r14	      3329	option.c	FUNCTION_1
0x400d895	            0x4155	                                push r13	      3329	option.c	FUNCTION_1
0x400d897	            0x4154	                                push r12	      3329	option.c	FUNCTION_1
0x400d899	              0x55	                                push rbp	      3329	option.c	FUNCTION_1
0x400d89a	              0x53	                                push rbx	      3329	option.c	FUNCTION_1
0x400d89b	        0x4883ec38	                           sub rsp, 0x38	      3329	option.c	FUNCTION_1
0x400d89f	          0x4189ff	                           mov r15d, edi	      3329	option.c	FUNCTION_1
0x400d8a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3329	option.c	FUNCTION_1
0x400d8ab	      0x4889442428	             mov qword [rsp + 0x28], rax	      3329	option.c	FUNCTION_1
0x400d8b0	            0x31c0	                            xor eax, eax	      3329	option.c	FUNCTION_1
0x400d8b2	      0xe82c2affff	                   call sym.langmap_init	      3335	option.c	FUNCTION_1	CALL_1
0x400d8b7	    0xc70500000000	               mov dword [0x0400d8c1], 1	      3339	option.c	FUNCTION_1
0x400d8c1	      0xbf00000000	                              mov edi, 0	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400d8c6	      0xe800000000	                          call 0x400d8cb	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400d8cb	          0x4885c0	                           test rax, rax	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400d8ce	            0x741e	                            je 0x400d8ee	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400d8d0	      0xbe00000000	                              mov esi, 0	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x400d8d5	      0xbf00000000	                              mov edi, 0	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x400d8da	      0xe800000000	                          call 0x400d8df	      3344	option.c	FUNCTION_1	IF_1	CALL_3
0x400d8df	      0xbe00000000	                              mov esi, 0	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x400d8e4	      0xbf00000000	                              mov edi, 0	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x400d8e9	      0xe800000000	                          call 0x400d8ee	      3345	option.c	FUNCTION_1	IF_1	CALL_4
0x400d8ee	      0xbf00000000	                              mov edi, 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d8f3	      0xe800000000	                          call 0x400d8f8	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d8f8	          0x4885c0	                           test rax, rax	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d8fb	            0x7417	                            je 0x400d914	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d8fd	          0x803800	                       cmp byte [rax], 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d900	            0x7412	                            je 0x400d914	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400d902	      0xba01000000	                              mov edx, 1	      3360	option.c	FUNCTION_1	CALL_8
0x400d907	          0x4889c6	                            mov rsi, rax	      3360	option.c	FUNCTION_1	CALL_8
0x400d90a	      0xbf00000000	                              mov edi, 0	      3360	option.c	FUNCTION_1	CALL_8
0x400d90f	      0xe8be2cffff	         call sym.set_string_default_esc	      3360	option.c	FUNCTION_1	CALL_8
0x400d914	      0xba64000000	                           mov edx, 0x64	      3377	option.c	FUNCTION_1	CALL_9
0x400d919	      0xbe01000000	                              mov esi, 1	      3377	option.c	FUNCTION_1	CALL_9
0x400d91e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3377	option.c	FUNCTION_1	CALL_9
0x400d923	      0xe800000000	                          call 0x400d928	      3377	option.c	FUNCTION_1	CALL_9
0x400d928	      0xbb00000000	                              mov ebx, 0	      3377	option.c	FUNCTION_1	CALL_9
0x400d92d	    0x41bd00000000	                             mov r13d, 0	      3377	option.c	FUNCTION_1	CALL_9
0x400d933	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d93a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3380	option.c	FUNCTION_1	FOR_1
0x400d942	          0x488b3b	                    mov rdi, qword [rbx]	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400d945	      0xbd00000000	                              mov ebp, 0	      3386	option.c	FUNCTION_1	FOR_1
0x400d94a	          0x803f00	                       cmp byte [rdi], 0	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400d94d	            0x741f	                            je 0x400d96e	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400d94f	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400d954	      0xe800000000	                          call 0x400d959	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400d959	          0x4889c5	                            mov rbp, rax	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400d95c	          0x4885c0	                           test rax, rax	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400d95f	     0xf848a000000	                            je 0x400d9ef	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400d965	          0x803800	                       cmp byte [rax], 0	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400d968	     0xf8481000000	                            je 0x400d9ef	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400d96e	          0x4c89f1	                            mov rcx, r14	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d971	          0x4889ef	                            mov rdi, rbp	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d974	      0xb800000000	                              mov eax, 0	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d979	            0xf2ae	              repne scasb al, byte [rdi]	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d97b	          0x48f7d1	                                 not rcx	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d97e	        0x448d6102	                     lea r12d, [rcx + 2]	      3394	option.c	FUNCTION_1	FOR_1	IF_4	CALL_11
0x400d982	          0x4489e6	                           mov esi, r12d	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400d985	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400d98a	      0xe800000000	                          call 0x400d98f	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400d98f	          0x83f801	                              cmp eax, 1	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400d992	            0x755b	                           jne 0x400d9ef	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400d994	      0x837c241000	               cmp dword [rsp + 0x10], 0	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400d999	            0x7e1c	                           jle 0x400d9b7	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400d99b	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x400d9a0	          0x4c89f1	                            mov rcx, r14	       148	string3.h	FUNCTION_147	CALL_3
0x400d9a3	          0x4889d7	                            mov rdi, rdx	       148	string3.h	FUNCTION_147	CALL_3
0x400d9a6	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400d9ab	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_147	CALL_3
0x400d9ad	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_147	CALL_3
0x400d9b0	    0x66c7440aff2c	         mov word [rdx + rcx - 1], 0x2c 	       148	string3.h	FUNCTION_147	CALL_3
0x400d9b7	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_147	CALL_3
0x400d9ba	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       148	string3.h	FUNCTION_147	CALL_3
0x400d9bf	      0xe800000000	                          call 0x400d9c4	       148	string3.h	FUNCTION_147	CALL_3
0x400d9c4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x400d9c9	      0xe800000000	                          call 0x400d9ce	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x400d9ce	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x400d9d3	          0x4c89f1	                            mov rcx, r14	       148	string3.h	FUNCTION_147	CALL_3
0x400d9d6	          0x4889d7	                            mov rdi, rdx	       148	string3.h	FUNCTION_147	CALL_3
0x400d9d9	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400d9de	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_147	CALL_3
0x400d9e0	          0x48f7d1	                                 not rcx	       148	string3.h	FUNCTION_147	CALL_3
0x400d9e3	    0x66c7440aff2a	         mov word [rdx + rcx - 1], 0x2a 	       148	string3.h	FUNCTION_147	CALL_3
0x400d9ea	      0x4401642410	            add dword [rsp + 0x10], r12d	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x400d9ef	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400d9f4	            0x7408	                            je 0x400d9fe	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400d9f6	          0x4889ef	                            mov rdi, rbp	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400d9f9	      0xe800000000	                          call 0x400d9fe	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400d9fe	        0x4883c308	                              add rbx, 8	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400da02	          0x4c39eb	                            cmp rbx, r13	      3378	option.c	FUNCTION_1	FOR_1
0x400da05	     0xf852fffffff	                           jne 0x400d93a	      3378	option.c	FUNCTION_1	FOR_1
0x400da0b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      3408	option.c	FUNCTION_1	IF_8
0x400da10	          0x4885f6	                           test rsi, rsi	      3408	option.c	FUNCTION_1	IF_8
0x400da13	            0x7414	                            je 0x400da29	      3408	option.c	FUNCTION_1	IF_8
0x400da15	      0xbf00000000	                              mov edi, 0	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x400da1a	      0xe800000000	                          call 0x400da1f	      3410	option.c	FUNCTION_1	IF_8	CALL_18
0x400da1f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x400da24	      0xe800000000	                          call 0x400da29	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x400da29	      0xbf00000000	                              mov edi, 0	      3419	option.c	FUNCTION_1	CALL_20
0x400da2e	      0xe8e428ffff	                     call sym.findoption	      3419	option.c	FUNCTION_1	CALL_20
0x400da33	            0x89c3	                            mov ebx, eax	      3419	option.c	FUNCTION_1	CALL_20
0x400da35	            0x85c0	                           test eax, eax	      3420	option.c	FUNCTION_1	IF_9
0x400da37	            0x7839	                            js 0x400da72	      3420	option.c	FUNCTION_1	IF_9
0x400da39	      0xbf00000000	                              mov edi, 0	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x400da3e	      0xe800000000	                          call 0x400da43	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x400da43	          0x48d1e8	                              shr rax, 1	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400da46	          0x4889c5	                            mov rbp, rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400da49	          0x4863db	                         movsxd rbx, ebx	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400da4c	        0x48c1e306	                              shl rbx, 6	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400da50	    0x488983000000	                    mov qword [rbx], rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400da57	      0xbf00000000	                              mov edi, 0	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x400da5c	      0xe8b628ffff	                     call sym.findoption	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x400da61	            0x85c0	                           test eax, eax	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x400da63	            0x780d	                            js 0x400da72	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x400da65	            0x4898	                                    cdqe	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400da67	        0x48c1e006	                              shl rax, 6	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400da6b	    0x4889a8000000	                    mov qword [rax], rbp	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400da72	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3456	option.c	FUNCTION_1
0x400da7a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3459	option.c	FUNCTION_1	CALL_24
0x400da7f	      0xbf00000000	                              mov edi, 0	      3459	option.c	FUNCTION_1	CALL_24
0x400da84	      0xe800000000	                          call 0x400da89	      3459	option.c	FUNCTION_1	CALL_24
0x400da89	          0x4989c6	                            mov r14, rax	      3459	option.c	FUNCTION_1	CALL_24
0x400da8c	          0x4885c0	                           test rax, rax	      3460	option.c	FUNCTION_1	IF_13
0x400da8f	     0xf84e9000000	                            je 0x400db7e	      3460	option.c	FUNCTION_1	IF_13
0x400da95	      0xb800000000	                              mov eax, 0	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400da9a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daa1	          0x4c89f7	                            mov rdi, r14	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daa4	            0xf2ae	              repne scasb al, byte [rdi]	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daa6	          0x4889c8	                            mov rax, rcx	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daa9	          0x48f7d0	                                 not rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daac	          0x8d3c00	                    lea edi, [rax + rax]	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400daaf	      0xe800000000	                          call 0x400dab4	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400dab4	          0x4989c5	                            mov r13, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400dab7	          0x4885c0	                           test rax, rax	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x400daba	     0xf84af000000	                            je 0x400db6f	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x400dac0	          0xc6002c	                    mov byte [rax], 0x2c	      3465	option.c	FUNCTION_1	IF_13	IF_14
0x400dac3	        0x410fb63e	                   movzx edi, byte [r14]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400dac7	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400daca	            0x7462	                            je 0x400db2e	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400dacc	          0x4c89f3	                            mov rbx, r14	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400dacf	      0xbd01000000	                              mov ebp, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400dad4	    0x41bc00000000	                             mov r12d, 0	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400dada	        0x400fb6ff	                          movzx edi, dil	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400dade	      0xe800000000	                          call 0x400dae3	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400dae3	            0x85c0	                           test eax, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400dae5	            0x740e	                            je 0x400daf5	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400dae7	          0x4863c5	                         movsxd rax, ebp	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400daea	    0x41c64405002c	              mov byte [r13 + rax], 0x2c	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400daf0	          0x8d6d01	                      lea ebp, [rbp + 1]	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400daf3	            0xeb25	                           jmp 0x400db1a	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400daf5	           0xfb603	                   movzx eax, byte [rbx]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400daf8	            0x3c20	                            cmp al, 0x20	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400dafa	            0x7404	                            je 0x400db00	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400dafc	            0x3c2c	                            cmp al, 0x2c	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400dafe	            0x750c	                           jne 0x400db0c	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400db00	          0x4863c5	                         movsxd rax, ebp	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400db03	    0x41c64405005c	              mov byte [r13 + rax], 0x5c	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400db09	          0x8d6d01	                      lea ebp, [rbp + 1]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400db0c	           0xfb613	                   movzx edx, byte [rbx]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400db0f	          0x4863c5	                         movsxd rax, ebp	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400db12	      0x4188540500	                mov byte [r13 + rax], dl	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400db17	          0x8d6d01	                      lea ebp, [rbp + 1]	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400db1a	        0x4183c401	                             add r12d, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db1e	          0x4963dc	                        movsxd rbx, r12d	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db21	          0x4c01f3	                            add rbx, r14	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db24	           0xfb63b	                   movzx edi, byte [rbx]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db27	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db2a	            0x75ae	                           jne 0x400dada	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db2c	            0xeb05	                           jmp 0x400db33	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400db2e	      0xbd01000000	                              mov ebp, 1	      3466	option.c	FUNCTION_1	IF_13	IF_14
0x400db33	          0x4863ed	                         movsxd rbp, ebp	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x400db36	    0x41c6442d0000	                 mov byte [r13 + rbp], 0	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x400db3c	      0xbf00000000	                              mov edi, 0	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x400db41	      0xe8d127ffff	                     call sym.findoption	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x400db46	            0x85c0	                           test eax, eax	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db48	            0x781d	                            js 0x400db67	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db4a	            0x4898	                                    cdqe	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db4c	        0x48c1e006	                              shl rax, 6	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db50	    0x4c89a8000000	                    mov qword [rax], r13	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db57	    0x480500000000	                              add rax, 0	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db5d	    0x488148108000	             or qword [rax + 0x10], 0x80	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db65	            0xeb08	                           jmp 0x400db6f	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400db67	          0x4c89ef	                            mov rdi, r13	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400db6a	      0xe800000000	                          call 0x400db6f	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400db6f	      0x837c241000	               cmp dword [rsp + 0x10], 0	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x400db74	            0x7408	                            je 0x400db7e	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x400db76	          0x4c89f7	                            mov rdi, r14	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400db79	      0xe800000000	                          call 0x400db7e	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400db7e	      0xbe00000000	                              mov esi, 0	      3519	option.c	FUNCTION_1	CALL_32
0x400db83	      0xbf00000000	                              mov edi, 0	      3519	option.c	FUNCTION_1	CALL_32
0x400db88	      0xe800000000	                          call 0x400db8d	      3519	option.c	FUNCTION_1	CALL_32
0x400db8d	      0xbf00000000	                              mov edi, 0	      3537	option.c	FUNCTION_1	CALL_33
0x400db92	      0xe84364ffff	            call sym.set_options_default	      3537	option.c	FUNCTION_1	CALL_33
0x400db97	          0x4585ff	                         test r15d, r15d	      3540	option.c	FUNCTION_1	IF_19
0x400db9a	            0x7454	                            je 0x400dbf0	      3540	option.c	FUNCTION_1	IF_19
0x400db9c	      0xbf00000000	                              mov edi, 0	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x400dba1	      0xe87127ffff	                     call sym.findoption	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x400dba6	            0x85c0	                           test eax, eax	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x400dba8	            0x781c	                            js 0x400dbc6	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x400dbaa	            0x4898	                                    cdqe	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400dbac	        0x48c1e006	                              shl rax, 6	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400dbb0	    0x48c780000000	                      mov qword [rax], 0	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400dbbb	    0x48c705000000	               mov qword [0x0400dbc6], 0	      3546	option.c	FUNCTION_1	IF_19	IF_20
0x400dbc6	      0xbf00000000	                              mov edi, 0	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x400dbcb	      0xe84727ffff	                     call sym.findoption	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x400dbd0	            0x85c0	                           test eax, eax	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x400dbd2	            0x781c	                            js 0x400dbf0	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x400dbd4	            0x4898	                                    cdqe	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400dbd6	        0x48c1e006	                              shl rax, 6	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400dbda	    0x48c780000000	                      mov qword [rax], 0	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400dbe5	    0x48c705000000	               mov qword [0x0400dbf0], 0	      3552	option.c	FUNCTION_1	IF_19	IF_21
0x400dbf0	    0x833d00000000	               cmp dword [0x0400dbf7], 0	      3558	option.c	FUNCTION_1	IF_22
0x400dbf7	            0x7419	                            je 0x400dc12	      3558	option.c	FUNCTION_1	IF_22
0x400dbf9	      0xb900000000	                              mov ecx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400dbfe	      0xba00000000	                              mov edx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400dc03	      0xbe00000000	                              mov esi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400dc08	      0xbf00000000	                              mov edi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400dc0d	      0xe800000000	                          call 0x400dc12	      3559	option.c	FUNCTION_1	CALL_36
0x400dc12	    0x488b3d000000	            mov rdi, qword [0x0400dc19] 	      3562	option.c	FUNCTION_1
0x400dc19	    0xc787a8120000	            mov dword [rdi + 0x12a8], 1 	      3562	option.c	FUNCTION_1
0x400dc23	    0xc78718160000	   mov dword [rdi + 0x1618], 0xffffffff 	      3563	option.c	FUNCTION_1
0x400dc2d	    0x48c787481600	mov qword [rdi + 0x1648], 0xfffffffffffe1dc0 	      3564	option.c	FUNCTION_1
0x400dc38	      0xe800000000	                          call 0x400dc3d	      3565	option.c	FUNCTION_1	CALL_37
0x400dc3d	    0x488b3d000000	            mov rdi, qword [0x0400dc44] 	      3566	option.c	FUNCTION_1	CALL_38
0x400dc44	      0xe800000000	                          call 0x400dc49	      3566	option.c	FUNCTION_1	CALL_38
0x400dc49	      0xe800000000	                          call 0x400dc4e	      3567	option.c	FUNCTION_1	CALL_39
0x400dc4e	      0xe84157ffff	                 call sym.didset_options	      3570	option.c	FUNCTION_1	CALL_40
0x400dc53	      0xe800000000	                          call 0x400dc58	      3575	option.c	FUNCTION_1	CALL_41
0x400dc58	      0xbb00000000	                              mov ebx, 0	      3575	option.c	FUNCTION_1	CALL_41
0x400dc5d	    0x41bd00000000	                             mov r13d, 0	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dc63	            0xeb6f	                           jmp 0x400dcd4	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dc65	        0xf6431210	           test byte [rbx + 0x12], 0x10 	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400dc69	            0x741d	                            je 0x400dc88	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400dc6b	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400dc6f	          0x4885c0	                           test rax, rax	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400dc72	            0x7414	                            je 0x400dc88	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400dc74	      0xba05000000	                              mov edx, 5	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400dc79	          0x488b30	                    mov rsi, qword [rax]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400dc7c	      0xbf00000000	                              mov edi, 0	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400dc81	      0xe800000000	                          call 0x400dc86	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400dc86	            0xeb0d	                           jmp 0x400dc95	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400dc88	      0xbe00000000	                              mov esi, 0	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400dc8d	          0x4489ef	                           mov edi, r13d	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400dc90	      0xe8a142ffff	                  call sym.option_expand	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400dc95	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dc98	            0x7432	                            je 0x400dccc	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dc9a	          0x4889c7	                            mov rdi, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dc9d	      0xe800000000	                          call 0x400dca2	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dca2	          0x4989c4	                            mov r12, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dca5	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dca8	            0x7422	                            je 0x400dccc	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400dcaa	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x400dcae	          0x4c8920	                    mov qword [rax], r12	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x400dcb1	        0xf6451080	           test byte [rbp + 0x10], 0x80 	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400dcb5	            0x7409	                            je 0x400dcc0	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400dcb7	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400dcbb	      0xe800000000	                          call 0x400dcc0	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400dcc0	        0x4c896528	            mov qword [rbp + 0x28], r12 	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x400dcc4	    0x48814d108000	             or qword [rbp + 0x10], 0x80	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400dccc	        0x4183c501	                             add r13d, 1	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dcd0	        0x4883c340	                           add rbx, 0x40	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dcd4	          0x4889dd	                            mov rbp, rbx	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dcd7	          0x4889df	                            mov rdi, rbx	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dcda	      0xe81225ffff	                   call sym.istermoption	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dcdf	            0x85c0	                           test eax, eax	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dce1	            0x7482	                            je 0x400dc65	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400dce3	    0x488b3d000000	            mov rdi, qword [0x0400dcea] 	      3609	option.c	FUNCTION_1	CALL_47
0x400dcea	      0xe800000000	                          call 0x400dcef	      3609	option.c	FUNCTION_1	CALL_47
0x400dcef	      0xbf00000000	                              mov edi, 0	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400dcf4	      0xe800000000	                          call 0x400dcf9	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400dcf9	          0x4885c0	                           test rax, rax	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400dcfc	            0x7419	                            je 0x400dd17	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400dcfe	      0xb900000000	                              mov ecx, 0	      3619	option.c	FUNCTION_1	CALL_49
0x400dd03	      0xba00000000	                              mov edx, 0	      3619	option.c	FUNCTION_1	CALL_49
0x400dd08	      0xbe01000000	                              mov esi, 1	      3619	option.c	FUNCTION_1	CALL_49
0x400dd0d	      0xbf00000000	                              mov edi, 0	      3619	option.c	FUNCTION_1	CALL_49
0x400dd12	      0xe800000000	                          call 0x400dd17	      3619	option.c	FUNCTION_1	CALL_49
0x400dd17	      0xe86a47ffff	                call sym.didset_options2	      3622	option.c	FUNCTION_1	CALL_50
0x400dd1c	      0xe800000000	                          call 0x400dd21	      3662	option.c	FUNCTION_1	CALL_64
0x400dd21	          0x4889c3	                            mov rbx, rax	      3662	option.c	FUNCTION_1	CALL_64
0x400dd24	          0x4885c0	                           test rax, rax	      3663	option.c	FUNCTION_1	IF_32
0x400dd27	     0xf848f000000	                            je 0x400ddbc	      3663	option.c	FUNCTION_1	IF_32
0x400dd2d	    0x488b2d000000	            mov rbp, qword [0x0400dd34] 	      3669	option.c	FUNCTION_1	IF_32
0x400dd34	    0x488905000000	            mov qword [0x0400dd3b], rax 	      3670	option.c	FUNCTION_1	IF_32
0x400dd3b	      0xbf00000000	                              mov edi, 0	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd40	      0xb908000000	                              mov ecx, 8	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd45	          0x4889c6	                            mov rsi, rax	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd48	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd4a	           0xf97c2	                                 seta dl	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd4d	           0xf92c0	                                 setb al	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd50	            0x38c2	                              cmp dl, al	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd52	            0x7519	                           jne 0x400dd6d	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400dd54	      0xbf00000000	                              mov edi, 0	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400dd59	      0xe800000000	                          call 0x400dd5e	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400dd5e	    0x488905000000	            mov qword [0x0400dd65], rax 	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400dd65	          0x4889df	                            mov rdi, rbx	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x400dd68	      0xe800000000	                          call 0x400dd6d	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x400dd6d	      0xe800000000	                          call 0x400dd72	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400dd72	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400dd75	            0x7532	                           jne 0x400dda9	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400dd77	      0xbf00000000	                              mov edi, 0	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400dd7c	      0xe89625ffff	                     call sym.findoption	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400dd81	            0x85c0	                           test eax, eax	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd83	            0x7837	                            js 0x400ddbc	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd85	            0x4898	                                    cdqe	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd87	        0x48c1e006	                              shl rax, 6	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd8b	    0x488b15000000	            mov rdx, qword [0x0400dd92] 	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd92	    0x488990000000	                    mov qword [rax], rdx	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd99	    0x480500000000	                              add rax, 0	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dd9f	    0x488148108000	             or qword [rax + 0x10], 0x80	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dda7	            0xeb13	                           jmp 0x400ddbc	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400dda9	    0x488b3d000000	            mov rdi, qword [0x0400ddb0] 	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x400ddb0	      0xe800000000	                          call 0x400ddb5	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x400ddb5	    0x48892d000000	            mov qword [0x0400ddbc], rbp 	      3744	option.c	FUNCTION_1	IF_32	ELSE_9
0x400ddbc	      0xe800000000	                          call 0x400ddc1	      3751	option.c	FUNCTION_1	CALL_86
0x400ddc1	          0x4889c7	                            mov rdi, rax	      3751	option.c	FUNCTION_1	CALL_86
0x400ddc4	      0xe800000000	                          call 0x400ddc9	      3751	option.c	FUNCTION_1	CALL_86
0x400ddc9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3753	option.c	FUNCTION_1
0x400ddce	    0x644833042528	                xor rax, qword fs:[0x28]	      3753	option.c	FUNCTION_1
0x400ddd7	            0x7405	                            je 0x400ddde	      3753	option.c	FUNCTION_1
0x400ddd9	      0xe800000000	                          call 0x400ddde	      3753	option.c	FUNCTION_1
0x400ddde	        0x4883c438	                           add rsp, 0x38	      3753	option.c	FUNCTION_1
0x400dde2	              0x5b	                                 pop rbx	      3753	option.c	FUNCTION_1
0x400dde3	              0x5d	                                 pop rbp	      3753	option.c	FUNCTION_1
0x400dde4	            0x415c	                                 pop r12	      3753	option.c	FUNCTION_1
0x400dde6	            0x415d	                                 pop r13	      3753	option.c	FUNCTION_1
0x400dde8	            0x415e	                                 pop r14	      3753	option.c	FUNCTION_1
0x400ddea	            0x415f	                                 pop r15	      3753	option.c	FUNCTION_1
0x400ddec	              0xc3	                                     ret	      3753	option.c	FUNCTION_1
check_redraw	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,6:DO,0:CALL,6:WHILE,0	48
0x40027d9	            0x4155	                                push r13	      9306	option.c	FUNCTION_51
0x40027db	            0x4154	                                push r12	      9306	option.c	FUNCTION_51
0x40027dd	              0x55	                                push rbp	      9306	option.c	FUNCTION_51
0x40027de	              0x53	                                push rbx	      9306	option.c	FUNCTION_51
0x40027df	        0x4883ec08	                              sub rsp, 8	      9306	option.c	FUNCTION_51
0x40027e3	          0x4889fb	                            mov rbx, rdi	      9306	option.c	FUNCTION_51
0x40027e6	          0x4989fc	                            mov r12, rdi	      9308	option.c	FUNCTION_51
0x40027e9	    0x4181e4007000	                        and r12d, 0x7000	      9308	option.c	FUNCTION_51
0x40027f0	          0x4989fd	                            mov r13, rdi	      9309	option.c	FUNCTION_51
0x40027f3	    0x4181e5006000	                        and r13d, 0x6000	      9309	option.c	FUNCTION_51
0x40027fa	    0x4981fc007000	                         cmp r12, 0x7000	      9309	option.c	FUNCTION_51
0x4002801	        0x400f94c5	                                sete bpl	      9309	option.c	FUNCTION_51
0x4002805	    0x4981fd006000	                         cmp r13, 0x6000	      9309	option.c	FUNCTION_51
0x400280c	           0xf94c0	                                 sete al	      9309	option.c	FUNCTION_51
0x400280f	             0x9c5	                             or ebp, eax	      9309	option.c	FUNCTION_51
0x4002811	          0xf6c710	                           test bh, 0x10	      9311	option.c	FUNCTION_51	IF_1
0x4002814	            0x7505	                           jne 0x400281b	      9311	option.c	FUNCTION_51	IF_1
0x4002816	          0x4084ed	                           test bpl, bpl	      9311	option.c	FUNCTION_51	IF_1
0x4002819	            0x7405	                            je 0x4002820	      9311	option.c	FUNCTION_51	IF_1
0x400281b	      0xe800000000	                          call 0x4002820	      9312	option.c	FUNCTION_51	CALL_1
0x4002820	          0x4d85ed	                           test r13, r13	      9314	option.c	FUNCTION_51	IF_2
0x4002823	            0x7505	                           jne 0x400282a	      9314	option.c	FUNCTION_51	IF_2
0x4002825	          0x4084ed	                           test bpl, bpl	      9314	option.c	FUNCTION_51	IF_2
0x4002828	            0x7405	                            je 0x400282f	      9314	option.c	FUNCTION_51	IF_2
0x400282a	      0xe800000000	                          call 0x400282f	      9315	option.c	FUNCTION_51	CALL_2
0x400282f	          0xf6c740	                           test bh, 0x40	      9316	option.c	FUNCTION_51	IF_3
0x4002832	            0x740a	                            je 0x400283e	      9316	option.c	FUNCTION_51	IF_3
0x4002834	      0xbf28000000	                           mov edi, 0x28	      9317	option.c	FUNCTION_51	CALL_3
0x4002839	      0xe800000000	                          call 0x400283e	      9317	option.c	FUNCTION_51	CALL_3
0x400283e	    0xf7c300000010	                    test ebx, 0x10000000	      9318	option.c	FUNCTION_51	IF_4
0x4002844	            0x740a	                            je 0x4002850	      9318	option.c	FUNCTION_51	IF_4
0x4002846	      0xbf28000000	                           mov edi, 0x28	      9319	option.c	FUNCTION_51	CALL_4
0x400284b	      0xe800000000	                          call 0x4002850	      9319	option.c	FUNCTION_51	CALL_4
0x4002850	    0x4981fc007000	                         cmp r12, 0x7000	      9320	option.c	FUNCTION_51	IF_5
0x4002857	            0x750c	                           jne 0x4002865	      9320	option.c	FUNCTION_51	IF_5
0x4002859	      0xbf32000000	                           mov edi, 0x32	      9321	option.c	FUNCTION_51	CALL_5
0x400285e	      0xe800000000	                          call 0x4002863	      9321	option.c	FUNCTION_51	CALL_5
0x4002863	            0xeb0f	                           jmp 0x4002874	      9321	option.c	FUNCTION_51	CALL_5
0x4002865	          0x4084ed	                           test bpl, bpl	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4002868	            0x740a	                            je 0x4002874	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x400286a	      0xbf28000000	                           mov edi, 0x28	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400286f	      0xe800000000	                          call 0x4002874	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x4002874	        0x4883c408	                              add rsp, 8	      9324	option.c	FUNCTION_51
0x4002878	              0x5b	                                 pop rbx	      9324	option.c	FUNCTION_51
0x4002879	              0x5d	                                 pop rbp	      9324	option.c	FUNCTION_51
0x400287a	            0x415c	                                 pop r12	      9324	option.c	FUNCTION_51
0x400287c	            0x415d	                                 pop r13	      9324	option.c	FUNCTION_51
0x400287e	              0xc3	                                     ret	      9324	option.c	FUNCTION_51
didset_options2	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,5:WHILE,0	10
0x4002486	        0x4883ec08	                              sub rsp, 8	      5612	option.c	FUNCTION_27
0x400248a	      0xe800000000	                          call 0x400248f	      5614	option.c	FUNCTION_27	CALL_1
0x400248f	      0xe870f7ffff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x4002494	      0xbf00000000	                              mov edi, 0	      5619	option.c	FUNCTION_27	CALL_3
0x4002499	      0xe864fbffff	               call sym.set_chars_option	      5619	option.c	FUNCTION_27	CALL_3
0x400249e	      0xbf00000000	                              mov edi, 0	      5621	option.c	FUNCTION_27	CALL_4
0x40024a3	      0xe85afbffff	               call sym.set_chars_option	      5621	option.c	FUNCTION_27	CALL_4
0x40024a8	      0xe8adfdffff	         call sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x40024ad	        0x4883c408	                              add rsp, 8	      5627	option.c	FUNCTION_27
0x40024b1	              0xc3	                                     ret	      5627	option.c	FUNCTION_27
get_sts_value	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	9
0x400df07	    0x488b15000000	            mov rdx, qword [0x0400df0e] 	     12534	option.c	FUNCTION_114	CALL_1
0x400df0e	    0x488b82781500	          mov rax, qword [rdx + 0x1578] 	     12534	option.c	FUNCTION_114	CALL_1
0x400df15	          0x4885c0	                           test rax, rax	     12534	option.c	FUNCTION_114	CALL_1
0x400df18	            0x7913	                           jns 0x400df2d	     12534	option.c	FUNCTION_114	CALL_1
0x400df1a	    0x488b82681500	          mov rax, qword [rdx + 0x1568] 	     12524	option.c	FUNCTION_113
0x400df21	          0x4885c0	                           test rax, rax	     12524	option.c	FUNCTION_113
0x400df24	            0x7507	                           jne 0x400df2d	     12524	option.c	FUNCTION_113
0x400df26	    0x488b82a81500	          mov rax, qword [rdx + 0x15a8] 	     12524	option.c	FUNCTION_113
0x400df2d	            0xf3c3	                                     ret	     12535	option.c	FUNCTION_114
fill_breakat_flags	SWITCH,0:functions,0:ELSE,0:FOR,2:IF,1:DO,0:CALL,0:WHILE,0	19
0x40002a3	      0xb800000000	                              mov eax, 0	     12309	option.c	FUNCTION_105
0x40002a8	      0xba00000000	                              mov edx, 0	     12309	option.c	FUNCTION_105
0x40002ad	          0xc60000	                       mov byte [rax], 0	     12314	option.c	FUNCTION_105	FOR_1
0x40002b0	        0x4883c001	                              add rax, 1	     12314	option.c	FUNCTION_105	FOR_1
0x40002b4	          0x4839c2	                            cmp rdx, rax	     12313	option.c	FUNCTION_105	FOR_1
0x40002b7	            0x75f4	                           jne 0x40002ad	     12313	option.c	FUNCTION_105	FOR_1
0x40002b9	    0x488b15000000	            mov rdx, qword [0x040002c0] 	     12316	option.c	FUNCTION_105	IF_1
0x40002c0	          0x4885d2	                           test rdx, rdx	     12316	option.c	FUNCTION_105	IF_1
0x40002c3	            0x741c	                            je 0x40002e1	     12316	option.c	FUNCTION_105	IF_1
0x40002c5	           0xfb602	                   movzx eax, byte [rdx]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002c8	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002ca	            0x7415	                            je 0x40002e1	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002cc	           0xfb6c0	                           movzx eax, al	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x40002cf	    0xc68000000000	                       mov byte [rax], 1	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x40002d6	        0x4883c201	                              add rdx, 1	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002da	           0xfb602	                   movzx eax, byte [rdx]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002dd	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002df	            0x75eb	                           jne 0x40002cc	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x40002e1	            0xf3c3	                                     ret	     12317	option.c	FUNCTION_105	IF_1	FOR_2
free_string_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	6
0x4003a40	    0x48393d000000	            cmp qword [0x04003a47], rdi 	      5756	option.c	FUNCTION_30	IF_1
0x4003a47	            0x740d	                            je 0x4003a56	      5756	option.c	FUNCTION_30	IF_1
0x4003a49	        0x4883ec08	                              sub rsp, 8	      5755	option.c	FUNCTION_30
0x4003a4d	      0xe800000000	                          call 0x4003a52	      5757	option.c	FUNCTION_30	CALL_1
0x4003a52	        0x4883c408	                              add rsp, 8	      5758	option.c	FUNCTION_30
0x4003a56	            0xf3c3	                                     ret	      5758	option.c	FUNCTION_30
set_iminsert_global	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	4
0x4005a96	    0x488b05000000	            mov rax, qword [0x04005a9d] 	     11317	option.c	FUNCTION_86
0x4005a9d	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	     11317	option.c	FUNCTION_86
0x4005aa4	    0x488905000000	            mov qword [0x04005aab], rax 	     11317	option.c	FUNCTION_86
0x4005aab	              0xc3	                                     ret	     11317	option.c	FUNCTION_86
illegal_char	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	27
0x40025b7	      0xb800000000	                              mov eax, 0	      5323	option.c	FUNCTION_18	IF_1
0x40025bc	          0x4885ff	                           test rdi, rdi	      5322	option.c	FUNCTION_18	IF_1
0x40025bf	            0x7452	                            je 0x4002613	      5322	option.c	FUNCTION_18	IF_1
0x40025c1	              0x55	                                push rbp	      5321	option.c	FUNCTION_18
0x40025c2	              0x53	                                push rbx	      5321	option.c	FUNCTION_18
0x40025c3	        0x4883ec08	                              sub rsp, 8	      5321	option.c	FUNCTION_18
0x40025c7	          0x4889fa	                            mov rdx, rdi	      5321	option.c	FUNCTION_18
0x40025ca	            0x89f7	                            mov edi, esi	      5321	option.c	FUNCTION_18
0x40025cc	          0x4889d3	                            mov rbx, rdx	      5321	option.c	FUNCTION_18
0x40025cf	      0xe800000000	                          call 0x40025d4	      5325	option.c	FUNCTION_18	CALL_2
0x40025d4	          0x4889c5	                            mov rbp, rax	      5325	option.c	FUNCTION_18	CALL_2
0x40025d7	      0xba05000000	                              mov edx, 5	      5324	option.c	FUNCTION_18	CALL_1
0x40025dc	      0xbe00000000	                              mov esi, 0	      5324	option.c	FUNCTION_18	CALL_1
0x40025e1	      0xbf00000000	                              mov edi, 0	      5324	option.c	FUNCTION_18	CALL_1
0x40025e6	      0xe800000000	                          call 0x40025eb	      5324	option.c	FUNCTION_18	CALL_1
0x40025eb	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_120	CALL_1
0x40025ee	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_120	CALL_1
0x40025f1	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_120	CALL_1
0x40025f8	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x40025fd	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002600	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002605	      0xe800000000	                          call 0x400260a	        33	stdio2.h	FUNCTION_120	CALL_1
0x400260a	          0x4889d8	                            mov rax, rbx	      5326	option.c	FUNCTION_18
0x400260d	        0x4883c408	                              add rsp, 8	      5327	option.c	FUNCTION_18
0x4002611	              0x5b	                                 pop rbx	      5327	option.c	FUNCTION_18
0x4002612	              0x5d	                                 pop rbp	      5327	option.c	FUNCTION_18
0x4002613	            0xf3c3	                                     ret	      5327	option.c	FUNCTION_18
int_cmp	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	3
0x4000176	            0x8b07	                    mov eax, dword [rdi]	      7671	option.c	FUNCTION_41
0x4000178	            0x2b06	                    sub eax, dword [rsi]	      7671	option.c	FUNCTION_41
0x400017a	              0xc3	                                     ret	      7672	option.c	FUNCTION_41
set_bool_option	SWITCH,0:functions,1:ELSE,45:FOR,0:IF,88:DO,0:CALL,87:WHILE,0	765
0x400ad4e	            0x4157	                                push r15	      8130	option.c	FUNCTION_49
0x400ad50	            0x4156	                                push r14	      8130	option.c	FUNCTION_49
0x400ad52	            0x4155	                                push r13	      8130	option.c	FUNCTION_49
0x400ad54	            0x4154	                                push r12	      8130	option.c	FUNCTION_49
0x400ad56	              0x55	                                push rbp	      8130	option.c	FUNCTION_49
0x400ad57	              0x53	                                push rbx	      8130	option.c	FUNCTION_49
0x400ad58	        0x4883ec68	                           sub rsp, 0x68	      8130	option.c	FUNCTION_49
0x400ad5c	          0x4189fc	                           mov r12d, edi	      8130	option.c	FUNCTION_49
0x400ad5f	          0x4889f3	                            mov rbx, rsi	      8130	option.c	FUNCTION_49
0x400ad62	          0x4189d6	                           mov r14d, edx	      8130	option.c	FUNCTION_49
0x400ad65	          0x4189cd	                           mov r13d, ecx	      8130	option.c	FUNCTION_49
0x400ad68	    0x64488b042528	                mov rax, qword fs:[0x28]	      8130	option.c	FUNCTION_49
0x400ad71	      0x4889442458	             mov qword [rsp + 0x58], rax	      8130	option.c	FUNCTION_49
0x400ad76	            0x31c0	                            xor eax, eax	      8130	option.c	FUNCTION_49
0x400ad78	    0x833d00000000	               cmp dword [0x0400ad7f], 0	      8134	option.c	FUNCTION_49	IF_1
0x400ad7f	            0x7509	                           jne 0x400ad8a	      8134	option.c	FUNCTION_49	IF_1
0x400ad81	    0x833d00000000	               cmp dword [0x0400ad88], 0	      8136	option.c	FUNCTION_49	IF_1
0x400ad88	            0x7419	                            je 0x400ada3	      8136	option.c	FUNCTION_49	IF_1
0x400ad8a	          0x4963d4	                        movsxd rdx, r12d	      8138	option.c	FUNCTION_49	IF_1
0x400ad8d	        0x48c1e206	                              shl rdx, 6	      8138	option.c	FUNCTION_49	IF_1
0x400ad91	      0xb800000000	                              mov eax, 0	      8139	option.c	FUNCTION_49	IF_1
0x400ad96	    0xf68200000000	                      test byte [rdx], 8	      8138	option.c	FUNCTION_49	IF_1
0x400ad9d	     0xf85650e0000	                           jne 0x400bc08	      8138	option.c	FUNCTION_49	IF_1
0x400ada3	          0x448b3b	                   mov r15d, dword [rbx]	      8131	option.c	FUNCTION_49
0x400ada6	          0x448933	                   mov dword [rbx], r14d	      8141	option.c	FUNCTION_49
0x400ada9	    0x8b1500000000	            mov edx, dword [0x0400adaf] 	      8144	option.c	FUNCTION_49	CALL_1
0x400adaf	          0x4489ee	                           mov esi, r13d	      8144	option.c	FUNCTION_49	CALL_1
0x400adb2	          0x4489e7	                           mov edi, r12d	      8144	option.c	FUNCTION_49	CALL_1
0x400adb5	      0xe8c153ffff	        call sym.set_option_scriptID_idx	      8144	option.c	FUNCTION_49	CALL_1
0x400adba	    0xc70500000000	               mov dword [0x0400adc4], 1	      8148	option.c	FUNCTION_49
0x400adc4	        0x41f6c506	                            test r13b, 6	      8152	option.c	FUNCTION_49	IF_2
0x400adc8	            0x751b	                           jne 0x400ade5	      8152	option.c	FUNCTION_49	IF_2
0x400adca	          0x4963fc	                        movsxd rdi, r12d	      8153	option.c	FUNCTION_49	CALL_2
0x400adcd	        0x48c1e706	                              shl rdi, 6	      8153	option.c	FUNCTION_49	CALL_2
0x400add1	    0x4881c7000000	                              add rdi, 0	      8153	option.c	FUNCTION_49	CALL_2
0x400add8	      0xbe02000000	                              mov esi, 2	      8153	option.c	FUNCTION_49	CALL_2
0x400addd	      0xe8d268ffff	                 call sym.get_varp_scope	      8153	option.c	FUNCTION_49	CALL_2
0x400ade2	          0x448930	                   mov dword [rax], r14d	      8153	option.c	FUNCTION_49	CALL_2
0x400ade5	    0x4881fb000000	                              cmp rbx, 0	      8160	option.c	FUNCTION_49	IF_3
0x400adec	            0x7505	                           jne 0x400adf3	      8160	option.c	FUNCTION_49	IF_3
0x400adee	      0xe8ac92ffff	                 call sym.compatible_set	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400adf3	    0x4881fb000000	                              cmp rbx, 0	      8166	option.c	FUNCTION_49	IF_4
0x400adfa	            0x7518	                           jne 0x400ae14	      8166	option.c	FUNCTION_49	IF_4
0x400adfc	    0x833d00000000	               cmp dword [0x0400ae03], 0	      8168	option.c	FUNCTION_49	IF_4
0x400ae03	           0xf94c0	                                 sete al	      8168	option.c	FUNCTION_49	IF_4
0x400ae06	           0xfb6c0	                           movzx eax, al	      8168	option.c	FUNCTION_49	IF_4
0x400ae09	    0x890500000000	            mov dword [0x0400ae0f], eax 	      8168	option.c	FUNCTION_49	IF_4
0x400ae0f	      0xe97c0a0000	                           jmp 0x400b890	      8168	option.c	FUNCTION_49	IF_4
0x400ae14	    0x4881fb000000	                              cmp rbx, 0	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae1b	            0x7518	                           jne 0x400ae35	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae1d	    0x833d00000000	               cmp dword [0x0400ae24], 0	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae24	           0xf94c0	                                 sete al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae27	           0xfb6c0	                           movzx eax, al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae2a	    0x890500000000	            mov dword [0x0400ae30], eax 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae30	      0xe95b0a0000	                           jmp 0x400b890	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400ae35	    0x488b2d000000	            mov rbp, qword [0x0400ae3c] 	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae3c	    0x4881fb000000	                              cmp rbx, 0	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae43	            0x7410	                            je 0x400ae55	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae45	    0x488d85501600	                 lea rax, [rbp + 0x1650]	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae4c	          0x4839c3	                            cmp rbx, rax	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae4f	     0xf85aa000000	                           jne 0x400aeff	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400ae55	    0x83bd50160000	             cmp dword [rbp + 0x1650], 0	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae5c	            0x750d	                           jne 0x400ae6b	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae5e	    0x833d00000000	               cmp dword [0x0400ae65], 0	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae65	     0xf84250a0000	                            je 0x400b890	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae6b	    0x488b05000000	            mov rax, qword [0x0400ae72] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae72	    0x488905000000	            mov qword [0x0400ae79], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae79	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae7c	            0x7475	                            je 0x400aef3	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400ae7e	          0x4489ea	                           mov edx, r13d	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae81	            0xd1ea	                              shr edx, 1	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae83	            0x89d6	                            mov esi, edx	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae85	          0x83e601	                              and esi, 1	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae88	      0x408874240f	               mov byte [rsp + 0xf], sil	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae8d	          0x4839c5	                            cmp rbp, rax	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae90	            0x740c	                            je 0x400ae9e	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae92	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae97	            0x7505	                           jne 0x400ae9e	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae99	          0x4585ed	                         test r13d, r13d	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae9c	            0x753e	                           jne 0x400aedc	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400ae9e	      0xe800000000	                          call 0x400aea3	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aea3	            0x85c0	                           test eax, eax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aea5	            0x7535	                           jne 0x400aedc	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aea7	    0x488b05000000	            mov rax, qword [0x0400aeae] 	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aeae	      0x4883780800	                  cmp qword [rax + 8], 0	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aeb3	            0x7427	                            je 0x400aedc	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400aeb5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400aeba	      0xe800000000	                          call 0x400aebf	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400aebf	    0x488b05000000	            mov rax, qword [0x0400aec6] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400aec6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400aecd	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400aed2	      0xbf00000000	                              mov edi, 0	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400aed7	      0xe800000000	                          call 0x400aedc	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400aedc	    0x488b05000000	            mov rax, qword [0x0400aee3] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aee3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aee7	    0x488905000000	            mov qword [0x0400aeee], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aeee	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aef1	            0x759a	                           jne 0x400ae8d	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aef3	    0x48892d000000	            mov qword [0x0400aefa], rbp 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aefa	      0xe991090000	                           jmp 0x400b890	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400aeff	    0x488d85601500	                 lea rax, [rbp + 0x1560]	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400af06	          0x4839c3	                            cmp rbx, rax	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400af09	            0x7527	                           jne 0x400af32	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400af0b	    0x83bd60150000	             cmp dword [rbp + 0x1560], 0	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400af12	     0xf85020d0000	                           jne 0x400bc1a	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400af18	        0x41f6c504	                            test r13b, 4	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400af1c	            0x750a	                           jne 0x400af28	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400af1e	    0xc70500000000	               mov dword [0x0400af28], 0	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400af28	      0xe83452ffff	                  call sym.redraw_titles	      8216	option.c	FUNCTION_49	ELSE_3	IF_8	CALL_4
0x400af2d	      0xe95e090000	                           jmp 0x400b890	      8216	option.c	FUNCTION_49	ELSE_3	IF_8	CALL_4
0x400af32	    0x4881fb000000	                              cmp rbx, 0	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400af39	            0x751c	                           jne 0x400af57	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400af3b	    0x833d00000000	               cmp dword [0x0400af42], 0	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400af42	     0xf8548090000	                           jne 0x400b890	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400af48	      0xbf00000000	                              mov edi, 0	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400af4d	      0xe800000000	                          call 0x400af52	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400af52	      0xe939090000	                           jmp 0x400b890	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400af57	    0x488d85401500	                 lea rax, [rbp + 0x1540]	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400af5e	          0x4839c3	                            cmp rbx, rax	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400af61	            0x7561	                           jne 0x400afc4	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400af63	    0x83bd40150000	             cmp dword [rbp + 0x1540], 0	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af6a	            0x744e	                            je 0x400afba	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af6c	      0xe800000000	                          call 0x400af71	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af71	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af73	            0x752a	                           jne 0x400af9f	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af75	    0x488b3d000000	            mov rdi, qword [0x0400af7c] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af7c	      0xe800000000	                          call 0x400af81	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af81	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af83	            0x7435	                            je 0x400afba	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400af85	    0x488b3d000000	            mov rdi, qword [0x0400af8c] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af8c	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af94	            0x7424	                            je 0x400afba	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af96	      0xe800000000	                          call 0x400af9b	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af9b	            0x85c0	                           test eax, eax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af9d	            0x751b	                           jne 0x400afba	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400af9f	    0x488b05000000	            mov rax, qword [0x0400afa6] 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400afa6	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400afb0	      0xb800000000	                              mov eax, 0	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400afb5	      0xe94e0c0000	                           jmp 0x400bc08	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400afba	      0xe8a251ffff	                  call sym.redraw_titles	      8241	option.c	FUNCTION_49	ELSE_5	IF_13	CALL_10
0x400afbf	      0xe9cc080000	                           jmp 0x400b890	      8241	option.c	FUNCTION_49	ELSE_5	IF_13	CALL_10
0x400afc4	    0x488d85701400	                 lea rax, [rbp + 0x1470]	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400afcb	          0x4839c3	                            cmp rbx, rax	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400afce	            0x750a	                           jne 0x400afda	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400afd0	      0xe88c51ffff	                  call sym.redraw_titles	      8248	option.c	FUNCTION_49	ELSE_6	IF_15	CALL_11
0x400afd5	      0xe9b6080000	                           jmp 0x400b890	      8248	option.c	FUNCTION_49	ELSE_6	IF_15	CALL_11
0x400afda	    0x488d85741400	                 lea rax, [rbp + 0x1474]	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400afe1	          0x4839c3	                            cmp rbx, rax	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400afe4	            0x750a	                           jne 0x400aff0	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400afe6	      0xe87651ffff	                  call sym.redraw_titles	      8253	option.c	FUNCTION_49	ELSE_7	IF_16	CALL_12
0x400afeb	      0xe9a0080000	                           jmp 0x400b890	      8253	option.c	FUNCTION_49	ELSE_7	IF_16	CALL_12
0x400aff0	    0x488d850c1400	                 lea rax, [rbp + 0x140c]	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400aff7	          0x4839c3	                            cmp rbx, rax	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400affa	            0x750a	                           jne 0x400b006	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400affc	      0xe86051ffff	                  call sym.redraw_titles	      8259	option.c	FUNCTION_49	ELSE_8	IF_17	CALL_13
0x400b001	      0xe98a080000	                           jmp 0x400b890	      8259	option.c	FUNCTION_49	ELSE_8	IF_17	CALL_13
0x400b006	    0x488d85081400	                 lea rax, [rbp + 0x1408]	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b00d	          0x4839c3	                            cmp rbx, rax	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b010	            0x751b	                           jne 0x400b02d	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b012	    0x8bb508140000	          mov esi, dword [rbp + 0x1408] 	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400b018	          0x4489ea	                           mov edx, r13d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400b01b	          0x4489ff	                           mov edi, r15d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400b01e	      0xe800000000	                          call 0x400b023	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400b023	      0xe83951ffff	                  call sym.redraw_titles	      8269	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_15
0x400b028	      0xe963080000	                           jmp 0x400b890	      8269	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_15
0x400b02d	    0x488d85241400	                 lea rax, [rbp + 0x1424]	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b034	          0x4839c3	                            cmp rbx, rax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b037	            0x7531	                           jne 0x400b06a	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b039	    0x8b8524140000	          mov eax, dword [rbp + 0x1424] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b03f	          0x4139c7	                           cmp r15d, eax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b042	            0x7426	                            je 0x400b06a	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b044	            0x85c0	                           test eax, eax	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b046	        0x400f94c7	                                sete dil	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b04a	        0x400fb6ff	                          movzx edi, dil	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b04e	          0x4989e8	                             mov r8, rbp	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b051	      0xb901000000	                              mov ecx, 1	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b056	      0xba00000000	                              mov edx, 0	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b05b	      0xbe00000000	                              mov esi, 0	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b060	      0xe800000000	                          call 0x400b065	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b065	      0xe926080000	                           jmp 0x400b890	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400b06a	    0x488d85901500	                 lea rax, [rbp + 0x1590]	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b071	          0x4839c3	                            cmp rbx, rax	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b074	            0x7532	                           jne 0x400b0a8	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b076	    0x83bd90150000	             cmp dword [rbp + 0x1590], 0	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400b07d	            0x7417	                            je 0x400b096	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400b07f	    0x48833d000000	               cmp qword [0x0400b087], 0	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400b087	            0x740d	                            je 0x400b096	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400b089	          0x4889ef	                            mov rdi, rbp	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400b08c	      0xe800000000	                          call 0x400b091	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400b091	      0xe9fa070000	                           jmp 0x400b890	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400b096	      0xbe01000000	                              mov esi, 1	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400b09b	          0x4889ef	                            mov rdi, rbp	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400b09e	      0xe800000000	                          call 0x400b0a3	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400b0a3	      0xe9e8070000	                           jmp 0x400b890	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400b0a8	    0x4881fb000000	                              cmp rbx, 0	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400b0af	     0xf85a1000000	                           jne 0x400b156	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400b0b5	      0xbe73000000	                           mov esi, 0x73	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400b0ba	    0x488b3d000000	            mov rdi, qword [0x0400b0c1] 	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400b0c1	      0xe800000000	                          call 0x400b0c6	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400b0c6	          0x4989c0	                             mov r8, rax	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400b0c9	    0x8b0500000000	            mov eax, dword [0x0400b0cf] 	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400b0cf	          0x4d85c0	                             test r8, r8	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400b0d2	            0x754e	                           jne 0x400b122	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400b0d4	            0x85c0	                           test eax, eax	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400b0d6	            0x744a	                            je 0x400b122	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400b0d8	    0x488b35000000	            mov rsi, qword [0x0400b0df] 	       110	string3.h	FUNCTION_143	CALL_3
0x400b0df	    0x488b3d000000	            mov rdi, qword [0x0400b0e6] 	       110	string3.h	FUNCTION_143	CALL_3
0x400b0e6	      0xe800000000	                          call 0x400b0eb	       110	string3.h	FUNCTION_143	CALL_3
0x400b0eb	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400b0f0	    0x488b3d000000	            mov rdi, qword [0x0400b0f7] 	       148	string3.h	FUNCTION_147	CALL_3
0x400b0f7	      0xe800000000	                          call 0x400b0fc	       148	string3.h	FUNCTION_147	CALL_3
0x400b0fc	    0x41b800000000	                              mov r8d, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b102	      0xb901000000	                              mov ecx, 1	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b107	    0x488b15000000	            mov rdx, qword [0x0400b10e] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b10e	      0xbeffffffff	                     mov esi, 0xffffffff	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b113	      0xbf00000000	                              mov edi, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b118	      0xe800000000	                          call 0x400b11d	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b11d	      0xe96e070000	                           jmp 0x400b890	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400b122	          0x4d85c0	                             test r8, r8	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b125	     0xf8465070000	                            je 0x400b890	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b12b	            0x85c0	                           test eax, eax	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b12d	     0xf855d070000	                           jne 0x400b890	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b133	        0x498d7001	                       lea rsi, [r8 + 1]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b137	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b13e	          0x4889f7	                            mov rdi, rsi	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b141	            0xf2ae	              repne scasb al, byte [rdi]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b143	          0x48f7d1	                                 not rcx	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b146	          0x4889ca	                            mov rdx, rcx	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400b149	          0x4c89c7	                             mov rdi, r8	        59	string3.h	FUNCTION_138	CALL_3
0x400b14c	      0xe800000000	                          call 0x400b151	        59	string3.h	FUNCTION_138	CALL_3
0x400b151	      0xe93a070000	                           jmp 0x400b890	        59	string3.h	FUNCTION_138	CALL_3
0x400b156	    0x4881fb000000	                              cmp rbx, 0	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400b15d	     0xf85af020000	                           jne 0x400b412	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400b163	    0x833d00000000	               cmp dword [0x0400b16a], 0	     12079	option.c	FUNCTION_99	IF_1
0x400b16a	     0xf849c010000	                            je 0x400b30c	     12079	option.c	FUNCTION_99	IF_1
0x400b170	    0x833d00000000	               cmp dword [0x0400b177], 0	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400b177	     0xf85d5000000	                           jne 0x400b252	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400b17d	    0x488b05000000	            mov rax, qword [0x0400b184] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b184	          0x4885c0	                           test rax, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b187	            0x744b	                            je 0x400b1d4	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b189	    0x488b90b81500	          mov rdx, qword [rax + 0x15b8] 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b190	    0x488990c81500	          mov qword [rax + 0x15c8], rdx 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b197	    0x488b90d01500	          mov rdx, qword [rax + 0x15d0] 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b19e	    0x488990e01500	          mov qword [rax + 0x15e0], rdx 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1a5	    0x488b90781500	          mov rdx, qword [rax + 0x1578] 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1ac	    0x488990801500	          mov qword [rax + 0x1580], rdx 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1b3	    0x8b90ec130000	          mov edx, dword [rax + 0x13ec] 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1b9	    0x8990f0130000	          mov dword [rax + 0x13f0], edx 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1bf	    0x8b9078140000	          mov edx, dword [rax + 0x1478] 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1c5	    0x899080140000	          mov dword [rax + 0x1480], edx 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400b1cb	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b1cf	          0x4885c0	                           test rax, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b1d2	            0x75b5	                           jne 0x400b189	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400b1d4	    0x8b0500000000	            mov eax, dword [0x0400b1da] 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400b1da	    0x890500000000	            mov dword [0x0400b1e0], eax 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400b1e0	    0x8b0500000000	            mov eax, dword [0x0400b1e6] 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400b1e6	    0x890500000000	            mov dword [0x0400b1ec], eax 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400b1ec	    0x8b0500000000	            mov eax, dword [0x0400b1f2] 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400b1f2	    0x890500000000	            mov dword [0x0400b1f8], eax 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400b1f8	    0x8b0500000000	            mov eax, dword [0x0400b1fe] 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400b1fe	    0x890500000000	            mov dword [0x0400b204], eax 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400b204	    0x8b0500000000	            mov eax, dword [0x0400b20a] 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400b20a	    0x890500000000	            mov dword [0x0400b210], eax 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400b210	    0x8b0500000000	            mov eax, dword [0x0400b216] 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400b216	    0x890500000000	            mov dword [0x0400b21c], eax 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400b21c	    0x8b0500000000	            mov eax, dword [0x0400b222] 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400b222	    0x890500000000	            mov dword [0x0400b228], eax 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400b228	    0x488b05000000	            mov rax, qword [0x0400b22f] 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400b22f	    0x488905000000	            mov qword [0x0400b236], rax 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400b236	    0x488b05000000	            mov rax, qword [0x0400b23d] 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400b23d	    0x488905000000	            mov qword [0x0400b244], rax 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400b244	    0x488b05000000	            mov rax, qword [0x0400b24b] 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400b24b	    0x488905000000	            mov qword [0x0400b252], rax 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400b252	    0x488b05000000	            mov rax, qword [0x0400b259] 	     12120	option.c	FUNCTION_99	IF_1
0x400b259	          0x4885c0	                           test rax, rax	     12120	option.c	FUNCTION_99	IF_1
0x400b25c	            0x743e	                            je 0x400b29c	     12120	option.c	FUNCTION_99	IF_1
0x400b25e	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	     12122	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400b269	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	     12123	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400b274	    0x48c780781500	            mov qword [rax + 0x1578], 0 	     12124	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400b27f	    0xc780ec130000	            mov dword [rax + 0x13ec], 0 	     12125	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400b289	    0xc78078140000	            mov dword [rax + 0x1478], 0 	     12126	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400b293	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12120	option.c	FUNCTION_99	IF_1
0x400b297	          0x4885c0	                           test rax, rax	     12120	option.c	FUNCTION_99	IF_1
0x400b29a	            0x75c2	                           jne 0x400b25e	     12120	option.c	FUNCTION_99	IF_1
0x400b29c	    0xc70500000000	               mov dword [0x0400b2a6], 0	     12130	option.c	FUNCTION_99	IF_1
0x400b2a6	    0xc70500000000	               mov dword [0x0400b2b0], 0	     12131	option.c	FUNCTION_99	IF_1
0x400b2b0	    0x833d00000000	               cmp dword [0x0400b2b7], 0	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400b2b7	            0x7405	                            je 0x400b2be	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400b2b9	      0xe800000000	                          call 0x400b2be	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x400b2be	    0xc70500000000	               mov dword [0x0400b2c8], 0	     12135	option.c	FUNCTION_99	IF_1
0x400b2c8	    0xc70500000000	               mov dword [0x0400b2d2], 0	     12138	option.c	FUNCTION_99	IF_1
0x400b2d2	    0xc70500000000	               mov dword [0x0400b2dc], 0	     12139	option.c	FUNCTION_99	IF_1
0x400b2dc	    0x48c705000000	               mov qword [0x0400b2e7], 0	     12142	option.c	FUNCTION_99	IF_1
0x400b2e7	    0x48c705000000	               mov qword [0x0400b2f2], 0	     12143	option.c	FUNCTION_99	IF_1
0x400b2f2	    0x48c705000000	               mov qword [0x0400b2fd], 0	     12144	option.c	FUNCTION_99	IF_1
0x400b2fd	    0xc70500000000	               mov dword [0x0400b307], 0	     12145	option.c	FUNCTION_99	IF_1
0x400b307	      0xe9f5000000	                           jmp 0x400b401	     12145	option.c	FUNCTION_99	IF_1
0x400b30c	    0x833d00000000	               cmp dword [0x0400b313], 0	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b313	     0xf84e8000000	                            je 0x400b401	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b319	    0x488b05000000	            mov rax, qword [0x0400b320] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b320	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b323	            0x744b	                            je 0x400b370	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b325	    0x488b90c81500	          mov rdx, qword [rax + 0x15c8] 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b32c	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b333	    0x488b90e01500	          mov rdx, qword [rax + 0x15e0] 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b33a	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b341	    0x488b90801500	          mov rdx, qword [rax + 0x1580] 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b348	    0x488990781500	          mov qword [rax + 0x1578], rdx 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b34f	    0x8b90f0130000	          mov edx, dword [rax + 0x13f0] 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b355	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b35b	    0x8b9080140000	          mov edx, dword [rax + 0x1480] 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b361	    0x899078140000	          mov dword [rax + 0x1478], edx 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400b367	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b36b	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b36e	            0x75b5	                           jne 0x400b325	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b370	    0x8b0500000000	            mov eax, dword [0x0400b376] 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b376	    0x890500000000	            mov dword [0x0400b37c], eax 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b37c	    0x8b0500000000	            mov eax, dword [0x0400b382] 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b382	    0x890500000000	            mov dword [0x0400b388], eax 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b388	    0x8b0500000000	            mov eax, dword [0x0400b38e] 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400b38e	    0x390500000000	            cmp dword [0x0400b394], eax 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400b394	            0x7405	                            je 0x400b39b	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400b396	      0xe800000000	                          call 0x400b39b	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400b39b	    0x8b0500000000	            mov eax, dword [0x0400b3a1] 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3a1	    0x890500000000	            mov dword [0x0400b3a7], eax 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3a7	    0x8b0500000000	            mov eax, dword [0x0400b3ad] 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3ad	    0x890500000000	            mov dword [0x0400b3b3], eax 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3b3	    0x8b0500000000	            mov eax, dword [0x0400b3b9] 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3b9	    0x890500000000	            mov dword [0x0400b3bf], eax 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3bf	    0x8b0500000000	            mov eax, dword [0x0400b3c5] 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3c5	    0x890500000000	            mov dword [0x0400b3cb], eax 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3cb	    0x8b0500000000	            mov eax, dword [0x0400b3d1] 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3d1	    0x890500000000	            mov dword [0x0400b3d7], eax 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3d7	    0x488b05000000	            mov rax, qword [0x0400b3de] 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3de	    0x488905000000	            mov qword [0x0400b3e5], rax 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3e5	    0x488b05000000	            mov rax, qword [0x0400b3ec] 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3ec	    0x488905000000	            mov qword [0x0400b3f3], rax 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3f3	    0x488b05000000	            mov rax, qword [0x0400b3fa] 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b3fa	    0x488905000000	            mov qword [0x0400b401], rax 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400b401	    0x8b0500000000	            mov eax, dword [0x0400b407] 	     12183	option.c	FUNCTION_99
0x400b407	    0x890500000000	            mov dword [0x0400b40d], eax 	     12183	option.c	FUNCTION_99
0x400b40d	      0xe97e040000	                           jmp 0x400b890	     12183	option.c	FUNCTION_99
0x400b412	    0x4881fb000000	                              cmp rbx, 0	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400b419	            0x7573	                           jne 0x400b48e	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400b41b	    0x833d00000000	               cmp dword [0x0400b422], 0	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400b422	            0x7422	                            je 0x400b446	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400b424	    0xf60500000000	           test byte [0x0400b42b], 0x10 	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400b42b	            0x750a	                           jne 0x400b437	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400b42d	    0xc70500000000	               mov dword [0x0400b437], 1	      8322	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400b437	    0xc70500000000	               mov dword [0x0400b441], 0	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400b441	      0xe94a040000	                           jmp 0x400b890	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400b446	          0x4585ff	                         test r15d, r15d	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b449	     0xf8441040000	                            je 0x400b890	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b44f	    0xc70500000000	               mov dword [0x0400b459], 0	      8328	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b459	    0xc70500000000	               mov dword [0x0400b463], 1	      8329	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b463	    0x833d00000000	               cmp dword [0x0400b46a], 0	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400b46a	            0x7413	                            je 0x400b47f	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400b46c	    0x833d00000000	               cmp dword [0x0400b473], 0	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400b473	            0x740a	                            je 0x400b47f	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400b475	    0xc70500000000	               mov dword [0x0400b47f], 1	      8331	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400b47f	    0xc70500000000	               mov dword [0x0400b489], 0	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b489	      0xe902040000	                           jmp 0x400b890	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400b48e	    0x4881fb000000	                              cmp rbx, 0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b495	            0x7518	                           jne 0x400b4af	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b497	    0x833d00000000	               cmp dword [0x0400b49e], 0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b49e	            0x740f	                            je 0x400b4af	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b4a0	      0xbf23000000	                           mov edi, 0x23	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400b4a5	      0xe800000000	                          call 0x400b4aa	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400b4aa	      0xe9e1030000	                           jmp 0x400b890	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400b4af	    0x4881fb000000	                              cmp rbx, 0	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400b4b6	            0x750f	                           jne 0x400b4c7	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400b4b8	      0xbf00000000	                              mov edi, 0	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400b4bd	      0xe800000000	                          call 0x400b4c2	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400b4c2	      0xe9c9030000	                           jmp 0x400b890	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400b4c7	    0x488b3d000000	            mov rdi, qword [0x0400b4ce] 	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b4ce	    0x488d87880200	                  lea rax, [rdi + 0x288]	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b4d5	          0x4839c3	                            cmp rbx, rax	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b4d8	            0x752e	                           jne 0x400b508	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b4da	    0x83bf88020000	              cmp dword [rdi + 0x288], 0	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b4e1	     0xf84a9030000	                            je 0x400b890	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b4e7	      0xbf00000000	                              mov edi, 0	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400b4ec	      0xe800000000	                          call 0x400b4f1	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400b4f1	    0x488b05000000	            mov rax, qword [0x0400b4f8] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b4f8	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b4fc	    0x488990500500	            mov qword [rax + 0x550], rdx	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b503	      0xe988030000	                           jmp 0x400b890	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400b508	    0x488d87500200	                  lea rax, [rdi + 0x250]	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b50f	          0x4839c3	                            cmp rbx, rax	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b512	            0x755d	                           jne 0x400b571	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b514	    0x83bf50020000	              cmp dword [rdi + 0x250], 0	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400b51b	     0xf846f030000	                            je 0x400b890	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400b521	    0x488b05000000	            mov rax, qword [0x0400b528] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b528	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b52b	     0xf845f030000	                            je 0x400b890	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b531	    0x83b850020000	              cmp dword [rax + 0x250], 0	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b538	            0x7429	                            je 0x400b563	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b53a	          0x4839c7	                            cmp rdi, rax	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b53d	            0x7424	                            je 0x400b563	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b53f	            0xeb0e	                           jmp 0x400b54f	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b541	    0x83b850020000	              cmp dword [rax + 0x250], 0	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b548	            0x7419	                            je 0x400b563	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b54a	          0x4839c7	                            cmp rdi, rax	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b54d	            0x7414	                            je 0x400b563	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b54f	    0xc78750020000	              mov dword [rdi + 0x250], 0	      8372	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b559	      0xb800000000	                              mov eax, 0	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400b55e	      0xe9a5060000	                           jmp 0x400bc08	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400b563	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b567	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b56a	            0x75d5	                           jne 0x400b541	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b56c	      0xe91f030000	                           jmp 0x400b890	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b571	    0x488d85b01500	                 lea rax, [rbp + 0x15b0]	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b578	          0x4839c3	                            cmp rbx, rax	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b57b	            0x751c	                           jne 0x400b599	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b57d	    0x83bdb0150000	             cmp dword [rbp + 0x15b0], 0	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b584	        0x400f95c7	                               setne dil	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b588	        0x400fb6ff	                          movzx edi, dil	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b58c	          0x4489ee	                           mov esi, r13d	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b58f	      0xe800000000	                          call 0x400b594	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b594	      0xe9f7020000	                           jmp 0x400b890	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400b599	    0x4881fb000000	                              cmp rbx, 0	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400b5a0	            0x7535	                           jne 0x400b5d7	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400b5a2	          0x4489e9	                           mov ecx, r13d	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5a5	          0x83c901	                               or ecx, 1	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5a8	    0x833d00000000	               cmp dword [0x0400b5af], 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5af	      0xba00000000	                              mov edx, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5b4	      0xb800000000	                              mov eax, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5b9	        0x480f45d0	                         cmovne rdx, rax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5bd	    0x41b800000000	                              mov r8d, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5c3	      0xbeffffffff	                     mov esi, 0xffffffff	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5c8	      0xbf00000000	                              mov edi, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5cd	      0xe800000000	                          call 0x400b5d2	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5d2	      0xe9b9020000	                           jmp 0x400b890	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400b5d7	    0x488d85201500	                 lea rax, [rbp + 0x1520]	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b5de	          0x4839c3	                            cmp rbx, rax	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b5e1	            0x7512	                           jne 0x400b5f5	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b5e3	      0xbe00000000	                              mov esi, 0	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400b5e8	          0x4889ef	                            mov rdi, rbp	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400b5eb	      0xe800000000	                          call 0x400b5f0	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400b5f0	      0xe99b020000	                           jmp 0x400b890	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400b5f5	    0x4881fb000000	                              cmp rbx, 0	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400b5fc	            0x750f	                           jne 0x400b60d	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400b5fe	      0xbf00000000	                              mov edi, 0	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400b603	      0xe88871ffff	                  call sym.did_set_title	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400b608	      0xe983020000	                           jmp 0x400b890	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400b60d	    0x4881fb000000	                              cmp rbx, 0	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400b614	            0x750f	                           jne 0x400b625	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400b616	      0xbf01000000	                              mov edi, 1	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400b61b	      0xe87071ffff	                  call sym.did_set_title	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400b620	      0xe96b020000	                           jmp 0x400b890	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400b625	    0x488d85c80000	                   lea rax, [rbp + 0xc8]	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b62c	          0x4839c3	                            cmp rbx, rax	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b62f	            0x751e	                           jne 0x400b64f	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b631	          0x4585f6	                         test r14d, r14d	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400b634	            0x7508	                           jne 0x400b63e	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400b636	          0x4889ef	                            mov rdi, rbp	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400b639	      0xe800000000	                          call 0x400b63e	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400b63e	      0xe81e4bffff	                  call sym.redraw_titles	      8420	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_36
0x400b643	    0x448935000000	           mov dword [0x0400b64a], r14d 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b64a	      0xe941020000	                           jmp 0x400b890	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b64f	    0x488d87940200	                  lea rax, [rdi + 0x294]	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b656	          0x4839c3	                            cmp rbx, rax	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b659	            0x751c	                           jne 0x400b677	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b65b	    0x83bf94020000	              cmp dword [rdi + 0x294], 0	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400b662	     0xf8428020000	                            je 0x400b890	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400b668	    0xc78794000000	               mov dword [rdi + 0x94], 0	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400b672	      0xe919020000	                           jmp 0x400b890	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400b677	    0x4881fb000000	                              cmp rbx, 0	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400b67e	            0x752a	                           jne 0x400b6aa	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400b680	    0x833d00000000	               cmp dword [0x0400b687], 0	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400b687	     0xf8403020000	                            je 0x400b890	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400b68d	          0x4585ff	                         test r15d, r15d	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400b690	     0xf85fa010000	                           jne 0x400b890	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400b696	      0xba00000000	                              mov edx, 0	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400b69b	      0xbe00000000	                              mov esi, 0	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400b6a0	      0xe800000000	                          call 0x400b6a5	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400b6a5	      0xe9e6010000	                           jmp 0x400b890	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400b6aa	    0x4881fb000000	                              cmp rbx, 0	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6b1	            0x754e	                           jne 0x400b701	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6b3	    0x8b0500000000	            mov eax, dword [0x0400b6b9] 	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6b9	          0x4585ff	                         test r15d, r15d	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6bc	            0x7511	                           jne 0x400b6cf	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6be	            0x85c0	                           test eax, eax	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6c0	            0x740d	                            je 0x400b6cf	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6c2	    0x48c705000000	               mov qword [0x0400b6cd], 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6cd	            0xeb17	                           jmp 0x400b6e6	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400b6cf	          0x4585ff	                         test r15d, r15d	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6d2	            0x7412	                            je 0x400b6e6	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6d4	            0x85c0	                           test eax, eax	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6d6	            0x750e	                           jne 0x400b6e6	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6d8	    0x488b05000000	            mov rax, qword [0x0400b6df] 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6df	    0x488905000000	            mov qword [0x0400b6e6], rax 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400b6e6	    0x488b05000000	            mov rax, qword [0x0400b6ed] 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6ed	          0x803800	                       cmp byte [rax], 0	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6f0	           0xf95c0	                                setne al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6f3	           0xfb6c0	                           movzx eax, al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6f6	    0x890500000000	            mov dword [0x0400b6fc], eax 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b6fc	      0xe98f010000	                           jmp 0x400b890	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b701	    0x4881fb000000	                              cmp rbx, 0	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400b708	            0x754f	                           jne 0x400b759	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400b70a	    0x833d00000000	               cmp dword [0x0400b711], 0	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400b711	     0xf8579010000	                           jne 0x400b890	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400b717	    0x8b0500000000	            mov eax, dword [0x0400b71d] 	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400b71d	          0x4585ff	                         test r15d, r15d	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400b720	            0x7515	                           jne 0x400b737	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400b722	            0x85c0	                           test eax, eax	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400b724	            0x7411	                            je 0x400b737	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400b726	    0x488b3d000000	            mov rdi, qword [0x0400b72d] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400b72d	      0xe800000000	                          call 0x400b732	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400b732	      0xe959010000	                           jmp 0x400b890	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400b737	          0x4585ff	                         test r15d, r15d	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b73a	     0xf8450010000	                            je 0x400b890	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b740	            0x85c0	                           test eax, eax	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b742	     0xf8548010000	                           jne 0x400b890	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b748	    0x488b3d000000	            mov rdi, qword [0x0400b74f] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b74f	      0xe800000000	                          call 0x400b754	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b754	      0xe937010000	                           jmp 0x400b890	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400b759	    0x4881fb000000	                              cmp rbx, 0	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400b760	            0x750a	                           jne 0x400b76c	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400b762	      0xe800000000	                          call 0x400b767	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400b767	      0xe924010000	                           jmp 0x400b890	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400b76c	    0x4881fb000000	                              cmp rbx, 0	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b773	            0x7517	                           jne 0x400b78c	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b775	    0x833d00000000	               cmp dword [0x0400b77c], 0	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b77c	     0xf840e010000	                            je 0x400b890	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b782	      0xe800000000	                          call 0x400b787	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b787	      0xe904010000	                           jmp 0x400b890	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400b78c	    0x488d87c00100	                  lea rax, [rdi + 0x1c0]	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400b793	          0x4839c3	                            cmp rbx, rax	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400b796	            0x752a	                           jne 0x400b7c2	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400b798	      0xe800000000	                          call 0x400b79d	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x400b79d	    0x488b3d000000	            mov rdi, qword [0x0400b7a4] 	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400b7a4	      0xe800000000	                          call 0x400b7a9	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400b7a9	            0x85c0	                           test eax, eax	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400b7ab	     0xf84df000000	                            je 0x400b890	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400b7b1	    0x488b3d000000	            mov rdi, qword [0x0400b7b8] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400b7b8	      0xe800000000	                          call 0x400b7bd	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400b7bd	      0xe9ce000000	                           jmp 0x400b890	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400b7c2	    0x4881fb000000	                              cmp rbx, 0	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400b7c9	            0x753f	                           jne 0x400b80a	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400b7cb	    0x833d00000000	               cmp dword [0x0400b7d2], 0	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400b7d2	            0x740f	                            je 0x400b7e3	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400b7d4	      0xbf00000000	                              mov edi, 0	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400b7d9	      0xe800000000	                          call 0x400b7de	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400b7de	      0xe9ad000000	                           jmp 0x400b890	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400b7e3	    0xf60500000000	           test byte [0x0400b7ea], 0x10 	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b7ea	     0xf84a0000000	                            je 0x400b890	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b7f0	    0x4883bd781200	            cmp qword [rbp + 0x1278], 2 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b7f8	        0x400f94c7	                                sete dil	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b7fc	        0x400fb6ff	                          movzx edi, dil	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b800	      0xe800000000	                          call 0x400b805	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b805	      0xe986000000	                           jmp 0x400b890	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400b80a	    0x488d87680200	                  lea rax, [rdi + 0x268]	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400b811	          0x4839c3	                            cmp rbx, rax	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400b814	            0x752f	                           jne 0x400b845	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400b816	    0x83bf68020000	              cmp dword [rdi + 0x268], 0	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400b81d	            0x7471	                            je 0x400b890	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400b81f	      0xe800000000	                          call 0x400b824	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x400b824	          0x4885c0	                           test rax, rax	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400b827	            0x7467	                            je 0x400b890	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400b829	      0xba05000000	                              mov edx, 5	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b82e	          0x4889c6	                            mov rsi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b831	      0xbf00000000	                              mov edi, 0	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b836	      0xe800000000	                          call 0x400b83b	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b83b	          0x4889c7	                            mov rdi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b83e	      0xe800000000	                          call 0x400b843	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b843	            0xeb4b	                           jmp 0x400b890	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400b845	    0x4881fb000000	                              cmp rbx, 0	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400b84c	            0x7542	                           jne 0x400b890	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400b84e	    0x8b0500000000	            mov eax, dword [0x0400b854] 	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400b854	          0x4139c7	                           cmp r15d, eax	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400b857	            0x7437	                            je 0x400b890	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400b859	            0x85c0	                           test eax, eax	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b85b	            0x7518	                           jne 0x400b875	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b85d	    0x8b0500000000	            mov eax, dword [0x0400b863] 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b863	    0x890500000000	            mov dword [0x0400b869], eax 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b869	    0xc70500000000	               mov dword [0x0400b873], 0	      8551	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b873	            0xeb16	                           jmp 0x400b88b	      8551	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400b875	    0x8b0500000000	            mov eax, dword [0x0400b87b] 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400b87b	    0x890500000000	            mov dword [0x0400b881], eax 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400b881	    0xc70500000000	               mov dword [0x0400b88b], 0	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400b88b	      0xe800000000	                          call 0x400b890	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400b890	    0x833d00000000	               cmp dword [0x0400b897], 0	      8570	option.c	FUNCTION_49	IF_71
0x400b897	     0xf858c030000	                           jne 0x400bc29	      8570	option.c	FUNCTION_49	IF_71
0x400b89d	    0x833d00000000	               cmp dword [0x0400b8a4], 0	      8570	option.c	FUNCTION_49	IF_71
0x400b8a4	     0xf84a7000000	                            je 0x400b951	      8570	option.c	FUNCTION_49	IF_71
0x400b8aa	    0x833d00000000	               cmp dword [0x0400b8b1], 0	      8570	option.c	FUNCTION_49	IF_71
0x400b8b1	            0x7462	                            je 0x400b915	      8570	option.c	FUNCTION_49	IF_71
0x400b8b3	    0x8b0500000000	            mov eax, dword [0x0400b8b9] 	      8572	option.c	FUNCTION_49	IF_71
0x400b8b9	    0x890500000000	            mov dword [0x0400b8bf], eax 	      8572	option.c	FUNCTION_49	IF_71
0x400b8bf	    0x488b05000000	            mov rax, qword [0x0400b8c6] 	      8574	option.c	FUNCTION_49	IF_71
0x400b8c6	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8574	option.c	FUNCTION_49	IF_71
0x400b8d0	      0xe800000000	                          call 0x400b8d5	      8576	option.c	FUNCTION_49	IF_71	CALL_53
0x400b8d5	    0x833d00000000	               cmp dword [0x0400b8dc], 0	      8582	option.c	FUNCTION_49	IF_72
0x400b8dc	            0x7437	                            je 0x400b915	      8582	option.c	FUNCTION_49	IF_72
0x400b8de	    0x833d00000000	               cmp dword [0x0400b8e5], 0	      8582	option.c	FUNCTION_49	IF_72
0x400b8e5	     0xf844b030000	                            je 0x400bc36	      8582	option.c	FUNCTION_49	IF_72
0x400b8eb	    0xc70500000000	               mov dword [0x0400b8f5], 0	      8584	option.c	FUNCTION_49	IF_72
0x400b8f5	    0xc70500000000	               mov dword [0x0400b8ff], 0	      8585	option.c	FUNCTION_49	IF_72
0x400b8ff	    0x488b05000000	            mov rax, qword [0x0400b906] 	      8587	option.c	FUNCTION_49	IF_72
0x400b906	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8587	option.c	FUNCTION_49	IF_72
0x400b910	      0xe800000000	                          call 0x400b915	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400b915	    0x833d00000000	               cmp dword [0x0400b91c], 0	      8595	option.c	FUNCTION_49	IF_73
0x400b91c	            0x7433	                            je 0x400b951	      8595	option.c	FUNCTION_49	IF_73
0x400b91e	    0x833d00000000	               cmp dword [0x0400b925], 0	      8595	option.c	FUNCTION_49	IF_73
0x400b925	            0x752a	                           jne 0x400b951	      8595	option.c	FUNCTION_49	IF_73
0x400b927	    0xc70500000000	               mov dword [0x0400b931], 1	      8597	option.c	FUNCTION_49	IF_73
0x400b931	    0xc70500000000	               mov dword [0x0400b93b], 0	      8598	option.c	FUNCTION_49	IF_73
0x400b93b	    0x488b05000000	            mov rax, qword [0x0400b942] 	      8600	option.c	FUNCTION_49	IF_73
0x400b942	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8600	option.c	FUNCTION_49	IF_73
0x400b94c	      0xe800000000	                          call 0x400b951	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400b951	    0x488b05000000	            mov rax, qword [0x0400b958] 	      8607	option.c	FUNCTION_49	IF_74
0x400b958	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	      8607	option.c	FUNCTION_49	IF_74
0x400b95f	          0x4839d3	                            cmp rbx, rdx	      8607	option.c	FUNCTION_49	IF_74
0x400b962	     0xf8540010000	                           jne 0x400baa8	      8607	option.c	FUNCTION_49	IF_74
0x400b968	    0x83b8b0010000	              cmp dword [rax + 0x1b0], 0	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400b96f	     0xf84f3000000	                            je 0x400ba68	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400b975	    0x833d00000000	               cmp dword [0x0400b97c], 0	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400b97c	            0x7530	                           jne 0x400b9ae	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400b97e	    0x83b854020000	              cmp dword [rax + 0x254], 0	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400b985	            0x750f	                           jne 0x400b996	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400b987	    0xc78054020000	              mov dword [rax + 0x254], 1	      8619	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400b991	      0xe800000000	                          call 0x400b996	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x400b996	    0x833d00000000	               cmp dword [0x0400b99d], 0	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400b99d	            0x750f	                           jne 0x400b9ae	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400b99f	    0xc70500000000	               mov dword [0x0400b9a9], 1	      8626	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400b9a9	      0xe800000000	                          call 0x400b9ae	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x400b9ae	      0xbf00000000	                              mov edi, 0	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9b3	      0xb906000000	                              mov ecx, 6	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9b8	    0x488b35000000	            mov rsi, qword [0x0400b9bf] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9c1	           0xf97c2	                                 seta dl	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9c4	           0xf92c0	                                 setb al	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9c7	            0x38c2	                              cmp dl, al	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9c9	            0x7455	                            je 0x400ba20	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400b9cb	    0x8b3d00000000	            mov edi, dword [0x0400b9d1] 	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400b9d1	      0xe800000000	                          call 0x400b9d6	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400b9d6	    0x8b1d00000000	            mov ebx, dword [0x0400b9dc] 	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9dc	      0xba05000000	                              mov edx, 5	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9e1	      0xbe00000000	                              mov esi, 0	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9e6	      0xbf00000000	                              mov edi, 0	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9eb	      0xe800000000	                          call 0x400b9f0	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9f0	            0x89de	                            mov esi, ebx	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9f2	          0x4889c7	                            mov rdi, rax	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9f5	      0xe800000000	                          call 0x400b9fa	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400b9fa	      0xba05000000	                              mov edx, 5	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400b9ff	      0xbe00000000	                              mov esi, 0	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba04	      0xbf00000000	                              mov edi, 0	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba09	      0xe800000000	                          call 0x400ba0e	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba0e	      0xbaffffffff	                     mov edx, 0xffffffff	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba13	          0x4889c6	                            mov rsi, rax	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba16	      0xbf04000000	                              mov edi, 4	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba1b	      0xe800000000	                          call 0x400ba20	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400ba20	    0xc70500000000	               mov dword [0x0400ba2a], 1	      8646	option.c	FUNCTION_49	IF_74	IF_75
0x400ba2a	      0xb904000000	                              mov ecx, 4	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400ba2f	      0xba00000000	                              mov edx, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400ba34	      0xbe00000000	                              mov esi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400ba39	      0xbf00000000	                              mov edi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400ba3e	      0xe800000000	                          call 0x400ba43	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400ba43	    0xc70500000000	               mov dword [0x0400ba4d], 0	      8655	option.c	FUNCTION_49	IF_74	IF_75
0x400ba4d	    0xc70500000000	               mov dword [0x0400ba57], 0	      8656	option.c	FUNCTION_49	IF_74	IF_75
0x400ba57	    0xc70500000000	               mov dword [0x0400ba61], 0	      8657	option.c	FUNCTION_49	IF_74	IF_75
0x400ba61	      0xe800000000	                          call 0x400ba66	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400ba66	            0xeb60	                           jmp 0x400bac8	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400ba68	    0x833d00000000	               cmp dword [0x0400ba6f], 0	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400ba6f	            0x7518	                           jne 0x400ba89	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400ba71	    0x83b854020000	              cmp dword [rax + 0x254], 0	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400ba78	            0x740f	                            je 0x400ba89	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400ba7a	    0xc78054020000	              mov dword [rax + 0x254], 0	      8671	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400ba84	      0xe800000000	                          call 0x400ba89	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400ba89	    0x488b05000000	            mov rax, qword [0x0400ba90] 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400ba90	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400ba9b	    0x48c780801200	mov qword [rax + 0x1280], 0xffffffffffffffff 	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400baa6	            0xeb20	                           jmp 0x400bac8	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400baa8	    0x4881fb000000	                              cmp rbx, 0	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400baaf	            0x7517	                           jne 0x400bac8	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400bab1	    0x833d00000000	               cmp dword [0x0400bab8], 0	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400bab8	            0x750e	                           jne 0x400bac8	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400baba	    0x833d00000000	               cmp dword [0x0400bac1], 0	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400bac1	            0x7505	                           jne 0x400bac8	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400bac3	      0xe800000000	                          call 0x400bac8	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400bac8	          0x4963c4	                        movsxd rax, r12d	      8725	option.c	FUNCTION_49
0x400bacb	        0x48c1e006	                              shl rax, 6	      8725	option.c	FUNCTION_49
0x400bacf	    0x488188000000	                   or qword [rax], 0x100	      8725	option.c	FUNCTION_49
0x400bada	    0x833d00000000	               cmp dword [0x0400bae1], 0	      8728	option.c	FUNCTION_49	IF_87
0x400bae1	     0xf85d8000000	                           jne 0x400bbbf	      8728	option.c	FUNCTION_49	IF_87
0x400bae7	          0x4585ff	                         test r15d, r15d	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400baea	           0xf95c1	                                setne cl	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400baed	           0xfb6c9	                           movzx ecx, cl	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400baf0	      0xba00000000	                              mov edx, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400baf5	      0xbe02000000	                              mov esi, 2	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bafa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400baff	      0xb800000000	                              mov eax, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bb04	      0xe800000000	                          call 0x400bb09	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bb09	          0x4585f6	                         test r14d, r14d	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb0c	           0xf95c1	                                setne cl	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb0f	           0xfb6c9	                           movzx ecx, cl	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb12	      0xba00000000	                              mov edx, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb17	      0xbe02000000	                              mov esi, 2	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb1c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb21	      0xb800000000	                              mov eax, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb26	      0xe800000000	                          call 0x400bb2b	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bb2b	        0x4183e504	                             and r13d, 4	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb2f	      0xb900000000	                              mov ecx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb34	      0xb800000000	                              mov eax, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb39	        0x480f45c8	                         cmovne rcx, rax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb3d	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb42	      0xbe07000000	                              mov esi, 7	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb47	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb4c	      0xb800000000	                              mov eax, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb51	      0xe800000000	                          call 0x400bb56	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bb56	      0xbaffffffff	                     mov edx, 0xffffffff	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bb5b	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bb60	      0xbf3d000000	                           mov edi, 0x3d	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bb65	      0xe800000000	                          call 0x400bb6a	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bb6a	      0xbaffffffff	                     mov edx, 0xffffffff	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bb6f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bb74	      0xbf3e000000	                           mov edi, 0x3e	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bb79	      0xe800000000	                          call 0x400bb7e	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bb7e	      0xbaffffffff	                     mov edx, 0xffffffff	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bb83	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bb88	      0xbf3f000000	                           mov edi, 0x3f	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bb8d	      0xe800000000	                          call 0x400bb92	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bb92	          0x4963c4	                        movsxd rax, r12d	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bb95	        0x48c1e006	                              shl rax, 6	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bb99	    0x41b800000000	                              mov r8d, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bb9f	      0xb900000000	                              mov ecx, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bba4	      0xba00000000	                              mov edx, 0	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bba9	    0x488bb0000000	                    mov rsi, qword [rax]	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bbb0	      0xbf3e000000	                           mov edi, 0x3e	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bbb5	      0xe800000000	                          call 0x400bbba	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bbba	      0xe800000000	                          call 0x400bbbf	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400bbbf	      0xe800000000	                          call 0x400bbc4	      8742	option.c	FUNCTION_49	CALL_86
0x400bbc4	    0x488b15000000	            mov rdx, qword [0x0400bbcb] 	      8743	option.c	FUNCTION_49	IF_88
0x400bbcb	    0x817a48ffffff	     cmp dword [rdx + 0x48], 0x7fffffff 	      8743	option.c	FUNCTION_49	IF_88
0x400bbd2	            0x741b	                            je 0x400bbef	      8743	option.c	FUNCTION_49	IF_88
0x400bbd4	          0x4963c4	                        movsxd rax, r12d	      8744	option.c	FUNCTION_49	IF_88
0x400bbd7	        0x48c1e006	                              shl rax, 6	      8744	option.c	FUNCTION_49	IF_88
0x400bbdb	    0x48f780000000	            test qword [rax], 0x4006000 	      8744	option.c	FUNCTION_49	IF_88
0x400bbe6	            0x7407	                            je 0x400bbef	      8744	option.c	FUNCTION_49	IF_88
0x400bbe8	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      8745	option.c	FUNCTION_49	IF_88
0x400bbef	          0x4d63e4	                        movsxd r12, r12d	      8746	option.c	FUNCTION_49	CALL_87
0x400bbf2	        0x49c1e406	                              shl r12, 6	      8746	option.c	FUNCTION_49	CALL_87
0x400bbf6	    0x498bbc240000	                    mov rdi, qword [r12]	      8746	option.c	FUNCTION_49	CALL_87
0x400bbfe	      0xe8d66bffff	                   call sym.check_redraw	      8746	option.c	FUNCTION_49	CALL_87
0x400bc03	      0xb800000000	                              mov eax, 0	      8748	option.c	FUNCTION_49
0x400bc08	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      8749	option.c	FUNCTION_49
0x400bc0d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8749	option.c	FUNCTION_49
0x400bc16	            0x7435	                            je 0x400bc4d	      8749	option.c	FUNCTION_49
0x400bc18	            0xeb2e	                           jmp 0x400bc48	      8749	option.c	FUNCTION_49
0x400bc1a	    0xc78554170000	            mov dword [rbp + 0x1754], 0 	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400bc24	      0xe9fff2ffff	                           jmp 0x400af28	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400bc29	    0x833d00000000	               cmp dword [0x0400bc30], 0	      8570	option.c	FUNCTION_49	IF_71
0x400bc30	     0xf857dfcffff	                           jne 0x400b8b3	      8570	option.c	FUNCTION_49	IF_71
0x400bc36	    0x833d00000000	               cmp dword [0x0400bc3d], 0	      8595	option.c	FUNCTION_49	IF_73
0x400bc3d	     0xf840efdffff	                            je 0x400b951	      8595	option.c	FUNCTION_49	IF_73
0x400bc43	      0xe9dffcffff	                           jmp 0x400b927	      8595	option.c	FUNCTION_49	IF_73
0x400bc48	      0xe800000000	                          call 0x400bc4d	      8749	option.c	FUNCTION_49
0x400bc4d	        0x4883c468	                           add rsp, 0x68	      8749	option.c	FUNCTION_49
0x400bc51	              0x5b	                                 pop rbx	      8749	option.c	FUNCTION_49
0x400bc52	              0x5d	                                 pop rbp	      8749	option.c	FUNCTION_49
0x400bc53	            0x415c	                                 pop r12	      8749	option.c	FUNCTION_49
0x400bc55	            0x415d	                                 pop r13	      8749	option.c	FUNCTION_49
0x400bc57	            0x415e	                                 pop r14	      8749	option.c	FUNCTION_49
0x400bc59	            0x415f	                                 pop r15	      8749	option.c	FUNCTION_49
0x400bc5b	              0xc3	                                     ret	      8749	option.c	FUNCTION_49
win_copy_options	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,3:WHILE,0	19
0x4005242	              0x55	                                push rbp	     10848	option.c	FUNCTION_79
0x4005243	              0x53	                                push rbx	     10848	option.c	FUNCTION_79
0x4005244	        0x4883ec08	                              sub rsp, 8	     10848	option.c	FUNCTION_79
0x4005248	          0x4889fd	                            mov rbp, rdi	     10848	option.c	FUNCTION_79
0x400524b	          0x4889f3	                            mov rbx, rsi	     10848	option.c	FUNCTION_79
0x400524e	    0x488db6b00100	                  lea rsi, [rsi + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x4005255	    0x488dbfb00100	                  lea rdi, [rdi + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x400525c	      0xe800000000	                          call 0x4005261	     10849	option.c	FUNCTION_79	CALL_1
0x4005261	    0x488db3680300	                  lea rsi, [rbx + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x4005268	    0x488dbd680300	                  lea rdi, [rbp + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x400526f	      0xe800000000	                          call 0x4005274	     10850	option.c	FUNCTION_79	CALL_2
0x4005274	    0x8b8578050000	           mov eax, dword [rbp + 0x578] 	     10854	option.c	FUNCTION_79
0x400527a	    0x898378050000	            mov dword [rbx + 0x578], eax	     10854	option.c	FUNCTION_79
0x4005280	          0x4889df	                            mov rdi, rbx	     10858	option.c	FUNCTION_79	CALL_3
0x4005283	      0xe855cbffff	                   call sym.briopt_check	     10858	option.c	FUNCTION_79	CALL_3
0x4005288	        0x4883c408	                              add rsp, 8	     10860	option.c	FUNCTION_79
0x400528c	              0x5b	                                 pop rbx	     10860	option.c	FUNCTION_79
0x400528d	              0x5d	                                 pop rbp	     10860	option.c	FUNCTION_79
0x400528e	              0xc3	                                     ret	     10860	option.c	FUNCTION_79
do_set	SWITCH,1:functions,0:ELSE,45:FOR,4:IF,120:DO,0:CALL,129:WHILE,6	1525
0x400bc5c	            0x4157	                                push r15	      4366	option.c	FUNCTION_16
0x400bc5e	            0x4156	                                push r14	      4366	option.c	FUNCTION_16
0x400bc60	            0x4155	                                push r13	      4366	option.c	FUNCTION_16
0x400bc62	            0x4154	                                push r12	      4366	option.c	FUNCTION_16
0x400bc64	              0x55	                                push rbp	      4366	option.c	FUNCTION_16
0x400bc65	              0x53	                                push rbx	      4366	option.c	FUNCTION_16
0x400bc66	    0x4881ece80000	                           sub rsp, 0xe8	      4366	option.c	FUNCTION_16
0x400bc6d	      0x48897c2458	             mov qword [rsp + 0x58], rdi	      4366	option.c	FUNCTION_16
0x400bc72	        0x89742404	                mov dword [rsp + 4], esi	      4366	option.c	FUNCTION_16
0x400bc76	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4366	option.c	FUNCTION_16
0x400bc7f	    0x48899c24d800	             mov qword [rsp + 0xd8], rbx	      4366	option.c	FUNCTION_16
0x400bc87	            0x31db	                            xor ebx, ebx	      4366	option.c	FUNCTION_16
0x400bc89	          0x803f00	                       cmp byte [rdi], 0	      4387	option.c	FUNCTION_16	IF_1
0x400bc8c	            0x7517	                           jne 0x400bca5	      4387	option.c	FUNCTION_16	IF_1
0x400bc8e	      0xbf00000000	                              mov edi, 0	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x400bc93	      0xe80e6effff	                    call sym.showoptions	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x400bc98	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4390	option.c	FUNCTION_16	IF_1
0x400bca0	      0xe9cd150000	                           jmp 0x400d272	      4391	option.c	FUNCTION_16	IF_1
0x400bca5	          0x4989fe	                            mov r14, rdi	      4391	option.c	FUNCTION_16	IF_1
0x400bca8	    0xc74424340000	               mov dword [rsp + 0x34], 0	      4391	option.c	FUNCTION_16	IF_1
0x400bcb0	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4391	option.c	FUNCTION_16	IF_1
0x400bcb8	    0x41bf00000000	                             mov r15d, 0	      4391	option.c	FUNCTION_16	IF_1
0x400bcbe	        0x8b442404	                mov eax, dword [rsp + 4]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400bcc2	          0xc1e805	                              shr eax, 5	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400bcc5	          0x83e001	                              and eax, 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400bcc8	        0x88442457	               mov byte [rsp + 0x57], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400bccc	      0xbf00000000	                              mov edi, 0	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcd1	      0xb903000000	                              mov ecx, 3	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcd6	          0x4c89f6	                            mov rsi, r14	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcd9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcdb	           0xf97c2	                                 seta dl	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcde	           0xf92c0	                                 setb al	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bce1	            0x38c2	                              cmp dl, al	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bce3	            0x7578	                           jne 0x400bd5d	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bce5	      0xe800000000	                          call 0x400bcea	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcea	      0x410fb65603	               movzx edx, byte [r14 + 3]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcef	          0x488b00	                    mov rax, qword [rax]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcf2	      0xf644500104	         test byte [rax + rdx*2 + 1], 4 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcf7	            0x7564	                           jne 0x400bd5d	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400bcf9	      0xf644240408	                  test byte [rsp + 4], 8	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400bcfe	     0xf859f000000	                           jne 0x400bda3	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400bd04	        0x498d4603	                      lea rax, [r14 + 3]	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400bd08	      0x4889442458	             mov qword [rsp + 0x58], rax	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400bd0d	      0x41807e0326	                cmp byte [r14 + 3], 0x26	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400bd12	            0x752e	                           jne 0x400bd42	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400bd14	        0x4983c604	                              add r14, 4	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400bd18	      0x4c89742458	             mov qword [rsp + 0x58], r14	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400bd1d	        0x8b7c2404	                mov edi, dword [rsp + 4]	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400bd21	          0x83cf01	                               or edi, 1	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400bd24	      0xe8b182ffff	            call sym.set_options_default	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400bd29	      0xe86676ffff	                 call sym.didset_options	      4412	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_5
0x400bd2e	      0xe85367ffff	                call sym.didset_options2	      4413	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_6
0x400bd33	      0xbf32000000	                           mov edi, 0x32	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400bd38	      0xe800000000	                          call 0x400bd3d	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400bd3d	      0xe915150000	                           jmp 0x400d257	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400bd42	        0x8b742404	                mov esi, dword [rsp + 4]	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400bd46	      0xbf01000000	                              mov edi, 1	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400bd4b	      0xe8566dffff	                    call sym.showoptions	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400bd50	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400bd58	      0xe9fa140000	                           jmp 0x400d257	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400bd5d	      0xbf00000000	                              mov edi, 0	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd62	      0xb907000000	                              mov ecx, 7	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd67	          0x4c89f6	                            mov rsi, r14	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd6a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd6c	           0xf97c2	                                 seta dl	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd6f	           0xf92c0	                                 setb al	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd72	            0x38c2	                              cmp dl, al	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd74	            0x752d	                           jne 0x400bda3	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd76	      0xf644240408	                  test byte [rsp + 4], 8	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd7b	            0x7526	                           jne 0x400bda3	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400bd7d	        0x8b742404	                mov esi, dword [rsp + 4]	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400bd81	      0xbf02000000	                              mov edi, 2	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400bd86	      0xe81b6dffff	                    call sym.showoptions	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400bd8b	      0xe800000000	                          call 0x400bd90	      4425	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_11
0x400bd90	    0x488344245807	               add qword [rsp + 0x58], 7	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400bd96	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4426	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400bd9e	      0xe9b4140000	                           jmp 0x400d257	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400bda3	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bda8	      0xb902000000	                              mov ecx, 2	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdad	          0x4c89f6	                            mov rsi, r14	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdb0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdb2	           0xf97c2	                                 seta dl	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdb5	           0xf92c0	                                 setb al	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdb8	            0x38c2	                              cmp dl, al	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdba	            0x752c	                           jne 0x400bde8	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdbc	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdc1	      0xb906000000	                              mov ecx, 6	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdc6	          0x4c89f6	                            mov rsi, r14	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdc9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdcb	           0xf97c2	                                 seta dl	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdce	           0xf92c0	                                 setb al	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdd1	            0x38c2	                              cmp dl, al	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdd3	            0x7413	                            je 0x400bde8	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400bdd5	        0x498d4602	                      lea rax, [r14 + 2]	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400bdd9	      0x4889442458	             mov qword [rsp + 0x58], rax	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400bdde	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4434	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400bde6	            0xeb32	                           jmp 0x400be1a	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400bde8	      0xbf00000000	                              mov edi, 0	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bded	      0xb903000000	                              mov ecx, 3	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bdf2	          0x4c89f6	                            mov rsi, r14	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bdf5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bdf7	           0xf97c2	                                 seta dl	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bdfa	           0xf92c0	                                 setb al	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400bdfd	    0xc74424100100	               mov dword [rsp + 0x10], 1	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400be05	            0x38c2	                              cmp dl, al	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400be07	            0x7511	                           jne 0x400be1a	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400be09	        0x498d4603	                      lea rax, [r14 + 3]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400be0d	      0x4889442458	             mov qword [rsp + 0x58], rax	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400be12	    0xc74424100200	               mov dword [rsp + 0x10], 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400be1a	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400be1f	           0xfb601	                   movzx eax, byte [rcx]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400be22	            0x3c3c	                            cmp al, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400be24	     0xf85c0000000	                           jne 0x400beea	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400be2a	         0xfb64101	               movzx eax, byte [rcx + 1]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be2e	            0x3c74	                            cmp al, 0x74	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be30	            0x7414	                            je 0x400be46	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be32	            0x84c0	                             test al, al	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be34	            0x7409	                            je 0x400be3f	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be36	      0xbd01000000	                              mov ebp, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be3b	            0x3c3e	                            cmp al, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be3d	            0x752f	                           jne 0x400be6e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be3f	      0xbd01000000	                              mov ebp, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be44	            0xeb3a	                           jmp 0x400be80	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be46	      0xbd01000000	                              mov ebp, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be4b	        0x8079025f	                cmp byte [rcx + 2], 0x5f	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be4f	            0x751d	                           jne 0x400be6e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be51	        0x80790300	                   cmp byte [rcx + 3], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be55	            0x7412	                            je 0x400be69	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be57	      0xbd05000000	                              mov ebp, 5	      4451	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be5c	        0x80790400	                   cmp byte [rcx + 4], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be60	            0x751e	                           jne 0x400be80	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be62	      0xbd01000000	                              mov ebp, 1	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be67	            0xeb05	                           jmp 0x400be6e	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be69	      0xbd01000000	                              mov ebp, 1	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400be6e	          0x83c501	                              add ebp, 1	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be71	          0x4863c5	                         movsxd rax, ebp	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be74	         0xfb60401	             movzx eax, byte [rcx + rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be78	            0x84c0	                             test al, al	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be7a	            0x7404	                            je 0x400be80	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be7c	            0x3c3e	                            cmp al, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be7e	            0x75ee	                           jne 0x400be6e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400be80	          0x4c63ed	                         movsxd r13, ebp	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400be83	          0x4c01e9	                            add rcx, r13	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400be86	    0x41bc00000000	                             mov r12d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400be8c	          0x80393e	                    cmp byte [rcx], 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400be8f	     0xf85d6150000	                           jne 0x400d46b	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400be95	          0xc60100	                       mov byte [rcx], 0	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400be98	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400be9d	        0x80780174	                cmp byte [rax + 1], 0x74	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400bea1	     0xf853f140000	                           jne 0x400d2e6	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400bea7	        0x8078025f	                cmp byte [rax + 2], 0x5f	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400beab	     0xf8535140000	                           jne 0x400d2e6	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400beb1	        0x488d7801	                      lea rdi, [rax + 1]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400beb5	      0xe85d44ffff	                     call sym.findoption	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400beba	            0x89c3	                            mov ebx, eax	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400bebc	          0x83c501	                              add ebp, 1	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400bebf	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400bec4	      0x42c604283e	              mov byte [rax + r13], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400bec9	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400becc	     0xf85a4000000	                           jne 0x400bf76	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400bed2	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400bed7	        0x488d7801	                      lea rdi, [rax + 1]	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400bedb	      0xe83567ffff	                call sym.find_key_option	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400bee0	      0xbbffffffff	                     mov ebx, 0xffffffff	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400bee5	      0xe991000000	                           jmp 0x400bf7b	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400beea	      0xbd00000000	                              mov ebp, 0	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400beef	            0x3c74	                            cmp al, 0x74	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bef1	            0x7528	                           jne 0x400bf1b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bef3	        0x8079015f	                cmp byte [rcx + 1], 0x5f	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bef7	            0x7522	                           jne 0x400bf1b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bef9	        0x80790200	                   cmp byte [rcx + 2], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400befd	            0x7417	                            je 0x400bf16	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400beff	      0xbd04000000	                              mov ebp, 4	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bf04	        0x80790300	                   cmp byte [rcx + 3], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bf08	            0x7534	                           jne 0x400bf3e	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bf0a	      0xbd00000000	                              mov ebp, 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bf0f	            0xeb0a	                           jmp 0x400bf1b	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400bf11	          0x83c501	                              add ebp, 1	      4480	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3
0x400bf14	            0xeb05	                           jmp 0x400bf1b	      4480	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3
0x400bf16	      0xbd00000000	                              mov ebp, 0	      4480	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3
0x400bf1b	          0x4863c5	                         movsxd rax, ebp	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf1e	         0xfb61401	             movzx edx, byte [rcx + rax]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf22	            0x89d0	                            mov eax, edx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf24	          0x83e0df	                     and eax, 0xffffffdf	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf27	          0x83e841	                           sub eax, 0x41	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf2a	            0x3c19	                            cmp al, 0x19	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf2c	            0x76e3	                           jbe 0x400bf11	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf2e	           0xfb6c2	                           movzx eax, dl	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf31	          0x83e830	                           sub eax, 0x30	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf34	          0x83f809	                              cmp eax, 9	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf37	            0x76d8	                           jbe 0x400bf11	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf39	          0x80fa5f	                            cmp dl, 0x5f	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf3c	            0x74d3	                            je 0x400bf11	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400bf3e	          0x4c63e5	                         movsxd r12, ebp	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf41	          0x4c01e1	                            add rcx, r12	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf44	        0x440fb629	                  movzx r13d, byte [rcx]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf48	          0xc60100	                       mov byte [rcx], 0	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf4b	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400bf50	      0xe8c243ffff	                     call sym.findoption	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400bf55	            0x89c3	                            mov ebx, eax	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400bf57	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf5c	        0x46882c20	              mov byte [rax + r12], r13b	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400bf60	      0xb800000000	                              mov eax, 0	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bf65	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400bf68	            0x7511	                           jne 0x400bf7b	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400bf6a	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400bf6f	      0xe8a166ffff	                call sym.find_key_option	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400bf74	            0xeb05	                           jmp 0x400bf7b	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400bf76	      0xb800000000	                              mov eax, 0	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bf7b	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bf80	          0x4863cd	                         movsxd rcx, ebp	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bf83	      0x440fb62c0e	            movzx r13d, byte [rsi + rcx]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bf88	        0x4180fd20	                          cmp r13b, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf8c	            0x7406	                            je 0x400bf94	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf8e	        0x4180fd09	                             cmp r13b, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf92	            0x7516	                           jne 0x400bfaa	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf94	          0x83c501	                              add ebp, 1	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x400bf97	          0x4863cd	                         movsxd rcx, ebp	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf9a	         0xfb6140e	             movzx edx, byte [rsi + rcx]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bf9e	          0x80fa20	                            cmp dl, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfa1	            0x74f1	                            je 0x400bf94	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfa3	          0x80fa09	                               cmp dl, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfa6	            0x74ec	                            je 0x400bf94	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfa8	            0xeb03	                           jmp 0x400bfad	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfaa	          0x4489ea	                           mov edx, r13d	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400bfad	            0x84d2	                             test dl, dl	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400bfaf	            0x7474	                            je 0x400c025	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400bfb1	      0x807c0e013d	         cmp byte [rsi + rcx + 1], 0x3d 	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400bfb6	     0xf8583000000	                           jne 0x400c03f	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400bfbc	          0x80fa2b	                            cmp dl, 0x2b	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400bfbf	            0x7520	                           jne 0x400bfe1	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400bfc1	          0x83c501	                              add ebp, 1	      4504	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400bfc4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bfcc	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bfd4	    0xc74424140100	               mov dword [rsp + 0x14], 1	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400bfdc	      0xe990000000	                           jmp 0x400c071	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400bfe1	          0x80fa5e	                            cmp dl, 0x5e	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400bfe4	            0x751d	                           jne 0x400c003	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400bfe6	          0x83c501	                              add ebp, 1	      4509	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400bfe9	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400bff1	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400bff9	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c001	            0xeb6e	                           jmp 0x400c071	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c003	          0x80fa2d	                            cmp dl, 0x2d	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400c006	            0x7551	                           jne 0x400c059	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400c008	          0x83c501	                              add ebp, 1	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400c00b	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4513	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400c013	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c01b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c023	            0xeb4c	                           jmp 0x400c071	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c025	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c02d	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c035	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c03d	            0xeb32	                           jmp 0x400c071	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c03f	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c047	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c04f	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c057	            0xeb18	                           jmp 0x400c071	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c059	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c061	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c069	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c071	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400c074	            0x750e	                           jne 0x400c084	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400c076	    0x41bc00000000	                             mov r12d, 0	      4521	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18	CALL_21
0x400c07c	            0x85c0	                           test eax, eax	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400c07e	     0xf84e7130000	                            je 0x400d46b	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400c084	          0x4c63e5	                         movsxd r12, ebp	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c087	      0x420fb62c26	             movzx ebp, byte [rsi + r12]	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c08c	            0x85db	                           test ebx, ebx	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c08e	            0x7874	                            js 0x400c104	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c090	          0x4863c3	                         movsxd rax, ebx	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400c093	        0x48c1e006	                              shl rax, 6	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400c097	    0x4883b8000000	                      cmp qword [rax], 0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400c09f	            0x7537	                           jne 0x400c0d8	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400c0a1	            0x89ee	                            mov esi, ebp	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400c0a3	      0xbf00000000	                              mov edi, 0	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400c0a8	      0xe800000000	                          call 0x400c0ad	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400c0ad	          0x4885c0	                           test rax, rax	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400c0b0	     0xf8574130000	                           jne 0x400d42a	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400c0b6	          0x4863c3	                         movsxd rax, ebx	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0b9	        0x48c1e006	                              shl rax, 6	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0bd	    0xf68000000000	                      test byte [rax], 1	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0c4	     0xf8473130000	                            je 0x400d43d	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0ca	          0x83fd3f	                           cmp ebp, 0x3f	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0cd	     0xf8557130000	                           jne 0x400d42a	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0d3	      0xe965130000	                           jmp 0x400d43d	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400c0d8	          0x4863fb	                         movsxd rdi, ebx	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c0db	        0x48c1e706	                              shl rdi, 6	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c0df	    0x4881c7000000	                              add rdi, 0	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c0e6	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c0ea	      0x4889442408	                mov qword [rsp + 8], rax	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400c0ef	        0x8b742404	                mov esi, dword [rsp + 4]	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400c0f3	      0xe8bc55ffff	                 call sym.get_varp_scope	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400c0f8	          0x4989c7	                            mov r15, rax	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400c0fb	      0xf644240410	               test byte [rsp + 4], 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c100	            0x752a	                           jne 0x400c12c	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c102	            0xeb42	                           jmp 0x400c146	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c104	            0x85c0	                           test eax, eax	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400c106	            0x7916	                           jns 0x400c11e	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400c108	            0x89c2	                            mov edx, eax	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400c10a	            0xf7da	                                 neg edx	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400c10c	        0x88542470	               mov byte [rsp + 0x70], dl	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400c110	            0xf7d8	                                 neg eax	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400c112	          0xc1e808	                              shr eax, 8	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400c115	        0x88442471	               mov byte [rsp + 0x71], al	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400c119	      0xe95a130000	                           jmp 0x400d478	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400c11e	      0xc6442470f2	            mov byte [rsp + 0x70], 0xf2 	      4551	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400c123	        0x88442471	               mov byte [rsp + 0x71], al	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400c127	      0xe94c130000	                           jmp 0x400d478	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400c12c	          0x4863c3	                         movsxd rax, ebx	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c12f	        0x48c1e006	                              shl rax, 6	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c133	    0x4883b8000000	     cmp qword [rax], 0xffffffffffffffff	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c13b	     0xf85e9120000	                           jne 0x400d42a	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c141	      0xe947130000	                           jmp 0x400d48d	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400c146	            0x89d8	                            mov eax, ebx	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c148	            0xf7d0	                                 not eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c14a	          0xc1e81f	                           shr eax, 0x1f	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c14d	        0x88442420	               mov byte [rsp + 0x20], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c151	      0x807c245700	                cmp byte [rsp + 0x57], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c156	            0x7419	                            je 0x400c171	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c158	            0x84c0	                             test al, al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c15a	            0x7415	                            je 0x400c171	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c15c	          0x4863c3	                         movsxd rax, ebx	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c15f	        0x48c1e006	                              shl rax, 6	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c163	    0x4883b8000000	     cmp qword [rax], 0xffffffffffffffff	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c16b	     0xf84b9120000	                            je 0x400d42a	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c171	      0xf644240408	                  test byte [rsp + 4], 8	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400c176	            0x7461	                            je 0x400c1d9	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400c178	    0x48f744240800	        test qword [rsp + 8], 0x2080000 	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400c181	            0x741c	                            je 0x400c19f	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400c183	      0xba05000000	                              mov edx, 5	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400c188	      0xbe00000000	                              mov esi, 0	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400c18d	      0xbf00000000	                              mov edi, 0	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400c192	      0xe800000000	                          call 0x400c197	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400c197	          0x4989c4	                            mov r12, rax	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400c19a	      0xe9730f0000	                           jmp 0x400d112	      4573	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400c19f	    0x488b05000000	            mov rax, qword [0x0400c1a6] 	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1a6	    0x83b8c0010000	              cmp dword [rax + 0x1c0], 0	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1ad	            0x742a	                            je 0x400c1d9	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1af	      0x807c242000	                cmp byte [rsp + 0x20], 0	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1b4	            0x7423	                            je 0x400c1d9	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1b6	          0x4863c3	                         movsxd rax, ebx	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1b9	        0x48c1e006	                              shl rax, 6	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1bd	    0x8b8000000000	                    mov eax, dword [rax]	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1c3	      0x3d0e200000	                         cmp eax, 0x200e	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1c8	     0xf845c120000	                            je 0x400d42a	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1ce	      0x3d24200000	                         cmp eax, 0x2024	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1d3	     0xf8451120000	                            je 0x400d42a	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400c1d9	    0x833d00000000	               cmp dword [0x0400c1e0], 0	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400c1e0	            0x7427	                            je 0x400c209	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400c1e2	    0x48f744240800	          test qword [rsp + 8], 0x80000 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400c1eb	            0x741c	                            je 0x400c209	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400c1ed	      0xba05000000	                              mov edx, 5	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400c1f2	      0xbe00000000	                              mov esi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400c1f7	      0xbf00000000	                              mov edi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400c1fc	      0xe800000000	                          call 0x400c201	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400c201	          0x4989c4	                            mov r12, rax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400c204	      0xe9090f0000	                           jmp 0x400d112	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400c209	        0x450fb6ed	                        movzx r13d, r13b	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400c20d	            0x89ee	                            mov esi, ebp	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400c20f	      0xbf00000000	                              mov edi, 0	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400c214	      0xe800000000	                          call 0x400c219	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400c219	          0x4885c0	                           test rax, rax	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400c21c	     0xf848b000000	                            je 0x400c2ad	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400c222	      0x4c03642458	             add r12, qword [rsp + 0x58]	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400c227	      0x4c89642458	             mov qword [rsp + 0x58], r12	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400c22c	    0x8b0500000000	            mov eax, dword [0x0400c232] 	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400c232	        0x89442434	             mov dword [rsp + 0x34], eax	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400c236	          0x83fd26	                           cmp ebp, 0x26	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c239	            0x754c	                           jne 0x400c287	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c23b	    0x41807c240176	                cmp byte [r12 + 1], 0x76	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c241	     0xf85ac100000	                           jne 0x400d2f3	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c247	    0x41807c240269	                cmp byte [r12 + 2], 0x69	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c24d	     0xf85a0100000	                           jne 0x400d2f3	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400c253	    0x41807c24036d	                cmp byte [r12 + 3], 0x6d	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c259	            0x7516	                           jne 0x400c271	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c25b	        0x4983c403	                              add r12, 3	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c25f	      0x4c89642458	             mov qword [rsp + 0x58], r12	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c264	    0xc74424340000	               mov dword [rsp + 0x34], 0	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c26c	      0xe982100000	                           jmp 0x400d2f3	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400c271	        0x4983c402	                              add r12, 2	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400c275	      0x4c89642458	             mov qword [rsp + 0x58], r12	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400c27a	    0xc74424340100	               mov dword [rsp + 0x34], 1	      4612	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400c282	      0xe96c100000	                           jmp 0x400d2f3	      4612	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400c287	            0x89ee	                            mov esi, ebp	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400c289	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400c28e	      0xe800000000	                          call 0x400c293	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400c293	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400c296	            0x7415	                            je 0x400c2ad	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400c298	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c29d	         0xfb64001	               movzx eax, byte [rax + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c2a1	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c2a3	            0x7408	                            je 0x400c2ad	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c2a5	            0x3c09	                               cmp al, 9	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c2a7	     0xf8598110000	                           jne 0x400d445	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400c2ad	          0x83fd3f	                           cmp ebp, 0x3f	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2b0	            0x742b	                            je 0x400c2dd	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2b2	      0x837c241001	               cmp dword [rsp + 0x10], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2b7	     0xf8519120000	                           jne 0x400d4d6	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2bd	            0x89ee	                            mov esi, ebp	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400c2bf	      0xbf00000000	                              mov edi, 0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400c2c4	      0xe800000000	                          call 0x400c2c9	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400c2c9	          0x4885c0	                           test rax, rax	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400c2cc	     0xf8524010000	                           jne 0x400c3f6	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400c2d2	      0xf644240801	                  test byte [rsp + 8], 1	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2d7	     0xf8524010000	                           jne 0x400c401	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400c2dd	      0x837c243000	               cmp dword [rsp + 0x30], 0	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400c2e2	            0x740c	                            je 0x400c2f0	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400c2e4	      0xbf0a000000	                            mov edi, 0xa	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400c2e9	      0xe800000000	                          call 0x400c2ee	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400c2ee	            0xeb12	                           jmp 0x400c302	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400c2f0	      0xbf01000000	                              mov edi, 1	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400c2f5	      0xe800000000	                          call 0x400c2fa	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400c2fa	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4641	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13
0x400c302	      0x807c242000	                cmp byte [rsp + 0x20], 0	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x400c307	     0xf8494000000	                            je 0x400c3a1	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x400c30d	          0x4863fb	                         movsxd rdi, ebx	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400c310	        0x48c1e706	                              shl rdi, 6	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400c314	    0x4881c7000000	                              add rdi, 0	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400c31b	        0x8b742404	                mov esi, dword [rsp + 4]	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400c31f	      0xe8ad66ffff	                     call sym.showoneopt	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400c324	    0x48833d000000	               cmp qword [0x0400c32c], 0	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x400c32c	     0xf8e94000000	                           jle 0x400c3c6	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x400c332	          0x4863c3	                         movsxd rax, ebx	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400c335	        0x48c1e006	                              shl rax, 6	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400c339	    0x4c3bb8000000	                    cmp r15, qword [rax]	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400c340	            0x7514	                           jne 0x400c356	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400c342	          0x4863c3	                         movsxd rax, ebx	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400c345	        0x48c1e006	                              shl rax, 6	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400c349	    0x8bb800000000	                    mov edi, dword [rax]	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400c34f	      0xe800000000	                          call 0x400c354	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400c354	            0xeb70	                           jmp 0x400c3c6	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400c356	          0x4863c3	                         movsxd rax, ebx	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400c359	        0x48c1e006	                              shl rax, 6	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400c35d	    0x8b8000000000	                    mov eax, dword [rax]	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400c363	          0xf6c420	                           test ah, 0x20	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400c366	            0x741a	                            je 0x400c382	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400c368	      0x25ff0f0000	                          and eax, 0xfff	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400c36d	    0x488b15000000	            mov rdx, qword [0x0400c374] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400c374	    0x8bbc82d00200	   mov edi, dword [rdx + rax*4 + 0x2d0] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400c37b	      0xe800000000	                          call 0x400c380	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400c380	            0xeb44	                           jmp 0x400c3c6	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400c382	          0xf6c440	                           test ah, 0x40	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400c385	            0x743f	                            je 0x400c3c6	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400c387	      0x25ff0f0000	                          and eax, 0xfff	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400c38c	    0x488b15000000	            mov rdx, qword [0x0400c393] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400c393	    0x8bbc82ac1200	  mov edi, dword [rdx + rax*4 + 0x12ac] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400c39a	      0xe800000000	                          call 0x400c39f	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400c39f	            0xeb25	                           jmp 0x400c3c6	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400c3a1	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x400c3a6	      0xe800000000	                          call 0x400c3ab	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x400c3ab	          0x4885c0	                           test rax, rax	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x400c3ae	     0xf8499100000	                            je 0x400d44d	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x400c3b4	      0xba01000000	                              mov edx, 1	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400c3b9	          0x4889c6	                            mov rsi, rax	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400c3bc	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400c3c1	      0xe800000000	                          call 0x400c3c6	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400c3c6	          0x83fd3f	                           cmp ebp, 0x3f	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400c3c9	     0xf845b100000	                            je 0x400d42a	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400c3cf	            0x85ed	                           test ebp, ebp	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400c3d1	     0xf8453100000	                            je 0x400d42a	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400c3d7	        0x4183fd20	                          cmp r13d, 0x20	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400c3db	     0xf8449100000	                            je 0x400d42a	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400c3e1	    0x41bc00000000	                             mov r12d, 0	      4676	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400c3e7	        0x4183fd09	                             cmp r13d, 9	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400c3eb	     0xf857a100000	                           jne 0x400d46b	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400c3f1	      0xe934100000	                           jmp 0x400d42a	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400c3f6	      0xf644240801	                  test byte [rsp + 8], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400c3fb	     0xf8402010000	                            je 0x400c503	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400c401	          0x83fd3d	                           cmp ebp, 0x3d	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400c404	     0xf844b100000	                            je 0x400d455	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400c40a	          0x83fd3a	                           cmp ebp, 0x3a	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400c40d	     0xf8442100000	                            je 0x400d455	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400c413	          0x83fd21	                           cmp ebp, 0x21	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c416	            0x7512	                           jne 0x400c42a	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c418	          0x418b07	                    mov eax, dword [r15]	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c41b	          0x83f001	                              xor eax, 1	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c41e	            0x4898	                                    cdqe	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c420	      0x4889442468	             mov qword [rsp + 0x68], rax	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c425	      0xe9bf000000	                           jmp 0x400c4e9	      4694	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400c42a	          0x83fd26	                           cmp ebp, 0x26	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c42d	            0x7535	                           jne 0x400c464	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c42f	      0x488b442408	                mov rax, qword [rsp + 8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c434	        0x48c1e80a	                            shr rax, 0xa	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c438	        0x4883f001	                              xor rax, 1	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c43c	      0x837c243400	               cmp dword [rsp + 0x34], 0	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c441	           0xf94c2	                                 sete dl	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c444	           0xfb6d2	                           movzx edx, dl	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c447	          0x4821d0	                            and rax, rdx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c44a	          0x4863d3	                         movsxd rdx, ebx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c44d	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c452	    0x486304c50000	               movsxd rax, dword [rax*8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c45a	      0x4889442468	             mov qword [rsp + 0x68], rax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c45f	      0xe985000000	                           jmp 0x400c4e9	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400c464	          0x83fd3c	                           cmp ebp, 0x3c	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400c467	            0x7546	                           jne 0x400c4af	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400c469	    0x488b05000000	            mov rax, qword [0x0400c470] 	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c470	    0x480518160000	                         add rax, 0x1618	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c476	          0x4939c7	                            cmp r15, rax	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c479	            0x7512	                           jne 0x400c48d	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c47b	      0x837c240404	                  cmp dword [rsp + 4], 4	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c480	            0x750b	                           jne 0x400c48d	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c482	    0x48c7442468ff	mov qword [rsp + 0x68], 0xffffffffffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c48b	            0xeb5c	                           jmp 0x400c4e9	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400c48d	          0x4863fb	                         movsxd rdi, ebx	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c490	        0x48c1e706	                              shl rdi, 6	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c494	    0x4881c7000000	                              add rdi, 0	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c49b	      0xbe02000000	                              mov esi, 2	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c4a0	      0xe80f52ffff	                 call sym.get_varp_scope	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c4a5	          0x486300	                 movsxd rax, dword [rax]	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c4a8	      0x4889442468	             mov qword [rsp + 0x68], rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c4ad	            0xeb3a	                           jmp 0x400c4e9	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400c4af	            0x85ed	                           test ebp, ebp	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4b1	            0x7416	                            je 0x400c4c9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4b3	        0x4183fd20	                          cmp r13d, 0x20	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4b7	            0x7410	                            je 0x400c4c9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4b9	    0x41bc00000000	                             mov r12d, 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400c4bf	        0x4183fd09	                             cmp r13d, 9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4c3	     0xf85a20f0000	                           jne 0x400d46b	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400c4c9	      0x837c241002	               cmp dword [rsp + 0x10], 2	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4ce	            0x750f	                           jne 0x400c4df	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4d0	          0x418b07	                    mov eax, dword [r15]	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4d3	          0x83f001	                              xor eax, 1	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4d6	            0x4898	                                    cdqe	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4d8	      0x4889442468	             mov qword [rsp + 0x68], rax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4dd	            0xeb0a	                           jmp 0x400c4e9	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400c4df	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x400c4e4	      0x4889442468	             mov qword [rsp + 0x68], rax	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x400c4e9	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4ed	        0x8b542468	            mov edx, dword [rsp + 0x68] 	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4f1	          0x4c89fe	                            mov rsi, r15	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4f4	            0x89df	                            mov edi, ebx	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4f6	      0xe853e8ffff	                call sym.set_bool_option	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4fb	          0x4989c4	                            mov r12, rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c4fe	      0xe9e10b0000	                           jmp 0x400d0e4	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400c503	            0x89ee	                            mov esi, ebp	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400c505	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400c50a	      0xe800000000	                          call 0x400c50f	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400c50f	      0x837c241001	               cmp dword [rsp + 0x10], 1	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400c514	     0xf85430f0000	                           jne 0x400d45d	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400c51a	          0x4885c0	                           test rax, rax	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400c51d	     0xf843a0f0000	                            je 0x400d45d	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400c523	      0xf644240802	                  test byte [rsp + 8], 2	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400c528	     0xf84c2010000	                            je 0x400c6f0	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400c52e	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400c533	        0x488d7a01	                      lea rdi, [rdx + 1]	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400c537	      0x48897c2458	             mov qword [rsp + 0x58], rdi	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400c53c	          0x83fd26	                           cmp ebp, 0x26	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c53f	            0x7535	                           jne 0x400c576	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c541	      0x488b442408	                mov rax, qword [rsp + 8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c546	        0x48c1e80a	                            shr rax, 0xa	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c54a	        0x4883f001	                              xor rax, 1	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c54e	      0x837c243400	               cmp dword [rsp + 0x34], 0	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c553	           0xf94c2	                                 sete dl	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c556	           0xfb6d2	                           movzx edx, dl	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c559	          0x4821d0	                            and rax, rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c55c	          0x4863d3	                         movsxd rdx, ebx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c55f	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c564	    0x488b04c50000	                  mov rax, qword [rax*8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c56c	      0x4889442468	             mov qword [rsp + 0x68], rax	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c571	      0xe918010000	                           jmp 0x400c68e	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400c576	          0x83fd3c	                           cmp ebp, 0x3c	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x400c579	            0x754c	                           jne 0x400c5c7	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x400c57b	    0x488b05000000	            mov rax, qword [0x0400c582] 	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c582	    0x480548160000	                         add rax, 0x1648	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c588	          0x4939c7	                            cmp r15, rax	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c58b	            0x7515	                           jne 0x400c5a2	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c58d	      0x837c240404	                  cmp dword [rsp + 4], 4	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c592	            0x750e	                           jne 0x400c5a2	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c594	    0x48c7442468c0	mov qword [rsp + 0x68], 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c59d	      0xe9ec000000	                           jmp 0x400c68e	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400c5a2	          0x4863fb	                         movsxd rdi, ebx	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5a5	        0x48c1e706	                              shl rdi, 6	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5a9	    0x4881c7000000	                              add rdi, 0	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5b0	      0xbe02000000	                              mov esi, 2	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5b5	      0xe8fa50ffff	                 call sym.get_varp_scope	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5ba	          0x488b00	                    mov rax, qword [rax]	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5bd	      0x4889442468	             mov qword [rsp + 0x68], rax	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5c2	      0xe9c7000000	                           jmp 0x400c68e	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400c5c7	    0x4981ff000000	                              cmp r15, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5ce	            0x7409	                            je 0x400c5d9	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5d0	    0x4981ff000000	                              cmp r15, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5d7	            0x7558	                           jne 0x400c631	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5d9	         0xfb64201	               movzx eax, byte [rdx + 1]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5dd	            0x3c3c	                            cmp al, 0x3c	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5df	            0x7425	                            je 0x400c606	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5e1	            0x3c5e	                            cmp al, 0x5e	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5e3	            0x7421	                            je 0x400c606	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5e5	            0x84c0	                             test al, al	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5e7	     0xf841f0b0000	                            je 0x400d10c	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400c5ed	         0xfb64a02	               movzx ecx, byte [rdx + 2]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400c5f1	          0xf6c1df	                           test cl, 0xdf	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400c5f4	            0x7405	                            je 0x400c5fb	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400c5f6	          0x80f909	                               cmp cl, 9	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400c5f9	            0x7536	                           jne 0x400c631	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400c5fb	           0xfb6c0	                           movzx eax, al	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400c5fe	          0x83e830	                           sub eax, 0x30	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400c601	          0x83f809	                              cmp eax, 9	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400c604	            0x762b	                           jbe 0x400c631	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400c606	      0xbe00000000	                              mov esi, 0	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400c60b	      0xe800000000	                          call 0x400c610	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400c610	            0x4898	                                    cdqe	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400c612	      0x4889442468	             mov qword [rsp + 0x68], rax	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400c617	    0x4981ff000000	                              cmp r15, 0	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c61e	            0x746e	                            je 0x400c68e	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c620	    0x41bc00000000	                             mov r12d, 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c626	          0x4885c0	                           test rax, rax	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c629	     0xf843c0e0000	                            je 0x400d46b	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c62f	            0xeb5d	                           jmp 0x400c68e	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400c631	         0xfb64201	               movzx eax, byte [rdx + 1]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c635	          0x8d50d0	                   lea edx, [rax - 0x30]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c638	          0x80fa09	                               cmp dl, 9	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c63b	            0x760e	                           jbe 0x400c64b	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c63d	    0x41bc00000000	                             mov r12d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400c643	            0x3c2d	                            cmp al, 0x2d	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c645	     0xf85200e0000	                           jne 0x400d46b	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400c64b	        0x4883ec08	                              sub rsp, 8	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c64f	            0x6a00	                                  push 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c651	    0x41b900000000	                              mov r9d, 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c657	      0x4c8d442478	                    lea r8, [rsp + 0x78]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c65c	      0xb907000000	                              mov ecx, 7	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c661	      0x488d542474	                   lea rdx, [rsp + 0x74]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c666	      0xbe00000000	                              mov esi, 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c66b	      0xe800000000	                          call 0x400c670	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400c670	      0x4863442474	         movsxd rax, dword [rsp + 0x74] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c675	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c67a	         0xfb60402	             movzx eax, byte [rdx + rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c67e	        0x4883c410	                           add rsp, 0x10	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c682	            0xa8df	                           test al, 0xdf	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c684	            0x7408	                            je 0x400c68e	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c686	            0x3c09	                               cmp al, 9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c688	     0xf85d70d0000	                           jne 0x400d465	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400c68e	      0x837c241400	               cmp dword [rsp + 0x14], 0	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400c693	            0x7408	                            je 0x400c69d	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400c695	          0x498b07	                    mov rax, qword [r15]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400c698	      0x4801442468	            add qword [rsp + 0x68], rax 	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400c69d	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400c6a2	            0x740e	                            je 0x400c6b2	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400c6a4	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400c6a9	        0x490faf07	                   imul rax, qword [r15]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400c6ad	      0x4889442468	             mov qword [rsp + 0x68], rax	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400c6b2	      0x837c241800	               cmp dword [rsp + 0x18], 0	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400c6b7	            0x740d	                            je 0x400c6c6	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400c6b9	          0x498b07	                    mov rax, qword [r15]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400c6bc	      0x482b442468	             sub rax, qword [rsp + 0x68]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400c6c1	      0x4889442468	             mov qword [rsp + 0x68], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400c6c6	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6cb	    0x41b850000000	                           mov r8d, 0x50	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6d1	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6d9	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6de	          0x4c89fe	                            mov rsi, r15	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6e1	            0x89df	                            mov edi, ebx	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6e3	      0xe820d7ffff	                 call sym.set_num_option	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6e8	          0x4989c4	                            mov r12, rax	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6eb	      0xe9f4090000	                           jmp 0x400d0e4	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400c6f0	      0x807c242000	                cmp byte [rsp + 0x20], 0	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c6f5	     0xf841d090000	                            je 0x400d018	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c6fb	      0xf644240406	                  test byte [rsp + 4], 6	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c700	            0x752c	                           jne 0x400c72e	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c702	          0x4863c3	                         movsxd rax, ebx	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c705	        0x48c1e006	                              shl rax, 6	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c709	    0xf68000000000	                   test byte [rax], 0x10	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c710	     0xf84fa0b0000	                            je 0x400d310	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c716	          0x4863c3	                         movsxd rax, ebx	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c719	        0x48c1e006	                              shl rax, 6	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c71d	    0x4c8bb8000000	                    mov r15, qword [rax]	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400c724	          0x498b07	                    mov rax, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c727	      0x4889442420	             mov qword [rsp + 0x20], rax	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c72c	            0xeb18	                           jmp 0x400c746	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c72e	          0x4d8b27	                    mov r12, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c731	          0x4863c3	                         movsxd rax, ebx	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c734	        0x48c1e006	                              shl rax, 6	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c738	      0x4c89642420	             mov qword [rsp + 0x20], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c73d	    0xf68000000000	                   test byte [rax], 0x10	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c744	            0x7422	                            je 0x400c768	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c746	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c74b	      0xf644240404	                  test byte [rsp + 4], 4	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c750	            0x7416	                            je 0x400c768	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400c752	          0x4863fb	                         movsxd rdi, ebx	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400c755	        0x48c1e706	                              shl rdi, 6	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400c759	    0x4881c7000000	                              add rdi, 0	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400c760	      0xe8013fffff	                       call sym.get_varp	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400c765	          0x4c8b20	                    mov r12, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400c768	          0x83fd26	                           cmp ebp, 0x26	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c76b	     0xf8580000000	                           jne 0x400c7f1	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c771	      0x488b442408	                mov rax, qword [rsp + 8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c776	        0x48c1e80a	                            shr rax, 0xa	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c77a	        0x4883f001	                              xor rax, 1	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c77e	      0x837c243400	               cmp dword [rsp + 0x34], 0	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c783	           0xf94c2	                                 sete dl	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c786	           0xfb6d2	                           movzx edx, dl	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c789	          0x4821d0	                            and rax, rdx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c78c	          0x4863d3	                         movsxd rdx, ebx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c78f	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c794	    0x488b2cc50000	                  mov rbp, qword [rax*8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400c79c	    0x4981ff000000	                              cmp r15, 0	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x400c7a3	            0x751b	                           jne 0x400c7c0	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x400c7a5	    0x833d00000000	               cmp dword [0x0400c7ac], 0	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x400c7ac	            0x740a	                            je 0x400c7b8	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x400c7ae	      0xe8de5dffff	                 call sym.gui_bg_default	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x400c7b3	          0x4889c5	                            mov rbp, rax	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x400c7b6	            0xeb08	                           jmp 0x400c7c0	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_57
0x400c7b8	      0xe8f55cffff	                call sym.term_bg_default	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x400c7bd	          0x4889c5	                            mov rbp, rax	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x400c7c0	    0x4c8b2d000000	            mov r13, qword [0x0400c7c7] 	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400c7c7	          0x4885ed	                           test rbp, rbp	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400c7ca	     0xf848f070000	                            je 0x400cf5f	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400c7d0	          0x4889ee	                            mov rsi, rbp	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400c7d3	            0x89df	                            mov edi, ebx	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400c7d5	      0xe85c57ffff	                  call sym.option_expand	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400c7da	          0x4885c0	                           test rax, rax	      4870	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400c7dd	        0x480f44c5	                          cmove rax, rbp	      4870	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400c7e1	          0x4889c7	                            mov rdi, rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400c7e4	      0xe800000000	                          call 0x400c7e9	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400c7e9	          0x4989c5	                            mov r13, rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400c7ec	      0xe96e070000	                           jmp 0x400cf5f	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400c7f1	          0x83fd3c	                           cmp ebp, 0x3c	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400c7f4	            0x7528	                           jne 0x400c81e	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400c7f6	          0x4863fb	                         movsxd rdi, ebx	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c7f9	        0x48c1e706	                              shl rdi, 6	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c7fd	    0x4881c7000000	                              add rdi, 0	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c804	      0xbe02000000	                              mov esi, 2	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c809	      0xe8a64effff	                 call sym.get_varp_scope	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c80e	          0x488b38	                    mov rdi, qword [rax]	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c811	      0xe800000000	                          call 0x400c816	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c816	          0x4989c5	                            mov r13, rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c819	      0xe941070000	                           jmp 0x400cf5f	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400c81e	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400c823	        0x488d7001	                      lea rsi, [rax + 1]	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400c827	      0x4889742428	             mov qword [rsp + 0x28], rsi	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400c82c	      0x4889742458	             mov qword [rsp + 0x58], rsi	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400c831	    0x4981ff000000	                              cmp r15, 0	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c838	            0x752d	                           jne 0x400c867	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c83a	        0xf64001df	               test byte [rax + 1], 0xdf	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c83e	            0x7527	                           jne 0x400c867	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c840	    0xc78424800000	     mov dword [rsp + 0x80], 0x6c65683a 	       110	string3.h	FUNCTION_143	CALL_3
0x400c84b	    0x66c784248400	            mov word [rsp + 0x84], 0x70 	       110	string3.h	FUNCTION_143	CALL_3
0x400c855	    0x488d84248000	                   lea rax, [rsp + 0x80]	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c85d	      0x4889442458	             mov qword [rsp + 0x58], rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c862	      0xe9e1010000	                           jmp 0x400ca48	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400c867	    0x4981ff000000	                              cmp r15, 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400c86e	     0xf8598000000	                           jne 0x400c90c	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400c874	    0x488b15000000	            mov rdx, qword [0x0400c87b] 	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400c87b	           0xfb612	                   movzx edx, byte [rdx]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400c87e	          0x83ea30	                           sub edx, 0x30	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400c881	          0x83fa09	                              cmp edx, 9	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400c884	     0xf8782000000	                            ja 0x400c90c	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400c88a	      0xbf00000000	                              mov edi, 0	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400c88f	      0xe800000000	                          call 0x400c894	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400c894	        0x89442464	             mov dword [rsp + 0x64], eax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400c898	          0x83f801	                              cmp eax, 1	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c89b	            0x7419	                            je 0x400c8b6	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c89d	          0x83f802	                              cmp eax, 2	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8a0	            0x7427	                            je 0x400c8c9	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8a2	            0x85c0	                           test eax, eax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8a4	            0x7534	                           jne 0x400c8da	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8a6	    0x488b05000000	            mov rax, qword [0x0400c8ad] 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8ad	    0x488905000000	            mov qword [0x0400c8b4], rax 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8b4	            0xeb24	                           jmp 0x400c8da	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8b6	      0xbf00000000	                              mov edi, 0	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400c8bb	      0xe800000000	                          call 0x400c8c0	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400c8c0	    0x488905000000	            mov qword [0x0400c8c7], rax 	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400c8c7	            0xeb11	                           jmp 0x400c8da	      4913	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400c8c9	      0xbf00000000	                              mov edi, 0	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400c8ce	      0xe800000000	                          call 0x400c8d3	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400c8d3	    0x488905000000	            mov qword [0x0400c8da], rax 	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400c8da	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400c8df	          0x4889ef	                            mov rdi, rbp	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400c8e2	      0xe800000000	                          call 0x400c8e7	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400c8e7	          0x4939ec	                            cmp r12, rbp	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400c8ea	    0x4c0f44250000	           cmove r12, qword [0x0400c8f2]	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400c8f2	    0x488b05000000	            mov rax, qword [0x0400c8f9] 	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400c8f9	      0x4889442420	             mov qword [rsp + 0x20], rax	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400c8fe	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400c907	      0xe93c010000	                           jmp 0x400ca48	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400c90c	    0x4981ff000000	                              cmp r15, 0	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400c913	     0xf85fc000000	                           jne 0x400ca15	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400c919	         0xfb65001	               movzx edx, byte [rax + 1]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400c91d	          0x83ea30	                           sub edx, 0x30	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400c920	          0x83fa09	                              cmp edx, 9	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400c923	     0xf87ec000000	                            ja 0x400ca15	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400c929	    0xc68424800000	                mov byte [rsp + 0x80], 0	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400c931	      0x488d7c2458	                   lea rdi, [rsp + 0x58]	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400c936	      0xe800000000	                          call 0x400c93b	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400c93b	          0x4889c5	                            mov rbp, rax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400c93e	        0x89442464	             mov dword [rsp + 0x64], eax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400c942	            0xa801	                              test al, 1	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x400c944	            0x7417	                            je 0x400c95d	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x400c946	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x400c94b	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400c950	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       148	string3.h	FUNCTION_147	CALL_3
0x400c958	      0xe800000000	                          call 0x400c95d	       148	string3.h	FUNCTION_147	CALL_3
0x400c95d	        0x40f6c502	                             test bpl, 2	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x400c961	            0x7417	                            je 0x400c97a	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x400c963	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x400c968	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400c96d	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       148	string3.h	FUNCTION_147	CALL_3
0x400c975	      0xe800000000	                          call 0x400c97a	       148	string3.h	FUNCTION_147	CALL_3
0x400c97a	        0x40f6c504	                             test bpl, 4	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x400c97e	            0x7417	                            je 0x400c997	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x400c980	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x400c985	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400c98a	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       148	string3.h	FUNCTION_147	CALL_3
0x400c992	      0xe800000000	                          call 0x400c997	       148	string3.h	FUNCTION_147	CALL_3
0x400c997	        0x40f6c508	                             test bpl, 8	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x400c99b	            0x7417	                            je 0x400c9b4	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x400c99d	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x400c9a2	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400c9a7	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       148	string3.h	FUNCTION_147	CALL_3
0x400c9af	      0xe800000000	                          call 0x400c9b4	       148	string3.h	FUNCTION_147	CALL_3
0x400c9b4	        0x40f6c510	                          test bpl, 0x10	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x400c9b8	            0x7417	                            je 0x400c9d1	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x400c9ba	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x400c9bf	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400c9c4	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       148	string3.h	FUNCTION_147	CALL_3
0x400c9cc	      0xe800000000	                          call 0x400c9d1	       148	string3.h	FUNCTION_147	CALL_3
0x400c9d1	    0x80bc24800000	                cmp byte [rsp + 0x80], 0	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x400c9d9	            0x7421	                            je 0x400c9fc	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x400c9db	      0xb800000000	                              mov eax, 0	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9e0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9e7	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9ef	            0xf2ae	              repne scasb al, byte [rdi]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9f1	          0x4889c8	                            mov rax, rcx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9f4	          0x48f7d0	                                 not rax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9f7	      0xc644047e00	          mov byte [rsp + rax + 0x7e], 0	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400c9fc	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400ca01	      0x4889442428	             mov qword [rsp + 0x28], rax	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400ca06	    0x488d84248000	                   lea rax, [rsp + 0x80]	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400ca0e	      0x4889442458	             mov qword [rsp + 0x58], rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400ca13	            0xeb33	                           jmp 0x400ca48	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400ca15	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400ca1e	        0x8078013e	                cmp byte [rax + 1], 0x3e	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca22	            0x7524	                           jne 0x400ca48	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca24	    0x4981ff000000	                              cmp r15, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca2b	            0x7409	                            je 0x400ca36	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca2d	    0x4981ff000000	                              cmp r15, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca34	            0x7512	                           jne 0x400ca48	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca36	        0x4883c002	                              add rax, 2	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca3a	      0x4889442458	             mov qword [rsp + 0x58], rax	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400ca3f	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400ca48	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca4d	      0xb800000000	                              mov eax, 0	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca52	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca59	            0xf2ae	              repne scasb al, byte [rdi]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca5b	          0x4889c8	                            mov rax, rcx	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca5e	          0x48f7d0	                                 not rax	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca61	        0x488d50ff	                      lea rdx, [rax - 1]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca65	          0x8d7a01	                      lea edi, [rdx + 1]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400ca68	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca6c	         0xb44241c	              or eax, dword [rsp + 0x1c]	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca70	        0x89442450	             mov dword [rsp + 0x50], eax	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca74	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca78	             0x9c6	                             or esi, eax	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca7a	        0x89742410	             mov dword [rsp + 0x10], esi	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca7e	            0x7415	                            je 0x400ca95	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400ca80	      0xb800000000	                              mov eax, 0	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca85	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca8c	          0x4c89e7	                            mov rdi, r12	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca8f	            0xf2ae	              repne scasb al, byte [rdi]	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca91	            0x89d7	                            mov edi, edx	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca93	            0x29cf	                            sub edi, ecx	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400ca95	      0xe800000000	                          call 0x400ca9a	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400ca9a	          0x4989c5	                            mov r13, rax	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400ca9d	          0x4885c0	                           test rax, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400caa0	     0xf84cc070000	                            je 0x400d272	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400caa6	          0x4889c5	                            mov rbp, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400caa9	            0xeb68	                           jmp 0x400cb13	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400caab	          0x80fa5c	                            cmp dl, 0x5c	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400caae	            0x750f	                           jne 0x400cabf	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400cab0	        0x80780100	                   cmp byte [rax + 1], 0	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400cab4	            0x7409	                            je 0x400cabf	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400cab6	        0x4883c001	                              add rax, 1	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400caba	      0x4889442458	             mov qword [rsp + 0x58], rax	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400cabf	    0x833d00000000	               cmp dword [0x0400cac6], 0	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cac6	            0x7433	                            je 0x400cafb	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cac8	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cacd	    0xff1500000000	                 call qword [0x0400cad3]	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cad3	        0x89442464	             mov dword [rsp + 0x64], eax	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cad7	          0x83f801	                              cmp eax, 1	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cada	            0x7e1f	                           jle 0x400cafb	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cadc	          0x4863d0	                         movsxd rdx, eax	        59	string3.h	FUNCTION_138	CALL_3
0x400cadf	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	        59	string3.h	FUNCTION_138	CALL_3
0x400cae4	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400cae7	      0xe800000000	                          call 0x400caec	        59	string3.h	FUNCTION_138	CALL_3
0x400caec	      0x4863442464	         movsxd rax, dword [rsp + 0x64] 	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400caf1	      0x4801442458	            add qword [rsp + 0x58], rax 	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400caf6	          0x4801c5	                            add rbp, rax	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400caf9	            0xeb18	                           jmp 0x400cb13	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400cafb	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb00	        0x488d5001	                      lea rdx, [rax + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb04	      0x4889542458	             mov qword [rsp + 0x58], rdx	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb09	           0xfb600	                   movzx eax, byte [rax]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb0c	          0x884500	                      mov byte [rbp], al	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb0f	        0x488d6d01	                      lea rbp, [rbp + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400cb13	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb18	           0xfb610	                   movzx edx, byte [rax]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb1b	          0xf6c2df	                           test dl, 0xdf	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb1e	            0x7405	                            je 0x400cb25	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb20	          0x80fa09	                               cmp dl, 9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb23	            0x7586	                           jne 0x400caab	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400cb25	        0xc6450000	                       mov byte [rbp], 0	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x400cb29	      0x837c241000	               cmp dword [rsp + 0x10], 0	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400cb2e	     0xf845a080000	                            je 0x400d38e	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400cb34	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400cb3d	     0xf8512080000	                           jne 0x400d355	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400cb43	            0xeb1c	                           jmp 0x400cb61	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400cb45	      0xe800000000	                          call 0x400cb4a	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400cb4a	          0x4989c5	                            mov r13, rax	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400cb4d	          0x4885c0	                           test rax, rax	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400cb50	     0xf841c070000	                            je 0x400d272	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400cb56	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_143	CALL_3
0x400cb59	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x400cb5c	      0xe800000000	                          call 0x400cb61	       110	string3.h	FUNCTION_143	CALL_3
0x400cb61	    0xc74424640000	               mov dword [rsp + 0x64], 0	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400cb69	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400cb6e	            0x750f	                           jne 0x400cb7f	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400cb70	    0x48f744240800	          test qword [rsp + 8], 0x20000 	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400cb79	     0xf8446080000	                            je 0x400d3c5	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400cb7f	      0xb800000000	                              mov eax, 0	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb84	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb8b	          0x4c89ef	                            mov rdi, r13	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb8e	            0xf2ae	              repne scasb al, byte [rdi]	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb90	          0x4889c8	                            mov rax, rcx	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb93	          0x48f7d0	                                 not rax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb96	        0x4883e801	                              sub rax, 1	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb9a	            0x89c2	                            mov edx, eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cb9c	        0x89442464	             mov dword [rsp + 0x64], eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400cba0	      0x410fb60424	                   movzx eax, byte [r12]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cba5	        0x88442456	               mov byte [rsp + 0x56], al	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cba9	            0x84c0	                             test al, al	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cbab	     0xf840c080000	                            je 0x400d3bd	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cbb1	          0x4c89e5	                            mov rbp, r12	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cbb4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cbbc	      0x488b442408	                mov rax, qword [rsp + 8]	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbc1	      0x2500800000	                         and eax, 0x8000	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbc6	      0x4889442440	             mov qword [rsp + 0x40], rax	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbcb	      0x498d442401	                      lea rax, [r12 + 1]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cbd0	      0x4889442438	             mov qword [rsp + 0x38], rax	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cbd5	          0x4863c2	                         movsxd rax, edx	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cbd8	      0x4889442448	             mov qword [rsp + 0x48], rax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cbdd	          0x4939ec	                            cmp r12, rbp	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbe0	            0x7419	                            je 0x400cbfb	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbe2	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbe8	            0x7411	                            je 0x400cbfb	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbea	        0x807dff2c	                cmp byte [rbp - 1], 0x2c	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbee	            0x7539	                           jne 0x400cc29	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbf0	      0xf644241001	               test byte [rsp + 0x10], 1	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbf5	     0xf85e8080000	                           jne 0x400d4e3	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cbfb	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc00	          0x4c89ee	                            mov rsi, r13	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc03	          0x4889ef	                            mov rdi, rbp	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc06	      0xe800000000	                          call 0x400cc0b	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc0b	            0x85c0	                           test eax, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc0d	            0x751a	                           jne 0x400cc29	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400cc0f	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc15	            0x747e	                            je 0x400cc95	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc17	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc1c	       0xfb6440500	             movzx eax, byte [rbp + rax]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc21	            0x84c0	                             test al, al	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc23	            0x7470	                            je 0x400cc95	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc25	            0x3c2c	                            cmp al, 0x2c	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc27	            0x746c	                            je 0x400cc95	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400cc29	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc2e	          0x4889f0	                            mov rax, rsi	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc31	          0x4839ee	                            cmp rsi, rbp	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc34	            0x7311	                           jae 0x400cc47	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc36	        0x807dff5c	                cmp byte [rbp - 1], 0x5c	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc3a	            0x751d	                           jne 0x400cc59	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc3c	        0x807dfe2c	                cmp byte [rbp - 2], 0x2c	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc40	            0x7510	                           jne 0x400cc52	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc42	      0xe95e070000	                           jmp 0x400d3a5	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc47	          0x4839e8	                            cmp rax, rbp	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc4a	            0x7517	                           jne 0x400cc63	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc4c	        0x807dff5c	                cmp byte [rbp - 1], 0x5c	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc50	            0x751b	                           jne 0x400cc6d	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc52	      0x8344241001	               add dword [rsp + 0x10], 1	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc57	            0xeb26	                           jmp 0x400cc7f	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400cc59	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc61	            0xeb1c	                           jmp 0x400cc7f	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc63	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc6b	            0xeb12	                           jmp 0x400cc7f	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc6d	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc75	            0xeb08	                           jmp 0x400cc7f	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc77	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400cc7f	        0x4883c501	                              add rbp, 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc83	         0xfb64500	                   movzx eax, byte [rbp]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc87	        0x88442456	               mov byte [rsp + 0x56], al	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc8b	            0x84c0	                             test al, al	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc8d	     0xf854affffff	                           jne 0x400cbdd	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc93	            0xeb2e	                           jmp 0x400ccc3	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400cc95	      0x807c245600	                cmp byte [rsp + 0x56], 0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400cc9a	            0x7427	                            je 0x400ccc3	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400cc9c	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400cca1	            0x7420	                            je 0x400ccc3	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400cca3	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_143	CALL_3
0x400cca6	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_143	CALL_3
0x400cca9	      0xe800000000	                          call 0x400ccae	       110	string3.h	FUNCTION_143	CALL_3
0x400ccae	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5066	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400ccb6	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5067	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400ccbe	      0xe92f010000	                           jmp 0x400cdf2	      5067	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400ccc3	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccc8	     0xf8424010000	                            je 0x400cdf2	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccce	      0x488b542408	                mov rdx, qword [rsp + 8]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccd3	          0xf6c680	                           test dh, 0x80	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccd6	     0xf8425070000	                            je 0x400d401	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccdc	      0x41803c2400	                       cmp byte [r12], 0	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400cce1	     0xf841a070000	                            je 0x400d401	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400cce7	      0x41807d0000	                       cmp byte [r13], 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccec	     0xf840f070000	                            je 0x400d401	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400ccf2	      0x837c241400	               cmp dword [rsp + 0x14], 0	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400ccf7	     0xf8496000000	                            je 0x400cd93	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400ccfd	      0xb800000000	                              mov eax, 0	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd02	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd09	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd0c	            0xf2ae	              repne scasb al, byte [rdi]	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd0e	          0x4889c8	                            mov rax, rcx	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd11	          0x48f7d0	                                 not rax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd14	        0x4883e801	                              sub rax, 1	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd18	        0x89442464	             mov dword [rsp + 0x64], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400cd1c	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400cd24	          0x83f801	                              cmp eax, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd27	            0x7e29	                           jle 0x400cd52	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd29	    0x81e200800100	                        and edx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd2f	    0x4881fa008001	                        cmp rdx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd36	            0x751a	                           jne 0x400cd52	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd38	          0x4863d0	                         movsxd rdx, eax	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd3b	    0x41807c14ff2c	         cmp byte [r12 + rdx - 1], 0x2c 	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd41	            0x750f	                           jne 0x400cd52	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd43	    0x41807c14fe5c	         cmp byte [r12 + rdx - 2], 0x5c 	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd49	            0x7407	                            je 0x400cd52	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd4b	          0x83e801	                              sub eax, 1	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd4e	        0x89442464	             mov dword [rsp + 0x64], eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400cd52	      0xb800000000	                              mov eax, 0	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd57	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd5e	          0x4c89ef	                            mov rdi, r13	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd61	            0xf2ae	              repne scasb al, byte [rdi]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd63	          0x48f7d1	                                 not rcx	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd66	          0x4889ca	                            mov rdx, rcx	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400cd69	      0x48637c2464	         movsxd rdi, dword [rsp + 0x64] 	        59	string3.h	FUNCTION_138	CALL_3
0x400cd6e	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	        59	string3.h	FUNCTION_138	CALL_3
0x400cd73	          0x4801c7	                            add rdi, rax	        59	string3.h	FUNCTION_138	CALL_3
0x400cd76	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x400cd79	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x400cd7c	      0xe800000000	                          call 0x400cd81	        59	string3.h	FUNCTION_138	CALL_3
0x400cd81	      0x4863542464	         movsxd rdx, dword [rsp + 0x64] 	        59	string3.h	FUNCTION_138	CALL_3
0x400cd86	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_138	CALL_3
0x400cd89	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x400cd8c	      0xe800000000	                          call 0x400cd91	        59	string3.h	FUNCTION_138	CALL_3
0x400cd91	            0xeb4d	                           jmp 0x400cde0	        59	string3.h	FUNCTION_138	CALL_3
0x400cd93	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400cd9b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cda2	      0xb800000000	                              mov eax, 0	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cda7	          0x4889d1	                            mov rcx, rdx	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdaa	          0x4c89ef	                            mov rdi, r13	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdad	            0xf2ae	              repne scasb al, byte [rdi]	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdaf	          0x48f7d1	                                 not rcx	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdb2	        0x488d3411	                    lea rsi, [rcx + rdx]	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdb6	        0x89742464	             mov dword [rsp + 0x64], esi	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400cdba	          0x4889d1	                            mov rcx, rdx	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400cdbd	          0x4c89e7	                            mov rdi, r12	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400cdc0	            0xf2ae	              repne scasb al, byte [rdi]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400cdc2	          0x48f7d1	                                 not rcx	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400cdc5	          0x4889ca	                            mov rdx, rcx	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400cdc8	          0x4863f6	                         movsxd rsi, esi	        59	string3.h	FUNCTION_138	CALL_3
0x400cdcb	      0x48637c2410	         movsxd rdi, dword [rsp + 0x10] 	        59	string3.h	FUNCTION_138	CALL_3
0x400cdd0	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_138	CALL_3
0x400cdd3	      0x498d7c3500	                    lea rdi, [r13 + rsi]	        59	string3.h	FUNCTION_138	CALL_3
0x400cdd8	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_138	CALL_3
0x400cddb	      0xe800000000	                          call 0x400cde0	        59	string3.h	FUNCTION_138	CALL_3
0x400cde0	      0x837c241000	               cmp dword [rsp + 0x10], 0	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400cde5	            0x740b	                            je 0x400cdf2	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400cde7	      0x4863442464	         movsxd rax, dword [rsp + 0x64] 	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400cdec	    0x41c64405002c	              mov byte [r13 + rax], 0x2c	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400cdf2	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400cdf7	            0x7471	                            je 0x400ce6a	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400cdf9	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_143	CALL_3
0x400cdfc	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_143	CALL_3
0x400cdff	      0xe800000000	                          call 0x400ce04	       110	string3.h	FUNCTION_143	CALL_3
0x400ce04	        0x807d0000	                       cmp byte [rbp], 0	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400ce08	            0x7460	                            je 0x400ce6a	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400ce0a	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400ce13	            0x7428	                            je 0x400ce3d	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400ce15	          0x4939ec	                            cmp r12, rbp	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x400ce18	            0x751a	                           jne 0x400ce34	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x400ce1a	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce1e	          0x4863d0	                         movsxd rdx, eax	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce21	          0x4c89e5	                            mov rbp, r12	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce24	      0x41803c142c	              cmp byte [r12 + rdx], 0x2c	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce29	            0x7512	                           jne 0x400ce3d	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce2b	          0x83c001	                              add eax, 1	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce2e	        0x89442464	             mov dword [rsp + 0x64], eax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce32	            0xeb09	                           jmp 0x400ce3d	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400ce34	        0x4883ed01	                              sub rbp, 1	      5119	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400ce38	      0x8344246401	               add dword [rsp + 0x64], 1	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400ce3d	      0x4863742464	         movsxd rsi, dword [rsp + 0x64] 	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce42	          0x4801ee	                            add rsi, rbp	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce45	      0xb800000000	                              mov eax, 0	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce4a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce51	          0x4889f7	                            mov rdi, rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce54	            0xf2ae	              repne scasb al, byte [rdi]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce56	          0x48f7d1	                                 not rcx	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce59	          0x4889ca	                            mov rdx, rcx	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ce5c	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400ce5f	          0x4c29e7	                            sub rdi, r12	        59	string3.h	FUNCTION_138	CALL_3
0x400ce62	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x400ce65	      0xe800000000	                          call 0x400ce6a	        59	string3.h	FUNCTION_138	CALL_3
0x400ce6a	    0x48f744240800	          test qword [rsp + 8], 0x40000 	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400ce73	     0xf859c000000	                           jne 0x400cf15	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400ce79	      0xe9d2000000	                           jmp 0x400cf50	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400ce7e	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400ce84	            0x7446	                            je 0x400cecc	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400ce86	            0x3c2c	                            cmp al, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400ce88	     0xf8481000000	                            je 0x400cf0f	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400ce8e	        0x807d012c	                cmp byte [rbp + 1], 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400ce92	            0x757b	                           jne 0x400cf0f	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400ce94	        0x488d5d02	                      lea rbx, [rbp + 2]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400ce98	           0xfb6f0	                           movzx esi, al	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400ce9b	          0x4889df	                            mov rdi, rbx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400ce9e	      0xe800000000	                          call 0x400cea3	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400cea3	          0x4885c0	                           test rax, rax	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400cea6	            0x7467	                            je 0x400cf0f	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400cea8	      0xb800000000	                              mov eax, 0	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400cead	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400ceb4	          0x4889df	                            mov rdi, rbx	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400ceb7	            0xf2ae	              repne scasb al, byte [rdi]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400ceb9	          0x48f7d1	                                 not rcx	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400cebc	          0x4889ca	                            mov rdx, rcx	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x400cebf	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_138	CALL_3
0x400cec2	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400cec5	      0xe800000000	                          call 0x400ceca	        59	string3.h	FUNCTION_138	CALL_3
0x400ceca	            0xeb74	                           jmp 0x400cf40	      5142	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400cecc	      0x807c241000	                cmp byte [rsp + 0x10], 0	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400ced1	            0x7504	                           jne 0x400ced7	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400ced3	            0x3c2c	                            cmp al, 0x2c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400ced5	            0x7438	                            je 0x400cf0f	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400ced7	        0x488d5d01	                      lea rbx, [rbp + 1]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400cedb	           0xfb6f0	                           movzx esi, al	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400cede	          0x4889df	                            mov rdi, rbx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400cee1	      0xe800000000	                          call 0x400cee6	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400cee6	          0x4885c0	                           test rax, rax	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400cee9	            0x7424	                            je 0x400cf0f	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400ceeb	      0xb800000000	                              mov eax, 0	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400cef0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400cef7	          0x4889df	                            mov rdi, rbx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400cefa	            0xf2ae	              repne scasb al, byte [rdi]	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400cefc	          0x48f7d1	                                 not rcx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400ceff	          0x4889ca	                            mov rdx, rcx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400cf02	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_138	CALL_3
0x400cf05	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400cf08	      0xe800000000	                          call 0x400cf0d	        59	string3.h	FUNCTION_138	CALL_3
0x400cf0d	            0xeb31	                           jmp 0x400cf40	      5151	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf0f	        0x4883c501	                              add rbp, 1	      5154	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf13	            0xeb2b	                           jmp 0x400cf40	      5154	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf15	          0x4c89ed	                            mov rbp, r13	      5154	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf18	      0x488b742408	                mov rsi, qword [rsp + 8]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400cf1d	          0x4889f0	                            mov rax, rsi	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400cf20	      0x2500800100	                        and eax, 0x18000	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400cf25	      0x4889442408	                mov qword [rsp + 8], rax	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400cf2a	          0x4889f0	                            mov rax, rsi	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf2d	        0x48c1e80f	                            shr rax, 0xf	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf31	        0x4883f001	                              xor rax, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf35	          0x83e001	                              and eax, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf38	        0x88442410	               mov byte [rsp + 0x10], al	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf3c	        0x895c2450	             mov dword [rsp + 0x50], ebx	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400cf40	         0xfb64500	                   movzx eax, byte [rbp]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf44	            0x84c0	                             test al, al	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf46	     0xf8532ffffff	                           jne 0x400ce7e	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf4c	        0x8b5c2450	            mov ebx, dword [rsp + 0x50] 	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400cf50	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400cf55	          0x4885c0	                           test rax, rax	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400cf58	            0x7405	                            je 0x400cf5f	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400cf5a	      0x4889442458	             mov qword [rsp + 0x58], rax	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400cf5f	          0x4d892f	                    mov qword [r15], r13	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cf62	    0x833d00000000	               cmp dword [0x0400cf69], 0	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf69	            0x7535	                           jne 0x400cfa0	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf6b	          0x4863c3	                         movsxd rax, ebx	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf6e	        0x48c1e006	                              shl rax, 6	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf72	    0x81b800000000	                 cmp dword [rax], 0x402c	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf7c	            0x742f	                            je 0x400cfad	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf7e	          0x4d85e4	                           test r12, r12	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf81	            0x7437	                            je 0x400cfba	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf83	          0x4d85ed	                           test r13, r13	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf86	            0x7432	                            je 0x400cfba	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400cf88	          0x4c89e7	                            mov rdi, r12	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400cf8b	      0xe800000000	                          call 0x400cf90	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400cf90	          0x4889c5	                            mov rbp, rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400cf93	          0x4c89ef	                            mov rdi, r13	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400cf96	      0xe800000000	                          call 0x400cf9b	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400cf9b	          0x4989c5	                            mov r13, rax	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400cf9e	            0xeb25	                           jmp 0x400cfc5	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400cfa0	    0x41bd00000000	                             mov r13d, 0	      4816	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfa6	      0xbd00000000	                              mov ebp, 0	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfab	            0xeb18	                           jmp 0x400cfc5	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfad	    0x41bd00000000	                             mov r13d, 0	      4816	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfb3	      0xbd00000000	                              mov ebp, 0	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfb8	            0xeb0b	                           jmp 0x400cfc5	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfba	    0x41bd00000000	                             mov r13d, 0	      4816	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfc0	      0xbd00000000	                              mov ebp, 0	      4815	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400cfc5	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfca	    0x4c8d84248000	                    lea r8, [rsp + 0x80]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfd2	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfd7	      0xba01000000	                              mov edx, 1	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfdc	          0x4c89fe	                            mov rsi, r15	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfdf	            0x89df	                            mov edi, ebx	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfe1	      0xe8dc8affff	          call sym.did_set_string_option	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfe6	          0x4989c4	                            mov r12, rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400cfe9	          0x4885c0	                           test rax, rax	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400cfec	     0xf8523040000	                           jne 0x400d415	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400cff2	          0x4c89e9	                            mov rcx, r13	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400cff5	          0x4889ea	                            mov rdx, rbp	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400cff8	        0x8b742404	                mov esi, dword [rsp + 4]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400cffc	            0x89df	                            mov edi, ebx	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400cffe	      0xe8ac56ffff	      call sym.trigger_optionsset_string	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x400d003	          0x4889ef	                            mov rdi, rbp	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400d006	      0xe800000000	                          call 0x400d00b	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400d00b	          0x4c89ef	                            mov rdi, r13	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d00e	      0xe800000000	                          call 0x400d013	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d013	      0xe9d3000000	                           jmp 0x400d0eb	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d018	          0x83fd26	                           cmp ebp, 0x26	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x400d01b	            0x7525	                           jne 0x400d042	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x400d01d	      0xbe01000000	                              mov esi, 1	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400d022	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400d027	      0xe800000000	                          call 0x400d02c	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400d02c	            0x85c0	                           test eax, eax	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x400d02e	      0xb800000000	                              mov eax, 0	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x400d033	    0x41bc00000000	                             mov r12d, 0	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x400d039	        0x4c0f45e0	                         cmovne r12, rax	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x400d03d	      0xe982000000	                           jmp 0x400d0c4	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x400d042	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400d047	        0x488d5801	                      lea rbx, [rax + 1]	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400d04b	      0x48895c2458	             mov qword [rsp + 0x58], rbx	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400d050	         0xfb66801	               movzx ebp, byte [rax + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d054	          0x4084ed	                           test bpl, bpl	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d057	            0x744b	                            je 0x400d0a4	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d059	        0x4080fd20	                           cmp bpl, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d05d	            0x7445	                            je 0x400d0a4	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d05f	        0x4080fd09	                              cmp bpl, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d063	            0x7505	                           jne 0x400d06a	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d065	            0xeb3d	                           jmp 0x400d0a4	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d067	          0x4889c3	                            mov rbx, rax	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d06a	        0x4080fd5c	                           cmp bpl, 0x5c	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400d06e	            0x750e	                           jne 0x400d07e	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400d070	        0x807b0100	                   cmp byte [rbx + 1], 0	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400d074	     0xf847f040000	                            je 0x400d4f9	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400d07a	        0x4883c301	                              add rbx, 1	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400d07e	        0x488d4301	                      lea rax, [rbx + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d082	         0xfb66b01	               movzx ebp, byte [rbx + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d086	          0x4084ed	                           test bpl, bpl	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d089	            0x750a	                           jne 0x400d095	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d08b	          0x4889c3	                            mov rbx, rax	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d08e	      0xbd00000000	                              mov ebp, 0	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d093	            0xeb0f	                           jmp 0x400d0a4	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d095	        0x4080fd20	                           cmp bpl, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d099	            0x7406	                            je 0x400d0a1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d09b	        0x4080fd09	                              cmp bpl, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d09f	            0x75c6	                           jne 0x400d067	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d0a1	          0x4889c3	                            mov rbx, rax	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d0a4	          0xc60300	                       mov byte [rbx], 0	      5218	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400d0a7	      0xba00000000	                              mov edx, 0	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400d0ac	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400d0b1	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400d0b6	      0xe800000000	                          call 0x400d0bb	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400d0bb	          0x40882b	                     mov byte [rbx], bpl	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400d0be	    0x41bc00000000	                             mov r12d, 0	      4396	option.c	FUNCTION_16	WHILE_1
0x400d0c4	    0x8b0500000000	            mov eax, dword [0x0400d0ca] 	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400d0ca	            0x85c0	                           test eax, eax	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400d0cc	            0x740a	                            je 0x400d0d8	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400d0ce	      0xbf00000000	                              mov edi, 0	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x400d0d3	      0xe800000000	                          call 0x400d0d8	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x400d0d8	      0xbf32000000	                           mov edi, 0x32	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400d0dd	      0xe800000000	                          call 0x400d0e2	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400d0e2	            0xeb2e	                           jmp 0x400d112	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400d0e4	      0x807c242000	                cmp byte [rsp + 0x20], 0	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d0e9	            0x7427	                            je 0x400d112	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d0eb	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0ef	         0xb44241c	              or eax, dword [rsp + 0x1c]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0f3	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0f7	             0x9c6	                             or esi, eax	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0f9	           0xf94c2	                                 sete dl	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0fc	           0xfb6d2	                           movzx edx, dl	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d0ff	        0x8b742404	                mov esi, dword [rsp + 4]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d103	            0x89df	                            mov edi, ebx	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d105	      0xe80c30ffff	                 call sym.did_set_option	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d10a	            0xeb06	                           jmp 0x400d112	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d10c	    0x41bc00000000	                             mov r12d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400d112	    0xc74424640000	               mov dword [rsp + 0x64], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d11a	            0xeb1d	                           jmp 0x400d139	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d11c	        0x488d4701	                      lea rax, [rdi + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d120	      0x4889442458	             mov qword [rsp + 0x58], rax	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d125	          0x803f5c	                    cmp byte [rdi], 0x5c	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d128	            0x750f	                           jne 0x400d139	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d12a	        0x807f0100	                   cmp byte [rdi + 1], 0	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d12e	            0x7409	                            je 0x400d139	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d130	        0x4883c702	                              add rdi, 2	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d134	      0x48897c2458	             mov qword [rsp + 0x58], rdi	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400d139	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d13e	           0xfb607	                   movzx eax, byte [rdi]	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d141	            0xa8df	                           test al, 0xdf	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d143	            0x7404	                            je 0x400d149	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d145	            0x3c09	                               cmp al, 9	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d147	            0x75d3	                           jne 0x400d11c	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400d149	      0xe800000000	                          call 0x400d14e	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400d14e	      0x4889442458	             mov qword [rsp + 0x58], rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400d153	          0x80383d	                    cmp byte [rax], 0x3d	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400d156	            0x7510	                           jne 0x400d168	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400d158	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d15c	          0x83c001	                              add eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d15f	        0x89442464	             mov dword [rsp + 0x64], eax	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d163	          0x83f801	                              cmp eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d166	            0x7ed1	                           jle 0x400d139	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d168	          0x4d85e4	                           test r12, r12	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d16b	     0xf84e6000000	                            je 0x400d257	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d171	      0xba05000000	                              mov edx, 5	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d176	          0x4c89e6	                            mov rsi, r12	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d179	      0xbf00000000	                              mov edi, 0	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d17e	      0xe800000000	                          call 0x400d183	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d183	      0xba00040000	                          mov edx, 0x400	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d188	          0x4889c6	                            mov rsi, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d18b	    0x488b3d000000	            mov rdi, qword [0x0400d192] 	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d192	      0xe800000000	                          call 0x400d197	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400d197	    0x488b15000000	            mov rdx, qword [0x0400d19e] 	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d19e	      0xb800000000	                              mov eax, 0	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1a3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1aa	          0x4889d7	                            mov rdi, rdx	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1ad	            0xf2ae	              repne scasb al, byte [rdi]	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1af	            0x89c8	                            mov eax, ecx	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1b1	            0xf7d8	                                 neg eax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1b3	        0x89442464	             mov dword [rsp + 0x64], eax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400d1b7	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1bc	          0x4c29f1	                            sub rcx, r14	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1bf	            0x4898	                                    cdqe	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1c1	          0x4801c8	                            add rax, rcx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1c4	    0x483d00040000	                          cmp rax, 0x400	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1ca	            0x7f59	                            jg 0x400d225	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d1cc	      0xb800000000	                              mov eax, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400d1d1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       148	string3.h	FUNCTION_147	CALL_3
0x400d1d8	          0x4889d7	                            mov rdi, rdx	       148	string3.h	FUNCTION_147	CALL_3
0x400d1db	            0xf2ae	              repne scasb al, byte [rdi]	       148	string3.h	FUNCTION_147	CALL_3
0x400d1dd	          0x4889c8	                            mov rax, rcx	       148	string3.h	FUNCTION_147	CALL_3
0x400d1e0	          0x48f7d0	                                 not rax	       148	string3.h	FUNCTION_147	CALL_3
0x400d1e3	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       148	string3.h	FUNCTION_147	CALL_3
0x400d1e8	      0x66c7003a20	                  mov word [rax], 0x203a	       148	string3.h	FUNCTION_147	CALL_3
0x400d1ed	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_147	CALL_3
0x400d1f1	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        59	string3.h	FUNCTION_138	CALL_3
0x400d1f6	          0x4c29f2	                            sub rdx, r14	        59	string3.h	FUNCTION_138	CALL_3
0x400d1f9	      0x48637c2464	         movsxd rdi, dword [rsp + 0x64] 	        59	string3.h	FUNCTION_138	CALL_3
0x400d1fe	    0x48033d000000	             add rdi, qword [0x0400d205]	        59	string3.h	FUNCTION_138	CALL_3
0x400d205	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_138	CALL_3
0x400d208	      0xe800000000	                          call 0x400d20d	        59	string3.h	FUNCTION_138	CALL_3
0x400d20d	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d212	          0x4c29f0	                            sub rax, r14	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d215	      0x4863542464	         movsxd rdx, dword [rsp + 0x64] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d21a	    0x480305000000	             add rax, qword [0x0400d221]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d221	        0xc6041000	                 mov byte [rax + rdx], 0	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400d225	      0xbe01040000	                          mov esi, 0x401	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400d22a	    0x488b3d000000	            mov rdi, qword [0x0400d231] 	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400d231	      0xe800000000	                          call 0x400d236	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400d236	    0x830500000000	               add dword [0x0400d23d], 1	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d23d	    0x488b3d000000	            mov rdi, qword [0x0400d244] 	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400d244	      0xe800000000	                          call 0x400d249	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400d249	    0x832d00000000	               sub dword [0x0400d250], 1	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d250	      0xb800000000	                              mov eax, 0	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d255	            0xeb73	                           jmp 0x400d2ca	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400d257	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400d25c	      0xe800000000	                          call 0x400d261	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400d261	          0x4989c6	                            mov r14, rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400d264	      0x4889442458	             mov qword [rsp + 0x58], rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400d269	          0x803800	                       cmp byte [rax], 0	      4394	option.c	FUNCTION_16	WHILE_1
0x400d26c	     0xf855aeaffff	                           jne 0x400bccc	      4394	option.c	FUNCTION_16	WHILE_1
0x400d272	    0x833d00000000	               cmp dword [0x0400d279], 0	      5276	option.c	FUNCTION_16	IF_120
0x400d279	            0x744a	                            je 0x400d2c5	      5276	option.c	FUNCTION_16	IF_120
0x400d27b	      0x837c243000	               cmp dword [rsp + 0x30], 0	      5276	option.c	FUNCTION_16	IF_120
0x400d280	            0x7443	                            je 0x400d2c5	      5276	option.c	FUNCTION_16	IF_120
0x400d282	    0xc70500000000	               mov dword [0x0400d28c], 0	      5279	option.c	FUNCTION_16	IF_120
0x400d28c	    0xc70500000000	               mov dword [0x0400d296], 1	      5280	option.c	FUNCTION_16	IF_120
0x400d296	      0xbf0a000000	                            mov edi, 0xa	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x400d29b	      0xe800000000	                          call 0x400d2a0	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x400d2a0	      0xe800000000	                          call 0x400d2a5	      5282	option.c	FUNCTION_16	IF_120	CALL_128
0x400d2a5	      0xe800000000	                          call 0x400d2aa	      5283	option.c	FUNCTION_16	IF_120	CALL_129
0x400d2aa	    0xc70500000000	               mov dword [0x0400d2b4], 1	      5284	option.c	FUNCTION_16	IF_120
0x400d2b4	    0xc70500000000	               mov dword [0x0400d2be], 0	      5285	option.c	FUNCTION_16	IF_120
0x400d2be	      0xb801000000	                              mov eax, 1	      5288	option.c	FUNCTION_16
0x400d2c3	            0xeb05	                           jmp 0x400d2ca	      5288	option.c	FUNCTION_16
0x400d2c5	      0xb801000000	                              mov eax, 1	      5288	option.c	FUNCTION_16
0x400d2ca	    0x488b9c24d800	            mov rbx, qword [rsp + 0xd8] 	      5289	option.c	FUNCTION_16
0x400d2d2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5289	option.c	FUNCTION_16
0x400d2db	     0xf8426020000	                            je 0x400d507	      5289	option.c	FUNCTION_16
0x400d2e1	      0xe91c020000	                           jmp 0x400d502	      5289	option.c	FUNCTION_16
0x400d2e6	          0x83c501	                              add ebp, 1	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d2e9	      0x42c604283e	              mov byte [rax + r13], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d2ee	      0xe9dfebffff	                           jmp 0x400bed2	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d2f3	      0xbe26000000	                           mov esi, 0x26	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d2f8	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d2fd	      0xe800000000	                          call 0x400d302	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d302	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d305	     0xf85a1010000	                           jne 0x400d4ac	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d30b	      0xe9a2efffff	                           jmp 0x400c2b2	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d310	          0x4d8b27	                    mov r12, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d313	      0x4c89642420	             mov qword [rsp + 0x20], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d318	      0xe94bf4ffff	                           jmp 0x400c768	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d31d	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d320	      0xe800000000	                          call 0x400d325	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d325	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d32c	      0xb800000000	                              mov eax, 0	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d331	          0x4889f1	                            mov rcx, rsi	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d334	          0x4889ef	                            mov rdi, rbp	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d337	            0xf2ae	              repne scasb al, byte [rdi]	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d339	          0x48f7d1	                                 not rcx	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d33c	          0x4889ca	                            mov rdx, rcx	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d33f	          0x4889f1	                            mov rcx, rsi	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d342	          0x4c89e7	                            mov rdi, r12	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d345	            0xf2ae	              repne scasb al, byte [rdi]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d347	          0x4889c8	                            mov rax, rcx	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d34a	          0x48f7d0	                                 not rax	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d34d	          0x8d3c10	                    lea edi, [rax + rdx]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d350	      0xe9f0f7ffff	                           jmp 0x400cb45	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d355	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d358	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d35a	      0xe8d74bffff	                  call sym.option_expand	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d35f	          0x4889c5	                            mov rbp, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d362	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d365	            0x75b6	                           jne 0x400d31d	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d367	      0xe9f5f7ffff	                           jmp 0x400cb61	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d36c	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d36f	      0xe800000000	                          call 0x400d374	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d374	      0xb800000000	                              mov eax, 0	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d379	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d380	          0x4889ef	                            mov rdi, rbp	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d383	            0xf2ae	              repne scasb al, byte [rdi]	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d385	            0x89cf	                            mov edi, ecx	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d387	            0xf7d7	                                 not edi	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d389	      0xe9b7f7ffff	                           jmp 0x400cb45	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d38e	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d391	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d393	      0xe89e4bffff	                  call sym.option_expand	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d398	          0x4889c5	                            mov rbp, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d39b	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d39e	            0x75cc	                           jne 0x400d36c	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d3a0	      0xe9bcf7ffff	                           jmp 0x400cb61	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d3a5	      0x48396c2438	            cmp qword [rsp + 0x38], rbp 	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d3aa	     0xf84a2f8ffff	                            je 0x400cc52	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d3b0	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400d3b8	      0xe9c2f8ffff	                           jmp 0x400cc7f	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400d3bd	          0x4c89e5	                            mov rbp, r12	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d3c0	      0xe9fef8ffff	                           jmp 0x400ccc3	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d3c5	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400d3ca	     0xf85fef8ffff	                           jne 0x400ccce	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400d3d0	      0xe995faffff	                           jmp 0x400ce6a	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400d3d5	      0xb800000000	                              mov eax, 0	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3da	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3e1	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3e4	            0xf2ae	              repne scasb al, byte [rdi]	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3e6	          0x4889c8	                            mov rax, rcx	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3e9	          0x48f7d0	                                 not rax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3ec	        0x4883e801	                              sub rax, 1	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3f0	        0x89442464	             mov dword [rsp + 0x64], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3f4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d3fc	      0xe951f9ffff	                           jmp 0x400cd52	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400d401	      0x837c241400	               cmp dword [rsp + 0x14], 0	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400d406	            0x75cd	                           jne 0x400d3d5	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400d408	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400d410	      0xe986f9ffff	                           jmp 0x400cd9b	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400d415	          0x4889ef	                            mov rdi, rbp	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400d418	      0xe800000000	                          call 0x400d41d	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400d41d	          0x4c89ef	                            mov rdi, r13	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d420	      0xe800000000	                          call 0x400d425	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d425	      0xe9e8fcffff	                           jmp 0x400d112	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400d42a	    0xc74424640000	               mov dword [rsp + 0x64], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d432	    0x41bc00000000	                             mov r12d, 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d438	      0xe9fcfcffff	                           jmp 0x400d139	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d43d	    0x41bc00000000	                             mov r12d, 0	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400d443	            0xeb26	                           jmp 0x400d46b	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400d445	    0x41bc00000000	                             mov r12d, 0	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x400d44b	            0xeb1e	                           jmp 0x400d46b	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x400d44d	    0x41bc00000000	                             mov r12d, 0	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x400d453	            0xeb16	                           jmp 0x400d46b	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x400d455	    0x41bc00000000	                             mov r12d, 0	      4684	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400d45b	            0xeb0e	                           jmp 0x400d46b	      4684	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400d45d	    0x41bc00000000	                             mov r12d, 0	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d463	            0xeb06	                           jmp 0x400d46b	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d465	    0x41bc00000000	                             mov r12d, 0	      4788	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x400d46b	    0xc74424640000	               mov dword [rsp + 0x64], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d473	      0xe9c1fcffff	                           jmp 0x400d139	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400d478	      0xf644240410	               test byte [rsp + 4], 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400d47d	            0x75ab	                           jne 0x400d42a	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400d47f	    0x48c744240804	                  mov qword [rsp + 8], 4	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400d488	      0xe9b9ecffff	                           jmp 0x400c146	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400d48d	            0x89d8	                            mov eax, ebx	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d48f	            0xf7d0	                                 not eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d491	          0xc1e81f	                           shr eax, 0x1f	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d494	        0x88442420	               mov byte [rsp + 0x20], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d498	      0x807c245700	                cmp byte [rsp + 0x57], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d49d	     0xf84ceecffff	                            je 0x400c171	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d4a3	            0x84c0	                             test al, al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d4a5	            0x7583	                           jne 0x400d42a	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d4a7	      0xe9c5ecffff	                           jmp 0x400c171	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d4ac	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d4b1	         0xfb64001	               movzx eax, byte [rax + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d4b5	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d4b7	     0xf84f5edffff	                            je 0x400c2b2	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d4bd	      0xe9e3edffff	                           jmp 0x400c2a5	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d4c2	            0x89ee	                            mov esi, ebp	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d4c4	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d4c9	      0xe800000000	                          call 0x400d4ce	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d4ce	    0x41bc00000000	                             mov r12d, 0	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d4d4	            0xeb95	                           jmp 0x400d46b	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d4d6	      0xf644240801	                  test byte [rsp + 8], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400d4db	     0xf8520efffff	                           jne 0x400c401	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400d4e1	            0xebdf	                           jmp 0x400d4c2	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400d4e3	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4e8	          0x4889f0	                            mov rax, rsi	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4eb	          0x4839ee	                            cmp rsi, rbp	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4ee	     0xf8283f7ffff	                            jb 0x400cc77	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4f4	      0xe94ef7ffff	                           jmp 0x400cc47	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4f9	        0x488d4301	                      lea rax, [rbx + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d4fd	      0xe989fbffff	                           jmp 0x400d08b	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400d502	      0xe800000000	                          call 0x400d507	      5289	option.c	FUNCTION_16
0x400d507	    0x4881c4e80000	                           add rsp, 0xe8	      5289	option.c	FUNCTION_16
0x400d50e	              0x5b	                                 pop rbx	      5289	option.c	FUNCTION_16
0x400d50f	              0x5d	                                 pop rbp	      5289	option.c	FUNCTION_16
0x400d510	            0x415c	                                 pop r12	      5289	option.c	FUNCTION_16
0x400d512	            0x415d	                                 pop r13	      5289	option.c	FUNCTION_16
0x400d514	            0x415e	                                 pop r14	      5289	option.c	FUNCTION_16
0x400d516	            0x415f	                                 pop r15	      5289	option.c	FUNCTION_16
0x400d518	              0xc3	                                     ret	      5289	option.c	FUNCTION_16
get_term_code	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,3:DO,0:CALL,3:WHILE,0	31
0x4004649	      0xb800000000	                              mov eax, 0	      9792	option.c	FUNCTION_57	IF_1
0x400464e	          0x803f74	                    cmp byte [rdi], 0x74	      9790	option.c	FUNCTION_57	IF_1
0x4004651	            0x7556	                           jne 0x40046a9	      9790	option.c	FUNCTION_57	IF_1
0x4004653	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9790	option.c	FUNCTION_57	IF_1
0x4004657	            0x7550	                           jne 0x40046a9	      9790	option.c	FUNCTION_57	IF_1
0x4004659	        0x807f0200	                   cmp byte [rdi + 2], 0	      9790	option.c	FUNCTION_57	IF_1
0x400465d	            0x743e	                            je 0x400469d	      9790	option.c	FUNCTION_57	IF_1
0x400465f	        0x807f0300	                   cmp byte [rdi + 3], 0	      9791	option.c	FUNCTION_57	IF_1
0x4004663	            0x7444	                            je 0x40046a9	      9791	option.c	FUNCTION_57	IF_1
0x4004665	              0x53	                                push rbx	      9786	option.c	FUNCTION_57
0x4004666	          0x4889fb	                            mov rbx, rdi	      9786	option.c	FUNCTION_57
0x4004669	      0xe8a9bcffff	                     call sym.findoption	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x400466e	            0x85c0	                           test eax, eax	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x4004670	            0x7820	                            js 0x4004692	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x4004672	          0x4863f8	                         movsxd rdi, eax	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004675	          0x4889f8	                            mov rax, rdi	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004678	        0x48c1e006	                              shl rax, 6	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x400467c	    0x488db8000000	                          lea rdi, [rax]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004683	      0xe8debfffff	                       call sym.get_varp	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004688	          0x4885c0	                           test rax, rax	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x400468b	            0x7416	                            je 0x40046a3	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x400468d	          0x488b00	                    mov rax, qword [rax]	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x4004690	            0xeb16	                           jmp 0x40046a8	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x4004692	        0x488d7b02	                      lea rdi, [rbx + 2]	      9800	option.c	FUNCTION_57	CALL_3
0x4004696	      0xe800000000	                          call 0x400469b	      9800	option.c	FUNCTION_57	CALL_3
0x400469b	            0xeb0b	                           jmp 0x40046a8	      9800	option.c	FUNCTION_57	CALL_3
0x400469d	      0xb800000000	                              mov eax, 0	      9792	option.c	FUNCTION_57	IF_1
0x40046a2	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
0x40046a3	      0xb800000000	                              mov eax, 0	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40046a8	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x40046a9	            0xf3c3	                                     ret	      9801	option.c	FUNCTION_57
clear_string_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	10
0x4003bc8	              0x53	                                push rbx	      5762	option.c	FUNCTION_31
0x4003bc9	          0x4889fb	                            mov rbx, rdi	      5762	option.c	FUNCTION_31
0x4003bcc	          0x488b3f	                    mov rdi, qword [rdi]	      5763	option.c	FUNCTION_31	IF_1
0x4003bcf	    0x483b3d000000	            cmp rdi, qword [0x04003bd6] 	      5763	option.c	FUNCTION_31	IF_1
0x4003bd6	            0x7405	                            je 0x4003bdd	      5763	option.c	FUNCTION_31	IF_1
0x4003bd8	      0xe800000000	                          call 0x4003bdd	      5764	option.c	FUNCTION_31	CALL_1
0x4003bdd	    0x488b05000000	            mov rax, qword [0x04003be4] 	      5765	option.c	FUNCTION_31
0x4003be4	          0x488903	                    mov qword [rbx], rax	      5765	option.c	FUNCTION_31
0x4003be7	              0x5b	                                 pop rbx	      5766	option.c	FUNCTION_31
0x4003be8	              0xc3	                                     ret	      5766	option.c	FUNCTION_31
check_opt_strings	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	6
0x4001bef	        0x4883ec08	                              sub rsp, 8	     12338	option.c	FUNCTION_106
0x4001bf3	            0x89d1	                            mov ecx, edx	     12339	option.c	FUNCTION_106	CALL_1
0x4001bf5	      0xba00000000	                              mov edx, 0	     12339	option.c	FUNCTION_106	CALL_1
0x4001bfa	      0xe8cdfeffff	              call sym.opt_strings_flags	     12339	option.c	FUNCTION_106	CALL_1
0x4001bff	        0x4883c408	                              add rsp, 8	     12340	option.c	FUNCTION_106
0x4001c03	              0xc3	                                     ret	     12340	option.c	FUNCTION_106
makefoldset	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,8:WHILE,0	72
0x40049ce	              0x53	                                push rbx	     10165	option.c	FUNCTION_65
0x40049cf	          0x4889fb	                            mov rbx, rdi	     10165	option.c	FUNCTION_65
0x40049d2	    0x488b05000000	            mov rax, qword [0x040049d9] 	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049d9	    0x488d88f80100	                  lea rcx, [rax + 0x1f8]	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049e0	    0x41b800000000	                              mov r8d, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049e6	      0xba00000000	                              mov edx, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049eb	      0xbe00000000	                              mov esi, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049f0	      0xe828e4ffff	                  call sym.put_setstring	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049f5	            0x85c0	                           test eax, eax	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049f7	     0xf841d010000	                            je 0x4004b1a	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x40049fd	    0x488b05000000	            mov rax, qword [0x04004a04] 	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a04	    0x488d88180200	                  lea rcx, [rax + 0x218]	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a0b	    0x41b800000000	                              mov r8d, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a11	      0xba00000000	                              mov edx, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a16	      0xbe00000000	                              mov esi, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a1b	          0x4889df	                            mov rdi, rbx	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a1e	      0xe8fae3ffff	                  call sym.put_setstring	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a23	            0x85c0	                           test eax, eax	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a25	     0xf84ef000000	                            je 0x4004b1a	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4004a2b	    0x488b05000000	            mov rax, qword [0x04004a32] 	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a32	    0x488d88280200	                  lea rcx, [rax + 0x228]	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a39	    0x41b800000000	                              mov r8d, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a3f	      0xba00000000	                              mov edx, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a44	      0xbe00000000	                              mov esi, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a49	          0x4889df	                            mov rdi, rbx	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a4c	      0xe8cce3ffff	                  call sym.put_setstring	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a51	            0x85c0	                           test eax, eax	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a53	     0xf84c1000000	                            je 0x4004b1a	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x4004a59	    0x488b05000000	            mov rax, qword [0x04004a60] 	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a60	    0x488d88e00100	                  lea rcx, [rax + 0x1e0]	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a67	    0x41b800000000	                              mov r8d, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a6d	      0xba00000000	                              mov edx, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a72	      0xbe00000000	                              mov esi, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a77	          0x4889df	                            mov rdi, rbx	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a7a	      0xe89ee3ffff	                  call sym.put_setstring	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a7f	            0x85c0	                           test eax, eax	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a81	     0xf8493000000	                            je 0x4004b1a	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4004a87	    0x488b05000000	            mov rax, qword [0x04004a8e] 	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004a8e	    0x488d88e80100	                  lea rcx, [rax + 0x1e8]	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004a95	      0xba00000000	                              mov edx, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004a9a	      0xbe00000000	                              mov esi, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004a9f	          0x4889df	                            mov rdi, rbx	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004aa2	      0xe8b0e4ffff	                     call sym.put_setnum	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004aa7	            0x85c0	                           test eax, eax	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004aa9	            0x746f	                            je 0x4004b1a	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4004aab	    0x488b05000000	            mov rax, qword [0x04004ab2] 	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004ab2	    0x488d88080200	                  lea rcx, [rax + 0x208]	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004ab9	      0xba00000000	                              mov edx, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004abe	      0xbe00000000	                              mov esi, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004ac3	          0x4889df	                            mov rdi, rbx	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004ac6	      0xe88ce4ffff	                     call sym.put_setnum	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004acb	            0x85c0	                           test eax, eax	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004acd	            0x744b	                            je 0x4004b1a	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4004acf	    0x488b05000000	            mov rax, qword [0x04004ad6] 	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004ad6	    0x488d88100200	                  lea rcx, [rax + 0x210]	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004add	      0xba00000000	                              mov edx, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004ae2	      0xbe00000000	                              mov esi, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004ae7	          0x4889df	                            mov rdi, rbx	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004aea	      0xe868e4ffff	                     call sym.put_setnum	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004aef	            0x85c0	                           test eax, eax	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004af1	            0x7427	                            je 0x4004b1a	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4004af3	    0x488b05000000	            mov rax, qword [0x04004afa] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004afa	    0x8b88d4010000	           mov ecx, dword [rax + 0x1d4] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004b00	      0xba00000000	                              mov edx, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004b05	      0xbe00000000	                              mov esi, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004b0a	          0x4889df	                            mov rdi, rbx	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004b0d	      0xe8b0e2ffff	                    call sym.put_setbool	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4004b12	            0x85c0	                           test eax, eax	     10180	option.c	FUNCTION_65	IF_1
0x4004b14	           0xf95c0	                                setne al	     10180	option.c	FUNCTION_65	IF_1
0x4004b17	           0xfb6c0	                           movzx eax, al	     10180	option.c	FUNCTION_65	IF_1
0x4004b1a	              0x5b	                                 pop rbx	     10183	option.c	FUNCTION_65
0x4004b1b	              0xc3	                                     ret	     10183	option.c	FUNCTION_65
set_init_3	SWITCH,0:functions,0:ELSE,4:FOR,0:IF,17:DO,0:CALL,38:WHILE,0	136
0x40030e4	            0x4156	                                push r14	      4037	option.c	FUNCTION_10
0x40030e6	            0x4155	                                push r13	      4037	option.c	FUNCTION_10
0x40030e8	            0x4154	                                push r12	      4037	option.c	FUNCTION_10
0x40030ea	              0x55	                                push rbp	      4037	option.c	FUNCTION_10
0x40030eb	              0x53	                                push rbx	      4037	option.c	FUNCTION_10
0x40030ec	      0xbf00000000	                              mov edi, 0	      4052	option.c	FUNCTION_10	CALL_1
0x40030f1	      0xe821d2ffff	                     call sym.findoption	      4052	option.c	FUNCTION_10	CALL_1
0x40030f6	          0x4189c4	                           mov r12d, eax	      4052	option.c	FUNCTION_10	CALL_1
0x40030f9	      0xbb00000000	                              mov ebx, 0	      4054	option.c	FUNCTION_10	IF_1
0x40030fe	            0x85c0	                           test eax, eax	      4053	option.c	FUNCTION_10	IF_1
0x4003100	            0x7818	                            js 0x400311a	      4053	option.c	FUNCTION_10	IF_1
0x4003102	            0x4898	                                    cdqe	      4056	option.c	FUNCTION_10	ELSE_1
0x4003104	        0x48c1e006	                              shl rax, 6	      4056	option.c	FUNCTION_10	ELSE_1
0x4003108	    0x488b98000000	                    mov rbx, qword [rax]	      4056	option.c	FUNCTION_10	ELSE_1
0x400310f	        0x48c1eb08	                              shr rbx, 8	      4056	option.c	FUNCTION_10	ELSE_1
0x4003113	        0x4883f301	                              xor rbx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x4003117	          0x83e301	                              and ebx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x400311a	      0xbf00000000	                              mov edi, 0	      4058	option.c	FUNCTION_10	CALL_2
0x400311f	      0xe8f3d1ffff	                     call sym.findoption	      4058	option.c	FUNCTION_10	CALL_2
0x4003124	          0x4189c5	                           mov r13d, eax	      4058	option.c	FUNCTION_10	CALL_2
0x4003127	      0xbd00000000	                              mov ebp, 0	      4060	option.c	FUNCTION_10	IF_2
0x400312c	            0x85c0	                           test eax, eax	      4059	option.c	FUNCTION_10	IF_2
0x400312e	            0x7818	                            js 0x4003148	      4059	option.c	FUNCTION_10	IF_2
0x4003130	            0x4898	                                    cdqe	      4062	option.c	FUNCTION_10	ELSE_2
0x4003132	        0x48c1e006	                              shl rax, 6	      4062	option.c	FUNCTION_10	ELSE_2
0x4003136	    0x488ba8000000	                    mov rbp, qword [rax]	      4062	option.c	FUNCTION_10	ELSE_2
0x400313d	        0x48c1ed08	                              shr rbp, 8	      4062	option.c	FUNCTION_10	ELSE_2
0x4003141	        0x4883f501	                              xor rbp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x4003145	          0x83e501	                              and ebp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x4003148	      0xe800000000	                          call 0x400314d	      4064	option.c	FUNCTION_10	CALL_3
0x400314d	          0x4989c6	                            mov r14, rax	      4064	option.c	FUNCTION_10	CALL_3
0x4003150	          0x4885c0	                           test rax, rax	      4065	option.c	FUNCTION_10	IF_3
0x4003153	     0xf8441010000	                            je 0x400329a	      4065	option.c	FUNCTION_10	IF_3
0x4003159	      0xbe00000000	                              mov esi, 0	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400315e	          0x4889c7	                            mov rdi, rax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003161	      0xe800000000	                          call 0x4003166	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003166	            0x85c0	                           test eax, eax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003168	            0x7411	                            je 0x400317b	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400316a	      0xbe00000000	                              mov esi, 0	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400316f	          0x4c89f7	                            mov rdi, r14	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003172	      0xe800000000	                          call 0x4003177	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003177	            0x85c0	                           test eax, eax	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003179	            0x754c	                           jne 0x40031c7	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400317b	            0x85ed	                           test ebp, ebp	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400317d	            0x741d	                            je 0x400319c	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400317f	    0x48c705000000	               mov qword [0x0400318a], 0	      4085	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400318a	          0x4d63ed	                        movsxd r13, r13d	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400318d	        0x49c1e506	                              shl r13, 6	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003191	    0x49c785000000	                      mov qword [r13], 0	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400319c	            0x85db	                           test ebx, ebx	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400319e	     0xf84ee000000	                            je 0x4003292	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031a4	    0x48c705000000	               mov qword [0x040031af], 0	      4092	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031af	          0x4d63e4	                        movsxd r12, r12d	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031b2	        0x49c1e406	                              shl r12, 6	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031b6	    0x49c784240000	                      mov qword [r12], 0	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031c2	      0xe9cb000000	                           jmp 0x4003292	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40031c7	      0xbe00000000	                              mov esi, 0	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40031cc	          0x4c89f7	                            mov rdi, r14	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40031cf	      0xe800000000	                          call 0x40031d4	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40031d4	            0x85c0	                           test eax, eax	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40031d6	            0x7477	                            je 0x400324f	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40031d8	      0xbe00000000	                              mov esi, 0	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40031dd	          0x4c89f7	                            mov rdi, r14	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40031e0	      0xe800000000	                          call 0x40031e5	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40031e5	            0x85c0	                           test eax, eax	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40031e7	            0x7466	                            je 0x400324f	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x40031e9	      0xbe00000000	                              mov esi, 0	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40031ee	          0x4c89f7	                            mov rdi, r14	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40031f1	      0xe800000000	                          call 0x40031f6	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40031f6	            0x85c0	                           test eax, eax	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40031f8	            0x7455	                            je 0x400324f	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x40031fa	      0xbe00000000	                              mov esi, 0	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40031ff	          0x4c89f7	                            mov rdi, r14	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003202	      0xe800000000	                          call 0x4003207	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003207	            0x85c0	                           test eax, eax	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003209	            0x7444	                            je 0x400324f	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x400320b	      0xbe00000000	                              mov esi, 0	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003210	          0x4c89f7	                            mov rdi, r14	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003213	      0xe800000000	                          call 0x4003218	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003218	            0x85c0	                           test eax, eax	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x400321a	            0x7433	                            je 0x400324f	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x400321c	      0xbe00000000	                              mov esi, 0	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003221	          0x4c89f7	                            mov rdi, r14	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003224	      0xe800000000	                          call 0x4003229	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003229	            0x85c0	                           test eax, eax	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x400322b	            0x7422	                            je 0x400324f	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x400322d	      0xbe00000000	                              mov esi, 0	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4003232	          0x4c89f7	                            mov rdi, r14	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x4003235	      0xe800000000	                          call 0x400323a	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x400323a	            0x85c0	                           test eax, eax	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x400323c	            0x7411	                            je 0x400324f	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x400323e	      0xbe00000000	                              mov esi, 0	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x4003243	          0x4c89f7	                            mov rdi, r14	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x4003246	      0xe800000000	                          call 0x400324b	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400324b	            0x85c0	                           test eax, eax	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400324d	            0x7543	                           jne 0x4003292	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x400324f	            0x85ed	                           test ebp, ebp	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003251	            0x741d	                            je 0x4003270	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003253	    0x48c705000000	               mov qword [0x0400325e], 0	      4125	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400325e	          0x4d63ed	                        movsxd r13, r13d	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003261	        0x49c1e506	                              shl r13, 6	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003265	    0x49c785000000	                      mov qword [r13], 0	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003270	            0x85db	                           test ebx, ebx	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003272	            0x741e	                            je 0x4003292	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003274	    0x48c705000000	               mov qword [0x0400327f], 0	      4132	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400327f	          0x4d63e4	                        movsxd r12, r12d	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003282	        0x49c1e406	                              shl r12, 6	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003286	    0x49c784240000	                      mov qword [r12], 0	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003292	          0x4c89f7	                            mov rdi, r14	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x4003295	      0xe800000000	                          call 0x400329a	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x400329a	    0x488b05000000	            mov rax, qword [0x040032a1] 	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032a1	        0x48833801	                      cmp qword [rax], 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032a5	            0x753d	                           jne 0x40032e4	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032a7	      0xbf01000000	                              mov edi, 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032ac	      0xe800000000	                          call 0x40032b1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032b1	          0x803800	                       cmp byte [rax], 0	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032b4	            0x752e	                           jne 0x40032e4	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40032b6	      0xbf00000000	                              mov edi, 0	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40032bb	      0xe857d0ffff	                     call sym.findoption	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40032c0	            0x85c0	                           test eax, eax	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032c2	            0x7820	                            js 0x40032e4	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032c4	            0x4898	                                    cdqe	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032c6	        0x48c1e006	                              shl rax, 6	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032ca	    0xf68000000000	                      test byte [rax], 1	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032d1	            0x7411	                            je 0x40032e4	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40032d3	      0xe800000000	                          call 0x40032d8	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40032d8	      0xbe04000000	                              mov esi, 4	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40032dd	            0x89c7	                            mov edi, eax	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40032df	      0xe800000000	                          call 0x40032e4	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x40032e4	      0xe800000000	                          call 0x40032e9	      4211	option.c	FUNCTION_10	CALL_38
0x40032e9	              0x5b	                                 pop rbx	      4213	option.c	FUNCTION_10
0x40032ea	              0x5d	                                 pop rbp	      4213	option.c	FUNCTION_10
0x40032eb	            0x415c	                                 pop r12	      4213	option.c	FUNCTION_10
0x40032ed	            0x415d	                                 pop r13	      4213	option.c	FUNCTION_10
0x40032ef	            0x415e	                                 pop r14	      4213	option.c	FUNCTION_10
0x40032f1	              0xc3	                                     ret	      4213	option.c	FUNCTION_10
save_file_ff	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,3:WHILE,0	28
0x400acdc	              0x55	                                push rbp	     12457	option.c	FUNCTION_110
0x400acdd	              0x53	                                push rbx	     12457	option.c	FUNCTION_110
0x400acde	        0x4883ec08	                              sub rsp, 8	     12457	option.c	FUNCTION_110
0x400ace2	          0x4889fb	                            mov rbx, rdi	     12457	option.c	FUNCTION_110
0x400ace5	    0x488b87901400	          mov rax, qword [rdi + 0x1490] 	     12458	option.c	FUNCTION_110
0x400acec	           0xfb600	                   movzx eax, byte [rax]	     12458	option.c	FUNCTION_110
0x400acef	    0x898704170000	          mov dword [rdi + 0x1704], eax 	     12458	option.c	FUNCTION_110
0x400acf5	    0x8b8770140000	          mov eax, dword [rdi + 0x1470] 	     12459	option.c	FUNCTION_110
0x400acfb	    0x898700170000	          mov dword [rdi + 0x1700], eax 	     12459	option.c	FUNCTION_110
0x400ad01	    0x8b870c140000	          mov eax, dword [rdi + 0x140c] 	     12461	option.c	FUNCTION_110
0x400ad07	    0x898714170000	          mov dword [rdi + 0x1714], eax 	     12461	option.c	FUNCTION_110
0x400ad0d	    0x488baf081700	          mov rbp, qword [rdi + 0x1708] 	     12464	option.c	FUNCTION_110	IF_1
0x400ad14	          0x4885ed	                           test rbp, rbp	     12464	option.c	FUNCTION_110	IF_1
0x400ad17	            0x7413	                            je 0x400ad2c	     12464	option.c	FUNCTION_110	IF_1
0x400ad19	    0x488bb7881400	          mov rsi, qword [rdi + 0x1488] 	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400ad20	          0x4889ef	                            mov rdi, rbp	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400ad23	      0xe800000000	                          call 0x400ad28	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400ad28	            0x85c0	                           test eax, eax	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400ad2a	            0x741b	                            je 0x400ad47	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400ad2c	          0x4889ef	                            mov rdi, rbp	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x400ad2f	      0xe800000000	                          call 0x400ad34	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x400ad34	    0x488bbb881400	          mov rdi, qword [rbx + 0x1488] 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400ad3b	      0xe800000000	                          call 0x400ad40	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400ad40	    0x488983081700	          mov qword [rbx + 0x1708], rax 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400ad47	        0x4883c408	                              add rsp, 8	     12471	option.c	FUNCTION_110
0x400ad4b	              0x5b	                                 pop rbx	     12471	option.c	FUNCTION_110
0x400ad4c	              0x5d	                                 pop rbp	     12471	option.c	FUNCTION_110
0x400ad4d	              0xc3	                                     ret	     12471	option.c	FUNCTION_110
set_options_default	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,5:WHILE,0	59
0x4003fda	            0x4155	                                push r13	      3837	option.c	FUNCTION_3
0x4003fdc	            0x4154	                                push r12	      3837	option.c	FUNCTION_3
0x4003fde	              0x55	                                push rbp	      3837	option.c	FUNCTION_3
0x4003fdf	              0x53	                                push rbx	      3837	option.c	FUNCTION_3
0x4003fe0	        0x4883ec08	                              sub rsp, 8	      3837	option.c	FUNCTION_3
0x4003fe4	          0x4189fd	                           mov r13d, edi	      3837	option.c	FUNCTION_3
0x4003fe7	      0xbb00000000	                              mov ebx, 0	      3837	option.c	FUNCTION_3
0x4003fec	      0xbd00000000	                              mov ebp, 0	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4003ff1	            0xeb45	                           jmp 0x4004038	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4003ff3	        0xf6431040	           test byte [rbx + 0x10], 0x40 	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4003ff7	            0x7538	                           jne 0x4004031	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4003ff9	          0x4585ed	                         test r13d, r13d	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x4003ffc	            0x7423	                            je 0x4004021	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x4003ffe	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x4004003	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004009	           0xf95c1	                                setne cl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400400c	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004012	           0xf95c2	                                setne dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004015	            0x84d1	                             test cl, dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004017	            0x7418	                            je 0x4004031	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004019	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400401f	            0x7410	                            je 0x4004031	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004021	    0x8b1500000000	            mov edx, dword [0x04004027] 	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4004027	          0x4489ee	                           mov esi, r13d	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400402a	            0x89ef	                            mov edi, ebp	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400402c	      0xe8f6fdffff	             call sym.set_option_default	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4004031	          0x83c501	                              add ebp, 1	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004034	        0x4883c340	                           add rbx, 0x40	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004038	          0x4989dc	                            mov r12, rbx	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400403b	          0x4889df	                            mov rdi, rbx	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400403e	      0xe8aec1ffff	                   call sym.istermoption	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004043	            0x85c0	                           test eax, eax	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004045	            0x74ac	                            je 0x4003ff3	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004047	    0x488b2d000000	            mov rbp, qword [0x0400404e] 	      3860	option.c	FUNCTION_3	CALL_3
0x400404e	          0x4885ed	                           test rbp, rbp	      3860	option.c	FUNCTION_3	CALL_3
0x4004051	            0x7435	                            je 0x4004088	      3860	option.c	FUNCTION_3	CALL_3
0x4004053	    0x48392d000000	            cmp qword [0x0400405a], rbp 	      3860	option.c	FUNCTION_3	CALL_3
0x400405a	            0x7406	                            je 0x4004062	      3860	option.c	FUNCTION_3	CALL_3
0x400405c	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x4004060	            0xeb07	                           jmp 0x4004069	      3860	option.c	FUNCTION_3	CALL_3
0x4004062	    0x488b1d000000	            mov rbx, qword [0x04004069] 	      3860	option.c	FUNCTION_3	CALL_3
0x4004069	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x400406c	            0x7411	                            je 0x400407f	      3860	option.c	FUNCTION_3	CALL_3
0x400406e	          0x4889df	                            mov rdi, rbx	      3861	option.c	FUNCTION_3	CALL_4
0x4004071	      0xe800000000	                          call 0x4004076	      3861	option.c	FUNCTION_3	CALL_4
0x4004076	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x400407a	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x400407d	            0x75ef	                           jne 0x400406e	      3860	option.c	FUNCTION_3	CALL_3
0x400407f	        0x488b6d00	                    mov rbp, qword [rbp]	      3860	option.c	FUNCTION_3	CALL_3
0x4004083	          0x4885ed	                           test rbp, rbp	      3860	option.c	FUNCTION_3	CALL_3
0x4004086	            0x75cb	                           jne 0x4004053	      3860	option.c	FUNCTION_3	CALL_3
0x4004088	    0x488b3d000000	            mov rdi, qword [0x0400408f] 	      3863	option.c	FUNCTION_3	CALL_5
0x400408f	      0xe800000000	                          call 0x4004094	      3863	option.c	FUNCTION_3	CALL_5
0x4004094	        0x4883c408	                              add rsp, 8	      3865	option.c	FUNCTION_3
0x4004098	              0x5b	                                 pop rbx	      3865	option.c	FUNCTION_3
0x4004099	              0x5d	                                 pop rbp	      3865	option.c	FUNCTION_3
0x400409a	            0x415c	                                 pop r12	      3865	option.c	FUNCTION_3
0x400409c	            0x415d	                                 pop r13	      3865	option.c	FUNCTION_3
0x400409e	              0xc3	                                     ret	      3865	option.c	FUNCTION_3
option_value2string	SWITCH,0:functions,0:ELSE,7:FOR,0:IF,7:DO,0:CALL,10:WHILE,0	84
0x400287f	              0x55	                                push rbp	     11769	option.c	FUNCTION_91
0x4002880	              0x53	                                push rbx	     11769	option.c	FUNCTION_91
0x4002881	        0x4883ec08	                              sub rsp, 8	     11769	option.c	FUNCTION_91
0x4002885	          0x4889fb	                            mov rbx, rdi	     11769	option.c	FUNCTION_91
0x4002888	      0xe827eeffff	                 call sym.get_varp_scope	     11772	option.c	FUNCTION_91	CALL_1
0x400288d	          0x4889c5	                            mov rbp, rax	     11772	option.c	FUNCTION_91	CALL_1
0x4002890	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     11774	option.c	FUNCTION_91	IF_1
0x4002894	            0xa802	                              test al, 2	     11774	option.c	FUNCTION_91	IF_1
0x4002896	     0xf8491000000	                            je 0x400292d	     11774	option.c	FUNCTION_91	IF_1
0x400289c	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x40028a3	            0x7409	                            je 0x40028ae	     11813	option.c	FUNCTION_92	IF_1
0x40028a5	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x40028ac	            0x7554	                           jne 0x4002902	     11813	option.c	FUNCTION_92	IF_1
0x40028ae	        0x488b5d00	                    mov rbx, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x40028b2	          0x4885db	                           test rbx, rbx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x40028b5	            0x780b	                            js 0x40028c2	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x40028b7	            0x89df	                            mov edi, ebx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x40028b9	      0xe800000000	                          call 0x40028be	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x40028be	            0x85c0	                           test eax, eax	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x40028c0	            0x7820	                            js 0x40028e2	     11778	option.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x40028c2	      0xbe00000000	                              mov esi, 0	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40028c7	            0x89df	                            mov edi, ebx	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40028c9	      0xe800000000	                          call 0x40028ce	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x40028ce	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x40028d1	    0x488b3d000000	            mov rdi, qword [0x040028d8] 	       110	string3.h	FUNCTION_143	CALL_3
0x40028d8	      0xe800000000	                          call 0x40028dd	       110	string3.h	FUNCTION_143	CALL_3
0x40028dd	      0xe9e8000000	                           jmp 0x40029ca	       110	string3.h	FUNCTION_143	CALL_3
0x40028e2	          0x4885db	                           test rbx, rbx	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40028e5	            0x741b	                            je 0x4002902	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40028e7	            0x89df	                            mov edi, ebx	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40028e9	      0xe800000000	                          call 0x40028ee	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40028ee	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x40028f1	    0x488b3d000000	            mov rdi, qword [0x040028f8] 	       110	string3.h	FUNCTION_143	CALL_3
0x40028f8	      0xe800000000	                          call 0x40028fd	       110	string3.h	FUNCTION_143	CALL_3
0x40028fd	      0xe9c8000000	                           jmp 0x40029ca	       110	string3.h	FUNCTION_143	CALL_3
0x4002902	        0x4c8b4500	                     mov r8, qword [rbp]	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002906	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x400290b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002912	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002917	    0x488b3d000000	            mov rdi, qword [0x0400291e] 	        33	stdio2.h	FUNCTION_120	CALL_1
0x400291e	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002923	      0xe800000000	                          call 0x4002928	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002928	      0xe99d000000	                           jmp 0x40029ca	        33	stdio2.h	FUNCTION_120	CALL_1
0x400292d	        0x488b7500	                    mov rsi, qword [rbp]	     11787	option.c	FUNCTION_91	ELSE_3
0x4002931	          0x4885f6	                           test rsi, rsi	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x4002934	            0x750f	                           jne 0x4002945	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x4002936	    0x488b05000000	            mov rax, qword [0x0400293d] 	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x400293d	          0xc60000	                       mov byte [rax], 0	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4002940	      0xe985000000	                           jmp 0x40029ca	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4002945	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002949	    0x4881fa000000	                              cmp rdx, 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002950	            0x751a	                           jne 0x400296c	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002952	          0x803e00	                       cmp byte [rsi], 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002955	            0x746d	                            je 0x40029c4	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002957	    0x488b05000000	            mov rax, qword [0x0400295e] 	       110	string3.h	FUNCTION_143	CALL_3
0x400295e	    0xc7002a2a2a2a	            mov dword [rax], 0x2a2a2a2a 	       110	string3.h	FUNCTION_143	CALL_3
0x4002964	    0x66c740042a00	                mov word [rax + 4], 0x2a	       110	string3.h	FUNCTION_143	CALL_3
0x400296a	            0xeb5e	                           jmp 0x40029ca	       110	string3.h	FUNCTION_143	CALL_3
0x400296c	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400296e	            0x741e	                            je 0x400298e	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002970	    0x41b800000000	                              mov r8d, 0	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002976	      0xb900100000	                         mov ecx, 0x1000	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400297b	    0x488b15000000	            mov rdx, qword [0x04002982] 	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002982	      0xbf00000000	                              mov edi, 0	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002987	      0xe800000000	                          call 0x400298c	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400298c	            0xeb3c	                           jmp 0x40029ca	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400298e	    0x4881fa000000	                              cmp rdx, 0	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4002995	            0x751a	                           jne 0x40029b1	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4002997	      0xba00100000	                         mov edx, 0x1000	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x400299c	    0x488b35000000	            mov rsi, qword [0x040029a3] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40029a3	    0x488b3d000000	            mov rdi, qword [0x040029aa] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40029aa	      0xe800000000	                          call 0x40029af	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40029af	            0xeb19	                           jmp 0x40029ca	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40029b1	      0xbaff0f0000	                          mov edx, 0xfff	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40029b6	    0x488b3d000000	            mov rdi, qword [0x040029bd] 	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40029bd	      0xe800000000	                          call 0x40029c2	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40029c2	            0xeb06	                           jmp 0x40029ca	     11803	option.c	FUNCTION_91
0x40029c4	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40029c6	            0x74e9	                            je 0x40029b1	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40029c8	            0xeba6	                           jmp 0x4002970	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40029ca	        0x4883c408	                              add rsp, 8	     11803	option.c	FUNCTION_91
0x40029ce	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x40029cf	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x40029d0	              0xc3	                                     ret	     11803	option.c	FUNCTION_91
get_varp	SWITCH,1:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	733
0x4000666	        0x4883ec08	                              sub rsp, 8	     10590	option.c	FUNCTION_77
0x400066a	        0x488b4718	            mov rax, qword [rdi + 0x18] 	     10592	option.c	FUNCTION_77	IF_1
0x400066e	          0x4885c0	                           test rax, rax	     10592	option.c	FUNCTION_77	IF_1
0x4000671	     0xf8438100000	                            je 0x40016af	     10592	option.c	FUNCTION_77	IF_1
0x4000677	          0x8b5720	            mov edx, dword [rdi + 0x20] 	     10595	option.c	FUNCTION_77	SWITCH_1
0x400067a	    0x81fa21400000	                         cmp edx, 0x4021	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000680	     0xf847e0d0000	                            je 0x4001404	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000686	    0x81fa21400000	                         cmp edx, 0x4021	     10595	option.c	FUNCTION_77	SWITCH_1
0x400068c	     0xf87a7030000	                            ja 0x4000a39	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000692	    0x81fa1c200000	                         cmp edx, 0x201c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000698	     0xf846e0b0000	                            je 0x400120c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400069e	    0x81fa1c200000	                         cmp edx, 0x201c	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006a4	     0xf878e010000	                            ja 0x4000838	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006aa	    0x81fa0d200000	                         cmp edx, 0x200d	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006b0	     0xf845a0a0000	                            je 0x4001110	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006b6	    0x81fa0d200000	                         cmp edx, 0x200d	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006bc	     0xf87b9000000	                            ja 0x400077b	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006c2	    0x81fa05200000	                         cmp edx, 0x2005	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006c8	     0xf84f20b0000	                            je 0x40012c0	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006ce	    0x81fa05200000	                         cmp edx, 0x2005	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006d4	            0x7757	                            ja 0x400072d	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006d6	    0x81fa01200000	                         cmp edx, 0x2001	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006dc	     0xf84b0090000	                            je 0x4001092	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006e2	    0x81fa01200000	                         cmp edx, 0x2001	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006e8	            0x7726	                            ja 0x4000710	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006ea	            0x85d2	                           test edx, edx	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006ec	     0xf84bd0f0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x40006f2	    0x488b05000000	            mov rax, qword [0x040006f9] 	     10662	option.c	FUNCTION_77	SWITCH_1
0x40006f9	    0x480534020000	                          add rax, 0x234	     10662	option.c	FUNCTION_77	SWITCH_1
0x40006ff	    0x81fa00200000	                         cmp edx, 0x2000	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000705	     0xf84a40f0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x400070b	      0xe9760f0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000710	    0x81fa03200000	                         cmp edx, 0x2003	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000716	     0xf84800b0000	                            je 0x400129c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400071c	    0x81fa03200000	                         cmp edx, 0x2003	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000722	     0xf86620b0000	                           jbe 0x400128a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000728	      0xe9810b0000	                           jmp 0x40012ae	     10595	option.c	FUNCTION_77	SWITCH_1
0x400072d	    0x81fa09200000	                         cmp edx, 0x2009	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000733	     0xf848f090000	                            je 0x40010c8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000739	    0x81fa09200000	                         cmp edx, 0x2009	     10595	option.c	FUNCTION_77	SWITCH_1
0x400073f	            0x771d	                            ja 0x400075e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000741	    0x81fa07200000	                         cmp edx, 0x2007	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000747	     0xf84f50a0000	                            je 0x4001242	     10595	option.c	FUNCTION_77	SWITCH_1
0x400074d	    0x81fa07200000	                         cmp edx, 0x2007	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000753	     0xf861f0b0000	                           jbe 0x4001278	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000759	      0xe9f60a0000	                           jmp 0x4001254	     10595	option.c	FUNCTION_77	SWITCH_1
0x400075e	    0x81fa0b200000	                         cmp edx, 0x200b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000764	     0xf8482090000	                            je 0x40010ec	     10595	option.c	FUNCTION_77	SWITCH_1
0x400076a	    0x81fa0b200000	                         cmp edx, 0x200b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000770	     0xf8664090000	                           jbe 0x40010da	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000776	      0xe983090000	                           jmp 0x40010fe	     10595	option.c	FUNCTION_77	SWITCH_1
0x400077b	    0x81fa14200000	                         cmp edx, 0x2014	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000781	     0xf84a90a0000	                            je 0x4001230	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000787	    0x81fa14200000	                         cmp edx, 0x2014	     10595	option.c	FUNCTION_77	SWITCH_1
0x400078d	            0x775b	                            ja 0x40007ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x400078f	    0x81fa10200000	                         cmp edx, 0x2010	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000795	     0xf8499090000	                            je 0x4001134	     10595	option.c	FUNCTION_77	SWITCH_1
0x400079b	    0x81fa10200000	                         cmp edx, 0x2010	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007a1	            0x772a	                            ja 0x40007cd	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007a3	    0x81fa0e200000	                         cmp edx, 0x200e	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007a9	     0xf8473090000	                            je 0x4001122	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007af	    0x488b05000000	            mov rax, qword [0x040007b6] 	     10680	option.c	FUNCTION_77	SWITCH_1
0x40007b6	    0x480508020000	                          add rax, 0x208	     10680	option.c	FUNCTION_77	SWITCH_1
0x40007bc	    0x81fa0f200000	                         cmp edx, 0x200f	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007c2	     0xf84e70e0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007c8	      0xe9b90e0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007cd	    0x81fa12200000	                         cmp edx, 0x2012	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007d3	     0xf847f090000	                            je 0x4001158	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007d9	    0x81fa12200000	                         cmp edx, 0x2012	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007df	     0xf8661090000	                           jbe 0x4001146	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007e5	      0xe980090000	                           jmp 0x400116a	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007ea	    0x81fa18200000	                         cmp edx, 0x2018	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007f0	     0xf84e0090000	                            je 0x40011d6	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007f6	    0x81fa18200000	                         cmp edx, 0x2018	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007fc	            0x771d	                            ja 0x400081b	     10595	option.c	FUNCTION_77	SWITCH_1
0x40007fe	    0x81fa16200000	                         cmp edx, 0x2016	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000804	     0xf8484090000	                            je 0x400118e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400080a	    0x81fa16200000	                         cmp edx, 0x2016	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000810	     0xf8666090000	                           jbe 0x400117c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000816	      0xe985090000	                           jmp 0x40011a0	     10595	option.c	FUNCTION_77	SWITCH_1
0x400081b	    0x81fa1a200000	                         cmp edx, 0x201a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000821	     0xf84d3090000	                            je 0x40011fa	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000827	    0x81fa1a200000	                         cmp edx, 0x201a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400082d	     0xf86b5090000	                           jbe 0x40011e8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000833	      0xe92e0a0000	                           jmp 0x4001266	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000838	    0x81fa0a400000	                         cmp edx, 0x400a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400083e	     0xf84c40a0000	                            je 0x4001308	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000844	    0x81fa0a400000	                         cmp edx, 0x400a	     10595	option.c	FUNCTION_77	SWITCH_1
0x400084a	     0xf87fb000000	                            ja 0x400094b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000850	    0x81fa24200000	                         cmp edx, 0x2024	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000856	     0xf84c2090000	                            je 0x400121e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400085c	    0x81fa24200000	                         cmp edx, 0x2024	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000862	            0x7774	                            ja 0x40008d8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000864	    0x81fa1f200000	                         cmp edx, 0x201f	     10595	option.c	FUNCTION_77	SWITCH_1
0x400086a	     0xf8446080000	                            je 0x40010b6	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000870	    0x81fa1f200000	                         cmp edx, 0x201f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000876	            0x772a	                            ja 0x40008a2	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000878	    0x81fa1d200000	                         cmp edx, 0x201d	     10595	option.c	FUNCTION_77	SWITCH_1
0x400087e	     0xf8420080000	                            je 0x40010a4	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000884	    0x488b05000000	            mov rax, qword [0x0400088b] 	     10667	option.c	FUNCTION_77	SWITCH_1
0x400088b	    0x48056c020000	                          add rax, 0x26c	     10667	option.c	FUNCTION_77	SWITCH_1
0x4000891	    0x81fa1e200000	                         cmp edx, 0x201e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000897	     0xf84120e0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x400089d	      0xe9e40d0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008a2	    0x81fa22200000	                         cmp edx, 0x2022	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008a8	     0xf8404090000	                            je 0x40011b2	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008ae	    0x81fa22200000	                         cmp edx, 0x2022	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008b4	     0xf870a090000	                            ja 0x40011c4	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008ba	    0x488b05000000	            mov rax, qword [0x040008c1] 	     10669	option.c	FUNCTION_77	SWITCH_1
0x40008c1	    0x480578020000	                          add rax, 0x278	     10669	option.c	FUNCTION_77	SWITCH_1
0x40008c7	    0x81fa20200000	                         cmp edx, 0x2020	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008cd	     0xf84dc0d0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008d3	      0xe9ae0d0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008d8	    0x81fa02400000	                         cmp edx, 0x4002	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008de	     0xf84360a0000	                            je 0x400131a	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008e4	    0x81fa02400000	                         cmp edx, 0x4002	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008ea	            0x7729	                            ja 0x4000915	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008ec	    0x81fa21300000	                         cmp edx, 0x3021	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008f2	     0xf8415070000	                            je 0x400100d	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008f8	    0x81fa00400000	                         cmp edx, 0x4000	     10595	option.c	FUNCTION_77	SWITCH_1
0x40008fe	     0xf84e0090000	                            je 0x40012e4	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000904	    0x81fa25200000	                         cmp edx, 0x2025	     10595	option.c	FUNCTION_77	SWITCH_1
0x400090a	     0xf85760d0000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000910	      0xe9620d0000	                           jmp 0x4001677	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000915	    0x81fa08400000	                         cmp edx, 0x4008	     10595	option.c	FUNCTION_77	SWITCH_1
0x400091b	     0xf84d5090000	                            je 0x40012f6	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000921	    0x81fa08400000	                         cmp edx, 0x4008	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000927	     0xf87ff090000	                            ja 0x400132c	     10595	option.c	FUNCTION_77	SWITCH_1
0x400092d	    0x488b05000000	            mov rax, qword [0x04000934] 	     10727	option.c	FUNCTION_77	SWITCH_1
0x4000934	    0x480518140000	                         add rax, 0x1418	     10727	option.c	FUNCTION_77	SWITCH_1
0x400093a	    0x81fa04400000	                         cmp edx, 0x4004	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000940	     0xf84690d0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000946	      0xe93b0d0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x400094b	    0x81fa12400000	                         cmp edx, 0x4012	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000951	     0xf842f0a0000	                            je 0x4001386	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000957	    0x81fa12400000	                         cmp edx, 0x4012	     10595	option.c	FUNCTION_77	SWITCH_1
0x400095d	            0x7774	                            ja 0x40009d3	     10595	option.c	FUNCTION_77	SWITCH_1
0x400095f	    0x81fa0d400000	                         cmp edx, 0x400d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000965	     0xf84e5090000	                            je 0x4001350	     10595	option.c	FUNCTION_77	SWITCH_1
0x400096b	    0x81fa0d400000	                         cmp edx, 0x400d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000971	            0x772a	                            ja 0x400099d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000973	    0x81fa0b400000	                         cmp edx, 0x400b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000979	     0xf84bf090000	                            je 0x400133e	     10595	option.c	FUNCTION_77	SWITCH_1
0x400097f	    0x488b05000000	            mov rax, qword [0x04000986] 	     10731	option.c	FUNCTION_77	SWITCH_1
0x4000986	    0x480528140000	                         add rax, 0x1428	     10731	option.c	FUNCTION_77	SWITCH_1
0x400098c	    0x81fa0c400000	                         cmp edx, 0x400c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000992	     0xf84170d0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000998	      0xe9e90c0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x400099d	    0x81fa0f400000	                         cmp edx, 0x400f	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009a3	     0xf84cb090000	                            je 0x4001374	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009a9	    0x81fa0f400000	                         cmp edx, 0x400f	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009af	     0xf82ad090000	                            jb 0x4001362	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009b5	    0x488b05000000	            mov rax, qword [0x040009bc] 	     10742	option.c	FUNCTION_77	SWITCH_1
0x40009bc	    0x480550140000	                         add rax, 0x1450	     10742	option.c	FUNCTION_77	SWITCH_1
0x40009c2	    0x81fa11400000	                         cmp edx, 0x4011	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009c8	     0xf84e10c0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009ce	      0xe9b30c0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009d3	    0x81fa1a400000	                         cmp edx, 0x401a	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009d9	     0xf84ef090000	                            je 0x40013ce	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009df	    0x81fa1a400000	                         cmp edx, 0x401a	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009e5	            0x7729	                            ja 0x4000a10	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009e7	    0x81fa16400000	                         cmp edx, 0x4016	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009ed	     0xf84b7090000	                            je 0x40013aa	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009f3	    0x81fa19400000	                         cmp edx, 0x4019	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009f9	     0xf84bd090000	                            je 0x40013bc	     10595	option.c	FUNCTION_77	SWITCH_1
0x40009ff	    0x81fa13400000	                         cmp edx, 0x4013	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a05	     0xf857b0c0000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a0b	      0xe988090000	                           jmp 0x4001398	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a10	    0x81fa1d400000	                         cmp edx, 0x401d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a16	     0xf84d6090000	                            je 0x40013f2	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a1c	    0x81fa20400000	                         cmp edx, 0x4020	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a22	     0xf84900a0000	                            je 0x40014b8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a28	    0x81fa1c400000	                         cmp edx, 0x401c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a2e	     0xf85520c0000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a34	      0xe9a7090000	                           jmp 0x40013e0	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a39	    0x81fa43400000	                         cmp edx, 0x4043	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a3f	     0xf844b0b0000	                            je 0x4001590	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a45	    0x81fa43400000	                         cmp edx, 0x4043	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a4b	     0xf87b7010000	                            ja 0x4000c08	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a51	    0x81fa33400000	                         cmp edx, 0x4033	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a57	     0xf84910a0000	                            je 0x40014ee	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a5d	    0x81fa33400000	                         cmp edx, 0x4033	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a63	     0xf87c9000000	                            ja 0x4000b32	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a69	    0x81fa28400000	                         cmp edx, 0x4028	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a6f	     0xf84310a0000	                            je 0x40014a6	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a75	    0x81fa28400000	                         cmp edx, 0x4028	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a7b	            0x775b	                            ja 0x4000ad8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a7d	    0x81fa24400000	                         cmp edx, 0x4024	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a83	     0xf848d090000	                            je 0x4001416	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a89	    0x81fa24400000	                         cmp edx, 0x4024	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a8f	            0x772a	                            ja 0x4000abb	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a91	    0x81fa22400000	                         cmp edx, 0x4022	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a97	     0xf848b090000	                            je 0x4001428	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000a9d	    0x488b05000000	            mov rax, qword [0x04000aa4] 	     10759	option.c	FUNCTION_77	SWITCH_1
0x4000aa4	    0x4805a0140000	                         add rax, 0x14a0	     10759	option.c	FUNCTION_77	SWITCH_1
0x4000aaa	    0x81fa23400000	                         cmp edx, 0x4023	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ab0	     0xf84f90b0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ab6	      0xe9cb0b0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000abb	    0x81fa26400000	                         cmp edx, 0x4026	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ac1	     0xf8485090000	                            je 0x400144c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ac7	    0x81fa26400000	                         cmp edx, 0x4026	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000acd	     0xf8667090000	                           jbe 0x400143a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ad3	      0xe9bc090000	                           jmp 0x4001494	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ad8	    0x81fa2c400000	                         cmp edx, 0x402c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ade	     0xf84e6090000	                            je 0x40014ca	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ae4	    0x81fa2c400000	                         cmp edx, 0x402c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000aea	            0x771d	                            ja 0x4000b09	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000aec	    0x81fa2a400000	                         cmp edx, 0x402a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000af2	     0xf8466090000	                            je 0x400145e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000af8	    0x81fa2a400000	                         cmp edx, 0x402a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000afe	     0xf867e090000	                           jbe 0x4001482	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b04	      0xe967090000	                           jmp 0x4001470	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b09	    0x81fa2f400000	                         cmp edx, 0x402f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b0f	     0xf84c7090000	                            je 0x40014dc	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b15	    0x81fa32400000	                         cmp edx, 0x4032	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b1b	     0xf84df090000	                            je 0x4001500	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b21	    0x81fa2d400000	                         cmp edx, 0x402d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b27	     0xf85590b0000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b2d	      0xe9360b0000	                           jmp 0x4001668	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b32	    0x81fa3b400000	                         cmp edx, 0x403b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b38	     0xf841c0a0000	                            je 0x400155a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b3e	    0x81fa3b400000	                         cmp edx, 0x403b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b44	            0x7774	                            ja 0x4000bba	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b46	    0x81fa36400000	                         cmp edx, 0x4036	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b4c	     0xf84d2090000	                            je 0x4001524	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b52	    0x81fa36400000	                         cmp edx, 0x4036	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b58	            0x772a	                            ja 0x4000b84	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b5a	    0x81fa34400000	                         cmp edx, 0x4034	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b60	     0xf84ac090000	                            je 0x4001512	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b66	    0x488b05000000	            mov rax, qword [0x04000b6d] 	     10784	option.c	FUNCTION_77	SWITCH_1
0x4000b6d	    0x480530150000	                         add rax, 0x1530	     10784	option.c	FUNCTION_77	SWITCH_1
0x4000b73	    0x81fa35400000	                         cmp edx, 0x4035	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b79	     0xf84300b0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b7f	      0xe9020b0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b84	    0x81fa39400000	                         cmp edx, 0x4039	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b8a	     0xf84a6090000	                            je 0x4001536	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b90	    0x81fa39400000	                         cmp edx, 0x4039	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b96	     0xf87ac090000	                            ja 0x4001548	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000b9c	    0x488b05000000	            mov rax, qword [0x04000ba3] 	     10749	option.c	FUNCTION_77	SWITCH_1
0x4000ba3	    0x480568140000	                         add rax, 0x1468	     10749	option.c	FUNCTION_77	SWITCH_1
0x4000ba9	    0x81fa37400000	                         cmp edx, 0x4037	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000baf	     0xf84fa0a0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bb5	      0xe9cc0a0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bba	    0x81fa3f400000	                         cmp edx, 0x403f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bc0	     0xf84120a0000	                            je 0x40015d8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bc6	    0x81fa3f400000	                         cmp edx, 0x403f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bcc	            0x771d	                            ja 0x4000beb	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bce	    0x81fa3d400000	                         cmp edx, 0x403d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bd4	     0xf84a4090000	                            je 0x400157e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bda	    0x81fa3d400000	                         cmp edx, 0x403d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000be0	     0xf8686090000	                           jbe 0x400156c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000be6	      0xe9db090000	                           jmp 0x40015c6	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000beb	    0x81fa41400000	                         cmp edx, 0x4041	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bf1	     0xf84090a0000	                            je 0x4001600	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bf7	    0x81fa41400000	                         cmp edx, 0x4041	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000bfd	     0xf86e7090000	                           jbe 0x40015ea	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c03	      0xe90e0a0000	                           jmp 0x4001616	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c08	    0x81fa10500000	                         cmp edx, 0x5010	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c0e	     0xf84d8030000	                            je 0x4000fec	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c14	    0x81fa10500000	                         cmp edx, 0x5010	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c1a	     0xf87ee000000	                            ja 0x4000d0e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c20	    0x81fa4c400000	                         cmp edx, 0x404c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c26	     0xf841e0a0000	                            je 0x400164a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c2c	    0x81fa4c400000	                         cmp edx, 0x404c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c32	            0x7774	                            ja 0x4000ca8	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c34	    0x81fa46400000	                         cmp edx, 0x4046	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c3a	     0xf8474090000	                            je 0x40015b4	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c40	    0x81fa46400000	                         cmp edx, 0x4046	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c46	            0x772a	                            ja 0x4000c72	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c48	    0x81fa44400000	                         cmp edx, 0x4044	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c4e	     0xf844e090000	                            je 0x40015a2	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c54	    0x488b05000000	            mov rax, qword [0x04000c5b] 	     10811	option.c	FUNCTION_77	SWITCH_1
0x4000c5b	    0x480568150000	                         add rax, 0x1568	     10811	option.c	FUNCTION_77	SWITCH_1
0x4000c61	    0x81fa45400000	                         cmp edx, 0x4045	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c67	     0xf84420a0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c6d	      0xe9140a0000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c72	    0x81fa4a400000	                         cmp edx, 0x404a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c78	     0xf84ae090000	                            je 0x400162c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c7e	    0x81fa4a400000	                         cmp edx, 0x404a	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c84	     0xf87b1090000	                            ja 0x400163b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c8a	    0x488b05000000	            mov rax, qword [0x04000c91] 	     10812	option.c	FUNCTION_77	SWITCH_1
0x4000c91	    0x4805a8150000	                         add rax, 0x15a8	     10812	option.c	FUNCTION_77	SWITCH_1
0x4000c97	    0x81fa49400000	                         cmp edx, 0x4049	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000c9d	     0xf840c0a0000	                            je 0x40016af	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ca3	      0xe9de090000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ca8	    0x81fa03500000	                         cmp edx, 0x5003	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cae	     0xf84ee010000	                            je 0x4000ea2	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cb4	    0x81fa03500000	                         cmp edx, 0x5003	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cba	            0x7729	                            ja 0x4000ce5	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cbc	    0x81fa4f400000	                         cmp edx, 0x404f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cc2	     0xf840a060000	                            je 0x40012d2	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cc8	    0x81fa01500000	                         cmp edx, 0x5001	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cce	     0xf846e010000	                            je 0x4000e42	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cd4	    0x81fa4e400000	                         cmp edx, 0x404e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cda	     0xf85a6090000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ce0	      0xe974090000	                           jmp 0x4001659	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ce5	    0x81fa06500000	                         cmp edx, 0x5006	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ceb	     0xf8498020000	                            je 0x4000f89	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cf1	    0x81fa07500000	                         cmp edx, 0x5007	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cf7	     0xf84ad020000	                            je 0x4000faa	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000cfd	    0x81fa05500000	                         cmp edx, 0x5005	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d03	     0xf857d090000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d09	      0xe95a020000	                           jmp 0x4000f68	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d0e	    0x81fa1f500000	                         cmp edx, 0x501f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d14	     0xf84b1020000	                            je 0x4000fcb	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d1a	    0x81fa1f500000	                         cmp edx, 0x501f	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d20	            0x775a	                            ja 0x4000d7c	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d22	    0x81fa17500000	                         cmp edx, 0x5017	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d28	     0xf8495010000	                            je 0x4000ec3	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d2e	    0x81fa17500000	                         cmp edx, 0x5017	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d34	            0x771d	                            ja 0x4000d53	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d36	    0x81fa14500000	                         cmp edx, 0x5014	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d3c	     0xf84c3010000	                            je 0x4000f05	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d42	    0x81fa15500000	                         cmp edx, 0x5015	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d48	     0xf84d8010000	                            je 0x4000f26	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d4e	      0xe933090000	                           jmp 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d53	    0x81fa1b500000	                         cmp edx, 0x501b	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d59	     0xf8480000000	                            je 0x4000ddf	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d5f	    0x81fa1e500000	                         cmp edx, 0x501e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d65	     0xf84dc010000	                            je 0x4000f47	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d6b	    0x81fa18500000	                         cmp edx, 0x5018	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d71	     0xf850f090000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d77	      0xe968010000	                           jmp 0x4000ee4	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d7c	    0x81fa38500000	                         cmp edx, 0x5038	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d82	     0xf8499000000	                            je 0x4000e21	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d88	    0x81fa38500000	                         cmp edx, 0x5038	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d8e	            0x7726	                            ja 0x4000db6	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d90	    0x81fa30500000	                         cmp edx, 0x5030	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d96	     0xf84b4020000	                            je 0x4001050	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000d9c	    0x81fa31500000	                         cmp edx, 0x5031	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000da2	     0xf84c9020000	                            je 0x4001071	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000da8	    0x81fa2e500000	                         cmp edx, 0x502e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dae	     0xf85d2080000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000db4	            0xeb4a	                           jmp 0x4000e00	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000db6	    0x81fa48500000	                         cmp edx, 0x5048	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dbc	     0xf84bf000000	                            je 0x4000e81	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dc2	    0x81fa4d500000	                         cmp edx, 0x504d	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dc8	     0xf8460020000	                            je 0x400102e	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dce	    0x81fa47500000	                         cmp edx, 0x5047	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dd4	     0xf85ac080000	                           jne 0x4001686	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000dda	      0xe981000000	                           jmp 0x4000e60	     10595	option.c	FUNCTION_77	SWITCH_1
0x4000ddf	    0x488b15000000	            mov rdx, qword [0x04000de6] 	     10600	option.c	FUNCTION_77	SWITCH_1
0x4000de6	    0x488b8a081600	          mov rcx, qword [rdx + 0x1608] 	     10600	option.c	FUNCTION_77	SWITCH_1
0x4000ded	    0x4881c2081600	                         add rdx, 0x1608	     10601	option.c	FUNCTION_77	SWITCH_1
0x4000df4	          0x803900	                       cmp byte [rcx], 0	     10601	option.c	FUNCTION_77	SWITCH_1
0x4000df7	        0x480f45c2	                         cmovne rax, rdx	     10601	option.c	FUNCTION_77	SWITCH_1
0x4000dfb	      0xe9af080000	                           jmp 0x40016af	     10601	option.c	FUNCTION_77	SWITCH_1
0x4000e00	    0x488b15000000	            mov rdx, qword [0x04000e07] 	     10602	option.c	FUNCTION_77	SWITCH_1
0x4000e07	    0x488b8a181500	          mov rcx, qword [rdx + 0x1518] 	     10602	option.c	FUNCTION_77	SWITCH_1
0x4000e0e	    0x4881c2181500	                         add rdx, 0x1518	     10603	option.c	FUNCTION_77	SWITCH_1
0x4000e15	          0x803900	                       cmp byte [rcx], 0	     10603	option.c	FUNCTION_77	SWITCH_1
0x4000e18	        0x480f45c2	                         cmovne rax, rdx	     10603	option.c	FUNCTION_77	SWITCH_1
0x4000e1c	      0xe98e080000	                           jmp 0x40016af	     10603	option.c	FUNCTION_77	SWITCH_1
0x4000e21	    0x488b15000000	            mov rdx, qword [0x04000e28] 	     10604	option.c	FUNCTION_77	SWITCH_1
0x4000e28	    0x488b8a101600	          mov rcx, qword [rdx + 0x1610] 	     10604	option.c	FUNCTION_77	SWITCH_1
0x4000e2f	    0x4881c2101600	                         add rdx, 0x1610	     10605	option.c	FUNCTION_77	SWITCH_1
0x4000e36	          0x803900	                       cmp byte [rcx], 0	     10605	option.c	FUNCTION_77	SWITCH_1
0x4000e39	        0x480f45c2	                         cmovne rax, rdx	     10605	option.c	FUNCTION_77	SWITCH_1
0x4000e3d	      0xe96d080000	                           jmp 0x40016af	     10605	option.c	FUNCTION_77	SWITCH_1
0x4000e42	    0x488b15000000	            mov rdx, qword [0x04000e49] 	     10606	option.c	FUNCTION_77	SWITCH_1
0x4000e49	    0x488d8a181600	                 lea rcx, [rdx + 0x1618]	     10607	option.c	FUNCTION_77	SWITCH_1
0x4000e50	    0x83ba18160000	             cmp dword [rdx + 0x1618], 0	     10607	option.c	FUNCTION_77	SWITCH_1
0x4000e57	        0x480f49c1	                         cmovns rax, rcx	     10607	option.c	FUNCTION_77	SWITCH_1
0x4000e5b	      0xe94f080000	                           jmp 0x40016af	     10607	option.c	FUNCTION_77	SWITCH_1
0x4000e60	    0x488b15000000	            mov rdx, qword [0x04000e67] 	     10608	option.c	FUNCTION_77	SWITCH_1
0x4000e67	    0x488b8a201600	          mov rcx, qword [rdx + 0x1620] 	     10608	option.c	FUNCTION_77	SWITCH_1
0x4000e6e	    0x4881c2201600	                         add rdx, 0x1620	     10609	option.c	FUNCTION_77	SWITCH_1
0x4000e75	          0x803900	                       cmp byte [rcx], 0	     10609	option.c	FUNCTION_77	SWITCH_1
0x4000e78	        0x480f45c2	                         cmovne rax, rdx	     10609	option.c	FUNCTION_77	SWITCH_1
0x4000e7c	      0xe92e080000	                           jmp 0x40016af	     10609	option.c	FUNCTION_77	SWITCH_1
0x4000e81	    0x488b15000000	            mov rdx, qword [0x04000e88] 	     10610	option.c	FUNCTION_77	SWITCH_1
0x4000e88	    0x488b8a281600	          mov rcx, qword [rdx + 0x1628] 	     10610	option.c	FUNCTION_77	SWITCH_1
0x4000e8f	    0x4881c2281600	                         add rdx, 0x1628	     10611	option.c	FUNCTION_77	SWITCH_1
0x4000e96	          0x803900	                       cmp byte [rcx], 0	     10611	option.c	FUNCTION_77	SWITCH_1
0x4000e99	        0x480f45c2	                         cmovne rax, rdx	     10611	option.c	FUNCTION_77	SWITCH_1
0x4000e9d	      0xe90d080000	                           jmp 0x40016af	     10611	option.c	FUNCTION_77	SWITCH_1
0x4000ea2	    0x488b15000000	            mov rdx, qword [0x04000ea9] 	     10612	option.c	FUNCTION_77	SWITCH_1
0x4000ea9	    0x488b8af81300	          mov rcx, qword [rdx + 0x13f8] 	     10612	option.c	FUNCTION_77	SWITCH_1
0x4000eb0	    0x4881c2f81300	                         add rdx, 0x13f8	     10613	option.c	FUNCTION_77	SWITCH_1
0x4000eb7	          0x803900	                       cmp byte [rcx], 0	     10613	option.c	FUNCTION_77	SWITCH_1
0x4000eba	        0x480f45c2	                         cmovne rax, rdx	     10613	option.c	FUNCTION_77	SWITCH_1
0x4000ebe	      0xe9ec070000	                           jmp 0x40016af	     10613	option.c	FUNCTION_77	SWITCH_1
0x4000ec3	    0x488b15000000	            mov rdx, qword [0x04000eca] 	     10615	option.c	FUNCTION_77	SWITCH_1
0x4000eca	    0x488b8ac01400	          mov rcx, qword [rdx + 0x14c0] 	     10615	option.c	FUNCTION_77	SWITCH_1
0x4000ed1	    0x4881c2c01400	                         add rdx, 0x14c0	     10616	option.c	FUNCTION_77	SWITCH_1
0x4000ed8	          0x803900	                       cmp byte [rcx], 0	     10616	option.c	FUNCTION_77	SWITCH_1
0x4000edb	        0x480f45c2	                         cmovne rax, rdx	     10616	option.c	FUNCTION_77	SWITCH_1
0x4000edf	      0xe9cb070000	                           jmp 0x40016af	     10616	option.c	FUNCTION_77	SWITCH_1
0x4000ee4	    0x488b15000000	            mov rdx, qword [0x04000eeb] 	     10617	option.c	FUNCTION_77	SWITCH_1
0x4000eeb	    0x488b8ac81400	          mov rcx, qword [rdx + 0x14c8] 	     10617	option.c	FUNCTION_77	SWITCH_1
0x4000ef2	    0x4881c2c81400	                         add rdx, 0x14c8	     10618	option.c	FUNCTION_77	SWITCH_1
0x4000ef9	          0x803900	                       cmp byte [rcx], 0	     10618	option.c	FUNCTION_77	SWITCH_1
0x4000efc	        0x480f45c2	                         cmovne rax, rdx	     10618	option.c	FUNCTION_77	SWITCH_1
0x4000f00	      0xe9aa070000	                           jmp 0x40016af	     10618	option.c	FUNCTION_77	SWITCH_1
0x4000f05	    0x488b15000000	            mov rdx, qword [0x04000f0c] 	     10621	option.c	FUNCTION_77	SWITCH_1
0x4000f0c	    0x488b8a381600	          mov rcx, qword [rdx + 0x1638] 	     10621	option.c	FUNCTION_77	SWITCH_1
0x4000f13	    0x4881c2381600	                         add rdx, 0x1638	     10622	option.c	FUNCTION_77	SWITCH_1
0x4000f1a	          0x803900	                       cmp byte [rcx], 0	     10622	option.c	FUNCTION_77	SWITCH_1
0x4000f1d	        0x480f45c2	                         cmovne rax, rdx	     10622	option.c	FUNCTION_77	SWITCH_1
0x4000f21	      0xe989070000	                           jmp 0x40016af	     10622	option.c	FUNCTION_77	SWITCH_1
0x4000f26	    0x488b15000000	            mov rdx, qword [0x04000f2d] 	     10623	option.c	FUNCTION_77	SWITCH_1
0x4000f2d	    0x488b8a401600	          mov rcx, qword [rdx + 0x1640] 	     10623	option.c	FUNCTION_77	SWITCH_1
0x4000f34	    0x4881c2401600	                         add rdx, 0x1640	     10624	option.c	FUNCTION_77	SWITCH_1
0x4000f3b	          0x803900	                       cmp byte [rcx], 0	     10624	option.c	FUNCTION_77	SWITCH_1
0x4000f3e	        0x480f45c2	                         cmovne rax, rdx	     10624	option.c	FUNCTION_77	SWITCH_1
0x4000f42	      0xe968070000	                           jmp 0x40016af	     10624	option.c	FUNCTION_77	SWITCH_1
0x4000f47	    0x488b15000000	            mov rdx, qword [0x04000f4e] 	     10626	option.c	FUNCTION_77	SWITCH_1
0x4000f4e	    0x488b8af81400	          mov rcx, qword [rdx + 0x14f8] 	     10626	option.c	FUNCTION_77	SWITCH_1
0x4000f55	    0x4881c2f81400	                         add rdx, 0x14f8	     10627	option.c	FUNCTION_77	SWITCH_1
0x4000f5c	          0x803900	                       cmp byte [rcx], 0	     10627	option.c	FUNCTION_77	SWITCH_1
0x4000f5f	        0x480f45c2	                         cmovne rax, rdx	     10627	option.c	FUNCTION_77	SWITCH_1
0x4000f63	      0xe947070000	                           jmp 0x40016af	     10627	option.c	FUNCTION_77	SWITCH_1
0x4000f68	    0x488b15000000	            mov rdx, qword [0x04000f6f] 	     10629	option.c	FUNCTION_77	SWITCH_1
0x4000f6f	    0x488b8a001600	          mov rcx, qword [rdx + 0x1600] 	     10629	option.c	FUNCTION_77	SWITCH_1
0x4000f76	    0x4881c2001600	                         add rdx, 0x1600	     10630	option.c	FUNCTION_77	SWITCH_1
0x4000f7d	          0x803900	                       cmp byte [rcx], 0	     10630	option.c	FUNCTION_77	SWITCH_1
0x4000f80	        0x480f45c2	                         cmovne rax, rdx	     10630	option.c	FUNCTION_77	SWITCH_1
0x4000f84	      0xe926070000	                           jmp 0x40016af	     10630	option.c	FUNCTION_77	SWITCH_1
0x4000f89	    0x488b15000000	            mov rdx, qword [0x04000f90] 	     10631	option.c	FUNCTION_77	SWITCH_1
0x4000f90	    0x488b8af01500	          mov rcx, qword [rdx + 0x15f0] 	     10631	option.c	FUNCTION_77	SWITCH_1
0x4000f97	    0x4881c2f01500	                         add rdx, 0x15f0	     10632	option.c	FUNCTION_77	SWITCH_1
0x4000f9e	          0x803900	                       cmp byte [rcx], 0	     10632	option.c	FUNCTION_77	SWITCH_1
0x4000fa1	        0x480f45c2	                         cmovne rax, rdx	     10632	option.c	FUNCTION_77	SWITCH_1
0x4000fa5	      0xe905070000	                           jmp 0x40016af	     10632	option.c	FUNCTION_77	SWITCH_1
0x4000faa	    0x488b15000000	            mov rdx, qword [0x04000fb1] 	     10633	option.c	FUNCTION_77	SWITCH_1
0x4000fb1	    0x488b8af81500	          mov rcx, qword [rdx + 0x15f8] 	     10633	option.c	FUNCTION_77	SWITCH_1
0x4000fb8	    0x4881c2f81500	                         add rdx, 0x15f8	     10634	option.c	FUNCTION_77	SWITCH_1
0x4000fbf	          0x803900	                       cmp byte [rcx], 0	     10634	option.c	FUNCTION_77	SWITCH_1
0x4000fc2	        0x480f45c2	                         cmovne rax, rdx	     10634	option.c	FUNCTION_77	SWITCH_1
0x4000fc6	      0xe9e4060000	                           jmp 0x40016af	     10634	option.c	FUNCTION_77	SWITCH_1
0x4000fcb	    0x488b15000000	            mov rdx, qword [0x04000fd2] 	     10637	option.c	FUNCTION_77	SWITCH_1
0x4000fd2	    0x488b8a381700	          mov rcx, qword [rdx + 0x1738] 	     10637	option.c	FUNCTION_77	SWITCH_1
0x4000fd9	    0x4881c2381700	                         add rdx, 0x1738	     10638	option.c	FUNCTION_77	SWITCH_1
0x4000fe0	          0x803900	                       cmp byte [rcx], 0	     10638	option.c	FUNCTION_77	SWITCH_1
0x4000fe3	        0x480f45c2	                         cmovne rax, rdx	     10638	option.c	FUNCTION_77	SWITCH_1
0x4000fe7	      0xe9c3060000	                           jmp 0x40016af	     10638	option.c	FUNCTION_77	SWITCH_1
0x4000fec	    0x488b15000000	            mov rdx, qword [0x04000ff3] 	     10641	option.c	FUNCTION_77	SWITCH_1
0x4000ff3	    0x488b8a481700	          mov rcx, qword [rdx + 0x1748] 	     10641	option.c	FUNCTION_77	SWITCH_1
0x4000ffa	    0x4881c2481700	                         add rdx, 0x1748	     10642	option.c	FUNCTION_77	SWITCH_1
0x4001001	          0x803900	                       cmp byte [rcx], 0	     10642	option.c	FUNCTION_77	SWITCH_1
0x4001004	        0x480f45c2	                         cmovne rax, rdx	     10642	option.c	FUNCTION_77	SWITCH_1
0x4001008	      0xe9a2060000	                           jmp 0x40016af	     10642	option.c	FUNCTION_77	SWITCH_1
0x400100d	    0x488b15000000	            mov rdx, qword [0x04001014] 	     10645	option.c	FUNCTION_77	SWITCH_1
0x4001014	    0x488b8a800200	           mov rcx, qword [rdx + 0x280] 	     10645	option.c	FUNCTION_77	SWITCH_1
0x400101b	    0x4881c2800200	                          add rdx, 0x280	     10646	option.c	FUNCTION_77	SWITCH_1
0x4001022	          0x803900	                       cmp byte [rcx], 0	     10646	option.c	FUNCTION_77	SWITCH_1
0x4001025	        0x480f45c2	                         cmovne rax, rdx	     10646	option.c	FUNCTION_77	SWITCH_1
0x4001029	      0xe981060000	                           jmp 0x40016af	     10646	option.c	FUNCTION_77	SWITCH_1
0x400102e	    0x488b15000000	            mov rdx, qword [0x04001035] 	     10648	option.c	FUNCTION_77	SWITCH_1
0x4001035	    0x488d8a481600	                 lea rcx, [rdx + 0x1648]	     10649	option.c	FUNCTION_77	SWITCH_1
0x400103c	    0x4881ba481600	cmp qword [rdx + 0x1648], 0xfffffffffffe1dc0	     10649	option.c	FUNCTION_77	SWITCH_1
0x4001047	        0x480f45c1	                         cmovne rax, rcx	     10649	option.c	FUNCTION_77	SWITCH_1
0x400104b	      0xe95f060000	                           jmp 0x40016af	     10649	option.c	FUNCTION_77	SWITCH_1
0x4001050	    0x488b15000000	            mov rdx, qword [0x04001057] 	     10651	option.c	FUNCTION_77	SWITCH_1
0x4001057	    0x488b8a581600	          mov rcx, qword [rdx + 0x1658] 	     10651	option.c	FUNCTION_77	SWITCH_1
0x400105e	    0x4881c2581600	                         add rdx, 0x1658	     10652	option.c	FUNCTION_77	SWITCH_1
0x4001065	          0x803900	                       cmp byte [rcx], 0	     10652	option.c	FUNCTION_77	SWITCH_1
0x4001068	        0x480f45c2	                         cmovne rax, rdx	     10652	option.c	FUNCTION_77	SWITCH_1
0x400106c	      0xe93e060000	                           jmp 0x40016af	     10652	option.c	FUNCTION_77	SWITCH_1
0x4001071	    0x488b15000000	            mov rdx, qword [0x04001078] 	     10655	option.c	FUNCTION_77	SWITCH_1
0x4001078	    0x488b8a281500	          mov rcx, qword [rdx + 0x1528] 	     10655	option.c	FUNCTION_77	SWITCH_1
0x400107f	    0x4881c2281500	                         add rdx, 0x1528	     10656	option.c	FUNCTION_77	SWITCH_1
0x4001086	          0x803900	                       cmp byte [rcx], 0	     10656	option.c	FUNCTION_77	SWITCH_1
0x4001089	        0x480f45c2	                         cmovne rax, rdx	     10656	option.c	FUNCTION_77	SWITCH_1
0x400108d	      0xe91d060000	                           jmp 0x40016af	     10656	option.c	FUNCTION_77	SWITCH_1
0x4001092	    0x488b05000000	            mov rax, qword [0x04001099] 	     10660	option.c	FUNCTION_77	SWITCH_1
0x4001099	    0x4805b0010000	                          add rax, 0x1b0	     10660	option.c	FUNCTION_77	SWITCH_1
0x400109f	      0xe90b060000	                           jmp 0x40016af	     10660	option.c	FUNCTION_77	SWITCH_1
0x40010a4	    0x488b05000000	            mov rax, qword [0x040010ab] 	     10664	option.c	FUNCTION_77	SWITCH_1
0x40010ab	    0x480568020000	                          add rax, 0x268	     10664	option.c	FUNCTION_77	SWITCH_1
0x40010b1	      0xe9f9050000	                           jmp 0x40016af	     10664	option.c	FUNCTION_77	SWITCH_1
0x40010b6	    0x488b05000000	            mov rax, qword [0x040010bd] 	     10668	option.c	FUNCTION_77	SWITCH_1
0x40010bd	    0x480570020000	                          add rax, 0x270	     10668	option.c	FUNCTION_77	SWITCH_1
0x40010c3	      0xe9e7050000	                           jmp 0x40016af	     10668	option.c	FUNCTION_77	SWITCH_1
0x40010c8	    0x488b05000000	            mov rax, qword [0x040010cf] 	     10672	option.c	FUNCTION_77	SWITCH_1
0x40010cf	    0x4805c0010000	                          add rax, 0x1c0	     10672	option.c	FUNCTION_77	SWITCH_1
0x40010d5	      0xe9d5050000	                           jmp 0x40016af	     10672	option.c	FUNCTION_77	SWITCH_1
0x40010da	    0x488b05000000	            mov rax, qword [0x040010e1] 	     10675	option.c	FUNCTION_77	SWITCH_1
0x40010e1	    0x4805c8010000	                          add rax, 0x1c8	     10675	option.c	FUNCTION_77	SWITCH_1
0x40010e7	      0xe9c3050000	                           jmp 0x40016af	     10675	option.c	FUNCTION_77	SWITCH_1
0x40010ec	    0x488b05000000	            mov rax, qword [0x040010f3] 	     10676	option.c	FUNCTION_77	SWITCH_1
0x40010f3	    0x4805d4010000	                          add rax, 0x1d4	     10676	option.c	FUNCTION_77	SWITCH_1
0x40010f9	      0xe9b1050000	                           jmp 0x40016af	     10676	option.c	FUNCTION_77	SWITCH_1
0x40010fe	    0x488b05000000	            mov rax, qword [0x04001105] 	     10677	option.c	FUNCTION_77	SWITCH_1
0x4001105	    0x4805e0010000	                          add rax, 0x1e0	     10677	option.c	FUNCTION_77	SWITCH_1
0x400110b	      0xe99f050000	                           jmp 0x40016af	     10677	option.c	FUNCTION_77	SWITCH_1
0x4001110	    0x488b05000000	            mov rax, qword [0x04001117] 	     10678	option.c	FUNCTION_77	SWITCH_1
0x4001117	    0x4805e8010000	                          add rax, 0x1e8	     10678	option.c	FUNCTION_77	SWITCH_1
0x400111d	      0xe98d050000	                           jmp 0x40016af	     10678	option.c	FUNCTION_77	SWITCH_1
0x4001122	    0x488b05000000	            mov rax, qword [0x04001129] 	     10679	option.c	FUNCTION_77	SWITCH_1
0x4001129	    0x4805f8010000	                          add rax, 0x1f8	     10679	option.c	FUNCTION_77	SWITCH_1
0x400112f	      0xe97b050000	                           jmp 0x40016af	     10679	option.c	FUNCTION_77	SWITCH_1
0x4001134	    0x488b05000000	            mov rax, qword [0x0400113b] 	     10681	option.c	FUNCTION_77	SWITCH_1
0x400113b	    0x480510020000	                          add rax, 0x210	     10681	option.c	FUNCTION_77	SWITCH_1
0x4001141	      0xe969050000	                           jmp 0x40016af	     10681	option.c	FUNCTION_77	SWITCH_1
0x4001146	    0x488b05000000	            mov rax, qword [0x0400114d] 	     10683	option.c	FUNCTION_77	SWITCH_1
0x400114d	    0x480518020000	                          add rax, 0x218	     10683	option.c	FUNCTION_77	SWITCH_1
0x4001153	      0xe957050000	                           jmp 0x40016af	     10683	option.c	FUNCTION_77	SWITCH_1
0x4001158	    0x488b05000000	            mov rax, qword [0x0400115f] 	     10684	option.c	FUNCTION_77	SWITCH_1
0x400115f	    0x480520020000	                          add rax, 0x220	     10684	option.c	FUNCTION_77	SWITCH_1
0x4001165	      0xe945050000	                           jmp 0x40016af	     10684	option.c	FUNCTION_77	SWITCH_1
0x400116a	    0x488b05000000	            mov rax, qword [0x04001171] 	     10686	option.c	FUNCTION_77	SWITCH_1
0x4001171	    0x480528020000	                          add rax, 0x228	     10686	option.c	FUNCTION_77	SWITCH_1
0x4001177	      0xe933050000	                           jmp 0x40016af	     10686	option.c	FUNCTION_77	SWITCH_1
0x400117c	    0x488b05000000	            mov rax, qword [0x04001183] 	     10688	option.c	FUNCTION_77	SWITCH_1
0x4001183	    0x480538020000	                          add rax, 0x238	     10688	option.c	FUNCTION_77	SWITCH_1
0x4001189	      0xe921050000	                           jmp 0x40016af	     10688	option.c	FUNCTION_77	SWITCH_1
0x400118e	    0x488b05000000	            mov rax, qword [0x04001195] 	     10689	option.c	FUNCTION_77	SWITCH_1
0x4001195	    0x48053c020000	                          add rax, 0x23c	     10689	option.c	FUNCTION_77	SWITCH_1
0x400119b	      0xe90f050000	                           jmp 0x40016af	     10689	option.c	FUNCTION_77	SWITCH_1
0x40011a0	    0x488b05000000	            mov rax, qword [0x040011a7] 	     10691	option.c	FUNCTION_77	SWITCH_1
0x40011a7	    0x480540020000	                          add rax, 0x240	     10691	option.c	FUNCTION_77	SWITCH_1
0x40011ad	      0xe9fd040000	                           jmp 0x40016af	     10691	option.c	FUNCTION_77	SWITCH_1
0x40011b2	    0x488b05000000	            mov rax, qword [0x040011b9] 	     10693	option.c	FUNCTION_77	SWITCH_1
0x40011b9	    0x480548020000	                          add rax, 0x248	     10693	option.c	FUNCTION_77	SWITCH_1
0x40011bf	      0xe9eb040000	                           jmp 0x40016af	     10693	option.c	FUNCTION_77	SWITCH_1
0x40011c4	    0x488b05000000	            mov rax, qword [0x040011cb] 	     10694	option.c	FUNCTION_77	SWITCH_1
0x40011cb	    0x48054c020000	                          add rax, 0x24c	     10694	option.c	FUNCTION_77	SWITCH_1
0x40011d1	      0xe9d9040000	                           jmp 0x40016af	     10694	option.c	FUNCTION_77	SWITCH_1
0x40011d6	    0x488b05000000	            mov rax, qword [0x040011dd] 	     10696	option.c	FUNCTION_77	SWITCH_1
0x40011dd	    0x480550020000	                          add rax, 0x250	     10696	option.c	FUNCTION_77	SWITCH_1
0x40011e3	      0xe9c7040000	                           jmp 0x40016af	     10696	option.c	FUNCTION_77	SWITCH_1
0x40011e8	    0x488b05000000	            mov rax, qword [0x040011ef] 	     10699	option.c	FUNCTION_77	SWITCH_1
0x40011ef	    0x480554020000	                          add rax, 0x254	     10699	option.c	FUNCTION_77	SWITCH_1
0x40011f5	      0xe9b5040000	                           jmp 0x40016af	     10699	option.c	FUNCTION_77	SWITCH_1
0x40011fa	    0x488b05000000	            mov rax, qword [0x04001201] 	     10700	option.c	FUNCTION_77	SWITCH_1
0x4001201	    0x480558020000	                          add rax, 0x258	     10700	option.c	FUNCTION_77	SWITCH_1
0x4001207	      0xe9a3040000	                           jmp 0x40016af	     10700	option.c	FUNCTION_77	SWITCH_1
0x400120c	    0x488b05000000	            mov rax, qword [0x04001213] 	     10702	option.c	FUNCTION_77	SWITCH_1
0x4001213	    0x480560020000	                          add rax, 0x260	     10702	option.c	FUNCTION_77	SWITCH_1
0x4001219	      0xe991040000	                           jmp 0x40016af	     10702	option.c	FUNCTION_77	SWITCH_1
0x400121e	    0x488b05000000	            mov rax, qword [0x04001225] 	     10703	option.c	FUNCTION_77	SWITCH_1
0x4001225	    0x480594020000	                          add rax, 0x294	     10703	option.c	FUNCTION_77	SWITCH_1
0x400122b	      0xe97f040000	                           jmp 0x40016af	     10703	option.c	FUNCTION_77	SWITCH_1
0x4001230	    0x488b05000000	            mov rax, qword [0x04001237] 	     10705	option.c	FUNCTION_77	SWITCH_1
0x4001237	    0x480530020000	                          add rax, 0x230	     10705	option.c	FUNCTION_77	SWITCH_1
0x400123d	      0xe96d040000	                           jmp 0x40016af	     10705	option.c	FUNCTION_77	SWITCH_1
0x4001242	    0x488b05000000	            mov rax, qword [0x04001249] 	     10706	option.c	FUNCTION_77	SWITCH_1
0x4001249	    0x4805b4010000	                          add rax, 0x1b4	     10706	option.c	FUNCTION_77	SWITCH_1
0x400124f	      0xe95b040000	                           jmp 0x40016af	     10706	option.c	FUNCTION_77	SWITCH_1
0x4001254	    0x488b05000000	            mov rax, qword [0x0400125b] 	     10707	option.c	FUNCTION_77	SWITCH_1
0x400125b	    0x4805b8010000	                          add rax, 0x1b8	     10707	option.c	FUNCTION_77	SWITCH_1
0x4001261	      0xe949040000	                           jmp 0x40016af	     10707	option.c	FUNCTION_77	SWITCH_1
0x4001266	    0x488b05000000	            mov rax, qword [0x0400126d] 	     10709	option.c	FUNCTION_77	SWITCH_1
0x400126d	    0x480588020000	                          add rax, 0x288	     10709	option.c	FUNCTION_77	SWITCH_1
0x4001273	      0xe937040000	                           jmp 0x40016af	     10709	option.c	FUNCTION_77	SWITCH_1
0x4001278	    0x488b05000000	            mov rax, qword [0x0400127f] 	     10710	option.c	FUNCTION_77	SWITCH_1
0x400127f	    0x4805b0020000	                          add rax, 0x2b0	     10710	option.c	FUNCTION_77	SWITCH_1
0x4001285	      0xe925040000	                           jmp 0x40016af	     10710	option.c	FUNCTION_77	SWITCH_1
0x400128a	    0x488b05000000	            mov rax, qword [0x04001291] 	     10712	option.c	FUNCTION_77	SWITCH_1
0x4001291	    0x4805a0020000	                          add rax, 0x2a0	     10712	option.c	FUNCTION_77	SWITCH_1
0x4001297	      0xe913040000	                           jmp 0x40016af	     10712	option.c	FUNCTION_77	SWITCH_1
0x400129c	    0x488b05000000	            mov rax, qword [0x040012a3] 	     10713	option.c	FUNCTION_77	SWITCH_1
0x40012a3	    0x4805a8020000	                          add rax, 0x2a8	     10713	option.c	FUNCTION_77	SWITCH_1
0x40012a9	      0xe901040000	                           jmp 0x40016af	     10713	option.c	FUNCTION_77	SWITCH_1
0x40012ae	    0x488b05000000	            mov rax, qword [0x040012b5] 	     10716	option.c	FUNCTION_77	SWITCH_1
0x40012b5	    0x4805c0020000	                          add rax, 0x2c0	     10716	option.c	FUNCTION_77	SWITCH_1
0x40012bb	      0xe9ef030000	                           jmp 0x40016af	     10716	option.c	FUNCTION_77	SWITCH_1
0x40012c0	    0x488b05000000	            mov rax, qword [0x040012c7] 	     10717	option.c	FUNCTION_77	SWITCH_1
0x40012c7	    0x4805c8020000	                          add rax, 0x2c8	     10717	option.c	FUNCTION_77	SWITCH_1
0x40012cd	      0xe9dd030000	                           jmp 0x40016af	     10717	option.c	FUNCTION_77	SWITCH_1
0x40012d2	    0x488b05000000	            mov rax, qword [0x040012d9] 	     10718	option.c	FUNCTION_77	SWITCH_1
0x40012d9	    0x480560160000	                         add rax, 0x1660	     10718	option.c	FUNCTION_77	SWITCH_1
0x40012df	      0xe9cb030000	                           jmp 0x40016af	     10718	option.c	FUNCTION_77	SWITCH_1
0x40012e4	    0x488b05000000	            mov rax, qword [0x040012eb] 	     10721	option.c	FUNCTION_77	SWITCH_1
0x40012eb	    0x4805ec130000	                         add rax, 0x13ec	     10721	option.c	FUNCTION_77	SWITCH_1
0x40012f1	      0xe9b9030000	                           jmp 0x40016af	     10721	option.c	FUNCTION_77	SWITCH_1
0x40012f6	    0x488b05000000	            mov rax, qword [0x040012fd] 	     10722	option.c	FUNCTION_77	SWITCH_1
0x40012fd	    0x480508140000	                         add rax, 0x1408	     10722	option.c	FUNCTION_77	SWITCH_1
0x4001303	      0xe9a7030000	                           jmp 0x40016af	     10722	option.c	FUNCTION_77	SWITCH_1
0x4001308	    0x488b05000000	            mov rax, qword [0x0400130f] 	     10724	option.c	FUNCTION_77	SWITCH_1
0x400130f	    0x48050c140000	                         add rax, 0x140c	     10724	option.c	FUNCTION_77	SWITCH_1
0x4001315	      0xe995030000	                           jmp 0x40016af	     10724	option.c	FUNCTION_77	SWITCH_1
0x400131a	    0x488b05000000	            mov rax, qword [0x04001321] 	     10726	option.c	FUNCTION_77	SWITCH_1
0x4001321	    0x480510140000	                         add rax, 0x1410	     10726	option.c	FUNCTION_77	SWITCH_1
0x4001327	      0xe983030000	                           jmp 0x40016af	     10726	option.c	FUNCTION_77	SWITCH_1
0x400132c	    0x488b05000000	            mov rax, qword [0x04001333] 	     10728	option.c	FUNCTION_77	SWITCH_1
0x4001333	    0x480524140000	                         add rax, 0x1424	     10728	option.c	FUNCTION_77	SWITCH_1
0x4001339	      0xe971030000	                           jmp 0x40016af	     10728	option.c	FUNCTION_77	SWITCH_1
0x400133e	    0x488b05000000	            mov rax, qword [0x04001345] 	     10729	option.c	FUNCTION_77	SWITCH_1
0x4001345	    0x480504140000	                         add rax, 0x1404	     10729	option.c	FUNCTION_77	SWITCH_1
0x400134b	      0xe95f030000	                           jmp 0x40016af	     10729	option.c	FUNCTION_77	SWITCH_1
0x4001350	    0x488b05000000	            mov rax, qword [0x04001357] 	     10732	option.c	FUNCTION_77	SWITCH_1
0x4001357	    0x480538140000	                         add rax, 0x1438	     10732	option.c	FUNCTION_77	SWITCH_1
0x400135d	      0xe94d030000	                           jmp 0x40016af	     10732	option.c	FUNCTION_77	SWITCH_1
0x4001362	    0x488b05000000	            mov rax, qword [0x04001369] 	     10733	option.c	FUNCTION_77	SWITCH_1
0x4001369	    0x480530140000	                         add rax, 0x1430	     10733	option.c	FUNCTION_77	SWITCH_1
0x400136f	      0xe93b030000	                           jmp 0x40016af	     10733	option.c	FUNCTION_77	SWITCH_1
0x4001374	    0x488b05000000	            mov rax, qword [0x0400137b] 	     10736	option.c	FUNCTION_77	SWITCH_1
0x400137b	    0x480540140000	                         add rax, 0x1440	     10736	option.c	FUNCTION_77	SWITCH_1
0x4001381	      0xe929030000	                           jmp 0x40016af	     10736	option.c	FUNCTION_77	SWITCH_1
0x4001386	    0x488b05000000	            mov rax, qword [0x0400138d] 	     10739	option.c	FUNCTION_77	SWITCH_1
0x400138d	    0x480548140000	                         add rax, 0x1448	     10739	option.c	FUNCTION_77	SWITCH_1
0x4001393	      0xe917030000	                           jmp 0x40016af	     10739	option.c	FUNCTION_77	SWITCH_1
0x4001398	    0x488b05000000	            mov rax, qword [0x0400139f] 	     10745	option.c	FUNCTION_77	SWITCH_1
0x400139f	    0x480558140000	                         add rax, 0x1458	     10745	option.c	FUNCTION_77	SWITCH_1
0x40013a5	      0xe905030000	                           jmp 0x40016af	     10745	option.c	FUNCTION_77	SWITCH_1
0x40013aa	    0x488b05000000	            mov rax, qword [0x040013b1] 	     10748	option.c	FUNCTION_77	SWITCH_1
0x40013b1	    0x480560140000	                         add rax, 0x1460	     10748	option.c	FUNCTION_77	SWITCH_1
0x40013b7	      0xe9f3020000	                           jmp 0x40016af	     10748	option.c	FUNCTION_77	SWITCH_1
0x40013bc	    0x488b05000000	            mov rax, qword [0x040013c3] 	     10751	option.c	FUNCTION_77	SWITCH_1
0x40013c3	    0x480570140000	                         add rax, 0x1470	     10751	option.c	FUNCTION_77	SWITCH_1
0x40013c9	      0xe9e1020000	                           jmp 0x40016af	     10751	option.c	FUNCTION_77	SWITCH_1
0x40013ce	    0x488b05000000	            mov rax, qword [0x040013d5] 	     10752	option.c	FUNCTION_77	SWITCH_1
0x40013d5	    0x480574140000	                         add rax, 0x1474	     10752	option.c	FUNCTION_77	SWITCH_1
0x40013db	      0xe9cf020000	                           jmp 0x40016af	     10752	option.c	FUNCTION_77	SWITCH_1
0x40013e0	    0x488b05000000	            mov rax, qword [0x040013e7] 	     10753	option.c	FUNCTION_77	SWITCH_1
0x40013e7	    0x480578140000	                         add rax, 0x1478	     10753	option.c	FUNCTION_77	SWITCH_1
0x40013ed	      0xe9bd020000	                           jmp 0x40016af	     10753	option.c	FUNCTION_77	SWITCH_1
0x40013f2	    0x488b05000000	            mov rax, qword [0x040013f9] 	     10755	option.c	FUNCTION_77	SWITCH_1
0x40013f9	    0x480588140000	                         add rax, 0x1488	     10755	option.c	FUNCTION_77	SWITCH_1
0x40013ff	      0xe9ab020000	                           jmp 0x40016af	     10755	option.c	FUNCTION_77	SWITCH_1
0x4001404	    0x488b05000000	            mov rax, qword [0x0400140b] 	     10757	option.c	FUNCTION_77	SWITCH_1
0x400140b	    0x480590140000	                         add rax, 0x1490	     10757	option.c	FUNCTION_77	SWITCH_1
0x4001411	      0xe999020000	                           jmp 0x40016af	     10757	option.c	FUNCTION_77	SWITCH_1
0x4001416	    0x488b05000000	            mov rax, qword [0x0400141d] 	     10758	option.c	FUNCTION_77	SWITCH_1
0x400141d	    0x480598140000	                         add rax, 0x1498	     10758	option.c	FUNCTION_77	SWITCH_1
0x4001423	      0xe987020000	                           jmp 0x40016af	     10758	option.c	FUNCTION_77	SWITCH_1
0x4001428	    0x488b05000000	            mov rax, qword [0x0400142f] 	     10760	option.c	FUNCTION_77	SWITCH_1
0x400142f	    0x4805a8140000	                         add rax, 0x14a8	     10760	option.c	FUNCTION_77	SWITCH_1
0x4001435	      0xe975020000	                           jmp 0x40016af	     10760	option.c	FUNCTION_77	SWITCH_1
0x400143a	    0x488b05000000	            mov rax, qword [0x04001441] 	     10761	option.c	FUNCTION_77	SWITCH_1
0x4001441	    0x480578120000	                         add rax, 0x1278	     10761	option.c	FUNCTION_77	SWITCH_1
0x4001447	      0xe963020000	                           jmp 0x40016af	     10761	option.c	FUNCTION_77	SWITCH_1
0x400144c	    0x488b05000000	            mov rax, qword [0x04001453] 	     10762	option.c	FUNCTION_77	SWITCH_1
0x4001453	    0x480580120000	                         add rax, 0x1280	     10762	option.c	FUNCTION_77	SWITCH_1
0x4001459	      0xe951020000	                           jmp 0x40016af	     10762	option.c	FUNCTION_77	SWITCH_1
0x400145e	    0x488b05000000	            mov rax, qword [0x04001465] 	     10763	option.c	FUNCTION_77	SWITCH_1
0x4001465	    0x4805b0140000	                         add rax, 0x14b0	     10763	option.c	FUNCTION_77	SWITCH_1
0x400146b	      0xe93f020000	                           jmp 0x40016af	     10763	option.c	FUNCTION_77	SWITCH_1
0x4001470	    0x488b05000000	            mov rax, qword [0x04001477] 	     10764	option.c	FUNCTION_77	SWITCH_1
0x4001477	    0x4805b8140000	                         add rax, 0x14b8	     10764	option.c	FUNCTION_77	SWITCH_1
0x400147d	      0xe92d020000	                           jmp 0x40016af	     10764	option.c	FUNCTION_77	SWITCH_1
0x4001482	    0x488b05000000	            mov rax, qword [0x04001489] 	     10767	option.c	FUNCTION_77	SWITCH_1
0x4001489	    0x4805d0140000	                         add rax, 0x14d0	     10767	option.c	FUNCTION_77	SWITCH_1
0x400148f	      0xe91b020000	                           jmp 0x40016af	     10767	option.c	FUNCTION_77	SWITCH_1
0x4001494	    0x488b05000000	            mov rax, qword [0x0400149b] 	     10771	option.c	FUNCTION_77	SWITCH_1
0x400149b	    0x4805e0140000	                         add rax, 0x14e0	     10771	option.c	FUNCTION_77	SWITCH_1
0x40014a1	      0xe909020000	                           jmp 0x40016af	     10771	option.c	FUNCTION_77	SWITCH_1
0x40014a6	    0x488b05000000	            mov rax, qword [0x040014ad] 	     10772	option.c	FUNCTION_77	SWITCH_1
0x40014ad	    0x4805f0140000	                         add rax, 0x14f0	     10772	option.c	FUNCTION_77	SWITCH_1
0x40014b3	      0xe9f7010000	                           jmp 0x40016af	     10772	option.c	FUNCTION_77	SWITCH_1
0x40014b8	    0x488b05000000	            mov rax, qword [0x040014bf] 	     10775	option.c	FUNCTION_77	SWITCH_1
0x40014bf	    0x480500150000	                         add rax, 0x1500	     10775	option.c	FUNCTION_77	SWITCH_1
0x40014c5	      0xe9e5010000	                           jmp 0x40016af	     10775	option.c	FUNCTION_77	SWITCH_1
0x40014ca	    0x488b05000000	            mov rax, qword [0x040014d1] 	     10778	option.c	FUNCTION_77	SWITCH_1
0x40014d1	    0x480510150000	                         add rax, 0x1510	     10778	option.c	FUNCTION_77	SWITCH_1
0x40014d7	      0xe9d3010000	                           jmp 0x40016af	     10778	option.c	FUNCTION_77	SWITCH_1
0x40014dc	    0x488b05000000	            mov rax, qword [0x040014e3] 	     10781	option.c	FUNCTION_77	SWITCH_1
0x40014e3	    0x480520150000	                         add rax, 0x1520	     10781	option.c	FUNCTION_77	SWITCH_1
0x40014e9	      0xe9c1010000	                           jmp 0x40016af	     10781	option.c	FUNCTION_77	SWITCH_1
0x40014ee	    0x488b05000000	            mov rax, qword [0x040014f5] 	     10783	option.c	FUNCTION_77	SWITCH_1
0x40014f5	    0x480538150000	                         add rax, 0x1538	     10783	option.c	FUNCTION_77	SWITCH_1
0x40014fb	      0xe9af010000	                           jmp 0x40016af	     10783	option.c	FUNCTION_77	SWITCH_1
0x4001500	    0x488b05000000	            mov rax, qword [0x04001507] 	     10785	option.c	FUNCTION_77	SWITCH_1
0x4001507	    0x480540150000	                         add rax, 0x1540	     10785	option.c	FUNCTION_77	SWITCH_1
0x400150d	      0xe99d010000	                           jmp 0x40016af	     10785	option.c	FUNCTION_77	SWITCH_1
0x4001512	    0x488b05000000	            mov rax, qword [0x04001519] 	     10786	option.c	FUNCTION_77	SWITCH_1
0x4001519	    0x4805c8000000	                           add rax, 0xc8	     10786	option.c	FUNCTION_77	SWITCH_1
0x400151f	      0xe98b010000	                           jmp 0x40016af	     10786	option.c	FUNCTION_77	SWITCH_1
0x4001524	    0x488b05000000	            mov rax, qword [0x0400152b] 	     10787	option.c	FUNCTION_77	SWITCH_1
0x400152b	    0x480548150000	                         add rax, 0x1548	     10787	option.c	FUNCTION_77	SWITCH_1
0x4001531	      0xe979010000	                           jmp 0x40016af	     10787	option.c	FUNCTION_77	SWITCH_1
0x4001536	    0x488b05000000	            mov rax, qword [0x0400153d] 	     10788	option.c	FUNCTION_77	SWITCH_1
0x400153d	    0x480550150000	                         add rax, 0x1550	     10788	option.c	FUNCTION_77	SWITCH_1
0x4001543	      0xe967010000	                           jmp 0x40016af	     10788	option.c	FUNCTION_77	SWITCH_1
0x4001548	    0x488b05000000	            mov rax, qword [0x0400154f] 	     10790	option.c	FUNCTION_77	SWITCH_1
0x400154f	    0x480558150000	                         add rax, 0x1558	     10790	option.c	FUNCTION_77	SWITCH_1
0x4001555	      0xe955010000	                           jmp 0x40016af	     10790	option.c	FUNCTION_77	SWITCH_1
0x400155a	    0x488b05000000	            mov rax, qword [0x04001561] 	     10792	option.c	FUNCTION_77	SWITCH_1
0x4001561	    0x480560150000	                         add rax, 0x1560	     10792	option.c	FUNCTION_77	SWITCH_1
0x4001567	      0xe943010000	                           jmp 0x40016af	     10792	option.c	FUNCTION_77	SWITCH_1
0x400156c	    0x488b05000000	            mov rax, qword [0x04001573] 	     10794	option.c	FUNCTION_77	SWITCH_1
0x4001573	    0x480574150000	                         add rax, 0x1574	     10794	option.c	FUNCTION_77	SWITCH_1
0x4001579	      0xe931010000	                           jmp 0x40016af	     10794	option.c	FUNCTION_77	SWITCH_1
0x400157e	    0x488b05000000	            mov rax, qword [0x04001585] 	     10796	option.c	FUNCTION_77	SWITCH_1
0x4001585	    0x480570150000	                         add rax, 0x1570	     10796	option.c	FUNCTION_77	SWITCH_1
0x400158b	      0xe91f010000	                           jmp 0x40016af	     10796	option.c	FUNCTION_77	SWITCH_1
0x4001590	    0x488b05000000	            mov rax, qword [0x04001597] 	     10797	option.c	FUNCTION_77	SWITCH_1
0x4001597	    0x480578150000	                         add rax, 0x1578	     10797	option.c	FUNCTION_77	SWITCH_1
0x400159d	      0xe90d010000	                           jmp 0x40016af	     10797	option.c	FUNCTION_77	SWITCH_1
0x40015a2	    0x488b05000000	            mov rax, qword [0x040015a9] 	     10799	option.c	FUNCTION_77	SWITCH_1
0x40015a9	    0x480588150000	                         add rax, 0x1588	     10799	option.c	FUNCTION_77	SWITCH_1
0x40015af	      0xe9fb000000	                           jmp 0x40016af	     10799	option.c	FUNCTION_77	SWITCH_1
0x40015b4	    0x488b05000000	            mov rax, qword [0x040015bb] 	     10801	option.c	FUNCTION_77	SWITCH_1
0x40015bb	    0x480590150000	                         add rax, 0x1590	     10801	option.c	FUNCTION_77	SWITCH_1
0x40015c1	      0xe9e9000000	                           jmp 0x40016af	     10801	option.c	FUNCTION_77	SWITCH_1
0x40015c6	    0x488b05000000	            mov rax, qword [0x040015cd] 	     10803	option.c	FUNCTION_77	SWITCH_1
0x40015cd	    0x480598150000	                         add rax, 0x1598	     10803	option.c	FUNCTION_77	SWITCH_1
0x40015d3	      0xe9d7000000	                           jmp 0x40016af	     10803	option.c	FUNCTION_77	SWITCH_1
0x40015d8	    0x488b05000000	            mov rax, qword [0x040015df] 	     10804	option.c	FUNCTION_77	SWITCH_1
0x40015df	    0x4805a0150000	                         add rax, 0x15a0	     10804	option.c	FUNCTION_77	SWITCH_1
0x40015e5	      0xe9c5000000	                           jmp 0x40016af	     10804	option.c	FUNCTION_77	SWITCH_1
0x40015ea	    0x488b05000000	            mov rax, qword [0x040015f1] 	     10807	option.c	FUNCTION_77	SWITCH_1
0x40015f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10807	option.c	FUNCTION_77	SWITCH_1
0x40015f5	    0x480568040000	                          add rax, 0x468	     10807	option.c	FUNCTION_77	SWITCH_1
0x40015fb	      0xe9af000000	                           jmp 0x40016af	     10807	option.c	FUNCTION_77	SWITCH_1
0x4001600	    0x488b05000000	            mov rax, qword [0x04001607] 	     10808	option.c	FUNCTION_77	SWITCH_1
0x4001607	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10808	option.c	FUNCTION_77	SWITCH_1
0x400160b	    0x480578040000	                          add rax, 0x478	     10808	option.c	FUNCTION_77	SWITCH_1
0x4001611	      0xe999000000	                           jmp 0x40016af	     10808	option.c	FUNCTION_77	SWITCH_1
0x4001616	    0x488b05000000	            mov rax, qword [0x0400161d] 	     10809	option.c	FUNCTION_77	SWITCH_1
0x400161d	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10809	option.c	FUNCTION_77	SWITCH_1
0x4001621	    0x480580040000	                          add rax, 0x480	     10809	option.c	FUNCTION_77	SWITCH_1
0x4001627	      0xe983000000	                           jmp 0x40016af	     10809	option.c	FUNCTION_77	SWITCH_1
0x400162c	    0x488b05000000	            mov rax, qword [0x04001633] 	     10813	option.c	FUNCTION_77	SWITCH_1
0x4001633	    0x4805b8150000	                         add rax, 0x15b8	     10813	option.c	FUNCTION_77	SWITCH_1
0x4001639	            0xeb74	                           jmp 0x40016af	     10813	option.c	FUNCTION_77	SWITCH_1
0x400163b	    0x488b05000000	            mov rax, qword [0x04001642] 	     10814	option.c	FUNCTION_77	SWITCH_1
0x4001642	    0x4805b0150000	                         add rax, 0x15b0	     10814	option.c	FUNCTION_77	SWITCH_1
0x4001648	            0xeb65	                           jmp 0x40016af	     10814	option.c	FUNCTION_77	SWITCH_1
0x400164a	    0x488b05000000	            mov rax, qword [0x04001651] 	     10816	option.c	FUNCTION_77	SWITCH_1
0x4001651	    0x480550160000	                         add rax, 0x1650	     10816	option.c	FUNCTION_77	SWITCH_1
0x4001657	            0xeb56	                           jmp 0x40016af	     10816	option.c	FUNCTION_77	SWITCH_1
0x4001659	    0x488b05000000	            mov rax, qword [0x04001660] 	     10818	option.c	FUNCTION_77	SWITCH_1
0x4001660	    0x4805d0150000	                         add rax, 0x15d0	     10818	option.c	FUNCTION_77	SWITCH_1
0x4001666	            0xeb47	                           jmp 0x40016af	     10818	option.c	FUNCTION_77	SWITCH_1
0x4001668	    0x488b05000000	            mov rax, qword [0x0400166f] 	     10820	option.c	FUNCTION_77	SWITCH_1
0x400166f	    0x4805e8150000	                         add rax, 0x15e8	     10820	option.c	FUNCTION_77	SWITCH_1
0x4001675	            0xeb38	                           jmp 0x40016af	     10820	option.c	FUNCTION_77	SWITCH_1
0x4001677	    0x488b05000000	            mov rax, qword [0x0400167e] 	     10823	option.c	FUNCTION_77	SWITCH_1
0x400167e	    0x4805b8020000	                          add rax, 0x2b8	     10823	option.c	FUNCTION_77	SWITCH_1
0x4001684	            0xeb29	                           jmp 0x40016af	     10823	option.c	FUNCTION_77	SWITCH_1
0x4001686	      0xba05000000	                              mov edx, 5	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400168b	      0xbe00000000	                              mov esi, 0	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x4001690	      0xbf00000000	                              mov edi, 0	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x4001695	      0xe800000000	                          call 0x400169a	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400169a	          0x4889c7	                            mov rdi, rax	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x400169d	      0xe800000000	                          call 0x40016a2	     10825	option.c	FUNCTION_77	SWITCH_1	CALL_2
0x40016a2	    0x488b05000000	            mov rax, qword [0x040016a9] 	     10828	option.c	FUNCTION_77
0x40016a9	    0x4805d0150000	                         add rax, 0x15d0	     10828	option.c	FUNCTION_77
0x40016af	        0x4883c408	                              add rsp, 8	     10829	option.c	FUNCTION_77
0x40016b3	              0xc3	                                     ret	     10829	option.c	FUNCTION_77
find_mps_values	SWITCH,0:functions,0:ELSE,5:FOR,0:IF,10:DO,0:CALL,10:WHILE,1	117
0x400df2f	            0x4157	                                push r15	     12549	option.c	FUNCTION_115
0x400df31	            0x4156	                                push r14	     12549	option.c	FUNCTION_115
0x400df33	            0x4155	                                push r13	     12549	option.c	FUNCTION_115
0x400df35	            0x4154	                                push r12	     12549	option.c	FUNCTION_115
0x400df37	              0x55	                                push rbp	     12549	option.c	FUNCTION_115
0x400df38	              0x53	                                push rbx	     12549	option.c	FUNCTION_115
0x400df39	        0x4883ec08	                              sub rsp, 8	     12549	option.c	FUNCTION_115
0x400df3d	          0x4889fd	                            mov rbp, rdi	     12549	option.c	FUNCTION_115
0x400df40	          0x4989f5	                            mov r13, rsi	     12549	option.c	FUNCTION_115
0x400df43	          0x4989d6	                            mov r14, rdx	     12549	option.c	FUNCTION_115
0x400df46	          0x4189cc	                           mov r12d, ecx	     12549	option.c	FUNCTION_115
0x400df49	    0x488b05000000	            mov rax, qword [0x0400df50] 	     12552	option.c	FUNCTION_115
0x400df50	    0x488b98301500	          mov rbx, qword [rax + 0x1530] 	     12552	option.c	FUNCTION_115
0x400df57	      0xe960010000	                           jmp 0x400e0bc	     12553	option.c	FUNCTION_115	WHILE_1
0x400df5c	    0x833d00000000	               cmp dword [0x0400df63], 0	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x400df63	     0xf84d9000000	                            je 0x400e042	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x400df69	          0x4889df	                            mov rdi, rbx	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400df6c	    0xff1500000000	                 call qword [0x0400df72]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400df72	          0x8b5500	                    mov edx, dword [rbp]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400df75	            0x39d0	                            cmp eax, edx	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400df77	            0x755b	                           jne 0x400dfd4	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400df79	          0x4585e4	                         test r12d, r12d	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400df7c	            0x742d	                            je 0x400dfab	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400df7e	        0x41895500	                    mov dword [r13], edx	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400df82	    0x4c8b25000000	            mov r12, qword [0x0400df89] 	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df89	          0x4889df	                            mov rdi, rbx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df8c	    0xff1500000000	                 call qword [0x0400df92]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df92	            0x4898	                                    cdqe	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df94	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df99	          0x41ffd4	                                call r12	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df9c	          0x894500	                    mov dword [rbp], eax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400df9f	    0x41c706010000	                      mov dword [r14], 1	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400dfa6	      0xe91c010000	                           jmp 0x400e0c7	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400dfab	    0x488b2d000000	            mov rbp, qword [0x0400dfb2] 	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfb2	          0x4889df	                            mov rdi, rbx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfb5	    0xff1500000000	                 call qword [0x0400dfbb]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfbb	            0x4898	                                    cdqe	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfbd	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfc2	            0xffd5	                                call rbp	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfc4	        0x41894500	                    mov dword [r13], eax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400dfc8	    0x41c706000000	                      mov dword [r14], 0	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x400dfcf	      0xe9f3000000	                           jmp 0x400e0c7	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x400dfd4	          0x4889df	                            mov rdi, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400dfd7	    0xff1500000000	                 call qword [0x0400dfdd]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400dfdd	        0x448d7801	                     lea r15d, [rax + 1]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400dfe1	          0x4d63ff	                        movsxd r15, r15d	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400dfe4	          0x4901df	                            add r15, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400dfe7	          0x4c89ff	                            mov rdi, r15	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400dfea	    0xff1500000000	                 call qword [0x0400dff0]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400dff0	          0x8b5500	                    mov edx, dword [rbp]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400dff3	            0x39d0	                            cmp eax, edx	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400dff5	            0x753a	                           jne 0x400e031	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400dff7	          0x4585e4	                         test r12d, r12d	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400dffa	            0x741c	                            je 0x400e018	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400dffc	        0x41895500	                    mov dword [r13], edx	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400e000	          0x4889df	                            mov rdi, rbx	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400e003	    0xff1500000000	                 call qword [0x0400e009]	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400e009	          0x894500	                    mov dword [rbp], eax	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400e00c	    0x41c706000000	                      mov dword [r14], 0	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400e013	      0xe9af000000	                           jmp 0x400e0c7	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400e018	          0x4889df	                            mov rdi, rbx	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400e01b	    0xff1500000000	                 call qword [0x0400e021]	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400e021	        0x41894500	                    mov dword [r13], eax	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400e025	    0x41c706010000	                      mov dword [r14], 1	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x400e02c	      0xe996000000	                           jmp 0x400e0c7	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x400e031	          0x4c89ff	                            mov rdi, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400e034	    0xff1500000000	                 call qword [0x0400e03a]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400e03a	          0x4863d8	                         movsxd rbx, eax	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400e03d	          0x4c01fb	                            add rbx, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400e040	            0xeb6e	                           jmp 0x400e0b0	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400e042	          0x8b5500	                    mov edx, dword [rbp]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400e045	           0xfb6c0	                           movzx eax, al	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400e048	            0x39d0	                            cmp eax, edx	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400e04a	            0x752d	                           jne 0x400e079	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400e04c	          0x4585e4	                         test r12d, r12d	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e04f	            0x7417	                            je 0x400e068	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e051	    0x41c706010000	                      mov dword [r14], 1	     12601	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e058	          0x8b4500	                    mov eax, dword [rbp]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e05b	        0x41894500	                    mov dword [r13], eax	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e05f	         0xfb64302	               movzx eax, byte [rbx + 2]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e063	          0x894500	                    mov dword [rbp], eax	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e066	            0xeb5f	                           jmp 0x400e0c7	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400e068	    0x41c706000000	                      mov dword [r14], 0	     12607	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400e06f	         0xfb64302	               movzx eax, byte [rbx + 2]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400e073	        0x41894500	                    mov dword [r13], eax	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400e077	            0xeb4e	                           jmp 0x400e0c7	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400e079	         0xfb64302	               movzx eax, byte [rbx + 2]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400e07d	            0x39c2	                            cmp edx, eax	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400e07f	            0x752b	                           jne 0x400e0ac	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400e081	          0x4585e4	                         test r12d, r12d	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e084	            0x7416	                            je 0x400e09c	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e086	    0x41c706000000	                      mov dword [r14], 0	     12617	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e08d	          0x8b4500	                    mov eax, dword [rbp]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e090	        0x41894500	                    mov dword [r13], eax	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e094	           0xfb603	                   movzx eax, byte [rbx]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e097	          0x894500	                    mov dword [rbp], eax	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e09a	            0xeb2b	                           jmp 0x400e0c7	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400e09c	    0x41c706010000	                      mov dword [r14], 1	     12623	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400e0a3	           0xfb603	                   movzx eax, byte [rbx]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400e0a6	        0x41894500	                    mov dword [r13], eax	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400e0aa	            0xeb1b	                           jmp 0x400e0c7	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400e0ac	        0x4883c303	                              add rbx, 3	     12628	option.c	FUNCTION_115	WHILE_1	ELSE_3
0x400e0b0	          0x803b2c	                    cmp byte [rbx], 0x2c	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x400e0b3	           0xf94c0	                                 sete al	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x400e0b6	           0xfb6c0	                           movzx eax, al	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x400e0b9	          0x4801c3	                            add rbx, rax	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x400e0bc	           0xfb603	                   movzx eax, byte [rbx]	     12553	option.c	FUNCTION_115	WHILE_1
0x400e0bf	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x400e0c1	     0xf8595feffff	                           jne 0x400df5c	     12553	option.c	FUNCTION_115	WHILE_1
0x400e0c7	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400e0cb	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400e0cc	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400e0cd	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400e0cf	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400e0d1	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400e0d3	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400e0d5	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
check_win_options	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,2:WHILE,0	8
0x400528f	              0x53	                                push rbx	     10950	option.c	FUNCTION_81
0x4005290	          0x4889fb	                            mov rbx, rdi	     10950	option.c	FUNCTION_81
0x4005293	    0x488dbfb00100	                  lea rdi, [rdi + 0x1b0]	     10951	option.c	FUNCTION_81	CALL_1
0x400529a	      0xe86bafffff	                   call sym.check_winopt	     10951	option.c	FUNCTION_81	CALL_1
0x400529f	    0x488dbb680300	                  lea rdi, [rbx + 0x368]	     10952	option.c	FUNCTION_81	CALL_2
0x40052a6	      0xe85fafffff	                   call sym.check_winopt	     10952	option.c	FUNCTION_81	CALL_2
0x40052ab	              0x5b	                                 pop rbx	     10953	option.c	FUNCTION_81
0x40052ac	              0xc3	                                     ret	     10953	option.c	FUNCTION_81
change_compatible	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,2:DO,0:CALL,2:WHILE,0	14
0x4009cc3	        0x4883ec08	                              sub rsp, 8	     12234	option.c	FUNCTION_101
0x4009cc7	    0x393d00000000	            cmp dword [0x04009ccd], edi 	     12237	option.c	FUNCTION_101	IF_1
0x4009ccd	            0x740b	                            je 0x4009cda	     12237	option.c	FUNCTION_101	IF_1
0x4009ccf	    0x893d00000000	            mov dword [0x04009cd5], edi 	     12239	option.c	FUNCTION_101	IF_1
0x4009cd5	      0xe8c5a3ffff	                 call sym.compatible_set	     12240	option.c	FUNCTION_101	IF_1	CALL_1
0x4009cda	      0xbf00000000	                              mov edi, 0	     12242	option.c	FUNCTION_101	CALL_2
0x4009cdf	      0xe83366ffff	                     call sym.findoption	     12242	option.c	FUNCTION_101	CALL_2
0x4009ce4	            0x85c0	                           test eax, eax	     12243	option.c	FUNCTION_101	IF_2
0x4009ce6	            0x7811	                            js 0x4009cf9	     12243	option.c	FUNCTION_101	IF_2
0x4009ce8	            0x4898	                                    cdqe	     12244	option.c	FUNCTION_101	IF_2
0x4009cea	        0x48c1e006	                              shl rax, 6	     12244	option.c	FUNCTION_101	IF_2
0x4009cee	    0x488188000000	                   or qword [rax], 0x100	     12244	option.c	FUNCTION_101	IF_2
0x4009cf9	        0x4883c408	                              add rsp, 8	     12245	option.c	FUNCTION_101
0x4009cfd	              0xc3	                                     ret	     12245	option.c	FUNCTION_101
set_init_2	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,3:DO,0:CALL,11:WHILE,0	53
0x4009d2b	              0x53	                                push rbx	      3949	option.c	FUNCTION_8
0x4009d2c	      0xbf00000000	                              mov edi, 0	      3956	option.c	FUNCTION_8	CALL_1
0x4009d31	      0xe8e165ffff	                     call sym.findoption	      3956	option.c	FUNCTION_8	CALL_1
0x4009d36	            0x85c0	                           test eax, eax	      3957	option.c	FUNCTION_8	IF_1
0x4009d38	            0x7822	                            js 0x4009d5c	      3957	option.c	FUNCTION_8	IF_1
0x4009d3a	          0x4863d0	                         movsxd rdx, eax	      3957	option.c	FUNCTION_8	IF_1
0x4009d3d	        0x48c1e206	                              shl rdx, 6	      3957	option.c	FUNCTION_8	IF_1
0x4009d41	    0xf68200000000	                      test byte [rdx], 1	      3957	option.c	FUNCTION_8	IF_1
0x4009d48	            0x7512	                           jne 0x4009d5c	      3957	option.c	FUNCTION_8	IF_1
0x4009d4a	    0x8b1500000000	            mov edx, dword [0x04009d50] 	      3958	option.c	FUNCTION_8	CALL_2
0x4009d50	      0xbe04000000	                              mov esi, 4	      3958	option.c	FUNCTION_8	CALL_2
0x4009d55	            0x89c7	                            mov edi, eax	      3958	option.c	FUNCTION_8	CALL_2
0x4009d57	      0xe8cba0ffff	             call sym.set_option_default	      3958	option.c	FUNCTION_8	CALL_2
0x4009d5c	      0xe800000000	                          call 0x4009d61	      3959	option.c	FUNCTION_8	CALL_3
0x4009d61	      0xbf00000000	                              mov edi, 0	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4009d66	      0xe800000000	                          call 0x4009d6b	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4009d6b	            0x85c0	                           test eax, eax	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4009d6d	            0x7512	                           jne 0x4009d81	      3965	option.c	FUNCTION_8	IF_2	CALL_4
0x4009d6f	    0x488b05000000	            mov rax, qword [0x04009d76] 	      3966	option.c	FUNCTION_8	IF_2
0x4009d76	        0x4883e801	                              sub rax, 1	      3966	option.c	FUNCTION_8	IF_2
0x4009d7a	    0x488905000000	            mov qword [0x04009d81], rax 	      3966	option.c	FUNCTION_8	IF_2
0x4009d81	    0x488b05000000	            mov rax, qword [0x04009d88] 	      3967	option.c	FUNCTION_8	CALL_5
0x4009d88	        0x488d70ff	                      lea rsi, [rax - 1]	      3967	option.c	FUNCTION_8	CALL_5
0x4009d8c	      0xbf00000000	                              mov edi, 0	      3967	option.c	FUNCTION_8	CALL_5
0x4009d91	      0xe800000000	                          call 0x4009d96	      3967	option.c	FUNCTION_8	CALL_5
0x4009d96	      0xbf00000000	                              mov edi, 0	      3976	option.c	FUNCTION_8	CALL_6
0x4009d9b	      0xe87765ffff	                     call sym.findoption	      3976	option.c	FUNCTION_8	CALL_6
0x4009da0	            0x89c3	                            mov ebx, eax	      3976	option.c	FUNCTION_8	CALL_6
0x4009da2	            0x85c0	                           test eax, eax	      3977	option.c	FUNCTION_8	IF_3
0x4009da4	            0x7847	                            js 0x4009ded	      3977	option.c	FUNCTION_8	IF_3
0x4009da6	            0x4898	                                    cdqe	      3977	option.c	FUNCTION_8	IF_3
0x4009da8	        0x48c1e006	                              shl rax, 6	      3977	option.c	FUNCTION_8	IF_3
0x4009dac	    0xf68000000000	                      test byte [rax], 1	      3977	option.c	FUNCTION_8	IF_3
0x4009db3	            0x7538	                           jne 0x4009ded	      3977	option.c	FUNCTION_8	IF_3
0x4009db5	      0xe8f886ffff	                call sym.term_bg_default	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4009dba	          0x803864	                    cmp byte [rax], 0x64	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4009dbd	            0x752e	                           jne 0x4009ded	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4009dbf	    0x41b800000000	                              mov r8d, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009dc5	      0xb901000000	                              mov ecx, 1	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009dca	      0xba00000000	                              mov edx, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009dcf	            0x89de	                            mov esi, ebx	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009dd1	      0xbf00000000	                              mov edi, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009dd6	      0xe800000000	                          call 0x4009ddb	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4009ddb	          0x4863db	                         movsxd rbx, ebx	      3983	option.c	FUNCTION_8	IF_3
0x4009dde	        0x48c1e306	                              shl rbx, 6	      3983	option.c	FUNCTION_8	IF_3
0x4009de2	    0x4881a3000000	     and qword [rbx], 0xfffffffffffffeff	      3983	option.c	FUNCTION_8	IF_3
0x4009ded	      0xbf02000000	                              mov edi, 2	      3988	option.c	FUNCTION_8	CALL_9
0x4009df2	      0xe800000000	                          call 0x4009df7	      3988	option.c	FUNCTION_8	CALL_9
0x4009df7	      0xbf01000000	                              mov edi, 1	      3991	option.c	FUNCTION_8	CALL_10
0x4009dfc	      0xe800000000	                          call 0x4009e01	      3991	option.c	FUNCTION_8	CALL_10
0x4009e01	      0xe800000000	                          call 0x4009e06	      3994	option.c	FUNCTION_8	CALL_11
0x4009e06	              0x5b	                                 pop rbx	      3996	option.c	FUNCTION_8
0x4009e07	              0xc3	                                     ret	      3996	option.c	FUNCTION_8
check_string_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,0:WHILE,0	5
0x4000040	        0x48833f00	                      cmp qword [rdi], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000044	            0x750a	                           jne 0x4000050	      5771	option.c	FUNCTION_32	IF_1
0x4000046	    0x488b05000000	            mov rax, qword [0x0400004d] 	      5772	option.c	FUNCTION_32	IF_1
0x400004d	          0x488907	                    mov qword [rdi], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000050	            0xf3c3	                                     ret	      5772	option.c	FUNCTION_32	IF_1
gui_bg_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	9
0x4002591	        0x4883ec08	                              sub rsp, 8	      4255	option.c	FUNCTION_12
0x4002595	    0x488b3d000000	            mov rdi, qword [0x0400259c] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400259c	      0xe800000000	                          call 0x40025a1	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x40025a1	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x40025a4	      0xba00000000	                              mov edx, 0	      4258	option.c	FUNCTION_12
0x40025a9	      0xb800000000	                              mov eax, 0	      4258	option.c	FUNCTION_12
0x40025ae	        0x480f4dc2	                         cmovge rax, rdx	      4258	option.c	FUNCTION_12
0x40025b2	        0x4883c408	                              add rsp, 8	      4259	option.c	FUNCTION_12
0x40025b6	              0xc3	                                     ret	      4259	option.c	FUNCTION_12
redraw_titles	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	3
0x4000161	    0xc70500000000	               mov dword [0x0400016b], 1	      5857	option.c	FUNCTION_35
0x400016b	    0xc70500000000	               mov dword [0x04000175], 1	      5858	option.c	FUNCTION_35
0x4000175	              0xc3	                                     ret	      5858	option.c	FUNCTION_35
check_opt_wim	SWITCH,0:functions,0:ELSE,3:FOR,4:IF,7:DO,0:CALL,4:WHILE,1	122
0x4001c04	        0x4883ec18	                           sub rsp, 0x18	     12388	option.c	FUNCTION_108
0x4001c08	    0x64488b042528	                mov rax, qword fs:[0x28]	     12388	option.c	FUNCTION_108
0x4001c11	      0x4889442408	                mov qword [rsp + 8], rax	     12388	option.c	FUNCTION_108
0x4001c16	            0x31c0	                            xor eax, eax	     12388	option.c	FUNCTION_108
0x4001c18	        0xc6042400	                       mov byte [rsp], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4001c1c	      0xc644240100	                   mov byte [rsp + 1], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4001c21	      0xc644240200	                   mov byte [rsp + 2], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4001c26	      0xc644240300	                   mov byte [rsp + 3], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4001c2b	    0x4c8b0d000000	              mov r9, qword [0x04001c32]	     12397	option.c	FUNCTION_108	FOR_2
0x4001c32	        0x41803900	                        cmp byte [r9], 0	     12397	option.c	FUNCTION_108	FOR_2
0x4001c36	     0xf85e1000000	                           jne 0x4001d1d	     12397	option.c	FUNCTION_108	FOR_2
0x4001c3c	    0x41ba00000000	                             mov r10d, 0	     12392	option.c	FUNCTION_108
0x4001c42	      0xe908010000	                           jmp 0x4001d4f	     12392	option.c	FUNCTION_108
0x4001c47	          0x83c101	                              add ecx, 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c4a	          0x4863c1	                         movsxd rax, ecx	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c4d	          0x4c01c8	                             add rax, r9	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c50	        0x440fb600	                   movzx r8d, byte [rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c54	          0x4489c2	                            mov edx, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c57	          0x83e2df	                     and edx, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c5a	          0x83ea41	                           sub edx, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c5d	          0x80fa19	                            cmp dl, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c60	            0x76e5	                           jbe 0x4001c47	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001c62	        0x4180f83a	                           cmp r8b, 0x3a	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4001c66	     0xf872f010000	                            ja 0x4001d9b	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4001c6c	        0x4d0fa3c3	                              bt r11, r8	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4001c70	     0xf832c010000	                           jae 0x4001da2	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4001c76	          0x83f907	                              cmp ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c79	            0x7526	                           jne 0x4001ca1	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c7b	      0xbf00000000	                              mov edi, 0	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c80	      0xb907000000	                              mov ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c85	          0x4c89ce	                             mov rsi, r9	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c88	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c8a	           0xf97c1	                                 seta cl	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c8d	           0xf92c2	                                 setb dl	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c90	            0x38d1	                              cmp cl, dl	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c92	     0xf8511010000	                           jne 0x4001da9	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4001c98	          0x4963d2	                        movsxd rdx, r10d	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4001c9b	        0x800c1402	                  or byte [rsp + rdx], 2	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4001c9f	            0xeb4f	                           jmp 0x4001cf0	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4001ca1	          0x83f904	                              cmp ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001ca4	     0xf8506010000	                           jne 0x4001db0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001caa	      0xbf00000000	                              mov edi, 0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001caf	      0xb904000000	                              mov ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cb4	          0x4c89ce	                             mov rsi, r9	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cb7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cb9	           0xf97c1	                                 seta cl	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cbc	           0xf92c2	                                 setb dl	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cbf	            0x38d1	                              cmp cl, dl	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cc1	            0x7509	                           jne 0x4001ccc	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4001cc3	          0x4963d2	                        movsxd rdx, r10d	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4001cc6	        0x800c1401	                  or byte [rsp + rdx], 1	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4001cca	            0xeb24	                           jmp 0x4001cf0	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4001ccc	      0xbf00000000	                              mov edi, 0	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001cd1	      0xb904000000	                              mov ecx, 4	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001cd6	          0x4c89ce	                             mov rsi, r9	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001cd9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001cdb	           0xf97c1	                                 seta cl	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001cde	           0xf92c2	                                 setb dl	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001ce1	            0x38d1	                              cmp cl, dl	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001ce3	     0xf85ce000000	                           jne 0x4001db7	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4001ce9	          0x4963d2	                        movsxd rdx, r10d	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4001cec	        0x800c1404	                  or byte [rsp + rdx], 4	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4001cf0	          0x4584c0	                           test r8b, r8b	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4001cf3	            0x7508	                           jne 0x4001cfd	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4001cf5	        0x4183fa02	                             cmp r10d, 2	     12423	option.c	FUNCTION_108	WHILE_1
0x4001cf9	            0x7e54	                           jle 0x4001d4f	     12423	option.c	FUNCTION_108	WHILE_1
0x4001cfb	            0xeb6c	                           jmp 0x4001d69	     12423	option.c	FUNCTION_108	WHILE_1
0x4001cfd	        0x4180f82c	                           cmp r8b, 0x2c	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4001d01	            0x750e	                           jne 0x4001d11	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4001d03	        0x4183fa03	                             cmp r10d, 3	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4001d07	     0xf84b1000000	                            je 0x4001dbe	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4001d0d	        0x4183c201	                             add r10d, 1	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x4001d11	        0x4c8d4801	                       lea r9, [rax + 1]	     12397	option.c	FUNCTION_108	FOR_2
0x4001d15	        0x80780100	                   cmp byte [rax + 1], 0	     12397	option.c	FUNCTION_108	FOR_2
0x4001d19	            0x7512	                           jne 0x4001d2d	     12397	option.c	FUNCTION_108	FOR_2
0x4001d1b	            0xebd8	                           jmp 0x4001cf5	     12397	option.c	FUNCTION_108	FOR_2
0x4001d1d	    0x41ba00000000	                             mov r10d, 0	     12397	option.c	FUNCTION_108	FOR_2
0x4001d23	    0x49bb01000000	          movabs r11, 0x400100000000001 	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4001d2d	        0x450fb601	                    movzx r8d, byte [r9]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d31	          0x4489c0	                            mov eax, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d34	          0x83e0df	                     and eax, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d37	          0x83e841	                           sub eax, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d3a	      0xb900000000	                              mov ecx, 0	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d3f	            0x3c19	                            cmp al, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d41	     0xf8600ffffff	                           jbe 0x4001c47	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d47	          0x4c89c8	                             mov rax, r9	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d4a	      0xe913ffffff	                           jmp 0x4001c62	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4001d4f	        0x418d4201	                      lea eax, [r10 + 1]	     12425	option.c	FUNCTION_108	WHILE_1
0x4001d53	          0x4d63d2	                        movsxd r10, r10d	     12425	option.c	FUNCTION_108	WHILE_1
0x4001d56	      0x420fb60c14	             movzx ecx, byte [rsp + r10]	     12425	option.c	FUNCTION_108	WHILE_1
0x4001d5b	          0x4863d0	                         movsxd rdx, eax	     12425	option.c	FUNCTION_108	WHILE_1
0x4001d5e	          0x880c14	                mov byte [rsp + rdx], cl	     12425	option.c	FUNCTION_108	WHILE_1
0x4001d61	          0x4189c2	                           mov r10d, eax	     12426	option.c	FUNCTION_108	WHILE_1
0x4001d64	          0x83f802	                              cmp eax, 2	     12423	option.c	FUNCTION_108	WHILE_1
0x4001d67	            0x7ee6	                           jle 0x4001d4f	     12423	option.c	FUNCTION_108	WHILE_1
0x4001d69	         0xfb60424	                   movzx eax, byte [rsp]	     12431	option.c	FUNCTION_108	FOR_4
0x4001d6d	    0x880500000000	               mov byte [0x04001d73], al	     12431	option.c	FUNCTION_108	FOR_4
0x4001d73	       0xfb6442401	               movzx eax, byte [rsp + 1]	     12431	option.c	FUNCTION_108	FOR_4
0x4001d78	    0x880500000000	               mov byte [0x04001d7e], al	     12431	option.c	FUNCTION_108	FOR_4
0x4001d7e	       0xfb6442402	               movzx eax, byte [rsp + 2]	     12431	option.c	FUNCTION_108	FOR_4
0x4001d83	    0x880500000000	               mov byte [0x04001d89], al	     12431	option.c	FUNCTION_108	FOR_4
0x4001d89	       0xfb6442403	               movzx eax, byte [rsp + 3]	     12431	option.c	FUNCTION_108	FOR_4
0x4001d8e	    0x880500000000	               mov byte [0x04001d94], al	     12431	option.c	FUNCTION_108	FOR_4
0x4001d94	      0xb801000000	                              mov eax, 1	     12432	option.c	FUNCTION_108
0x4001d99	            0xeb28	                           jmp 0x4001dc3	     12432	option.c	FUNCTION_108
0x4001d9b	      0xb800000000	                              mov eax, 0	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4001da0	            0xeb21	                           jmp 0x4001dc3	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4001da2	      0xb800000000	                              mov eax, 0	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4001da7	            0xeb1a	                           jmp 0x4001dc3	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4001da9	      0xb800000000	                              mov eax, 0	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001dae	            0xeb13	                           jmp 0x4001dc3	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001db0	      0xb800000000	                              mov eax, 0	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001db5	            0xeb0c	                           jmp 0x4001dc3	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001db7	      0xb800000000	                              mov eax, 0	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001dbc	            0xeb05	                           jmp 0x4001dc3	     12410	option.c	FUNCTION_108	FOR_2	ELSE_3
0x4001dbe	      0xb800000000	                              mov eax, 0	     12417	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4001dc3	      0x488b742408	                mov rsi, qword [rsp + 8]	     12433	option.c	FUNCTION_108
0x4001dc8	    0x644833342528	                xor rsi, qword fs:[0x28]	     12433	option.c	FUNCTION_108
0x4001dd1	            0x7405	                            je 0x4001dd8	     12433	option.c	FUNCTION_108
0x4001dd3	      0xe800000000	                          call 0x4001dd8	     12433	option.c	FUNCTION_108
0x4001dd8	        0x4883c418	                           add rsp, 0x18	     12433	option.c	FUNCTION_108
0x4001ddc	              0xc3	                                     ret	     12433	option.c	FUNCTION_108
optval_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,3:DO,0:CALL,1:WHILE,0	42
0x4000506	          0x4885f6	                           test rsi, rsi	      9972	option.c	FUNCTION_62	IF_1
0x4000509	            0x7471	                            je 0x400057c	      9972	option.c	FUNCTION_62	IF_1
0x400050b	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      9974	option.c	FUNCTION_62
0x400050f	      0xb800000000	                              mov eax, 0	      9974	option.c	FUNCTION_62
0x4000514	          0xf6c604	                              test dh, 4	      9974	option.c	FUNCTION_62
0x4000517	            0x750d	                           jne 0x4000526	      9974	option.c	FUNCTION_62
0x4000519	    0x833d00000000	               cmp dword [0x04000520], 0	      9974	option.c	FUNCTION_62
0x4000520	           0xf94c0	                                 sete al	      9974	option.c	FUNCTION_62
0x4000523	           0xfb6c0	                           movzx eax, al	      9974	option.c	FUNCTION_62
0x4000526	          0xf6c202	                              test dl, 2	      9975	option.c	FUNCTION_62	IF_2
0x4000529	            0x7415	                            je 0x4000540	      9975	option.c	FUNCTION_62	IF_2
0x400052b	            0x4898	                                    cdqe	      9976	option.c	FUNCTION_62	IF_2
0x400052d	        0x4883c004	                              add rax, 4	      9976	option.c	FUNCTION_62	IF_2
0x4000531	          0x488b0e	                    mov rcx, qword [rsi]	      9976	option.c	FUNCTION_62	IF_2
0x4000534	      0x48394cc708	       cmp qword [rdi + rax*8 + 8], rcx 	      9976	option.c	FUNCTION_62	IF_2
0x4000539	           0xf94c0	                                 sete al	      9976	option.c	FUNCTION_62	IF_2
0x400053c	           0xfb6c0	                           movzx eax, al	      9976	option.c	FUNCTION_62	IF_2
0x400053f	              0xc3	                                     ret	      9976	option.c	FUNCTION_62	IF_2
0x4000540	          0xf6c201	                              test dl, 1	      9977	option.c	FUNCTION_62	IF_3
0x4000543	            0x7413	                            je 0x4000558	      9977	option.c	FUNCTION_62	IF_3
0x4000545	            0x4898	                                    cdqe	      9980	option.c	FUNCTION_62	IF_3
0x4000547	        0x4883c004	                              add rax, 4	      9980	option.c	FUNCTION_62	IF_3
0x400054b	            0x8b0e	                    mov ecx, dword [rsi]	      9980	option.c	FUNCTION_62	IF_3
0x400054d	        0x394cc708	       cmp dword [rdi + rax*8 + 8], ecx 	      9980	option.c	FUNCTION_62	IF_3
0x4000551	           0xf94c0	                                 sete al	      9980	option.c	FUNCTION_62	IF_3
0x4000554	           0xfb6c0	                           movzx eax, al	      9980	option.c	FUNCTION_62	IF_3
0x4000557	              0xc3	                                     ret	      9980	option.c	FUNCTION_62	IF_3
0x4000558	        0x4883ec08	                              sub rsp, 8	      9969	option.c	FUNCTION_62
0x400055c	          0x4889f2	                            mov rdx, rsi	      9969	option.c	FUNCTION_62
0x400055f	            0x4898	                                    cdqe	      9982	option.c	FUNCTION_62	CALL_1
0x4000561	        0x4883c004	                              add rax, 4	      9982	option.c	FUNCTION_62	CALL_1
0x4000565	      0x488b74c708	       mov rsi, qword [rdi + rax*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x400056a	          0x488b3a	                    mov rdi, qword [rdx]	      9982	option.c	FUNCTION_62	CALL_1
0x400056d	      0xe800000000	                          call 0x4000572	      9982	option.c	FUNCTION_62	CALL_1
0x4000572	            0x85c0	                           test eax, eax	      9982	option.c	FUNCTION_62	CALL_1
0x4000574	           0xf94c0	                                 sete al	      9982	option.c	FUNCTION_62	CALL_1
0x4000577	           0xfb6c0	                           movzx eax, al	      9982	option.c	FUNCTION_62	CALL_1
0x400057a	            0xeb06	                           jmp 0x4000582	      9982	option.c	FUNCTION_62	CALL_1
0x400057c	      0xb801000000	                              mov eax, 1	      9973	option.c	FUNCTION_62	IF_1
0x4000581	              0xc3	                                     ret	      9973	option.c	FUNCTION_62	IF_1
0x4000582	        0x4883c408	                              add rsp, 8	      9983	option.c	FUNCTION_62
0x4000586	              0xc3	                                     ret	      9983	option.c	FUNCTION_62
get_highlight_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	12
0x40046ab	        0x4883ec08	                              sub rsp, 8	      9805	option.c	FUNCTION_58
0x40046af	      0xbf00000000	                              mov edi, 0	      9808	option.c	FUNCTION_58	CALL_1
0x40046b4	      0xe85ebcffff	                     call sym.findoption	      9808	option.c	FUNCTION_58	CALL_1
0x40046b9	            0x85c0	                           test eax, eax	      9809	option.c	FUNCTION_58	IF_1
0x40046bb	            0x780f	                            js 0x40046cc	      9809	option.c	FUNCTION_58	IF_1
0x40046bd	            0x4898	                                    cdqe	      9810	option.c	FUNCTION_58	IF_1
0x40046bf	        0x48c1e006	                              shl rax, 6	      9810	option.c	FUNCTION_58	IF_1
0x40046c3	    0x488b80000000	                    mov rax, qword [rax]	      9810	option.c	FUNCTION_58	IF_1
0x40046ca	            0xeb05	                           jmp 0x40046d1	      9810	option.c	FUNCTION_58	IF_1
0x40046cc	      0xb800000000	                              mov eax, 0	      9811	option.c	FUNCTION_58
0x40046d1	        0x4883c408	                              add rsp, 8	      9812	option.c	FUNCTION_58
0x40046d5	              0xc3	                                     ret	      9812	option.c	FUNCTION_58
set_helplang_default	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,5:DO,0:CALL,8:WHILE,0	73
0x4003a58	          0x4885ff	                           test rdi, rdi	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a5b	     0xf840b010000	                            je 0x4003b6c	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a61	          0x4889fa	                            mov rdx, rdi	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a64	      0xb800000000	                              mov eax, 0	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a69	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a70	            0xf2ae	              repne scasb al, byte [rdi]	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a72	          0x48f7d1	                                 not rcx	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a75	        0x4883e901	                              sub rcx, 1	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a79	        0x4883f901	                              cmp rcx, 1	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a7d	     0xf86e9000000	                           jbe 0x4003b6c	      4225	option.c	FUNCTION_11	IF_1	CALL_1
0x4003a83	              0x55	                                push rbp	      4222	option.c	FUNCTION_11
0x4003a84	              0x53	                                push rbx	      4222	option.c	FUNCTION_11
0x4003a85	        0x4883ec08	                              sub rsp, 8	      4222	option.c	FUNCTION_11
0x4003a89	          0x4889d3	                            mov rbx, rdx	      4222	option.c	FUNCTION_11
0x4003a8c	      0xbf00000000	                              mov edi, 0	      4227	option.c	FUNCTION_11	CALL_2
0x4003a91	      0xe881c8ffff	                     call sym.findoption	      4227	option.c	FUNCTION_11	CALL_2
0x4003a96	            0x89c5	                            mov ebp, eax	      4227	option.c	FUNCTION_11	CALL_2
0x4003a98	            0x85c0	                           test eax, eax	      4228	option.c	FUNCTION_11	IF_2
0x4003a9a	     0xf88c6000000	                            js 0x4003b66	      4228	option.c	FUNCTION_11	IF_2
0x4003aa0	            0x4898	                                    cdqe	      4228	option.c	FUNCTION_11	IF_2
0x4003aa2	        0x48c1e006	                              shl rax, 6	      4228	option.c	FUNCTION_11	IF_2
0x4003aa6	    0x488b80000000	                    mov rax, qword [rax]	      4228	option.c	FUNCTION_11	IF_2
0x4003aad	          0xf6c401	                              test ah, 1	      4228	option.c	FUNCTION_11	IF_2
0x4003ab0	     0xf85b0000000	                           jne 0x4003b66	      4228	option.c	FUNCTION_11	IF_2
0x4003ab6	            0xa808	                              test al, 8	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4003ab8	            0x740c	                            je 0x4003ac6	      4230	option.c	FUNCTION_11	IF_2	IF_3
0x4003aba	    0x488b3d000000	            mov rdi, qword [0x04003ac1] 	      4231	option.c	FUNCTION_11	IF_2	CALL_3
0x4003ac1	      0xe800000000	                          call 0x4003ac6	      4231	option.c	FUNCTION_11	IF_2	CALL_3
0x4003ac6	          0x4889df	                            mov rdi, rbx	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x4003ac9	      0xe800000000	                          call 0x4003ace	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x4003ace	          0x4889c3	                            mov rbx, rax	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x4003ad1	    0x488905000000	            mov qword [0x04003ad8], rax 	      4232	option.c	FUNCTION_11	IF_2	CALL_4
0x4003ad8	          0x4885c0	                           test rax, rax	      4233	option.c	FUNCTION_11	IF_2	IF_4
0x4003adb	            0x7510	                           jne 0x4003aed	      4233	option.c	FUNCTION_11	IF_2	IF_4
0x4003add	    0x488b05000000	            mov rax, qword [0x04003ae4] 	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x4003ae4	    0x488905000000	            mov qword [0x04003aeb], rax 	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x4003aeb	            0xeb6a	                           jmp 0x4003b57	      4234	option.c	FUNCTION_11	IF_2	IF_4
0x4003aed	      0xba03000000	                              mov edx, 3	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003af2	      0xbe00000000	                              mov esi, 0	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003af7	          0x4889c7	                            mov rdi, rax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003afa	      0xe800000000	                          call 0x4003aff	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003aff	            0x85c0	                           test eax, eax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b01	            0x7549	                           jne 0x4003b4c	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b03	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b0a	          0x4889df	                            mov rdi, rbx	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b0d	            0xf2ae	              repne scasb al, byte [rdi]	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b0f	          0x4889c8	                            mov rax, rcx	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b12	          0x48f7d0	                                 not rax	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b15	        0x4883e801	                              sub rax, 1	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b19	        0x4883f804	                              cmp rax, 4	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b1d	            0x762d	                           jbe 0x4003b4c	      4238	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x4003b1f	         0xfb64303	               movzx eax, byte [rbx + 3]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b23	          0x8d48bf	                   lea ecx, [rax - 0x41]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b26	          0x8d5020	                   lea edx, [rax + 0x20]	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b29	          0x80f919	                            cmp cl, 0x19	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b2c	           0xf46c2	                         cmovbe eax, edx	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b2f	            0x8803	                      mov byte [rbx], al	      4240	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x4003b31	    0x488b15000000	            mov rdx, qword [0x04003b38] 	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b38	         0xfb64204	               movzx eax, byte [rdx + 4]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b3c	          0x8d70bf	                   lea esi, [rax - 0x41]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b3f	          0x8d4820	                   lea ecx, [rax + 0x20]	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b42	        0x4080fe19	                           cmp sil, 0x19	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b46	           0xf46c1	                         cmovbe eax, ecx	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b49	          0x884201	                  mov byte [rdx + 1], al	      4241	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x4003b4c	    0x488b05000000	            mov rax, qword [0x04003b53] 	      4243	option.c	FUNCTION_11	IF_2	ELSE_1
0x4003b53	        0xc6400200	                   mov byte [rax + 2], 0	      4243	option.c	FUNCTION_11	IF_2	ELSE_1
0x4003b57	          0x4863ed	                         movsxd rbp, ebp	      4245	option.c	FUNCTION_11	IF_2
0x4003b5a	        0x48c1e506	                              shl rbp, 6	      4245	option.c	FUNCTION_11	IF_2
0x4003b5e	    0x48838d000000	                       or qword [rbp], 8	      4245	option.c	FUNCTION_11	IF_2
0x4003b66	        0x4883c408	                              add rsp, 8	      4247	option.c	FUNCTION_11
0x4003b6a	              0x5b	                                 pop rbx	      4247	option.c	FUNCTION_11
0x4003b6b	              0x5d	                                 pop rbp	      4247	option.c	FUNCTION_11
0x4003b6c	            0xf3c3	                                     ret	      4247	option.c	FUNCTION_11
term_bg_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,6:WHILE,0	61
0x40024b2	    0x488b15000000	            mov rdx, qword [0x040024b9] 	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024b9	      0xbf00000000	                              mov edi, 0	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024be	      0xb906000000	                              mov ecx, 6	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024c3	          0x4889d6	                            mov rsi, rdx	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024c6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024c8	        0x400f97c6	                                seta sil	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024cc	           0xf92c1	                                 setb cl	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024cf	      0xb800000000	                              mov eax, 0	      4027	option.c	FUNCTION_9	IF_1
0x40024d4	          0x4038ce	                             cmp sil, cl	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024d7	     0xf84b2000000	                            je 0x400258f	      4019	option.c	FUNCTION_9	IF_1	CALL_1
0x40024dd	      0xbf00000000	                              mov edi, 0	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024e2	      0xb90d000000	                            mov ecx, 0xd	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024e7	          0x4889d6	                            mov rsi, rdx	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024ea	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024ec	        0x400f97c6	                                seta sil	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024f0	           0xf92c1	                                 setb cl	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024f3	          0x4038ce	                             cmp sil, cl	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024f6	     0xf8493000000	                            je 0x400258f	      4020	option.c	FUNCTION_9	IF_1	CALL_2
0x40024fc	      0xbf00000000	                              mov edi, 0	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002501	      0xb906000000	                              mov ecx, 6	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002506	          0x4889d6	                            mov rsi, rdx	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002509	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x400250b	        0x400f97c6	                                seta sil	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x400250f	           0xf92c1	                                 setb cl	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002512	          0x4038ce	                             cmp sil, cl	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002515	            0x7478	                            je 0x400258f	      4021	option.c	FUNCTION_9	IF_1	CALL_3
0x4002517	      0xbf00000000	                              mov edi, 0	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x400251c	      0xb905000000	                              mov ecx, 5	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4002521	          0x4889d6	                            mov rsi, rdx	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4002524	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4002526	           0xf97c1	                                 seta cl	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4002529	           0xf92c2	                                 setb dl	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x400252c	            0x38d1	                              cmp cl, dl	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x400252e	            0x745f	                            je 0x400258f	      4022	option.c	FUNCTION_9	IF_1	CALL_4
0x4002530	        0x4883ec08	                              sub rsp, 8	      4012	option.c	FUNCTION_9
0x4002534	      0xbf00000000	                              mov edi, 0	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4002539	      0xe800000000	                          call 0x400253e	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x400253e	          0x4889c7	                            mov rdi, rax	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4002541	      0xb800000000	                              mov eax, 0	      4028	option.c	FUNCTION_9
0x4002546	          0x4885ff	                           test rdi, rdi	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x4002549	            0x7440	                            je 0x400258b	      4023	option.c	FUNCTION_9	IF_1	CALL_5
0x400254b	      0xbe3b000000	                           mov esi, 0x3b	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4002550	      0xe800000000	                          call 0x4002555	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4002555	          0x4889c2	                            mov rdx, rax	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x4002558	          0x4885c0	                           test rax, rax	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x400255b	            0x7429	                            je 0x4002586	      4024	option.c	FUNCTION_9	IF_1	CALL_6
0x400255d	         0xfb64801	               movzx ecx, byte [rax + 1]	      4025	option.c	FUNCTION_9	IF_1
0x4002561	          0x8d41d0	                   lea eax, [rcx - 0x30]	      4025	option.c	FUNCTION_9	IF_1
0x4002564	            0x3c06	                               cmp al, 6	      4025	option.c	FUNCTION_9	IF_1
0x4002566	            0x760a	                           jbe 0x4002572	      4025	option.c	FUNCTION_9	IF_1
0x4002568	      0xb800000000	                              mov eax, 0	      4028	option.c	FUNCTION_9
0x400256d	          0x80f938	                            cmp cl, 0x38	      4025	option.c	FUNCTION_9	IF_1
0x4002570	            0x7519	                           jne 0x400258b	      4025	option.c	FUNCTION_9	IF_1
0x4002572	        0x807a0200	                   cmp byte [rdx + 2], 0	      4027	option.c	FUNCTION_9	IF_1
0x4002576	      0xba00000000	                              mov edx, 0	      4027	option.c	FUNCTION_9	IF_1
0x400257b	      0xb800000000	                              mov eax, 0	      4027	option.c	FUNCTION_9	IF_1
0x4002580	        0x480f44c2	                          cmove rax, rdx	      4027	option.c	FUNCTION_9	IF_1
0x4002584	            0xeb05	                           jmp 0x400258b	      4027	option.c	FUNCTION_9	IF_1
0x4002586	      0xb800000000	                              mov eax, 0	      4028	option.c	FUNCTION_9
0x400258b	        0x4883c408	                              add rsp, 8	      4030	option.c	FUNCTION_9
0x400258f	            0xf3c3	                                     ret	      4030	option.c	FUNCTION_9
has_format_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	13
0x4009c31	      0xb800000000	                              mov eax, 0	     12044	option.c	FUNCTION_97	IF_1
0x4009c36	    0x833d00000000	               cmp dword [0x04009c3d], 0	     12043	option.c	FUNCTION_97	IF_1
0x4009c3d	            0x7526	                           jne 0x4009c65	     12043	option.c	FUNCTION_97	IF_1
0x4009c3f	        0x4883ec08	                              sub rsp, 8	     12042	option.c	FUNCTION_97
0x4009c43	            0x89fe	                            mov esi, edi	     12042	option.c	FUNCTION_97
0x4009c45	    0x488b05000000	            mov rax, qword [0x04009c4c] 	     12045	option.c	FUNCTION_97	CALL_1
0x4009c4c	    0x488bb8a01400	          mov rdi, qword [rax + 0x14a0] 	     12045	option.c	FUNCTION_97	CALL_1
0x4009c53	      0xe800000000	                          call 0x4009c58	     12045	option.c	FUNCTION_97	CALL_1
0x4009c58	          0x4885c0	                           test rax, rax	     12045	option.c	FUNCTION_97	CALL_1
0x4009c5b	           0xf95c0	                                setne al	     12045	option.c	FUNCTION_97	CALL_1
0x4009c5e	           0xfb6c0	                           movzx eax, al	     12045	option.c	FUNCTION_97	CALL_1
0x4009c61	        0x4883c408	                              add rsp, 8	     12046	option.c	FUNCTION_97
0x4009c65	            0xf3c3	                                     ret	     12046	option.c	FUNCTION_97
istermoption	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,0:WHILE,0	8
0x40001f1	          0x488b17	                    mov rdx, qword [rdi]	     10375	option.c	FUNCTION_73
0x40001f4	      0xb800000000	                              mov eax, 0	     10375	option.c	FUNCTION_73
0x40001f9	          0x803a74	                    cmp byte [rdx], 0x74	     10375	option.c	FUNCTION_73
0x40001fc	            0x750a	                           jne 0x4000208	     10375	option.c	FUNCTION_73
0x40001fe	        0x807a015f	                cmp byte [rdx + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4000202	           0xf94c0	                                 sete al	     10375	option.c	FUNCTION_73
0x4000205	           0xfb6c0	                           movzx eax, al	     10375	option.c	FUNCTION_73
0x4000208	            0xf3c3	                                     ret	     10376	option.c	FUNCTION_73
briopt_check	SWITCH,0:functions,0:ELSE,2:FOR,0:IF,5:DO,0:CALL,8:WHILE,1	99
0x4001ddd	            0x4155	                                push r13	     12642	option.c	FUNCTION_116
0x4001ddf	            0x4154	                                push r12	     12642	option.c	FUNCTION_116
0x4001de1	              0x55	                                push rbp	     12642	option.c	FUNCTION_116
0x4001de2	              0x53	                                push rbx	     12642	option.c	FUNCTION_116
0x4001de3	        0x4883ec18	                           sub rsp, 0x18	     12642	option.c	FUNCTION_116
0x4001de7	          0x4989fc	                            mov r12, rdi	     12642	option.c	FUNCTION_116
0x4001dea	    0x64488b042528	                mov rax, qword fs:[0x28]	     12642	option.c	FUNCTION_116
0x4001df3	      0x4889442408	                mov qword [rsp + 8], rax	     12642	option.c	FUNCTION_116
0x4001df8	            0x31c0	                            xor eax, eax	     12642	option.c	FUNCTION_116
0x4001dfa	    0x488b87b80100	           mov rax, qword [rdi + 0x1b8] 	     12648	option.c	FUNCTION_116
0x4001e01	        0x48890424	                    mov qword [rsp], rax	     12648	option.c	FUNCTION_116
0x4001e05	      0xbd00000000	                              mov ebp, 0	     12646	option.c	FUNCTION_116
0x4001e0a	    0x41bd14000000	                          mov r13d, 0x14	     12645	option.c	FUNCTION_116
0x4001e10	      0xbb00000000	                              mov ebx, 0	     12644	option.c	FUNCTION_116
0x4001e15	      0xe9cb000000	                           jmp 0x4001ee5	     12649	option.c	FUNCTION_116	WHILE_1
0x4001e1a	      0xbf00000000	                              mov edi, 0	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e1f	      0xb906000000	                              mov ecx, 6	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e24	          0x4889d6	                            mov rsi, rdx	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e27	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e29	           0xf97c1	                                 seta cl	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e2c	           0xf92c0	                                 setb al	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e2f	            0x38c1	                              cmp cl, al	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e31	            0x7535	                           jne 0x4001e68	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4001e33	         0xfb64206	               movzx eax, byte [rdx + 6]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e37	            0x3c2d	                            cmp al, 0x2d	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e39	            0x750e	                           jne 0x4001e49	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e3b	         0xfb64207	               movzx eax, byte [rdx + 7]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e3f	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e42	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e45	            0x760d	                           jbe 0x4001e54	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e47	            0xeb1f	                           jmp 0x4001e68	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e49	           0xfb6c0	                           movzx eax, al	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e4c	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e4f	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e52	            0x7714	                            ja 0x4001e68	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4001e54	        0x4883c206	                              add rdx, 6	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4001e58	        0x48891424	                    mov qword [rsp], rdx	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4001e5c	          0x4889e7	                            mov rdi, rsp	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4001e5f	      0xe800000000	                          call 0x4001e64	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4001e64	            0x89c3	                            mov ebx, eax	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4001e66	            0xeb60	                           jmp 0x4001ec8	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4001e68	      0xbf00000000	                              mov edi, 0	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e6d	      0xb904000000	                              mov ecx, 4	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e72	          0x4889d6	                            mov rsi, rdx	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e75	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e77	           0xf97c1	                                 seta cl	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e7a	           0xf92c0	                                 setb al	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e7d	            0x38c1	                              cmp cl, al	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e7f	            0x7521	                           jne 0x4001ea2	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e81	         0xfb64204	               movzx eax, byte [rdx + 4]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e85	          0x83e830	                           sub eax, 0x30	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e88	          0x83f809	                              cmp eax, 9	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e8b	            0x7715	                            ja 0x4001ea2	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4001e8d	        0x4883c204	                              add rdx, 4	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4001e91	        0x48891424	                    mov qword [rsp], rdx	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4001e95	          0x4889e7	                            mov rdi, rsp	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4001e98	      0xe800000000	                          call 0x4001e9d	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4001e9d	          0x4989c5	                            mov r13, rax	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4001ea0	            0xeb26	                           jmp 0x4001ec8	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4001ea2	      0xbf00000000	                              mov edi, 0	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001ea7	      0xb903000000	                              mov ecx, 3	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eac	          0x4889d6	                            mov rsi, rdx	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eaf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eb1	           0xf97c1	                                 seta cl	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eb4	           0xf92c0	                                 setb al	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eb7	            0x38c1	                              cmp cl, al	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001eb9	            0x750d	                           jne 0x4001ec8	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4001ebb	        0x4883c203	                              add rdx, 3	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4001ebf	        0x48891424	                    mov qword [rsp], rdx	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4001ec3	      0xbd01000000	                              mov ebp, 1	     12665	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4001ec8	        0x488b0424	                    mov rax, qword [rsp]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ecc	           0xfb610	                   movzx edx, byte [rax]	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ecf	          0x80fa2c	                            cmp dl, 0x2c	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ed2	            0x7404	                            je 0x4001ed8	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ed4	            0x84d2	                             test dl, dl	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ed6	            0x7539	                           jne 0x4001f11	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001ed8	          0x80fa2c	                            cmp dl, 0x2c	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4001edb	            0x7508	                           jne 0x4001ee5	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4001edd	        0x4883c001	                              add rax, 1	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4001ee1	        0x48890424	                    mov qword [rsp], rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4001ee5	        0x488b1424	                    mov rdx, qword [rsp]	     12649	option.c	FUNCTION_116	WHILE_1
0x4001ee9	          0x803a00	                       cmp byte [rdx], 0	     12649	option.c	FUNCTION_116	WHILE_1
0x4001eec	     0xf8528ffffff	                           jne 0x4001e1a	     12649	option.c	FUNCTION_116	WHILE_1
0x4001ef2	    0x41899c244405	            mov dword [r12 + 0x544], ebx	     12673	option.c	FUNCTION_116
0x4001efa	    0x4589ac244005	           mov dword [r12 + 0x540], r13d	     12674	option.c	FUNCTION_116
0x4001f02	    0x4189ac244805	            mov dword [r12 + 0x548], ebp	     12675	option.c	FUNCTION_116
0x4001f0a	      0xb801000000	                              mov eax, 1	     12677	option.c	FUNCTION_116
0x4001f0f	            0xeb05	                           jmp 0x4001f16	     12677	option.c	FUNCTION_116
0x4001f11	      0xb800000000	                              mov eax, 0	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4001f16	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     12678	option.c	FUNCTION_116
0x4001f1b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     12678	option.c	FUNCTION_116
0x4001f24	            0x7405	                            je 0x4001f2b	     12678	option.c	FUNCTION_116
0x4001f26	      0xe800000000	                          call 0x4001f2b	     12678	option.c	FUNCTION_116
0x4001f2b	        0x4883c418	                           add rsp, 0x18	     12678	option.c	FUNCTION_116
0x4001f2f	              0x5b	                                 pop rbx	     12678	option.c	FUNCTION_116
0x4001f30	              0x5d	                                 pop rbp	     12678	option.c	FUNCTION_116
0x4001f31	            0x415c	                                 pop r12	     12678	option.c	FUNCTION_116
0x4001f33	            0x415d	                                 pop r13	     12678	option.c	FUNCTION_116
0x4001f35	              0xc3	                                     ret	     12678	option.c	FUNCTION_116
set_string_option_global	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,2:DO,0:CALL,3:WHILE,0	27
0x4003b6e	              0x55	                                push rbp	      5933	option.c	FUNCTION_37
0x4003b6f	              0x53	                                push rbx	      5933	option.c	FUNCTION_37
0x4003b70	        0x4883ec08	                              sub rsp, 8	      5933	option.c	FUNCTION_37
0x4003b74	          0x4863c7	                         movsxd rax, edi	      5937	option.c	FUNCTION_37	IF_1
0x4003b77	        0x48c1e006	                              shl rax, 6	      5937	option.c	FUNCTION_37	IF_1
0x4003b7b	    0x488b98000000	                    mov rbx, qword [rax]	      5937	option.c	FUNCTION_37	IF_1
0x4003b82	    0x488d86b80100	                  lea rax, [rsi + 0x1b8]	      5938	option.c	FUNCTION_37	CALL_1
0x4003b89	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      5938	option.c	FUNCTION_37	CALL_1
0x4003b8d	        0x480f44d8	                          cmove rbx, rax	      5938	option.c	FUNCTION_37	CALL_1
0x4003b91	          0x4863ff	                         movsxd rdi, edi	      5941	option.c	FUNCTION_37	IF_2
0x4003b94	        0x48c1e706	                              shl rdi, 6	      5941	option.c	FUNCTION_37	IF_2
0x4003b98	    0x83bf00000000	                      cmp dword [rdi], 0	      5942	option.c	FUNCTION_37	IF_2
0x4003b9f	            0x7420	                            je 0x4003bc1	      5942	option.c	FUNCTION_37	IF_2
0x4003ba1	          0x4839f3	                            cmp rbx, rsi	      5942	option.c	FUNCTION_37	IF_2
0x4003ba4	            0x741b	                            je 0x4003bc1	      5942	option.c	FUNCTION_37	IF_2
0x4003ba6	          0x488b3e	                    mov rdi, qword [rsi]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4003ba9	      0xe800000000	                          call 0x4003bae	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4003bae	          0x4889c5	                            mov rbp, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4003bb1	          0x4885c0	                           test rax, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4003bb4	            0x740b	                            je 0x4003bc1	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4003bb6	          0x488b3b	                    mov rdi, qword [rbx]	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4003bb9	      0xe800000000	                          call 0x4003bbe	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4003bbe	          0x48892b	                    mov qword [rbx], rbp	      5946	option.c	FUNCTION_37	IF_2
0x4003bc1	        0x4883c408	                              add rsp, 8	      5948	option.c	FUNCTION_37
0x4003bc5	              0x5b	                                 pop rbx	      5948	option.c	FUNCTION_37
0x4003bc6	              0x5d	                                 pop rbp	      5948	option.c	FUNCTION_37
0x4003bc7	              0xc3	                                     ret	      5948	option.c	FUNCTION_37
can_bs	SWITCH,1:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	24
0x400ac90	    0x488b0d000000	            mov rcx, qword [0x0400ac97] 	     12442	option.c	FUNCTION_109	SWITCH_1
0x400ac97	           0xfb611	                   movzx edx, byte [rcx]	     12442	option.c	FUNCTION_109	SWITCH_1
0x400ac9a	          0x80fa31	                            cmp dl, 0x31	     12442	option.c	FUNCTION_109	SWITCH_1
0x400ac9d	            0x7416	                            je 0x400acb5	     12442	option.c	FUNCTION_109	SWITCH_1
0x400ac9f	      0xb801000000	                              mov eax, 1	     12444	option.c	FUNCTION_109	SWITCH_1
0x400aca4	          0x80fa32	                            cmp dl, 0x32	     12442	option.c	FUNCTION_109	SWITCH_1
0x400aca7	            0x7431	                            je 0x400acda	     12442	option.c	FUNCTION_109	SWITCH_1
0x400aca9	      0xb800000000	                              mov eax, 0	     12446	option.c	FUNCTION_109	SWITCH_1
0x400acae	          0x80fa30	                            cmp dl, 0x30	     12442	option.c	FUNCTION_109	SWITCH_1
0x400acb1	            0x750c	                           jne 0x400acbf	     12442	option.c	FUNCTION_109	SWITCH_1
0x400acb3	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
0x400acb5	          0x83ff73	                           cmp edi, 0x73	     12445	option.c	FUNCTION_109	SWITCH_1
0x400acb8	           0xf95c0	                                setne al	     12445	option.c	FUNCTION_109	SWITCH_1
0x400acbb	           0xfb6c0	                           movzx eax, al	     12445	option.c	FUNCTION_109	SWITCH_1
0x400acbe	              0xc3	                                     ret	     12445	option.c	FUNCTION_109	SWITCH_1
0x400acbf	        0x4883ec08	                              sub rsp, 8	     12441	option.c	FUNCTION_109
0x400acc3	            0x89fe	                            mov esi, edi	     12441	option.c	FUNCTION_109
0x400acc5	          0x4889cf	                            mov rdi, rcx	     12448	option.c	FUNCTION_109	CALL_1
0x400acc8	      0xe800000000	                          call 0x400accd	     12448	option.c	FUNCTION_109	CALL_1
0x400accd	          0x4885c0	                           test rax, rax	     12448	option.c	FUNCTION_109	CALL_1
0x400acd0	           0xf95c0	                                setne al	     12448	option.c	FUNCTION_109	CALL_1
0x400acd3	           0xfb6c0	                           movzx eax, al	     12448	option.c	FUNCTION_109	CALL_1
0x400acd6	        0x4883c408	                              add rsp, 8	     12449	option.c	FUNCTION_109
0x400acda	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
free_one_termoption	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,2:DO,0:CALL,1:WHILE,0	25
0x4004bc0	    0x48833d000000	               cmp qword [0x04004bc8], 0	     10330	option.c	FUNCTION_71	FOR_1
0x4004bc8	            0x744c	                            je 0x4004c16	     10330	option.c	FUNCTION_71	FOR_1
0x4004bca	              0x53	                                push rbx	     10327	option.c	FUNCTION_71
0x4004bcb	    0x483b3d000000	            cmp rdi, qword [0x04004bd2] 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bd2	            0x740f	                            je 0x4004be3	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bd4	      0xbb00000000	                              mov ebx, 0	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bd9	            0xeb30	                           jmp 0x4004c0b	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bdb	        0x48397b18	            cmp qword [rbx + 0x18], rdi 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bdf	            0x752a	                           jne 0x4004c0b	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004be1	            0xeb05	                           jmp 0x4004be8	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4004be3	      0xbb00000000	                              mov ebx, 0	     10330	option.c	FUNCTION_71	FOR_1
0x4004be8	        0xf6431008	               test byte [rbx + 0x10], 8	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x4004bec	            0x7408	                            je 0x4004bf6	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x4004bee	          0x488b3f	                    mov rdi, qword [rdi]	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4004bf1	      0xe800000000	                          call 0x4004bf6	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x4004bf6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x4004bfa	    0x488b15000000	            mov rdx, qword [0x04004c01] 	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x4004c01	          0x488910	                    mov qword [rax], rdx	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x4004c04	      0x48836310f7	and qword [rbx + 0x10], 0xfffffffffffffff7	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x4004c09	            0xeb0a	                           jmp 0x4004c15	     10337	option.c	FUNCTION_71	FOR_1	IF_1
0x4004c0b	        0x4883c340	                           add rbx, 0x40	     10330	option.c	FUNCTION_71	FOR_1
0x4004c0f	        0x48833b00	                      cmp qword [rbx], 0	     10330	option.c	FUNCTION_71	FOR_1
0x4004c13	            0x75c6	                           jne 0x4004bdb	     10330	option.c	FUNCTION_71	FOR_1
0x4004c15	              0x5b	                                 pop rbx	     10339	option.c	FUNCTION_71
0x4004c16	            0xf3c3	                                     ret	     10339	option.c	FUNCTION_71
showoptions	SWITCH,0:functions,0:ELSE,6:FOR,4:IF,12:DO,0:CALL,21:WHILE,0	213
0x4002aa6	            0x4157	                                push r15	      9862	option.c	FUNCTION_61
0x4002aa8	            0x4156	                                push r14	      9862	option.c	FUNCTION_61
0x4002aaa	            0x4155	                                push r13	      9862	option.c	FUNCTION_61
0x4002aac	            0x4154	                                push r12	      9862	option.c	FUNCTION_61
0x4002aae	              0x55	                                push rbp	      9862	option.c	FUNCTION_61
0x4002aaf	              0x53	                                push rbx	      9862	option.c	FUNCTION_61
0x4002ab0	        0x4883ec18	                           sub rsp, 0x18	      9862	option.c	FUNCTION_61
0x4002ab4	            0x89fb	                            mov ebx, edi	      9862	option.c	FUNCTION_61
0x4002ab6	        0x897c240c	              mov dword [rsp + 0xc], edi	      9862	option.c	FUNCTION_61
0x4002aba	          0x4189f7	                           mov r15d, esi	      9862	option.c	FUNCTION_61
0x4002abd	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x4002ac2	      0xe800000000	                          call 0x4002ac7	      9878	option.c	FUNCTION_61	CALL_1
0x4002ac7	          0x4885c0	                           test rax, rax	      9880	option.c	FUNCTION_61	IF_1
0x4002aca	     0xf84e3020000	                            je 0x4002db3	      9880	option.c	FUNCTION_61	IF_1
0x4002ad0	          0x4989c6	                            mov r14, rax	      9880	option.c	FUNCTION_61	IF_1
0x4002ad3	          0x83fb02	                              cmp ebx, 2	      9884	option.c	FUNCTION_61	IF_2
0x4002ad6	            0x753f	                           jne 0x4002b17	      9884	option.c	FUNCTION_61	IF_2
0x4002ad8	      0xba05000000	                              mov edx, 5	      9885	option.c	FUNCTION_61	CALL_3
0x4002add	      0xbe00000000	                              mov esi, 0	      9885	option.c	FUNCTION_61	CALL_3
0x4002ae2	      0xbf00000000	                              mov edi, 0	      9885	option.c	FUNCTION_61	CALL_3
0x4002ae7	      0xe800000000	                          call 0x4002aec	      9885	option.c	FUNCTION_61	CALL_3
0x4002aec	          0x4889c7	                            mov rdi, rax	      9885	option.c	FUNCTION_61	CALL_3
0x4002aef	      0xe800000000	                          call 0x4002af4	      9885	option.c	FUNCTION_61	CALL_3
0x4002af4	    0x8b0500000000	            mov eax, dword [0x04002afa] 	      9898	option.c	FUNCTION_61	FOR_1
0x4002afa	    0xc74424040100	                  mov dword [rsp + 4], 1	      9898	option.c	FUNCTION_61	FOR_1
0x4002b02	    0xc74424080200	                  mov dword [rsp + 8], 2	      9898	option.c	FUNCTION_61	FOR_1
0x4002b0a	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x4002b0c	     0xf8429020000	                            je 0x4002d3b	      9898	option.c	FUNCTION_61	FOR_1
0x4002b12	      0xe944020000	                           jmp 0x4002d5b	      9898	option.c	FUNCTION_61	FOR_1
0x4002b17	        0x41f6c702	                            test r15b, 2	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b1b	            0x741e	                            je 0x4002b3b	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b1d	      0xba05000000	                              mov edx, 5	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b22	      0xbe00000000	                              mov esi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b27	      0xbf00000000	                              mov edi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b2c	      0xe800000000	                          call 0x4002b31	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b31	          0x4889c7	                            mov rdi, rax	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b34	      0xe800000000	                          call 0x4002b39	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b39	            0xebb9	                           jmp 0x4002af4	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002b3b	        0x41f6c704	                            test r15b, 4	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b3f	            0x741e	                            je 0x4002b5f	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b41	      0xba05000000	                              mov edx, 5	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b46	      0xbe00000000	                              mov esi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b4b	      0xbf00000000	                              mov edi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b50	      0xe800000000	                          call 0x4002b55	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b55	          0x4889c7	                            mov rdi, rax	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b58	      0xe800000000	                          call 0x4002b5d	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b5d	            0xeb95	                           jmp 0x4002af4	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b5f	      0xba05000000	                              mov edx, 5	      9891	option.c	FUNCTION_61	CALL_9
0x4002b64	      0xbe00000000	                              mov esi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x4002b69	      0xbf00000000	                              mov edi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x4002b6e	      0xe800000000	                          call 0x4002b73	      9891	option.c	FUNCTION_61	CALL_9
0x4002b73	          0x4889c7	                            mov rdi, rax	      9891	option.c	FUNCTION_61	CALL_9
0x4002b76	      0xe800000000	                          call 0x4002b7b	      9891	option.c	FUNCTION_61	CALL_9
0x4002b7b	      0xe974ffffff	                           jmp 0x4002af4	      9891	option.c	FUNCTION_61	CALL_9
0x4002b80	          0x4889df	                            mov rdi, rbx	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x4002b83	      0xe869d6ffff	                   call sym.istermoption	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x4002b88	            0x89c5	                            mov ebp, eax	      9907	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_10
0x4002b8a	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b8d	            0x741f	                            je 0x4002bae	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b8f	        0x837b2000	               cmp dword [rbx + 0x20], 0	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b93	     0xf84b1000000	                            je 0x4002c4a	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b99	            0x85c0	                           test eax, eax	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b9b	     0xf85a9000000	                           jne 0x4002c4a	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002ba1	          0x4489fe	                           mov esi, r15d	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002ba4	          0x4889df	                            mov rdi, rbx	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002ba7	      0xe808ebffff	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002bac	            0xeb08	                           jmp 0x4002bb6	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002bae	          0x4889df	                            mov rdi, rbx	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4002bb1	      0xe8b0daffff	                       call sym.get_varp	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4002bb6	          0x4885c0	                           test rax, rax	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bb9	     0xf848b000000	                            je 0x4002c4a	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bbf	        0x4183fd02	                             cmp r13d, 2	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc3	            0x7504	                           jne 0x4002bc9	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc5	            0x85ed	                           test ebp, ebp	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc7	            0x751e	                           jne 0x4002be7	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc9	        0x4183fd01	                             cmp r13d, 1	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bcd	            0x7504	                           jne 0x4002bd3	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bcf	            0x85ed	                           test ebp, ebp	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bd1	            0x7414	                            je 0x4002be7	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bd3	          0x4585ed	                         test r13d, r13d	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002bd6	            0x7572	                           jne 0x4002c4a	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002bd8	          0x4889c6	                            mov rsi, rax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002bdb	          0x4889df	                            mov rdi, rbx	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002bde	      0xe823d9ffff	                 call sym.optval_default	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002be3	            0x85c0	                           test eax, eax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002be5	            0x7563	                           jne 0x4002c4a	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002be7	        0xf6431001	               test byte [rbx + 0x10], 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002beb	     0xf8574010000	                           jne 0x4002d65	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002bf1	          0x4489fe	                           mov esi, r15d	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002bf4	          0x4889df	                            mov rdi, rbx	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002bf7	      0xe883fcffff	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002bfc	          0x488b3b	                    mov rdi, qword [rbx]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002bff	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c06	      0xb800000000	                              mov eax, 0	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c0b	            0xf2ae	              repne scasb al, byte [rdi]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c0d	          0x48f7d1	                                 not rcx	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c10	        0x488d69ff	                      lea rbp, [rcx - 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c14	    0x488b3d000000	            mov rdi, qword [0x04002c1b] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c1b	      0xe800000000	                          call 0x4002c20	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c20	        0x8d442801	                lea eax, [rax + rbp + 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c24	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c28	            0x89ca	                            mov edx, ecx	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002c2a	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c2d	            0x7f05	                            jg 0x4002c34	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c2f	          0x83f901	                              cmp ecx, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c32	            0x740a	                            je 0x4002c3e	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c34	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c37	            0x7e11	                           jle 0x4002c4a	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c39	          0x83fa02	                              cmp edx, 2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c3c	            0x750c	                           jne 0x4002c4a	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c3e	          0x4963c4	                        movsxd rax, r12d	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c41	        0x49891cc6	            mov qword [r14 + rax*8], rbx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c45	      0x458d642401	                     lea r12d, [r12 + 1]	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002c4a	        0x4883c340	                           add rbx, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002c4e	        0x48833b00	                      cmp qword [rbx], 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002c52	     0xf8528ffffff	                           jne 0x4002b80	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002c58	      0x837c240401	                  cmp dword [rsp + 4], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c5d	            0x753d	                           jne 0x4002c9c	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c5f	    0x488b35000000	            mov rsi, qword [0x04002c66] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c66	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c70	          0x48f7ee	                                imul rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c73	        0x48c1fa03	                              sar rdx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c77	          0x4889d1	                            mov rcx, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c7a	        0x48c1fe3f	                           sar rsi, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c7e	          0x4829f1	                            sub rcx, rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c81	            0x85c9	                           test ecx, ecx	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002c83	      0xb801000000	                              mov eax, 1	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002c88	           0xf44c8	                          cmove ecx, eax	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002c8b	      0x418d440cff	                lea eax, [r12 + rcx - 1]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c90	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c91	            0xf7f9	                                idiv ecx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c93	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c95	            0x7f0f	                            jg 0x4002ca6	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c97	      0xe98b000000	                           jmp 0x4002d27	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c9c	          0x4585e4	                         test r12d, r12d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c9f	            0x7e7f	                           jle 0x4002d20	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca1	          0x4589e5	                          mov r13d, r12d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca4	            0xeb06	                           jmp 0x4002cac	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca6	          0x4589e5	                          mov r13d, r12d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca9	          0x4189c4	                           mov r12d, eax	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002cac	    0x8b0500000000	            mov eax, dword [0x04002cb2] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cb2	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cb4	            0x756a	                           jne 0x4002d20	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cb6	    0xc70424000000	                      mov dword [rsp], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cbd	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x4002cc2	      0xe800000000	                          call 0x4002cc7	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x4002cc7	    0x8b0500000000	            mov eax, dword [0x04002ccd] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002ccd	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002ccf	            0x754f	                           jne 0x4002d20	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002cd1	          0x8b0424	                    mov eax, dword [rsp]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cd4	          0x4439e8	                           cmp eax, r13d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cd7	            0x7d27	                           jge 0x4002d00	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cd9	            0x89c3	                            mov ebx, eax	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cdb	      0xbd00000000	                              mov ebp, 0	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002ce0	    0x892d00000000	            mov dword [0x04002ce6], ebp 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002ce6	          0x4863c3	                         movsxd rax, ebx	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002ce9	        0x498b3cc6	            mov rdi, qword [r14 + rax*8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002ced	          0x4489fe	                           mov esi, r15d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002cf0	      0xe8dcfcffff	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002cf5	          0x83c514	                           add ebp, 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cf8	          0x4401e3	                           add ebx, r12d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cfb	          0x4439eb	                           cmp ebx, r13d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002cfe	            0x7ce0	                            jl 0x4002ce0	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002d00	      0xe800000000	                          call 0x4002d05	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x4002d05	      0xe800000000	                          call 0x4002d0a	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x4002d0a	        0x83042401	                      add dword [rsp], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d0e	          0x8b0424	                    mov eax, dword [rsp]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d11	          0x4439e0	                           cmp eax, r12d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d14	            0x7d0a	                           jge 0x4002d20	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d16	    0x8b0500000000	            mov eax, dword [0x04002d1c] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d1c	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d1e	            0x749d	                            je 0x4002cbd	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002d20	      0x837c240802	                  cmp dword [rsp + 8], 2	      9898	option.c	FUNCTION_61	FOR_1
0x4002d25	            0x7f34	                            jg 0x4002d5b	      9898	option.c	FUNCTION_61	FOR_1
0x4002d27	    0x8b0500000000	            mov eax, dword [0x04002d2d] 	      9898	option.c	FUNCTION_61	FOR_1
0x4002d2d	      0x8344240801	                  add dword [rsp + 8], 1	      9898	option.c	FUNCTION_61	FOR_1
0x4002d32	      0x8344240401	                  add dword [rsp + 4], 1	      9898	option.c	FUNCTION_61	FOR_1
0x4002d37	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x4002d39	            0x7520	                           jne 0x4002d5b	      9898	option.c	FUNCTION_61	FOR_1
0x4002d3b	    0x41bc00000000	                             mov r12d, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d41	      0xbb00000000	                              mov ebx, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d46	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d4b	    0x48833d000000	               cmp qword [0x04002d53], 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d53	     0xf8527feffff	                           jne 0x4002b80	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d59	            0xeb1a	                           jmp 0x4002d75	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002d5b	          0x4c89f7	                            mov rdi, r14	      9961	option.c	FUNCTION_61	CALL_21
0x4002d5e	      0xe800000000	                          call 0x4002d63	      9961	option.c	FUNCTION_61	CALL_21
0x4002d63	            0xeb4e	                           jmp 0x4002db3	      9961	option.c	FUNCTION_61	CALL_21
0x4002d65	      0x837c240401	                  cmp dword [rsp + 4], 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d6a	     0xf84cefeffff	                            je 0x4002c3e	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d70	      0xe9d5feffff	                           jmp 0x4002c4a	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d75	      0x837c240401	                  cmp dword [rsp + 4], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d7a	            0x75a4	                           jne 0x4002d20	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d7c	    0x488b0d000000	            mov rcx, qword [0x04002d83] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d83	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d8d	          0x48f7e9	                                imul rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d90	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d93	        0x48c1f803	                              sar rax, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d97	        0x48c1f93f	                           sar rcx, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d9b	          0x4829c8	                            sub rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002d9e	            0x89c1	                            mov ecx, eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002da0	    0x41bc00000000	                             mov r12d, 0	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002da6	            0x85c0	                           test eax, eax	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002da8	     0xf85ddfeffff	                           jne 0x4002c8b	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002dae	      0xe974ffffff	                           jmp 0x4002d27	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002db3	        0x4883c418	                           add rsp, 0x18	      9962	option.c	FUNCTION_61
0x4002db7	              0x5b	                                 pop rbx	      9962	option.c	FUNCTION_61
0x4002db8	              0x5d	                                 pop rbp	      9962	option.c	FUNCTION_61
0x4002db9	            0x415c	                                 pop r12	      9962	option.c	FUNCTION_61
0x4002dbb	            0x415d	                                 pop r13	      9962	option.c	FUNCTION_61
0x4002dbd	            0x415e	                                 pop r14	      9962	option.c	FUNCTION_61
0x4002dbf	            0x415f	                                 pop r15	      9962	option.c	FUNCTION_61
0x4002dc1	              0xc3	                                     ret	      9962	option.c	FUNCTION_61
showoneopt	SWITCH,0:functions,0:ELSE,2:FOR,0:IF,3:DO,0:CALL,9:WHILE,0	55
0x40029d1	            0x4155	                                push r13	      9993	option.c	FUNCTION_63
0x40029d3	            0x4154	                                push r12	      9993	option.c	FUNCTION_63
0x40029d5	              0x55	                                push rbp	      9993	option.c	FUNCTION_63
0x40029d6	              0x53	                                push rbx	      9993	option.c	FUNCTION_63
0x40029d7	        0x4883ec08	                              sub rsp, 8	      9993	option.c	FUNCTION_63
0x40029db	          0x4889fb	                            mov rbx, rdi	      9993	option.c	FUNCTION_63
0x40029de	          0x4189f4	                           mov r12d, esi	      9993	option.c	FUNCTION_63
0x40029e1	    0x448b2d000000	           mov r13d, dword [0x040029e8] 	      9995	option.c	FUNCTION_63
0x40029e8	    0xc70500000000	               mov dword [0x040029f2], 0	      9997	option.c	FUNCTION_63
0x40029f2	    0xc70500000000	               mov dword [0x040029fc], 1	      9998	option.c	FUNCTION_63
0x40029fc	      0xe8b3ecffff	                 call sym.get_varp_scope	     10000	option.c	FUNCTION_63	CALL_1
0x4002a01	        0xf6431001	               test byte [rbx + 0x10], 1	     10003	option.c	FUNCTION_63	IF_1
0x4002a05	            0x744a	                            je 0x4002a51	     10003	option.c	FUNCTION_63	IF_1
0x4002a07	          0x4889c5	                            mov rbp, rax	     10003	option.c	FUNCTION_63	IF_1
0x4002a0a	    0x488b05000000	            mov rax, qword [0x04002a11] 	     10003	option.c	FUNCTION_63	IF_1
0x4002a11	    0x4805c8000000	                           add rax, 0xc8	     10003	option.c	FUNCTION_63	IF_1
0x4002a17	          0x4839c5	                            cmp rbp, rax	     10003	option.c	FUNCTION_63	IF_1
0x4002a1a	            0x750b	                           jne 0x4002a27	     10003	option.c	FUNCTION_63	IF_1
0x4002a1c	      0xe800000000	                          call 0x4002a21	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x4002a21	            0x85c0	                           test eax, eax	     10003	option.c	FUNCTION_63	IF_1
0x4002a23	            0x7408	                            je 0x4002a2d	     10003	option.c	FUNCTION_63	IF_1
0x4002a25	            0xeb12	                           jmp 0x4002a39	     10003	option.c	FUNCTION_63	IF_1
0x4002a27	        0x837d0000	                      cmp dword [rbp], 0	     10003	option.c	FUNCTION_63	IF_1
0x4002a2b	            0x7512	                           jne 0x4002a3f	     10003	option.c	FUNCTION_63	IF_1
0x4002a2d	      0xbf00000000	                              mov edi, 0	     10005	option.c	FUNCTION_63	CALL_3
0x4002a32	      0xe800000000	                          call 0x4002a37	     10005	option.c	FUNCTION_63	CALL_3
0x4002a37	            0xeb22	                           jmp 0x4002a5b	     10005	option.c	FUNCTION_63	CALL_3
0x4002a39	        0xf6431001	               test byte [rbx + 0x10], 1	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a3d	            0x7412	                            je 0x4002a51	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a3f	        0x837d0000	                      cmp dword [rbp], 0	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a43	            0x790c	                           jns 0x4002a51	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a45	      0xbf00000000	                              mov edi, 0	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a4a	      0xe800000000	                          call 0x4002a4f	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a4f	            0xeb0a	                           jmp 0x4002a5b	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a51	      0xbf00000000	                              mov edi, 0	     10009	option.c	FUNCTION_63	CALL_5
0x4002a56	      0xe800000000	                          call 0x4002a5b	     10009	option.c	FUNCTION_63	CALL_5
0x4002a5b	          0x488b3b	                    mov rdi, qword [rbx]	     10010	option.c	FUNCTION_63	CALL_6
0x4002a5e	      0xe800000000	                          call 0x4002a63	     10010	option.c	FUNCTION_63	CALL_6
0x4002a63	        0xf6431001	               test byte [rbx + 0x10], 1	     10011	option.c	FUNCTION_63	IF_3
0x4002a67	            0x7521	                           jne 0x4002a8a	     10011	option.c	FUNCTION_63	IF_3
0x4002a69	      0xbf3d000000	                           mov edi, 0x3d	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x4002a6e	      0xe800000000	                          call 0x4002a73	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x4002a73	          0x4489e6	                           mov esi, r12d	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a76	          0x4889df	                            mov rdi, rbx	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a79	      0xe801feffff	            call sym.option_value2string	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a7e	    0x488b3d000000	            mov rdi, qword [0x04002a85] 	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x4002a85	      0xe800000000	                          call 0x4002a8a	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x4002a8a	    0x44892d000000	           mov dword [0x04002a91], r13d 	     10019	option.c	FUNCTION_63
0x4002a91	    0xc70500000000	               mov dword [0x04002a9b], 0	     10020	option.c	FUNCTION_63
0x4002a9b	        0x4883c408	                              add rsp, 8	     10021	option.c	FUNCTION_63
0x4002a9f	              0x5b	                                 pop rbx	     10021	option.c	FUNCTION_63
0x4002aa0	              0x5d	                                 pop rbp	     10021	option.c	FUNCTION_63
0x4002aa1	            0x415c	                                 pop r12	     10021	option.c	FUNCTION_63
0x4002aa3	            0x415d	                                 pop r13	     10021	option.c	FUNCTION_63
0x4002aa5	              0xc3	                                     ret	     10021	option.c	FUNCTION_63
findoption	SWITCH,0:functions,0:ELSE,2:FOR,3:IF,10:DO,0:CALL,6:WHILE,0	130
0x4000317	            0x4156	                                push r14	      9332	option.c	FUNCTION_52
0x4000319	            0x4155	                                push r13	      9332	option.c	FUNCTION_52
0x400031b	            0x4154	                                push r12	      9332	option.c	FUNCTION_52
0x400031d	              0x55	                                push rbp	      9332	option.c	FUNCTION_52
0x400031e	              0x53	                                push rbx	      9332	option.c	FUNCTION_52
0x400031f	    0x66833d000000	                cmp word [0x04000327], 0	      9343	option.c	FUNCTION_52	IF_1
0x4000327	            0x7560	                           jne 0x4000389	      9343	option.c	FUNCTION_52	IF_1
0x4000329	    0x4c8b05000000	              mov r8, qword [0x04000330]	      9345	option.c	FUNCTION_52	IF_1
0x4000330	    0x488b15000000	            mov rdx, qword [0x04000337] 	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000337	          0x4885d2	                           test rdx, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400033a	            0x744d	                            je 0x4000389	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400033c	      0xb900000000	                              mov ecx, 0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000341	      0xbe01000000	                              mov esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000346	            0xeb03	                           jmp 0x400034b	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000348	          0x4889c2	                            mov rdx, rax	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400034b	           0xfb602	                   movzx eax, byte [rdx]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400034e	          0x413a00	                       cmp al, byte [r8]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4000351	            0x7423	                            je 0x4000376	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4000353	            0x3c74	                            cmp al, 0x74	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000355	            0x750f	                           jne 0x4000366	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000357	        0x807a015f	                cmp byte [rdx + 1], 0x5f	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400035b	            0x7509	                           jne 0x4000366	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400035d	    0x668935000000	               mov word [0x04000364], si	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000364	            0xeb10	                           jmp 0x4000376	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000366	           0xfbec0	                           movsx eax, al	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000369	          0x83e861	                           sub eax, 0x61	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400036c	            0x4898	                                    cdqe	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x400036e	    0x6689b4000000	                mov word [rax + rax], si	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000376	          0x83c601	                              add esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000379	        0x4883c140	                           add rcx, 0x40	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400037d	        0x488b41c0	             mov rax, qword [rcx - 0x40]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000381	          0x4989d0	                             mov r8, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000384	          0x4885c0	                           test rax, rax	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000387	            0x75bf	                           jne 0x4000348	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000389	        0x440fb627	                  movzx r12d, byte [rdi]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400038d	      0x418d44249f	                   lea eax, [r12 - 0x61]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x4000392	            0x3c19	                            cmp al, 0x19	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x4000394	     0xf87c5000000	                            ja 0x400045f	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400039a	          0x4889fd	                            mov rbp, rdi	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400039d	        0x4180fc74	                          cmp r12b, 0x74	      9369	option.c	FUNCTION_52
0x40003a1	     0xf85f8000000	                           jne 0x400049f	      9369	option.c	FUNCTION_52
0x40003a7	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9369	option.c	FUNCTION_52
0x40003ab	     0xf85ee000000	                           jne 0x400049f	      9369	option.c	FUNCTION_52
0x40003b1	      0xe9c4000000	                           jmp 0x400047a	      9369	option.c	FUNCTION_52
0x40003b6	    0x41bd01000000	                             mov r13d, 1	      9369	option.c	FUNCTION_52
0x40003bc	          0x4c89f6	                            mov rsi, r14	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40003bf	          0x4889ef	                            mov rdi, rbp	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40003c2	      0xe800000000	                          call 0x40003c7	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40003c7	            0x85c0	                           test eax, eax	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40003c9	            0x741b	                            je 0x40003e6	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40003cb	          0x83c301	                              add ebx, 1	      9374	option.c	FUNCTION_52	FOR_2
0x40003ce	          0x4863c3	                         movsxd rax, ebx	      9374	option.c	FUNCTION_52	FOR_2
0x40003d1	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x40003d5	    0x4c8bb0000000	                    mov r14, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x40003dc	          0x4d85f6	                           test r14, r14	      9374	option.c	FUNCTION_52	FOR_2
0x40003df	            0x75db	                           jne 0x40003bc	      9374	option.c	FUNCTION_52	FOR_2
0x40003e1	      0xe9e7000000	                           jmp 0x40004cd	      9374	option.c	FUNCTION_52	FOR_2
0x40003e6	          0x4d85f6	                           test r14, r14	      9379	option.c	FUNCTION_52	IF_8
0x40003e9	            0x7564	                           jne 0x400044f	      9379	option.c	FUNCTION_52	IF_8
0x40003eb	          0x4585ed	                         test r13d, r13d	      9379	option.c	FUNCTION_52	IF_8
0x40003ee	            0x755f	                           jne 0x400044f	      9379	option.c	FUNCTION_52	IF_8
0x40003f0	        0x410fb6c4	                         movzx eax, r12b	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40003f4	          0x83e861	                           sub eax, 0x61	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40003f7	            0x4898	                                    cdqe	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40003f9	     0xfbf9c000000	             movsx ebx, word [rax + rax]	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x4000401	          0x4863c3	                         movsxd rax, ebx	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000404	        0x48c1e006	                              shl rax, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000408	    0x4883b8000000	                      cmp qword [rax], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000410	            0x743d	                            je 0x400044f	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000412	          0x4863c3	                         movsxd rax, ebx	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x4000415	        0x48c1e006	                              shl rax, 6	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x4000419	    0x488bb0000000	                    mov rsi, qword [rax]	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x4000420	          0x4885f6	                           test rsi, rsi	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000423	            0x740c	                            je 0x4000431	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000425	          0x4889ef	                            mov rdi, rbp	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000428	      0xe800000000	                          call 0x400042d	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400042d	            0x85c0	                           test eax, eax	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400042f	            0x7438	                            je 0x4000469	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000431	          0x83c301	                              add ebx, 1	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000434	          0x4863c3	                         movsxd rax, ebx	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000437	        0x48c1e006	                              shl rax, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400043b	    0x4883b8000000	                      cmp qword [rax], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000443	            0x75cd	                           jne 0x4000412	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000445	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x400044a	      0xe9ae000000	                           jmp 0x40004fd	      9391	option.c	FUNCTION_52	IF_10
0x400044f	          0x4d85f6	                           test r14, r14	      9391	option.c	FUNCTION_52	IF_10
0x4000452	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x4000457	           0xf45c3	                         cmovne eax, ebx	      9391	option.c	FUNCTION_52	IF_10
0x400045a	      0xe99e000000	                           jmp 0x40004fd	      9391	option.c	FUNCTION_52	IF_10
0x400045f	      0xb8ffffffff	                     mov eax, 0xffffffff	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x4000464	      0xe994000000	                           jmp 0x40004fd	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x4000469	            0x89d8	                            mov eax, ebx	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x400046b	      0xe98d000000	                           jmp 0x40004fd	      9367	option.c	FUNCTION_52	IF_4	IF_5
0x4000470	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x4000475	      0xe983000000	                           jmp 0x40004fd	      9391	option.c	FUNCTION_52	IF_10
0x400047a	     0xfbf1d000000	           movsx ebx, word [0x04000481] 	      9371	option.c	FUNCTION_52	IF_6
0x4000481	          0x4863c3	                         movsxd rax, ebx	      9374	option.c	FUNCTION_52	FOR_2
0x4000484	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x4000488	    0x4c8bb0000000	                    mov r14, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x400048f	          0x4d85f6	                           test r14, r14	      9374	option.c	FUNCTION_52	FOR_2
0x4000492	     0xf851effffff	                           jne 0x40003b6	      9374	option.c	FUNCTION_52	FOR_2
0x4000498	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x400049d	            0xeb5e	                           jmp 0x40004fd	      9391	option.c	FUNCTION_52	IF_10
0x400049f	        0x410fb6c4	                         movzx eax, r12b	      9373	option.c	FUNCTION_52	CALL_3
0x40004a3	          0x83e861	                           sub eax, 0x61	      9373	option.c	FUNCTION_52	CALL_3
0x40004a6	            0x4898	                                    cdqe	      9373	option.c	FUNCTION_52	CALL_3
0x40004a8	     0xfbf9c000000	             movsx ebx, word [rax + rax]	      9373	option.c	FUNCTION_52	CALL_3
0x40004b0	          0x4863c3	                         movsxd rax, ebx	      9374	option.c	FUNCTION_52	FOR_2
0x40004b3	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x40004b7	    0x4c8bb0000000	                    mov r14, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x40004be	    0x41bd00000000	                             mov r13d, 0	      9374	option.c	FUNCTION_52	FOR_2
0x40004c4	          0x4d85f6	                           test r14, r14	      9374	option.c	FUNCTION_52	FOR_2
0x40004c7	     0xf85effeffff	                           jne 0x40003bc	      9374	option.c	FUNCTION_52	FOR_2
0x40004cd	          0x4585ed	                         test r13d, r13d	      9379	option.c	FUNCTION_52	IF_8
0x40004d0	            0x759e	                           jne 0x4000470	      9379	option.c	FUNCTION_52	IF_8
0x40004d2	        0x410fb6c4	                         movzx eax, r12b	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40004d6	          0x83e861	                           sub eax, 0x61	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40004d9	            0x4898	                                    cdqe	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40004db	     0xfbf9c000000	             movsx ebx, word [rax + rax]	      9381	option.c	FUNCTION_52	IF_8	CALL_5
0x40004e3	          0x4863c3	                         movsxd rax, ebx	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40004e6	        0x48c1e006	                              shl rax, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40004ea	    0x4883b8000000	                      cmp qword [rax], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40004f2	     0xf851affffff	                           jne 0x4000412	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40004f8	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x40004fd	              0x5b	                                 pop rbx	      9393	option.c	FUNCTION_52
0x40004fe	              0x5d	                                 pop rbp	      9393	option.c	FUNCTION_52
0x40004ff	            0x415c	                                 pop r12	      9393	option.c	FUNCTION_52
0x4000501	            0x415d	                                 pop r13	      9393	option.c	FUNCTION_52
0x4000503	            0x415e	                                 pop r14	      9393	option.c	FUNCTION_52
0x4000505	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
put_setstring	SWITCH,0:functions,0:ELSE,2:FOR,0:IF,9:DO,0:CALL,9:WHILE,1	90
0x4002e1d	            0x4155	                                push r13	     10193	option.c	FUNCTION_66
0x4002e1f	            0x4154	                                push r12	     10193	option.c	FUNCTION_66
0x4002e21	              0x55	                                push rbp	     10193	option.c	FUNCTION_66
0x4002e22	              0x53	                                push rbx	     10193	option.c	FUNCTION_66
0x4002e23	        0x4883ec18	                           sub rsp, 0x18	     10193	option.c	FUNCTION_66
0x4002e27	          0x4889fd	                            mov rbp, rdi	     10193	option.c	FUNCTION_66
0x4002e2a	          0x4989cc	                            mov r12, rcx	     10193	option.c	FUNCTION_66
0x4002e2d	          0x4489c3	                            mov ebx, r8d	     10193	option.c	FUNCTION_66
0x4002e30	    0x64488b042528	                mov rax, qword fs:[0x28]	     10193	option.c	FUNCTION_66
0x4002e39	      0x4889442408	                mov qword [rsp + 8], rax	     10193	option.c	FUNCTION_66
0x4002e3e	            0x31c0	                            xor eax, eax	     10193	option.c	FUNCTION_66
0x4002e40	          0x4989d0	                             mov r8, rdx	        97	stdio2.h	CALL_61
0x4002e43	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_61
0x4002e46	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002e4b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002e50	      0xe800000000	                          call 0x4002e55	        97	stdio2.h	CALL_61
0x4002e55	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4002e57	     0xf88d3000000	                            js 0x4002f30	     10197	option.c	FUNCTION_66	IF_1
0x4002e5d	        0x498b3424	                    mov rsi, qword [r12]	     10199	option.c	FUNCTION_66	IF_2
0x4002e61	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4002e64	     0xf84b5000000	                            je 0x4002f1f	     10199	option.c	FUNCTION_66	IF_2
0x4002e6a	    0x4981fc000000	                              cmp r12, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4002e71	            0x7538	                           jne 0x4002eab	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4002e73	        0x48893424	                    mov qword [rsp], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4002e77	            0xeb27	                           jmp 0x4002ea0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4002e79	      0xbe00000000	                              mov esi, 0	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e7e	          0x4889e7	                            mov rdi, rsp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e81	      0xe800000000	                          call 0x4002e86	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e86	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e8b	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e8e	          0x4889ef	                            mov rdi, rbp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e91	      0xe800000000	                          call 0x4002e96	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e96	            0x89c3	                            mov ebx, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e98	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002e9a	     0xf8495000000	                            je 0x4002f35	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4002ea0	        0x488b0424	                    mov rax, qword [rsp]	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4002ea4	          0x803800	                       cmp byte [rax], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4002ea7	            0x75d0	                           jne 0x4002e79	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4002ea9	            0xeb74	                           jmp 0x4002f1f	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4002eab	            0x85db	                           test ebx, ebx	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4002ead	            0x745d	                            je 0x4002f0c	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4002eaf	      0xbf00100000	                         mov edi, 0x1000	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4002eb4	      0xe800000000	                          call 0x4002eb9	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4002eb9	          0x4989c5	                            mov r13, rax	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4002ebc	      0xbb00000000	                              mov ebx, 0	     10215	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4002ec1	          0x4885c0	                           test rax, rax	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4002ec4	            0x746f	                            je 0x4002f35	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4002ec6	    0x41b800000000	                              mov r8d, 0	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002ecc	      0xb900100000	                         mov ecx, 0x1000	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002ed1	          0x4889c2	                            mov rdx, rax	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002ed4	        0x498b3424	                    mov rsi, qword [r12]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002ed8	      0xbf00000000	                              mov edi, 0	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002edd	      0xe800000000	                          call 0x4002ee2	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4002ee2	      0xba02000000	                              mov edx, 2	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002ee7	          0x4c89ee	                            mov rsi, r13	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002eea	          0x4889ef	                            mov rdi, rbp	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002eed	      0xe800000000	                          call 0x4002ef2	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002ef2	            0x89c3	                            mov ebx, eax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002ef4	            0x85c0	                           test eax, eax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002ef6	            0x750a	                           jne 0x4002f02	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4002ef8	          0x4c89ef	                            mov rdi, r13	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4002efb	      0xe800000000	                          call 0x4002f00	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4002f00	            0xeb33	                           jmp 0x4002f35	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x4002f02	          0x4c89ef	                            mov rdi, r13	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4002f05	      0xe800000000	                          call 0x4002f0a	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4002f0a	            0xeb13	                           jmp 0x4002f1f	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4002f0c	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f11	          0x4889ef	                            mov rdi, rbp	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f14	      0xe800000000	                          call 0x4002f19	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f19	            0x89c3	                            mov ebx, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f1b	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f1d	            0x7416	                            je 0x4002f35	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4002f1f	          0x4889ef	                            mov rdi, rbp	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4002f22	      0xe800000000	                          call 0x4002f27	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4002f27	            0xf7d0	                                 not eax	     10198	option.c	FUNCTION_66	IF_1
0x4002f29	            0x89c3	                            mov ebx, eax	     10198	option.c	FUNCTION_66	IF_1
0x4002f2b	          0xc1eb1f	                           shr ebx, 0x1f	     10198	option.c	FUNCTION_66	IF_1
0x4002f2e	            0xeb05	                           jmp 0x4002f35	     10198	option.c	FUNCTION_66	IF_1
0x4002f30	      0xbb00000000	                              mov ebx, 0	     10198	option.c	FUNCTION_66	IF_1
0x4002f35	            0x89d8	                            mov eax, ebx	     10230	option.c	FUNCTION_66
0x4002f37	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     10230	option.c	FUNCTION_66
0x4002f3c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10230	option.c	FUNCTION_66
0x4002f45	            0x7405	                            je 0x4002f4c	     10230	option.c	FUNCTION_66
0x4002f47	      0xe800000000	                          call 0x4002f4c	     10230	option.c	FUNCTION_66
0x4002f4c	        0x4883c418	                           add rsp, 0x18	     10230	option.c	FUNCTION_66
0x4002f50	              0x5b	                                 pop rbx	     10230	option.c	FUNCTION_66
0x4002f51	              0x5d	                                 pop rbp	     10230	option.c	FUNCTION_66
0x4002f52	            0x415c	                                 pop r12	     10230	option.c	FUNCTION_66
0x4002f54	            0x415d	                                 pop r13	     10230	option.c	FUNCTION_66
0x4002f56	              0xc3	                                     ret	     10230	option.c	FUNCTION_66
option_expand	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,4:DO,0:CALL,3:WHILE,0	52
0x4001f36	              0x55	                                push rbp	      5520	option.c	FUNCTION_25
0x4001f37	              0x53	                                push rbx	      5520	option.c	FUNCTION_25
0x4001f38	        0x4883ec08	                              sub rsp, 8	      5520	option.c	FUNCTION_25
0x4001f3c	          0x4863c7	                         movsxd rax, edi	      5522	option.c	FUNCTION_25	IF_1
0x4001f3f	        0x48c1e006	                              shl rax, 6	      5522	option.c	FUNCTION_25	IF_1
0x4001f43	    0xf68000000000	                   test byte [rax], 0x10	      5522	option.c	FUNCTION_25	IF_1
0x4001f4a	     0xf849c000000	                            je 0x4001fec	      5522	option.c	FUNCTION_25	IF_1
0x4001f50	          0x4889f5	                            mov rbp, rsi	      5522	option.c	FUNCTION_25	IF_1
0x4001f53	    0x488b98000000	                    mov rbx, qword [rax]	      5522	option.c	FUNCTION_25	IF_1
0x4001f5a	          0x4885db	                           test rbx, rbx	      5522	option.c	FUNCTION_25	IF_1
0x4001f5d	     0xf8495000000	                            je 0x4001ff8	      5522	option.c	FUNCTION_25	IF_1
0x4001f63	          0x4885f6	                           test rsi, rsi	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f66	            0x7425	                            je 0x4001f8d	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f68	      0xb800000000	                              mov eax, 0	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f6d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f74	          0x4889f7	                            mov rdi, rsi	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f77	            0xf2ae	              repne scasb al, byte [rdi]	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f79	          0x4889c8	                            mov rax, rcx	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f7c	          0x48f7d0	                                 not rax	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f7f	        0x4883e801	                              sub rax, 1	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f83	    0x483d00100000	                         cmp rax, 0x1000	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f89	            0x7605	                           jbe 0x4001f90	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f8b	            0xeb66	                           jmp 0x4001ff3	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4001f8d	          0x488b2b	                    mov rbp, qword [rbx]	      5531	option.c	FUNCTION_25	IF_3
0x4001f90	    0x4881fb000000	                              cmp rbx, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4001f97	    0x41b900000000	                              mov r9d, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4001f9d	      0xb800000000	                              mov eax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4001fa2	        0x4c0f44c8	                           cmove r9, rax	      5539	option.c	FUNCTION_25	CALL_2
0x4001fa6	    0x4881fb000000	                              cmp rbx, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4001fad	           0xf94c1	                                 sete cl	      5539	option.c	FUNCTION_25	CALL_2
0x4001fb0	           0xfb6c9	                           movzx ecx, cl	      5539	option.c	FUNCTION_25	CALL_2
0x4001fb3	    0x41b800000000	                              mov r8d, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4001fb9	      0xba00100000	                         mov edx, 0x1000	      5539	option.c	FUNCTION_25	CALL_2
0x4001fbe	    0x488b35000000	            mov rsi, qword [0x04001fc5] 	      5539	option.c	FUNCTION_25	CALL_2
0x4001fc5	          0x4889ef	                            mov rdi, rbp	      5539	option.c	FUNCTION_25	CALL_2
0x4001fc8	      0xe800000000	                          call 0x4001fcd	      5539	option.c	FUNCTION_25	CALL_2
0x4001fcd	    0x488b1d000000	            mov rbx, qword [0x04001fd4] 	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4001fd4	          0x4889ee	                            mov rsi, rbp	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4001fd7	          0x4889df	                            mov rdi, rbx	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4001fda	      0xe800000000	                          call 0x4001fdf	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4001fdf	            0x85c0	                           test eax, eax	      5546	option.c	FUNCTION_25	IF_4
0x4001fe1	      0xb800000000	                              mov eax, 0	      5546	option.c	FUNCTION_25	IF_4
0x4001fe6	        0x480f44d8	                          cmove rbx, rax	      5546	option.c	FUNCTION_25	IF_4
0x4001fea	            0xeb0c	                           jmp 0x4001ff8	      5546	option.c	FUNCTION_25	IF_4
0x4001fec	      0xbb00000000	                              mov ebx, 0	      5523	option.c	FUNCTION_25	IF_1
0x4001ff1	            0xeb05	                           jmp 0x4001ff8	      5523	option.c	FUNCTION_25	IF_1
0x4001ff3	      0xbb00000000	                              mov ebx, 0	      5528	option.c	FUNCTION_25	IF_2
0x4001ff8	          0x4889d8	                            mov rax, rbx	      5549	option.c	FUNCTION_25
0x4001ffb	        0x4883c408	                              add rsp, 8	      5549	option.c	FUNCTION_25
0x4001fff	              0x5b	                                 pop rbx	      5549	option.c	FUNCTION_25
0x4002000	              0x5d	                                 pop rbp	      5549	option.c	FUNCTION_25
0x4002001	              0xc3	                                     ret	      5549	option.c	FUNCTION_25
set_title_defaults	SWITCH,0:functions,0:ELSE,2:FOR,0:IF,4:DO,0:CALL,4:WHILE,0	43
0x400303f	              0x53	                                push rbx	      4287	option.c	FUNCTION_14
0x4003040	      0xbf00000000	                              mov edi, 0	      4296	option.c	FUNCTION_14	CALL_1
0x4003045	      0xe8cdd2ffff	                     call sym.findoption	      4296	option.c	FUNCTION_14	CALL_1
0x400304a	            0x85c0	                           test eax, eax	      4297	option.c	FUNCTION_14	IF_1
0x400304c	            0x7843	                            js 0x4003091	      4297	option.c	FUNCTION_14	IF_1
0x400304e	            0x89c3	                            mov ebx, eax	      4297	option.c	FUNCTION_14	IF_1
0x4003050	            0x4898	                                    cdqe	      4297	option.c	FUNCTION_14	IF_1
0x4003052	        0x48c1e006	                              shl rax, 6	      4297	option.c	FUNCTION_14	IF_1
0x4003056	    0xf68000000000	                      test byte [rax], 1	      4297	option.c	FUNCTION_14	IF_1
0x400305d	            0x7532	                           jne 0x4003091	      4297	option.c	FUNCTION_14	IF_1
0x400305f	      0xb801000000	                              mov eax, 1	      4301	option.c	FUNCTION_14	IF_1	IF_2
0x4003064	    0x833d00000000	               cmp dword [0x0400306b], 0	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400306b	            0x7510	                           jne 0x400307d	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400306d	    0x833d00000000	               cmp dword [0x04003074], 0	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003074	            0x7507	                           jne 0x400307d	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003076	      0xe800000000	                          call 0x400307b	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x400307b	            0x4898	                                    cdqe	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x400307d	          0x4863db	                         movsxd rbx, ebx	      4305	option.c	FUNCTION_14	IF_1
0x4003080	        0x48c1e306	                              shl rbx, 6	      4305	option.c	FUNCTION_14	IF_1
0x4003084	    0x488983000000	                    mov qword [rbx], rax	      4305	option.c	FUNCTION_14	IF_1
0x400308b	    0x890500000000	            mov dword [0x04003091], eax 	      4306	option.c	FUNCTION_14	IF_1
0x4003091	      0xbf00000000	                              mov edi, 0	      4308	option.c	FUNCTION_14	CALL_3
0x4003096	      0xe87cd2ffff	                     call sym.findoption	      4308	option.c	FUNCTION_14	CALL_3
0x400309b	            0x89c3	                            mov ebx, eax	      4308	option.c	FUNCTION_14	CALL_3
0x400309d	            0x85c0	                           test eax, eax	      4309	option.c	FUNCTION_14	IF_3
0x400309f	            0x7841	                            js 0x40030e2	      4309	option.c	FUNCTION_14	IF_3
0x40030a1	            0x4898	                                    cdqe	      4309	option.c	FUNCTION_14	IF_3
0x40030a3	        0x48c1e006	                              shl rax, 6	      4309	option.c	FUNCTION_14	IF_3
0x40030a7	    0xf68000000000	                      test byte [rax], 1	      4309	option.c	FUNCTION_14	IF_3
0x40030ae	            0x7532	                           jne 0x40030e2	      4309	option.c	FUNCTION_14	IF_3
0x40030b0	      0xb801000000	                              mov eax, 1	      4313	option.c	FUNCTION_14	IF_3	IF_4
0x40030b5	    0x833d00000000	               cmp dword [0x040030bc], 0	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40030bc	            0x7510	                           jne 0x40030ce	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40030be	    0x833d00000000	               cmp dword [0x040030c5], 0	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40030c5	            0x7507	                           jne 0x40030ce	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40030c7	      0xe800000000	                          call 0x40030cc	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40030cc	            0x4898	                                    cdqe	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40030ce	          0x4863db	                         movsxd rbx, ebx	      4317	option.c	FUNCTION_14	IF_3
0x40030d1	        0x48c1e306	                              shl rbx, 6	      4317	option.c	FUNCTION_14	IF_3
0x40030d5	    0x488983000000	                    mov qword [rbx], rax	      4317	option.c	FUNCTION_14	IF_3
0x40030dc	    0x890500000000	            mov dword [0x040030e2], eax 	      4318	option.c	FUNCTION_14	IF_3
0x40030e2	              0x5b	                                 pop rbx	      4320	option.c	FUNCTION_14
0x40030e3	              0xc3	                                     ret	      4320	option.c	FUNCTION_14
didset_options	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,20:WHILE,0	75
0x4003394	        0x4883ec08	                              sub rsp, 8	      5557	option.c	FUNCTION_26
0x4003398	      0xe800000000	                          call 0x400339d	      5559	option.c	FUNCTION_26	CALL_1
0x400339d	      0xb901000000	                              mov ecx, 1	      5562	option.c	FUNCTION_26	CALL_2
0x40033a2	      0xba00000000	                              mov edx, 0	      5562	option.c	FUNCTION_26	CALL_2
0x40033a7	      0xbe00000000	                              mov esi, 0	      5562	option.c	FUNCTION_26	CALL_2
0x40033ac	    0x488b3d000000	            mov rdi, qword [0x040033b3] 	      5562	option.c	FUNCTION_26	CALL_2
0x40033b3	      0xe814e7ffff	              call sym.opt_strings_flags	      5562	option.c	FUNCTION_26	CALL_2
0x40033b8	      0xb901000000	                              mov ecx, 1	      5564	option.c	FUNCTION_26	CALL_3
0x40033bd	      0xba00000000	                              mov edx, 0	      5564	option.c	FUNCTION_26	CALL_3
0x40033c2	      0xbe00000000	                              mov esi, 0	      5564	option.c	FUNCTION_26	CALL_3
0x40033c7	    0x488b3d000000	            mov rdi, qword [0x040033ce] 	      5564	option.c	FUNCTION_26	CALL_3
0x40033ce	      0xe8f9e6ffff	              call sym.opt_strings_flags	      5564	option.c	FUNCTION_26	CALL_3
0x40033d3	      0xb901000000	                              mov ecx, 1	      5565	option.c	FUNCTION_26	CALL_4
0x40033d8	      0xba00000000	                              mov edx, 0	      5565	option.c	FUNCTION_26	CALL_4
0x40033dd	      0xbe00000000	                              mov esi, 0	      5565	option.c	FUNCTION_26	CALL_4
0x40033e2	    0x488b3d000000	            mov rdi, qword [0x040033e9] 	      5565	option.c	FUNCTION_26	CALL_4
0x40033e9	      0xe8dee6ffff	              call sym.opt_strings_flags	      5565	option.c	FUNCTION_26	CALL_4
0x40033ee	      0xb901000000	                              mov ecx, 1	      5567	option.c	FUNCTION_26	CALL_5
0x40033f3	      0xba00000000	                              mov edx, 0	      5567	option.c	FUNCTION_26	CALL_5
0x40033f8	      0xbe00000000	                              mov esi, 0	      5567	option.c	FUNCTION_26	CALL_5
0x40033fd	    0x488b3d000000	            mov rdi, qword [0x04003404] 	      5567	option.c	FUNCTION_26	CALL_5
0x4003404	      0xe8c3e6ffff	              call sym.opt_strings_flags	      5567	option.c	FUNCTION_26	CALL_5
0x4003409	      0xb901000000	                              mov ecx, 1	      5568	option.c	FUNCTION_26	CALL_6
0x400340e	      0xba00000000	                              mov edx, 0	      5568	option.c	FUNCTION_26	CALL_6
0x4003413	      0xbe00000000	                              mov esi, 0	      5568	option.c	FUNCTION_26	CALL_6
0x4003418	    0x488b3d000000	            mov rdi, qword [0x0400341f] 	      5568	option.c	FUNCTION_26	CALL_6
0x400341f	      0xe8a8e6ffff	              call sym.opt_strings_flags	      5568	option.c	FUNCTION_26	CALL_6
0x4003424	      0xb901000000	                              mov ecx, 1	      5571	option.c	FUNCTION_26	CALL_7
0x4003429	      0xba00000000	                              mov edx, 0	      5571	option.c	FUNCTION_26	CALL_7
0x400342e	      0xbe00000000	                              mov esi, 0	      5571	option.c	FUNCTION_26	CALL_7
0x4003433	    0x488b3d000000	            mov rdi, qword [0x0400343a] 	      5571	option.c	FUNCTION_26	CALL_7
0x400343a	      0xe88de6ffff	              call sym.opt_strings_flags	      5571	option.c	FUNCTION_26	CALL_7
0x400343f	      0xb901000000	                              mov ecx, 1	      5573	option.c	FUNCTION_26	CALL_8
0x4003444	      0xba00000000	                              mov edx, 0	      5573	option.c	FUNCTION_26	CALL_8
0x4003449	      0xbe00000000	                              mov esi, 0	      5573	option.c	FUNCTION_26	CALL_8
0x400344e	    0x488b3d000000	            mov rdi, qword [0x04003455] 	      5573	option.c	FUNCTION_26	CALL_8
0x4003455	      0xe872e6ffff	              call sym.opt_strings_flags	      5573	option.c	FUNCTION_26	CALL_8
0x400345a	      0xb900000000	                              mov ecx, 0	      5574	option.c	FUNCTION_26	CALL_9
0x400345f	      0xba00000000	                              mov edx, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4003464	      0xbe00000000	                              mov esi, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4003469	    0x488b3d000000	            mov rdi, qword [0x04003470] 	      5574	option.c	FUNCTION_26	CALL_9
0x4003470	      0xe857e6ffff	              call sym.opt_strings_flags	      5574	option.c	FUNCTION_26	CALL_9
0x4003475	      0xb901000000	                              mov ecx, 1	      5576	option.c	FUNCTION_26	CALL_10
0x400347a	      0xba00000000	                              mov edx, 0	      5576	option.c	FUNCTION_26	CALL_10
0x400347f	      0xbe00000000	                              mov esi, 0	      5576	option.c	FUNCTION_26	CALL_10
0x4003484	    0x488b3d000000	            mov rdi, qword [0x0400348b] 	      5576	option.c	FUNCTION_26	CALL_10
0x400348b	      0xe83ce6ffff	              call sym.opt_strings_flags	      5576	option.c	FUNCTION_26	CALL_10
0x4003490	      0xb900000000	                              mov ecx, 0	      5579	option.c	FUNCTION_26	CALL_11
0x4003495	      0xba00000000	                              mov edx, 0	      5579	option.c	FUNCTION_26	CALL_11
0x400349a	      0xbe00000000	                              mov esi, 0	      5579	option.c	FUNCTION_26	CALL_11
0x400349f	    0x488b3d000000	            mov rdi, qword [0x040034a6] 	      5579	option.c	FUNCTION_26	CALL_11
0x40034a6	      0xe821e6ffff	              call sym.opt_strings_flags	      5579	option.c	FUNCTION_26	CALL_11
0x40034ab	      0xe800000000	                          call 0x40034b0	      5582	option.c	FUNCTION_26	CALL_12
0x40034b0	      0xe800000000	                          call 0x40034b5	      5583	option.c	FUNCTION_26	CALL_13
0x40034b5	    0x488b05000000	            mov rax, qword [0x040034bc] 	      5584	option.c	FUNCTION_26	CALL_14
0x40034bc	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5584	option.c	FUNCTION_26	CALL_14
0x40034c0	      0xe8dee4ffff	               call sym.compile_cap_prog	      5584	option.c	FUNCTION_26	CALL_14
0x40034c5	      0xbf01000000	                              mov edi, 1	      5585	option.c	FUNCTION_26	CALL_15
0x40034ca	      0xe853e5ffff	           call sym.did_set_spell_option	      5585	option.c	FUNCTION_26	CALL_15
0x40034cf	      0xb901000000	                              mov ecx, 1	      5588	option.c	FUNCTION_26	CALL_16
0x40034d4	      0xba00000000	                              mov edx, 0	      5588	option.c	FUNCTION_26	CALL_16
0x40034d9	      0xbe00000000	                              mov esi, 0	      5588	option.c	FUNCTION_26	CALL_16
0x40034de	    0x488b3d000000	            mov rdi, qword [0x040034e5] 	      5588	option.c	FUNCTION_26	CALL_16
0x40034e5	      0xe8e2e5ffff	              call sym.opt_strings_flags	      5588	option.c	FUNCTION_26	CALL_16
0x40034ea	      0xb900000000	                              mov ecx, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40034ef	      0xba00000000	                              mov edx, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40034f4	      0xbe00000000	                              mov esi, 0	      5591	option.c	FUNCTION_26	CALL_17
0x40034f9	    0x488b3d000000	            mov rdi, qword [0x04003500] 	      5591	option.c	FUNCTION_26	CALL_17
0x4003500	      0xe8c7e5ffff	              call sym.opt_strings_flags	      5591	option.c	FUNCTION_26	CALL_17
0x4003505	      0xe83efeffff	                    call sym.check_cedit	      5595	option.c	FUNCTION_26	CALL_18
0x400350a	    0x488b3d000000	            mov rdi, qword [0x04003511] 	      5598	option.c	FUNCTION_26	CALL_19
0x4003511	      0xe8c7e8ffff	                   call sym.briopt_check	      5598	option.c	FUNCTION_26	CALL_19
0x4003516	      0xe888cdffff	             call sym.fill_breakat_flags	      5602	option.c	FUNCTION_26	CALL_20
0x400351b	        0x4883c408	                              add rsp, 8	      5605	option.c	FUNCTION_26
0x400351f	              0xc3	                                     ret	      5605	option.c	FUNCTION_26
set_option_scriptID_idx	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,4:DO,0:CALL,0:WHILE,0	32
0x400017b	          0x4863c7	                         movsxd rax, edi	      8104	option.c	FUNCTION_48
0x400017e	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x4000182	    0x8b8000000000	                    mov eax, dword [rax]	      8104	option.c	FUNCTION_48
0x4000188	        0x40f6c606	                             test sil, 6	      8108	option.c	FUNCTION_48	IF_1
0x400018c	            0x7443	                            je 0x40001d1	      8108	option.c	FUNCTION_48	IF_1
0x400018e	        0x40f6c602	                             test sil, 2	      8108	option.c	FUNCTION_48	IF_1
0x4000192	            0x754c	                           jne 0x40001e0	      8108	option.c	FUNCTION_48	IF_1
0x4000194	          0xf6c460	                           test ah, 0x60	      8108	option.c	FUNCTION_48	IF_1
0x4000197	            0x7447	                            je 0x40001e0	      8108	option.c	FUNCTION_48	IF_1
0x4000199	        0x40f6c604	                             test sil, 4	      8110	option.c	FUNCTION_48	IF_2
0x400019d	            0x7450	                            je 0x40001ef	      8110	option.c	FUNCTION_48	IF_2
0x400019f	          0xf6c440	                           test ah, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x40001a2	            0x7414	                            je 0x40001b8	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x40001a4	      0x25ff0f0000	                          and eax, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001a9	    0x488b0d000000	            mov rcx, qword [0x040001b0] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001b0	    0x899481ac1200	  mov dword [rcx + rax*4 + 0x12ac], edx 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001b7	              0xc3	                                     ret	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001b8	          0xf6c420	                           test ah, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001bb	            0x7432	                            je 0x40001ef	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001bd	      0x25ff0f0000	                          and eax, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001c2	    0x488b0d000000	            mov rcx, qword [0x040001c9] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001c9	    0x899481d00200	    mov dword [rcx + rax*4 + 0x2d0], edx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001d0	              0xc3	                                     ret	      8117	option.c	FUNCTION_48
0x40001d1	          0x4863ff	                         movsxd rdi, edi	      8109	option.c	FUNCTION_48	IF_1
0x40001d4	        0x48c1e706	                              shl rdi, 6	      8109	option.c	FUNCTION_48	IF_1
0x40001d8	    0x899700000000	                    mov dword [rdi], edx	      8109	option.c	FUNCTION_48	IF_1
0x40001de	            0xebbf	                           jmp 0x400019f	      8109	option.c	FUNCTION_48	IF_1
0x40001e0	          0x4863ff	                         movsxd rdi, edi	      8109	option.c	FUNCTION_48	IF_1
0x40001e3	        0x48c1e706	                              shl rdi, 6	      8109	option.c	FUNCTION_48	IF_1
0x40001e7	    0x899700000000	                    mov dword [rdi], edx	      8109	option.c	FUNCTION_48	IF_1
0x40001ed	            0xebaa	                           jmp 0x4000199	      8109	option.c	FUNCTION_48	IF_1
0x40001ef	            0xf3c3	                                     ret	      8109	option.c	FUNCTION_48	IF_1
set_number_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	10
0x4003023	              0x53	                                push rbx	      3907	option.c	FUNCTION_6
0x4003024	          0x4889f3	                            mov rbx, rsi	      3907	option.c	FUNCTION_6
0x4003027	      0xe8ebd2ffff	                     call sym.findoption	      3910	option.c	FUNCTION_6	CALL_1
0x400302c	            0x85c0	                           test eax, eax	      3911	option.c	FUNCTION_6	IF_1
0x400302e	            0x780d	                            js 0x400303d	      3911	option.c	FUNCTION_6	IF_1
0x4003030	            0x4898	                                    cdqe	      3912	option.c	FUNCTION_6	IF_1
0x4003032	        0x48c1e006	                              shl rax, 6	      3912	option.c	FUNCTION_6	IF_1
0x4003036	    0x488998000000	                    mov qword [rax], rbx	      3912	option.c	FUNCTION_6	IF_1
0x400303d	              0x5b	                                 pop rbx	      3913	option.c	FUNCTION_6
0x400303e	              0xc3	                                     ret	      3913	option.c	FUNCTION_6
reset_modifiable	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	13
0x4005a53	        0x4883ec08	                              sub rsp, 8	     11301	option.c	FUNCTION_85
0x4005a57	    0x488b05000000	            mov rax, qword [0x04005a5e] 	     11304	option.c	FUNCTION_85
0x4005a5e	    0xc78040150000	            mov dword [rax + 0x1540], 0 	     11304	option.c	FUNCTION_85
0x4005a68	    0xc70500000000	               mov dword [0x04005a72], 0	     11305	option.c	FUNCTION_85
0x4005a72	      0xbf00000000	                              mov edi, 0	     11306	option.c	FUNCTION_85	CALL_1
0x4005a77	      0xe89ba8ffff	                     call sym.findoption	     11306	option.c	FUNCTION_85	CALL_1
0x4005a7c	            0x85c0	                           test eax, eax	     11307	option.c	FUNCTION_85	IF_1
0x4005a7e	            0x7811	                            js 0x4005a91	     11307	option.c	FUNCTION_85	IF_1
0x4005a80	            0x4898	                                    cdqe	     11308	option.c	FUNCTION_85	IF_1
0x4005a82	        0x48c1e006	                              shl rax, 6	     11308	option.c	FUNCTION_85	IF_1
0x4005a86	    0x48c780000000	                      mov qword [rax], 0	     11308	option.c	FUNCTION_85	IF_1
0x4005a91	        0x4883c408	                              add rsp, 8	     11309	option.c	FUNCTION_85
0x4005a95	              0xc3	                                     ret	     11309	option.c	FUNCTION_85
buf_copy_options	SWITCH,1:functions,0:ELSE,2:FOR,0:IF,10:DO,0:CALL,37:WHILE,0	327
0x4005346	            0x4155	                                push r13	     11046	option.c	FUNCTION_84
0x4005348	            0x4154	                                push r12	     11046	option.c	FUNCTION_84
0x400534a	              0x55	                                push rbp	     11046	option.c	FUNCTION_84
0x400534b	              0x53	                                push rbx	     11046	option.c	FUNCTION_84
0x400534c	        0x4883ec08	                              sub rsp, 8	     11046	option.c	FUNCTION_84
0x4005350	          0x4889fb	                            mov rbx, rdi	     11046	option.c	FUNCTION_84
0x4005353	    0x488b3d000000	            mov rdi, qword [0x0400535a] 	     11056	option.c	FUNCTION_84	IF_1
0x400535a	          0x4885ff	                           test rdi, rdi	     11056	option.c	FUNCTION_84	IF_1
0x400535d	     0xf848f060000	                            je 0x40059f2	     11056	option.c	FUNCTION_84	IF_1
0x4005363	            0x89f5	                            mov ebp, esi	     11056	option.c	FUNCTION_84	IF_1
0x4005365	      0xbe53000000	                           mov esi, 0x53	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400536a	      0xe800000000	                          call 0x400536f	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400536f	          0x4885c0	                           test rax, rax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x4005372	            0x7411	                            je 0x4005385	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x4005374	    0x41bc01000000	                             mov r12d, 1	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400537a	        0x40f6c501	                             test bpl, 1	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400537e	            0x7548	                           jne 0x40053c8	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x4005380	      0xe977060000	                           jmp 0x40059fc	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x4005385	    0x83bba8120000	             cmp dword [rbx + 0x12a8], 0	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400538c	            0x752a	                           jne 0x40053b8	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400538e	        0x40f6c501	                             test bpl, 1	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x4005392	     0xf859c060000	                           jne 0x4005a34	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x4005398	      0xbe73000000	                           mov esi, 0x73	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400539d	    0x488b3d000000	            mov rdi, qword [0x040053a4] 	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40053a4	      0xe800000000	                          call 0x40053a9	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x40053a9	          0x4885c0	                           test rax, rax	     11047	option.c	FUNCTION_84
0x40053ac	        0x410f94c4	                               sete r12b	     11047	option.c	FUNCTION_84
0x40053b0	        0x450fb6e4	                        movzx r12d, r12b	     11047	option.c	FUNCTION_84
0x40053b4	            0x7508	                           jne 0x40053be	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x40053b6	            0xeb10	                           jmp 0x40053c8	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x40053b8	    0x41bc00000000	                             mov r12d, 0	     11074	option.c	FUNCTION_84	IF_1	IF_2
0x40053be	        0x40f6c502	                             test bpl, 2	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x40053c2	     0xf8478060000	                            je 0x4005a40	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x40053c8	        0x40f6c504	                             test bpl, 4	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053cc	            0x7411	                            je 0x40053df	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053ce	            0xeb06	                           jmp 0x40053d6	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053d0	    0x41bc01000000	                             mov r12d, 1	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053d6	    0x83bb58170000	             cmp dword [rbx + 0x1758], 0	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x40053dd	            0x751a	                           jne 0x40053f9	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x40053df	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053e5	            0x85c0	                           test eax, eax	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053e7	        0x400f95c5	                               setne bpl	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053eb	        0x400fb6ed	                          movzx ebp, bpl	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053ef	    0x41bd00000000	                             mov r13d, 0	     11048	option.c	FUNCTION_84
0x40053f5	            0x7419	                            je 0x4005410	     11083	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x40053f7	            0xeb05	                           jmp 0x40053fe	     11083	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x40053f9	      0xbd01000000	                              mov ebp, 1	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x40053fe	    0x4c8babb81400	          mov r13, qword [rbx + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x4005405	    0x48c783b81400	            mov qword [rbx + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x4005410	    0x83bba8120000	             cmp dword [rbx + 0x12a8], 0	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x4005417	     0xf85c6000000	                           jne 0x40054e3	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400541d	      0xbe01000000	                              mov esi, 1	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x4005422	          0x4889df	                            mov rdi, rbx	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x4005425	      0xe800000000	                          call 0x400542a	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400542a	    0xc78360150000	            mov dword [rbx + 0x1560], 0 	     11095	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x4005434	    0x8b0500000000	            mov eax, dword [0x0400543a] 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400543a	    0x8983b0150000	          mov dword [rbx + 0x15b0], eax 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x4005440	    0x488b3d000000	            mov rdi, qword [0x04005447] 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x4005447	      0xe800000000	                          call 0x400544c	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400544c	    0x488983881400	          mov qword [rbx + 0x1488], rax 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x4005453	    0x488b05000000	            mov rax, qword [0x0400545a] 	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400545a	           0xfb600	                   movzx eax, byte [rax]	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400545d	            0x3c6d	                            cmp al, 0x6d	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400545f	            0x740a	                            je 0x400546b	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x4005461	            0x3c75	                            cmp al, 0x75	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x4005463	            0x742c	                            je 0x4005491	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x4005465	            0x3c64	                            cmp al, 0x64	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x4005467	            0x753b	                           jne 0x40054a4	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x4005469	            0xeb13	                           jmp 0x400547e	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400546b	      0xbf00000000	                              mov edi, 0	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x4005470	      0xe800000000	                          call 0x4005475	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x4005475	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400547c	            0xeb39	                           jmp 0x40054b7	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400547e	      0xbf00000000	                              mov edi, 0	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x4005483	      0xe800000000	                          call 0x4005488	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x4005488	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400548f	            0xeb26	                           jmp 0x40054b7	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x4005491	      0xbf00000000	                              mov edi, 0	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x4005496	      0xe800000000	                          call 0x400549b	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400549b	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x40054a2	            0xeb13	                           jmp 0x40054b7	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x40054a4	    0x488b3d000000	            mov rdi, qword [0x040054ab] 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x40054ab	      0xe800000000	                          call 0x40054b0	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x40054b0	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x40054b7	    0x488b83901400	          mov rax, qword [rbx + 0x1490] 	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x40054be	          0x4885c0	                           test rax, rax	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x40054c1	            0x7409	                            je 0x40054cc	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x40054c3	           0xfb600	                   movzx eax, byte [rax]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x40054c6	    0x898304170000	          mov dword [rbx + 0x1704], eax 	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x40054cc	    0x488b05000000	            mov rax, qword [0x040054d3] 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x40054d3	    0x488983101400	          mov qword [rbx + 0x1410], rax 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x40054da	    0x488983181400	          mov qword [rbx + 0x1418], rax 	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x40054e1	            0xeb0d	                           jmp 0x40054f0	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x40054e3	      0xbe00000000	                              mov esi, 0	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x40054e8	          0x4889df	                            mov rdi, rbx	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x40054eb	      0xe800000000	                          call 0x40054f0	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x40054f0	    0x8b0500000000	            mov eax, dword [0x040054f6] 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x40054f6	    0x8983ec130000	          mov dword [rbx + 0x13ec], eax 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x40054fc	    0x8b0500000000	            mov eax, dword [0x04005502] 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x4005502	    0x8983f0130000	          mov dword [rbx + 0x13f0], eax 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x4005508	    0x488b05000000	            mov rax, qword [0x0400550f] 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400550f	    0x488983681500	          mov qword [rbx + 0x1568], rax 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x4005516	    0x488b05000000	            mov rax, qword [0x0400551d] 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400551d	    0x488983b81500	          mov qword [rbx + 0x15b8], rax 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x4005524	    0x488b05000000	            mov rax, qword [0x0400552b] 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400552b	    0x488983c81500	          mov qword [rbx + 0x15c8], rax 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x4005532	    0x488b05000000	            mov rax, qword [0x04005539] 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x4005539	    0x488983c01500	          mov qword [rbx + 0x15c0], rax 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x4005540	    0x488b05000000	            mov rax, qword [0x04005547] 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x4005547	    0x488983d01500	          mov qword [rbx + 0x15d0], rax 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400554e	    0x488b05000000	            mov rax, qword [0x04005555] 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x4005555	    0x488983e01500	          mov qword [rbx + 0x15e0], rax 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400555c	    0x488b05000000	            mov rax, qword [0x04005563] 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x4005563	    0x488983d81500	          mov qword [rbx + 0x15d8], rax 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400556a	    0x8b0500000000	            mov eax, dword [0x04005570] 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x4005570	    0x898308140000	          mov dword [rbx + 0x1408], eax 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x4005576	    0x8b0500000000	            mov eax, dword [0x0400557c] 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400557c	    0x89830c140000	          mov dword [rbx + 0x140c], eax 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x4005582	    0x8b0500000000	            mov eax, dword [0x04005588] 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x4005588	    0x898374140000	          mov dword [rbx + 0x1474], eax 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400558e	    0x8b0500000000	            mov eax, dword [0x04005594] 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x4005594	    0x898378140000	          mov dword [rbx + 0x1478], eax 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400559a	    0x8b0500000000	            mov eax, dword [0x040055a0] 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x40055a0	    0x89837c140000	          mov dword [rbx + 0x147c], eax 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x40055a6	    0x8b0500000000	            mov eax, dword [0x040055ac] 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x40055ac	    0x898380140000	          mov dword [rbx + 0x1480], eax 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x40055b2	    0x8b0500000000	            mov eax, dword [0x040055b8] 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x40055b8	    0x898338150000	          mov dword [rbx + 0x1538], eax 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x40055be	    0x8b0500000000	            mov eax, dword [0x040055c4] 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x40055c4	    0x89833c150000	          mov dword [rbx + 0x153c], eax 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x40055ca	    0x8b0500000000	            mov eax, dword [0x040055d0] 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x40055d0	    0x8983b0140000	          mov dword [rbx + 0x14b0], eax 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x40055d6	    0x833d00000000	               cmp dword [0x040055dd], 0	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x40055dd	      0xb800000000	                              mov eax, 0	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x40055e2	     0xf4405000000	           cmove eax, dword [0x040055e9]	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x40055e9	    0x898390150000	          mov dword [rbx + 0x1590], eax 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x40055ef	    0x488b3d000000	            mov rdi, qword [0x040055f6] 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x40055f6	      0xe800000000	                          call 0x40055fb	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x40055fb	    0x488983581400	          mov qword [rbx + 0x1458], rax 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x4005602	    0x488b3d000000	            mov rdi, qword [0x04005609] 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x4005609	      0xe800000000	                          call 0x400560e	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400560e	    0x488983601400	          mov qword [rbx + 0x1460], rax 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x4005615	    0x488b3d000000	            mov rdi, qword [0x0400561c] 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400561c	      0xe800000000	                          call 0x4005621	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x4005621	    0x488983681400	          mov qword [rbx + 0x1468], rax 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x4005628	    0x488b05000000	            mov rax, qword [0x0400562f] 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400562f	    0x488983781500	          mov qword [rbx + 0x1578], rax 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x4005636	    0x488b05000000	            mov rax, qword [0x0400563d] 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400563d	    0x488983801500	          mov qword [rbx + 0x1580], rax 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x4005644	    0x8b0500000000	            mov eax, dword [0x0400564a] 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400564a	    0x898370150000	          mov dword [rbx + 0x1570], eax 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x4005650	    0x488b3d000000	            mov rdi, qword [0x04005657] 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x4005657	      0xe800000000	                          call 0x400565c	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400565c	    0x488983481400	          mov qword [rbx + 0x1448], rax 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x4005663	    0x488b3d000000	            mov rdi, qword [0x0400566a] 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400566a	      0xe800000000	                          call 0x400566f	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400566f	    0x488983501400	          mov qword [rbx + 0x1450], rax 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x4005676	    0x488b3d000000	            mov rdi, qword [0x0400567d] 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400567d	      0xe800000000	                          call 0x4005682	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x4005682	    0x488983a01400	          mov qword [rbx + 0x14a0], rax 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x4005689	    0x488b3d000000	            mov rdi, qword [0x04005690] 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x4005690	      0xe800000000	                          call 0x4005695	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x4005695	    0x488983a81400	          mov qword [rbx + 0x14a8], rax 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400569c	    0x488b3d000000	            mov rdi, qword [0x040056a3] 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x40056a3	      0xe800000000	                          call 0x40056a8	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x40056a8	    0x488983481500	          mov qword [rbx + 0x1548], rax 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x40056af	    0x488b3d000000	            mov rdi, qword [0x040056b6] 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x40056b6	      0xe800000000	                          call 0x40056bb	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x40056bb	    0x488983301500	          mov qword [rbx + 0x1530], rax 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x40056c2	    0x8b0500000000	            mov eax, dword [0x040056c8] 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x40056c8	    0x898374150000	          mov dword [rbx + 0x1574], eax 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x40056ce	    0x8b0500000000	            mov eax, dword [0x040056d4] 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x40056d4	    0x898304140000	          mov dword [rbx + 0x1404], eax 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x40056da	    0x8b0500000000	            mov eax, dword [0x040056e0] 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x40056e0	    0x898328140000	          mov dword [rbx + 0x1428], eax 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x40056e6	    0x488b3d000000	            mov rdi, qword [0x040056ed] 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x40056ed	      0xe800000000	                          call 0x40056f2	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x40056f2	    0x488983381400	          mov qword [rbx + 0x1438], rax 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x40056f9	    0x488b3d000000	            mov rdi, qword [0x04005700] 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x4005700	      0xe800000000	                          call 0x4005705	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x4005705	    0x488983301400	          mov qword [rbx + 0x1430], rax 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400570c	    0x488b05000000	            mov rax, qword [0x04005713] 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x4005713	    0x488983981400	          mov qword [rbx + 0x1498], rax 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400571a	    0x8b0500000000	            mov eax, dword [0x04005720] 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x4005720	    0x898350150000	          mov dword [rbx + 0x1550], eax 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x4005726	    0x488b3d000000	            mov rdi, qword [0x0400572d] 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400572d	      0xe800000000	                          call 0x4005732	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x4005732	    0x488983401400	          mov qword [rbx + 0x1440], rax 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x4005739	    0x8b0500000000	            mov eax, dword [0x0400573f] 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400573f	    0x898320150000	          mov dword [rbx + 0x1520], eax 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x4005745	    0x488b05000000	            mov rax, qword [0x0400574c] 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400574c	    0x488983a01500	          mov qword [rbx + 0x15a0], rax 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x4005753	    0x488b15000000	            mov rdx, qword [0x0400575a] 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400575a	    0x488993981500	          mov qword [rbx + 0x1598], rdx 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x4005761	    0x488983181c00	          mov qword [rbx + 0x1c18], rax 	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x4005768	    0x488b3d000000	            mov rdi, qword [0x0400576f] 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400576f	      0xe800000000	                          call 0x4005774	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x4005774	    0x488983d01b00	          mov qword [rbx + 0x1bd0], rax 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400577b	    0x488dbb681700	                 lea rdi, [rbx + 0x1768]	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x4005782	      0xe81cc2ffff	               call sym.compile_cap_prog	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x4005787	    0x488b3d000000	            mov rdi, qword [0x0400578e] 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400578e	      0xe800000000	                          call 0x4005793	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x4005793	    0x488983e01b00	          mov qword [rbx + 0x1be0], rax 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400579a	    0x488b3d000000	            mov rdi, qword [0x040057a1] 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x40057a1	      0xe800000000	                          call 0x40057a6	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x40057a6	    0x488983e81b00	          mov qword [rbx + 0x1be8], rax 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x40057ad	    0x488b3d000000	            mov rdi, qword [0x040057b4] 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x40057b4	      0xe800000000	                          call 0x40057b9	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x40057b9	    0x488983e01400	          mov qword [rbx + 0x14e0], rax 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x40057c0	    0x488b3d000000	            mov rdi, qword [0x040057c7] 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x40057c7	      0xe800000000	                          call 0x40057cc	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x40057cc	    0x488983f01400	          mov qword [rbx + 0x14f0], rax 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x40057d3	    0x488b05000000	            mov rax, qword [0x040057da] 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x40057da	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x40057e1	    0x488b3d000000	            mov rdi, qword [0x040057e8] 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x40057e8	      0xe800000000	                          call 0x40057ed	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x40057ed	    0x488983001500	          mov qword [rbx + 0x1500], rax 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x40057f4	    0x488b3d000000	            mov rdi, qword [0x040057fb] 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x40057fb	      0xe800000000	                          call 0x4005800	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x4005800	    0x488983101500	          mov qword [rbx + 0x1510], rax 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x4005807	    0x488b3d000000	            mov rdi, qword [0x0400580e] 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400580e	      0xe800000000	                          call 0x4005813	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x4005813	    0x488983881500	          mov qword [rbx + 0x1588], rax 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400581a	    0x488b3d000000	            mov rdi, qword [0x04005821] 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x4005821	      0xe800000000	                          call 0x4005826	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x4005826	    0x488983e81500	          mov qword [rbx + 0x15e8], rax 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400582d	    0x66838b881200	               or word [rbx + 0x1288], 1	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x4005835	    0x488b05000000	            mov rax, qword [0x0400583c] 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400583c	    0x488983601600	          mov qword [rbx + 0x1660], rax 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x4005843	    0x488b05000000	            mov rax, qword [0x0400584a] 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400584a	    0x488983781200	          mov qword [rbx + 0x1278], rax 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x4005851	    0x488b05000000	            mov rax, qword [0x04005858] 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x4005858	    0x488983801200	          mov qword [rbx + 0x1280], rax 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400585f	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     11218	option.c	FUNCTION_84	IF_1	IF_3
0x4005869	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     11219	option.c	FUNCTION_84	IF_1	IF_3
0x4005874	    0x488b05000000	            mov rax, qword [0x0400587b] 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400587b	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x4005882	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     11221	option.c	FUNCTION_84	IF_1	IF_3
0x400588c	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x4005893	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400589a	    0x488983001600	          mov qword [rbx + 0x1600], rax 	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x40058a1	    0x488983081600	          mov qword [rbx + 0x1608], rax 	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x40058a8	    0x488983181500	          mov qword [rbx + 0x1518], rax 	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x40058af	    0x488983101600	          mov qword [rbx + 0x1610], rax 	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x40058b6	    0x488983201600	          mov qword [rbx + 0x1620], rax 	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x40058bd	    0x488983281600	          mov qword [rbx + 0x1628], rax 	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x40058c4	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     11232	option.c	FUNCTION_84	IF_1	IF_3
0x40058ce	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x40058d5	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x40058dc	    0x488b3d000000	            mov rdi, qword [0x040058e3] 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x40058e3	      0xe800000000	                          call 0x40058e8	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x40058e8	    0x488983d01400	          mov qword [rbx + 0x14d0], rax 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x40058ef	    0x488b05000000	            mov rax, qword [0x040058f6] 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x40058f6	    0x488983381600	          mov qword [rbx + 0x1638], rax 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x40058fd	    0x488983401600	          mov qword [rbx + 0x1640], rax 	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x4005904	    0x488b3d000000	            mov rdi, qword [0x0400590b] 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400590b	      0xe800000000	                          call 0x4005910	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x4005910	    0x488983581500	          mov qword [rbx + 0x1558], rax 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x4005917	    0x488b05000000	            mov rax, qword [0x0400591e] 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400591e	    0x488983381700	          mov qword [rbx + 0x1738], rax 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x4005925	    0x488983481700	          mov qword [rbx + 0x1748], rax 	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400592c	    0x8b1500000000	            mov edx, dword [0x04005932] 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x4005932	    0x899350160000	          mov dword [rbx + 0x1650], edx 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x4005938	    0x488983581600	          mov qword [rbx + 0x1658], rax 	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400593f	    0x488983281500	          mov qword [rbx + 0x1528], rax 	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x4005946	            0x85ed	                           test ebp, ebp	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x4005948	            0x7416	                            je 0x4005960	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400594a	    0x4c89abb81400	          mov qword [rbx + 0x14b8], r13 	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x4005951	      0xbd00000000	                              mov ebp, 0	     11050	option.c	FUNCTION_84
0x4005956	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x4005959	            0x755e	                           jne 0x40059b9	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400595b	      0xe988000000	                           jmp 0x40059e8	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x4005960	    0x488b3d000000	            mov rdi, qword [0x04005967] 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x4005967	      0xe800000000	                          call 0x400596c	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400596c	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x4005973	    0x488b05000000	            mov rax, qword [0x0400597a] 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400597a	    0x488983a81500	          mov qword [rbx + 0x15a8], rax 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x4005981	    0xc78358170000	            mov dword [rbx + 0x1758], 0 	     11276	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400598b	    0x488b83181400	          mov rax, qword [rbx + 0x1418] 	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x4005992	          0x803868	                    cmp byte [rax], 0x68	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x4005995	            0x750c	                           jne 0x40059a3	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x4005997	    0x488dbb181400	                 lea rdi, [rbx + 0x1418]	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x400599e	      0xe800000000	                          call 0x40059a3	     11278	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_35
0x40059a3	    0x8b0500000000	            mov eax, dword [0x040059a9] 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x40059a9	    0x898340150000	          mov dword [rbx + 0x1540], eax 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x40059af	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x40059b2	            0x742a	                            je 0x40059de	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x40059b4	      0xbd01000000	                              mov ebp, 1	     11274	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x40059b9	    0xc783a8120000	            mov dword [rbx + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x40059c3	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x40059c6	      0xe800000000	                          call 0x40059cb	     11291	option.c	FUNCTION_84	CALL_36
0x40059cb	            0x85ed	                           test ebp, ebp	     11292	option.c	FUNCTION_84	IF_10
0x40059cd	            0x7479	                            je 0x4005a48	     11292	option.c	FUNCTION_84	IF_10
0x40059cf	      0xbe00000000	                              mov esi, 0	     11293	option.c	FUNCTION_84	CALL_37
0x40059d4	          0x4889df	                            mov rdi, rbx	     11293	option.c	FUNCTION_84	CALL_37
0x40059d7	      0xe800000000	                          call 0x40059dc	     11293	option.c	FUNCTION_84	CALL_37
0x40059dc	            0xeb6a	                           jmp 0x4005a48	     11294	option.c	FUNCTION_84
0x40059de	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x40059e1	      0xe800000000	                          call 0x40059e6	     11291	option.c	FUNCTION_84	CALL_36
0x40059e6	            0xebe7	                           jmp 0x40059cf	     11291	option.c	FUNCTION_84	CALL_36
0x40059e8	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x40059eb	      0xe800000000	                          call 0x40059f0	     11291	option.c	FUNCTION_84	CALL_36
0x40059f0	            0xeb56	                           jmp 0x4005a48	     11291	option.c	FUNCTION_84	CALL_36
0x40059f2	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x40059f5	      0xe800000000	                          call 0x40059fa	     11291	option.c	FUNCTION_84	CALL_36
0x40059fa	            0xeb4c	                           jmp 0x4005a48	     11291	option.c	FUNCTION_84	CALL_36
0x40059fc	    0x41bc00000000	                             mov r12d, 0	     11074	option.c	FUNCTION_84	IF_1	IF_2
0x4005a02	    0x83bba8120000	             cmp dword [rbx + 0x12a8], 0	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x4005a09	     0xf85aff9ffff	                           jne 0x40053be	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x4005a0f	      0xe984f9ffff	                           jmp 0x4005398	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x4005a14	    0x83bba8120000	             cmp dword [rbx + 0x12a8], 0	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a1b	        0x400f95c5	                               setne bpl	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a1f	        0x400fb6ed	                          movzx ebp, bpl	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a23	    0x41bc01000000	                             mov r12d, 1	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a29	    0x41bd00000000	                             mov r13d, 0	     11048	option.c	FUNCTION_84
0x4005a2f	      0xe9dcf9ffff	                           jmp 0x4005410	     11048	option.c	FUNCTION_84
0x4005a34	        0x40f6c504	                             test bpl, 4	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a38	     0xf8592f9ffff	                           jne 0x40053d0	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a3e	            0xebd4	                           jmp 0x4005a14	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x4005a40	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x4005a43	      0xe800000000	                          call 0x4005a48	     11291	option.c	FUNCTION_84	CALL_36
0x4005a48	        0x4883c408	                              add rsp, 8	     11294	option.c	FUNCTION_84
0x4005a4c	              0x5b	                                 pop rbx	     11294	option.c	FUNCTION_84
0x4005a4d	              0x5d	                                 pop rbp	     11294	option.c	FUNCTION_84
0x4005a4e	            0x415c	                                 pop r12	     11294	option.c	FUNCTION_84
0x4005a50	            0x415d	                                 pop r13	     11294	option.c	FUNCTION_84
0x4005a52	              0xc3	                                     ret	     11294	option.c	FUNCTION_84
check_cedit	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,2:DO,0:CALL,2:WHILE,0	21
0x4003348	    0x488b3d000000	            mov rdi, qword [0x0400334f] 	      5356	option.c	FUNCTION_20	IF_1
0x400334f	          0x803f00	                       cmp byte [rdi], 0	      5356	option.c	FUNCTION_20	IF_1
0x4003352	            0x7513	                           jne 0x4003367	      5356	option.c	FUNCTION_20	IF_1
0x4003354	    0xc70500000000	     mov dword [0x0400335e], 0xffffffff 	      5357	option.c	FUNCTION_20	IF_1
0x400335e	      0xba00000000	                              mov edx, 0	      5365	option.c	FUNCTION_20
0x4003363	          0x4889d0	                            mov rax, rdx	      5366	option.c	FUNCTION_20
0x4003366	              0xc3	                                     ret	      5366	option.c	FUNCTION_20
0x4003367	              0x53	                                push rbx	      5353	option.c	FUNCTION_20
0x4003368	      0xbe00000000	                              mov esi, 0	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x400336d	      0xe800000000	                          call 0x4003372	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003372	            0x89c3	                            mov ebx, eax	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003374	            0x89c7	                            mov edi, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003376	      0xe800000000	                          call 0x400337b	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400337b	      0xba00000000	                              mov edx, 0	      5362	option.c	FUNCTION_20	ELSE_1	IF_2
0x4003380	            0x85c0	                           test eax, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003382	            0x750b	                           jne 0x400338f	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003384	    0x891d00000000	            mov dword [0x0400338a], ebx 	      5363	option.c	FUNCTION_20	ELSE_1
0x400338a	      0xba00000000	                              mov edx, 0	      5365	option.c	FUNCTION_20
0x400338f	          0x4889d0	                            mov rax, rdx	      5366	option.c	FUNCTION_20
0x4003392	              0x5b	                                 pop rbx	      5366	option.c	FUNCTION_20
0x4003393	              0xc3	                                     ret	      5366	option.c	FUNCTION_20
get_encoding_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,1:WHILE,0	12
0x40046d6	        0x4883ec08	                              sub rsp, 8	      9817	option.c	FUNCTION_59
0x40046da	      0xbf00000000	                              mov edi, 0	      9820	option.c	FUNCTION_59	CALL_1
0x40046df	      0xe833bcffff	                     call sym.findoption	      9820	option.c	FUNCTION_59	CALL_1
0x40046e4	            0x85c0	                           test eax, eax	      9821	option.c	FUNCTION_59	IF_1
0x40046e6	            0x780f	                            js 0x40046f7	      9821	option.c	FUNCTION_59	IF_1
0x40046e8	            0x4898	                                    cdqe	      9822	option.c	FUNCTION_59	IF_1
0x40046ea	        0x48c1e006	                              shl rax, 6	      9822	option.c	FUNCTION_59	IF_1
0x40046ee	    0x488b80000000	                    mov rax, qword [rax]	      9822	option.c	FUNCTION_59	IF_1
0x40046f5	            0xeb05	                           jmp 0x40046fc	      9822	option.c	FUNCTION_59	IF_1
0x40046f7	      0xb800000000	                              mov eax, 0	      9823	option.c	FUNCTION_59
0x40046fc	        0x4883c408	                              add rsp, 8	      9824	option.c	FUNCTION_59
0x4004700	              0xc3	                                     ret	      9824	option.c	FUNCTION_59
ExpandSettings	SWITCH,0:functions,0:ELSE,9:FOR,5:IF,24:DO,0:CALL,19:WHILE,0	289
0x4009647	            0x4157	                                push r15	     11547	option.c	FUNCTION_89
0x4009649	            0x4156	                                push r14	     11547	option.c	FUNCTION_89
0x400964b	            0x4155	                                push r13	     11547	option.c	FUNCTION_89
0x400964d	            0x4154	                                push r12	     11547	option.c	FUNCTION_89
0x400964f	              0x55	                                push rbp	     11547	option.c	FUNCTION_89
0x4009650	              0x53	                                push rbx	     11547	option.c	FUNCTION_89
0x4009651	        0x4883ec78	                           sub rsp, 0x78	     11547	option.c	FUNCTION_89
0x4009655	          0x4989fe	                            mov r14, rdi	     11547	option.c	FUNCTION_89
0x4009658	        0x48893424	                    mov qword [rsp], rsi	     11547	option.c	FUNCTION_89
0x400965c	      0x4889542420	             mov qword [rsp + 0x20], rdx	     11547	option.c	FUNCTION_89
0x4009661	      0x48894c2410	             mov qword [rsp + 0x10], rcx	     11547	option.c	FUNCTION_89
0x4009666	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	     11547	option.c	FUNCTION_89
0x400966f	      0x48894c2468	             mov qword [rsp + 0x68], rcx	     11547	option.c	FUNCTION_89
0x4009674	            0x31c9	                            xor ecx, ecx	     11547	option.c	FUNCTION_89
0x4009676	    0x8b86a8000000	            mov eax, dword [rsi + 0xa8] 	     11558	option.c	FUNCTION_89
0x400967c	        0x8944241c	             mov dword [rsp + 0x1c], eax	     11558	option.c	FUNCTION_89
0x4009680	    0xc74424180000	               mov dword [rsp + 0x18], 0	     11558	option.c	FUNCTION_89
0x4009688	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     11552	option.c	FUNCTION_89
0x4009690	    0xc74424300000	               mov dword [rsp + 0x30], 0	     11549	option.c	FUNCTION_89
0x4009698	    0x41bf00000000	                             mov r15d, 0	     11548	option.c	FUNCTION_89
0x400969e	      0x488d442441	                   lea rax, [rsp + 0x41]	       110	string3.h	FUNCTION_143	CALL_3
0x40096a3	      0x4889442428	             mov qword [rsp + 0x28], rax	       110	string3.h	FUNCTION_143	CALL_3
0x40096a8	            0xeb05	                           jmp 0x40096af	       110	string3.h	FUNCTION_143	CALL_3
0x40096aa	      0x8344241801	               add dword [rsp + 0x18], 1	       110	string3.h	FUNCTION_143	CALL_3
0x40096af	        0x488b0424	                    mov rax, qword [rsp]	     11566	option.c	FUNCTION_89	FOR_1
0x40096b3	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	     11566	option.c	FUNCTION_89	FOR_1
0x40096b7	    0x8988a8000000	             mov dword [rax + 0xa8], ecx	     11566	option.c	FUNCTION_89	FOR_1
0x40096bd	      0xbb00000000	                              mov ebx, 0	     11566	option.c	FUNCTION_89	FOR_1
0x40096c2	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	     11566	option.c	FUNCTION_89	FOR_1
0x40096c7	        0x41833e05	                      cmp dword [r14], 5	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x40096cb	            0x751b	                           jne 0x40096e8	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x40096cd	      0xe9c8030000	                           jmp 0x4009a9a	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x40096d2	      0x44896c240c	             mov dword [rsp + 0xc], r13d	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x40096d7	    0x488b2d000000	            mov rbp, qword [0x040096de] 	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40096de	          0x4885ed	                           test rbp, rbp	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40096e1	            0x755b	                           jne 0x400973e	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40096e3	      0xe963010000	                           jmp 0x400984b	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x40096e8	          0x488b2b	                    mov rbp, qword [rbx]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096eb	      0xba00000000	                              mov edx, 0	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096f0	          0x4889ee	                            mov rsi, rbp	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096f3	        0x488b3c24	                    mov rdi, qword [rsp]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096f7	      0xe800000000	                          call 0x40096fc	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096fc	            0x85c0	                           test eax, eax	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x40096fe	            0x742f	                            je 0x400972f	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4009700	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4009705	            0x7506	                           jne 0x400970d	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4009707	        0x4183c701	                             add r15d, 1	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400970b	            0xeb22	                           jmp 0x400972f	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400970d	        0x458d6501	                     lea r12d, [r13 + 1]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009711	          0x4d63ed	                        movsxd r13, r13d	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009714	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009719	          0x488b00	                    mov rax, qword [rax]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400971c	        0x4e8d2ce8	                  lea r13, [rax + r13*8]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009720	          0x4889ef	                            mov rdi, rbp	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009723	      0xe800000000	                          call 0x4009728	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009728	        0x49894500	                    mov qword [r13], rax	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400972c	          0x4589e5	                          mov r13d, r12d	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400972f	        0x4883c308	                              add rbx, 8	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x4009733	    0x4881fb000000	                              cmp rbx, 0	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400973a	            0x75ac	                           jne 0x40096e8	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400973c	            0xeb94	                           jmp 0x40096d2	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400973e	      0xbb00000000	                              mov ebx, 0	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x4009743	          0x4989dc	                            mov r12, rbx	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x4009746	      0x48837b1800	               cmp qword [rbx + 0x18], 0	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400974b	     0xf84ea000000	                            je 0x400983b	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x4009751	        0x41833e05	                      cmp dword [r14], 5	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x4009755	            0x750a	                           jne 0x4009761	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x4009757	        0xf6431001	               test byte [rbx + 0x10], 1	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400975b	     0xf84da000000	                            je 0x400983b	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x4009761	          0x4c89e7	                            mov rdi, r12	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x4009764	      0xe8886affff	                   call sym.istermoption	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x4009769	          0x4189c5	                           mov r13d, eax	     11587	option.c	FUNCTION_89	FOR_1	FOR_3	CALL_3
0x400976c	            0x85c0	                           test eax, eax	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400976e	            0x7409	                            je 0x4009779	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x4009770	          0x4585ff	                         test r15d, r15d	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x4009773	     0xf8fc2000000	                            jg 0x400983b	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x4009779	      0xba00000000	                              mov edx, 0	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400977e	          0x4889ee	                            mov rsi, rbp	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x4009781	        0x488b3c24	                    mov rdi, qword [rsp]	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x4009785	      0xe800000000	                          call 0x400978a	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400978a	            0x85c0	                           test eax, eax	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400978c	     0xf85f8020000	                           jne 0x4009a8a	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x4009792	      0x498b742408	                mov rsi, qword [r12 + 8]	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x4009797	          0x4885f6	                           test rsi, rsi	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400979a	            0x7416	                            je 0x40097b2	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400979c	      0xba00000000	                              mov edx, 0	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x40097a1	        0x488b3c24	                    mov rdi, qword [rsp]	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x40097a5	      0xe800000000	                          call 0x40097aa	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x40097aa	            0x85c0	                           test eax, eax	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x40097ac	     0xf85d8020000	                           jne 0x4009a8a	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x40097b2	          0x4585ed	                         test r13d, r13d	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097b5	     0xf8480000000	                            je 0x400983b	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097bb	      0xc64424403c	            mov byte [rsp + 0x40], 0x3c 	     11598	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097c0	      0xc644244174	            mov byte [rsp + 0x41], 0x74 	     11599	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097c5	      0xc64424425f	            mov byte [rsp + 0x42], 0x5f 	     11600	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097ca	         0xfb64502	               movzx eax, byte [rbp + 2]	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097ce	        0x88442443	               mov byte [rsp + 0x43], al	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097d2	         0xfb64503	               movzx eax, byte [rbp + 3]	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097d6	        0x88442444	               mov byte [rsp + 0x44], al	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097da	      0xc64424453e	            mov byte [rsp + 0x45], 0x3e 	     11603	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097df	      0xc644244600	                mov byte [rsp + 0x46], 0	     11604	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x40097e4	      0xba00000000	                              mov edx, 0	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097e9	      0x488d742440	                   lea rsi, [rsp + 0x40]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097ee	        0x488b3c24	                    mov rdi, qword [rsp]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097f2	      0xe800000000	                          call 0x40097f7	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097f7	            0x85c0	                           test eax, eax	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097f9	     0xf85b0020000	                           jne 0x4009aaf	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x40097ff	            0xeb3a	                           jmp 0x400983b	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x4009801	          0x4585ed	                         test r13d, r13d	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x4009804	            0x7407	                            je 0x400980d	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x4009806	      0x8344243001	               add dword [rsp + 0x30], 1	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400980b	            0xeb2e	                           jmp 0x400983b	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400980d	        0x4183c701	                             add r15d, 1	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x4009811	            0xeb28	                           jmp 0x400983b	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x4009813	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x4009817	        0x448d6001	                     lea r12d, [rax + 1]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400981b	          0x4863d0	                         movsxd rdx, eax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400981e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x4009823	          0x488b00	                    mov rax, qword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x4009826	        0x4c8d2cd0	                  lea r13, [rax + rdx*8]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400982a	          0x4889ef	                            mov rdi, rbp	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400982d	      0xe800000000	                          call 0x4009832	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x4009832	        0x49894500	                    mov qword [r13], rax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x4009836	      0x448964240c	             mov dword [rsp + 0xc], r12d	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400983b	        0x4883c340	                           add rbx, 0x40	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400983f	          0x488b2b	                    mov rbp, qword [rbx]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009842	          0x4885ed	                           test rbp, rbp	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009845	     0xf85f8feffff	                           jne 0x4009743	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400984b	        0x41833e05	                      cmp dword [r14], 5	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400984f	     0xf84ac010000	                            je 0x4009a01	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4009855	      0xbd00000000	                              mov ebp, 0	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400985a	          0x4585ff	                         test r15d, r15d	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400985d	     0xf84d7000000	                            je 0x400993a	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4009863	      0xe999010000	                           jmp 0x4009a01	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x4009868	      0xe800000000	                          call 0x400986d	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400986d	          0x488b00	                    mov rax, qword [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4009870	           0xfb613	                   movzx edx, byte [rbx]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4009873	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4009878	     0xf84b9000000	                            je 0x4009937	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400987e	         0xfb65301	               movzx edx, byte [rbx + 1]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4009882	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x4009887	     0xf84aa000000	                            je 0x4009937	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400988d	      0xc644244074	            mov byte [rsp + 0x40], 0x74 	     11634	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x4009892	      0xc64424415f	            mov byte [rsp + 0x41], 0x5f 	     11635	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x4009897	           0xfb603	                   movzx eax, byte [rbx]	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400989a	        0x88442442	               mov byte [rsp + 0x42], al	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400989e	         0xfb64301	               movzx eax, byte [rbx + 1]	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40098a2	        0x88442443	               mov byte [rsp + 0x43], al	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40098a6	      0xc644244400	                mov byte [rsp + 0x44], 0	     11638	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x40098ab	      0xba00000000	                              mov edx, 0	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098b0	      0x488d742440	                   lea rsi, [rsp + 0x40]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098b5	        0x488b3c24	                    mov rdi, qword [rsp]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098b9	      0xe800000000	                          call 0x40098be	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098be	            0x85c0	                           test eax, eax	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098c0	            0x753f	                           jne 0x4009901	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x40098c2	      0xc64424403c	            mov byte [rsp + 0x40], 0x3c 	     11645	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098c7	      0xc644244174	            mov byte [rsp + 0x41], 0x74 	     11646	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098cc	      0xc64424425f	            mov byte [rsp + 0x42], 0x5f 	     11647	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098d1	           0xfb603	                   movzx eax, byte [rbx]	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098d4	        0x88442443	               mov byte [rsp + 0x43], al	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098d8	         0xfb64301	               movzx eax, byte [rbx + 1]	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098dc	        0x88442444	               mov byte [rsp + 0x44], al	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098e0	      0xc64424453e	            mov byte [rsp + 0x45], 0x3e 	     11650	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098e5	      0xc644244600	                mov byte [rsp + 0x46], 0	     11651	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x40098ea	      0xba00000000	                              mov edx, 0	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x40098ef	      0x488d742440	                   lea rsi, [rsp + 0x40]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x40098f4	        0x488b3c24	                    mov rdi, qword [rsp]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x40098f8	      0xe800000000	                          call 0x40098fd	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x40098fd	            0x85c0	                           test eax, eax	     11656	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17
0x40098ff	            0x7436	                            je 0x4009937	     11656	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17
0x4009901	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4009906	            0x7507	                           jne 0x400990f	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x4009908	      0x8344243001	               add dword [rsp + 0x30], 1	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400990d	            0xeb28	                           jmp 0x4009937	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400990f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009913	          0x8d5801	                      lea ebx, [rax + 1]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009916	          0x4863d0	                         movsxd rdx, eax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009919	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400991e	          0x488b00	                    mov rax, qword [rax]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009921	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009925	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400992a	      0xe800000000	                          call 0x400992f	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400992f	        0x49890424	                    mov qword [r12], rax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009933	        0x895c240c	              mov dword [rsp + 0xc], ebx	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x4009937	          0x83c501	                              add ebp, 1	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400993a	            0x89ef	                            mov edi, ebp	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400993c	      0xe800000000	                          call 0x4009941	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4009941	          0x4889c3	                            mov rbx, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4009944	          0x4885c0	                           test rax, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x4009947	     0xf851bffffff	                           jne 0x4009868	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400994d	        0x488b0424	                    mov rax, qword [rsp]	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009951	    0xc780a8000000	               mov dword [rax + 0xa8], 1	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400995b	      0x44897c2434	            mov dword [rsp + 0x34], r15d	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009960	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009964	      0x4c89742438	             mov qword [rsp + 0x38], r14	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009969	          0x4989c4	                            mov r12, rax	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400996c	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009971	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x4009976	            0xeb6f	                           jmp 0x40099e7	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4009978	      0xc64424403c	            mov byte [rsp + 0x40], 0x3c 	     11671	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5
0x400997d	      0xba1f000000	                           mov edx, 0x1f	       110	string3.h	FUNCTION_143	CALL_3
0x4009982	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x4009985	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_143	CALL_3
0x4009988	      0xe800000000	                          call 0x400998d	       110	string3.h	FUNCTION_143	CALL_3
0x400998d	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_147	CALL_3
0x4009992	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x4009997	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       148	string3.h	FUNCTION_147	CALL_3
0x400999c	      0xe800000000	                          call 0x40099a1	       148	string3.h	FUNCTION_147	CALL_3
0x40099a1	      0xba00000000	                              mov edx, 0	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099a6	      0x488d742440	                   lea rsi, [rsp + 0x40]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099ab	          0x4c89e7	                            mov rdi, r12	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099ae	      0xe800000000	                          call 0x40099b3	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099b3	            0x85c0	                           test eax, eax	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099b5	            0x742d	                            je 0x40099e4	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x40099b7	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x40099bc	            0x7507	                           jne 0x40099c5	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x40099be	      0x8344243001	               add dword [rsp + 0x30], 1	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x40099c3	            0xeb1f	                           jmp 0x40099e4	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x40099c5	        0x448d7501	                     lea r14d, [rbp + 1]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099c9	          0x4863ed	                         movsxd rbp, ebp	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099cc	          0x498b07	                    mov rax, qword [r15]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099cf	        0x488d2ce8	                  lea rbp, [rax + rbp*8]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099d3	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099d8	      0xe800000000	                          call 0x40099dd	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099dd	        0x48894500	                    mov qword [rbp], rax	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099e1	          0x4489f5	                           mov ebp, r14d	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x40099e4	          0x83c301	                              add ebx, 1	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099e7	            0x89df	                            mov edi, ebx	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099e9	      0xe800000000	                          call 0x40099ee	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099ee	          0x4885c0	                           test rax, rax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099f1	            0x7585	                           jne 0x4009978	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099f3	      0x448b7c2434	           mov r15d, dword [rsp + 0x34] 	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099f8	        0x896c240c	              mov dword [rsp + 0xc], ebp	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x40099fc	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x4009a01	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x4009a06	            0x7554	                           jne 0x4009a5c	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x4009a08	          0x4585ff	                         test r15d, r15d	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4009a0b	            0x7e0a	                           jle 0x4009a17	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4009a0d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4009a12	          0x448938	                   mov dword [rax], r15d	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4009a15	            0xeb0f	                           jmp 0x4009a26	     11687	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x4009a17	        0x8b442430	            mov eax, dword [rsp + 0x30] 	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4009a1b	            0x85c0	                           test eax, eax	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4009a1d	            0x7e54	                           jle 0x4009a73	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4009a1f	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4009a24	            0x8901	                    mov dword [rcx], eax	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x4009a26	      0x488b442420	            mov rax, qword [rsp + 0x20] 	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a2b	            0x8b00	                    mov eax, dword [rax]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a2d	        0x89442434	             mov dword [rsp + 0x34], eax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a31	    0x8d3cc5000000	                        lea edi, [rax*8]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a38	      0xe800000000	                          call 0x4009a3d	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a3d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a42	          0x488901	                    mov qword [rcx], rax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x4009a45	          0x4885c0	                           test rax, rax	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x4009a48	     0xf855cfcffff	                           jne 0x40096aa	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x4009a4e	    0x48c701000000	                      mov qword [rcx], 0	     11695	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x4009a55	      0xb800000000	                              mov eax, 0	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x4009a5a	            0xeb1c	                           jmp 0x4009a78	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x4009a5c	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     11564	option.c	FUNCTION_89	FOR_1
0x4009a60	          0x83c001	                              add eax, 1	     11564	option.c	FUNCTION_89	FOR_1
0x4009a63	          0x83f801	                              cmp eax, 1	     11564	option.c	FUNCTION_89	FOR_1
0x4009a66	     0xf8e3efcffff	                           jle 0x40096aa	     11564	option.c	FUNCTION_89	FOR_1
0x4009a6c	      0xb801000000	                              mov eax, 1	     11700	option.c	FUNCTION_89
0x4009a71	            0xeb05	                           jmp 0x4009a78	     11700	option.c	FUNCTION_89
0x4009a73	      0xb801000000	                              mov eax, 1	     11691	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_9
0x4009a78	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	     11701	option.c	FUNCTION_89
0x4009a7d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11701	option.c	FUNCTION_89
0x4009a86	            0x7441	                            je 0x4009ac9	     11701	option.c	FUNCTION_89
0x4009a88	            0xeb3a	                           jmp 0x4009ac4	     11701	option.c	FUNCTION_89
0x4009a8a	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x4009a8f	     0xf857efdffff	                           jne 0x4009813	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x4009a95	      0xe967fdffff	                           jmp 0x4009801	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x4009a9a	    0x488b2d000000	            mov rbp, qword [0x04009aa1] 	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009aa1	          0x4885ed	                           test rbp, rbp	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009aa4	     0xf8594fcffff	                           jne 0x400973e	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009aaa	      0xe952ffffff	                           jmp 0x4009a01	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x4009aaf	      0x837c241800	               cmp dword [rsp + 0x18], 0	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x4009ab4	     0xf844cfdffff	                            je 0x4009806	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x4009aba	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x4009abf	      0xe94ffdffff	                           jmp 0x4009813	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x4009ac4	      0xe800000000	                          call 0x4009ac9	     11701	option.c	FUNCTION_89
0x4009ac9	        0x4883c478	                           add rsp, 0x78	     11701	option.c	FUNCTION_89
0x4009acd	              0x5b	                                 pop rbx	     11701	option.c	FUNCTION_89
0x4009ace	              0x5d	                                 pop rbp	     11701	option.c	FUNCTION_89
0x4009acf	            0x415c	                                 pop r12	     11701	option.c	FUNCTION_89
0x4009ad1	            0x415d	                                 pop r13	     11701	option.c	FUNCTION_89
0x4009ad3	            0x415e	                                 pop r14	     11701	option.c	FUNCTION_89
0x4009ad5	            0x415f	                                 pop r15	     11701	option.c	FUNCTION_89
0x4009ad7	              0xc3	                                     ret	     11701	option.c	FUNCTION_89
clear_winopt	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,14:WHILE,0	32
0x40052ad	              0x53	                                push rbx	     11000	option.c	FUNCTION_83
0x40052ae	          0x4889fb	                            mov rbx, rdi	     11000	option.c	FUNCTION_83
0x40052b1	        0x488d7f30	                   lea rdi, [rdi + 0x30]	     11002	option.c	FUNCTION_83	CALL_1
0x40052b5	      0xe800000000	                          call 0x40052ba	     11002	option.c	FUNCTION_83	CALL_1
0x40052ba	        0x488d7b48	                   lea rdi, [rbx + 0x48]	     11003	option.c	FUNCTION_83	CALL_2
0x40052be	      0xe800000000	                          call 0x40052c3	     11003	option.c	FUNCTION_83	CALL_2
0x40052c3	        0x488d7b50	                   lea rdi, [rbx + 0x50]	     11004	option.c	FUNCTION_83	CALL_3
0x40052c7	      0xe800000000	                          call 0x40052cc	     11004	option.c	FUNCTION_83	CALL_3
0x40052cc	        0x488d7b68	                   lea rdi, [rbx + 0x68]	     11006	option.c	FUNCTION_83	CALL_4
0x40052d0	      0xe800000000	                          call 0x40052d5	     11006	option.c	FUNCTION_83	CALL_4
0x40052d5	        0x488d7b70	                   lea rdi, [rbx + 0x70]	     11007	option.c	FUNCTION_83	CALL_5
0x40052d9	      0xe800000000	                          call 0x40052de	     11007	option.c	FUNCTION_83	CALL_5
0x40052de	        0x488d7b78	                   lea rdi, [rbx + 0x78]	     11009	option.c	FUNCTION_83	CALL_6
0x40052e2	      0xe800000000	                          call 0x40052e7	     11009	option.c	FUNCTION_83	CALL_6
0x40052e7	    0x488dbb080100	                  lea rdi, [rbx + 0x108]	     11012	option.c	FUNCTION_83	CALL_7
0x40052ee	      0xe800000000	                          call 0x40052f3	     11012	option.c	FUNCTION_83	CALL_7
0x40052f3	        0x488d7b08	                      lea rdi, [rbx + 8]	     11015	option.c	FUNCTION_83	CALL_8
0x40052f7	      0xe800000000	                          call 0x40052fc	     11015	option.c	FUNCTION_83	CALL_8
0x40052fc	    0x488dbba80000	                   lea rdi, [rbx + 0xa8]	     11018	option.c	FUNCTION_83	CALL_9
0x4005303	      0xe800000000	                          call 0x4005308	     11018	option.c	FUNCTION_83	CALL_9
0x4005308	    0x488dbbd00000	                   lea rdi, [rbx + 0xd0]	     11021	option.c	FUNCTION_83	CALL_10
0x400530f	      0xe800000000	                          call 0x4005314	     11021	option.c	FUNCTION_83	CALL_10
0x4005314	    0x488dbbc80000	                   lea rdi, [rbx + 0xc8]	     11024	option.c	FUNCTION_83	CALL_11
0x400531b	      0xe800000000	                          call 0x4005320	     11024	option.c	FUNCTION_83	CALL_11
0x4005320	    0x488dbbf00000	                   lea rdi, [rbx + 0xf0]	     11027	option.c	FUNCTION_83	CALL_12
0x4005327	      0xe800000000	                          call 0x400532c	     11027	option.c	FUNCTION_83	CALL_12
0x400532c	    0x488dbb100100	                  lea rdi, [rbx + 0x110]	     11030	option.c	FUNCTION_83	CALL_13
0x4005333	      0xe800000000	                          call 0x4005338	     11030	option.c	FUNCTION_83	CALL_13
0x4005338	    0x488dbb180100	                  lea rdi, [rbx + 0x118]	     11031	option.c	FUNCTION_83	CALL_14
0x400533f	      0xe800000000	                          call 0x4005344	     11031	option.c	FUNCTION_83	CALL_14
0x4005344	              0x5b	                                 pop rbx	     11033	option.c	FUNCTION_83
0x4005345	              0xc3	                                     ret	     11033	option.c	FUNCTION_83
langmap_init	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,0:DO,0:CALL,1:WHILE,0	12
0x40002e3	      0xb800000000	                              mov eax, 0	     11917	option.c	ELSE_1	FUNCTION_95
0x40002e8	    0x888000000000	                      mov byte [rax], al	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40002ee	        0x4883c001	                              add rax, 1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40002f2	    0x483d00010000	                          cmp rax, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40002f8	            0x75ee	                           jne 0x40002e8	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40002fa	        0x4883ec08	                              sub rsp, 8	     11917	option.c	ELSE_1	FUNCTION_95
0x40002fe	      0xba08000000	                              mov edx, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4000303	      0xbe08000000	                              mov esi, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4000308	      0xbf00000000	                              mov edi, 0	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x400030d	      0xe800000000	                          call 0x4000312	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4000312	        0x4883c408	                              add rsp, 8	     11925	option.c	ELSE_1	FUNCTION_95
0x4000316	              0xc3	                                     ret	     11925	option.c	ELSE_1	FUNCTION_95
check_clipboard_option	SWITCH,0:functions,0:ELSE,8:FOR,1:IF,11:DO,0:CALL,12:WHILE,0	160
0x400225a	            0x4157	                                push r15	      7948	option.c	FUNCTION_45
0x400225c	            0x4156	                                push r14	      7948	option.c	FUNCTION_45
0x400225e	            0x4155	                                push r13	      7948	option.c	FUNCTION_45
0x4002260	            0x4154	                                push r12	      7948	option.c	FUNCTION_45
0x4002262	              0x55	                                push rbp	      7948	option.c	FUNCTION_45
0x4002263	              0x53	                                push rbx	      7948	option.c	FUNCTION_45
0x4002264	        0x4883ec08	                              sub rsp, 8	      7948	option.c	FUNCTION_45
0x4002268	    0x488b05000000	            mov rax, qword [0x0400226f] 	      7958	option.c	FUNCTION_45	FOR_1
0x400226f	      0xbd00000000	                              mov ebp, 0	      7953	option.c	FUNCTION_45
0x4002274	    0x41be00000000	                             mov r14d, 0	      7952	option.c	FUNCTION_45
0x400227a	    0x41bd00000000	                             mov r13d, 0	      7951	option.c	FUNCTION_45
0x4002280	    0x41bc00000000	                             mov r12d, 0	      7950	option.c	FUNCTION_45
0x4002286	      0xbb00000000	                              mov ebx, 0	      7949	option.c	FUNCTION_45
0x400228b	      0xe972010000	                           jmp 0x4002402	      7958	option.c	FUNCTION_45	FOR_1
0x4002290	      0xbf00000000	                              mov edi, 0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4002295	      0xb907000000	                              mov ecx, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400229a	          0x4889c6	                            mov rsi, rax	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400229d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400229f	           0xf97c1	                                 seta cl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022a2	           0xf92c2	                                 setb dl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022a5	            0x38d1	                              cmp cl, dl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022a7	            0x7519	                           jne 0x40022c2	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022a9	         0xfb65007	               movzx edx, byte [rax + 7]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022ad	          0x80fa2c	                            cmp dl, 0x2c	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022b0	            0x7404	                            je 0x40022b6	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022b2	            0x84d2	                             test dl, dl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022b4	            0x750c	                           jne 0x40022c2	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x40022b6	          0x83cb01	                               or ebx, 1	      7962	option.c	FUNCTION_45	FOR_1	IF_1
0x40022b9	        0x4883c007	                              add rax, 7	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x40022bd	      0xe934010000	                           jmp 0x40023f6	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x40022c2	      0xbf00000000	                              mov edi, 0	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022c7	      0xb90b000000	                            mov ecx, 0xb	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022cc	          0x4889c6	                            mov rsi, rax	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022d1	           0xf97c1	                                 seta cl	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022d4	           0xf92c2	                                 setb dl	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022d7	            0x38d1	                              cmp cl, dl	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022d9	            0x7519	                           jne 0x40022f4	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x40022db	         0xfb6500b	            movzx edx, byte [rax + 0xb] 	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022df	          0x80fa2c	                            cmp dl, 0x2c	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022e2	            0x7404	                            je 0x40022e8	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022e4	            0x84d2	                             test dl, dl	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022e6	            0x750c	                           jne 0x40022f4	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022e8	          0x83cb02	                               or ebx, 2	      7968	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022eb	        0x4883c00b	                            add rax, 0xb	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022ef	      0xe902010000	                           jmp 0x40023f6	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40022f4	      0xbf00000000	                              mov edi, 0	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x40022f9	      0xb90a000000	                            mov ecx, 0xa	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x40022fe	          0x4889c6	                            mov rsi, rax	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4002301	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4002303	           0xf97c1	                                 seta cl	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4002306	           0xf92c2	                                 setb dl	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4002309	            0x38d1	                              cmp cl, dl	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400230b	            0x751c	                           jne 0x4002329	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400230d	         0xfb6500a	            movzx edx, byte [rax + 0xa] 	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002311	          0x80fa2c	                            cmp dl, 0x2c	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002314	            0x7404	                            je 0x400231a	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002316	            0x84d2	                             test dl, dl	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002318	            0x750f	                           jne 0x4002329	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400231a	        0x4883c00a	                            add rax, 0xa	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400231e	    0x41bc01000000	                             mov r12d, 1	      7974	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002324	      0xe9cd000000	                           jmp 0x40023f6	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4002329	      0xbf00000000	                              mov edi, 0	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x400232e	      0xb90e000000	                            mov ecx, 0xe	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4002333	          0x4889c6	                            mov rsi, rax	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4002336	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4002338	           0xf97c1	                                 seta cl	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x400233b	           0xf92c2	                                 setb dl	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x400233e	            0x38d1	                              cmp cl, dl	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4002340	            0x751c	                           jne 0x400235e	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4002342	         0xfb6500e	            movzx edx, byte [rax + 0xe] 	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4002346	          0x80fa2c	                            cmp dl, 0x2c	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4002349	            0x7404	                            je 0x400234f	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400234b	            0x84d2	                             test dl, dl	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400234d	            0x750f	                           jne 0x400235e	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400234f	        0x4883c00e	                            add rax, 0xe	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4002353	    0x41bd01000000	                             mov r13d, 1	      7980	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4002359	      0xe998000000	                           jmp 0x40023f6	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400235e	      0xbf00000000	                              mov edi, 0	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002363	      0xb90c000000	                            mov ecx, 0xc	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002368	          0x4889c6	                            mov rsi, rax	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x400236b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x400236d	           0xf97c1	                                 seta cl	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002370	           0xf92c2	                                 setb dl	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002373	            0x38d1	                              cmp cl, dl	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002375	            0x7519	                           jne 0x4002390	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4002377	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400237b	          0x80fa2c	                            cmp dl, 0x2c	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400237e	            0x7404	                            je 0x4002384	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4002380	            0x84d2	                             test dl, dl	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4002382	            0x750c	                           jne 0x4002390	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4002384	        0x4883c00c	                            add rax, 0xc	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4002388	    0x41be01000000	                             mov r14d, 1	      7986	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400238e	            0xeb66	                           jmp 0x40023f6	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4002390	      0xbf00000000	                              mov edi, 0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4002395	      0xb904000000	                              mov ecx, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400239a	          0x4889c6	                            mov rsi, rax	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400239d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400239f	           0xf97c1	                                 seta cl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023a2	           0xf92c2	                                 setb dl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023a5	            0x38d1	                              cmp cl, dl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023a7	            0x7518	                           jne 0x40023c1	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023a9	         0xfb65004	               movzx edx, byte [rax + 4]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023ad	          0x80fa2c	                            cmp dl, 0x2c	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023b0	            0x7404	                            je 0x40023b6	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023b2	            0x84d2	                             test dl, dl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023b4	            0x750b	                           jne 0x40023c1	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40023b6	        0x4883c004	                              add rax, 4	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x40023ba	      0xbd01000000	                              mov ebp, 1	      7991	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x40023bf	            0xeb35	                           jmp 0x40023f6	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x40023c1	      0xbf00000000	                              mov edi, 0	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023c6	      0xb908000000	                              mov ecx, 8	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023cb	          0x4889c6	                            mov rsi, rax	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023ce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023d0	           0xf97c1	                                 seta cl	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023d3	           0xf92c2	                                 setb dl	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023d6	            0x38d1	                              cmp cl, dl	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023d8	     0xf858a000000	                           jne 0x4002468	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40023de	        0x488d7808	                      lea rdi, [rax + 8]	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40023e2	      0xbe01000000	                              mov esi, 1	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40023e7	      0xe800000000	                          call 0x40023ec	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40023ec	          0x4989c7	                            mov r15, rax	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40023ef	          0x4885c0	                           test rax, rax	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40023f2	            0x7474	                            je 0x4002468	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40023f4	            0xeb2e	                           jmp 0x4002424	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40023f6	          0x80382c	                    cmp byte [rax], 0x2c	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x40023f9	           0xf94c2	                                 sete dl	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x40023fc	           0xfb6d2	                           movzx edx, dl	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x40023ff	          0x4801d0	                            add rax, rdx	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x4002402	          0x803800	                       cmp byte [rax], 0	      7958	option.c	FUNCTION_45	FOR_1
0x4002405	     0xf8585feffff	                           jne 0x4002290	      7958	option.c	FUNCTION_45	FOR_1
0x400240b	    0x41bf00000000	                             mov r15d, 0	      7954	option.c	FUNCTION_45
0x4002411	            0xeb11	                           jmp 0x4002424	      7954	option.c	FUNCTION_45
0x4002413	      0xe800000000	                          call 0x4002418	      8022	option.c	FUNCTION_45	IF_10	IF_11	CALL_10
0x4002418	      0xe800000000	                          call 0x400241d	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x400241d	      0xb800000000	                              mov eax, 0	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x4002422	            0xeb53	                           jmp 0x4002477	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x4002424	    0x891d00000000	            mov dword [0x0400242a], ebx 	      8012	option.c	FUNCTION_45	IF_10
0x400242a	    0x448925000000	           mov dword [0x04002431], r12d 	      8013	option.c	FUNCTION_45	IF_10
0x4002431	    0x44892d000000	           mov dword [0x04002438], r13d 	      8014	option.c	FUNCTION_45	IF_10
0x4002438	    0x448935000000	           mov dword [0x0400243f], r14d 	      8015	option.c	FUNCTION_45	IF_10
0x400243f	    0x892d00000000	            mov dword [0x04002445], ebp 	      8016	option.c	FUNCTION_45	IF_10
0x4002445	    0x488b3d000000	            mov rdi, qword [0x0400244c] 	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x400244c	      0xe800000000	                          call 0x4002451	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4002451	    0x4c893d000000	            mov qword [0x04002458], r15 	      8018	option.c	FUNCTION_45	IF_10
0x4002458	      0xb800000000	                              mov eax, 0	      8018	option.c	FUNCTION_45	IF_10
0x400245d	    0x833d00000000	               cmp dword [0x04002464], 0	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4002464	            0x7411	                            je 0x4002477	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4002466	            0xebab	                           jmp 0x4002413	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4002468	      0xbf00000000	                              mov edi, 0	      8028	option.c	FUNCTION_45	CALL_12
0x400246d	      0xe800000000	                          call 0x4002472	      8028	option.c	FUNCTION_45	CALL_12
0x4002472	      0xb800000000	                              mov eax, 0	      8028	option.c	FUNCTION_45	CALL_12
0x4002477	        0x4883c408	                              add rsp, 8	      8031	option.c	FUNCTION_45
0x400247b	              0x5b	                                 pop rbx	      8031	option.c	FUNCTION_45
0x400247c	              0x5d	                                 pop rbp	      8031	option.c	FUNCTION_45
0x400247d	            0x415c	                                 pop r12	      8031	option.c	FUNCTION_45
0x400247f	            0x415d	                                 pop r13	      8031	option.c	FUNCTION_45
0x4002481	            0x415e	                                 pop r14	      8031	option.c	FUNCTION_45
0x4002483	            0x415f	                                 pop r15	      8031	option.c	FUNCTION_45
0x4002485	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
set_string_default	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	5
0x4003010	        0x4883ec08	                              sub rsp, 8	      3897	option.c	FUNCTION_5
0x4003014	      0xba00000000	                              mov edx, 0	      3898	option.c	FUNCTION_5	CALL_1
0x4003019	      0xe8b4d5ffff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x400301e	        0x4883c408	                              add rsp, 8	      3899	option.c	FUNCTION_5
0x4003022	              0xc3	                                     ret	      3899	option.c	FUNCTION_5
was_set_insecurely	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	17
0x4003c34	              0x53	                                push rbx	      5800	option.c	FUNCTION_34
0x4003c35	            0x89f3	                            mov ebx, esi	      5800	option.c	FUNCTION_34
0x4003c37	      0xe8dbc6ffff	                     call sym.findoption	      5801	option.c	FUNCTION_34	CALL_1
0x4003c3c	            0x85c0	                           test eax, eax	      5804	option.c	FUNCTION_34	IF_1
0x4003c3e	            0x7815	                            js 0x4003c55	      5804	option.c	FUNCTION_34	IF_1
0x4003c40	            0x89de	                            mov esi, ebx	      5806	option.c	FUNCTION_34	IF_1
0x4003c42	            0x89c7	                            mov edi, eax	      5806	option.c	FUNCTION_34	IF_1
0x4003c44	      0xe809c4ffff	                  call sym.insecure_flag	      5806	option.c	FUNCTION_34	IF_1
0x4003c49	          0x488b00	                    mov rax, qword [rax]	      5807	option.c	FUNCTION_34	IF_1
0x4003c4c	        0x48c1e817	                           shr rax, 0x17	      5807	option.c	FUNCTION_34	IF_1
0x4003c50	          0x83e001	                              and eax, 1	      5807	option.c	FUNCTION_34	IF_1
0x4003c53	            0xeb0f	                           jmp 0x4003c64	      5807	option.c	FUNCTION_34	IF_1
0x4003c55	      0xbf00000000	                              mov edi, 0	      5809	option.c	FUNCTION_34	CALL_2
0x4003c5a	      0xe800000000	                          call 0x4003c5f	      5809	option.c	FUNCTION_34	CALL_2
0x4003c5f	      0xb8ffffffff	                     mov eax, 0xffffffff	      5810	option.c	FUNCTION_34
0x4003c64	              0x5b	                                 pop rbx	      5811	option.c	FUNCTION_34
0x4003c65	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
set_string_option_direct	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,8:DO,0:CALL,11:WHILE,0	122
0x4003c66	            0x4157	                                push r15	      5876	option.c	FUNCTION_36
0x4003c68	            0x4156	                                push r14	      5876	option.c	FUNCTION_36
0x4003c6a	            0x4155	                                push r13	      5876	option.c	FUNCTION_36
0x4003c6c	            0x4154	                                push r12	      5876	option.c	FUNCTION_36
0x4003c6e	              0x55	                                push rbp	      5876	option.c	FUNCTION_36
0x4003c6f	              0x53	                                push rbx	      5876	option.c	FUNCTION_36
0x4003c70	        0x4883ec08	                              sub rsp, 8	      5876	option.c	FUNCTION_36
0x4003c74	            0x89f3	                            mov ebx, esi	      5876	option.c	FUNCTION_36
0x4003c76	          0x4989d5	                            mov r13, rdx	      5876	option.c	FUNCTION_36
0x4003c79	            0x89cd	                            mov ebp, ecx	      5876	option.c	FUNCTION_36
0x4003c7b	          0x4589c4	                           mov r12d, r8d	      5876	option.c	FUNCTION_36
0x4003c7e	          0x83feff	             cmp esi, 0xffffffffffffffff	      5882	option.c	FUNCTION_36	IF_1
0x4003c81	            0x7553	                           jne 0x4003cd6	      5882	option.c	FUNCTION_36	IF_1
0x4003c83	          0x4989fe	                            mov r14, rdi	      5882	option.c	FUNCTION_36	IF_1
0x4003c86	      0xe88cc6ffff	                     call sym.findoption	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x4003c8b	            0x89c3	                            mov ebx, eax	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x4003c8d	            0x85c0	                           test eax, eax	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x4003c8f	            0x7945	                           jns 0x4003cd6	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x4003c91	      0xba05000000	                              mov edx, 5	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003c96	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003c9b	      0xbf00000000	                              mov edi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003ca0	      0xe800000000	                          call 0x4003ca5	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003ca5	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003caa	          0x4889c7	                            mov rdi, rax	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003cad	      0xe800000000	                          call 0x4003cb2	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x4003cb2	      0xba05000000	                              mov edx, 5	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cb7	      0xbe00000000	                              mov esi, 0	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cbc	      0xbf00000000	                              mov edi, 0	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cc1	      0xe800000000	                          call 0x4003cc6	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cc6	          0x4c89f6	                            mov rsi, r14	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cc9	          0x4889c7	                            mov rdi, rax	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003ccc	      0xe800000000	                          call 0x4003cd1	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4003cd1	      0xe942010000	                           jmp 0x4003e18	      5889	option.c	FUNCTION_36	IF_1	IF_2
0x4003cd6	          0x4863c3	                         movsxd rax, ebx	      5893	option.c	FUNCTION_36	IF_3
0x4003cd9	        0x48c1e006	                              shl rax, 6	      5893	option.c	FUNCTION_36	IF_3
0x4003cdd	    0x4883b8000000	                      cmp qword [rax], 0	      5893	option.c	FUNCTION_36	IF_3
0x4003ce5	     0xf842d010000	                            je 0x4003e18	      5893	option.c	FUNCTION_36	IF_3
0x4003ceb	          0x4c89ef	                            mov rdi, r13	      5896	option.c	FUNCTION_36	CALL_6
0x4003cee	      0xe800000000	                          call 0x4003cf3	      5896	option.c	FUNCTION_36	CALL_6
0x4003cf3	          0x4989c5	                            mov r13, rax	      5896	option.c	FUNCTION_36	CALL_6
0x4003cf6	          0x4885c0	                           test rax, rax	      5897	option.c	FUNCTION_36	IF_4
0x4003cf9	     0xf8419010000	                            je 0x4003e18	      5897	option.c	FUNCTION_36	IF_4
0x4003cff	          0x4189ee	                           mov r14d, ebp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d02	        0x4183e606	                             and r14d, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d06	     0xf849b000000	                            je 0x4003da7	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d0c	          0x4863fb	                         movsxd rdi, ebx	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d0f	        0x48c1e706	                              shl rdi, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d13	    0x4881c7000000	                              add rdi, 0	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d1a	            0x89ee	                            mov esi, ebp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d1c	      0xe893d9ffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d21	          0x4989c7	                            mov r15, rax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003d24	        0x40f6c501	                             test bpl, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003d28	     0xf85b2000000	                           jne 0x4003de0	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003d2e	      0xe9e0000000	                           jmp 0x4003e13	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003d33	          0x498b3f	                    mov rdi, qword [r15]	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4003d36	      0xe800000000	                          call 0x4003d3b	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x4003d3b	          0x4d892f	                    mov qword [r15], r13	      5903	option.c	FUNCTION_36	IF_4
0x4003d3e	          0x4585f6	                         test r14d, r14d	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4003d41	     0xf8583000000	                           jne 0x4003dca	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4003d47	          0x4c89fe	                            mov rsi, r15	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4003d4a	            0x89df	                            mov edi, ebx	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4003d4c	      0xe81dfeffff	       call sym.set_string_option_global	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4003d51	          0x4863c3	                         movsxd rax, ebx	      5909	option.c	FUNCTION_36	IF_4
0x4003d54	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x4003d58	    0x480500000000	                              add rax, 0	      5909	option.c	FUNCTION_36	IF_4
0x4003d5e	      0x4883481008	                or qword [rax + 0x10], 8	      5909	option.c	FUNCTION_36	IF_4
0x4003d63	        0xf6402110	           test byte [rax + 0x21], 0x10 	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4003d67	            0x7417	                            je 0x4003d80	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4003d69	          0x4585f6	                         test r14d, r14d	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4003d6c	            0x7512	                           jne 0x4003d80	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4003d6e	          0x498b3f	                    mov rdi, qword [r15]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4003d71	      0xe800000000	                          call 0x4003d76	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4003d76	    0x488b05000000	            mov rax, qword [0x04003d7d] 	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4003d7d	          0x498907	                    mov qword [r15], rax	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4003d80	        0x4183fcfa	            cmp r12d, 0xfffffffffffffffa	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x4003d84	     0xf848e000000	                            je 0x4003e18	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x4003d8a	          0x4585e4	                         test r12d, r12d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003d8d	          0x4489e2	                           mov edx, r12d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003d90	     0xf4415000000	           cmove edx, dword [0x04003d97]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003d97	            0x89ee	                            mov esi, ebp	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003d99	            0x89df	                            mov edi, ebx	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003d9b	      0xe8dbc3ffff	        call sym.set_option_scriptID_idx	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003da0	            0xeb76	                           jmp 0x4003e18	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x4003da2	          0x4d892f	                    mov qword [r15], r13	      5903	option.c	FUNCTION_36	IF_4
0x4003da5	            0xeba0	                           jmp 0x4003d47	      5903	option.c	FUNCTION_36	IF_4
0x4003da7	          0x4863fb	                         movsxd rdi, ebx	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003daa	        0x48c1e706	                              shl rdi, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003dae	    0x4881c7000000	                              add rdi, 0	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003db5	      0xbe04000000	                              mov esi, 4	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003dba	      0xe8f5d8ffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003dbf	          0x4989c7	                            mov r15, rax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4003dc2	        0x40f6c501	                             test bpl, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003dc6	            0x7535	                           jne 0x4003dfd	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003dc8	            0xebd8	                           jmp 0x4003da2	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003dca	          0x4863c3	                         movsxd rax, ebx	      5909	option.c	FUNCTION_36	IF_4
0x4003dcd	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x4003dd1	    0x488388000000	                       or qword [rax], 8	      5909	option.c	FUNCTION_36	IF_4
0x4003dd9	            0xeba5	                           jmp 0x4003d80	      5909	option.c	FUNCTION_36	IF_4
0x4003ddb	          0x4d892f	                    mov qword [r15], r13	      5903	option.c	FUNCTION_36	IF_4
0x4003dde	            0xebea	                           jmp 0x4003dca	      5903	option.c	FUNCTION_36	IF_4
0x4003de0	          0x4863c3	                         movsxd rax, ebx	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003de3	        0x48c1e006	                              shl rax, 6	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003de7	    0xf68000000000	                      test byte [rax], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003dee	            0x74eb	                            je 0x4003ddb	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003df0	      0xe93effffff	                           jmp 0x4003d33	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003df5	          0x4d892f	                    mov qword [r15], r13	      5903	option.c	FUNCTION_36	IF_4
0x4003df8	      0xe94affffff	                           jmp 0x4003d47	      5903	option.c	FUNCTION_36	IF_4
0x4003dfd	          0x4863c3	                         movsxd rax, ebx	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003e00	        0x48c1e006	                              shl rax, 6	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003e04	    0xf68000000000	                      test byte [rax], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003e0b	     0xf8522ffffff	                           jne 0x4003d33	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003e11	            0xebe2	                           jmp 0x4003df5	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4003e13	          0x4c8928	                    mov qword [rax], r13	      5903	option.c	FUNCTION_36	IF_4
0x4003e16	            0xebb2	                           jmp 0x4003dca	      5903	option.c	FUNCTION_36	IF_4
0x4003e18	        0x4883c408	                              add rsp, 8	      5924	option.c	FUNCTION_36
0x4003e1c	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x4003e1d	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x4003e1e	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x4003e20	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x4003e22	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x4003e24	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x4003e26	              0xc3	                                     ret	      5924	option.c	FUNCTION_36
check_winopt	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,14:WHILE,0	32
0x400020a	              0x53	                                push rbx	     10960	option.c	FUNCTION_82
0x400020b	          0x4889fb	                            mov rbx, rdi	     10960	option.c	FUNCTION_82
0x400020e	        0x488d7f30	                   lea rdi, [rdi + 0x30]	     10962	option.c	FUNCTION_82	CALL_1
0x4000212	      0xe829feffff	            call sym.check_string_option	     10962	option.c	FUNCTION_82	CALL_1
0x4000217	        0x488d7b48	                   lea rdi, [rbx + 0x48]	     10963	option.c	FUNCTION_82	CALL_2
0x400021b	      0xe820feffff	            call sym.check_string_option	     10963	option.c	FUNCTION_82	CALL_2
0x4000220	        0x488d7b50	                   lea rdi, [rbx + 0x50]	     10964	option.c	FUNCTION_82	CALL_3
0x4000224	      0xe817feffff	            call sym.check_string_option	     10964	option.c	FUNCTION_82	CALL_3
0x4000229	        0x488d7b68	                   lea rdi, [rbx + 0x68]	     10966	option.c	FUNCTION_82	CALL_4
0x400022d	      0xe80efeffff	            call sym.check_string_option	     10966	option.c	FUNCTION_82	CALL_4
0x4000232	        0x488d7b70	                   lea rdi, [rbx + 0x70]	     10967	option.c	FUNCTION_82	CALL_5
0x4000236	      0xe805feffff	            call sym.check_string_option	     10967	option.c	FUNCTION_82	CALL_5
0x400023b	        0x488d7b78	                   lea rdi, [rbx + 0x78]	     10969	option.c	FUNCTION_82	CALL_6
0x400023f	      0xe8fcfdffff	            call sym.check_string_option	     10969	option.c	FUNCTION_82	CALL_6
0x4000244	    0x488dbb080100	                  lea rdi, [rbx + 0x108]	     10972	option.c	FUNCTION_82	CALL_7
0x400024b	      0xe8f0fdffff	            call sym.check_string_option	     10972	option.c	FUNCTION_82	CALL_7
0x4000250	    0x488dbba80000	                   lea rdi, [rbx + 0xa8]	     10975	option.c	FUNCTION_82	CALL_8
0x4000257	      0xe8e4fdffff	            call sym.check_string_option	     10975	option.c	FUNCTION_82	CALL_8
0x400025c	    0x488dbbd00000	                   lea rdi, [rbx + 0xd0]	     10978	option.c	FUNCTION_82	CALL_9
0x4000263	      0xe8d8fdffff	            call sym.check_string_option	     10978	option.c	FUNCTION_82	CALL_9
0x4000268	    0x488dbbc80000	                   lea rdi, [rbx + 0xc8]	     10981	option.c	FUNCTION_82	CALL_10
0x400026f	      0xe8ccfdffff	            call sym.check_string_option	     10981	option.c	FUNCTION_82	CALL_10
0x4000274	    0x488dbbf00000	                   lea rdi, [rbx + 0xf0]	     10984	option.c	FUNCTION_82	CALL_11
0x400027b	      0xe8c0fdffff	            call sym.check_string_option	     10984	option.c	FUNCTION_82	CALL_11
0x4000280	    0x488dbb100100	                  lea rdi, [rbx + 0x110]	     10987	option.c	FUNCTION_82	CALL_12
0x4000287	      0xe8b4fdffff	            call sym.check_string_option	     10987	option.c	FUNCTION_82	CALL_12
0x400028c	    0x488dbb180100	                  lea rdi, [rbx + 0x118]	     10988	option.c	FUNCTION_82	CALL_13
0x4000293	      0xe8a8fdffff	            call sym.check_string_option	     10988	option.c	FUNCTION_82	CALL_13
0x4000298	        0x488d7b08	                      lea rdi, [rbx + 8]	     10991	option.c	FUNCTION_82	CALL_14
0x400029c	      0xe89ffdffff	            call sym.check_string_option	     10991	option.c	FUNCTION_82	CALL_14
0x40002a1	              0x5b	                                 pop rbx	     10993	option.c	FUNCTION_82
0x40002a2	              0xc3	                                     ret	     10993	option.c	FUNCTION_82
put_setbool	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,2:DO,0:CALL,1:WHILE,0	30
0x4002dc2	            0x85c9	                           test ecx, ecx	     10263	option.c	FUNCTION_68	IF_1
0x4002dc4	            0x784b	                            js 0x4002e11	     10263	option.c	FUNCTION_68	IF_1
0x4002dc6	              0x53	                                push rbx	     10262	option.c	FUNCTION_68
0x4002dc7	            0x89c8	                            mov eax, ecx	     10262	option.c	FUNCTION_68
0x4002dc9	          0x4989d1	                             mov r9, rdx	     10262	option.c	FUNCTION_68
0x4002dcc	          0x4889f1	                            mov rcx, rsi	     10262	option.c	FUNCTION_68
0x4002dcf	          0x4889fb	                            mov rbx, rdi	     10262	option.c	FUNCTION_68
0x4002dd2	            0x85c0	                           test eax, eax	     10265	option.c	FUNCTION_68	IF_2
0x4002dd4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x4002dd9	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x4002ddf	        0x4c0f44c0	                           cmove r8, rax	        97	stdio2.h	CALL_61
0x4002de3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002de8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002ded	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x4002df2	      0xe800000000	                          call 0x4002df7	        97	stdio2.h	CALL_61
0x4002df7	      0xba00000000	                              mov edx, 0	     10267	option.c	FUNCTION_68	IF_2
0x4002dfc	            0x85c0	                           test eax, eax	     10265	option.c	FUNCTION_68	IF_2
0x4002dfe	            0x7819	                            js 0x4002e19	     10265	option.c	FUNCTION_68	IF_2
0x4002e00	          0x4889df	                            mov rdi, rbx	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4002e03	      0xe800000000	                          call 0x4002e08	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4002e08	            0xf7d0	                                 not eax	     10264	option.c	FUNCTION_68	IF_1
0x4002e0a	            0x89c2	                            mov edx, eax	     10264	option.c	FUNCTION_68	IF_1
0x4002e0c	          0xc1ea1f	                           shr edx, 0x1f	     10264	option.c	FUNCTION_68	IF_1
0x4002e0f	            0xeb08	                           jmp 0x4002e19	     10264	option.c	FUNCTION_68	IF_1
0x4002e11	      0xba01000000	                              mov edx, 1	     10264	option.c	FUNCTION_68	IF_1
0x4002e16	            0x89d0	                            mov eax, edx	     10269	option.c	FUNCTION_68
0x4002e18	              0xc3	                                     ret	     10269	option.c	FUNCTION_68
0x4002e19	            0x89d0	                            mov eax, edx	     10269	option.c	FUNCTION_68
0x4002e1b	              0x5b	                                 pop rbx	     10269	option.c	FUNCTION_68
0x4002e1c	              0xc3	                                     ret	     10269	option.c	FUNCTION_68
check_ff_value	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	6
0x400deda	        0x4883ec08	                              sub rsp, 8	     12513	option.c	FUNCTION_112
0x400dede	      0xba00000000	                              mov edx, 0	     12514	option.c	FUNCTION_112	CALL_1
0x400dee3	      0xbe00000000	                              mov esi, 0	     12514	option.c	FUNCTION_112	CALL_1
0x400dee8	      0xe8023dffff	              call sym.check_opt_strings	     12514	option.c	FUNCTION_112	CALL_1
0x400deed	        0x4883c408	                              add rsp, 8	     12515	option.c	FUNCTION_112
0x400def1	              0xc3	                                     ret	     12515	option.c	FUNCTION_112
init_gui_options	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,6:WHILE,0	20
0x400d841	        0x4883ec08	                              sub rsp, 8	      4266	option.c	FUNCTION_13
0x400d845	      0xbf00000000	                              mov edi, 0	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d84a	      0xe800000000	                          call 0x400d84f	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d84f	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d851	            0x7539	                           jne 0x400d88c	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d853	      0xe8394dffff	                 call sym.gui_bg_default	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d858	          0x4889c6	                            mov rsi, rax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d85b	    0x488b3d000000	            mov rdi, qword [0x0400d862] 	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d862	      0xe800000000	                          call 0x400d867	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d867	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d869	            0x7421	                            je 0x400d88c	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400d86b	      0xe8214dffff	                 call sym.gui_bg_default	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d870	      0xb900000000	                              mov ecx, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d875	          0x4889c2	                            mov rdx, rax	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d878	      0xbe00000000	                              mov esi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d87d	      0xbf00000000	                              mov edi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d882	      0xe800000000	                          call 0x400d887	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400d887	      0xe800000000	                          call 0x400d88c	      4272	option.c	FUNCTION_13	IF_1	CALL_6
0x400d88c	        0x4883c408	                              add rsp, 8	      4274	option.c	FUNCTION_13
0x400d890	              0xc3	                                     ret	      4274	option.c	FUNCTION_13
string_to_key	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,3:DO,0:CALL,3:WHILE,0	28
0x40032f2	        0x4883ec08	                              sub rsp, 8	      5336	option.c	FUNCTION_19
0x40032f6	           0xfb617	                   movzx edx, byte [rdi]	      5337	option.c	FUNCTION_19	IF_1
0x40032f9	          0x80fa3c	                            cmp dl, 0x3c	      5337	option.c	FUNCTION_19	IF_1
0x40032fc	            0x750b	                           jne 0x4003309	      5337	option.c	FUNCTION_19	IF_1
0x40032fe	        0x4883c701	                              add rdi, 1	      5338	option.c	FUNCTION_19	CALL_1
0x4003302	      0xe80ef3ffff	                call sym.find_key_option	      5338	option.c	FUNCTION_19	CALL_1
0x4003307	            0xeb3a	                           jmp 0x4003343	      5338	option.c	FUNCTION_19	CALL_1
0x4003309	          0x80fa5e	                            cmp dl, 0x5e	      5339	option.c	FUNCTION_19	IF_2
0x400330c	            0x751f	                           jne 0x400332d	      5339	option.c	FUNCTION_19	IF_2
0x400330e	         0xfb64701	               movzx eax, byte [rdi + 1]	      5340	option.c	FUNCTION_19	CALL_2
0x4003312	          0x8d509f	                   lea edx, [rax - 0x61]	      5340	option.c	FUNCTION_19	CALL_2
0x4003315	          0x80fa19	                            cmp dl, 0x19	      5340	option.c	FUNCTION_19	CALL_2
0x4003318	            0x7608	                           jbe 0x4003322	      5340	option.c	FUNCTION_19	CALL_2
0x400331a	          0x83f040	                           xor eax, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x400331d	           0xfb6c0	                           movzx eax, al	      5340	option.c	FUNCTION_19	CALL_2
0x4003320	            0xeb21	                           jmp 0x4003343	      5340	option.c	FUNCTION_19	CALL_2
0x4003322	           0xfb6c0	                           movzx eax, al	      5340	option.c	FUNCTION_19	CALL_2
0x4003325	          0x83e820	                           sub eax, 0x20	      5340	option.c	FUNCTION_19	CALL_2
0x4003328	          0x83f040	                           xor eax, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x400332b	            0xeb16	                           jmp 0x4003343	      5340	option.c	FUNCTION_19	CALL_2
0x400332d	           0xfb6c2	                           movzx eax, dl	      5343	option.c	FUNCTION_19
0x4003330	            0x85f6	                           test esi, esi	      5341	option.c	FUNCTION_19	IF_3
0x4003332	            0x740f	                            je 0x4003343	      5341	option.c	FUNCTION_19	IF_3
0x4003334	    0x833d00000000	               cmp dword [0x0400333b], 0	      5342	option.c	FUNCTION_19	CALL_3
0x400333b	            0x7406	                            je 0x4003343	      5342	option.c	FUNCTION_19	CALL_3
0x400333d	    0xff1500000000	                 call qword [0x04003343]	      5342	option.c	FUNCTION_19	CALL_3
0x4003343	        0x4883c408	                              add rsp, 8	      5344	option.c	FUNCTION_19
0x4003347	              0xc3	                                     ret	      5344	option.c	FUNCTION_19
trigger_optionsset_string	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,5:WHILE,0	54
0x40026af	            0x4154	                                push r12	      4330	option.c	FUNCTION_15
0x40026b1	              0x55	                                push rbp	      4330	option.c	FUNCTION_15
0x40026b2	              0x53	                                push rbx	      4330	option.c	FUNCTION_15
0x40026b3	        0x4883ec10	                           sub rsp, 0x10	      4330	option.c	FUNCTION_15
0x40026b7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4330	option.c	FUNCTION_15
0x40026c0	      0x4889442408	                mov qword [rsp + 8], rax	      4330	option.c	FUNCTION_15
0x40026c5	            0x31c0	                            xor eax, eax	      4330	option.c	FUNCTION_15
0x40026c7	          0x4885d2	                           test rdx, rdx	      4331	option.c	FUNCTION_15	IF_1
0x40026ca	     0xf84a2000000	                            je 0x4002772	      4331	option.c	FUNCTION_15	IF_1
0x40026d0	            0x89fb	                            mov ebx, edi	      4331	option.c	FUNCTION_15	IF_1
0x40026d2	          0x4889d5	                            mov rbp, rdx	      4331	option.c	FUNCTION_15	IF_1
0x40026d5	          0x4989cc	                            mov r12, rcx	      4331	option.c	FUNCTION_15	IF_1
0x40026d8	          0x4885c9	                           test rcx, rcx	      4331	option.c	FUNCTION_15	IF_1
0x40026db	     0xf8491000000	                            je 0x4002772	      4331	option.c	FUNCTION_15	IF_1
0x40026e1	          0x83e604	                              and esi, 4	      4335	option.c	FUNCTION_15	IF_1
0x40026e4	    0x41b800000000	                              mov r8d, 0	      4335	option.c	FUNCTION_15	IF_1
0x40026ea	      0xb800000000	                              mov eax, 0	      4335	option.c	FUNCTION_15	IF_1
0x40026ef	        0x4c0f45c0	                          cmovne r8, rax	      4335	option.c	FUNCTION_15	IF_1
0x40026f3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x40026f8	      0xba07000000	                              mov edx, 7	        33	stdio2.h	FUNCTION_120	CALL_1
0x40026fd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002702	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_120	CALL_1
0x4002705	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x400270a	      0xe800000000	                          call 0x400270f	        33	stdio2.h	FUNCTION_120	CALL_1
0x400270f	      0xbaffffffff	                     mov edx, 0xffffffff	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4002714	          0x4889ee	                            mov rsi, rbp	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4002717	      0xbf3e000000	                           mov edi, 0x3e	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x400271c	      0xe800000000	                          call 0x4002721	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4002721	      0xbaffffffff	                     mov edx, 0xffffffff	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4002726	          0x4c89e6	                            mov rsi, r12	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4002729	      0xbf3d000000	                           mov edi, 0x3d	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x400272e	      0xe800000000	                          call 0x4002733	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4002733	      0xbaffffffff	                     mov edx, 0xffffffff	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4002738	          0x4889e6	                            mov rsi, rsp	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x400273b	      0xbf3f000000	                           mov edi, 0x3f	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4002740	      0xe800000000	                          call 0x4002745	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4002745	          0x4863db	                         movsxd rbx, ebx	      4341	option.c	FUNCTION_15	IF_1
0x4002748	        0x48c1e306	                              shl rbx, 6	      4341	option.c	FUNCTION_15	IF_1
0x400274c	    0x41b800000000	                              mov r8d, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4002752	      0xb900000000	                              mov ecx, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4002757	      0xba00000000	                              mov edx, 0	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x400275c	    0x488bb3000000	                    mov rsi, qword [rbx]	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4002763	      0xbf3e000000	                           mov edi, 0x3e	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4002768	      0xe800000000	                          call 0x400276d	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x400276d	      0xe800000000	                          call 0x4002772	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x4002772	      0x488b442408	                mov rax, qword [rsp + 8]	      4344	option.c	FUNCTION_15
0x4002777	    0x644833042528	                xor rax, qword fs:[0x28]	      4344	option.c	FUNCTION_15
0x4002780	            0x7405	                            je 0x4002787	      4344	option.c	FUNCTION_15
0x4002782	      0xe800000000	                          call 0x4002787	      4344	option.c	FUNCTION_15
0x4002787	        0x4883c410	                           add rsp, 0x10	      4344	option.c	FUNCTION_15
0x400278b	              0x5b	                                 pop rbx	      4344	option.c	FUNCTION_15
0x400278c	              0x5d	                                 pop rbp	      4344	option.c	FUNCTION_15
0x400278d	            0x415c	                                 pop r12	      4344	option.c	FUNCTION_15
0x400278f	              0xc3	                                     ret	      4344	option.c	FUNCTION_15
set_term_option_alloced	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,0:WHILE,0	20
0x4003be9	    0x48833d000000	               cmp qword [0x04003bf1], 0	      5783	option.c	FUNCTION_33	FOR_1
0x4003bf1	            0x743f	                            je 0x4003c32	      5783	option.c	FUNCTION_33	FOR_1
0x4003bf3	      0xb800000000	                              mov eax, 0	      5783	option.c	FUNCTION_33	FOR_1
0x4003bf8	      0xba01000000	                              mov edx, 1	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003bfd	    0x483b3d000000	            cmp rdi, qword [0x04003c04] 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c04	            0x7523	                           jne 0x4003c29	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c06	            0xeb0c	                           jmp 0x4003c14	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c08	        0x4883c040	                           add rax, 0x40	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c0c	        0x483978d8	            cmp qword [rax - 0x28], rdi 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c10	            0x7517	                           jne 0x4003c29	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c12	            0xeb05	                           jmp 0x4003c19	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c14	      0xba01000000	                              mov edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x4003c19	          0x4863d2	                         movsxd rdx, edx	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c1c	        0x48c1e206	                              shl rdx, 6	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c20	    0x48838a000000	                       or qword [rdx], 8	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c28	              0xc3	                                     ret	      5787	option.c	FUNCTION_33	FOR_1	IF_1
0x4003c29	          0x83c201	                              add edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x4003c2c	        0x48833800	                      cmp qword [rax], 0	      5783	option.c	FUNCTION_33	FOR_1
0x4003c30	            0x75d6	                           jne 0x4003c08	      5783	option.c	FUNCTION_33	FOR_1
0x4003c32	            0xf3c3	                                     ret	      5783	option.c	FUNCTION_33	FOR_1
did_set_title	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,4:DO,0:CALL,3:WHILE,0	20
0x4002790	    0x833d00000000	               cmp dword [0x04002797], 2	      5380	option.c	FUNCTION_21	IF_1
0x4002797	            0x743e	                            je 0x40027d7	      5380	option.c	FUNCTION_21	IF_1
0x4002799	    0x833d00000000	               cmp dword [0x040027a0], 0	      5382	option.c	FUNCTION_21	IF_1
0x40027a0	            0x7535	                           jne 0x40027d7	      5382	option.c	FUNCTION_21	IF_1
0x40027a2	              0x53	                                push rbx	      5379	option.c	FUNCTION_21
0x40027a3	            0x89fb	                            mov ebx, edi	      5379	option.c	FUNCTION_21
0x40027a5	      0xe800000000	                          call 0x40027aa	      5386	option.c	FUNCTION_21	IF_1	CALL_1
0x40027aa	            0x85db	                           test ebx, ebx	      5387	option.c	FUNCTION_21	IF_1	IF_2
0x40027ac	            0x7415	                            je 0x40027c3	      5387	option.c	FUNCTION_21	IF_1	IF_2
0x40027ae	    0x833d00000000	               cmp dword [0x040027b5], 0	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40027b5	            0x751f	                           jne 0x40027d6	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x40027b7	      0xbf02000000	                              mov edi, 2	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x40027bc	      0xe800000000	                          call 0x40027c1	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x40027c1	            0xeb13	                           jmp 0x40027d6	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x40027c3	    0x833d00000000	               cmp dword [0x040027ca], 0	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x40027ca	            0x750a	                           jne 0x40027d6	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x40027cc	      0xbf01000000	                              mov edi, 1	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x40027d1	      0xe800000000	                          call 0x40027d6	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x40027d6	              0x5b	                                 pop rbx	      5398	option.c	FUNCTION_21
0x40027d7	            0xf3c3	                                     ret	      5398	option.c	FUNCTION_21
opt_strings_flags	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,3:DO,0:CALL,2:WHILE,1	89
0x4001acc	            0x4157	                                push r15	     12355	option.c	FUNCTION_107
0x4001ace	            0x4156	                                push r14	     12355	option.c	FUNCTION_107
0x4001ad0	            0x4155	                                push r13	     12355	option.c	FUNCTION_107
0x4001ad2	            0x4154	                                push r12	     12355	option.c	FUNCTION_107
0x4001ad4	              0x55	                                push rbp	     12355	option.c	FUNCTION_107
0x4001ad5	              0x53	                                push rbx	     12355	option.c	FUNCTION_107
0x4001ad6	        0x4883ec28	                           sub rsp, 0x28	     12355	option.c	FUNCTION_107
0x4001ada	      0x4889542418	             mov qword [rsp + 0x18], rdx	     12355	option.c	FUNCTION_107
0x4001adf	          0x803f00	                       cmp byte [rdi], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4001ae2	     0xf8586000000	                           jne 0x4001b6e	     12360	option.c	FUNCTION_107	WHILE_1
0x4001ae8	    0xc74424140000	               mov dword [rsp + 0x14], 0	     12358	option.c	FUNCTION_107
0x4001af0	      0xe9b0000000	                           jmp 0x4001ba5	     12358	option.c	FUNCTION_107
0x4001af5	          0x4c89f1	                            mov rcx, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001af8	          0x4c89c7	                             mov rdi, r8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001afb	      0xb800000000	                              mov eax, 0	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b00	            0xf2ae	              repne scasb al, byte [rdi]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b02	          0x48f7d1	                                 not rcx	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b05	        0x488d59ff	                      lea rbx, [rcx - 1]	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b09	        0x895c2410	             mov dword [rsp + 0x10], ebx	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b0d	          0x4863db	                         movsxd rbx, ebx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b10	          0x4889da	                            mov rdx, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b13	          0x4c89e6	                            mov rsi, r12	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b16	          0x4c89c7	                             mov rdi, r8	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b19	      0xe800000000	                          call 0x4001b1e	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b1e	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b20	            0x753a	                           jne 0x4001b5c	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4001b22	          0x4585ff	                         test r15d, r15d	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b25	            0x7407	                            je 0x4001b2e	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b27	      0x41803c1c2c	              cmp byte [r12 + rbx], 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b2c	            0x740c	                            je 0x4001b3a	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b2e	      0x41803c1c00	                 cmp byte [r12 + rbx], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b33	            0x7527	                           jne 0x4001b5c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b35	      0xe997000000	                           jmp 0x4001bd1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b3a	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b3e	          0x83c001	                              add eax, 1	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b41	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b43	          0x4901c4	                            add r12, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b46	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b4b	            0x89e9	                            mov ecx, ebp	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b4d	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b4f	         0x9442414	              or dword [rsp + 0x14], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001b53	      0x41803c2400	                       cmp byte [r12], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4001b58	            0x7534	                           jne 0x4001b8e	     12360	option.c	FUNCTION_107	WHILE_1
0x4001b5a	            0xeb49	                           jmp 0x4001ba5	     12360	option.c	FUNCTION_107	WHILE_1
0x4001b5c	          0x83c501	                              add ebp, 1	     12362	option.c	FUNCTION_107	WHILE_1	FOR_1
0x4001b5f	          0x4863c5	                         movsxd rax, ebp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b62	      0x4d8b44c500	             mov r8, qword [r13 + rax*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b67	          0x4d85c0	                             test r8, r8	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b6a	            0x7589	                           jne 0x4001af5	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b6c	            0xeb4e	                           jmp 0x4001bbc	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b6e	          0x4989fc	                            mov r12, rdi	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b71	          0x4989f5	                            mov r13, rsi	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b74	          0x4189cf	                           mov r15d, ecx	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b77	          0x488b06	                    mov rax, qword [rsi]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b7a	      0x4889442408	                mov qword [rsp + 8], rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b7f	    0xc74424140000	               mov dword [rsp + 0x14], 0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b87	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4001b8e	      0x488b442408	                mov rax, qword [rsp + 8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b93	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b96	            0x742b	                            je 0x4001bc3	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b98	          0x4989c0	                             mov r8, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001b9b	      0xbd00000000	                              mov ebp, 0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001ba0	      0xe950ffffff	                           jmp 0x4001af5	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001ba5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     12377	option.c	FUNCTION_107	IF_3
0x4001baa	          0x4885c0	                           test rax, rax	     12377	option.c	FUNCTION_107	IF_3
0x4001bad	            0x741b	                            je 0x4001bca	     12377	option.c	FUNCTION_107	IF_3
0x4001baf	        0x8b742414	            mov esi, dword [rsp + 0x14] 	     12378	option.c	FUNCTION_107	IF_3
0x4001bb3	            0x8930	                    mov dword [rax], esi	     12378	option.c	FUNCTION_107	IF_3
0x4001bb5	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4001bba	            0xeb24	                           jmp 0x4001be0	     12380	option.c	FUNCTION_107
0x4001bbc	      0xb800000000	                              mov eax, 0	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001bc1	            0xeb1d	                           jmp 0x4001be0	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001bc3	      0xb800000000	                              mov eax, 0	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001bc8	            0xeb16	                           jmp 0x4001be0	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4001bca	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4001bcf	            0xeb0f	                           jmp 0x4001be0	     12380	option.c	FUNCTION_107
0x4001bd1	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001bd6	            0x89e9	                            mov ecx, ebp	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001bd8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001bda	         0x9442414	              or dword [rsp + 0x14], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001bde	            0xebc5	                           jmp 0x4001ba5	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4001be0	        0x4883c428	                           add rsp, 0x28	     12381	option.c	FUNCTION_107
0x4001be4	              0x5b	                                 pop rbx	     12381	option.c	FUNCTION_107
0x4001be5	              0x5d	                                 pop rbp	     12381	option.c	FUNCTION_107
0x4001be6	            0x415c	                                 pop r12	     12381	option.c	FUNCTION_107
0x4001be8	            0x415d	                                 pop r13	     12381	option.c	FUNCTION_107
0x4001bea	            0x415e	                                 pop r14	     12381	option.c	FUNCTION_107
0x4001bec	            0x415f	                                 pop r15	     12381	option.c	FUNCTION_107
0x4001bee	              0xc3	                                     ret	     12381	option.c	FUNCTION_107
signcolumn_on	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,2:DO,0:CALL,0:WHILE,0	18
0x400e0e6	    0x488b87b80200	           mov rax, qword [rdi + 0x2b8] 	     12697	option.c	FUNCTION_118	IF_1
0x400e0ed	           0xfb600	                   movzx eax, byte [rax]	     12697	option.c	FUNCTION_118	IF_1
0x400e0f0	            0x3c6e	                            cmp al, 0x6e	     12697	option.c	FUNCTION_118	IF_1
0x400e0f2	            0x7425	                            je 0x400e119	     12697	option.c	FUNCTION_118	IF_1
0x400e0f4	            0x3c79	                            cmp al, 0x79	     12699	option.c	FUNCTION_118	IF_2
0x400e0f6	            0x7427	                            je 0x400e11f	     12699	option.c	FUNCTION_118	IF_2
0x400e0f8	        0x488b5708	                mov rdx, qword [rdi + 8]	     12701	option.c	FUNCTION_118
0x400e0fc	      0xb801000000	                              mov eax, 1	     12703	option.c	FUNCTION_118
0x400e101	    0x4883ba201c00	             cmp qword [rdx + 0x1c20], 0	     12703	option.c	FUNCTION_118
0x400e109	            0x7519	                           jne 0x400e124	     12703	option.c	FUNCTION_118
0x400e10b	    0x83ba281c0000	             cmp dword [rdx + 0x1c28], 0	     12698	option.c	FUNCTION_118	IF_1
0x400e112	           0xf95c0	                                setne al	     12698	option.c	FUNCTION_118	IF_1
0x400e115	           0xfb6c0	                           movzx eax, al	     12698	option.c	FUNCTION_118	IF_1
0x400e118	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x400e119	      0xb800000000	                              mov eax, 0	     12698	option.c	FUNCTION_118	IF_1
0x400e11e	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x400e11f	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x400e124	            0xf3c3	                                     ret	     12706	option.c	FUNCTION_118
find_key_option	SWITCH,0:functions,0:ELSE,1:FOR,0:IF,2:DO,0:CALL,2:WHILE,0	39
0x4002615	        0x4883ec28	                           sub rsp, 0x28	      9832	option.c	FUNCTION_60
0x4002619	      0x48897c2408	                mov qword [rsp + 8], rdi	      9832	option.c	FUNCTION_60
0x400261e	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      9832	option.c	FUNCTION_60
0x4002627	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      9832	option.c	FUNCTION_60
0x400262c	            0x31c9	                            xor ecx, ecx	      9832	option.c	FUNCTION_60
0x400262e	          0x803f74	                    cmp byte [rdi], 0x74	      9840	option.c	FUNCTION_60	IF_1
0x4002631	            0x7525	                           jne 0x4002658	      9840	option.c	FUNCTION_60	IF_1
0x4002633	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x4002637	            0x751f	                           jne 0x4002658	      9840	option.c	FUNCTION_60	IF_1
0x4002639	         0xfb65702	               movzx edx, byte [rdi + 2]	      9840	option.c	FUNCTION_60	IF_1
0x400263d	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x400263f	            0x7417	                            je 0x4002658	      9840	option.c	FUNCTION_60	IF_1
0x4002641	         0xfb64703	               movzx eax, byte [rdi + 3]	      9840	option.c	FUNCTION_60	IF_1
0x4002645	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x4002647	            0x740f	                            je 0x4002658	      9840	option.c	FUNCTION_60	IF_1
0x4002649	           0xfb6c0	                           movzx eax, al	      9841	option.c	FUNCTION_60	CALL_1
0x400264c	          0xc1e008	                              shl eax, 8	      9841	option.c	FUNCTION_60	CALL_1
0x400264f	           0xfb6d2	                           movzx edx, dl	      9841	option.c	FUNCTION_60	CALL_1
0x4002652	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x4002654	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x4002656	            0xeb3d	                           jmp 0x4002695	      9841	option.c	FUNCTION_60	CALL_1
0x4002658	        0x4883ef01	                              sub rdi, 1	      9844	option.c	FUNCTION_60	ELSE_1
0x400265c	      0x48897c2408	                mov qword [rsp + 8], rdi	      9844	option.c	FUNCTION_60	ELSE_1
0x4002661	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x4002669	    0x41b800000000	                              mov r8d, 0	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400266f	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4002674	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4002679	      0x488d742414	                   lea rsi, [rsp + 0x14]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400267e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4002683	      0xe800000000	                          call 0x4002688	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4002688	      0x837c241400	               cmp dword [rsp + 0x14], 0	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400268d	      0xba00000000	                              mov edx, 0	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x4002692	           0xf45c2	                         cmovne eax, edx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x4002695	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9851	option.c	FUNCTION_60
0x400269a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9851	option.c	FUNCTION_60
0x40026a3	            0x7405	                            je 0x40026aa	      9851	option.c	FUNCTION_60
0x40026a5	      0xe800000000	                          call 0x40026aa	      9851	option.c	FUNCTION_60
0x40026aa	        0x4883c428	                           add rsp, 0x28	      9851	option.c	FUNCTION_60
0x40026ae	              0xc3	                                     ret	      9851	option.c	FUNCTION_60
check_buf_options	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,50:WHILE,0	104
0x40037e6	              0x53	                                push rbx	      5647	option.c	FUNCTION_29
0x40037e7	          0x4889fb	                            mov rbx, rdi	      5647	option.c	FUNCTION_29
0x40037ea	    0x488dbf101400	                 lea rdi, [rdi + 0x1410]	      5648	option.c	FUNCTION_29	CALL_1
0x40037f1	      0xe84ac8ffff	            call sym.check_string_option	      5648	option.c	FUNCTION_29	CALL_1
0x40037f6	    0x488dbb181400	                 lea rdi, [rbx + 0x1418]	      5649	option.c	FUNCTION_29	CALL_2
0x40037fd	      0xe83ec8ffff	            call sym.check_string_option	      5649	option.c	FUNCTION_29	CALL_2
0x4003802	    0x488dbb881400	                 lea rdi, [rbx + 0x1488]	      5651	option.c	FUNCTION_29	CALL_3
0x4003809	      0xe832c8ffff	            call sym.check_string_option	      5651	option.c	FUNCTION_29	CALL_3
0x400380e	    0x488dbb901400	                 lea rdi, [rbx + 0x1490]	      5653	option.c	FUNCTION_29	CALL_4
0x4003815	      0xe826c8ffff	            call sym.check_string_option	      5653	option.c	FUNCTION_29	CALL_4
0x400381a	    0x488dbbc01400	                 lea rdi, [rbx + 0x14c0]	      5655	option.c	FUNCTION_29	CALL_5
0x4003821	      0xe81ac8ffff	            call sym.check_string_option	      5655	option.c	FUNCTION_29	CALL_5
0x4003826	    0x488dbbc81400	                 lea rdi, [rbx + 0x14c8]	      5656	option.c	FUNCTION_29	CALL_6
0x400382d	      0xe80ec8ffff	            call sym.check_string_option	      5656	option.c	FUNCTION_29	CALL_6
0x4003832	    0x488dbbd01400	                 lea rdi, [rbx + 0x14d0]	      5658	option.c	FUNCTION_29	CALL_7
0x4003839	      0xe802c8ffff	            call sym.check_string_option	      5658	option.c	FUNCTION_29	CALL_7
0x400383e	    0x488dbbe01400	                 lea rdi, [rbx + 0x14e0]	      5662	option.c	FUNCTION_29	CALL_8
0x4003845	      0xe8f6c7ffff	            call sym.check_string_option	      5662	option.c	FUNCTION_29	CALL_8
0x400384a	    0x488dbbf01400	                 lea rdi, [rbx + 0x14f0]	      5663	option.c	FUNCTION_29	CALL_9
0x4003851	      0xe8eac7ffff	            call sym.check_string_option	      5663	option.c	FUNCTION_29	CALL_9
0x4003856	    0x488dbb381700	                 lea rdi, [rbx + 0x1738]	      5666	option.c	FUNCTION_29	CALL_10
0x400385d	      0xe8dec7ffff	            call sym.check_string_option	      5666	option.c	FUNCTION_29	CALL_10
0x4003862	    0x488dbb481700	                 lea rdi, [rbx + 0x1748]	      5669	option.c	FUNCTION_29	CALL_11
0x4003869	      0xe8d2c7ffff	            call sym.check_string_option	      5669	option.c	FUNCTION_29	CALL_11
0x400386e	    0x488dbbf81400	                 lea rdi, [rbx + 0x14f8]	      5671	option.c	FUNCTION_29	CALL_12
0x4003875	      0xe8c6c7ffff	            call sym.check_string_option	      5671	option.c	FUNCTION_29	CALL_12
0x400387a	    0x488dbb001500	                 lea rdi, [rbx + 0x1500]	      5673	option.c	FUNCTION_29	CALL_13
0x4003881	      0xe8bac7ffff	            call sym.check_string_option	      5673	option.c	FUNCTION_29	CALL_13
0x4003886	    0x488dbb101500	                 lea rdi, [rbx + 0x1510]	      5676	option.c	FUNCTION_29	CALL_14
0x400388d	      0xe8aec7ffff	            call sym.check_string_option	      5676	option.c	FUNCTION_29	CALL_14
0x4003892	    0x488dbb181500	                 lea rdi, [rbx + 0x1518]	      5678	option.c	FUNCTION_29	CALL_15
0x4003899	      0xe8a2c7ffff	            call sym.check_string_option	      5678	option.c	FUNCTION_29	CALL_15
0x400389e	    0x488dbb301500	                 lea rdi, [rbx + 0x1530]	      5679	option.c	FUNCTION_29	CALL_16
0x40038a5	      0xe896c7ffff	            call sym.check_string_option	      5679	option.c	FUNCTION_29	CALL_16
0x40038aa	    0x488dbba01400	                 lea rdi, [rbx + 0x14a0]	      5680	option.c	FUNCTION_29	CALL_17
0x40038b1	      0xe88ac7ffff	            call sym.check_string_option	      5680	option.c	FUNCTION_29	CALL_17
0x40038b6	    0x488dbba81400	                 lea rdi, [rbx + 0x14a8]	      5681	option.c	FUNCTION_29	CALL_18
0x40038bd	      0xe87ec7ffff	            call sym.check_string_option	      5681	option.c	FUNCTION_29	CALL_18
0x40038c2	    0x488dbbb81400	                 lea rdi, [rbx + 0x14b8]	      5682	option.c	FUNCTION_29	CALL_19
0x40038c9	      0xe872c7ffff	            call sym.check_string_option	      5682	option.c	FUNCTION_29	CALL_19
0x40038ce	    0x488dbb481400	                 lea rdi, [rbx + 0x1448]	      5684	option.c	FUNCTION_29	CALL_20
0x40038d5	      0xe866c7ffff	            call sym.check_string_option	      5684	option.c	FUNCTION_29	CALL_20
0x40038da	    0x488dbb501400	                 lea rdi, [rbx + 0x1450]	      5687	option.c	FUNCTION_29	CALL_21
0x40038e1	      0xe85ac7ffff	            call sym.check_string_option	      5687	option.c	FUNCTION_29	CALL_21
0x40038e6	    0x488dbb481500	                 lea rdi, [rbx + 0x1548]	      5689	option.c	FUNCTION_29	CALL_22
0x40038ed	      0xe84ec7ffff	            call sym.check_string_option	      5689	option.c	FUNCTION_29	CALL_22
0x40038f2	    0x488dbb581500	                 lea rdi, [rbx + 0x1558]	      5691	option.c	FUNCTION_29	CALL_23
0x40038f9	      0xe842c7ffff	            call sym.check_string_option	      5691	option.c	FUNCTION_29	CALL_23
0x40038fe	    0x488dbba01500	                 lea rdi, [rbx + 0x15a0]	      5694	option.c	FUNCTION_29	CALL_24
0x4003905	      0xe836c7ffff	            call sym.check_string_option	      5694	option.c	FUNCTION_29	CALL_24
0x400390a	    0x488dbb181c00	                 lea rdi, [rbx + 0x1c18]	      5695	option.c	FUNCTION_29	CALL_25
0x4003911	      0xe82ac7ffff	            call sym.check_string_option	      5695	option.c	FUNCTION_29	CALL_25
0x4003916	    0x488dbbd01b00	                 lea rdi, [rbx + 0x1bd0]	      5698	option.c	FUNCTION_29	CALL_26
0x400391d	      0xe81ec7ffff	            call sym.check_string_option	      5698	option.c	FUNCTION_29	CALL_26
0x4003922	    0x488dbbe01b00	                 lea rdi, [rbx + 0x1be0]	      5699	option.c	FUNCTION_29	CALL_27
0x4003929	      0xe812c7ffff	            call sym.check_string_option	      5699	option.c	FUNCTION_29	CALL_27
0x400392e	    0x488dbbe81b00	                 lea rdi, [rbx + 0x1be8]	      5700	option.c	FUNCTION_29	CALL_28
0x4003935	      0xe806c7ffff	            call sym.check_string_option	      5700	option.c	FUNCTION_29	CALL_28
0x400393a	    0x488dbb881500	                 lea rdi, [rbx + 0x1588]	      5703	option.c	FUNCTION_29	CALL_29
0x4003941	      0xe8fac6ffff	            call sym.check_string_option	      5703	option.c	FUNCTION_29	CALL_29
0x4003946	    0x488dbb381400	                 lea rdi, [rbx + 0x1438]	      5706	option.c	FUNCTION_29	CALL_30
0x400394d	      0xe8eec6ffff	            call sym.check_string_option	      5706	option.c	FUNCTION_29	CALL_30
0x4003952	    0x488dbb301400	                 lea rdi, [rbx + 0x1430]	      5707	option.c	FUNCTION_29	CALL_31
0x4003959	      0xe8e2c6ffff	            call sym.check_string_option	      5707	option.c	FUNCTION_29	CALL_31
0x400395e	          0x4889df	                            mov rdi, rbx	      5708	option.c	FUNCTION_29	CALL_32
0x4003961	      0xe800000000	                          call 0x4003966	      5708	option.c	FUNCTION_29	CALL_32
0x4003966	    0x488dbb981400	                 lea rdi, [rbx + 0x1498]	      5710	option.c	FUNCTION_29	CALL_33
0x400396d	      0xe8cec6ffff	            call sym.check_string_option	      5710	option.c	FUNCTION_29	CALL_33
0x4003972	    0x488dbb401400	                 lea rdi, [rbx + 0x1440]	      5712	option.c	FUNCTION_29	CALL_34
0x4003979	      0xe8c2c6ffff	            call sym.check_string_option	      5712	option.c	FUNCTION_29	CALL_34
0x400397e	    0x488dbb581400	                 lea rdi, [rbx + 0x1458]	      5715	option.c	FUNCTION_29	CALL_35
0x4003985	      0xe8b6c6ffff	            call sym.check_string_option	      5715	option.c	FUNCTION_29	CALL_35
0x400398a	    0x488dbb601400	                 lea rdi, [rbx + 0x1460]	      5718	option.c	FUNCTION_29	CALL_36
0x4003991	      0xe8aac6ffff	            call sym.check_string_option	      5718	option.c	FUNCTION_29	CALL_36
0x4003996	    0x488dbb681400	                 lea rdi, [rbx + 0x1468]	      5719	option.c	FUNCTION_29	CALL_37
0x400399d	      0xe89ec6ffff	            call sym.check_string_option	      5719	option.c	FUNCTION_29	CALL_37
0x40039a2	    0x488dbbe81500	                 lea rdi, [rbx + 0x15e8]	      5722	option.c	FUNCTION_29	CALL_38
0x40039a9	      0xe892c6ffff	            call sym.check_string_option	      5722	option.c	FUNCTION_29	CALL_38
0x40039ae	    0x488dbbf01500	                 lea rdi, [rbx + 0x15f0]	      5725	option.c	FUNCTION_29	CALL_39
0x40039b5	      0xe886c6ffff	            call sym.check_string_option	      5725	option.c	FUNCTION_29	CALL_39
0x40039ba	    0x488dbbf81500	                 lea rdi, [rbx + 0x15f8]	      5726	option.c	FUNCTION_29	CALL_40
0x40039c1	      0xe87ac6ffff	            call sym.check_string_option	      5726	option.c	FUNCTION_29	CALL_40
0x40039c6	    0x488dbb001600	                 lea rdi, [rbx + 0x1600]	      5727	option.c	FUNCTION_29	CALL_41
0x40039cd	      0xe86ec6ffff	            call sym.check_string_option	      5727	option.c	FUNCTION_29	CALL_41
0x40039d2	    0x488dbb081600	                 lea rdi, [rbx + 0x1608]	      5729	option.c	FUNCTION_29	CALL_42
0x40039d9	      0xe862c6ffff	            call sym.check_string_option	      5729	option.c	FUNCTION_29	CALL_42
0x40039de	    0x488dbb101600	                 lea rdi, [rbx + 0x1610]	      5730	option.c	FUNCTION_29	CALL_43
0x40039e5	      0xe856c6ffff	            call sym.check_string_option	      5730	option.c	FUNCTION_29	CALL_43
0x40039ea	    0x488dbb201600	                 lea rdi, [rbx + 0x1620]	      5731	option.c	FUNCTION_29	CALL_44
0x40039f1	      0xe84ac6ffff	            call sym.check_string_option	      5731	option.c	FUNCTION_29	CALL_44
0x40039f6	    0x488dbb281600	                 lea rdi, [rbx + 0x1628]	      5732	option.c	FUNCTION_29	CALL_45
0x40039fd	      0xe83ec6ffff	            call sym.check_string_option	      5732	option.c	FUNCTION_29	CALL_45
0x4003a02	    0x488dbb381600	                 lea rdi, [rbx + 0x1638]	      5734	option.c	FUNCTION_29	CALL_46
0x4003a09	      0xe832c6ffff	            call sym.check_string_option	      5734	option.c	FUNCTION_29	CALL_46
0x4003a0e	    0x488dbb401600	                 lea rdi, [rbx + 0x1640]	      5735	option.c	FUNCTION_29	CALL_47
0x4003a15	      0xe826c6ffff	            call sym.check_string_option	      5735	option.c	FUNCTION_29	CALL_47
0x4003a1a	    0x488dbb581600	                 lea rdi, [rbx + 0x1658]	      5738	option.c	FUNCTION_29	CALL_48
0x4003a21	      0xe81ac6ffff	            call sym.check_string_option	      5738	option.c	FUNCTION_29	CALL_48
0x4003a26	    0x488dbbf81300	                 lea rdi, [rbx + 0x13f8]	      5740	option.c	FUNCTION_29	CALL_49
0x4003a2d	      0xe80ec6ffff	            call sym.check_string_option	      5740	option.c	FUNCTION_29	CALL_49
0x4003a32	    0x488dbb281500	                 lea rdi, [rbx + 0x1528]	      5742	option.c	FUNCTION_29	CALL_50
0x4003a39	      0xe802c6ffff	            call sym.check_string_option	      5742	option.c	FUNCTION_29	CALL_50
0x4003a3e	              0x5b	                                 pop rbx	      5744	option.c	FUNCTION_29
0x4003a3f	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
shortmess	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,3:WHILE,0	28
0x4009c67	            0x89fe	                            mov esi, edi	     12054	option.c	FUNCTION_98
0x4009c69	    0x488b3d000000	            mov rdi, qword [0x04009c70] 	     12055	option.c	FUNCTION_98
0x4009c70	      0xba00000000	                              mov edx, 0	     12055	option.c	FUNCTION_98
0x4009c75	          0x4885ff	                           test rdi, rdi	     12055	option.c	FUNCTION_98
0x4009c78	            0x7446	                            je 0x4009cc0	     12055	option.c	FUNCTION_98
0x4009c7a	              0x53	                                push rbx	     12054	option.c	FUNCTION_98
0x4009c7b	            0x89f3	                            mov ebx, esi	     12054	option.c	FUNCTION_98
0x4009c7d	      0xe800000000	                          call 0x4009c82	     12056	option.c	FUNCTION_98	CALL_1
0x4009c82	      0xba01000000	                              mov edx, 1	     12055	option.c	FUNCTION_98
0x4009c87	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x4009c8a	            0x7530	                           jne 0x4009cbc	     12055	option.c	FUNCTION_98
0x4009c8c	      0xbe61000000	                           mov esi, 0x61	     12057	option.c	FUNCTION_98	CALL_2
0x4009c91	    0x488b3d000000	            mov rdi, qword [0x04009c98] 	     12057	option.c	FUNCTION_98	CALL_2
0x4009c98	      0xe800000000	                          call 0x4009c9d	     12057	option.c	FUNCTION_98	CALL_2
0x4009c9d	      0xba00000000	                              mov edx, 0	     12055	option.c	FUNCTION_98
0x4009ca2	          0x4885c0	                           test rax, rax	     12057	option.c	FUNCTION_98	CALL_2
0x4009ca5	            0x7415	                            je 0x4009cbc	     12057	option.c	FUNCTION_98	CALL_2
0x4009ca7	            0x89de	                            mov esi, ebx	     12058	option.c	FUNCTION_98	CALL_3
0x4009ca9	      0xbf00000000	                              mov edi, 0	     12058	option.c	FUNCTION_98	CALL_3
0x4009cae	      0xe800000000	                          call 0x4009cb3	     12058	option.c	FUNCTION_98	CALL_3
0x4009cb3	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x4009cb6	           0xf95c2	                                setne dl	     12055	option.c	FUNCTION_98
0x4009cb9	           0xfb6d2	                           movzx edx, dl	     12055	option.c	FUNCTION_98
0x4009cbc	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x4009cbe	              0x5b	                                 pop rbx	     12059	option.c	FUNCTION_98
0x4009cbf	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
0x4009cc0	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x4009cc2	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
clear_termoptions	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,5:WHILE,0	12
0x4004b8b	        0x4883ec08	                              sub rsp, 8	     10278	option.c	FUNCTION_69
0x4004b8f	      0xbf00000000	                              mov edi, 0	     10285	option.c	FUNCTION_69	CALL_1
0x4004b94	      0xe800000000	                          call 0x4004b99	     10285	option.c	FUNCTION_69	CALL_1
0x4004b99	      0xbf03000000	                              mov edi, 3	     10288	option.c	FUNCTION_69	CALL_2
0x4004b9e	      0xe800000000	                          call 0x4004ba3	     10288	option.c	FUNCTION_69	CALL_2
0x4004ba3	    0x833d00000000	               cmp dword [0x04004baa], 0	     10293	option.c	FUNCTION_69	IF_1
0x4004baa	            0x7405	                            je 0x4004bb1	     10293	option.c	FUNCTION_69	IF_1
0x4004bac	      0xe800000000	                          call 0x4004bb1	     10294	option.c	FUNCTION_69	CALL_3
0x4004bb1	      0xe800000000	                          call 0x4004bb6	     10296	option.c	FUNCTION_69	CALL_4
0x4004bb6	      0xe800000000	                          call 0x4004bbb	     10298	option.c	FUNCTION_69	CALL_5
0x4004bbb	        0x4883c408	                              add rsp, 8	     10299	option.c	FUNCTION_69
0x4004bbf	              0xc3	                                     ret	     10299	option.c	FUNCTION_69
valid_filetype	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,2:WHILE,0	26
0x4000587	              0x53	                                push rbx	      6017	option.c	FUNCTION_39
0x4000588	          0x4889fb	                            mov rbx, rdi	      6017	option.c	FUNCTION_39
0x400058b	            0xeb2f	                           jmp 0x40005bc	      6020	option.c	FUNCTION_39	FOR_1
0x400058d	          0x4088f0	                             mov al, sil	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4000590	          0x83e0df	                     and eax, 0xffffffdf	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4000593	          0x83e841	                           sub eax, 0x41	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4000596	            0x3c19	                            cmp al, 0x19	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x4000598	            0x761f	                           jbe 0x40005b9	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400059a	        0x400fb6c6	                          movzx eax, sil	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x400059e	          0x83e830	                           sub eax, 0x30	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005a1	          0x83f809	                              cmp eax, 9	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005a4	            0x7613	                           jbe 0x40005b9	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005a6	        0x400fb6f6	                          movzx esi, sil	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005aa	      0xbf00000000	                              mov edi, 0	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005af	      0xe800000000	                          call 0x40005b4	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005b4	          0x4885c0	                           test rax, rax	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005b7	            0x7412	                            je 0x40005cb	      6021	option.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x40005b9	          0x48ffc3	                                 inc rbx	      6020	option.c	FUNCTION_39	FOR_1
0x40005bc	          0x408a33	                     mov sil, byte [rbx]	      6020	option.c	FUNCTION_39	FOR_1
0x40005bf	          0x4084f6	                           test sil, sil	      6020	option.c	FUNCTION_39	FOR_1
0x40005c2	            0x75c9	                           jne 0x400058d	      6020	option.c	FUNCTION_39	FOR_1
0x40005c4	      0xb801000000	                              mov eax, 1	      6023	option.c	FUNCTION_39
0x40005c9	            0xeb05	                           jmp 0x40005d0	      6023	option.c	FUNCTION_39
0x40005cb	      0xb800000000	                              mov eax, 0	      6022	option.c	FUNCTION_39	FOR_1	IF_1
0x40005d0	              0x5b	                                 pop rbx	      6024	option.c	FUNCTION_39
0x40005d1	              0xc3	                                     ret	      6024	option.c	FUNCTION_39
check_options	SWITCH,0:functions,0:ELSE,0:FOR,1:IF,1:DO,0:CALL,2:WHILE,0	17
0x40037ac	    0x48833d000000	               cmp qword [0x040037b4], 0	      5637	option.c	FUNCTION_28	FOR_1
0x40037b4	            0x742e	                            je 0x40037e4	      5637	option.c	FUNCTION_28	FOR_1
0x40037b6	              0x53	                                push rbx	      5634	option.c	FUNCTION_28
0x40037b7	      0xbb00000000	                              mov ebx, 0	      5634	option.c	FUNCTION_28
0x40037bc	          0x4889df	                            mov rdi, rbx	      5634	option.c	FUNCTION_28
0x40037bf	        0xf6431004	               test byte [rbx + 0x10], 4	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x40037c3	            0x7414	                            je 0x40037d9	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x40037c5	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x40037ca	            0x740d	                            je 0x40037d9	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x40037cc	      0xe895ceffff	                       call sym.get_varp	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x40037d1	          0x4889c7	                            mov rdi, rax	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x40037d4	      0xe867c8ffff	            call sym.check_string_option	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x40037d9	        0x4883c340	                           add rbx, 0x40	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x40037dd	        0x48833b00	                      cmp qword [rbx], 0	      5637	option.c	FUNCTION_28	FOR_1
0x40037e1	            0x75d9	                           jne 0x40037bc	      5637	option.c	FUNCTION_28	FOR_1
0x40037e3	              0x5b	                                 pop rbx	      5640	option.c	FUNCTION_28
0x40037e4	            0xf3c3	                                     ret	      5640	option.c	FUNCTION_28
check_stl_option	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,14:DO,0:CALL,7:WHILE,5	123
0x400430f	            0x4154	                                push r12	      7877	option.c	FUNCTION_44
0x4004311	              0x55	                                push rbp	      7877	option.c	FUNCTION_44
0x4004312	              0x53	                                push rbx	      7877	option.c	FUNCTION_44
0x4004313	          0x4889fb	                            mov rbx, rdi	      7877	option.c	FUNCTION_44
0x4004316	    0x41bc00000000	                             mov r12d, 0	      7879	option.c	FUNCTION_44
0x400431c	      0xbd00000000	                              mov ebp, 0	      7878	option.c	FUNCTION_44
0x4004321	      0xe915010000	                           jmp 0x400443b	      7882	option.c	FUNCTION_44	WHILE_1
0x4004326	        0x4883c301	                              add rbx, 1	      7886	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x400432a	           0xfb603	                   movzx eax, byte [rbx]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x400432d	            0x84c0	                             test al, al	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x400432f	            0x7404	                            je 0x4004335	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004331	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004333	            0x75f1	                           jne 0x4004326	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004335	            0x84c0	                             test al, al	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4004337	     0xf8424010000	                            je 0x4004461	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x400433d	         0xfb65301	               movzx edx, byte [rbx + 1]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004341	          0x8d42db	                   lea eax, [rdx - 0x25]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004344	      0x25fb000000	                           and eax, 0xfb	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004349	            0x3c01	                               cmp al, 1	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x400434b	          0x83ddff	             sbb ebp, 0xffffffffffffffff	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x400434e	          0x8d42c4	                   lea eax, [rdx - 0x3c]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004351	            0x3c01	                               cmp al, 1	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004353	            0x7605	                           jbe 0x400435a	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004355	          0x80fa25	                            cmp dl, 0x25	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004358	            0x7509	                           jne 0x4004363	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x400435a	        0x4883c302	                              add rbx, 2	      7894	option.c	FUNCTION_44	WHILE_1	IF_3
0x400435e	      0xe9d8000000	                           jmp 0x400443b	      7895	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004363	          0x80fa29	                            cmp dl, 0x29	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004366	            0x7513	                           jne 0x400437b	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004368	        0x4183ec01	                             sub r12d, 1	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x400436c	     0xf88ef000000	                            js 0x4004461	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4004372	        0x4883c302	                              add rbx, 2	      7899	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004376	      0xe9c0000000	                           jmp 0x400443b	      7899	option.c	FUNCTION_44	WHILE_1	IF_4
0x400437b	        0x488d4301	                      lea rax, [rbx + 1]	      7889	option.c	FUNCTION_44	WHILE_1
0x400437f	        0x4883c302	                              add rbx, 2	      7889	option.c	FUNCTION_44	WHILE_1
0x4004383	          0x80fa2d	                            cmp dl, 0x2d	      7889	option.c	FUNCTION_44	WHILE_1
0x4004386	        0x480f45d8	                         cmovne rbx, rax	      7889	option.c	FUNCTION_44	WHILE_1
0x400438a	           0xfb613	                   movzx edx, byte [rbx]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x400438d	           0xfb6c2	                           movzx eax, dl	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004390	          0x83e830	                           sub eax, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004393	          0x83f809	                              cmp eax, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004396	            0x7712	                            ja 0x40043aa	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004398	        0x4883c301	                              add rbx, 1	      7907	option.c	FUNCTION_44	WHILE_1	WHILE_3
0x400439c	           0xfb613	                   movzx edx, byte [rbx]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x400439f	           0xfb6c2	                           movzx eax, dl	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40043a2	          0x83e830	                           sub eax, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40043a5	          0x83f809	                              cmp eax, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40043a8	            0x76ee	                           jbe 0x4004398	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40043aa	          0x80fa2a	                            cmp dl, 0x2a	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x40043ad	     0xf8488000000	                            je 0x400443b	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x40043b3	          0x80fa2e	                            cmp dl, 0x2e	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x40043b6	            0x7525	                           jne 0x40043dd	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x40043b8	        0x488d5301	                      lea rdx, [rbx + 1]	      7912	option.c	FUNCTION_44	WHILE_1	IF_8
0x40043bc	         0xfb64301	               movzx eax, byte [rbx + 1]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043c0	          0x83e830	                           sub eax, 0x30	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043c3	            0x3c09	                               cmp al, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043c5	            0x7713	                            ja 0x40043da	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043c7	          0x4889d3	                            mov rbx, rdx	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043ca	        0x4883c301	                              add rbx, 1	      7914	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4
0x40043ce	           0xfb603	                   movzx eax, byte [rbx]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043d1	          0x83e830	                           sub eax, 0x30	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043d4	            0x3c09	                               cmp al, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043d6	            0x76f2	                           jbe 0x40043ca	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043d8	            0xeb03	                           jmp 0x40043dd	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40043da	          0x4889d3	                            mov rbx, rdx	      7912	option.c	FUNCTION_44	WHILE_1	IF_8
0x40043dd	           0xfb603	                   movzx eax, byte [rbx]	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x40043e0	            0x3c28	                            cmp al, 0x28	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x40043e2	            0x7506	                           jne 0x40043ea	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x40043e4	        0x4183c401	                             add r12d, 1	      7918	option.c	FUNCTION_44	WHILE_1	IF_9
0x40043e8	            0xeb51	                           jmp 0x400443b	      7919	option.c	FUNCTION_44	WHILE_1	IF_9
0x40043ea	           0xfb6f0	                           movzx esi, al	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x40043ed	      0xbf00000000	                              mov edi, 0	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x40043f2	      0xe800000000	                          call 0x40043f7	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x40043f7	          0x4885c0	                           test rax, rax	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x40043fa	            0x750f	                           jne 0x400440b	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x40043fc	           0xfb633	                   movzx esi, byte [rbx]	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x40043ff	      0xbf00000000	                              mov edi, 0	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4004404	      0xe8aee1ffff	                   call sym.illegal_char	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4004409	            0xeb78	                           jmp 0x4004483	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x400440b	          0x803b7b	                    cmp byte [rbx], 0x7b	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x400440e	            0x752b	                           jne 0x400443b	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004410	        0x488d5301	                      lea rdx, [rbx + 1]	      7927	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004414	         0xfb64301	               movzx eax, byte [rbx + 1]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004418	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400441a	            0x7418	                            je 0x4004434	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400441c	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400441e	            0x7414	                            je 0x4004434	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004420	        0x4883c201	                              add rdx, 1	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004424	           0xfb602	                   movzx eax, byte [rdx]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004427	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004429	            0x7404	                            je 0x400442f	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400442b	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400442d	            0x75f1	                           jne 0x4004420	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400442f	          0x4889d3	                            mov rbx, rdx	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004432	            0xeb03	                           jmp 0x4004437	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004434	          0x4889d3	                            mov rbx, rdx	      7927	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004437	            0x3c7d	                            cmp al, 0x7d	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004439	            0x7543	                           jne 0x400447e	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x400443b	           0xfb603	                   movzx eax, byte [rbx]	      7882	option.c	FUNCTION_44	WHILE_1
0x400443e	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x4004440	           0xf95c2	                                setne dl	      7882	option.c	FUNCTION_44	WHILE_1
0x4004443	          0x83fd4f	                           cmp ebp, 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x4004446	            0x7f19	                            jg 0x4004461	      7882	option.c	FUNCTION_44	WHILE_1
0x4004448	            0x84d2	                             test dl, dl	      7882	option.c	FUNCTION_44	WHILE_1
0x400444a	            0x7415	                            je 0x4004461	      7882	option.c	FUNCTION_44	WHILE_1
0x400444c	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x400444e	     0xf84e1feffff	                            je 0x4004335	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004454	            0x84d2	                             test dl, dl	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004456	     0xf85cafeffff	                           jne 0x4004326	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x400445c	      0xe9d4feffff	                           jmp 0x4004335	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004461	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x4004466	          0x83fd4f	                           cmp ebp, 0x4f	      7934	option.c	FUNCTION_44	IF_13
0x4004469	            0x7f18	                            jg 0x4004483	      7934	option.c	FUNCTION_44	IF_13
0x400446b	          0x4585e4	                         test r12d, r12d	      7938	option.c	FUNCTION_44
0x400446e	      0xba00000000	                              mov edx, 0	      7938	option.c	FUNCTION_44
0x4004473	      0xb800000000	                              mov eax, 0	      7938	option.c	FUNCTION_44
0x4004478	        0x480f44c2	                          cmove rax, rdx	      7938	option.c	FUNCTION_44
0x400447c	            0xeb05	                           jmp 0x4004483	      7938	option.c	FUNCTION_44
0x400447e	      0xb800000000	                              mov eax, 0	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x4004483	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x4004484	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x4004485	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4004487	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
set_num_option	SWITCH,0:functions,0:ELSE,36:FOR,0:IF,99:DO,0:CALL,53:WHILE,0	684
0x4009e08	            0x4157	                                push r15	      8764	option.c	FUNCTION_50
0x4009e0a	            0x4156	                                push r14	      8764	option.c	FUNCTION_50
0x4009e0c	            0x4155	                                push r13	      8764	option.c	FUNCTION_50
0x4009e0e	            0x4154	                                push r12	      8764	option.c	FUNCTION_50
0x4009e10	              0x55	                                push rbp	      8764	option.c	FUNCTION_50
0x4009e11	              0x53	                                push rbx	      8764	option.c	FUNCTION_50
0x4009e12	        0x4883ec78	                           sub rsp, 0x78	      8764	option.c	FUNCTION_50
0x4009e16	            0x89fd	                            mov ebp, edi	      8764	option.c	FUNCTION_50
0x4009e18	          0x4889f3	                            mov rbx, rsi	      8764	option.c	FUNCTION_50
0x4009e1b	        0x48891424	                    mov qword [rsp], rdx	      8764	option.c	FUNCTION_50
0x4009e1f	      0x48894c2408	                mov qword [rsp + 8], rcx	      8764	option.c	FUNCTION_50
0x4009e24	      0x4c89442410	              mov qword [rsp + 0x10], r8	      8764	option.c	FUNCTION_50
0x4009e29	          0x4589cd	                           mov r13d, r9d	      8764	option.c	FUNCTION_50
0x4009e2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      8764	option.c	FUNCTION_50
0x4009e35	      0x4889442468	             mov qword [rsp + 0x68], rax	      8764	option.c	FUNCTION_50
0x4009e3a	            0x31c0	                            xor eax, eax	      8764	option.c	FUNCTION_50
0x4009e3c	    0x833d00000000	               cmp dword [0x04009e43], 0	      8772	option.c	FUNCTION_50	IF_1
0x4009e43	            0x7509	                           jne 0x4009e4e	      8772	option.c	FUNCTION_50	IF_1
0x4009e45	    0x833d00000000	               cmp dword [0x04009e4c], 0	      8774	option.c	FUNCTION_50	IF_1
0x4009e4c	            0x7419	                            je 0x4009e67	      8774	option.c	FUNCTION_50	IF_1
0x4009e4e	          0x4863d5	                         movsxd rdx, ebp	      8776	option.c	FUNCTION_50	IF_1
0x4009e51	        0x48c1e206	                              shl rdx, 6	      8776	option.c	FUNCTION_50	IF_1
0x4009e55	      0xb800000000	                              mov eax, 0	      8777	option.c	FUNCTION_50	IF_1
0x4009e5a	    0xf68200000000	                      test byte [rdx], 8	      8776	option.c	FUNCTION_50	IF_1
0x4009e61	     0xf85d20c0000	                           jne 0x400ab39	      8776	option.c	FUNCTION_50	IF_1
0x4009e67	          0x488b03	                    mov rax, qword [rbx]	      8766	option.c	FUNCTION_50
0x4009e6a	      0x4889442418	             mov qword [rsp + 0x18], rax	      8766	option.c	FUNCTION_50
0x4009e6f	    0x4c8b35000000	            mov r14, qword [0x04009e76] 	      8767	option.c	FUNCTION_50
0x4009e76	    0x488b05000000	            mov rax, qword [0x04009e7d] 	      8768	option.c	FUNCTION_50
0x4009e7d	      0x4889442420	             mov qword [rsp + 0x20], rax	      8768	option.c	FUNCTION_50
0x4009e82	        0x488b0424	                    mov rax, qword [rsp]	      8779	option.c	FUNCTION_50
0x4009e86	          0x488903	                    mov qword [rbx], rax	      8779	option.c	FUNCTION_50
0x4009e89	    0x8b1500000000	            mov edx, dword [0x04009e8f] 	      8782	option.c	FUNCTION_50	CALL_1
0x4009e8f	          0x4489ee	                           mov esi, r13d	      8782	option.c	FUNCTION_50	CALL_1
0x4009e92	            0x89ef	                            mov edi, ebp	      8782	option.c	FUNCTION_50	CALL_1
0x4009e94	      0xe8e262ffff	        call sym.set_option_scriptID_idx	      8782	option.c	FUNCTION_50	CALL_1
0x4009e99	    0xc70500000000	               mov dword [0x04009ea3], 1	      8785	option.c	FUNCTION_50
0x4009ea3	    0x488b05000000	            mov rax, qword [0x04009eaa] 	      8788	option.c	FUNCTION_50	IF_2
0x4009eaa	    0x41bc00000000	                             mov r12d, 0	      8765	option.c	FUNCTION_50
0x4009eb0	    0x4883b8681500	             cmp qword [rax + 0x1568], 0	      8788	option.c	FUNCTION_50	IF_2
0x4009eb8	            0x7914	                           jns 0x4009ece	      8788	option.c	FUNCTION_50	IF_2
0x4009eba	    0x488b90a81500	          mov rdx, qword [rax + 0x15a8] 	      8791	option.c	FUNCTION_50	IF_2
0x4009ec1	    0x488990681500	          mov qword [rax + 0x1568], rdx 	      8791	option.c	FUNCTION_50	IF_2
0x4009ec8	    0x41bc00000000	                             mov r12d, 0	      8790	option.c	FUNCTION_50	IF_2
0x4009ece	    0x4881fb000000	                              cmp rbx, 0	      8797	option.c	FUNCTION_50	IF_3
0x4009ed5	            0x740d	                            je 0x4009ee4	      8797	option.c	FUNCTION_50	IF_3
0x4009ed7	    0x4881fb000000	                              cmp rbx, 0	      8797	option.c	FUNCTION_50	IF_3
0x4009ede	     0xf85d8000000	                           jne 0x4009fbc	      8797	option.c	FUNCTION_50	IF_3
0x4009ee4	    0x48833d000000	               cmp qword [0x04009eec], 0	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4009eec	            0x7f11	                            jg 0x4009eff	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4009eee	    0x48c705000000	               mov qword [0x04009ef9], 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x4009ef9	    0x41bc00000000	                             mov r12d, 0	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x4009eff	    0x488b05000000	            mov rax, qword [0x04009f06] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4009f06	    0x483b05000000	            cmp rax, qword [0x04009f0d] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4009f0d	            0x7e0d	                           jle 0x4009f1c	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4009f0f	    0x488905000000	            mov qword [0x04009f16], rax 	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x4009f16	    0x41bc00000000	                             mov r12d, 0	      8806	option.c	FUNCTION_50	IF_3	IF_5
0x4009f1c	    0x48833d000000	               cmp qword [0x04009f24], 0	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4009f24	            0x7911	                           jns 0x4009f37	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4009f26	    0x48c705000000	               mov qword [0x04009f31], 0	      8812	option.c	FUNCTION_50	IF_3	IF_6
0x4009f31	    0x41bc00000000	                             mov r12d, 0	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x4009f37	    0x488b05000000	            mov rax, qword [0x04009f3e] 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4009f3e	    0x483905000000	            cmp qword [0x04009f45], rax 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4009f45	     0xf84f9060000	                            je 0x400a644	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4009f4b	    0x4881fb000000	                              cmp rbx, 0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f52	            0x751f	                           jne 0x4009f73	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f54	    0x488b3d000000	            mov rdi, qword [0x04009f5b] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f5b	    0x488b05000000	            mov rax, qword [0x04009f62] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f62	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f69	          0x4839f8	                            cmp rax, rdi	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f6c	            0x7d05	                           jge 0x4009f73	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4009f6e	      0xe800000000	                          call 0x4009f73	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x4009f73	    0x4881fb000000	                              cmp rbx, 0	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f7a	     0xf85c4060000	                           jne 0x400a644	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f80	    0x488b05000000	            mov rax, qword [0x04009f87] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f87	    0x83b858170000	             cmp dword [rax + 0x1758], 0	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f8e	     0xf84b0060000	                            je 0x400a644	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f94	    0x488b3d000000	            mov rdi, qword [0x04009f9b] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009f9b	    0x488b05000000	            mov rax, qword [0x04009fa2] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009fa2	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009fa9	          0x4839f8	                            cmp rax, rdi	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009fac	     0xf8d92060000	                           jge 0x400a644	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4009fb2	      0xe800000000	                          call 0x4009fb7	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x4009fb7	      0xe988060000	                           jmp 0x400a644	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x4009fbc	    0x4881fb000000	                              cmp rbx, 0	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x4009fc3	            0x7542	                           jne 0x400a007	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x4009fc5	    0x48833d000000	               cmp qword [0x04009fcd], 0	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4009fcd	            0x7911	                           jns 0x4009fe0	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4009fcf	    0x48c705000000	               mov qword [0x04009fda], 0	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4009fda	    0x41bc00000000	                             mov r12d, 0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4009fe0	    0x488b05000000	            mov rax, qword [0x04009fe7] 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4009fe7	    0x483905000000	            cmp qword [0x04009fee], rax 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4009fee	            0x7e0d	                           jle 0x4009ffd	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4009ff0	    0x488905000000	            mov qword [0x04009ff7], rax 	      8836	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4009ff7	    0x41bc00000000	                             mov r12d, 0	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4009ffd	      0xe800000000	                          call 0x400a002	      8838	option.c	FUNCTION_50	ELSE_1	IF_10	CALL_4
0x400a002	      0xe93d060000	                           jmp 0x400a644	      8838	option.c	FUNCTION_50	ELSE_1	IF_10	CALL_4
0x400a007	    0x4881fb000000	                              cmp rbx, 0	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x400a00e	            0x7574	                           jne 0x400a084	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x400a010	    0x48833d000000	               cmp qword [0x0400a018], 0	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a018	            0x7f11	                            jg 0x400a02b	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a01a	    0x48c705000000	               mov qword [0x0400a025], 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a025	    0x41bc00000000	                             mov r12d, 0	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400a02b	    0x488b05000000	            mov rax, qword [0x0400a032] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a032	    0x483b05000000	            cmp rax, qword [0x0400a039] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a039	            0x7e0d	                           jle 0x400a048	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a03b	    0x488905000000	            mov qword [0x0400a042], rax 	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a042	    0x41bc00000000	                             mov r12d, 0	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400a048	    0x488b05000000	            mov rax, qword [0x0400a04f] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a04f	    0x483905000000	            cmp qword [0x0400a056], rax 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a056	     0xf84e8050000	                            je 0x400a644	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a05c	    0x488b3d000000	            mov rdi, qword [0x0400a063] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a063	    0x488b05000000	            mov rax, qword [0x0400a06a] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a06a	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a071	          0x4839f8	                            cmp rax, rdi	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a074	     0xf8dca050000	                           jge 0x400a644	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400a07a	      0xe800000000	                          call 0x400a07f	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a07f	      0xe9c0050000	                           jmp 0x400a644	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x400a084	    0x4881fb000000	                              cmp rbx, 0	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400a08b	            0x7542	                           jne 0x400a0cf	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400a08d	    0x48833d000000	               cmp qword [0x0400a095], 0	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a095	            0x7911	                           jns 0x400a0a8	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a097	    0x48c705000000	               mov qword [0x0400a0a2], 0	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a0a2	    0x41bc00000000	                             mov r12d, 0	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400a0a8	    0x488b05000000	            mov rax, qword [0x0400a0af] 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a0af	    0x483905000000	            cmp qword [0x0400a0b6], rax 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a0b6	            0x7e0d	                           jle 0x400a0c5	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a0b8	    0x488905000000	            mov qword [0x0400a0bf], rax 	      8869	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a0bf	    0x41bc00000000	                             mov r12d, 0	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x400a0c5	      0xe800000000	                          call 0x400a0ca	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x400a0ca	      0xe975050000	                           jmp 0x400a644	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x400a0cf	    0x4881fb000000	                              cmp rbx, 0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x400a0d6	            0x750f	                           jne 0x400a0e7	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x400a0d8	      0xbf00000000	                              mov edi, 0	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a0dd	      0xe800000000	                          call 0x400a0e2	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a0e2	      0xe95d050000	                           jmp 0x400a644	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x400a0e7	    0x4881fb000000	                              cmp rbx, 0	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x400a0ee	            0x750a	                           jne 0x400a0fa	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x400a0f0	      0xe800000000	                          call 0x400a0f5	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400a0f5	      0xe94a050000	                           jmp 0x400a644	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400a0fa	    0x4881fb000000	                              cmp rbx, 0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x400a101	            0x7534	                           jne 0x400a137	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x400a103	    0x833d00000000	               cmp dword [0x0400a10a], 0	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a10a	     0xf8434050000	                            je 0x400a644	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a110	      0xe800000000	                          call 0x400a115	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a115	          0x83f801	                              cmp eax, 1	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a118	     0xf8526050000	                           jne 0x400a644	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400a11e	      0xba01000000	                              mov edx, 1	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a123	      0xbe00000000	                              mov esi, 0	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a128	      0xbf00000000	                              mov edi, 0	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a12d	      0xe800000000	                          call 0x400a132	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a132	      0xe90d050000	                           jmp 0x400a644	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400a137	    0x488b3d000000	            mov rdi, qword [0x0400a13e] 	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a13e	    0x488d97e80100	                  lea rdx, [rdi + 0x1e8]	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a145	          0x4839d3	                            cmp rbx, rdx	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a148	            0x751f	                           jne 0x400a169	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x400a14a	    0x4883bfe80100	              cmp qword [rdi + 0x1e8], 0	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a152	            0x790b	                           jns 0x400a15f	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a154	    0x48c787e80100	              mov qword [rdi + 0x1e8], 0	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400a15f	      0xe800000000	                          call 0x400a164	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x400a164	      0xe9db040000	                           jmp 0x400a644	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x400a169	    0x488d97080200	                  lea rdx, [rdi + 0x208]	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a170	          0x4839d3	                            cmp rbx, rdx	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a173	            0x750a	                           jne 0x400a17f	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x400a175	      0xe800000000	                          call 0x400a17a	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a17a	      0xe9c5040000	                           jmp 0x400a644	      8908	option.c	FUNCTION_50	ELSE_8	IF_26	CALL_12
0x400a17f	    0x488d97100200	                  lea rdx, [rdi + 0x210]	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a186	          0x4839d3	                            cmp rbx, rdx	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a189	            0x752e	                           jne 0x400a1b9	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x400a18b	      0xe800000000	                          call 0x400a190	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a190	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a192	            0x7514	                           jne 0x400a1a8	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a194	    0x488b3d000000	            mov rdi, qword [0x0400a19b] 	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a19b	      0xe800000000	                          call 0x400a1a0	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a1a0	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a1a2	     0xf849c040000	                            je 0x400a644	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x400a1a8	    0x488b3d000000	            mov rdi, qword [0x0400a1af] 	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a1af	      0xe800000000	                          call 0x400a1b4	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a1b4	      0xe98b040000	                           jmp 0x400a644	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x400a1b9	    0x488d97c80100	                  lea rdx, [rdi + 0x1c8]	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a1c0	          0x4839d3	                            cmp rbx, rdx	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a1c3	            0x7542	                           jne 0x400a207	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400a1c5	    0x488b87c80100	           mov rax, qword [rdi + 0x1c8] 	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1cc	          0x4885c0	                           test rax, rax	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1cf	            0x7916	                           jns 0x400a1e7	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1d1	    0x48c787c80100	              mov qword [rdi + 0x1c8], 0	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1dc	    0x41bc00000000	                             mov r12d, 0	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1e2	      0xe95d040000	                           jmp 0x400a644	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400a1e7	        0x4883f80c	                            cmp rax, 0xc	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a1eb	     0xf8e53040000	                           jle 0x400a644	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a1f1	    0x48c787c80100	           mov qword [rdi + 0x1c8], 0xc 	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a1fc	    0x41bc00000000	                             mov r12d, 0	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a202	      0xe93d040000	                           jmp 0x400a644	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400a207	    0x488d90681500	                 lea rdx, [rax + 0x1568]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a20e	          0x4839d3	                            cmp rbx, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a211	            0x740c	                            je 0x400a21f	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a213	    0x488d90a81500	                 lea rdx, [rax + 0x15a8]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a21a	          0x4839d3	                            cmp rbx, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a21d	            0x7540	                           jne 0x400a25f	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400a21f	      0xe800000000	                          call 0x400a224	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a224	            0x85c0	                           test eax, eax	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a226	            0x740c	                            je 0x400a234	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400a228	    0x488b3d000000	            mov rdi, qword [0x0400a22f] 	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400a22f	      0xe800000000	                          call 0x400a234	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400a234	    0x488b3d000000	            mov rdi, qword [0x0400a23b] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a23b	    0x488d87681500	                 lea rax, [rdi + 0x1568]	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a242	          0x4839c3	                            cmp rbx, rax	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a245	            0x740e	                            je 0x400a255	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a247	    0x4883bf681500	             cmp qword [rdi + 0x1568], 0	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a24f	     0xf85ef030000	                           jne 0x400a644	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400a255	      0xe800000000	                          call 0x400a25a	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400a25a	      0xe9e5030000	                           jmp 0x400a644	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400a25f	    0x4881fb000000	                              cmp rbx, 0	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400a266	            0x7534	                           jne 0x400a29c	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400a268	    0x488b05000000	            mov rax, qword [0x0400a26f] 	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a26f	        0x4883f806	                              cmp rax, 6	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a273	            0x7e0d	                           jle 0x400a282	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a275	    0x48c705000000	               mov qword [0x0400a280], 6	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a280	            0xeb10	                           jmp 0x400a292	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400a282	          0x4885c0	                           test rax, rax	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a285	            0x790b	                           jns 0x400a292	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a287	    0x48c705000000	               mov qword [0x0400a292], 0	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x400a292	      0xe800000000	                          call 0x400a297	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x400a297	      0xe9a8030000	                           jmp 0x400a644	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x400a29c	    0x488d90781200	                 lea rdx, [rax + 0x1278]	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a2a3	          0x4839d3	                            cmp rbx, rdx	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a2a6	            0x7541	                           jne 0x400a2e9	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a2a8	    0x4883b8781200	            cmp qword [rax + 0x1278], 2 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a2b0	            0x7611	                           jbe 0x400a2c3	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a2b2	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a2bd	    0x41bc00000000	                             mov r12d, 0	      8967	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400a2c3	    0x488b80781200	          mov rax, qword [rax + 0x1278] 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a2ca	    0x488905000000	            mov qword [0x0400a2d1], rax 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400a2d1	    0x833d00000000	               cmp dword [0x0400a2d8], 0	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400a2d8	            0x7405	                            je 0x400a2df	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400a2da	      0xe800000000	                          call 0x400a2df	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x400a2df	      0xe800000000	                          call 0x400a2e4	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400a2e4	      0xe95b030000	                           jmp 0x400a644	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400a2e9	    0x4881fb000000	                              cmp rbx, 0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400a2f0	            0x7516	                           jne 0x400a308	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400a2f2	    0x48833d000000	               cmp qword [0x0400a2fa], 2	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a2fa	      0xb800000000	                              mov eax, 0	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a2ff	        0x4c0f43e0	                         cmovae r12, rax	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a303	      0xe93c030000	                           jmp 0x400a644	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x400a308	    0x4881fb000000	                              cmp rbx, 0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x400a30f	            0x753c	                           jne 0x400a34d	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x400a311	    0x488b05000000	            mov rax, qword [0x0400a318] 	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a318	          0x4885c0	                           test rax, rax	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a31b	            0x7f10	                            jg 0x400a32d	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a31d	    0x48c705000000	               mov qword [0x0400a328], 1	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a328	      0xe917030000	                           jmp 0x400a644	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400a32d	    0x488b15000000	            mov rdx, qword [0x0400a334] 	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a334	          0x4839d0	                            cmp rax, rdx	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a337	     0xf8c07030000	                            jl 0x400a644	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a33d	        0x4883ea01	                              sub rdx, 1	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a341	    0x488915000000	            mov qword [0x0400a348], rdx 	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a348	      0xe9f7020000	                           jmp 0x400a644	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x400a34d	    0x488d90801200	                 lea rdx, [rax + 0x1280]	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a354	          0x4839d3	                            cmp rbx, rdx	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a357	            0x7535	                           jne 0x400a38e	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a359	    0x488b88801200	          mov rcx, qword [rax + 0x1280] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a360	        0x488d5101	                      lea rdx, [rcx + 1]	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a364	        0x4883fa03	                              cmp rdx, 3	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a368	            0x7611	                           jbe 0x400a37b	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a36a	    0x48c780801200	            mov qword [rax + 0x1280], 0 	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a375	    0x41bc00000000	                             mov r12d, 0	      9000	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400a37b	    0x488b80801200	          mov rax, qword [rax + 0x1280] 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a382	    0x488905000000	            mov qword [0x0400a389], rax 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a389	      0xe9b6020000	                           jmp 0x400a644	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400a38e	    0x4881fb000000	                              cmp rbx, 0	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x400a395	            0x7549	                           jne 0x400a3e0	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x400a397	    0x48833d000000	               cmp qword [0x0400a39f], 0	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400a39f	            0x7911	                           jns 0x400a3b2	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400a3a1	    0x48c705000000	           mov qword [0x0400a3ac], 0x55 	      9013	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400a3ac	    0x41bc00000000	                             mov r12d, 0	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400a3b2	    0x833d00000000	               cmp dword [0x0400a3b9], 2	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3b9	     0xf8485020000	                            je 0x400a644	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3bf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3c4	    0x483b05000000	            cmp rax, qword [0x0400a3cb] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3cb	     0xf8473020000	                            je 0x400a644	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3d1	    0xc70500000000	               mov dword [0x0400a3db], 1	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3db	      0xe964020000	                           jmp 0x400a644	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400a3e0	    0x4881fb000000	                              cmp rbx, 0	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400a3e7	     0xf858f000000	                           jne 0x400a47c	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400a3ed	    0x48833d000000	               cmp qword [0x0400a3f5], 0	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400a3f5	            0x7f11	                            jg 0x400a408	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400a3f7	    0x48c705000000	               mov qword [0x0400a402], 1	      9026	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400a402	    0x41bc00000000	                             mov r12d, 0	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400a408	    0x4c8b3d000000	            mov r15, qword [0x0400a40f] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a40f	      0xe800000000	                          call 0x400a414	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a414	            0x4898	                                    cdqe	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a416	          0x4929c7	                            sub r15, rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a419	        0x498d4701	                      lea rax, [r15 + 1]	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a41d	    0x483b05000000	            cmp rax, qword [0x0400a424] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a424	            0x7d1f	                           jge 0x400a445	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400a426	    0x4c8b3d000000	            mov r15, qword [0x0400a42d] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a42d	      0xe800000000	                          call 0x400a432	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a432	            0x4898	                                    cdqe	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a434	          0x4929c7	                            sub r15, rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a437	          0x4c89f8	                            mov rax, r15	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a43a	        0x4883c001	                              add rax, 1	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a43e	    0x488905000000	            mov qword [0x0400a445], rax 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x400a445	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a44a	    0x483b05000000	            cmp rax, qword [0x0400a451] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a451	     0xf84ed010000	                            je 0x400a644	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a457	    0x8b0500000000	            mov eax, dword [0x0400a45d] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a45d	            0x85c0	                           test eax, eax	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a45f	     0xf84df010000	                            je 0x400a644	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a465	    0x833d00000000	               cmp dword [0x0400a46c], 0	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a46c	     0xf85d2010000	                           jne 0x400a644	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x400a472	      0xe800000000	                          call 0x400a477	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x400a477	      0xe9c8010000	                           jmp 0x400a644	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x400a47c	    0x4881fb000000	                              cmp rbx, 0	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400a483	            0x753f	                           jne 0x400a4c4	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400a485	    0x48833d000000	               cmp qword [0x0400a48d], 0	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400a48d	            0x7911	                           jns 0x400a4a0	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400a48f	    0x48c705000000	           mov qword [0x0400a49a], 0x64 	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400a49a	    0x41bc00000000	                             mov r12d, 0	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400a4a0	    0x48833d000000	               cmp qword [0x0400a4a8], 0	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400a4a8	     0xf8496010000	                            je 0x400a644	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400a4ae	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400a4b4	     0xf858a010000	                           jne 0x400a644	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x400a4ba	      0xe800000000	                          call 0x400a4bf	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400a4bf	      0xe980010000	                           jmp 0x400a644	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400a4c4	    0x488d97a80200	                  lea rdx, [rdi + 0x2a8]	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400a4cb	          0x4839d3	                            cmp rbx, rdx	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400a4ce	            0x7542	                           jne 0x400a512	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400a4d0	    0x488b87a80200	           mov rax, qword [rdi + 0x2a8] 	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4d7	          0x4885c0	                           test rax, rax	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4da	            0x7916	                           jns 0x400a4f2	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4dc	    0x48c787a80200	              mov qword [rdi + 0x2a8], 0	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4e7	    0x41bc00000000	                             mov r12d, 0	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4ed	      0xe952010000	                           jmp 0x400a644	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400a4f2	        0x4883f803	                              cmp rax, 3	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400a4f6	     0xf8e48010000	                           jle 0x400a644	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400a4fc	    0x48c787a80200	              mov qword [rdi + 0x2a8], 3	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400a507	    0x41bc00000000	                             mov r12d, 0	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400a50d	      0xe932010000	                           jmp 0x400a644	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400a512	    0x4881fb000000	                              cmp rbx, 0	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a519	            0x7526	                           jne 0x400a541	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a51b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a520	    0x488905000000	            mov qword [0x0400a527], rax 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a527	      0xbf01000000	                              mov edi, 1	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x400a52c	      0xe800000000	                          call 0x400a531	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x400a531	        0x488b0424	                    mov rax, qword [rsp]	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a535	    0x488905000000	            mov qword [0x0400a53c], rax 	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a53c	      0xe903010000	                           jmp 0x400a644	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400a541	    0x488d90481600	                 lea rdx, [rax + 0x1648]	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a548	          0x4839d3	                            cmp rbx, rdx	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a54b	            0x752d	                           jne 0x400a57a	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a54d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a552	    0x488988481600	          mov qword [rax + 0x1648], rcx 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a559	      0xbf01000000	                              mov edi, 1	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400a55e	      0xe800000000	                          call 0x400a563	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400a563	    0x488b05000000	            mov rax, qword [0x0400a56a] 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a56a	        0x488b0c24	                    mov rcx, qword [rsp]	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a56e	    0x488988481600	          mov qword [rax + 0x1648], rcx 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a575	      0xe9ca000000	                           jmp 0x400a644	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400a57a	    0x488d97400200	                  lea rdx, [rdi + 0x240]	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400a581	          0x4839d3	                            cmp rbx, rdx	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400a584	            0x7543	                           jne 0x400a5c9	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x400a586	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a58d	          0x4885c0	                           test rax, rax	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a590	            0x7f13	                            jg 0x400a5a5	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a592	    0x48c787400200	              mov qword [rdi + 0x240], 1	      9104	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a59d	    0x41bc00000000	                             mov r12d, 0	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a5a3	            0xeb17	                           jmp 0x400a5bc	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400a5a5	        0x4883f80a	                            cmp rax, 0xa	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400a5a9	            0x7e11	                           jle 0x400a5bc	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400a5ab	    0x48c787400200	            mov qword [rdi + 0x240], 0xa	      9109	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400a5b6	    0x41bc00000000	                             mov r12d, 0	      9108	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400a5bc	    0x48c787301900	            mov qword [rdi + 0x1930], 0 	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400a5c7	            0xeb7b	                           jmp 0x400a644	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400a5c9	    0x488d90b81500	                 lea rdx, [rax + 0x15b8]	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400a5d0	          0x4839d3	                            cmp rbx, rdx	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400a5d3	            0x756f	                           jne 0x400a644	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x400a5d5	    0x4883b8b81500	             cmp qword [rax + 0x15b8], 0	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400a5dd	            0x7911	                           jns 0x400a5f0	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400a5df	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      9120	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400a5ea	    0x41bc00000000	                             mov r12d, 0	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400a5f0	    0x488b05000000	            mov rax, qword [0x0400a5f7] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a5f7	      0x4889442428	             mov qword [rsp + 0x28], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a5fc	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a5ff	            0x7443	                            je 0x400a644	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a601	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a606	    0x483905000000	            cmp qword [0x0400a60d], rax 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a60d	            0x7406	                            je 0x400a615	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a60f	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a613	            0xeb07	                           jmp 0x400a61c	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a615	    0x4c8b3d000000	            mov r15, qword [0x0400a61c] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a61c	          0x4d85ff	                           test r15, r15	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a61f	            0x7411	                            je 0x400a632	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a621	          0x4c89ff	                            mov rdi, r15	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x400a624	      0xe800000000	                          call 0x400a629	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x400a629	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a62d	          0x4d85ff	                           test r15, r15	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a630	            0x75ef	                           jne 0x400a621	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a632	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a637	          0x488b00	                    mov rax, qword [rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a63a	      0x4889442428	             mov qword [rsp + 0x28], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a63f	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a642	            0x75bd	                           jne 0x400a601	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400a644	      0xe800000000	                          call 0x400a649	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a649	            0x4898	                                    cdqe	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a64b	    0x483b05000000	            cmp rax, qword [0x0400a652] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a652	            0x7e59	                           jle 0x400a6ad	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a654	    0x8b0500000000	            mov eax, dword [0x0400a65a] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a65a	            0x85c0	                           test eax, eax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a65c	            0x744f	                            je 0x400a6ad	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x400a65e	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x400a663	          0x4d85ff	                           test r15, r15	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x400a666	            0x7437	                            je 0x400a69f	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x400a668	      0xe800000000	                          call 0x400a66d	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a66d	          0x4189c4	                           mov r12d, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a670	      0xba05000000	                              mov edx, 5	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a675	      0xbe00000000	                              mov esi, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a67a	      0xbf00000000	                              mov edi, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a67f	      0xe800000000	                          call 0x400a684	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a684	          0x4489e1	                           mov ecx, r12d	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a687	          0x4889c2	                            mov rdx, rax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a68a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a68f	          0x4c89ff	                            mov rdi, r15	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a692	      0xb800000000	                              mov eax, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a697	      0xe800000000	                          call 0x400a69c	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x400a69c	          0x4d89fc	                            mov r12, r15	      9142	option.c	FUNCTION_50	IF_71	IF_72
0x400a69f	      0xe800000000	                          call 0x400a6a4	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400a6a4	            0x4898	                                    cdqe	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400a6a6	    0x488905000000	            mov qword [0x0400a6ad], rax 	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x400a6ad	    0x48833d000000	            cmp qword [0x0400a6b5], 0xb 	      9146	option.c	FUNCTION_50	IF_73
0x400a6b5	            0x7f50	                            jg 0x400a707	      9146	option.c	FUNCTION_50	IF_73
0x400a6b7	    0x8b0500000000	            mov eax, dword [0x0400a6bd] 	      9146	option.c	FUNCTION_50	IF_73
0x400a6bd	            0x85c0	                           test eax, eax	      9146	option.c	FUNCTION_50	IF_73
0x400a6bf	            0x7446	                            je 0x400a707	      9146	option.c	FUNCTION_50	IF_73
0x400a6c1	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x400a6c6	          0x4d85ff	                           test r15, r15	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x400a6c9	            0x7431	                            je 0x400a6fc	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x400a6cb	      0xba05000000	                              mov edx, 5	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6d0	      0xbe00000000	                              mov esi, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6d5	      0xbf00000000	                              mov edi, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6da	      0xe800000000	                          call 0x400a6df	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6df	      0xb90c000000	                            mov ecx, 0xc	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6e4	          0x4889c2	                            mov rdx, rax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6e7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6ec	          0x4c89ff	                            mov rdi, r15	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6ef	      0xb800000000	                              mov eax, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6f4	      0xe800000000	                          call 0x400a6f9	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x400a6f9	          0x4d89fc	                            mov r12, r15	      9152	option.c	FUNCTION_50	IF_73	IF_74
0x400a6fc	    0x48c705000000	            mov qword [0x0400a707], 0xc 	      9154	option.c	FUNCTION_50	IF_73
0x400a707	      0xe800000000	                          call 0x400a70c	      9156	option.c	FUNCTION_50	CALL_38
0x400a70c	    0x488b35000000	            mov rsi, qword [0x0400a713] 	      9162	option.c	FUNCTION_50	IF_75
0x400a713	          0x4939f6	                            cmp r14, rsi	      9162	option.c	FUNCTION_50	IF_75
0x400a716	            0x7512	                           jne 0x400a72a	      9162	option.c	FUNCTION_50	IF_75
0x400a718	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      9162	option.c	FUNCTION_50	IF_75
0x400a71d	    0x483b05000000	            cmp rax, qword [0x0400a724] 	      9162	option.c	FUNCTION_50	IF_75
0x400a724	     0xf849a000000	                            je 0x400a7c4	      9162	option.c	FUNCTION_50	IF_75
0x400a72a	    0x833d00000000	               cmp dword [0x0400a731], 0	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x400a731	            0x740a	                            je 0x400a73d	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x400a733	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400a738	          0x488903	                    mov qword [rbx], rax	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400a73b	            0xeb57	                           jmp 0x400a794	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x400a73d	    0x8b0500000000	            mov eax, dword [0x0400a743] 	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a743	            0x85c0	                           test eax, eax	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a745	            0x741b	                            je 0x400a762	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a747	    0x833d00000000	               cmp dword [0x0400a74e], 0	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a74e	            0x7512	                           jne 0x400a762	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a750	      0xba01000000	                              mov edx, 1	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a755	    0x8b3d00000000	            mov edi, dword [0x0400a75b] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a75b	      0xe800000000	                          call 0x400a760	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a760	            0xeb32	                           jmp 0x400a794	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400a762	      0xe800000000	                          call 0x400a767	      9177	option.c	FUNCTION_50	IF_75	ELSE_32	CALL_40
0x400a767	    0x488b05000000	            mov rax, qword [0x0400a76e] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a76e	    0x488b15000000	            mov rdx, qword [0x0400a775] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a775	    0x486335000000	         movsxd rsi, dword [0x0400a77c] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a77c	          0x4889c1	                            mov rcx, rax	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a77f	          0x4829d1	                            sub rcx, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a782	          0x4839ce	                            cmp rsi, rcx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a785	            0x7e0d	                           jle 0x400a794	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a787	          0x4839d0	                            cmp rax, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a78a	            0x7e08	                           jle 0x400a794	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a78c	            0x29d0	                            sub eax, edx	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a78e	    0x890500000000	            mov dword [0x0400a794], eax 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x400a794	    0x488b05000000	            mov rax, qword [0x0400a79b] 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a79b	    0x483905000000	            cmp qword [0x0400a7a2], rax 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7a2	            0x7d0e	                           jge 0x400a7b2	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7a4	      0xbf00000000	                              mov edi, 0	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7a9	      0xe800000000	                          call 0x400a7ae	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7ae	            0x85c0	                           test eax, eax	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7b0	            0x7512	                           jne 0x400a7c4	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x400a7b2	    0x488b05000000	            mov rax, qword [0x0400a7b9] 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400a7b9	        0x4883e801	                              sub rax, 1	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400a7bd	    0x488905000000	            mov qword [0x0400a7c4], rax 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x400a7c4	    0x488b05000000	            mov rax, qword [0x0400a7cb] 	      9185	option.c	FUNCTION_50	IF_80
0x400a7cb	    0x4883b8a81500	             cmp qword [rax + 0x15a8], 0	      9185	option.c	FUNCTION_50	IF_80
0x400a7d3	            0x7f11	                            jg 0x400a7e6	      9185	option.c	FUNCTION_50	IF_80
0x400a7d5	    0x48c780a81500	            mov qword [rax + 0x15a8], 8 	      9188	option.c	FUNCTION_50	IF_80
0x400a7e0	    0x41bc00000000	                             mov r12d, 0	      9187	option.c	FUNCTION_50	IF_80
0x400a7e6	    0x48833d000000	               cmp qword [0x0400a7ee], 0	      9190	option.c	FUNCTION_50	IF_81
0x400a7ee	            0x7911	                           jns 0x400a801	      9190	option.c	FUNCTION_50	IF_81
0x400a7f0	    0x48c705000000	               mov qword [0x0400a7fb], 0	      9193	option.c	FUNCTION_50	IF_81
0x400a7fb	    0x41bc00000000	                             mov r12d, 0	      9192	option.c	FUNCTION_50	IF_81
0x400a801	    0x488b3d000000	            mov rdi, qword [0x0400a808] 	      9195	option.c	FUNCTION_50	IF_82
0x400a808	    0x488b97600200	           mov rdx, qword [rdi + 0x260] 	      9195	option.c	FUNCTION_50	IF_82
0x400a80f	          0x4885d2	                           test rdx, rdx	      9195	option.c	FUNCTION_50	IF_82
0x400a812	            0x7e11	                           jle 0x400a825	      9195	option.c	FUNCTION_50	IF_82
0x400a814	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	      9196	option.c	FUNCTION_50	IF_82
0x400a81a	            0x85c0	                           test eax, eax	      9197	option.c	FUNCTION_50	IF_82
0x400a81c	            0x7e50	                           jle 0x400a86e	      9197	option.c	FUNCTION_50	IF_82
0x400a81e	            0x4898	                                    cdqe	      9197	option.c	FUNCTION_50	IF_82
0x400a820	          0x4839c2	                            cmp rdx, rax	      9197	option.c	FUNCTION_50	IF_82
0x400a823	            0x7e49	                           jle 0x400a86e	      9197	option.c	FUNCTION_50	IF_82
0x400a825	    0x8b0500000000	            mov eax, dword [0x0400a82b] 	      9198	option.c	FUNCTION_50	IF_82
0x400a82b	            0x85c0	                           test eax, eax	      9198	option.c	FUNCTION_50	IF_82
0x400a82d	            0x743f	                            je 0x400a86e	      9198	option.c	FUNCTION_50	IF_82
0x400a82f	    0x488d87600200	                  lea rax, [rdi + 0x260]	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400a836	          0x4839c3	                            cmp rbx, rax	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400a839	            0x7513	                           jne 0x400a84e	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x400a83b	          0x4885d2	                           test rdx, rdx	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400a83e	      0xb800000000	                              mov eax, 0	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400a843	        0x4c0f45e0	                         cmovne r12, rax	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400a847	      0xe800000000	                          call 0x400a84c	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400a84c	            0xeb20	                           jmp 0x400a86e	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x400a84e	          0x4885d2	                           test rdx, rdx	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400a851	            0x7f0d	                            jg 0x400a860	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400a853	    0x48c787600200	              mov qword [rdi + 0x260], 1	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400a85e	            0xeb0e	                           jmp 0x400a86e	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400a860	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400a867	    0x488987600200	            mov qword [rdi + 0x260], rax	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x400a86e	    0x488b05000000	            mov rax, qword [0x0400a875] 	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a875	          0x4885c0	                           test rax, rax	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a878	            0x7913	                           jns 0x400a88d	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a87a	    0x48c705000000	               mov qword [0x0400a885], 0	      9216	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a885	    0x41bc00000000	                             mov r12d, 0	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a88b	            0xeb19	                           jmp 0x400a8a6	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x400a88d	    0x483d10270000	                         cmp rax, 0x2710	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x400a893	            0x7e11	                           jle 0x400a8a6	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x400a895	    0x48c705000000	         mov qword [0x0400a8a0], 0x2710 	      9221	option.c	FUNCTION_50	ELSE_35	IF_87
0x400a8a0	    0x41bc00000000	                             mov r12d, 0	      9220	option.c	FUNCTION_50	ELSE_35	IF_87
0x400a8a6	    0x48833d000000	               cmp qword [0x0400a8ae], 2	      9223	option.c	FUNCTION_50	IF_88
0x400a8ae	            0x7611	                           jbe 0x400a8c1	      9223	option.c	FUNCTION_50	IF_88
0x400a8b0	    0x48c705000000	               mov qword [0x0400a8bb], 0	      9226	option.c	FUNCTION_50	IF_88
0x400a8bb	    0x41bc00000000	                             mov r12d, 0	      9225	option.c	FUNCTION_50	IF_88
0x400a8c1	    0x48833d000000	               cmp qword [0x0400a8c9], 0	      9228	option.c	FUNCTION_50	IF_89
0x400a8c9	            0x7911	                           jns 0x400a8dc	      9228	option.c	FUNCTION_50	IF_89
0x400a8cb	    0x48c705000000	               mov qword [0x0400a8d6], 1	      9231	option.c	FUNCTION_50	IF_89
0x400a8d6	    0x41bc00000000	                             mov r12d, 0	      9230	option.c	FUNCTION_50	IF_89
0x400a8dc	    0x488b05000000	            mov rax, qword [0x0400a8e3] 	      9233	option.c	FUNCTION_50	IF_90
0x400a8e3	        0x4883f89c	             cmp rax, 0xffffffffffffff9c	      9233	option.c	FUNCTION_50	IF_90
0x400a8e7	            0x7c09	                            jl 0x400a8f2	      9233	option.c	FUNCTION_50	IF_90
0x400a8e9	    0x483b05000000	            cmp rax, qword [0x0400a8f0] 	      9233	option.c	FUNCTION_50	IF_90
0x400a8f0	            0x7c3d	                            jl 0x400a92f	      9233	option.c	FUNCTION_50	IF_90
0x400a8f2	    0x8b0500000000	            mov eax, dword [0x0400a8f8] 	      9233	option.c	FUNCTION_50	IF_90
0x400a8f8	            0x85c0	                           test eax, eax	      9233	option.c	FUNCTION_50	IF_90
0x400a8fa	            0x7433	                            je 0x400a92f	      9233	option.c	FUNCTION_50	IF_90
0x400a8fc	    0x488b05000000	            mov rax, qword [0x0400a903] 	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400a903	          0x4939c6	                            cmp r14, rax	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400a906	            0x7416	                            je 0x400a91e	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x400a908	          0x4889c2	                            mov rdx, rax	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a90b	        0x48c1ea3f	                           shr rdx, 0x3f	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a90f	          0x4801d0	                            add rax, rdx	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a912	          0x48d1f8	                              sar rax, 1	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a915	    0x488905000000	            mov qword [0x0400a91c], rax 	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a91c	            0xeb11	                           jmp 0x400a92f	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x400a91e	    0x48c705000000	               mov qword [0x0400a929], 1	      9240	option.c	FUNCTION_50	IF_90	ELSE_36
0x400a929	    0x41bc00000000	                             mov r12d, 0	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x400a92f	    0x48833d000000	               cmp qword [0x0400a937], 0	      9243	option.c	FUNCTION_50	IF_92
0x400a937	            0x791b	                           jns 0x400a954	      9243	option.c	FUNCTION_50	IF_92
0x400a939	    0x8b0500000000	            mov eax, dword [0x0400a93f] 	      9243	option.c	FUNCTION_50	IF_92
0x400a93f	            0x85c0	                           test eax, eax	      9243	option.c	FUNCTION_50	IF_92
0x400a941	            0x7411	                            je 0x400a954	      9243	option.c	FUNCTION_50	IF_92
0x400a943	    0x48c705000000	               mov qword [0x0400a94e], 0	      9246	option.c	FUNCTION_50	IF_92
0x400a94e	    0x41bc00000000	                             mov r12d, 0	      9245	option.c	FUNCTION_50	IF_92
0x400a954	    0x48833d000000	               cmp qword [0x0400a95c], 0	      9248	option.c	FUNCTION_50	IF_93
0x400a95c	            0x791b	                           jns 0x400a979	      9248	option.c	FUNCTION_50	IF_93
0x400a95e	    0x8b0500000000	            mov eax, dword [0x0400a964] 	      9248	option.c	FUNCTION_50	IF_93
0x400a964	            0x85c0	                           test eax, eax	      9248	option.c	FUNCTION_50	IF_93
0x400a966	            0x7411	                            je 0x400a979	      9248	option.c	FUNCTION_50	IF_93
0x400a968	    0x48c705000000	               mov qword [0x0400a973], 0	      9251	option.c	FUNCTION_50	IF_93
0x400a973	    0x41bc00000000	                             mov r12d, 0	      9250	option.c	FUNCTION_50	IF_93
0x400a979	    0x48833d000000	               cmp qword [0x0400a981], 0	      9254	option.c	FUNCTION_50	IF_94
0x400a981	            0x7f11	                            jg 0x400a994	      9254	option.c	FUNCTION_50	IF_94
0x400a983	    0x48c705000000	               mov qword [0x0400a98e], 1	      9257	option.c	FUNCTION_50	IF_94
0x400a98e	    0x41bc00000000	                             mov r12d, 0	      9256	option.c	FUNCTION_50	IF_94
0x400a994	    0x48833d000000	               cmp qword [0x0400a99c], 0	      9260	option.c	FUNCTION_50	IF_95
0x400a99c	            0x7911	                           jns 0x400a9af	      9260	option.c	FUNCTION_50	IF_95
0x400a99e	    0x48c705000000	          mov qword [0x0400a9a9], 0x7d0 	      9263	option.c	FUNCTION_50	IF_95
0x400a9a9	    0x41bc00000000	                             mov r12d, 0	      9262	option.c	FUNCTION_50	IF_95
0x400a9af	    0x48833d000000	               cmp qword [0x0400a9b7], 0	      9265	option.c	FUNCTION_50	IF_96
0x400a9b7	            0x7917	                           jns 0x400a9d0	      9265	option.c	FUNCTION_50	IF_96
0x400a9b9	    0x48c705000000	               mov qword [0x0400a9c4], 0	      9268	option.c	FUNCTION_50	IF_96
0x400a9c4	        0x41f6c506	                            test r13b, 6	      9272	option.c	FUNCTION_50	IF_97
0x400a9c8	     0xf857d010000	                           jne 0x400ab4b	      9272	option.c	FUNCTION_50	IF_97
0x400a9ce	            0xeb08	                           jmp 0x400a9d8	      9272	option.c	FUNCTION_50	IF_97
0x400a9d0	        0x41f6c506	                            test r13b, 6	      9272	option.c	FUNCTION_50	IF_97
0x400a9d4	            0x7526	                           jne 0x400a9fc	      9272	option.c	FUNCTION_50	IF_97
0x400a9d6	            0xeb06	                           jmp 0x400a9de	      9272	option.c	FUNCTION_50	IF_97
0x400a9d8	    0x41bc00000000	                             mov r12d, 0	      9267	option.c	FUNCTION_50	IF_96
0x400a9de	          0x4863fd	                         movsxd rdi, ebp	      9273	option.c	FUNCTION_50	CALL_43
0x400a9e1	        0x48c1e706	                              shl rdi, 6	      9273	option.c	FUNCTION_50	CALL_43
0x400a9e5	    0x4881c7000000	                              add rdi, 0	      9273	option.c	FUNCTION_50	CALL_43
0x400a9ec	      0xbe02000000	                              mov esi, 2	      9273	option.c	FUNCTION_50	CALL_43
0x400a9f1	      0xe8be6cffff	                 call sym.get_varp_scope	      9273	option.c	FUNCTION_50	CALL_43
0x400a9f6	          0x488b13	                    mov rdx, qword [rbx]	      9273	option.c	FUNCTION_50	CALL_43
0x400a9f9	          0x488910	                    mov qword [rax], rdx	      9273	option.c	FUNCTION_50	CALL_43
0x400a9fc	          0x4863c5	                         movsxd rax, ebp	      9275	option.c	FUNCTION_50
0x400a9ff	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x400aa03	    0x488188000000	                   or qword [rax], 0x100	      9275	option.c	FUNCTION_50
0x400aa0e	    0x833d00000000	               cmp dword [0x0400aa15], 0	      9278	option.c	FUNCTION_50	IF_98
0x400aa15	     0xf85d8000000	                           jne 0x400aaf3	      9278	option.c	FUNCTION_50	IF_98
0x400aa1b	          0x4d85e4	                           test r12, r12	      9278	option.c	FUNCTION_50	IF_98
0x400aa1e	     0xf85cf000000	                           jne 0x400aaf3	      9278	option.c	FUNCTION_50	IF_98
0x400aa24	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa29	      0xba00000000	                              mov edx, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa2e	      0xbe0a000000	                            mov esi, 0xa	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa33	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa38	      0xb800000000	                              mov eax, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa3d	      0xe800000000	                          call 0x400aa42	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400aa42	        0x488b0c24	                    mov rcx, qword [rsp]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa46	      0xba00000000	                              mov edx, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa4b	      0xbe0a000000	                            mov esi, 0xa	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa50	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa55	      0xb800000000	                              mov eax, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa5a	      0xe800000000	                          call 0x400aa5f	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400aa5f	        0x4183e504	                             and r13d, 4	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa63	      0xb900000000	                              mov ecx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa68	      0xb800000000	                              mov eax, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa6d	        0x480f45c8	                         cmovne rcx, rax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa71	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa76	      0xbe07000000	                              mov esi, 7	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa7b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa80	      0xb800000000	                              mov eax, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa85	      0xe800000000	                          call 0x400aa8a	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400aa8a	      0xbaffffffff	                     mov edx, 0xffffffff	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400aa8f	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400aa94	      0xbf3d000000	                           mov edi, 0x3d	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400aa99	      0xe800000000	                          call 0x400aa9e	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400aa9e	      0xbaffffffff	                     mov edx, 0xffffffff	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400aaa3	      0x488d742440	                   lea rsi, [rsp + 0x40]	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400aaa8	      0xbf3e000000	                           mov edi, 0x3e	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400aaad	      0xe800000000	                          call 0x400aab2	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400aab2	      0xbaffffffff	                     mov edx, 0xffffffff	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400aab7	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400aabc	      0xbf3f000000	                           mov edi, 0x3f	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400aac1	      0xe800000000	                          call 0x400aac6	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400aac6	          0x4863c5	                         movsxd rax, ebp	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aac9	        0x48c1e006	                              shl rax, 6	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aacd	    0x41b800000000	                              mov r8d, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aad3	      0xb900000000	                              mov ecx, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aad8	      0xba00000000	                              mov edx, 0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aadd	    0x488bb0000000	                    mov rsi, qword [rax]	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aae4	      0xbf3e000000	                           mov edi, 0x3e	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aae9	      0xe800000000	                          call 0x400aaee	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400aaee	      0xe800000000	                          call 0x400aaf3	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x400aaf3	      0xe800000000	                          call 0x400aaf8	      9292	option.c	FUNCTION_50	CALL_52
0x400aaf8	    0x488b15000000	            mov rdx, qword [0x0400aaff] 	      9293	option.c	FUNCTION_50	IF_99
0x400aaff	    0x817a48ffffff	     cmp dword [rdx + 0x48], 0x7fffffff 	      9293	option.c	FUNCTION_50	IF_99
0x400ab06	            0x741b	                            je 0x400ab23	      9293	option.c	FUNCTION_50	IF_99
0x400ab08	          0x4863c5	                         movsxd rax, ebp	      9294	option.c	FUNCTION_50	IF_99
0x400ab0b	        0x48c1e006	                              shl rax, 6	      9294	option.c	FUNCTION_50	IF_99
0x400ab0f	    0x48f780000000	            test qword [rax], 0x4006000 	      9294	option.c	FUNCTION_50	IF_99
0x400ab1a	            0x7407	                            je 0x400ab23	      9294	option.c	FUNCTION_50	IF_99
0x400ab1c	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      9295	option.c	FUNCTION_50	IF_99
0x400ab23	          0x4863ed	                         movsxd rbp, ebp	      9296	option.c	FUNCTION_50	CALL_53
0x400ab26	        0x48c1e506	                              shl rbp, 6	      9296	option.c	FUNCTION_50	CALL_53
0x400ab2a	    0x488bbd000000	                    mov rdi, qword [rbp]	      9296	option.c	FUNCTION_50	CALL_53
0x400ab31	      0xe8a37cffff	                   call sym.check_redraw	      9296	option.c	FUNCTION_50	CALL_53
0x400ab36	          0x4c89e0	                            mov rax, r12	      9298	option.c	FUNCTION_50
0x400ab39	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      9299	option.c	FUNCTION_50
0x400ab3e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9299	option.c	FUNCTION_50
0x400ab47	            0x7421	                            je 0x400ab6a	      9299	option.c	FUNCTION_50
0x400ab49	            0xeb1a	                           jmp 0x400ab65	      9299	option.c	FUNCTION_50
0x400ab4b	          0x4863c5	                         movsxd rax, ebp	      9275	option.c	FUNCTION_50
0x400ab4e	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x400ab52	    0x488188000000	                   or qword [rax], 0x100	      9275	option.c	FUNCTION_50
0x400ab5d	    0x41bc00000000	                             mov r12d, 0	      9267	option.c	FUNCTION_50	IF_96
0x400ab63	            0xeb8e	                           jmp 0x400aaf3	      9267	option.c	FUNCTION_50	IF_96
0x400ab65	      0xe800000000	                          call 0x400ab6a	      9299	option.c	FUNCTION_50
0x400ab6a	        0x4883c478	                           add rsp, 0x78	      9299	option.c	FUNCTION_50
0x400ab6e	              0x5b	                                 pop rbx	      9299	option.c	FUNCTION_50
0x400ab6f	              0x5d	                                 pop rbp	      9299	option.c	FUNCTION_50
0x400ab70	            0x415c	                                 pop r12	      9299	option.c	FUNCTION_50
0x400ab72	            0x415d	                                 pop r13	      9299	option.c	FUNCTION_50
0x400ab74	            0x415e	                                 pop r14	      9299	option.c	FUNCTION_50
0x400ab76	            0x415f	                                 pop r15	      9299	option.c	FUNCTION_50
0x400ab78	              0xc3	                                     ret	      9299	option.c	FUNCTION_50
get_equalprg	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,0:WHILE,0	5
0x4005005	    0x488b05000000	            mov rax, qword [0x0400500c] 	     10837	option.c	FUNCTION_78	IF_1
0x400500c	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10837	option.c	FUNCTION_78	IF_1
0x4005013	          0x803800	                       cmp byte [rax], 0	     10837	option.c	FUNCTION_78	IF_1
0x4005016	    0x480f44050000	           cmove rax, qword [0x0400501e]	     10838	option.c	FUNCTION_78	IF_1
0x400501e	              0xc3	                                     ret	     10840	option.c	FUNCTION_78
copy_winopt	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,15:WHILE,0	112
0x400501f	              0x55	                                push rbp	     10870	option.c	FUNCTION_80
0x4005020	              0x53	                                push rbx	     10870	option.c	FUNCTION_80
0x4005021	        0x4883ec08	                              sub rsp, 8	     10870	option.c	FUNCTION_80
0x4005025	          0x4889fd	                            mov rbp, rdi	     10870	option.c	FUNCTION_80
0x4005028	          0x4889f3	                            mov rbx, rsi	     10870	option.c	FUNCTION_80
0x400502b	            0x8b07	                    mov eax, dword [rdi]	     10872	option.c	FUNCTION_80
0x400502d	            0x8906	                    mov dword [rsi], eax	     10872	option.c	FUNCTION_80
0x400502f	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	     10874	option.c	FUNCTION_80
0x4005035	    0x898684000000	             mov dword [rsi + 0x84], eax	     10874	option.c	FUNCTION_80
0x400503b	    0x8b8788000000	            mov eax, dword [rdi + 0x88] 	     10875	option.c	FUNCTION_80
0x4005041	    0x898688000000	             mov dword [rsi + 0x88], eax	     10875	option.c	FUNCTION_80
0x4005047	    0x8b878c000000	            mov eax, dword [rdi + 0x8c] 	     10876	option.c	FUNCTION_80
0x400504d	    0x89868c000000	             mov dword [rsi + 0x8c], eax	     10876	option.c	FUNCTION_80
0x4005053	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	     10878	option.c	FUNCTION_80
0x400505a	    0x488986900000	             mov qword [rsi + 0x90], rax	     10878	option.c	FUNCTION_80
0x4005061	    0x8b87a4000000	            mov eax, dword [rdi + 0xa4] 	     10881	option.c	FUNCTION_80
0x4005067	    0x8986a4000000	             mov dword [rsi + 0xa4], eax	     10881	option.c	FUNCTION_80
0x400506d	    0x488bbfa80000	            mov rdi, qword [rdi + 0xa8] 	     10882	option.c	FUNCTION_80	CALL_1
0x4005074	      0xe800000000	                          call 0x4005079	     10882	option.c	FUNCTION_80	CALL_1
0x4005079	    0x488983a80000	             mov qword [rbx + 0xa8], rax	     10882	option.c	FUNCTION_80	CALL_1
0x4005080	    0x488bbdd00000	            mov rdi, qword [rbp + 0xd0] 	     10885	option.c	FUNCTION_80	CALL_2
0x4005087	      0xe800000000	                          call 0x400508c	     10885	option.c	FUNCTION_80	CALL_2
0x400508c	    0x488983d00000	             mov qword [rbx + 0xd0], rax	     10885	option.c	FUNCTION_80	CALL_2
0x4005093	    0x8b85e4000000	            mov eax, dword [rbp + 0xe4] 	     10887	option.c	FUNCTION_80
0x4005099	    0x8983e4000000	             mov dword [rbx + 0xe4], eax	     10887	option.c	FUNCTION_80
0x400509f	    0x8b85e8000000	            mov eax, dword [rbp + 0xe8] 	     10889	option.c	FUNCTION_80
0x40050a5	    0x8983e8000000	             mov dword [rbx + 0xe8], eax	     10889	option.c	FUNCTION_80
0x40050ab	    0x8b8580000000	            mov eax, dword [rbp + 0x80] 	     10892	option.c	FUNCTION_80
0x40050b1	    0x898380000000	             mov dword [rbx + 0x80], eax	     10892	option.c	FUNCTION_80
0x40050b7	          0x8b4504	                mov eax, dword [rbp + 4]	     10893	option.c	FUNCTION_80
0x40050ba	          0x894304	                mov dword [rbx + 4], eax	     10893	option.c	FUNCTION_80
0x40050bd	        0x488b7d08	                mov rdi, qword [rbp + 8]	     10894	option.c	FUNCTION_80	CALL_3
0x40050c1	      0xe800000000	                          call 0x40050c6	     10894	option.c	FUNCTION_80	CALL_3
0x40050c6	        0x48894308	                mov qword [rbx + 8], rax	     10894	option.c	FUNCTION_80	CALL_3
0x40050ca	    0x8b85d8000000	            mov eax, dword [rbp + 0xd8] 	     10896	option.c	FUNCTION_80
0x40050d0	    0x8983d8000000	             mov dword [rbx + 0xd8], eax	     10896	option.c	FUNCTION_80
0x40050d6	    0x8b85e0000000	            mov eax, dword [rbp + 0xe0] 	     10897	option.c	FUNCTION_80
0x40050dc	    0x8983e0000000	             mov dword [rbx + 0xe0], eax	     10897	option.c	FUNCTION_80
0x40050e2	    0x8b8500010000	           mov eax, dword [rbp + 0x100] 	     10898	option.c	FUNCTION_80
0x40050e8	    0x898300010000	            mov dword [rbx + 0x100], eax	     10898	option.c	FUNCTION_80
0x40050ee	    0x8b8504010000	           mov eax, dword [rbp + 0x104] 	     10899	option.c	FUNCTION_80
0x40050f4	    0x898304010000	            mov dword [rbx + 0x104], eax	     10899	option.c	FUNCTION_80
0x40050fa	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	     10901	option.c	FUNCTION_80
0x4005100	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	     10901	option.c	FUNCTION_80
0x4005106	    0x8b85bc000000	            mov eax, dword [rbp + 0xbc] 	     10904	option.c	FUNCTION_80
0x400510c	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	     10904	option.c	FUNCTION_80
0x4005112	    0x8b85c0000000	            mov eax, dword [rbp + 0xc0] 	     10905	option.c	FUNCTION_80
0x4005118	    0x8983c0000000	             mov dword [rbx + 0xc0], eax	     10905	option.c	FUNCTION_80
0x400511e	    0x488bbdc80000	            mov rdi, qword [rbp + 0xc8] 	     10906	option.c	FUNCTION_80	CALL_4
0x4005125	      0xe800000000	                          call 0x400512a	     10906	option.c	FUNCTION_80	CALL_4
0x400512a	    0x488983c80000	             mov qword [rbx + 0xc8], rax	     10906	option.c	FUNCTION_80	CALL_4
0x4005131	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10909	option.c	FUNCTION_80
0x4005134	          0x894310	             mov dword [rbx + 0x10], eax	     10909	option.c	FUNCTION_80
0x4005137	    0x8b85dc000000	            mov eax, dword [rbp + 0xdc] 	     10910	option.c	FUNCTION_80
0x400513d	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	     10910	option.c	FUNCTION_80
0x4005143	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	     10913	option.c	FUNCTION_80	CALL_5
0x400514a	      0xe800000000	                          call 0x400514f	     10913	option.c	FUNCTION_80	CALL_5
0x400514f	    0x488983f00000	             mov qword [rbx + 0xf0], rax	     10913	option.c	FUNCTION_80	CALL_5
0x4005156	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10914	option.c	FUNCTION_80
0x400515d	    0x488983f80000	             mov qword [rbx + 0xf8], rax	     10914	option.c	FUNCTION_80
0x4005164	    0x488bbd100100	           mov rdi, qword [rbp + 0x110] 	     10917	option.c	FUNCTION_80	CALL_6
0x400516b	      0xe800000000	                          call 0x4005170	     10917	option.c	FUNCTION_80	CALL_6
0x4005170	    0x488983100100	            mov qword [rbx + 0x110], rax	     10917	option.c	FUNCTION_80	CALL_6
0x4005177	    0x488bbd180100	           mov rdi, qword [rbp + 0x118] 	     10918	option.c	FUNCTION_80	CALL_7
0x400517e	      0xe800000000	                          call 0x4005183	     10918	option.c	FUNCTION_80	CALL_7
0x4005183	    0x488983180100	            mov qword [rbx + 0x118], rax	     10918	option.c	FUNCTION_80	CALL_7
0x400518a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	     10921	option.c	FUNCTION_80
0x400518e	        0x48894318	             mov qword [rbx + 0x18], rax	     10921	option.c	FUNCTION_80
0x4005192	          0x8b4520	            mov eax, dword [rbp + 0x20] 	     10922	option.c	FUNCTION_80
0x4005195	          0x894320	             mov dword [rbx + 0x20], eax	     10922	option.c	FUNCTION_80
0x4005198	          0x8b4524	            mov eax, dword [rbp + 0x24] 	     10923	option.c	FUNCTION_80
0x400519b	          0x894324	             mov dword [rbx + 0x24], eax	     10923	option.c	FUNCTION_80
0x400519e	          0x8b4528	            mov eax, dword [rbp + 0x28] 	     10924	option.c	FUNCTION_80
0x40051a1	          0x894328	             mov dword [rbx + 0x28], eax	     10924	option.c	FUNCTION_80
0x40051a4	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	     10925	option.c	FUNCTION_80	CALL_8
0x40051a8	      0xe800000000	                          call 0x40051ad	     10925	option.c	FUNCTION_80	CALL_8
0x40051ad	        0x48894330	             mov qword [rbx + 0x30], rax	     10925	option.c	FUNCTION_80	CALL_8
0x40051b1	        0x488b4558	            mov rax, qword [rbp + 0x58] 	     10926	option.c	FUNCTION_80
0x40051b5	        0x48894358	             mov qword [rbx + 0x58], rax	     10926	option.c	FUNCTION_80
0x40051b9	        0x488b4538	            mov rax, qword [rbp + 0x38] 	     10927	option.c	FUNCTION_80
0x40051bd	        0x48894338	             mov qword [rbx + 0x38], rax	     10927	option.c	FUNCTION_80
0x40051c1	          0x8b4540	            mov eax, dword [rbp + 0x40] 	     10928	option.c	FUNCTION_80
0x40051c4	          0x894340	             mov dword [rbx + 0x40], eax	     10928	option.c	FUNCTION_80
0x40051c7	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	     10929	option.c	FUNCTION_80	CALL_9
0x40051cb	      0xe800000000	                          call 0x40051d0	     10929	option.c	FUNCTION_80	CALL_9
0x40051d0	        0x48894348	             mov qword [rbx + 0x48], rax	     10929	option.c	FUNCTION_80	CALL_9
0x40051d4	    0x488b05000000	            mov rax, qword [0x040051db] 	     10931	option.c	FUNCTION_80	CALL_10
0x40051db	    0x83bddc000000	               cmp dword [rbp + 0xdc], 0	     10931	option.c	FUNCTION_80	CALL_10
0x40051e2	            0x7409	                            je 0x40051ed	     10931	option.c	FUNCTION_80	CALL_10
0x40051e4	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	     10931	option.c	FUNCTION_80	CALL_10
0x40051e8	      0xe800000000	                          call 0x40051ed	     10931	option.c	FUNCTION_80	CALL_10
0x40051ed	        0x48894350	             mov qword [rbx + 0x50], rax	     10930	option.c	FUNCTION_80
0x40051f1	        0x488b4560	            mov rax, qword [rbp + 0x60] 	     10932	option.c	FUNCTION_80
0x40051f5	        0x48894360	             mov qword [rbx + 0x60], rax	     10932	option.c	FUNCTION_80
0x40051f9	        0x488b7d68	            mov rdi, qword [rbp + 0x68] 	     10934	option.c	FUNCTION_80	CALL_11
0x40051fd	      0xe800000000	                          call 0x4005202	     10934	option.c	FUNCTION_80	CALL_11
0x4005202	        0x48894368	             mov qword [rbx + 0x68], rax	     10934	option.c	FUNCTION_80	CALL_11
0x4005206	        0x488b7d70	            mov rdi, qword [rbp + 0x70] 	     10935	option.c	FUNCTION_80	CALL_12
0x400520a	      0xe800000000	                          call 0x400520f	     10935	option.c	FUNCTION_80	CALL_12
0x400520f	        0x48894370	             mov qword [rbx + 0x70], rax	     10935	option.c	FUNCTION_80	CALL_12
0x4005213	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	     10937	option.c	FUNCTION_80	CALL_13
0x4005217	      0xe800000000	                          call 0x400521c	     10937	option.c	FUNCTION_80	CALL_13
0x400521c	        0x48894378	             mov qword [rbx + 0x78], rax	     10937	option.c	FUNCTION_80	CALL_13
0x4005220	    0x488bbd080100	           mov rdi, qword [rbp + 0x108] 	     10940	option.c	FUNCTION_80	CALL_14
0x4005227	      0xe800000000	                          call 0x400522c	     10940	option.c	FUNCTION_80	CALL_14
0x400522c	    0x488983080100	            mov qword [rbx + 0x108], rax	     10940	option.c	FUNCTION_80	CALL_14
0x4005233	          0x4889df	                            mov rdi, rbx	     10942	option.c	FUNCTION_80	CALL_15
0x4005236	      0xe8cfafffff	                   call sym.check_winopt	     10942	option.c	FUNCTION_80	CALL_15
0x400523b	        0x4883c408	                              add rsp, 8	     10943	option.c	FUNCTION_80
0x400523f	              0x5b	                                 pop rbx	     10943	option.c	FUNCTION_80
0x4005240	              0x5d	                                 pop rbp	     10943	option.c	FUNCTION_80
0x4005241	              0xc3	                                     ret	     10943	option.c	FUNCTION_80
