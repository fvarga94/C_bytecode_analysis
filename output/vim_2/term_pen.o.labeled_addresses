vterm_state_resetpen	CALL,9:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	227
0x40002d0	              0x53	                                push rbx	       167	pen.c	FUNCTION_10
0x40002d1	          0x4889fb	                            mov rbx, rdi	       167	pen.c	FUNCTION_10
0x40002d4	        0x4883ec10	                           sub rsp, 0x10	       167	pen.c	FUNCTION_10
0x40002d8	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       168	pen.c	FUNCTION_10	CALL_1
0x40002df	    0x64488b042528	                mov rax, qword fs:[0x28]	       167	pen.c	FUNCTION_10
0x40002e8	      0x4889442408	                mov qword [rsp + 8], rax	       167	pen.c	FUNCTION_10
0x40002ed	            0x31c0	                            xor eax, eax	       167	pen.c	FUNCTION_10
0x40002ef	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40002f6	            0x89d0	                            mov eax, edx	       168	pen.c	FUNCTION_10	CALL_1
0x40002f8	          0x83e0fe	                     and eax, 0xfffffffe	       168	pen.c	FUNCTION_10	CALL_1
0x40002fb	    0x888724010000	              mov byte [rdi + 0x124], al	       168	pen.c	FUNCTION_10	CALL_1
0x4000301	        0x488b4708	                mov rax, qword [rdi + 8]	       168	pen.c	FUNCTION_10	CALL_1
0x4000305	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000308	     0xf84a2030000	                            je 0x40006b0	       118	pen.c	FUNCTION_4	IF_2
0x400030e	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000312	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000315	     0xf844d020000	                            je 0x4000568	       118	pen.c	FUNCTION_4	IF_2
0x400031b	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400031f	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000322	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x4000327	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000329	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       169	pen.c	FUNCTION_10	CALL_2
0x4000330	        0x488b4308	                mov rax, qword [rbx + 8]	       169	pen.c	FUNCTION_10	CALL_2
0x4000334	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x400033b	            0x89d1	                            mov ecx, edx	       169	pen.c	FUNCTION_10	CALL_2
0x400033d	          0x83e1f9	                     and ecx, 0xfffffff9	       169	pen.c	FUNCTION_10	CALL_2
0x4000340	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000343	    0x888b24010000	              mov byte [rbx + 0x124], cl	       169	pen.c	FUNCTION_10	CALL_2
0x4000349	     0xf84b7030000	                            je 0x4000706	       118	pen.c	FUNCTION_4	IF_2
0x400034f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000353	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000356	     0xf8429020000	                            je 0x4000585	       118	pen.c	FUNCTION_4	IF_2
0x400035c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000360	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000363	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x4000368	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400036a	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x400036e	    0x80a324010000	            and byte [rbx + 0x124], 0xf7	       170	pen.c	FUNCTION_10	CALL_3
0x4000375	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x400037c	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400037f	     0xf8434030000	                            je 0x40006b9	       118	pen.c	FUNCTION_4	IF_2
0x4000385	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000389	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400038c	     0xf840e020000	                            je 0x40005a0	       118	pen.c	FUNCTION_4	IF_2
0x4000392	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000396	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000399	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x400039e	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40003a0	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003a4	    0x80a324010000	            and byte [rbx + 0x124], 0xef	       171	pen.c	FUNCTION_10	CALL_4
0x40003ab	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40003b2	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40003b5	     0xf8454030000	                            je 0x400070f	       118	pen.c	FUNCTION_4	IF_2
0x40003bb	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40003bf	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40003c2	     0xf84f3010000	                            je 0x40005bb	       118	pen.c	FUNCTION_4	IF_2
0x40003c8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40003cc	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40003cf	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x40003d4	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40003d6	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003da	    0x80a324010000	            and byte [rbx + 0x124], 0xdf	       172	pen.c	FUNCTION_10	CALL_5
0x40003e1	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40003e8	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40003eb	     0xf84cf020000	                            je 0x40006c0	       118	pen.c	FUNCTION_4	IF_2
0x40003f1	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40003f5	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40003f8	     0xf84d8010000	                            je 0x40005d6	       118	pen.c	FUNCTION_4	IF_2
0x40003fe	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000402	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000405	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x400040a	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400040c	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000410	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x4000417	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x400041e	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000421	     0xf84ef020000	                            je 0x4000716	       118	pen.c	FUNCTION_4	IF_2
0x4000427	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400042b	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400042e	     0xf84bd010000	                            je 0x40005f1	       118	pen.c	FUNCTION_4	IF_2
0x4000434	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000438	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400043b	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x4000440	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000442	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000446	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x400044f	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x4000456	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000459	     0xf8471020000	                            je 0x40006d0	       118	pen.c	FUNCTION_4	IF_2
0x400045f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000463	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000466	     0xf84a2010000	                            je 0x400060e	       118	pen.c	FUNCTION_4	IF_2
0x400046c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000470	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000473	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x4000478	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400047a	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000480	        0x488b4308	                mov rax, qword [rbx + 8]	       178	pen.c	FUNCTION_10	CALL_8
0x4000484	     0xfb6b3290100	          movzx esi, byte [rbx + 0x129] 	       178	pen.c	FUNCTION_10	CALL_8
0x400048b	     0xfb68b2a0100	          movzx ecx, byte [rbx + 0x12a] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000492	     0xfb6bb280100	          movzx edi, byte [rbx + 0x128] 	       139	pen.c	FUNCTION_7
0x4000499	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x40004a3	    0x89931c010000	            mov dword [rbx + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x40004a9	     0xfb6932b0100	          movzx edx, byte [rbx + 0x12b] 	       178	pen.c	FUNCTION_10	CALL_8
0x40004b0	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40004b3	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x40004bd	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x40004c2	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x40004c6	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x40004ca	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x40004ce	     0xf846b020000	                            je 0x400073f	       118	pen.c	FUNCTION_4	IF_2
0x40004d4	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40004d8	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40004db	     0xf8487010000	                            je 0x4000668	       118	pen.c	FUNCTION_4	IF_2
0x40004e1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40004e5	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40004e8	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x40004ed	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40004ef	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x40004f5	        0x488b4308	                mov rax, qword [rbx + 8]	       179	pen.c	FUNCTION_10	CALL_9
0x40004f9	     0xfb6b32d0100	          movzx esi, byte [rbx + 0x12d] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000500	     0xfb68b2e0100	          movzx ecx, byte [rbx + 0x12e] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000507	     0xfb6bb2c0100	          movzx edi, byte [rbx + 0x12c] 	       139	pen.c	FUNCTION_7
0x400050e	    0x899320010000	            mov dword [rbx + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000514	     0xfb6932f0100	          movzx edx, byte [rbx + 0x12f] 	       179	pen.c	FUNCTION_10	CALL_9
0x400051b	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400051e	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000523	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000527	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x400052b	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x400052f	            0x7417	                            je 0x4000548	       118	pen.c	FUNCTION_4	IF_2
0x4000531	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000535	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000538	            0x740e	                            je 0x4000548	       118	pen.c	FUNCTION_4	IF_2
0x400053a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400053e	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000541	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x4000546	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000548	      0x488b442408	                mov rax, qword [rsp + 8]	       180	pen.c	FUNCTION_10
0x400054d	    0x644833042528	                xor rax, qword fs:[0x28]	       180	pen.c	FUNCTION_10
0x4000556	     0xf85a5010000	                           jne 0x4000701	       180	pen.c	FUNCTION_10
0x400055c	        0x4883c410	                           add rsp, 0x10	       180	pen.c	FUNCTION_10
0x4000560	              0x5b	                                 pop rbx	       180	pen.c	FUNCTION_10
0x4000561	              0xc3	                                     ret	       180	pen.c	FUNCTION_10
0x4000562	    0x660f1f440000	                    nop word [rax + rax]	       180	pen.c	FUNCTION_10
0x4000568	          0x83e2f8	                     and edx, 0xfffffff8	       169	pen.c	FUNCTION_10	CALL_2
0x400056b	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x4000572	    0x889724010000	              mov byte [rdi + 0x124], dl	       169	pen.c	FUNCTION_10	CALL_2
0x4000578	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400057c	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400057f	     0xf85d7fdffff	                           jne 0x400035c	       118	pen.c	FUNCTION_4	IF_2
0x4000585	    0x80a324010000	            and byte [rbx + 0x124], 0xf7	       170	pen.c	FUNCTION_10	CALL_3
0x400058c	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000593	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000597	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400059a	     0xf85f2fdffff	                           jne 0x4000392	       118	pen.c	FUNCTION_4	IF_2
0x40005a0	    0x80a324010000	            and byte [rbx + 0x124], 0xef	       171	pen.c	FUNCTION_10	CALL_4
0x40005a7	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40005ae	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40005b2	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40005b5	     0xf850dfeffff	                           jne 0x40003c8	       118	pen.c	FUNCTION_4	IF_2
0x40005bb	    0x80a324010000	            and byte [rbx + 0x124], 0xdf	       172	pen.c	FUNCTION_10	CALL_5
0x40005c2	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40005c9	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40005cd	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40005d0	     0xf8528feffff	                           jne 0x40003fe	       118	pen.c	FUNCTION_4	IF_2
0x40005d6	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x40005dd	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40005e4	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40005e8	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40005eb	     0xf8543feffff	                           jne 0x4000434	       118	pen.c	FUNCTION_4	IF_2
0x40005f1	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x40005fa	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x4000601	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000605	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000608	     0xf855efeffff	                           jne 0x400046c	       118	pen.c	FUNCTION_4	IF_2
0x400060e	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000614	     0xfb68b2a0100	          movzx ecx, byte [rbx + 0x12a] 	       178	pen.c	FUNCTION_10	CALL_8
0x400061b	     0xfb6b3290100	          movzx esi, byte [rbx + 0x129] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000622	     0xfb6bb280100	          movzx edi, byte [rbx + 0x128] 	       139	pen.c	FUNCTION_7
0x4000629	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x4000633	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x400063d	    0x89931c010000	            mov dword [rbx + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x4000643	     0xfb6932b0100	          movzx edx, byte [rbx + 0x12b] 	       178	pen.c	FUNCTION_10	CALL_8
0x400064a	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400064e	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000652	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000657	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x400065b	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400065f	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000662	     0xf8579feffff	                           jne 0x40004e1	       118	pen.c	FUNCTION_4	IF_2
0x4000668	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x400066e	     0xfb6b32d0100	          movzx esi, byte [rbx + 0x12d] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000675	     0xfb68b2e0100	          movzx ecx, byte [rbx + 0x12e] 	       179	pen.c	FUNCTION_10	CALL_9
0x400067c	     0xfb6bb2c0100	          movzx edi, byte [rbx + 0x12c] 	       139	pen.c	FUNCTION_7
0x4000683	    0x899320010000	            mov dword [rbx + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000689	     0xfb6932f0100	          movzx edx, byte [rbx + 0x12f] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000690	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000695	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000699	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400069d	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x40006a1	      0xe98bfeffff	                           jmp 0x4000531	       139	pen.c	FUNCTION_7
0x40006a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       139	pen.c	FUNCTION_7
0x40006b0	          0x83e2f0	                     and edx, 0xfffffff0	       170	pen.c	FUNCTION_10	CALL_3
0x40006b3	    0x889724010000	              mov byte [rdi + 0x124], dl	       170	pen.c	FUNCTION_10	CALL_3
0x40006b9	    0x80a324010000	            and byte [rbx + 0x124], 0xcf	       172	pen.c	FUNCTION_10	CALL_5
0x40006c0	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x40006c7	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x40006d0	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x40006d6	    0x89831c010000	            mov dword [rbx + 0x11c], eax	       178	pen.c	FUNCTION_10	CALL_8
0x40006dc	    0x8b832c010000	           mov eax, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x40006e2	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x40006ec	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x40006f6	    0x898320010000	            mov dword [rbx + 0x120], eax	       179	pen.c	FUNCTION_10	CALL_9
0x40006fc	      0xe947feffff	                           jmp 0x4000548	       179	pen.c	FUNCTION_10	CALL_9
0x4000701	      0xe800000000	                          call 0x4000706	       180	pen.c	FUNCTION_10
0x4000706	          0x83e2e1	                     and edx, 0xffffffe1	       171	pen.c	FUNCTION_10	CALL_4
0x4000709	    0x889324010000	              mov byte [rbx + 0x124], dl	       171	pen.c	FUNCTION_10	CALL_4
0x400070f	    0x80a324010000	            and byte [rbx + 0x124], 0x9f	       173	pen.c	FUNCTION_10	CALL_6
0x4000716	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x400071c	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x4000725	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x400072f	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x4000739	    0x89831c010000	            mov dword [rbx + 0x11c], eax	       178	pen.c	FUNCTION_10	CALL_8
0x400073f	    0x8b832c010000	           mov eax, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000745	    0x898320010000	            mov dword [rbx + 0x120], eax	       179	pen.c	FUNCTION_10	CALL_9
0x400074b	      0xe9f8fdffff	                           jmp 0x4000548	       179	pen.c	FUNCTION_10	CALL_9
vterm_state_savepen	CALL,9:FOR,0:IF,1:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,1	224
0x4000750	              0x53	                                push rbx	       183	pen.c	FUNCTION_11
0x4000751	          0x4889fb	                            mov rbx, rdi	       183	pen.c	FUNCTION_11
0x4000754	        0x4883ec10	                           sub rsp, 0x10	       183	pen.c	FUNCTION_11
0x4000758	    0x64488b042528	                mov rax, qword fs:[0x28]	       183	pen.c	FUNCTION_11
0x4000761	      0x4889442408	                mov qword [rsp + 8], rax	       183	pen.c	FUNCTION_11
0x4000766	            0x31c0	                            xor eax, eax	       183	pen.c	FUNCTION_11
0x4000768	            0x85f6	                           test esi, esi	       184	pen.c	FUNCTION_11	IF_1
0x400076a	     0xf8560020000	                           jne 0x40009d0	       184	pen.c	FUNCTION_11	IF_1
0x4000770	    0x488b87880100	           mov rax, qword [rdi + 0x188] 	       188	pen.c	FUNCTION_11	ELSE_1
0x4000777	    0x8b9790010000	           mov edx, dword [rdi + 0x190] 	       188	pen.c	FUNCTION_11	ELSE_1
0x400077d	    0x4889871c0100	            mov qword [rdi + 0x11c], rax	       188	pen.c	FUNCTION_11	ELSE_1
0x4000784	            0x89d0	                            mov eax, edx	       125	pen.c	FUNCTION_5
0x4000786	    0x899724010000	            mov dword [rdi + 0x124], edx	       188	pen.c	FUNCTION_11	ELSE_1
0x400078c	          0x83e001	                              and eax, 1	       125	pen.c	FUNCTION_5
0x400078f	          0x890424	                    mov dword [rsp], eax	       125	pen.c	FUNCTION_5
0x4000792	        0x488b4708	                mov rax, qword [rdi + 8]	       125	pen.c	FUNCTION_5
0x4000796	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000799	     0xf8411020000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x400079f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40007a3	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40007a6	     0xf8444020000	                            je 0x40009f0	       118	pen.c	FUNCTION_4	IF_2
0x40007ac	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40007b0	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40007b3	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x40007b8	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40007ba	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40007c1	        0x488b4308	                mov rax, qword [rbx + 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40007c5	            0x89d1	                            mov ecx, edx	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40007c7	            0xd0e9	                               shr cl, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40007c9	          0x83e103	                              and ecx, 3	       132	pen.c	FUNCTION_6
0x40007cc	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40007cf	          0x890c24	                    mov dword [rsp], ecx	       132	pen.c	FUNCTION_6
0x40007d2	     0xf84d8010000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x40007d8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40007dc	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40007df	     0xf8422020000	                            je 0x4000a07	       118	pen.c	FUNCTION_4	IF_2
0x40007e5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40007e9	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40007ec	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x40007f1	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40007f3	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40007fa	        0x488b4308	                mov rax, qword [rbx + 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x40007fe	            0x89d1	                            mov ecx, edx	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000800	          0xc0e903	                               shr cl, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000803	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000806	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000809	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x400080c	     0xf849e010000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x4000812	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000816	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000819	     0xf8400020000	                            je 0x4000a1f	       118	pen.c	FUNCTION_4	IF_2
0x400081f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000823	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000826	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x400082b	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400082d	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000834	        0x488b4308	                mov rax, qword [rbx + 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000838	            0x89d1	                            mov ecx, edx	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x400083a	          0xc0e904	                               shr cl, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x400083d	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000840	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000843	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000846	     0xf8464010000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x400084c	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000850	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000853	     0xf84de010000	                            je 0x4000a37	       118	pen.c	FUNCTION_4	IF_2
0x4000859	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400085d	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000860	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x4000865	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000867	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x400086e	        0x488b4308	                mov rax, qword [rbx + 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000872	            0x89d1	                            mov ecx, edx	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000874	          0xc0e905	                               shr cl, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000877	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x400087a	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400087d	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000880	     0xf842a010000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x4000886	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400088a	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400088d	     0xf84bc010000	                            je 0x4000a4f	       118	pen.c	FUNCTION_4	IF_2
0x4000893	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000897	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400089a	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x400089f	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40008a1	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008a8	        0x488b4308	                mov rax, qword [rbx + 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008ac	          0xc0ea06	                               shr dl, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40008af	          0x83e201	                              and edx, 1	       125	pen.c	FUNCTION_5
0x40008b2	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40008b5	          0x891424	                    mov dword [rsp], edx	       125	pen.c	FUNCTION_5
0x40008b8	     0xf84f2000000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x40008be	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40008c2	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40008c5	     0xf849a010000	                            je 0x4000a65	       118	pen.c	FUNCTION_4	IF_2
0x40008cb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40008cf	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40008d2	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x40008d7	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40008d9	     0xfb793240100	          movzx edx, word [rbx + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008e0	        0x488b4308	                mov rax, qword [rbx + 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008e4	        0x66c1ea07	                               shr dx, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40008e8	          0x83e20f	                            and edx, 0xf	       132	pen.c	FUNCTION_6
0x40008eb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40008ee	          0x891424	                    mov dword [rsp], edx	       132	pen.c	FUNCTION_6
0x40008f1	     0xf84b9000000	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x40008f7	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40008fb	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40008fe	     0xf847f010000	                            je 0x4000a83	       118	pen.c	FUNCTION_4	IF_2
0x4000904	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000908	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400090b	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x4000910	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000912	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000916	     0xfb6b31d0100	          movzx esi, byte [rbx + 0x11d] 	       119	pen.c	FUNCTION_4	IF_2
0x400091d	     0xfb68b1e0100	          movzx ecx, byte [rbx + 0x11e] 	       119	pen.c	FUNCTION_4	IF_2
0x4000924	     0xfb6931f0100	          movzx edx, byte [rbx + 0x11f] 	       119	pen.c	FUNCTION_4	IF_2
0x400092b	     0xfb6bb1c0100	          movzx edi, byte [rbx + 0x11c] 	       139	pen.c	FUNCTION_7
0x4000932	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000935	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x400093a	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400093e	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000942	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000946	            0x7468	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x4000948	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400094c	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400094f	     0xf8468010000	                            je 0x4000abd	       118	pen.c	FUNCTION_4	IF_2
0x4000955	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000959	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400095c	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x4000961	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000963	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000967	     0xfb6b3210100	          movzx esi, byte [rbx + 0x121] 	       119	pen.c	FUNCTION_4	IF_2
0x400096e	     0xfb68b220100	          movzx ecx, byte [rbx + 0x122] 	       119	pen.c	FUNCTION_4	IF_2
0x4000975	     0xfb693230100	          movzx edx, byte [rbx + 0x123] 	       119	pen.c	FUNCTION_4	IF_2
0x400097c	     0xfb6bb200100	          movzx edi, byte [rbx + 0x120] 	       139	pen.c	FUNCTION_7
0x4000983	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000986	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x400098b	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400098f	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000993	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000997	            0x7417	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x4000999	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400099d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40009a0	            0x740e	                            je 0x40009b0	       118	pen.c	FUNCTION_4	IF_2
0x40009a2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40009a6	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40009a9	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x40009ae	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40009b0	      0x488b442408	                mov rax, qword [rsp + 8]	       200	pen.c	FUNCTION_11
0x40009b5	    0x644833042528	                xor rax, qword fs:[0x28]	       200	pen.c	FUNCTION_11
0x40009be	     0xf852b010000	                           jne 0x4000aef	       200	pen.c	FUNCTION_11
0x40009c4	        0x4883c410	                           add rsp, 0x10	       200	pen.c	FUNCTION_11
0x40009c8	              0x5b	                                 pop rbx	       200	pen.c	FUNCTION_11
0x40009c9	              0xc3	                                     ret	       200	pen.c	FUNCTION_11
0x40009ca	    0x660f1f440000	                    nop word [rax + rax]	       200	pen.c	FUNCTION_11
0x40009d0	    0x488b871c0100	           mov rax, qword [rdi + 0x11c] 	       185	pen.c	FUNCTION_11	IF_1
0x40009d7	    0x488987880100	            mov qword [rdi + 0x188], rax	       185	pen.c	FUNCTION_11	IF_1
0x40009de	    0x8b8724010000	           mov eax, dword [rdi + 0x124] 	       185	pen.c	FUNCTION_11	IF_1
0x40009e4	    0x898790010000	            mov dword [rdi + 0x190], eax	       185	pen.c	FUNCTION_11	IF_1
0x40009ea	            0xebc4	                           jmp 0x40009b0	       185	pen.c	FUNCTION_11	IF_1
0x40009ec	         0xf1f4000	                         nop dword [rax]	       185	pen.c	FUNCTION_11	IF_1
0x40009f0	            0x89d1	                            mov ecx, edx	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40009f2	            0xd0e9	                               shr cl, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x40009f4	          0x83e103	                              and ecx, 3	       132	pen.c	FUNCTION_6
0x40009f7	          0x890c24	                    mov dword [rsp], ecx	       132	pen.c	FUNCTION_6
0x40009fa	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40009fe	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a01	     0xf85defdffff	                           jne 0x40007e5	       118	pen.c	FUNCTION_4	IF_2
0x4000a07	            0x89d1	                            mov ecx, edx	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000a09	          0xc0e903	                               shr cl, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000a0c	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000a0f	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000a12	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a16	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a19	     0xf8500feffff	                           jne 0x400081f	       118	pen.c	FUNCTION_4	IF_2
0x4000a1f	            0x89d1	                            mov ecx, edx	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000a21	          0xc0e904	                               shr cl, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x4000a24	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000a27	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000a2a	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a2e	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a31	     0xf8522feffff	                           jne 0x4000859	       118	pen.c	FUNCTION_4	IF_2
0x4000a37	            0x89d1	                            mov ecx, edx	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000a39	          0xc0e905	                               shr cl, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x4000a3c	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000a3f	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000a42	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a46	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a49	     0xf8544feffff	                           jne 0x4000893	       118	pen.c	FUNCTION_4	IF_2
0x4000a4f	          0xc0ea06	                               shr dl, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x4000a52	          0x83e201	                              and edx, 1	       125	pen.c	FUNCTION_5
0x4000a55	          0x891424	                    mov dword [rsp], edx	       125	pen.c	FUNCTION_5
0x4000a58	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a5c	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a5f	     0xf8566feffff	                           jne 0x40008cb	       118	pen.c	FUNCTION_4	IF_2
0x4000a65	     0xfb793240100	          movzx edx, word [rbx + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000a6c	        0x66c1ea07	                               shr dx, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000a70	          0x83e20f	                            and edx, 0xf	       132	pen.c	FUNCTION_6
0x4000a73	          0x891424	                    mov dword [rsp], edx	       132	pen.c	FUNCTION_6
0x4000a76	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a7a	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a7d	     0xf8581feffff	                           jne 0x4000904	       118	pen.c	FUNCTION_4	IF_2
0x4000a83	     0xfb68b1e0100	          movzx ecx, byte [rbx + 0x11e] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a8a	     0xfb6b31d0100	          movzx esi, byte [rbx + 0x11d] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a91	     0xfb6931f0100	          movzx edx, byte [rbx + 0x11f] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a98	     0xfb6bb1c0100	          movzx edi, byte [rbx + 0x11c] 	       139	pen.c	FUNCTION_7
0x4000a9f	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000aa4	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000aa8	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000aac	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000ab0	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000ab4	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000ab7	     0xf8598feffff	                           jne 0x4000955	       118	pen.c	FUNCTION_4	IF_2
0x4000abd	     0xfb6b3210100	          movzx esi, byte [rbx + 0x121] 	       118	pen.c	FUNCTION_4	IF_2
0x4000ac4	     0xfb68b220100	          movzx ecx, byte [rbx + 0x122] 	       118	pen.c	FUNCTION_4	IF_2
0x4000acb	     0xfb693230100	          movzx edx, byte [rbx + 0x123] 	       118	pen.c	FUNCTION_4	IF_2
0x4000ad2	     0xfb6bb200100	          movzx edi, byte [rbx + 0x120] 	       139	pen.c	FUNCTION_7
0x4000ad9	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000ade	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000ae2	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000ae6	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000aea	      0xe9aafeffff	                           jmp 0x4000999	       139	pen.c	FUNCTION_7
0x4000aef	      0xe800000000	                          call 0x4000af4	       200	pen.c	FUNCTION_11
vterm_state_set_palette_color	CALL,0:FOR,0:IF,1:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	9
0x4000b50	          0x83fe0f	                            cmp esi, 0xf	       221	pen.c	FUNCTION_15	IF_1
0x4000b53	            0x7719	                            ja 0x4000b6e	       221	pen.c	FUNCTION_15	IF_1
0x4000b55	          0x4863c6	                         movsxd rax, esi	       221	pen.c	FUNCTION_15	IF_1
0x4000b58	            0x8b12	                    mov edx, dword [rdx]	       223	pen.c	FUNCTION_15	IF_1
0x4000b5a	          0x83c601	                              add esi, 1	       224	pen.c	FUNCTION_15	IF_1
0x4000b5d	        0x488d0487	                  lea rax, [rdi + rax*4]	       224	pen.c	FUNCTION_15	IF_1
0x4000b61	    0x899030010000	            mov dword [rax + 0x130], edx	       223	pen.c	FUNCTION_15	IF_1
0x4000b67	    0x4088b0330100	             mov byte [rax + 0x133], sil	       224	pen.c	FUNCTION_15	IF_1
0x4000b6e	            0xf3c3	                                     ret	       224	pen.c	FUNCTION_15	IF_1
vterm_state_setpen	CALL,36:FOR,0:IF,5:functions,0:WHILE,2:DO,0:SWITCH,1:ELSE,0	424
0x4000b80	            0x4157	                                push r15	       234	pen.c	FUNCTION_17
0x4000b82	            0x4156	                                push r14	       234	pen.c	FUNCTION_17
0x4000b84	            0x4155	                                push r13	       234	pen.c	FUNCTION_17
0x4000b86	            0x4154	                                push r12	       234	pen.c	FUNCTION_17
0x4000b88	              0x55	                                push rbp	       234	pen.c	FUNCTION_17
0x4000b89	              0x53	                                push rbx	       234	pen.c	FUNCTION_17
0x4000b8a	        0x4883ec38	                           sub rsp, 0x38	       234	pen.c	FUNCTION_17
0x4000b8e	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	pen.c	FUNCTION_17
0x4000b97	      0x4889442428	             mov qword [rsp + 0x28], rax	       234	pen.c	FUNCTION_17
0x4000b9c	            0x31c0	                            xor eax, eax	       234	pen.c	FUNCTION_17
0x4000b9e	            0x85d2	                           test edx, edx	       240	pen.c	FUNCTION_17	WHILE_1
0x4000ba0	     0xf8ef4000000	                           jle 0x4000c9a	       240	pen.c	FUNCTION_17	WHILE_1
0x4000ba6	    0x488d87740100	                  lea rax, [rdi + 0x174]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bad	          0x4989ff	                            mov r15, rdi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bb0	          0x4989f4	                            mov r12, rsi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bb3	            0x89d5	                            mov ebp, edx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bb5	            0x31db	                            xor ebx, ebx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bb7	      0x4889442408	                mov qword [rsp + 8], rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bbc	    0x488d87200100	                  lea rax, [rdi + 0x120]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bc3	      0x4889442410	             mov qword [rsp + 0x10], rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000bc8	    0x488d87700100	                  lea rax, [rdi + 0x170]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000bcf	      0x4889442418	             mov qword [rsp + 0x18], rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000bd4	         0xf1f4000	                         nop dword [rax]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000bd8	          0x4c63f3	                         movsxd r14, ebx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bdb	    0x4a8d34f50000	                        lea rsi, [r14*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000be3	        0x4d8d2c34	                    lea r13, [r12 + rsi]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000be7	        0x498b5500	                    mov rdx, qword [r13]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000beb	          0x4889d0	                            mov rax, rdx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bee	      0x25ffffff7f	                     and eax, 0x7fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bf3	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bf7	     0xf84ea030000	                            je 0x4000fe7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000bfd	     0xf8fbd000000	                            jg 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c03	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c07	     0xf84fc030000	                            je 0x4001009	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c0d	     0xf8f1d010000	                            jg 0x4000d30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c13	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c17	     0xf84b4060000	                            je 0x40012d1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c1d	     0xf8e2a030000	                           jle 0x4000f4d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c23	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c27	     0xf84c6060000	                            je 0x40012f3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c2d	     0xf8c6f060000	                            jl 0x40012a2	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c33	        0x4883f807	                              cmp rax, 7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c37	            0x753b	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c39	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c3d	    0x41808f240100	             or byte [r15 + 0x124], 0x20	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c45	    0xc74424200100	               mov dword [rsp + 0x20], 1	       125	pen.c	FUNCTION_5
0x4000c4d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000c50	            0x741e	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000c52	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000c56	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000c59	            0x7415	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000c5b	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000c5f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000c64	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x4000c69	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000c6b	       0xf1f440000	                   nop dword [rax + rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000c70	        0x498b5500	                    mov rdx, qword [r13]	       119	pen.c	FUNCTION_4	IF_2
0x4000c74	        0x4b8d04f4	                  lea rax, [r12 + r14*8]	       119	pen.c	FUNCTION_4	IF_2
0x4000c78	            0xeb09	                           jmp 0x4000c83	       119	pen.c	FUNCTION_4	IF_2
0x4000c7a	    0x660f1f440000	                    nop word [rax + rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000c80	          0x488b10	                    mov rdx, qword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000c83	          0x83c301	                              add ebx, 1	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000c86	        0x4883c008	                              add rax, 8	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000c8a	    0xf7c200000080	                    test edx, 0x80000000	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000c90	            0x75ee	                           jne 0x4000c80	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000c92	            0x39dd	                            cmp ebp, ebx	       240	pen.c	FUNCTION_17	WHILE_1
0x4000c94	     0xf8f3effffff	                            jg 0x4000bd8	       240	pen.c	FUNCTION_17	WHILE_1
0x4000c9a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       395	pen.c	FUNCTION_17
0x4000c9f	    0x644833042528	                xor rax, qword fs:[0x28]	       395	pen.c	FUNCTION_17
0x4000ca8	     0xf8567060000	                           jne 0x4001315	       395	pen.c	FUNCTION_17
0x4000cae	        0x4883c438	                           add rsp, 0x38	       395	pen.c	FUNCTION_17
0x4000cb2	              0x5b	                                 pop rbx	       395	pen.c	FUNCTION_17
0x4000cb3	              0x5d	                                 pop rbp	       395	pen.c	FUNCTION_17
0x4000cb4	            0x415c	                                 pop r12	       395	pen.c	FUNCTION_17
0x4000cb6	            0x415d	                                 pop r13	       395	pen.c	FUNCTION_17
0x4000cb8	            0x415e	                                 pop r14	       395	pen.c	FUNCTION_17
0x4000cba	            0x415f	                                 pop r15	       395	pen.c	FUNCTION_17
0x4000cbc	              0xc3	                                     ret	       395	pen.c	FUNCTION_17
0x4000cbd	           0xf1f00	                         nop dword [rax]	       395	pen.c	FUNCTION_17
0x4000cc0	        0x4883f82f	                           cmp rax, 0x2f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cc4	     0xf8fd6000000	                            jg 0x4000da0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cca	        0x4883f828	                           cmp rax, 0x28	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cce	     0xf8d0b030000	                           jge 0x4000fdf	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cd4	        0x4883f825	                           cmp rax, 0x25	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cd8	     0xf8f56010000	                            jg 0x4000e34	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cde	        0x4883f81e	                           cmp rax, 0x1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ce2	     0xf8d43030000	                           jge 0x400102b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ce8	        0x4883f81d	                           cmp rax, 0x1d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cec	            0x7586	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cee	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000cf2	    0x4180a7240100	            and byte [r15 + 0x124], 0xbf	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000cfa	    0xc74424200000	               mov dword [rsp + 0x20], 0	       125	pen.c	FUNCTION_5
0x4000d02	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d05	     0xf8465ffffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000d0b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000d0f	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d12	     0xf8458ffffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000d18	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000d1c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000d21	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x4000d26	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000d28	      0xe943ffffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4000d2d	           0xf1f00	                         nop dword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000d30	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d34	     0xf848f040000	                            je 0x40011c9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d3a	     0xf8e76010000	                           jle 0x4000eb6	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d40	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d44	     0xf845d040000	                            je 0x40011a7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d4a	     0xf8c18040000	                            jl 0x4001168	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d50	        0x4883f819	                           cmp rax, 0x19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d54	     0xf851affffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d5a	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d5e	    0x4180a7240100	            and byte [r15 + 0x124], 0xef	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d66	    0xc74424200000	               mov dword [rsp + 0x20], 0	       125	pen.c	FUNCTION_5
0x4000d6e	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d71	     0xf84f9feffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000d77	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000d7b	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d7e	     0xf84ecfeffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000d84	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000d88	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000d8d	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x4000d92	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000d94	      0xe9d7feffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4000d99	     0xf1f80000000	                         nop dword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000da0	        0x4883f861	                           cmp rax, 0x61	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000da4	     0xf8f6c010000	                            jg 0x4000f16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000daa	        0x4883f85a	                           cmp rax, 0x5a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dae	     0xf8d4a030000	                           jge 0x40010fe	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000db4	        0x4883f830	                           cmp rax, 0x30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000db8	     0xf84a9020000	                            je 0x4001067	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dbe	        0x4883f831	                           cmp rax, 0x31	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dc2	     0xf85acfeffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dc8	    0x418b872c0100	           mov eax, dword [r15 + 0x12c] 	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dcf	    0x41c787740100	    mov dword [r15 + 0x174], 0xffffffff 	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dda	            0x89c1	                            mov ecx, eax	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ddc	            0x89c7	                            mov edi, eax	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dde	    0x418987200100	            mov dword [r15 + 0x120], eax	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000de5	          0xc1e910	                           shr ecx, 0x10	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000de8	        0x88442420	               mov byte [rsp + 0x20], al	       139	pen.c	FUNCTION_7
0x4000dec	        0x66c1ef08	                               shr di, 8	       139	pen.c	FUNCTION_7
0x4000df0	            0x89ce	                            mov esi, ecx	       139	pen.c	FUNCTION_7
0x4000df2	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000df4	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4000df8	          0xc1e918	                           shr ecx, 0x18	       139	pen.c	FUNCTION_7
0x4000dfb	      0x40887c2421	              mov byte [rsp + 0x21], dil	       139	pen.c	FUNCTION_7
0x4000e00	      0x4088742422	              mov byte [rsp + 0x22], sil	       139	pen.c	FUNCTION_7
0x4000e05	        0x884c2423	               mov byte [rsp + 0x23], cl	       139	pen.c	FUNCTION_7
0x4000e09	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e0c	     0xf845efeffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000e12	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000e16	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e19	     0xf8451feffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000e1f	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000e23	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000e28	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x4000e2d	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000e2f	      0xe93cfeffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4000e34	        0x4883f826	                           cmp rax, 0x26	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e38	     0xf84ca030000	                            je 0x4001208	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e3e	        0x4883f827	                           cmp rax, 0x27	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e42	     0xf852cfeffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e48	    0x418b87280100	           mov eax, dword [r15 + 0x128] 	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e4f	    0x41c787700100	    mov dword [r15 + 0x170], 0xffffffff 	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e5a	            0x89c1	                            mov ecx, eax	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e5c	    0x4189871c0100	            mov dword [r15 + 0x11c], eax	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e63	        0x88442420	               mov byte [rsp + 0x20], al	       139	pen.c	FUNCTION_7
0x4000e67	        0x66c1e908	                               shr cx, 8	       139	pen.c	FUNCTION_7
0x4000e6b	            0x89cf	                            mov edi, ecx	       139	pen.c	FUNCTION_7
0x4000e6d	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000e6f	          0xc1e910	                           shr ecx, 0x10	       139	pen.c	FUNCTION_7
0x4000e72	      0x40887c2421	              mov byte [rsp + 0x21], dil	       139	pen.c	FUNCTION_7
0x4000e77	            0x89ce	                            mov esi, ecx	       139	pen.c	FUNCTION_7
0x4000e79	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000e7b	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4000e7f	          0xc1e918	                           shr ecx, 0x18	       139	pen.c	FUNCTION_7
0x4000e82	      0x4088742422	              mov byte [rsp + 0x22], sil	       139	pen.c	FUNCTION_7
0x4000e87	        0x884c2423	               mov byte [rsp + 0x23], cl	       139	pen.c	FUNCTION_7
0x4000e8b	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e8e	     0xf84dcfdffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000e94	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000e98	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e9b	     0xf84cffdffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000ea1	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000ea5	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000eaa	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x4000eaf	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000eb1	      0xe9bafdffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4000eb6	        0x4883f813	                           cmp rax, 0x13	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000eba	     0xf8e4d020000	                           jle 0x400110d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ec0	        0x4883f815	                           cmp rax, 0x15	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ec4	     0xf85aafdffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000eca	    0x410fb6872401	          movzx eax, byte [r15 + 0x124] 	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ed2	    0xc74424200200	               mov dword [rsp + 0x20], 2	       132	pen.c	FUNCTION_6
0x4000eda	          0x83e0f9	                     and eax, 0xfffffff9	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000edd	          0x83c804	                               or eax, 4	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ee0	    0x418887240100	              mov byte [r15 + 0x124], al	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ee7	        0x498b4708	                mov rax, qword [r15 + 8]	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eeb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000eee	     0xf847cfdffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000ef4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000ef8	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000efb	     0xf846ffdffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4000f01	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000f05	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000f0a	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x4000f0f	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000f11	      0xe95afdffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4000f16	        0x4883f864	                           cmp rax, 0x64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f1a	     0xf8c54fdffff	                            jl 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f20	        0x4883f86b	                           cmp rax, 0x6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f24	     0xf8f98000000	                            jg 0x4000fc2	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f2a	          0x83e85c	                           sub eax, 0x5c	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4000f2d	          0x4863d0	                         movsxd rdx, eax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000f30	    0x418987740100	            mov dword [r15 + 0x174], eax	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f37	      0xbe09000000	                              mov esi, 9	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000f3c	          0x4c89ff	                            mov rdi, r15	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000f3f	      0xe8fcf0ffff	               call sym.set_pen_col_ansi	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000f44	        0x498b5500	                    mov rdx, qword [r13]	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x4000f48	      0xe927fdffff	                           jmp 0x4000c74	       381	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f4d	          0x4885c0	                           test rax, rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f50	            0x747c	                            je 0x4000fce	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f52	        0x4883f801	                              cmp rax, 1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f56	     0xf8518fdffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f5c	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f60	    0x41808f240100	                or byte [r15 + 0x124], 1	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f68	    0xc74424200100	               mov dword [rsp + 0x20], 1	       125	pen.c	FUNCTION_5
0x4000f70	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000f73	            0x7419	                            je 0x4000f8e	       118	pen.c	FUNCTION_4	IF_2
0x4000f75	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000f79	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000f7c	            0x7410	                            je 0x4000f8e	       118	pen.c	FUNCTION_4	IF_2
0x4000f7e	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000f82	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4000f87	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x4000f8c	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000f8e	    0x418b87700100	           mov eax, dword [r15 + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000f95	          0x83f807	                              cmp eax, 7	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000f98	     0xf87d2fcffff	                            ja 0x4000c70	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000f9e	    0x418bb7780100	           mov esi, dword [r15 + 0x178] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000fa5	            0x85f6	                           test esi, esi	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000fa7	     0xf84c3fcffff	                            je 0x4000c70	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4000fad	    0x410fb6972401	          movzx edx, byte [r15 + 0x124] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000fb5	          0xc1e203	                              shl edx, 3	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000fb8	          0x83e208	                              and edx, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000fbb	             0x1d0	                            add eax, edx	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000fbd	      0xe98c000000	                           jmp 0x400104e	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4000fc2	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fc8	     0xf85a6fcffff	                           jne 0x4000c74	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fce	          0x4c89ff	                            mov rdi, r15	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000fd1	      0xe800000000	                          call 0x4000fd6	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000fd6	        0x498b5500	                    mov rdx, qword [r13]	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4000fda	      0xe995fcffff	                           jmp 0x4000c74	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000fdf	          0x83e828	                           sub eax, 0x28	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4000fe2	      0xe946ffffff	                           jmp 0x4000f2d	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4000fe7	        0x498b4708	                mov rax, qword [r15 + 8]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4000feb	    0x4180a7240100	            and byte [r15 + 0x124], 0xdf	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ff3	    0xc74424200000	               mov dword [rsp + 0x20], 0	       125	pen.c	FUNCTION_5
0x4000ffb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000ffe	     0xf854efcffff	                           jne 0x4000c52	       118	pen.c	FUNCTION_4	IF_2
0x4001004	      0xe967fcffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001009	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x400100d	    0x41808f240100	            or byte [r15 + 0x124], 0x40 	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001015	    0xc74424200100	               mov dword [rsp + 0x20], 1	       125	pen.c	FUNCTION_5
0x400101d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001020	     0xf85e5fcffff	                           jne 0x4000d0b	       118	pen.c	FUNCTION_4	IF_2
0x4001026	      0xe945fcffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x400102b	          0x83e81e	                           sub eax, 0x1e	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x400102e	    0x41f687240100	              test byte [r15 + 0x124], 1	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001036	    0x418987700100	            mov dword [r15 + 0x170], eax	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400103d	            0x740f	                            je 0x400104e	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x400103f	    0x418b8f780100	           mov ecx, dword [r15 + 0x178] 	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001046	          0x8d5008	                      lea edx, [rax + 8]	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001049	            0x85c9	                           test ecx, ecx	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x400104b	           0xf45c2	                         cmovne eax, edx	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x400104e	          0x4863d0	                         movsxd rdx, eax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001051	      0xbe08000000	                              mov esi, 8	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001056	          0x4c89ff	                            mov rdi, r15	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001059	      0xe8e2efffff	               call sym.set_pen_col_ansi	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x400105e	        0x498b5500	                    mov rdx, qword [r13]	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x4001062	      0xe90dfcffff	                           jmp 0x4000c74	       374	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001067	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400106c	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001071	            0x89e9	                            mov ecx, ebp	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001073	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001078	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400107d	            0x29d9	                            sub ecx, ebx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400107f	          0x83e902	                              sub ecx, 2	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001082	    0x41c787740100	    mov dword [r15 + 0x174], 0xffffffff 	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400108d	          0x4c89ff	                            mov rdi, r15	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001090	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001096	      0xe835f1ffff	                  call sym.lookup_colour	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400109b	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400109f	    0x410fb6872301	          movzx eax, byte [r15 + 0x123] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010a7	    0x410fb68f2101	          movzx ecx, byte [r15 + 0x121] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010af	    0x410fb6972201	          movzx edx, byte [r15 + 0x122] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x40010b7	    0x410fb6b72001	          movzx esi, byte [r15 + 0x120] 	       139	pen.c	FUNCTION_7
0x40010bf	        0x88442423	               mov byte [rsp + 0x23], al	       139	pen.c	FUNCTION_7
0x40010c3	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x40010c7	      0x4088742420	              mov byte [rsp + 0x20], sil	       139	pen.c	FUNCTION_7
0x40010cc	        0x884c2421	               mov byte [rsp + 0x21], cl	       139	pen.c	FUNCTION_7
0x40010d0	        0x88542422	               mov byte [rsp + 0x22], dl	       139	pen.c	FUNCTION_7
0x40010d4	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40010d7	            0x7419	                            je 0x40010f2	       118	pen.c	FUNCTION_4	IF_2
0x40010d9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40010dd	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40010e0	            0x7410	                            je 0x40010f2	       118	pen.c	FUNCTION_4	IF_2
0x40010e2	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40010e6	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x40010eb	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x40010f0	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40010f2	          0x4c63f3	                         movsxd r14, ebx	       119	pen.c	FUNCTION_4	IF_2
0x40010f5	        0x4b8b14f4	            mov rdx, qword [r12 + r14*8]	       119	pen.c	FUNCTION_4	IF_2
0x40010f9	      0xe976fbffff	                           jmp 0x4000c74	       119	pen.c	FUNCTION_4	IF_2
0x40010fe	          0x83e852	                           sub eax, 0x52	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x4001101	    0x418987700100	            mov dword [r15 + 0x170], eax	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001108	      0xe941ffffff	                           jmp 0x400104e	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400110d	    0x410fb7b72401	          movzx esi, word [r15 + 0x124] 	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001115	          0x83ea0a	                            sub edx, 0xa	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001118	          0x83e20f	                            and edx, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400111b	            0x89d0	                            mov eax, edx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400111d	           0xfb6d2	                           movzx edx, dl	       132	pen.c	FUNCTION_6
0x4001120	          0x83e00f	                            and eax, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001123	          0xc1e007	                              shl eax, 7	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001126	      0x6681e67ff8	                          and si, 0xf87f	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400112b	             0x9f0	                             or eax, esi	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400112d	    0x664189872401	              mov word [r15 + 0x124], ax	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001135	        0x498b4708	                mov rax, qword [r15 + 8]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001139	        0x89542420	             mov dword [rsp + 0x20], edx	       132	pen.c	FUNCTION_6
0x400113d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001140	     0xf842afbffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001146	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400114a	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400114d	     0xf841dfbffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001153	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001157	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x400115c	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x4001161	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4001163	      0xe908fbffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4001168	        0x498b4708	                mov rax, qword [r15 + 8]	       119	pen.c	FUNCTION_4	IF_2
0x400116c	    0x4180a7240100	            and byte [r15 + 0x124], 0xf7	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001174	    0xc74424200000	               mov dword [rsp + 0x20], 0	       125	pen.c	FUNCTION_5
0x400117c	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400117f	     0xf84ebfaffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001185	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4001189	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400118c	     0xf84defaffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001192	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001196	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x400119b	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x40011a0	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40011a2	      0xe9c9faffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x40011a7	        0x498b4708	                mov rax, qword [r15 + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40011ab	    0x4180a7240100	            and byte [r15 + 0x124], 0xf9	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011b3	    0xc74424200000	               mov dword [rsp + 0x20], 0	       132	pen.c	FUNCTION_6
0x40011bb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40011be	     0xf8530fdffff	                           jne 0x4000ef4	       118	pen.c	FUNCTION_4	IF_2
0x40011c4	      0xe9a7faffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x40011c9	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x40011cd	    0x4180a7240100	            and byte [r15 + 0x124], 0xfe	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011d5	    0xc74424200000	               mov dword [rsp + 0x20], 0	       125	pen.c	FUNCTION_5
0x40011dd	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40011e0	     0xf848afaffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x40011e6	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40011ea	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40011ed	     0xf847dfaffff	                            je 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x40011f3	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40011f7	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x40011fc	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x4001201	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4001203	      0xe968faffff	                           jmp 0x4000c70	       119	pen.c	FUNCTION_4	IF_2
0x4001208	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400120d	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001212	            0x89e9	                            mov ecx, ebp	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001214	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001219	            0x29d9	                            sub ecx, ebx	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400121b	    0x4d8d871c0100	                   lea r8, [r15 + 0x11c]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001222	          0x83e902	                              sub ecx, 2	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001225	    0x41c787700100	    mov dword [r15 + 0x170], 0xffffffff 	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001230	          0x4c89ff	                            mov rdi, r15	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001233	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001239	      0xe892efffff	                  call sym.lookup_colour	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400123e	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001242	    0x410fb6871f01	          movzx eax, byte [r15 + 0x11f] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400124a	    0x410fb68f1d01	          movzx ecx, byte [r15 + 0x11d] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001252	    0x410fb6971e01	          movzx edx, byte [r15 + 0x11e] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400125a	    0x410fb6b71c01	          movzx esi, byte [r15 + 0x11c] 	       139	pen.c	FUNCTION_7
0x4001262	        0x88442423	               mov byte [rsp + 0x23], al	       139	pen.c	FUNCTION_7
0x4001266	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x400126a	      0x4088742420	              mov byte [rsp + 0x20], sil	       139	pen.c	FUNCTION_7
0x400126f	        0x884c2421	               mov byte [rsp + 0x21], cl	       139	pen.c	FUNCTION_7
0x4001273	        0x88542422	               mov byte [rsp + 0x22], dl	       139	pen.c	FUNCTION_7
0x4001277	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400127a	     0xf8472feffff	                            je 0x40010f2	       118	pen.c	FUNCTION_4	IF_2
0x4001280	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4001284	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001287	     0xf8465feffff	                            je 0x40010f2	       118	pen.c	FUNCTION_4	IF_2
0x400128d	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001291	      0x488d742420	                   lea rsi, [rsp + 0x20]	       119	pen.c	FUNCTION_4	IF_2
0x4001296	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x400129b	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x400129d	      0xe950feffff	                           jmp 0x40010f2	       119	pen.c	FUNCTION_4	IF_2
0x40012a2	    0x410fb6872401	          movzx eax, byte [r15 + 0x124] 	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012aa	    0xc74424200100	               mov dword [rsp + 0x20], 1	       132	pen.c	FUNCTION_6
0x40012b2	          0x83e0f9	                     and eax, 0xfffffff9	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012b5	          0x83c802	                               or eax, 2	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012b8	    0x418887240100	              mov byte [r15 + 0x124], al	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012bf	        0x498b4708	                mov rax, qword [r15 + 8]	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012c3	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40012c6	     0xf8528fcffff	                           jne 0x4000ef4	       118	pen.c	FUNCTION_4	IF_2
0x40012cc	      0xe99ff9ffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x40012d1	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x40012d5	    0x41808f240100	                or byte [r15 + 0x124], 8	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012dd	    0xc74424200100	               mov dword [rsp + 0x20], 1	       125	pen.c	FUNCTION_5
0x40012e5	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40012e8	     0xf8597feffff	                           jne 0x4001185	       118	pen.c	FUNCTION_4	IF_2
0x40012ee	      0xe97df9ffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x40012f3	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x40012f7	    0x41808f240100	             or byte [r15 + 0x124], 0x10	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40012ff	    0xc74424200100	               mov dword [rsp + 0x20], 1	       125	pen.c	FUNCTION_5
0x4001307	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400130a	     0xf8567faffff	                           jne 0x4000d77	       118	pen.c	FUNCTION_4	IF_2
0x4001310	      0xe95bf9ffff	                           jmp 0x4000c70	       118	pen.c	FUNCTION_4	IF_2
0x4001315	      0xe800000000	                          call 0x400131a	       395	pen.c	FUNCTION_17
vterm_state_set_default_colors	CALL,0:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	5
0x4000b30	            0x8b06	                    mov eax, dword [rsi]	       215	pen.c	FUNCTION_14
0x4000b32	    0x898728010000	            mov dword [rdi + 0x128], eax	       215	pen.c	FUNCTION_14
0x4000b38	            0x8b02	                    mov eax, dword [rdx]	       216	pen.c	FUNCTION_14
0x4000b3a	    0x89872c010000	            mov dword [rdi + 0x12c], eax	       216	pen.c	FUNCTION_14
0x4000b40	              0xc3	                                     ret	       216	pen.c	FUNCTION_14
vterm_state_get_default_colors	CALL,0:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	5
0x4000b00	    0x8b8728010000	           mov eax, dword [rdi + 0x128] 	       204	pen.c	FUNCTION_12
0x4000b06	            0x8906	                    mov dword [rsi], eax	       204	pen.c	FUNCTION_12
0x4000b08	    0x8b872c010000	           mov eax, dword [rdi + 0x12c] 	       205	pen.c	FUNCTION_12
0x4000b0e	            0x8902	                    mov dword [rdx], eax	       205	pen.c	FUNCTION_12
0x4000b10	              0xc3	                                     ret	       205	pen.c	FUNCTION_12
vterm_state_getpen	CALL,0:FOR,0:IF,18:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,6	176
0x4001320	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       401	pen.c	FUNCTION_18	IF_1
0x4001327	            0x31c0	                            xor eax, eax	       399	pen.c	FUNCTION_18
0x4001329	          0xf6c201	                              test dl, 1	       401	pen.c	FUNCTION_18	IF_1
0x400132c	            0x7413	                            je 0x4001341	       401	pen.c	FUNCTION_18	IF_1
0x400132e	    0x48c706010000	                      mov qword [rsi], 1	       402	pen.c	FUNCTION_18	IF_1
0x4001335	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       402	pen.c	FUNCTION_18	IF_1
0x400133c	      0xb801000000	                              mov eax, 1	       402	pen.c	FUNCTION_18	IF_1
0x4001341	          0xf6c208	                              test dl, 8	       404	pen.c	FUNCTION_18	IF_2
0x4001344	            0x7415	                            je 0x400135b	       404	pen.c	FUNCTION_18	IF_2
0x4001346	          0x4863d0	                         movsxd rdx, eax	       405	pen.c	FUNCTION_18	IF_2
0x4001349	          0x83c001	                              add eax, 1	       405	pen.c	FUNCTION_18	IF_2
0x400134c	    0x48c704d60300	              mov qword [rsi + rdx*8], 3	       405	pen.c	FUNCTION_18	IF_2
0x4001354	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       405	pen.c	FUNCTION_18	IF_2
0x400135b	            0x89d1	                            mov ecx, edx	       407	pen.c	FUNCTION_18	IF_3
0x400135d	          0x83e106	                              and ecx, 6	       407	pen.c	FUNCTION_18	IF_3
0x4001360	          0x80f902	                               cmp cl, 2	       407	pen.c	FUNCTION_18	IF_3
0x4001363	     0xf8477010000	                            je 0x40014e0	       407	pen.c	FUNCTION_18	IF_3
0x4001369	          0xf6c210	                           test dl, 0x10	       410	pen.c	FUNCTION_18	IF_4
0x400136c	            0x7415	                            je 0x4001383	       410	pen.c	FUNCTION_18	IF_4
0x400136e	          0x4863d0	                         movsxd rdx, eax	       411	pen.c	FUNCTION_18	IF_4
0x4001371	          0x83c001	                              add eax, 1	       411	pen.c	FUNCTION_18	IF_4
0x4001374	    0x48c704d60500	              mov qword [rsi + rdx*8], 5	       411	pen.c	FUNCTION_18	IF_4
0x400137c	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       411	pen.c	FUNCTION_18	IF_4
0x4001383	          0xf6c220	                           test dl, 0x20	       413	pen.c	FUNCTION_18	IF_5
0x4001386	            0x7415	                            je 0x400139d	       413	pen.c	FUNCTION_18	IF_5
0x4001388	          0x4863d0	                         movsxd rdx, eax	       414	pen.c	FUNCTION_18	IF_5
0x400138b	          0x83c001	                              add eax, 1	       414	pen.c	FUNCTION_18	IF_5
0x400138e	    0x48c704d60700	              mov qword [rsi + rdx*8], 7	       414	pen.c	FUNCTION_18	IF_5
0x4001396	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       414	pen.c	FUNCTION_18	IF_5
0x400139d	          0x83e240	                           and edx, 0x40	       416	pen.c	FUNCTION_18	IF_6
0x40013a0	            0x740e	                            je 0x40013b0	       416	pen.c	FUNCTION_18	IF_6
0x40013a2	          0x4863d0	                         movsxd rdx, eax	       417	pen.c	FUNCTION_18	IF_6
0x40013a5	          0x83c001	                              add eax, 1	       417	pen.c	FUNCTION_18	IF_6
0x40013a8	    0x48c704d60900	              mov qword [rsi + rdx*8], 9	       417	pen.c	FUNCTION_18	IF_6
0x40013b0	     0xfb797240100	          movzx edx, word [rdi + 0x124] 	       419	pen.c	FUNCTION_18	IF_7
0x40013b7	      0x66f7c28007	                          test dx, 0x780	       419	pen.c	FUNCTION_18	IF_7
0x40013bc	            0x7415	                            je 0x40013d3	       419	pen.c	FUNCTION_18	IF_7
0x40013be	        0x66c1ea07	                               shr dx, 7	       420	pen.c	FUNCTION_18	IF_7
0x40013c2	          0x4863c8	                         movsxd rcx, eax	       420	pen.c	FUNCTION_18	IF_7
0x40013c5	          0x83c001	                              add eax, 1	       420	pen.c	FUNCTION_18	IF_7
0x40013c8	          0x83e20f	                            and edx, 0xf	       420	pen.c	FUNCTION_18	IF_7
0x40013cb	        0x4883c20a	                            add rdx, 0xa	       420	pen.c	FUNCTION_18	IF_7
0x40013cf	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       420	pen.c	FUNCTION_18	IF_7
0x40013d3	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       422	pen.c	FUNCTION_18	IF_8
0x40013da	          0x83e206	                              and edx, 6	       422	pen.c	FUNCTION_18	IF_8
0x40013dd	          0x80fa04	                               cmp dl, 4	       422	pen.c	FUNCTION_18	IF_8
0x40013e0	     0xf84e2000000	                            je 0x40014c8	       422	pen.c	FUNCTION_18	IF_8
0x40013e6	    0x486397700100	        movsxd rdx, dword [rdi + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x40013ed	          0x83fa07	                              cmp edx, 7	       425	pen.c	FUNCTION_18	IF_9
0x40013f0	            0x7746	                            ja 0x4001438	       425	pen.c	FUNCTION_18	IF_9
0x40013f2	          0x83c21e	                           add edx, 0x1e	       426	pen.c	FUNCTION_18	IF_9
0x40013f5	          0x8d4801	                      lea ecx, [rax + 1]	       426	pen.c	FUNCTION_18	IF_9
0x40013f8	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x40013fa	          0x4863d2	                         movsxd rdx, edx	       426	pen.c	FUNCTION_18	IF_9
0x40013fd	        0x488914c6	            mov qword [rsi + rax*8], rdx	       426	pen.c	FUNCTION_18	IF_9
0x4001401	    0x486397740100	        movsxd rdx, dword [rdi + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x4001408	          0x83fa07	                              cmp edx, 7	       447	pen.c	FUNCTION_18	IF_14
0x400140b	            0x764e	                           jbe 0x400145b	       447	pen.c	FUNCTION_18	IF_14
0x400140d	          0x8d42f8	                      lea eax, [rdx - 8]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001410	          0x83f807	                              cmp eax, 7	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001413	     0xf8697000000	                           jbe 0x40014b0	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001419	          0x8d42f0	                   lea eax, [rdx - 0x10]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400141c	      0x3def000000	                           cmp eax, 0xef	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001421	     0xf86d9010000	                           jbe 0x4001600	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001427	          0x83faff	             cmp edx, 0xffffffffffffffff	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x400142a	            0x89c8	                            mov eax, ecx	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x400142c	     0xf8456010000	                            je 0x4001588	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001432	            0xf3c3	                                     ret	       470	pen.c	FUNCTION_18
0x4001434	         0xf1f4000	                         nop dword [rax]	       470	pen.c	FUNCTION_18
0x4001438	          0x8d4af8	                      lea ecx, [rdx - 8]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400143b	          0x83f907	                              cmp ecx, 7	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400143e	            0x7730	                            ja 0x4001470	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001440	          0x83c252	                           add edx, 0x52	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001443	          0x8d4801	                      lea ecx, [rax + 1]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001446	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001448	          0x4863d2	                         movsxd rdx, edx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400144b	        0x488914c6	            mov qword [rsi + rax*8], rdx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400144f	    0x486397740100	        movsxd rdx, dword [rdi + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x4001456	          0x83fa07	                              cmp edx, 7	       447	pen.c	FUNCTION_18	IF_14
0x4001459	            0x77b2	                            ja 0x400140d	       447	pen.c	FUNCTION_18	IF_14
0x400145b	          0x83c228	                           add edx, 0x28	       448	pen.c	FUNCTION_18	IF_14
0x400145e	          0x8d4101	                      lea eax, [rcx + 1]	       448	pen.c	FUNCTION_18	IF_14
0x4001461	          0x4863c9	                         movsxd rcx, ecx	       448	pen.c	FUNCTION_18	IF_14
0x4001464	          0x4863d2	                         movsxd rdx, edx	       448	pen.c	FUNCTION_18	IF_14
0x4001467	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       448	pen.c	FUNCTION_18	IF_14
0x400146b	              0xc3	                                     ret	       448	pen.c	FUNCTION_18	IF_14
0x400146c	         0xf1f4000	                         nop dword [rax]	       448	pen.c	FUNCTION_18	IF_14
0x4001470	          0x8d4af0	                   lea ecx, [rdx - 0x10]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001473	    0x81f9ef000000	                           cmp ecx, 0xef	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001479	     0xf8781000000	                            ja 0x4001500	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400147f	          0x4863c8	                         movsxd rcx, eax	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001482	    0x41ba26000080	                    mov r10d, 0x80000026	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001488	    0x4c8d04cd0000	                         lea r8, [rcx*8]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001490	        0x4c8914ce	            mov qword [rsi + rcx*8], r10	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001494	      0xb905000080	                     mov ecx, 0x80000005	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001499	      0x4a894c0608	           mov qword [rsi + r8 + 8], rcx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400149e	      0x4a89540610	        mov qword [rsi + r8 + 0x10], rdx	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x40014a3	          0x8d4803	                      lea ecx, [rax + 3]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x40014a6	      0xe956ffffff	                           jmp 0x4001401	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x40014ab	       0xf1f440000	                   nop dword [rax + rax]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x40014b0	          0x83c25c	                           add edx, 0x5c	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014b3	          0x8d4101	                      lea eax, [rcx + 1]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014b6	          0x4863c9	                         movsxd rcx, ecx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014b9	          0x4863d2	                         movsxd rdx, edx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014bc	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014c0	              0xc3	                                     ret	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014c1	     0xf1f80000000	                         nop dword [rax]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014c8	          0x4863d0	                         movsxd rdx, eax	       423	pen.c	FUNCTION_18	IF_8
0x40014cb	          0x83c001	                              add eax, 1	       423	pen.c	FUNCTION_18	IF_8
0x40014ce	    0x48c704d61500	          mov qword [rsi + rdx*8], 0x15 	       423	pen.c	FUNCTION_18	IF_8
0x40014d6	      0xe90bffffff	                           jmp 0x40013e6	       423	pen.c	FUNCTION_18	IF_8
0x40014db	       0xf1f440000	                   nop dword [rax + rax]	       423	pen.c	FUNCTION_18	IF_8
0x40014e0	          0x4863d0	                         movsxd rdx, eax	       408	pen.c	FUNCTION_18	IF_3
0x40014e3	          0x83c001	                              add eax, 1	       408	pen.c	FUNCTION_18	IF_3
0x40014e6	    0x48c704d60400	              mov qword [rsi + rdx*8], 4	       408	pen.c	FUNCTION_18	IF_3
0x40014ee	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       408	pen.c	FUNCTION_18	IF_3
0x40014f5	      0xe96ffeffff	                           jmp 0x4001369	       408	pen.c	FUNCTION_18	IF_3
0x40014fa	    0x660f1f440000	                    nop word [rax + rax]	       408	pen.c	FUNCTION_18	IF_3
0x4001500	          0x83faff	             cmp edx, 0xffffffffffffffff	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x4001503	            0x89c1	                            mov ecx, eax	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x4001505	     0xf85f6feffff	                           jne 0x4001401	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x400150b	    0x8b971c010000	           mov edx, dword [rdi + 0x11c] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001511	    0x8b8728010000	           mov eax, dword [rdi + 0x128] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001517	    0x81e2ffffff00	                       and edx, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400151d	      0x25ffffff00	                       and eax, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001522	            0x39c2	                            cmp edx, eax	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001524	     0xf84d7feffff	                            je 0x4001401	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400152a	          0x4863d1	                         movsxd rdx, ecx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400152d	    0x41bb26000080	                    mov r11d, 0x80000026	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001533	          0x83c105	                              add ecx, 5	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001536	    0x488d04d50000	                        lea rax, [rdx*8]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400153e	        0x4c891cd6	            mov qword [rsi + rdx*8], r11	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001542	      0xba02000080	                     mov edx, 0x80000002	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001547	      0x4889540608	          mov qword [rsi + rax + 8], rdx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400154c	     0xfb6971c0100	          movzx edx, byte [rdi + 0x11c] 	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001553	    0x81ca00000080	                      or edx, 0x80000000	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001559	      0x4889540610	       mov qword [rsi + rax + 0x10], rdx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400155e	     0xfb6971d0100	          movzx edx, byte [rdi + 0x11d] 	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001565	    0x81ca00000080	                      or edx, 0x80000000	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400156b	      0x4889540618	       mov qword [rsi + rax + 0x18], rdx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001570	     0xfb6971e0100	          movzx edx, byte [rdi + 0x11e] 	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001577	      0x4889540620	       mov qword [rsi + rax + 0x20], rdx	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400157c	      0xe980feffff	                           jmp 0x4001401	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001581	     0xf1f80000000	                         nop dword [rax]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001588	    0x8b8f20010000	           mov ecx, dword [rdi + 0x120] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400158e	    0x8b972c010000	           mov edx, dword [rdi + 0x12c] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001594	    0x81e1ffffff00	                       and ecx, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400159a	    0x81e2ffffff00	                       and edx, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015a0	            0x39d1	                            cmp ecx, edx	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015a2	     0xf848afeffff	                            je 0x4001432	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015a8	          0x4863c8	                         movsxd rcx, eax	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015ab	    0x41bb30000080	                    mov r11d, 0x80000030	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015b1	          0x83c005	                              add eax, 5	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015b4	    0x488d14cd0000	                        lea rdx, [rcx*8]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015bc	        0x4c891cce	            mov qword [rsi + rcx*8], r11	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015c0	      0xb902000080	                     mov ecx, 0x80000002	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015c5	      0x48894c1608	          mov qword [rsi + rdx + 8], rcx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015ca	     0xfb68f200100	          movzx ecx, byte [rdi + 0x120] 	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015d1	    0x81c900000080	                      or ecx, 0x80000000	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015d7	      0x48894c1610	       mov qword [rsi + rdx + 0x10], rcx	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015dc	     0xfb68f210100	          movzx ecx, byte [rdi + 0x121] 	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015e3	    0x81c900000080	                      or ecx, 0x80000000	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015e9	      0x48894c1618	       mov qword [rsi + rdx + 0x18], rcx	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015ee	     0xfb68f220100	          movzx ecx, byte [rdi + 0x122] 	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015f5	      0x48894c1620	       mov qword [rsi + rdx + 0x20], rcx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40015fa	              0xc3	                                     ret	       470	pen.c	FUNCTION_18
0x40015fb	       0xf1f440000	                   nop dword [rax + rax]	       470	pen.c	FUNCTION_18
0x4001600	          0x4863c1	                         movsxd rax, ecx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001603	    0x41b930000080	                     mov r9d, 0x80000030	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001609	    0x488d3cc50000	                        lea rdi, [rax*8]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001611	        0x4c890cc6	             mov qword [rsi + rax*8], r9	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001615	      0xb805000080	                     mov eax, 0x80000005	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400161a	      0x4889443e08	          mov qword [rsi + rdi + 8], rax	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400161f	      0x4889543e10	       mov qword [rsi + rdi + 0x10], rdx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001624	          0x8d4103	                      lea eax, [rcx + 3]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001627	              0xc3	                                     ret	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
set_pen_col_ansi	CALL,2:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	37
0x4000040	        0x4883ec18	                           sub rsp, 0x18	       144	pen.c	FUNCTION_8
0x4000044	            0x89f1	                            mov ecx, esi	       144	pen.c	FUNCTION_8
0x4000046	    0x488db7200100	                  lea rsi, [rdi + 0x120]	       145	pen.c	FUNCTION_8
0x400004d	    0x64488b042528	                mov rax, qword fs:[0x28]	       144	pen.c	FUNCTION_8
0x4000056	      0x4889442408	                mov qword [rsp + 8], rax	       144	pen.c	FUNCTION_8
0x400005b	            0x31c0	                            xor eax, eax	       144	pen.c	FUNCTION_8
0x400005d	    0x488d871c0100	                  lea rax, [rdi + 0x11c]	       145	pen.c	FUNCTION_8
0x4000064	          0x83f909	                              cmp ecx, 9	       145	pen.c	FUNCTION_8
0x4000067	        0x480f44c6	                          cmove rax, rsi	       145	pen.c	FUNCTION_8
0x400006b	        0x4883fa0f	                            cmp rdx, 0xf	        39	pen.c	FUNCTION_1	IF_1
0x400006f	            0x7709	                            ja 0x400007a	        39	pen.c	FUNCTION_1	IF_1
0x4000071	    0x8b9497300100	   mov edx, dword [rdi + rdx*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x4000078	            0x8910	                    mov dword [rax], edx	        40	pen.c	FUNCTION_1	IF_1
0x400007a	      0x440fb64001	               movzx r8d, byte [rax + 1]	        40	pen.c	FUNCTION_1	IF_1
0x400007f	         0xfb67002	               movzx esi, byte [rax + 2]	        40	pen.c	FUNCTION_1	IF_1
0x4000083	         0xfb65003	               movzx edx, byte [rax + 3]	        40	pen.c	FUNCTION_1	IF_1
0x4000087	           0xfb600	                   movzx eax, byte [rax]	       139	pen.c	FUNCTION_7
0x400008a	      0x4488442401	                 mov byte [rsp + 1], r8b	       139	pen.c	FUNCTION_7
0x400008f	      0x4088742402	                 mov byte [rsp + 2], sil	       139	pen.c	FUNCTION_7
0x4000094	          0x880424	                      mov byte [rsp], al	       139	pen.c	FUNCTION_7
0x4000097	        0x488b4708	                mov rax, qword [rdi + 8]	       139	pen.c	FUNCTION_7
0x400009b	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x400009f	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40000a2	            0x7414	                            je 0x40000b8	       118	pen.c	FUNCTION_4	IF_2
0x40000a4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40000a8	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40000ab	            0x740b	                            je 0x40000b8	       118	pen.c	FUNCTION_4	IF_2
0x40000ad	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40000b1	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40000b4	            0x89cf	                            mov edi, ecx	       119	pen.c	FUNCTION_4	IF_2
0x40000b6	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40000b8	      0x488b442408	                mov rax, qword [rsp + 8]	       150	pen.c	FUNCTION_8
0x40000bd	    0x644833042528	                xor rax, qword fs:[0x28]	       150	pen.c	FUNCTION_8
0x40000c6	            0x7505	                           jne 0x40000cd	       150	pen.c	FUNCTION_8
0x40000c8	        0x4883c418	                           add rsp, 0x18	       150	pen.c	FUNCTION_8
0x40000cc	              0xc3	                                     ret	       150	pen.c	FUNCTION_8
0x40000cd	      0xe800000000	                          call 0x40000d2	       150	pen.c	FUNCTION_8
vterm_state_get_penattr	CALL,0:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,1:ELSE,0	65
0x4001630	          0x83fe09	                              cmp esi, 9	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001633	     0xf87e7000000	                            ja 0x4001720	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001639	            0x89f6	                            mov esi, esi	       474	pen.c	FUNCTION_19	SWITCH_1
0x400163b	    0xff24f5000000	                       jmp qword [rsi*8]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001642	    0x660f1f440000	                    nop word [rax + rax]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001648	    0x8b8720010000	           mov eax, dword [rdi + 0x120] 	       508	pen.c	FUNCTION_19	SWITCH_1
0x400164e	            0x8902	                    mov dword [rdx], eax	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001650	      0xb801000000	                              mov eax, 1	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001655	              0xc3	                                     ret	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001660	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001667	          0x83e001	                              and eax, 1	       476	pen.c	FUNCTION_19	SWITCH_1
0x400166a	            0x8902	                    mov dword [rdx], eax	       476	pen.c	FUNCTION_19	SWITCH_1
0x400166c	      0xb801000000	                              mov eax, 1	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001671	              0xc3	                                     ret	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001672	    0x660f1f440000	                    nop word [rax + rax]	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001678	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       480	pen.c	FUNCTION_19	SWITCH_1
0x400167f	            0xd0e8	                               shr al, 1	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001681	          0x83e003	                              and eax, 3	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001684	            0x8902	                    mov dword [rdx], eax	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001686	      0xb801000000	                              mov eax, 1	       481	pen.c	FUNCTION_19	SWITCH_1
0x400168b	              0xc3	                                     ret	       481	pen.c	FUNCTION_19	SWITCH_1
0x400168c	         0xf1f4000	                         nop dword [rax]	       481	pen.c	FUNCTION_19	SWITCH_1
0x4001690	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       484	pen.c	FUNCTION_19	SWITCH_1
0x4001697	          0xc0e803	                               shr al, 3	       484	pen.c	FUNCTION_19	SWITCH_1
0x400169a	          0x83e001	                              and eax, 1	       484	pen.c	FUNCTION_19	SWITCH_1
0x400169d	            0x8902	                    mov dword [rdx], eax	       484	pen.c	FUNCTION_19	SWITCH_1
0x400169f	      0xb801000000	                              mov eax, 1	       485	pen.c	FUNCTION_19	SWITCH_1
0x40016a4	              0xc3	                                     ret	       485	pen.c	FUNCTION_19	SWITCH_1
0x40016a5	           0xf1f00	                         nop dword [rax]	       485	pen.c	FUNCTION_19	SWITCH_1
0x40016a8	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       488	pen.c	FUNCTION_19	SWITCH_1
0x40016af	          0xc0e804	                               shr al, 4	       488	pen.c	FUNCTION_19	SWITCH_1
0x40016b2	          0x83e001	                              and eax, 1	       488	pen.c	FUNCTION_19	SWITCH_1
0x40016b5	            0x8902	                    mov dword [rdx], eax	       488	pen.c	FUNCTION_19	SWITCH_1
0x40016b7	      0xb801000000	                              mov eax, 1	       489	pen.c	FUNCTION_19	SWITCH_1
0x40016bc	              0xc3	                                     ret	       489	pen.c	FUNCTION_19	SWITCH_1
0x40016bd	           0xf1f00	                         nop dword [rax]	       489	pen.c	FUNCTION_19	SWITCH_1
0x40016c0	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       492	pen.c	FUNCTION_19	SWITCH_1
0x40016c7	          0xc0e805	                               shr al, 5	       492	pen.c	FUNCTION_19	SWITCH_1
0x40016ca	          0x83e001	                              and eax, 1	       492	pen.c	FUNCTION_19	SWITCH_1
0x40016cd	            0x8902	                    mov dword [rdx], eax	       492	pen.c	FUNCTION_19	SWITCH_1
0x40016cf	      0xb801000000	                              mov eax, 1	       493	pen.c	FUNCTION_19	SWITCH_1
0x40016d4	              0xc3	                                     ret	       493	pen.c	FUNCTION_19	SWITCH_1
0x40016d5	           0xf1f00	                         nop dword [rax]	       493	pen.c	FUNCTION_19	SWITCH_1
0x40016d8	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       496	pen.c	FUNCTION_19	SWITCH_1
0x40016df	          0xc0e806	                               shr al, 6	       496	pen.c	FUNCTION_19	SWITCH_1
0x40016e2	          0x83e001	                              and eax, 1	       496	pen.c	FUNCTION_19	SWITCH_1
0x40016e5	            0x8902	                    mov dword [rdx], eax	       496	pen.c	FUNCTION_19	SWITCH_1
0x40016e7	      0xb801000000	                              mov eax, 1	       497	pen.c	FUNCTION_19	SWITCH_1
0x40016ec	              0xc3	                                     ret	       497	pen.c	FUNCTION_19	SWITCH_1
0x40016ed	           0xf1f00	                         nop dword [rax]	       497	pen.c	FUNCTION_19	SWITCH_1
0x40016f0	     0xfb787240100	          movzx eax, word [rdi + 0x124] 	       500	pen.c	FUNCTION_19	SWITCH_1
0x40016f7	        0x66c1e807	                               shr ax, 7	       500	pen.c	FUNCTION_19	SWITCH_1
0x40016fb	          0x83e00f	                            and eax, 0xf	       500	pen.c	FUNCTION_19	SWITCH_1
0x40016fe	            0x8902	                    mov dword [rdx], eax	       500	pen.c	FUNCTION_19	SWITCH_1
0x4001700	      0xb801000000	                              mov eax, 1	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001705	              0xc3	                                     ret	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001710	    0x8b871c010000	           mov eax, dword [rdi + 0x11c] 	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001716	            0x8902	                    mov dword [rdx], eax	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001718	      0xb801000000	                              mov eax, 1	       505	pen.c	FUNCTION_19	SWITCH_1
0x400171d	              0xc3	                                     ret	       505	pen.c	FUNCTION_19	SWITCH_1
0x400171e	            0x6690	                                     nop	       505	pen.c	FUNCTION_19	SWITCH_1
0x4001720	            0x31c0	                            xor eax, eax	       512	pen.c	FUNCTION_19	SWITCH_1
0x4001722	              0xc3	                                     ret	       516	pen.c	FUNCTION_19
vterm_state_get_palette_color	CALL,1:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	2
0x4000b20	          0x4863f6	                         movsxd rsi, esi	       210	pen.c	FUNCTION_13	CALL_1
0x4000b23	      0xe9b8f5ffff	           jmp sym.lookup_colour_palette	       210	pen.c	FUNCTION_13	CALL_1
vterm_state_newpen	CALL,0:FOR,1:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	16
0x4000270	    0xc6872a010000	           mov byte [rdi + 0x12a], 0xf0 	       157	pen.c	FUNCTION_9
0x4000277	    0xc68729010000	           mov byte [rdi + 0x129], 0xf0 	       157	pen.c	FUNCTION_9
0x400027e	            0x31c0	                            xor eax, eax	       160	pen.c	FUNCTION_9
0x4000280	    0xc68728010000	           mov byte [rdi + 0x128], 0xf0 	       157	pen.c	FUNCTION_9
0x4000287	    0xc6872b010000	               mov byte [rdi + 0x12b], 0	       158	pen.c	FUNCTION_9
0x400028e	    0xc6872e010000	               mov byte [rdi + 0x12e], 0	       159	pen.c	FUNCTION_9
0x4000295	    0xc6872d010000	               mov byte [rdi + 0x12d], 0	       159	pen.c	FUNCTION_9
0x400029c	    0xc6872c010000	               mov byte [rdi + 0x12c], 0	       159	pen.c	FUNCTION_9
0x40002a3	    0xc6872f010000	               mov byte [rdi + 0x12f], 0	       160	pen.c	FUNCTION_9
0x40002aa	    0x660f1f440000	                    nop word [rax + rax]	       160	pen.c	FUNCTION_9
0x40002b0	    0x8b9000000000	                    mov edx, dword [rax]	       163	pen.c	FUNCTION_9	FOR_1
0x40002b6	    0x899407300100	      mov dword [rdi + rax + 0x130], edx	       163	pen.c	FUNCTION_9	FOR_1
0x40002bd	        0x4883c004	                              add rax, 4	       163	pen.c	FUNCTION_9	FOR_1
0x40002c1	        0x4883f840	                           cmp rax, 0x40	       162	pen.c	FUNCTION_9	FOR_1
0x40002c5	            0x75e9	                           jne 0x40002b0	       162	pen.c	FUNCTION_9	FOR_1
0x40002c7	            0xf3c3	                                     ret	       164	pen.c	FUNCTION_9
vterm_state_set_bold_highbright	CALL,0:FOR,0:IF,0:functions,0:WHILE,0:DO,0:SWITCH,0:ELSE,0	2
0x4000b70	    0x89b778010000	            mov dword [rdi + 0x178], esi	       230	pen.c	FUNCTION_16
0x4000b76	              0xc3	                                     ret	       230	pen.c	FUNCTION_16
