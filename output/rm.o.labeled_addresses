strbuf_setlen	CALL,2:WHILE,0:ELSE,1:SWITCH,0:functions,0:FOR,0:IF,2:DO,0	43
0x7e	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x7f	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x82	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x86	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x8a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x92	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x95	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x98	            0x740d	                            je 0x40000e7	       162	strbuf.h	FUNCTION_3	IF_1
0x9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x9e	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0xa1	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0xa5	            0xeb05	                           jmp 0x40000ec	       162	strbuf.h	FUNCTION_3	IF_1
0xa7	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0xac	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0xb0	            0x730f	                           jae 0x4000101	       162	strbuf.h	FUNCTION_3	IF_1
0xb2	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xb7	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xbc	      0xe800000000	                          call 0x4000101	       163	strbuf.h	FUNCTION_3	CALL_1
0xc1	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0xc5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0xc9	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0xcd	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0xd1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0xd5	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0xdb	            0x7414	                            je 0x4000131	       165	strbuf.h	FUNCTION_3	IF_2
0xdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0xe1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0xe5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0xe9	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0xec	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0xef	            0xeb24	                           jmp 0x4000155	       169	strbuf.h	FUNCTION_3
0xf1	     0xfb605000000	           movzx eax, byte [0x04000138] 	       168	strbuf.h	FUNCTION_3	CALL_2
0xf8	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0xfa	            0x7419	                            je 0x4000155	       168	strbuf.h	FUNCTION_3	CALL_2
0xfc	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x101	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x106	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x10b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x110	      0xe800000000	                          call 0x4000155	       168	strbuf.h	FUNCTION_3	CALL_2
0x115	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x116	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x117	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
_	CALL,2:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,1:DO,0	15
0x14d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_14
0x14e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_14
0x151	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_14
0x155	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_14
0x159	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_14	IF_1
0x15d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_14	IF_1
0x160	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_14	IF_1
0x162	            0x7507	                           jne 0x40001ab	        52	gettext.h	FUNCTION_14	IF_1
0x164	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_14	IF_1
0x169	            0xeb0c	                           jmp 0x40001b7	        53	gettext.h	FUNCTION_14	IF_1
0x16b	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_14	CALL_2
0x16f	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_14	CALL_2
0x172	      0xe800000000	                          call 0x40001b7	        54	gettext.h	FUNCTION_14	CALL_2
0x177	              0xc9	                                   leave	        55	gettext.h	FUNCTION_14
0x178	              0xc3	                                     ret	        55	gettext.h	FUNCTION_14
is_missing_file_error	CALL,0:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,0:DO,0	12
0x5d	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_42
0x5e	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_42
0x61	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_42
0x64	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_42
0x68	            0x7406	                            je 0x40000b0	      1197	git-compat-util.h	FUNCTION_42
0x6a	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_42
0x6e	            0x7507	                           jne 0x40000b7	      1197	git-compat-util.h	FUNCTION_42
0x70	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_42
0x75	            0xeb05	                           jmp 0x40000bc	      1197	git-compat-util.h	FUNCTION_42
0x77	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_42
0x7c	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_42
0x7d	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_42
submodules_absorb_gitdir_if_needed	CALL,8:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,1:IF,4:DO,0	77
0x4a8	              0x55	                                push rbp	        64	rm.c	FUNCTION_45
0x4a9	          0x4889e5	                            mov rbp, rsp	        64	rm.c	FUNCTION_45
0x4ac	        0x4883ec30	                           sub rsp, 0x30	        64	rm.c	FUNCTION_45
0x4b0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        64	rm.c	FUNCTION_45
0x4b4	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        66	rm.c	FUNCTION_45	FOR_1
0x4bb	      0xe9e1000000	                           jmp 0x40005e1	        66	rm.c	FUNCTION_45	FOR_1
0x4c0	    0x488b05000000	            mov rax, qword [0x04000507] 	        67	rm.c	FUNCTION_45	FOR_1
0x4c7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	        67	rm.c	FUNCTION_45	FOR_1
0x4ca	          0x4863d2	                         movsxd rdx, edx	        67	rm.c	FUNCTION_45	FOR_1
0x4cd	        0x48c1e204	                              shl rdx, 4	        67	rm.c	FUNCTION_45	FOR_1
0x4d1	          0x4801d0	                            add rax, rdx	        67	rm.c	FUNCTION_45	FOR_1
0x4d4	          0x488b00	                    mov rax, qword [rax]	        67	rm.c	FUNCTION_45	FOR_1
0x4d7	        0x488945f0	             mov qword [rbp - 0x10], rax	        67	rm.c	FUNCTION_45	FOR_1
0x4db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4df	          0x4889c7	                            mov rdi, rax	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4e2	      0xe800000000	                          call 0x4000527	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4e7	            0x89c2	                            mov edx, eax	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4ed	          0x4889c6	                            mov rsi, rax	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4f0	      0xbf00000000	                              mov edi, 0	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4f5	      0xe800000000	                          call 0x400053a	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4fa	          0x8945ec	             mov dword [rbp - 0x14], eax	        71	rm.c	FUNCTION_45	FOR_1	CALL_2
0x4fd	        0x837dec00	               cmp dword [rbp - 0x14], 0	        72	rm.c	FUNCTION_45	FOR_1	IF_1
0x501	            0x791a	                           jns 0x400055d	        72	rm.c	FUNCTION_45	FOR_1	IF_1
0x503	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x506	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x50a	            0x89d6	                            mov esi, edx	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x50c	          0x4889c7	                            mov rdi, rax	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x50f	      0xe8fdfdffff	             call sym.get_ours_cache_pos	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x514	          0x8945ec	             mov dword [rbp - 0x14], eax	        73	rm.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x517	        0x837dec00	               cmp dword [rbp - 0x14], 0	        74	rm.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x51b	            0x787c	                            js 0x40005d9	        74	rm.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x51d	    0x488b05000000	            mov rax, qword [0x04000564] 	        77	rm.c	FUNCTION_45	FOR_1
0x524	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        77	rm.c	FUNCTION_45	FOR_1
0x527	          0x4863d2	                         movsxd rdx, edx	        77	rm.c	FUNCTION_45	FOR_1
0x52a	        0x48c1e203	                              shl rdx, 3	        77	rm.c	FUNCTION_45	FOR_1
0x52e	          0x4801d0	                            add rax, rdx	        77	rm.c	FUNCTION_45	FOR_1
0x531	          0x488b00	                    mov rax, qword [rax]	        77	rm.c	FUNCTION_45	FOR_1
0x534	        0x488945f8	                mov qword [rbp - 8], rax	        77	rm.c	FUNCTION_45	FOR_1
0x538	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x53c	          0x8b4034	            mov eax, dword [rax + 0x34] 	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x53f	      0x2500f00000	                         and eax, 0xf000	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x544	      0x3d00e00000	                         cmp eax, 0xe000	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x549	            0x7551	                           jne 0x40005dc	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x54b	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x54f	        0x4883c058	                           add rax, 0x58	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x553	          0x4889c7	                            mov rdi, rax	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x556	      0xe800000000	                          call 0x400059b	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x55b	            0x85c0	                           test eax, eax	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x55d	            0x743d	                            je 0x40005dc	        79	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x55f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        81	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_6
0x563	          0x4889c7	                            mov rdi, rax	        81	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_6
0x566	      0xe800000000	                          call 0x40005ab	        81	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_6
0x56b	            0x85c0	                           test eax, eax	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x56d	            0x752d	                           jne 0x40005dc	        80	rm.c	FUNCTION_45	FOR_1	IF_3	CALL_5
0x56f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        84	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x573	          0x4889c7	                            mov rdi, rax	        84	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x576	      0xe800000000	                          call 0x40005bb	        84	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x57b	            0x85c0	                           test eax, eax	        84	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x57d	            0x751e	                           jne 0x40005dd	        84	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_7
0x57f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x583	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x587	      0xba01000000	                              mov edx, 1	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x58c	          0x4889ce	                            mov rsi, rcx	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x58f	          0x4889c7	                            mov rdi, rax	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x592	      0xe800000000	                          call 0x40005d7	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x597	            0xeb04	                           jmp 0x40005dd	        85	rm.c	FUNCTION_45	FOR_1	IF_4	CALL_8
0x599	              0x90	                                     nop	        75	rm.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x59a	            0xeb01	                           jmp 0x40005dd	        75	rm.c	FUNCTION_45	FOR_1	IF_1	IF_2
0x59c	              0x90	                                     nop	        82	rm.c	FUNCTION_45	FOR_1	IF_3
0x59d	        0x8345e801	               add dword [rbp - 0x18], 1	        66	rm.c	FUNCTION_45	FOR_1
0x5a1	    0x8b0500000000	            mov eax, dword [0x040005e7] 	        66	rm.c	FUNCTION_45	FOR_1
0x5a7	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	        66	rm.c	FUNCTION_45	FOR_1
0x5aa	     0xf8f10ffffff	                            jg 0x4000500	        66	rm.c	FUNCTION_45	FOR_1
0x5b0	              0x90	                                     nop	        88	rm.c	FUNCTION_45
0x5b1	              0xc9	                                   leave	        88	rm.c	FUNCTION_45
0x5b2	              0xc3	                                     ret	        88	rm.c	FUNCTION_45
print_error_files	CALL,5:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,1:IF,2:DO,0	69
0x39c	              0x55	                                push rbp	        46	rm.c	FUNCTION_44
0x39d	          0x4889e5	                            mov rbp, rsp	        46	rm.c	FUNCTION_44
0x3a0	        0x4883ec50	                           sub rsp, 0x50	        46	rm.c	FUNCTION_44
0x3a4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        46	rm.c	FUNCTION_44
0x3a8	        0x488975c0	             mov qword [rbp - 0x40], rsi	        46	rm.c	FUNCTION_44
0x3ac	        0x488955b8	             mov qword [rbp - 0x48], rdx	        46	rm.c	FUNCTION_44
0x3b0	        0x48894db0	             mov qword [rbp - 0x50], rcx	        46	rm.c	FUNCTION_44
0x3b4	    0x64488b042528	                mov rax, qword fs:[0x28]	        46	rm.c	FUNCTION_44
0x3bd	        0x488945f8	                mov qword [rbp - 8], rax	        46	rm.c	FUNCTION_44
0x3c1	            0x31c0	                            xor eax, eax	        46	rm.c	FUNCTION_44
0x3c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	rm.c	FUNCTION_44	IF_1
0x3c7	          0x8b4008	                mov eax, dword [rax + 8]	        47	rm.c	FUNCTION_44	IF_1
0x3ca	            0x85c0	                           test eax, eax	        47	rm.c	FUNCTION_44	IF_1
0x3cc	     0xf84bf000000	                            je 0x40004d1	        47	rm.c	FUNCTION_44	IF_1
0x3d2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        49	rm.c	FUNCTION_44	IF_1
0x3da	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        49	rm.c	FUNCTION_44	IF_1
0x3e2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        49	rm.c	FUNCTION_44	IF_1
0x3ea	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        51	rm.c	FUNCTION_44	IF_1	CALL_1
0x3ee	        0x488d45e0	                   lea rax, [rbp - 0x20]	        51	rm.c	FUNCTION_44	IF_1	CALL_1
0x3f2	          0x4889d6	                            mov rsi, rdx	        51	rm.c	FUNCTION_44	IF_1	CALL_1
0x3f5	          0x4889c7	                            mov rdi, rax	        51	rm.c	FUNCTION_44	IF_1	CALL_1
0x3f8	      0xe81bfdffff	                  call sym.strbuf_addstr	        51	rm.c	FUNCTION_44	IF_1	CALL_1
0x3fd	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x404	            0xeb31	                           jmp 0x4000477	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x406	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x40a	          0x488b00	                    mov rax, qword [rax]	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x40d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x410	          0x4863d2	                         movsxd rdx, edx	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x413	        0x48c1e204	                              shl rdx, 4	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x417	          0x4801d0	                            add rax, rdx	        55	rm.c	FUNCTION_44	IF_1	FOR_1
0x41a	          0x488b10	                    mov rdx, qword [rax]	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x41d	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x421	      0xbe00000000	                              mov esi, 0	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x426	          0x4889c7	                            mov rdi, rax	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x429	      0xb800000000	                              mov eax, 0	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x42e	      0xe800000000	                          call 0x4000473	        53	rm.c	FUNCTION_44	IF_1	FOR_1	CALL_2
0x433	        0x8345dc01	               add dword [rbp - 0x24], 1	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x437	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x43b	          0x8b5008	                mov edx, dword [rax + 8]	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x43e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x441	            0x39c2	                            cmp edx, eax	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x443	            0x77c1	                            ja 0x4000446	        52	rm.c	FUNCTION_44	IF_1	FOR_1
0x445	    0x8b0500000000	            mov eax, dword [0x0400048b] 	        56	rm.c	FUNCTION_44	IF_1	IF_2
0x44b	            0x85c0	                           test eax, eax	        56	rm.c	FUNCTION_44	IF_1	IF_2
0x44d	            0x7413	                            je 0x40004a2	        56	rm.c	FUNCTION_44	IF_1	IF_2
0x44f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        57	rm.c	FUNCTION_44	IF_1	CALL_3
0x453	        0x488d45e0	                   lea rax, [rbp - 0x20]	        57	rm.c	FUNCTION_44	IF_1	CALL_3
0x457	          0x4889d6	                            mov rsi, rdx	        57	rm.c	FUNCTION_44	IF_1	CALL_3
0x45a	          0x4889c7	                            mov rdi, rax	        57	rm.c	FUNCTION_44	IF_1	CALL_3
0x45d	      0xe8b6fcffff	                  call sym.strbuf_addstr	        57	rm.c	FUNCTION_44	IF_1	CALL_3
0x462	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x466	          0x4889c6	                            mov rsi, rax	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x469	      0xbf00000000	                              mov edi, 0	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x46e	      0xb800000000	                              mov eax, 0	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x473	      0xe800000000	                          call 0x40004b8	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x478	      0xe883fbffff	                    call sym.const_error	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x47d	            0x89c2	                            mov edx, eax	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x47f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x483	            0x8910	                    mov dword [rax], edx	        58	rm.c	FUNCTION_44	IF_1	CALL_4
0x485	        0x488d45e0	                   lea rax, [rbp - 0x20]	        59	rm.c	FUNCTION_44	IF_1	CALL_5
0x489	          0x4889c7	                            mov rdi, rax	        59	rm.c	FUNCTION_44	IF_1	CALL_5
0x48c	      0xe800000000	                          call 0x40004d1	        59	rm.c	FUNCTION_44	IF_1	CALL_5
0x491	              0x90	                                     nop	        61	rm.c	FUNCTION_44
0x492	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	rm.c	FUNCTION_44
0x496	    0x644833042528	                xor rax, qword fs:[0x28]	        61	rm.c	FUNCTION_44
0x49f	            0x7405	                            je 0x40004e6	        61	rm.c	FUNCTION_44
0x4a1	      0xe800000000	                          call 0x40004e6	        61	rm.c	FUNCTION_44
0x4a6	              0xc9	                                   leave	        61	rm.c	FUNCTION_44
0x4a7	              0xc3	                                     ret	        61	rm.c	FUNCTION_44
ce_path_match	CALL,4:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,0:DO,0	34
0x29b	              0x55	                                push rbp	       335	dir.h	FUNCTION_49
0x29c	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_49
0x29f	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_49
0x2a3	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_49
0x2a7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_49
0x2ab	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_49
0x2af	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_49	CALL_4
0x2b3	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_49	CALL_4
0x2b6	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_49	CALL_4
0x2bb	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_49	CALL_2
0x2c0	            0x7413	                            je 0x4000315	       336	dir.h	FUNCTION_49	CALL_2
0x2c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_49	CALL_4
0x2c6	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_49	CALL_4
0x2c9	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_49	CALL_4
0x2ce	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_49	CALL_2
0x2d3	            0x7507	                           jne 0x400031c	       336	dir.h	FUNCTION_49	CALL_2
0x2d5	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_49	CALL_2
0x2da	            0xeb05	                           jmp 0x4000321	       336	dir.h	FUNCTION_49	CALL_2
0x2dc	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_49	CALL_2
0x2e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_49	CALL_2
0x2e5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_49	CALL_2
0x2e8	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_49	CALL_2
0x2ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_49	CALL_2
0x2ee	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_49	CALL_2
0x2f2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_49	CALL_2
0x2f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_49	CALL_2
0x2fa	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_49	CALL_2
0x2fd	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_49	CALL_2
0x300	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_49	CALL_2
0x305	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_49	CALL_2
0x307	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_49	CALL_2
0x30a	      0xe800000000	                          call 0x400034f	       336	dir.h	FUNCTION_49	CALL_2
0x30f	              0xc9	                                   leave	       338	dir.h	FUNCTION_49
0x310	              0xc3	                                     ret	       338	dir.h	FUNCTION_49
strbuf_addstr	CALL,2:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,0:DO,0	17
0x118	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x119	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x11c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x120	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x124	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x128	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x12c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x12f	      0xe800000000	                          call 0x4000174	       279	strbuf.h	FUNCTION_5	CALL_2
0x134	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x137	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x13b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x13f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x142	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x145	      0xe800000000	                          call 0x400018a	       279	strbuf.h	FUNCTION_5	CALL_2
0x14a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x14b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x14c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
Q_	CALL,2:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,1:DO,0	14
0x179	              0x55	                                push rbp	        59	gettext.h	FUNCTION_15
0x17a	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_15
0x17d	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_15
0x181	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_15
0x185	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_15
0x189	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_15
0x18d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_15	CALL_2
0x191	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_15	CALL_2
0x195	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_15	CALL_2
0x199	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_15	CALL_2
0x19c	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_15	CALL_2
0x19f	      0xe800000000	                          call 0x40001e4	        62	gettext.h	FUNCTION_15	CALL_2
0x1a4	              0xc9	                                   leave	        63	gettext.h	FUNCTION_15
0x1a5	              0xc3	                                     ret	        63	gettext.h	FUNCTION_15
const_error	CALL,0:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,0:DO,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_21
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_21
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_21
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_21
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_21
check_local_mod	CALL,34:WHILE,0:ELSE,2:SWITCH,0:functions,0:FOR,1:IF,14:DO,0	282
0x5b3	              0x55	                                push rbp	        91	rm.c	FUNCTION_46
0x5b4	          0x4889e5	                            mov rbp, rsp	        91	rm.c	FUNCTION_46
0x5b7	              0x53	                                push rbx	        91	rm.c	FUNCTION_46
0x5b8	    0x4881ec680100	                          sub rsp, 0x168	        91	rm.c	FUNCTION_46
0x5bf	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	        91	rm.c	FUNCTION_46
0x5c6	    0x89b594feffff	            mov dword [rbp - 0x16c], esi	        91	rm.c	FUNCTION_46
0x5cc	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	rm.c	FUNCTION_46
0x5d5	        0x488945e8	             mov qword [rbp - 0x18], rax	        91	rm.c	FUNCTION_46
0x5d9	            0x31c0	                            xor eax, eax	        91	rm.c	FUNCTION_46
0x5db	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	       100	rm.c	FUNCTION_46
0x5e5	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       101	rm.c	FUNCTION_46
0x5f0	    0xc785d8feffff	              mov dword [rbp - 0x128], 0	       101	rm.c	FUNCTION_46
0x5fa	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	       101	rm.c	FUNCTION_46
0x604	     0xfb685e0feff	           movzx eax, byte [rbp - 0x120]	       101	rm.c	FUNCTION_46
0x60b	          0x83e0fe	                     and eax, 0xfffffffe	       101	rm.c	FUNCTION_46
0x60e	    0x8885e0feffff	              mov byte [rbp - 0x120], al	       101	rm.c	FUNCTION_46
0x614	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       101	rm.c	FUNCTION_46
0x61f	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       102	rm.c	FUNCTION_46
0x62a	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	       102	rm.c	FUNCTION_46
0x634	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	       102	rm.c	FUNCTION_46
0x63e	     0xfb68500ffff	           movzx eax, byte [rbp - 0x100]	       102	rm.c	FUNCTION_46
0x645	          0x83e0fe	                     and eax, 0xfffffffe	       102	rm.c	FUNCTION_46
0x648	    0x888500ffffff	              mov byte [rbp - 0x100], al	       102	rm.c	FUNCTION_46
0x64e	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       102	rm.c	FUNCTION_46
0x659	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       103	rm.c	FUNCTION_46
0x664	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	       103	rm.c	FUNCTION_46
0x66e	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	       103	rm.c	FUNCTION_46
0x678	     0xfb68520ffff	            movzx eax, byte [rbp - 0xe0]	       103	rm.c	FUNCTION_46
0x67f	          0x83e0fe	                     and eax, 0xfffffffe	       103	rm.c	FUNCTION_46
0x682	    0x888520ffffff	               mov byte [rbp - 0xe0], al	       103	rm.c	FUNCTION_46
0x688	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       103	rm.c	FUNCTION_46
0x693	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       105	rm.c	FUNCTION_46	CALL_1
0x69a	          0x4889c7	                            mov rdi, rax	       105	rm.c	FUNCTION_46	CALL_1
0x69d	      0xe8adfbffff	                    call sym.is_null_oid	       105	rm.c	FUNCTION_46	CALL_1
0x6a2	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	       105	rm.c	FUNCTION_46	CALL_1
0x6a8	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	       106	rm.c	FUNCTION_46	FOR_1
0x6b2	      0xe908030000	                           jmp 0x40009ff	       106	rm.c	FUNCTION_46	FOR_1
0x6b7	    0x488b05000000	            mov rax, qword [0x040006fe] 	       110	rm.c	FUNCTION_46	FOR_1
0x6be	    0x8b95acfeffff	            mov edx, dword [rbp - 0x154]	       110	rm.c	FUNCTION_46	FOR_1
0x6c4	          0x4863d2	                         movsxd rdx, edx	       110	rm.c	FUNCTION_46	FOR_1
0x6c7	        0x48c1e204	                              shl rdx, 4	       110	rm.c	FUNCTION_46	FOR_1
0x6cb	          0x4801d0	                            add rax, rdx	       110	rm.c	FUNCTION_46	FOR_1
0x6ce	          0x488b00	                    mov rax, qword [rax]	       110	rm.c	FUNCTION_46	FOR_1
0x6d1	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       110	rm.c	FUNCTION_46	FOR_1
0x6d8	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	       113	rm.c	FUNCTION_46	FOR_1
0x6e2	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	       114	rm.c	FUNCTION_46	FOR_1
0x6ec	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x6f3	          0x4889c7	                            mov rdi, rax	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x6f6	      0xe800000000	                          call 0x400073b	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x6fb	            0x89c2	                            mov edx, eax	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x6fd	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x704	          0x4889c6	                            mov rsi, rax	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x707	      0xbf00000000	                              mov edi, 0	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x70c	      0xe800000000	                          call 0x4000751	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x711	    0x8985b0feffff	            mov dword [rbp - 0x150], eax	       116	rm.c	FUNCTION_46	FOR_1	CALL_3
0x717	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	       117	rm.c	FUNCTION_46	FOR_1	IF_1
0x71e	            0x796e	                           jns 0x40007ce	       117	rm.c	FUNCTION_46	FOR_1	IF_1
0x720	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x726	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x72d	            0x89d6	                            mov esi, edx	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x72f	          0x4889c7	                            mov rdi, rax	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x732	      0xe8dafbffff	             call sym.get_ours_cache_pos	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x737	    0x8985b0feffff	            mov dword [rbp - 0x150], eax	       122	rm.c	FUNCTION_46	FOR_1	IF_1	CALL_4
0x73d	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	       123	rm.c	FUNCTION_46	FOR_1	IF_1	IF_2
0x744	     0xf8861020000	                            js 0x40009eb	       123	rm.c	FUNCTION_46	FOR_1	IF_1	IF_2
0x74a	    0x488b05000000	            mov rax, qword [0x04000791] 	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x751	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x757	          0x4863d2	                         movsxd rdx, edx	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x75a	        0x48c1e203	                              shl rdx, 3	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x75e	          0x4801d0	                            add rax, rdx	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x761	          0x488b00	                    mov rax, qword [rax]	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x764	          0x8b4034	            mov eax, dword [rax + 0x34] 	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x767	      0x2500f00000	                         and eax, 0xf000	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x76c	      0x3d00e00000	                         cmp eax, 0xe000	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x771	     0xf8537020000	                           jne 0x40009ee	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x777	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       127	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_6
0x77e	          0x4889c7	                            mov rdi, rax	       127	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_6
0x781	      0xe800000000	                          call 0x40007c6	       127	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_6
0x786	            0x85c0	                           test eax, eax	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x788	     0xf8520020000	                           jne 0x40009ee	       126	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3	CALL_5
0x78e	    0x488b05000000	            mov rax, qword [0x040007d5] 	       130	rm.c	FUNCTION_46	FOR_1
0x795	    0x8b95b0feffff	            mov edx, dword [rbp - 0x150]	       130	rm.c	FUNCTION_46	FOR_1
0x79b	          0x4863d2	                         movsxd rdx, edx	       130	rm.c	FUNCTION_46	FOR_1
0x79e	        0x48c1e203	                              shl rdx, 3	       130	rm.c	FUNCTION_46	FOR_1
0x7a2	          0x4801d0	                            add rax, rdx	       130	rm.c	FUNCTION_46	FOR_1
0x7a5	          0x488b00	                    mov rax, qword [rax]	       130	rm.c	FUNCTION_46	FOR_1
0x7a8	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       130	rm.c	FUNCTION_46	FOR_1
0x7af	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7b6	        0x488d5058	                   lea rdx, [rax + 0x58]	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7ba	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7c1	          0x4889c6	                            mov rsi, rax	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7c4	          0x4889d7	                            mov rdi, rdx	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7c7	      0xe800000000	                          call 0x400080c	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7cc	            0x85c0	                           test eax, eax	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7ce	            0x7940	                           jns 0x4000850	       132	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_7
0x7d0	      0xe800000000	                          call 0x4000815	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7d5	            0x8b00	                    mov eax, dword [rax]	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7d7	            0x89c7	                            mov edi, eax	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7d9	      0xe87ff8ffff	          call sym.is_missing_file_error	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7de	            0x85c0	                           test eax, eax	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7e0	     0xf85cb010000	                           jne 0x40009f1	       133	rm.c	FUNCTION_46	FOR_1	IF_4	IF_5	CALL_8
0x7e6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x7ed	        0x488d5858	                   lea rbx, [rax + 0x58]	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x7f1	      0xbf00000000	                              mov edi, 0	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x7f6	      0xe852f9ffff	                               call sym.	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x7fb	          0x4889de	                            mov rsi, rbx	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x7fe	          0x4889c7	                            mov rdi, rax	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x801	      0xb800000000	                              mov eax, 0	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x806	      0xe800000000	                          call 0x400084b	       134	rm.c	FUNCTION_46	FOR_1	IF_4	CALL_10
0x80b	      0xe9a1010000	                           jmp 0x40009f1	       136	rm.c	FUNCTION_46	FOR_1	IF_4
0x810	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       138	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	CALL_11
0x816	      0x2500f00000	                         and eax, 0xf000	       138	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	CALL_11
0x81b	      0x3d00400000	                         cmp eax, 0x4000	       138	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	CALL_11
0x820	            0x751a	                           jne 0x400087c	       138	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	CALL_11
0x822	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       144	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7	CALL_12
0x829	          0x8b4034	            mov eax, dword [rax + 0x34] 	       144	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7	CALL_12
0x82c	      0x2500f00000	                         and eax, 0xf000	       144	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7	CALL_12
0x831	      0x3d00e00000	                         cmp eax, 0xe000	       144	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7	CALL_12
0x836	     0xf8578010000	                           jne 0x40009f4	       144	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7	CALL_12
0x83c	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x843	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x84a	      0xb900000000	                              mov ecx, 0	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x84f	          0x4889c6	                            mov rsi, rax	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x852	      0xbf00000000	                              mov edi, 0	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x857	      0xe800000000	                          call 0x400089c	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x85c	            0x85c0	                           test eax, eax	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x85e	            0x7532	                           jne 0x40008d2	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x860	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       168	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_14
0x867	          0x8b4034	            mov eax, dword [rax + 0x34] 	       168	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_14
0x86a	      0x2500f00000	                         and eax, 0xf000	       168	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_14
0x86f	      0x3d00e00000	                         cmp eax, 0xe000	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x874	            0x7526	                           jne 0x40008dc	       167	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_13
0x876	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       169	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_15
0x87d	        0x4883c058	                           add rax, 0x58	       169	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_15
0x881	      0xbe05000000	                              mov esi, 5	       169	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_15
0x886	          0x4889c7	                            mov rdi, rax	       169	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_15
0x889	      0xe800000000	                          call 0x40008ce	       169	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_15
0x88e	            0x85c0	                           test eax, eax	       168	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_14
0x890	            0x740a	                            je 0x40008dc	       168	rm.c	FUNCTION_46	FOR_1	IF_8	CALL_14
0x892	    0xc785b4feffff	              mov dword [rbp - 0x14c], 1	       172	rm.c	FUNCTION_46	FOR_1	IF_8
0x89c	    0x83bdbcfeffff	              cmp dword [rbp - 0x144], 0	       180	rm.c	FUNCTION_46	FOR_1	IF_9
0x8a3	            0x7564	                           jne 0x4000949	       180	rm.c	FUNCTION_46	FOR_1	IF_9
0x8a5	    0x488d8da8feff	                  lea rcx, [rbp - 0x158]	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8ac	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8b3	    0x488bb5c0feff	            mov rsi, qword [rbp - 0x140]	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8ba	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8c1	          0x4889c7	                            mov rdi, rax	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8c4	      0xe800000000	                          call 0x4000909	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8c9	            0x85c0	                           test eax, eax	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8cb	            0x753c	                           jne 0x4000949	       181	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_16
0x8cd	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8d4	          0x8b5834	            mov ebx, dword [rax + 0x34] 	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8d7	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8dd	            0x89c7	                            mov edi, eax	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8df	      0xe8c2f8ffff	                 call sym.create_ce_mode	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8e4	            0x39c3	                            cmp ebx, eax	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8e6	            0x7521	                           jne 0x4000949	       182	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_17
0x8e8	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x8ef	        0x488d5044	                   lea rdx, [rax + 0x44]	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x8f3	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x8fa	          0x4889c6	                            mov rsi, rax	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x8fd	          0x4889d7	                            mov rdi, rdx	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x900	      0xe825f9ffff	                         call sym.oidcmp	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x905	            0x85c0	                           test eax, eax	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x907	            0x740a	                            je 0x4000953	       183	rm.c	FUNCTION_46	FOR_1	IF_9	CALL_18
0x909	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	       184	rm.c	FUNCTION_46	FOR_1	IF_9
0x913	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       194	rm.c	FUNCTION_46	FOR_1	IF_10
0x91a	            0x7440	                            je 0x400099c	       194	rm.c	FUNCTION_46	FOR_1	IF_10
0x91c	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	       194	rm.c	FUNCTION_46	FOR_1	IF_10
0x923	            0x7437	                            je 0x400099c	       194	rm.c	FUNCTION_46	FOR_1	IF_10
0x925	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x92c	            0x7413	                            je 0x4000981	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x92e	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x935	          0x8b4038	            mov eax, dword [rax + 0x38] 	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x938	      0x2500000020	                     and eax, 0x20000000	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x93d	            0x85c0	                           test eax, eax	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x93f	            0x7576	                           jne 0x40009f7	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x941	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       196	rm.c	FUNCTION_46	FOR_1	IF_10	CALL_20
0x948	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       196	rm.c	FUNCTION_46	FOR_1	IF_10	CALL_20
0x94f	          0x4889d6	                            mov rsi, rdx	       196	rm.c	FUNCTION_46	FOR_1	IF_10	CALL_20
0x952	          0x4889c7	                            mov rdi, rax	       196	rm.c	FUNCTION_46	FOR_1	IF_10	CALL_20
0x955	      0xe800000000	                          call 0x400099a	       196	rm.c	FUNCTION_46	FOR_1	IF_10	CALL_20
0x95a	            0xeb5b	                           jmp 0x40009f7	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x95c	    0x83bd94feffff	              cmp dword [rbp - 0x16c], 0	       198	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12
0x963	            0x7553	                           jne 0x40009f8	       198	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12
0x965	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	       199	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	IF_13
0x96c	            0x7419	                            je 0x40009c7	       199	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	IF_13
0x96e	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       200	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_21
0x975	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       200	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_21
0x97c	          0x4889d6	                            mov rsi, rdx	       200	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_21
0x97f	          0x4889c7	                            mov rdi, rax	       200	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_21
0x982	      0xe800000000	                          call 0x40009c7	       200	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_21
0x987	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       201	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	IF_14
0x98e	            0x7428	                            je 0x40009f8	       201	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	IF_14
0x990	    0x488b95c0feff	            mov rdx, qword [rbp - 0x140]	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x997	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x99e	          0x4889d6	                            mov rsi, rdx	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x9a1	          0x4889c7	                            mov rdi, rax	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x9a4	      0xe800000000	                          call 0x40009e9	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x9a9	            0xeb0d	                           jmp 0x40009f8	       202	rm.c	FUNCTION_46	FOR_1	ELSE_2	IF_12	CALL_22
0x9ab	              0x90	                                     nop	       124	rm.c	FUNCTION_46	FOR_1	IF_1	IF_2
0x9ac	            0xeb0a	                           jmp 0x40009f8	       124	rm.c	FUNCTION_46	FOR_1	IF_1	IF_2
0x9ae	              0x90	                                     nop	       128	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3
0x9af	            0xeb07	                           jmp 0x40009f8	       128	rm.c	FUNCTION_46	FOR_1	IF_1	IF_3
0x9b1	              0x90	                                     nop	       136	rm.c	FUNCTION_46	FOR_1	IF_4
0x9b2	            0xeb04	                           jmp 0x40009f8	       136	rm.c	FUNCTION_46	FOR_1	IF_4
0x9b4	              0x90	                                     nop	       145	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7
0x9b5	            0xeb01	                           jmp 0x40009f8	       145	rm.c	FUNCTION_46	FOR_1	ELSE_1	IF_6	IF_7
0x9b7	              0x90	                                     nop	       195	rm.c	FUNCTION_46	FOR_1	IF_10	IF_11	CALL_19
0x9b8	    0x8385acfeffff	              add dword [rbp - 0x154], 1	       106	rm.c	FUNCTION_46	FOR_1
0x9bf	    0x8b0500000000	            mov eax, dword [0x04000a05] 	       106	rm.c	FUNCTION_46	FOR_1
0x9c5	    0x3b85acfeffff	            cmp eax, dword [rbp - 0x154]	       106	rm.c	FUNCTION_46	FOR_1
0x9cb	     0xf8fe6fcffff	                            jg 0x40006f7	       106	rm.c	FUNCTION_46	FOR_1
0x9d1	      0xbf00000000	                              mov edi, 0	       205	rm.c	FUNCTION_46	CALL_23
0x9d6	      0xe872f7ffff	                               call sym.	       205	rm.c	FUNCTION_46	CALL_23
0x9db	          0x4889c3	                            mov rbx, rax	       205	rm.c	FUNCTION_46	CALL_23
0x9de	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       210	rm.c	FUNCTION_46
0x9e4	            0x89c0	                            mov eax, eax	       205	rm.c	FUNCTION_46	CALL_23
0x9e6	          0x4889c2	                            mov rdx, rax	       205	rm.c	FUNCTION_46	CALL_23
0x9e9	      0xbe00000000	                              mov esi, 0	       205	rm.c	FUNCTION_46	CALL_23
0x9ee	      0xbf00000000	                              mov edi, 0	       205	rm.c	FUNCTION_46	CALL_23
0x9f3	      0xe881f7ffff	                              call sym.Q	       205	rm.c	FUNCTION_46	CALL_23
0x9f8	          0x4889c6	                            mov rsi, rax	       205	rm.c	FUNCTION_46	CALL_23
0x9fb	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       205	rm.c	FUNCTION_46	CALL_23
0xa02	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       205	rm.c	FUNCTION_46	CALL_23
0xa09	          0x4889d1	                            mov rcx, rdx	       205	rm.c	FUNCTION_46	CALL_23
0xa0c	          0x4889da	                            mov rdx, rbx	       205	rm.c	FUNCTION_46	CALL_23
0xa0f	          0x4889c7	                            mov rdi, rax	       205	rm.c	FUNCTION_46	CALL_23
0xa12	      0xe885f9ffff	              call sym.print_error_files	       205	rm.c	FUNCTION_46	CALL_23
0xa17	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       213	rm.c	FUNCTION_46	CALL_26
0xa1e	      0xbe00000000	                              mov esi, 0	       213	rm.c	FUNCTION_46	CALL_26
0xa23	          0x4889c7	                            mov rdi, rax	       213	rm.c	FUNCTION_46	CALL_26
0xa26	      0xe800000000	                          call 0x4000a6b	       213	rm.c	FUNCTION_46	CALL_26
0xa2b	      0xbf00000000	                              mov edi, 0	       214	rm.c	FUNCTION_46	CALL_27
0xa30	      0xe818f7ffff	                               call sym.	       214	rm.c	FUNCTION_46	CALL_27
0xa35	          0x4889c3	                            mov rbx, rax	       214	rm.c	FUNCTION_46	CALL_27
0xa38	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	       218	rm.c	FUNCTION_46
0xa3e	            0x89c0	                            mov eax, eax	       214	rm.c	FUNCTION_46	CALL_27
0xa40	          0x4889c2	                            mov rdx, rax	       214	rm.c	FUNCTION_46	CALL_27
0xa43	      0xbe00000000	                              mov esi, 0	       214	rm.c	FUNCTION_46	CALL_27
0xa48	      0xbf00000000	                              mov edi, 0	       214	rm.c	FUNCTION_46	CALL_27
0xa4d	      0xe827f7ffff	                              call sym.Q	       214	rm.c	FUNCTION_46	CALL_27
0xa52	          0x4889c6	                            mov rsi, rax	       214	rm.c	FUNCTION_46	CALL_27
0xa55	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       214	rm.c	FUNCTION_46	CALL_27
0xa5c	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       214	rm.c	FUNCTION_46	CALL_27
0xa63	          0x4889d1	                            mov rcx, rdx	       214	rm.c	FUNCTION_46	CALL_27
0xa66	          0x4889da	                            mov rdx, rbx	       214	rm.c	FUNCTION_46	CALL_27
0xa69	          0x4889c7	                            mov rdi, rax	       214	rm.c	FUNCTION_46	CALL_27
0xa6c	      0xe82bf9ffff	              call sym.print_error_files	       214	rm.c	FUNCTION_46	CALL_27
0xa71	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       222	rm.c	FUNCTION_46	CALL_30
0xa78	      0xbe00000000	                              mov esi, 0	       222	rm.c	FUNCTION_46	CALL_30
0xa7d	          0x4889c7	                            mov rdi, rax	       222	rm.c	FUNCTION_46	CALL_30
0xa80	      0xe800000000	                          call 0x4000ac5	       222	rm.c	FUNCTION_46	CALL_30
0xa85	      0xbf00000000	                              mov edi, 0	       224	rm.c	FUNCTION_46	CALL_31
0xa8a	      0xe8bef6ffff	                               call sym.	       224	rm.c	FUNCTION_46	CALL_31
0xa8f	          0x4889c3	                            mov rbx, rax	       224	rm.c	FUNCTION_46	CALL_31
0xa92	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	       227	rm.c	FUNCTION_46
0xa98	            0x89c0	                            mov eax, eax	       224	rm.c	FUNCTION_46	CALL_31
0xa9a	          0x4889c2	                            mov rdx, rax	       224	rm.c	FUNCTION_46	CALL_31
0xa9d	      0xbe00000000	                              mov esi, 0	       224	rm.c	FUNCTION_46	CALL_31
0xaa2	      0xbf00000000	                              mov edi, 0	       224	rm.c	FUNCTION_46	CALL_31
0xaa7	      0xe8cdf6ffff	                              call sym.Q	       224	rm.c	FUNCTION_46	CALL_31
0xaac	          0x4889c6	                            mov rsi, rax	       224	rm.c	FUNCTION_46	CALL_31
0xaaf	    0x488d95a4feff	                  lea rdx, [rbp - 0x15c]	       224	rm.c	FUNCTION_46	CALL_31
0xab6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       224	rm.c	FUNCTION_46	CALL_31
0xabd	          0x4889d1	                            mov rcx, rdx	       224	rm.c	FUNCTION_46	CALL_31
0xac0	          0x4889da	                            mov rdx, rbx	       224	rm.c	FUNCTION_46	CALL_31
0xac3	          0x4889c7	                            mov rdi, rax	       224	rm.c	FUNCTION_46	CALL_31
0xac6	      0xe8d1f8ffff	              call sym.print_error_files	       224	rm.c	FUNCTION_46	CALL_31
0xacb	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       231	rm.c	FUNCTION_46	CALL_34
0xad2	      0xbe00000000	                              mov esi, 0	       231	rm.c	FUNCTION_46	CALL_34
0xad7	          0x4889c7	                            mov rdi, rax	       231	rm.c	FUNCTION_46	CALL_34
0xada	      0xe800000000	                          call 0x4000b1f	       231	rm.c	FUNCTION_46	CALL_34
0xadf	    0x8b85a4feffff	            mov eax, dword [rbp - 0x15c]	       233	rm.c	FUNCTION_46
0xae5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       234	rm.c	FUNCTION_46
0xae9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       234	rm.c	FUNCTION_46
0xaf2	            0x7405	                            je 0x4000b39	       234	rm.c	FUNCTION_46
0xaf4	      0xe800000000	                          call 0x4000b39	       234	rm.c	FUNCTION_46
0xaf9	    0x4881c4680100	                          add rsp, 0x168	       234	rm.c	FUNCTION_46
0xb00	              0x5b	                                 pop rbx	       234	rm.c	FUNCTION_46
0xb01	              0x5d	                                 pop rbp	       234	rm.c	FUNCTION_46
0xb02	              0xc3	                                     ret	       234	rm.c	FUNCTION_46
cmd_rm	CALL,45:WHILE,0:ELSE,1:SWITCH,0:functions,0:FOR,4:IF,25:DO,0	407
0xb03	              0x55	                                push rbp	       253	rm.c	FUNCTION_47
0xb04	          0x4889e5	                            mov rbp, rsp	       253	rm.c	FUNCTION_47
0xb07	              0x53	                                push rbx	       253	rm.c	FUNCTION_47
0xb08	    0x4881ecc80000	                           sub rsp, 0xc8	       253	rm.c	FUNCTION_47
0xb0f	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	       253	rm.c	FUNCTION_47
0xb15	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       253	rm.c	FUNCTION_47
0xb1c	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       253	rm.c	FUNCTION_47
0xb23	    0x64488b042528	                mov rax, qword fs:[0x28]	       253	rm.c	FUNCTION_47
0xb2c	        0x488945e8	             mov qword [rbp - 0x18], rax	       253	rm.c	FUNCTION_47
0xb30	            0x31c0	                            xor eax, eax	       253	rm.c	FUNCTION_47
0xb32	      0xbe00000000	                              mov esi, 0	       258	rm.c	FUNCTION_47	CALL_1
0xb37	      0xbf00000000	                              mov edi, 0	       258	rm.c	FUNCTION_47	CALL_1
0xb3c	      0xe800000000	                          call 0x4000b81	       258	rm.c	FUNCTION_47	CALL_1
0xb41	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       260	rm.c	FUNCTION_47	CALL_2
0xb48	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       260	rm.c	FUNCTION_47	CALL_2
0xb4f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       260	rm.c	FUNCTION_47	CALL_2
0xb55	    0x41b900000000	                              mov r9d, 0	       260	rm.c	FUNCTION_47	CALL_2
0xb5b	    0x41b800000000	                              mov r8d, 0	       260	rm.c	FUNCTION_47	CALL_2
0xb61	      0xb900000000	                              mov ecx, 0	       260	rm.c	FUNCTION_47	CALL_2
0xb66	            0x89c7	                            mov edi, eax	       260	rm.c	FUNCTION_47	CALL_2
0xb68	      0xe800000000	                          call 0x4000bad	       260	rm.c	FUNCTION_47	CALL_2
0xb6d	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       260	rm.c	FUNCTION_47	CALL_2
0xb73	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       262	rm.c	FUNCTION_47	IF_1
0xb7a	            0x750f	                           jne 0x4000bcb	       262	rm.c	FUNCTION_47	IF_1
0xb7c	      0xbe00000000	                              mov esi, 0	       263	rm.c	FUNCTION_47	CALL_3
0xb81	      0xbf00000000	                              mov edi, 0	       263	rm.c	FUNCTION_47	CALL_3
0xb86	      0xe800000000	                          call 0x4000bcb	       263	rm.c	FUNCTION_47	CALL_3
0xb8b	    0x8b0500000000	            mov eax, dword [0x04000bd1] 	       265	rm.c	FUNCTION_47	IF_2
0xb91	            0x85c0	                           test eax, eax	       265	rm.c	FUNCTION_47	IF_2
0xb93	            0x7505	                           jne 0x4000bda	       265	rm.c	FUNCTION_47	IF_2
0xb95	      0xe800000000	                          call 0x4000bda	       266	rm.c	FUNCTION_47	CALL_4
0xb9a	      0xbe01000000	                              mov esi, 1	       268	rm.c	FUNCTION_47	CALL_5
0xb9f	      0xbf00000000	                              mov edi, 0	       268	rm.c	FUNCTION_47	CALL_5
0xba4	      0xe800000000	                          call 0x4000be9	       268	rm.c	FUNCTION_47	CALL_5
0xba9	      0xbf00000000	                              mov edi, 0	       270	rm.c	FUNCTION_47	IF_3	CALL_6
0xbae	      0xe800000000	                          call 0x4000bf3	       270	rm.c	FUNCTION_47	IF_3	CALL_6
0xbb3	            0x85c0	                           test eax, eax	       270	rm.c	FUNCTION_47	IF_3	CALL_6
0xbb5	            0x7917	                           jns 0x4000c0e	       270	rm.c	FUNCTION_47	IF_3	CALL_6
0xbb7	      0xbf00000000	                              mov edi, 0	       271	rm.c	FUNCTION_47	CALL_8
0xbbc	      0xe88cf5ffff	                               call sym.	       271	rm.c	FUNCTION_47	CALL_8
0xbc1	          0x4889c7	                            mov rdi, rax	       271	rm.c	FUNCTION_47	CALL_8
0xbc4	      0xb800000000	                              mov eax, 0	       271	rm.c	FUNCTION_47	CALL_8
0xbc9	      0xe800000000	                          call 0x4000c0e	       271	rm.c	FUNCTION_47	CALL_8
0xbce	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       273	rm.c	FUNCTION_47	CALL_9
0xbd5	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       273	rm.c	FUNCTION_47	CALL_9
0xbdc	        0x488d4590	                   lea rax, [rbp - 0x70]	       273	rm.c	FUNCTION_47	CALL_9
0xbe0	          0x4989c8	                             mov r8, rcx	       273	rm.c	FUNCTION_47	CALL_9
0xbe3	          0x4889d1	                            mov rcx, rdx	       273	rm.c	FUNCTION_47	CALL_9
0xbe6	      0xba01000000	                              mov edx, 1	       273	rm.c	FUNCTION_47	CALL_9
0xbeb	      0xbe00000000	                              mov esi, 0	       273	rm.c	FUNCTION_47	CALL_9
0xbf0	          0x4889c7	                            mov rdi, rax	       273	rm.c	FUNCTION_47	CALL_9
0xbf3	      0xe800000000	                          call 0x4000c38	       273	rm.c	FUNCTION_47	CALL_9
0xbf8	        0x488d4590	                   lea rax, [rbp - 0x70]	       276	rm.c	FUNCTION_47	CALL_10
0xbfc	    0x41b800000000	                              mov r8d, 0	       276	rm.c	FUNCTION_47	CALL_10
0xc02	      0xb900000000	                              mov ecx, 0	       276	rm.c	FUNCTION_47	CALL_10
0xc07	          0x4889c2	                            mov rdx, rax	       276	rm.c	FUNCTION_47	CALL_10
0xc0a	      0xbe04000000	                              mov esi, 4	       276	rm.c	FUNCTION_47	CALL_10
0xc0f	      0xbf00000000	                              mov edi, 0	       276	rm.c	FUNCTION_47	CALL_10
0xc14	      0xe800000000	                          call 0x4000c59	       276	rm.c	FUNCTION_47	CALL_10
0xc19	          0x8b4590	             mov eax, dword [rbp - 0x70]	       278	rm.c	FUNCTION_47	CALL_11
0xc1c	            0x4898	                                    cdqe	       278	rm.c	FUNCTION_47	CALL_11
0xc1e	      0xbe01000000	                              mov esi, 1	       278	rm.c	FUNCTION_47	CALL_11
0xc23	          0x4889c7	                            mov rdi, rax	       278	rm.c	FUNCTION_47	CALL_11
0xc26	      0xe800000000	                          call 0x4000c6b	       278	rm.c	FUNCTION_47	CALL_11
0xc2b	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       278	rm.c	FUNCTION_47	CALL_11
0xc32	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       280	rm.c	FUNCTION_47	FOR_1
0xc3c	      0xe997010000	                           jmp 0x4000e18	       280	rm.c	FUNCTION_47	FOR_1
0xc41	    0x488b05000000	            mov rax, qword [0x04000c88] 	       281	rm.c	FUNCTION_47	FOR_1
0xc48	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       281	rm.c	FUNCTION_47	FOR_1
0xc4e	          0x4863d2	                         movsxd rdx, edx	       281	rm.c	FUNCTION_47	FOR_1
0xc51	        0x48c1e203	                              shl rdx, 3	       281	rm.c	FUNCTION_47	FOR_1
0xc55	          0x4801d0	                            add rax, rdx	       281	rm.c	FUNCTION_47	FOR_1
0xc58	          0x488b00	                    mov rax, qword [rax]	       281	rm.c	FUNCTION_47	FOR_1
0xc5b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       281	rm.c	FUNCTION_47	FOR_1
0xc62	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc69	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc6d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc74	          0x4889ce	                            mov rsi, rcx	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc77	          0x4889c7	                            mov rdi, rax	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc7a	      0xe81cf6ffff	                  call sym.ce_path_match	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc7f	            0x85c0	                           test eax, eax	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc81	     0xf8449010000	                            je 0x4000e10	       282	rm.c	FUNCTION_47	FOR_1	IF_4	CALL_12
0xc87	    0x8b0500000000	            mov eax, dword [0x04000ccd] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xc8d	          0x8d5001	                      lea edx, [rax + 1]	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xc90	    0x8b0500000000	            mov eax, dword [0x04000cd6] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xc96	            0x39c2	                            cmp edx, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xc98	     0xf8e87000000	                           jle 0x4000d65	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xc9e	    0x8b0500000000	            mov eax, dword [0x04000ce4] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xca4	          0x8d5010	                   lea edx, [rax + 0x10]	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xca7	            0x89d0	                            mov eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xca9	             0x1c0	                            add eax, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcab	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcad	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcaf	          0xc1ea1f	                           shr edx, 0x1f	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcb2	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcb4	            0xd1f8	                              sar eax, 1	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcb6	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcb8	    0x8b0500000000	            mov eax, dword [0x04000cfe] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcbe	          0x83c001	                              add eax, 1	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcc1	            0x39c2	                            cmp edx, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcc3	            0x7d11	                           jge 0x4000d16	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcc5	    0x8b0500000000	            mov eax, dword [0x04000d0b] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xccb	          0x83c001	                              add eax, 1	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcce	    0x890500000000	            mov dword [0x04000d14], eax 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcd4	            0xeb1e	                           jmp 0x4000d34	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcd6	    0x8b0500000000	            mov eax, dword [0x04000d1c] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcdc	          0x8d5010	                   lea edx, [rax + 0x10]	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcdf	            0x89d0	                            mov eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xce1	             0x1c0	                            add eax, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xce3	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xce5	            0x89c2	                            mov edx, eax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xce7	          0xc1ea1f	                           shr edx, 0x1f	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcea	             0x1d0	                            add eax, edx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcec	            0xd1f8	                              sar eax, 1	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcee	    0x890500000000	            mov dword [0x04000d34], eax 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcf4	    0x8b0500000000	            mov eax, dword [0x04000d3a] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcfa	            0x4898	                                    cdqe	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcfc	          0x4889c6	                            mov rsi, rax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xcff	      0xbf10000000	                           mov edi, 0x10	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd04	      0xe802f3ffff	                        call sym.st_mult	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd09	          0x4889c2	                            mov rdx, rax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd0c	    0x488b05000000	            mov rax, qword [0x04000d53] 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd13	          0x4889d6	                            mov rsi, rdx	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd16	          0x4889c7	                            mov rdi, rax	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd19	      0xe800000000	                          call 0x4000d5e	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd1e	    0x488905000000	            mov qword [0x04000d65], rax 	       284	rm.c	FUNCTION_47	FOR_1	CALL_13
0xd25	    0x488b05000000	            mov rax, qword [0x04000d6c] 	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd2c	    0x8b1500000000	            mov edx, dword [0x04000d72] 	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd32	          0x4863d2	                         movsxd rdx, edx	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd35	        0x48c1e204	                              shl rdx, 4	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd39	        0x488d1c10	                    lea rbx, [rax + rdx]	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd3d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd44	        0x4883c058	                           add rax, 0x58	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd48	          0x4889c7	                            mov rdi, rax	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd4b	      0xe800000000	                          call 0x4000d90	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd50	          0x488903	                    mov qword [rbx], rax	       285	rm.c	FUNCTION_47	FOR_1	CALL_14
0xd53	    0x488b05000000	            mov rax, qword [0x04000d9a] 	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd5a	    0x8b1500000000	            mov edx, dword [0x04000da0] 	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd60	          0x4863d2	                         movsxd rdx, edx	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd63	        0x48c1e204	                              shl rdx, 4	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd67	          0x4801c2	                            add rdx, rax	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd6a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd71	          0x8b4034	            mov eax, dword [rax + 0x34] 	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd74	      0x2500f00000	                         and eax, 0xf000	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd79	      0x3d00e00000	                         cmp eax, 0xe000	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd7e	           0xf94c0	                                 sete al	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd81	          0x884208	                  mov byte [rdx + 8], al	       286	rm.c	FUNCTION_47	FOR_1	CALL_15
0xd84	    0x488b0d000000	            mov rcx, qword [0x04000dcb] 	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xd8b	    0x8b0500000000	            mov eax, dword [0x04000dd1] 	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xd91	          0x8d5001	                      lea edx, [rax + 1]	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xd94	    0x891500000000	            mov dword [0x04000dda], edx 	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xd9a	            0x4898	                                    cdqe	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xd9c	        0x48c1e004	                              shl rax, 4	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xda0	          0x4801c8	                            add rax, rcx	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xda3	         0xfb64008	               movzx eax, byte [rax + 8]	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xda7	            0x84c0	                             test al, al	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xda9	            0x7426	                            je 0x4000e11	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xdab	      0xbf00000000	                              mov edi, 0	       288	rm.c	FUNCTION_47	FOR_1	IF_5	CALL_16
0xdb0	      0xe800000000	                          call 0x4000df5	       288	rm.c	FUNCTION_47	FOR_1	IF_5	CALL_16
0xdb5	            0x85c0	                           test eax, eax	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xdb7	            0x7518	                           jne 0x4000e11	       287	rm.c	FUNCTION_47	FOR_1	IF_5
0xdb9	      0xbf00000000	                              mov edi, 0	       289	rm.c	FUNCTION_47	FOR_1	CALL_18
0xdbe	      0xe88af3ffff	                               call sym.	       289	rm.c	FUNCTION_47	FOR_1	CALL_18
0xdc3	          0x4889c7	                            mov rdi, rax	       289	rm.c	FUNCTION_47	FOR_1	CALL_18
0xdc6	      0xb800000000	                              mov eax, 0	       289	rm.c	FUNCTION_47	FOR_1	CALL_18
0xdcb	      0xe800000000	                          call 0x4000e10	       289	rm.c	FUNCTION_47	FOR_1	CALL_18
0xdd0	              0x90	                                     nop	       283	rm.c	FUNCTION_47	FOR_1	IF_4
0xdd1	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       280	rm.c	FUNCTION_47	FOR_1
0xdd8	    0x8b1500000000	            mov edx, dword [0x04000e1e] 	       280	rm.c	FUNCTION_47	FOR_1
0xdde	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       280	rm.c	FUNCTION_47	FOR_1
0xde4	            0x39c2	                            cmp edx, eax	       280	rm.c	FUNCTION_47	FOR_1
0xde6	     0xf8755feffff	                            ja 0x4000c81	       280	rm.c	FUNCTION_47	FOR_1
0xdec	          0x8b4590	             mov eax, dword [rbp - 0x70]	       292	rm.c	FUNCTION_47	IF_6
0xdef	            0x85c0	                           test eax, eax	       292	rm.c	FUNCTION_47	IF_6
0xdf1	     0xf841a010000	                            je 0x4000f51	       292	rm.c	FUNCTION_47	IF_6
0xdf7	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       294	rm.c	FUNCTION_47	IF_6
0xe01	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xe0b	      0xe9df000000	                           jmp 0x4000f2f	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xe10	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe14	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe1a	            0x4898	                                    cdqe	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe1c	        0x48c1e003	                              shl rax, 3	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe20	    0x488d0cc50000	                        lea rcx, [rax*8]	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe28	          0x4829c1	                            sub rcx, rax	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe2b	          0x4889c8	                            mov rax, rcx	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe2e	          0x4801d0	                            add rax, rdx	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe31	        0x488b4008	                mov rax, qword [rax + 8]	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe35	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       296	rm.c	FUNCTION_47	IF_6	FOR_2
0xe3c	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe42	          0x4863d0	                         movsxd rdx, eax	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe45	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe4c	          0x4801d0	                            add rax, rdx	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe4f	           0xfb600	                   movzx eax, byte [rax]	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe52	            0x84c0	                             test al, al	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe54	            0x752e	                           jne 0x4000ec4	       297	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7
0xe56	    0x8b0500000000	            mov eax, dword [0x04000e9c] 	       298	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8
0xe5c	            0x85c0	                           test eax, eax	       298	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8
0xe5e	            0x752e	                           jne 0x4000ece	       298	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8
0xe60	      0xbf00000000	                              mov edi, 0	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe65	      0xe8e3f2ffff	                               call sym.	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe6a	          0x4889c2	                            mov rdx, rax	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe6d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe74	          0x4889c6	                            mov rsi, rax	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe77	          0x4889d7	                            mov rdi, rdx	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe7a	      0xb800000000	                              mov eax, 0	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe7f	      0xe800000000	                          call 0x4000ec4	       299	rm.c	FUNCTION_47	IF_6	FOR_2	IF_7	IF_8	CALL_20
0xe84	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	       304	rm.c	FUNCTION_47	IF_6	FOR_2	ELSE_1
0xe8e	    0x8b0500000000	            mov eax, dword [0x04000ed4] 	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xe94	            0x85c0	                           test eax, eax	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xe96	            0x7550	                           jne 0x4000f28	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xe98	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xe9e	          0x4863d0	                         movsxd rdx, eax	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xea1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xea8	          0x4801d0	                            add rax, rdx	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xeab	           0xfb600	                   movzx eax, byte [rax]	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xeae	            0x3c01	                               cmp al, 1	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xeb0	            0x7536	                           jne 0x4000f28	       306	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xeb2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       308	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xeb9	           0xfb600	                   movzx eax, byte [rax]	       308	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9
0xebc	            0x84c0	                             test al, al	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xebe	            0x7409	                            je 0x4000f09	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xec0	    0x488b9d78ffff	             mov rbx, qword [rbp - 0x88]	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xec7	            0xeb05	                           jmp 0x4000f0e	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xec9	      0xbb00000000	                              mov ebx, 0	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xece	      0xbf00000000	                              mov edi, 0	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xed3	      0xe875f2ffff	                               call sym.	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xed8	          0x4889de	                            mov rsi, rbx	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xedb	          0x4889c7	                            mov rdi, rax	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xede	      0xb800000000	                              mov eax, 0	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xee3	      0xe800000000	                          call 0x4000f28	       307	rm.c	FUNCTION_47	IF_6	FOR_2	IF_9	CALL_22
0xee8	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xeef	          0x8b4590	             mov eax, dword [rbp - 0x70]	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xef2	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xef8	     0xf8f12ffffff	                            jg 0x4000e50	       295	rm.c	FUNCTION_47	IF_6	FOR_2
0xefe	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       311	rm.c	FUNCTION_47	IF_6	IF_10
0xf05	            0x750a	                           jne 0x4000f51	       311	rm.c	FUNCTION_47	IF_6	IF_10
0xf07	      0xbf00000000	                              mov edi, 0	       312	rm.c	FUNCTION_47	IF_6	CALL_23
0xf0c	      0xe800000000	                          call 0x4000f51	       312	rm.c	FUNCTION_47	IF_6	CALL_23
0xf11	    0x8b0500000000	            mov eax, dword [0x04000f57] 	       315	rm.c	FUNCTION_47	IF_11
0xf17	            0x85c0	                           test eax, eax	       315	rm.c	FUNCTION_47	IF_11
0xf19	            0x750f	                           jne 0x4000f6a	       315	rm.c	FUNCTION_47	IF_11
0xf1b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       316	rm.c	FUNCTION_47	CALL_24
0xf22	          0x4889c7	                            mov rdi, rax	       316	rm.c	FUNCTION_47	CALL_24
0xf25	      0xe87ef5ffff	call sym.submodules_absorb_gitdir_if_needed	       316	rm.c	FUNCTION_47	CALL_24
0xf2a	    0x8b0500000000	            mov eax, dword [0x04000f70] 	       328	rm.c	FUNCTION_47	IF_12
0xf30	            0x85c0	                           test eax, eax	       328	rm.c	FUNCTION_47	IF_12
0xf32	            0x7543	                           jne 0x4000fb7	       328	rm.c	FUNCTION_47	IF_12
0xf34	        0x488d45d0	                   lea rax, [rbp - 0x30]	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf38	          0x4889c6	                            mov rsi, rax	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf3b	      0xbf00000000	                              mov edi, 0	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf40	      0xe800000000	                          call 0x4000f85	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf45	            0x85c0	                           test eax, eax	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf47	            0x740c	                            je 0x4000f95	       330	rm.c	FUNCTION_47	IF_12	IF_13	CALL_25
0xf49	        0x488d45d0	                   lea rax, [rbp - 0x30]	       331	rm.c	FUNCTION_47	IF_12	CALL_26
0xf4d	          0x4889c7	                            mov rdi, rax	       331	rm.c	FUNCTION_47	IF_12	CALL_26
0xf50	      0xe821f3ffff	                         call sym.oidclr	       331	rm.c	FUNCTION_47	IF_12	CALL_26
0xf55	    0x8b1500000000	            mov edx, dword [0x04000f9b] 	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf5b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf5f	            0x89d6	                            mov esi, edx	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf61	          0x4889c7	                            mov rdi, rax	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf64	      0xe84af6ffff	                call sym.check_local_mod	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf69	            0x85c0	                           test eax, eax	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf6b	            0x740a	                            je 0x4000fb7	       332	rm.c	FUNCTION_47	IF_12	IF_14	CALL_27
0xf6d	      0xbf01000000	                              mov edi, 1	       333	rm.c	FUNCTION_47	IF_12	CALL_28
0xf72	      0xe800000000	                          call 0x4000fb7	       333	rm.c	FUNCTION_47	IF_12	CALL_28
0xf77	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       340	rm.c	FUNCTION_47	FOR_3
0xf81	            0xeb7b	                           jmp 0x400103e	       340	rm.c	FUNCTION_47	FOR_3
0xf83	    0x488b05000000	            mov rax, qword [0x04000fca] 	       341	rm.c	FUNCTION_47	FOR_3
0xf8a	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       341	rm.c	FUNCTION_47	FOR_3
0xf90	          0x4863d2	                         movsxd rdx, edx	       341	rm.c	FUNCTION_47	FOR_3
0xf93	        0x48c1e204	                              shl rdx, 4	       341	rm.c	FUNCTION_47	FOR_3
0xf97	          0x4801d0	                            add rax, rdx	       341	rm.c	FUNCTION_47	FOR_3
0xf9a	          0x488b00	                    mov rax, qword [rax]	       341	rm.c	FUNCTION_47	FOR_3
0xf9d	        0x48894580	             mov qword [rbp - 0x80], rax	       341	rm.c	FUNCTION_47	FOR_3
0xfa1	    0x8b0500000000	            mov eax, dword [0x04000fe7] 	       342	rm.c	FUNCTION_47	FOR_3	IF_15
0xfa7	            0x85c0	                           test eax, eax	       342	rm.c	FUNCTION_47	FOR_3	IF_15
0xfa9	            0x7516	                           jne 0x4001001	       342	rm.c	FUNCTION_47	FOR_3	IF_15
0xfab	        0x488b4580	             mov rax, qword [rbp - 0x80]	       343	rm.c	FUNCTION_47	FOR_3	CALL_29
0xfaf	          0x4889c6	                            mov rsi, rax	       343	rm.c	FUNCTION_47	FOR_3	CALL_29
0xfb2	      0xbf00000000	                              mov edi, 0	       343	rm.c	FUNCTION_47	FOR_3	CALL_29
0xfb7	      0xb800000000	                              mov eax, 0	       343	rm.c	FUNCTION_47	FOR_3	CALL_29
0xfbc	      0xe800000000	                          call 0x4001001	       343	rm.c	FUNCTION_47	FOR_3	CALL_29
0xfc1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfc5	          0x4889c6	                            mov rsi, rax	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfc8	      0xbf00000000	                              mov edi, 0	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfcd	      0xe800000000	                          call 0x4001012	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfd2	            0x85c0	                           test eax, eax	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfd4	            0x7421	                            je 0x4001037	       345	rm.c	FUNCTION_47	FOR_3	IF_16	CALL_30
0xfd6	      0xbf00000000	                              mov edi, 0	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfdb	      0xe86df1ffff	                               call sym.	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfe0	          0x4889c2	                            mov rdx, rax	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfe3	        0x488b4580	             mov rax, qword [rbp - 0x80]	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfe7	          0x4889c6	                            mov rsi, rax	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfea	          0x4889d7	                            mov rdi, rdx	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xfed	      0xb800000000	                              mov eax, 0	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xff2	      0xe800000000	                          call 0x4001037	       346	rm.c	FUNCTION_47	FOR_3	CALL_32
0xff7	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       340	rm.c	FUNCTION_47	FOR_3
0xffe	    0x8b0500000000	            mov eax, dword [0x04001044] 	       340	rm.c	FUNCTION_47	FOR_3
0x1004	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       340	rm.c	FUNCTION_47	FOR_3
0x100a	     0xf8f73ffffff	                            jg 0x4000fc3	       340	rm.c	FUNCTION_47	FOR_3
0x1010	    0x8b0500000000	            mov eax, dword [0x04001056] 	       349	rm.c	FUNCTION_47	IF_17
0x1016	            0x85c0	                           test eax, eax	       349	rm.c	FUNCTION_47	IF_17
0x1018	            0x740a	                            je 0x4001064	       349	rm.c	FUNCTION_47	IF_17
0x101a	      0xb800000000	                              mov eax, 0	       350	rm.c	FUNCTION_47	IF_17
0x101f	      0xe9b2010000	                           jmp 0x4001216	       350	rm.c	FUNCTION_47	IF_17
0x1024	    0x8b0500000000	            mov eax, dword [0x0400106a] 	       360	rm.c	FUNCTION_47	IF_18
0x102a	            0x85c0	                           test eax, eax	       360	rm.c	FUNCTION_47	IF_18
0x102c	     0xf8570010000	                           jne 0x40011e2	       360	rm.c	FUNCTION_47	IF_18
0x1032	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	       361	rm.c	FUNCTION_47	IF_18
0x103c	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       361	rm.c	FUNCTION_47	IF_18
0x1046	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       362	rm.c	FUNCTION_47	IF_18
0x104e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       362	rm.c	FUNCTION_47	IF_18
0x1056	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       362	rm.c	FUNCTION_47	IF_18
0x105e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x1068	      0xe904010000	                           jmp 0x40011b1	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x106d	    0x488b05000000	            mov rax, qword [0x040010b4] 	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x1074	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x107a	          0x4863d2	                         movsxd rdx, edx	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x107d	        0x48c1e204	                              shl rdx, 4	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x1081	          0x4801d0	                            add rax, rdx	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x1084	          0x488b00	                    mov rax, qword [rax]	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x1087	        0x48894588	             mov qword [rbp - 0x78], rax	       364	rm.c	FUNCTION_47	IF_18	FOR_4
0x108b	    0x488b05000000	            mov rax, qword [0x040010d2] 	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x1092	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x1098	          0x4863d2	                         movsxd rdx, edx	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x109b	        0x48c1e204	                              shl rdx, 4	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x109f	          0x4801d0	                            add rax, rdx	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x10a2	         0xfb64008	               movzx eax, byte [rax + 8]	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x10a6	            0x84c0	                             test al, al	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x10a8	     0xf8480000000	                            je 0x400116e	       365	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x10ae	        0x488d45b0	                   lea rax, [rbp - 0x50]	       366	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_33
0x10b2	      0xbe00000000	                              mov esi, 0	       366	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_33
0x10b7	          0x4889c7	                            mov rdi, rax	       366	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_33
0x10ba	      0xe8bfefffff	                  call sym.strbuf_setlen	       366	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_33
0x10bf	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       367	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_34
0x10c3	        0x488d45b0	                   lea rax, [rbp - 0x50]	       367	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_34
0x10c7	          0x4889d6	                            mov rsi, rdx	       367	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_34
0x10ca	          0x4889c7	                            mov rdi, rax	       367	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_34
0x10cd	      0xe846f0ffff	                  call sym.strbuf_addstr	       367	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_34
0x10d2	        0x488d45b0	                   lea rax, [rbp - 0x50]	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10d6	      0xbe00000000	                              mov esi, 0	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10db	          0x4889c7	                            mov rdi, rax	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10de	      0xe800000000	                          call 0x4001123	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10e3	            0x85c0	                           test eax, eax	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10e5	            0x7421	                            je 0x4001148	       368	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_20	CALL_35
0x10e7	      0xbf00000000	                              mov edi, 0	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10ec	      0xe85cf0ffff	                               call sym.	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10f1	          0x4889c2	                            mov rdx, rax	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10f4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10f8	          0x4889c6	                            mov rsi, rax	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10fb	          0x4889d7	                            mov rdi, rdx	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x10fe	      0xb800000000	                              mov eax, 0	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x1103	      0xe800000000	                          call 0x4001148	       369	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	CALL_37
0x1108	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	       371	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x1112	        0x488b4588	             mov rax, qword [rbp - 0x78]	       372	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21	CALL_38
0x1116	          0x4889c7	                            mov rdi, rax	       372	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21	CALL_38
0x1119	      0xe800000000	                          call 0x400115e	       372	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21	CALL_38
0x111e	            0x85c0	                           test eax, eax	       372	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21	CALL_38
0x1120	            0x7547	                           jne 0x40011a9	       372	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21	CALL_38
0x1122	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	       373	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19	IF_21
0x112c	            0xeb3b	                           jmp 0x40011a9	       374	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x112e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       376	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22	CALL_39
0x1132	          0x4889c7	                            mov rdi, rax	       376	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22	CALL_39
0x1135	      0xe800000000	                          call 0x400117a	       376	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22	CALL_39
0x113a	            0x85c0	                           test eax, eax	       376	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22	CALL_39
0x113c	            0x750c	                           jne 0x400118a	       376	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22	CALL_39
0x113e	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	       377	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22
0x1148	            0xeb20	                           jmp 0x40011aa	       378	rm.c	FUNCTION_47	IF_18	FOR_4	IF_22
0x114a	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	       380	rm.c	FUNCTION_47	IF_18	FOR_4	IF_23
0x1151	            0x7517	                           jne 0x40011aa	       380	rm.c	FUNCTION_47	IF_18	FOR_4	IF_23
0x1153	        0x488b4588	             mov rax, qword [rbp - 0x78]	       381	rm.c	FUNCTION_47	IF_18	FOR_4	CALL_40
0x1157	          0x4889c6	                            mov rsi, rax	       381	rm.c	FUNCTION_47	IF_18	FOR_4	CALL_40
0x115a	      0xbf00000000	                              mov edi, 0	       381	rm.c	FUNCTION_47	IF_18	FOR_4	CALL_40
0x115f	      0xb800000000	                              mov eax, 0	       381	rm.c	FUNCTION_47	IF_18	FOR_4	CALL_40
0x1164	      0xe800000000	                          call 0x40011a9	       381	rm.c	FUNCTION_47	IF_18	FOR_4	CALL_40
0x1169	              0x90	                                     nop	       374	rm.c	FUNCTION_47	IF_18	FOR_4	IF_19
0x116a	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x1171	    0x8b0500000000	            mov eax, dword [0x040011b7] 	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x1177	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x117d	     0xf8feafeffff	                            jg 0x40010ad	       363	rm.c	FUNCTION_47	IF_18	FOR_4
0x1183	        0x488d45b0	                   lea rax, [rbp - 0x50]	       383	rm.c	FUNCTION_47	IF_18	CALL_41
0x1187	          0x4889c7	                            mov rdi, rax	       383	rm.c	FUNCTION_47	IF_18	CALL_41
0x118a	      0xe800000000	                          call 0x40011cf	       383	rm.c	FUNCTION_47	IF_18	CALL_41
0x118f	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       384	rm.c	FUNCTION_47	IF_18	IF_24
0x1196	            0x740a	                            je 0x40011e2	       384	rm.c	FUNCTION_47	IF_18	IF_24
0x1198	      0xbf00000000	                              mov edi, 0	       385	rm.c	FUNCTION_47	IF_18	CALL_42
0x119d	      0xe800000000	                          call 0x40011e2	       385	rm.c	FUNCTION_47	IF_18	CALL_42
0x11a2	      0xba03000000	                              mov edx, 3	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11a7	      0xbe00000000	                              mov esi, 0	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11ac	      0xbf00000000	                              mov edi, 0	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11b1	      0xe800000000	                          call 0x40011f6	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11b6	            0x85c0	                           test eax, eax	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11b8	            0x7417	                            je 0x4001211	       388	rm.c	FUNCTION_47	IF_25	CALL_43
0x11ba	      0xbf00000000	                              mov edi, 0	       390	rm.c	FUNCTION_47	CALL_45
0x11bf	      0xe889efffff	                               call sym.	       390	rm.c	FUNCTION_47	CALL_45
0x11c4	          0x4889c7	                            mov rdi, rax	       390	rm.c	FUNCTION_47	CALL_45
0x11c7	      0xb800000000	                              mov eax, 0	       390	rm.c	FUNCTION_47	CALL_45
0x11cc	      0xe800000000	                          call 0x4001211	       390	rm.c	FUNCTION_47	CALL_45
0x11d1	      0xb800000000	                              mov eax, 0	       392	rm.c	FUNCTION_47
0x11d6	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       393	rm.c	FUNCTION_47
0x11da	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       393	rm.c	FUNCTION_47
0x11e3	            0x7405	                            je 0x400122a	       393	rm.c	FUNCTION_47
0x11e5	      0xe800000000	                          call 0x400122a	       393	rm.c	FUNCTION_47
0x11ea	    0x4881c4c80000	                           add rsp, 0xc8	       393	rm.c	FUNCTION_47
0x11f1	              0x5b	                                 pop rbx	       393	rm.c	FUNCTION_47
0x11f2	              0x5d	                                 pop rbp	       393	rm.c	FUNCTION_47
0x11f3	              0xc3	                                     ret	       393	rm.c	FUNCTION_47
get_ours_cache_pos	CALL,2:WHILE,1:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,1:DO,0	43
0x311	              0x55	                                push rbp	        31	rm.c	FUNCTION_43
0x312	          0x4889e5	                            mov rbp, rsp	        31	rm.c	FUNCTION_43
0x315	        0x4883ec20	                           sub rsp, 0x20	        31	rm.c	FUNCTION_43
0x319	        0x48897de8	             mov qword [rbp - 0x18], rdi	        31	rm.c	FUNCTION_43
0x31d	          0x8975e4	             mov dword [rbp - 0x1c], esi	        31	rm.c	FUNCTION_43
0x320	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        32	rm.c	FUNCTION_43
0x323	            0xf7d0	                                 not eax	        32	rm.c	FUNCTION_43
0x325	          0x8945fc	                mov dword [rbp - 4], eax	        32	rm.c	FUNCTION_43
0x328	            0xeb30	                           jmp 0x400039a	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x32a	    0x488b05000000	            mov rax, qword [0x04000371] 	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x331	          0x8b55fc	                mov edx, dword [rbp - 4]	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x334	          0x4863d2	                         movsxd rdx, edx	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x337	        0x48c1e203	                              shl rdx, 3	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x33b	          0x4801d0	                            add rax, rdx	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x33e	          0x488b00	                    mov rax, qword [rax]	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x341	          0x8b4038	            mov eax, dword [rax + 0x38] 	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x344	      0x2500300000	                         and eax, 0x3000	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x349	          0xc1e80c	                            shr eax, 0xc	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x34c	          0x83f802	                              cmp eax, 2	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x34f	            0x7505	                           jne 0x4000396	        35	rm.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x351	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	rm.c	FUNCTION_43	WHILE_1	IF_1
0x354	            0xeb44	                           jmp 0x40003da	        36	rm.c	FUNCTION_43	WHILE_1	IF_1
0x356	        0x8345fc01	                  add dword [rbp - 4], 1	        37	rm.c	FUNCTION_43	WHILE_1
0x35a	    0x8b1500000000	            mov edx, dword [0x040003a0] 	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x360	          0x8b45fc	                mov eax, dword [rbp - 4]	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x363	            0x39c2	                            cmp edx, eax	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x365	            0x762e	                           jbe 0x40003d5	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x367	    0x488b05000000	            mov rax, qword [0x040003ae] 	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x36e	          0x8b55fc	                mov edx, dword [rbp - 4]	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x371	          0x4863d2	                         movsxd rdx, edx	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x374	        0x48c1e203	                              shl rdx, 3	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x378	          0x4801d0	                            add rax, rdx	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x37b	          0x488b00	                    mov rax, qword [rax]	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x37e	        0x488d5058	                   lea rdx, [rax + 0x58]	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x386	          0x4889c6	                            mov rsi, rax	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x389	          0x4889d7	                            mov rdi, rdx	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x38c	      0xe800000000	                          call 0x40003d1	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x391	            0x85c0	                           test eax, eax	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x393	            0x7495	                            je 0x400036a	        34	rm.c	FUNCTION_43	WHILE_1	CALL_1
0x395	      0xb8ffffffff	                     mov eax, 0xffffffff	        39	rm.c	FUNCTION_43
0x39a	              0xc9	                                   leave	        40	rm.c	FUNCTION_43
0x39b	              0xc3	                                     ret	        40	rm.c	FUNCTION_43
st_mult	CALL,2:WHILE,0:ELSE,0:SWITCH,0:functions,0:FOR,0:IF,1:DO,0	22
0xb	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_30
0xc	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_30
0xf	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_30
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_30
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_30
0x1b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x20	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x22	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x29	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x32	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x36	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x40	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x43	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x48	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_30
0x56	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_30
0x5b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_30
0x5c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_30
