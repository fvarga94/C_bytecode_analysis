subject_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	23
0xbf5	              0x55	                                push rbp	       213	ref-filter.c	FUNCTION_7
0xbf6	          0x4889e5	                            mov rbp, rsp	       213	ref-filter.c	FUNCTION_7
0xbf9	        0x4883ec20	                           sub rsp, 0x20	       213	ref-filter.c	FUNCTION_7
0xbfd	        0x48897df8	                mov qword [rbp - 8], rdi	       213	ref-filter.c	FUNCTION_7
0xc01	        0x488975f0	             mov qword [rbp - 0x10], rsi	       213	ref-filter.c	FUNCTION_7
0xc05	        0x488955e8	             mov qword [rbp - 0x18], rdx	       213	ref-filter.c	FUNCTION_7
0xc09	        0x48894de0	             mov qword [rbp - 0x20], rcx	       213	ref-filter.c	FUNCTION_7
0xc0d	      0x48837de800	               cmp qword [rbp - 0x18], 0	       214	ref-filter.c	FUNCTION_7	IF_1
0xc12	            0x7425	                            je 0x4000c79	       214	ref-filter.c	FUNCTION_7	IF_1
0xc14	      0xbf00000000	                              mov edi, 0	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc19	      0xe83ff8ffff	                               call sym.	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc1e	          0x4889c2	                            mov rdx, rax	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc25	      0xbeffffffff	                     mov esi, 0xffffffff	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc2a	          0x4889c7	                            mov rdi, rax	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc2d	      0xb800000000	                              mov eax, 0	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc32	      0xe8ddf9ffff	                call sym.strbuf_addf_ret	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc37	            0xeb10	                           jmp 0x4000c89	       215	ref-filter.c	FUNCTION_7	CALL_2
0xc39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       216	ref-filter.c	FUNCTION_7
0xc3d	    0xc74010050000	               mov dword [rax + 0x10], 5	       216	ref-filter.c	FUNCTION_7
0xc44	      0xb800000000	                              mov eax, 0	       217	ref-filter.c	FUNCTION_7
0xc49	              0xc9	                                   leave	       218	ref-filter.c	FUNCTION_7
0xc4a	              0xc3	                                     ret	       218	ref-filter.c	FUNCTION_7
strbuf_addch	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	33
0x3ba	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_94
0x3bb	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_94
0x3be	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_94
0x3c2	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_94
0x3c6	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_94
0x3c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_94	IF_1	CALL_1
0x3cd	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_94	IF_1	CALL_1
0x3d0	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_94	IF_1	CALL_1
0x3d5	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_94	IF_1	CALL_1
0x3d8	            0x7511	                           jne 0x400042b	       227	strbuf.h	FUNCTION_94	IF_1	CALL_1
0x3da	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_94	CALL_2
0x3de	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_94	CALL_2
0x3e3	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_94	CALL_2
0x3e6	      0xe800000000	                          call 0x400042b	       228	strbuf.h	FUNCTION_94	CALL_2
0x3eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_94
0x3ef	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_94
0x3f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_94
0x3f7	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_94
0x3fb	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_94
0x3ff	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_94
0x403	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_94
0x407	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_94
0x40a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_94
0x40d	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_94
0x40f	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_94
0x413	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_94
0x417	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_94
0x41b	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_94
0x41f	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_94
0x422	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_94
0x425	              0x90	                                     nop	       231	strbuf.h	FUNCTION_94
0x426	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_94
0x427	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_94
is_empty	SWITCH,0:DO,0:FOR,0:WHILE,1:CALL,1:ELSE,0:functions,0:IF,1	23
0x1dd3	              0x55	                                push rbp	       653	ref-filter.c	FUNCTION_25
0x1dd4	          0x4889e5	                            mov rbp, rsp	       653	ref-filter.c	FUNCTION_25
0x1dd7	        0x48897df8	                mov qword [rbp - 8], rdi	       653	ref-filter.c	FUNCTION_25
0x1ddb	            0xeb29	                           jmp 0x4001e46	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x1ddd	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1de1	           0xfb600	                   movzx eax, byte [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1de4	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1de7	            0x4898	                                    cdqe	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1de9	     0xfb680000000	                   movzx eax, byte [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1df0	           0xfb6c0	                           movzx eax, al	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1df3	          0x83e001	                              and eax, 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1df6	            0x85c0	                           test eax, eax	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1df8	            0x7507	                           jne 0x4001e41	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1	CALL_1
0x1dfa	      0xb800000000	                              mov eax, 0	       656	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x1dff	            0xeb15	                           jmp 0x4001e56	       656	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x1e01	      0x488345f801	                  add qword [rbp - 8], 1	       657	ref-filter.c	FUNCTION_25	WHILE_1
0x1e06	        0x488b45f8	                mov rax, qword [rbp - 8]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x1e0a	           0xfb600	                   movzx eax, byte [rax]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x1e0d	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x1e0f	            0x75cc	                           jne 0x4001e1d	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x1e11	      0xb801000000	                              mov eax, 1	       659	ref-filter.c	FUNCTION_25
0x1e16	              0x5d	                                 pop rbp	       660	ref-filter.c	FUNCTION_25
0x1e17	              0xc3	                                     ret	       660	ref-filter.c	FUNCTION_25
end_atom_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,7:ELSE,0:functions,0:IF,2	70
0x20ed	              0x55	                                push rbp	       717	ref-filter.c	FUNCTION_28
0x20ee	          0x4889e5	                            mov rbp, rsp	       717	ref-filter.c	FUNCTION_28
0x20f1	        0x4883ec50	                           sub rsp, 0x50	       717	ref-filter.c	FUNCTION_28
0x20f5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       717	ref-filter.c	FUNCTION_28
0x20f9	        0x488975c0	             mov qword [rbp - 0x40], rsi	       717	ref-filter.c	FUNCTION_28
0x20fd	        0x488955b8	             mov qword [rbp - 0x48], rdx	       717	ref-filter.c	FUNCTION_28
0x2101	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	ref-filter.c	FUNCTION_28
0x210a	        0x488945f8	                mov qword [rbp - 8], rax	       717	ref-filter.c	FUNCTION_28
0x210e	            0x31c0	                            xor eax, eax	       717	ref-filter.c	FUNCTION_28
0x2110	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       718	ref-filter.c	FUNCTION_28
0x2114	        0x488b4008	                mov rax, qword [rax + 8]	       718	ref-filter.c	FUNCTION_28
0x2118	        0x488945d8	             mov qword [rbp - 0x28], rax	       718	ref-filter.c	FUNCTION_28
0x211c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       719	ref-filter.c	FUNCTION_28
0x2124	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       719	ref-filter.c	FUNCTION_28
0x212c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       719	ref-filter.c	FUNCTION_28
0x2134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       721	ref-filter.c	FUNCTION_28	IF_1
0x2138	        0x488b4020	            mov rax, qword [rax + 0x20] 	       721	ref-filter.c	FUNCTION_28	IF_1
0x213c	          0x4885c0	                           test rax, rax	       721	ref-filter.c	FUNCTION_28	IF_1
0x213f	            0x7528	                           jne 0x40021a9	       721	ref-filter.c	FUNCTION_28	IF_1
0x2141	      0xbf00000000	                              mov edi, 0	       722	ref-filter.c	FUNCTION_28	CALL_2
0x2146	      0xe812e3ffff	                               call sym.	       722	ref-filter.c	FUNCTION_28	CALL_2
0x214b	          0x4889c2	                            mov rdx, rax	       722	ref-filter.c	FUNCTION_28	CALL_2
0x214e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       722	ref-filter.c	FUNCTION_28	CALL_2
0x2152	      0xbeffffffff	                     mov esi, 0xffffffff	       722	ref-filter.c	FUNCTION_28	CALL_2
0x2157	          0x4889c7	                            mov rdi, rax	       722	ref-filter.c	FUNCTION_28	CALL_2
0x215a	      0xb800000000	                              mov eax, 0	       722	ref-filter.c	FUNCTION_28	CALL_2
0x215f	      0xe8b0e4ffff	                call sym.strbuf_addf_ret	       722	ref-filter.c	FUNCTION_28	CALL_2
0x2164	      0xe985000000	                           jmp 0x400222e	       722	ref-filter.c	FUNCTION_28	CALL_2
0x2169	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       723	ref-filter.c	FUNCTION_28	CALL_3
0x216d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       723	ref-filter.c	FUNCTION_28	CALL_3
0x2171	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       723	ref-filter.c	FUNCTION_28	CALL_3
0x2175	        0x4883c208	                              add rdx, 8	       723	ref-filter.c	FUNCTION_28	CALL_3
0x2179	          0x4889d7	                            mov rdi, rdx	       723	ref-filter.c	FUNCTION_28	CALL_3
0x217c	            0xffd0	                                call rax	       723	ref-filter.c	FUNCTION_28	CALL_3
0x217e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       726	ref-filter.c	FUNCTION_28
0x2182	        0x488b4008	                mov rax, qword [rax + 8]	       726	ref-filter.c	FUNCTION_28
0x2186	        0x488945d8	             mov qword [rbp - 0x28], rax	       726	ref-filter.c	FUNCTION_28
0x218a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       733	ref-filter.c	FUNCTION_28	IF_2
0x218e	          0x488b00	                    mov rax, qword [rax]	       733	ref-filter.c	FUNCTION_28	IF_2
0x2191	          0x488b00	                    mov rax, qword [rax]	       733	ref-filter.c	FUNCTION_28	IF_2
0x2194	          0x4885c0	                           test rax, rax	       733	ref-filter.c	FUNCTION_28	IF_2
0x2197	            0x7534	                           jne 0x400220d	       733	ref-filter.c	FUNCTION_28	IF_2
0x2199	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x219d	            0x8b10	                    mov edx, dword [rax]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x219f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21a3	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21ab	          0x4889ce	                            mov rsi, rcx	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21ae	          0x4889c7	                            mov rdi, rax	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21b1	      0xe8a8f7ffff	               call sym.quote_formatting	       734	ref-filter.c	FUNCTION_28	IF_2	CALL_4
0x21b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21ba	        0x488d5008	                      lea rdx, [rax + 8]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21be	        0x488d45e0	                   lea rax, [rbp - 0x20]	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21c2	          0x4889c6	                            mov rsi, rax	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21c5	          0x4889d7	                            mov rdi, rdx	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21c8	      0xe889e0ffff	                    call sym.strbuf_swap	       735	ref-filter.c	FUNCTION_28	IF_2	CALL_5
0x21cd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       737	ref-filter.c	FUNCTION_28	CALL_6
0x21d1	          0x4889c7	                            mov rdi, rax	       737	ref-filter.c	FUNCTION_28	CALL_6
0x21d4	      0xe800000000	                          call 0x4002219	       737	ref-filter.c	FUNCTION_28	CALL_6
0x21d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       738	ref-filter.c	FUNCTION_28	CALL_7
0x21dd	        0x4883c008	                              add rax, 8	       738	ref-filter.c	FUNCTION_28	CALL_7
0x21e1	          0x4889c7	                            mov rdi, rax	       738	ref-filter.c	FUNCTION_28	CALL_7
0x21e4	      0xe8c5f8ffff	              call sym.pop_stack_element	       738	ref-filter.c	FUNCTION_28	CALL_7
0x21e9	      0xb800000000	                              mov eax, 0	       739	ref-filter.c	FUNCTION_28
0x21ee	        0x488b4df8	                mov rcx, qword [rbp - 8]	       740	ref-filter.c	FUNCTION_28
0x21f2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       740	ref-filter.c	FUNCTION_28
0x21fb	            0x7405	                            je 0x4002242	       740	ref-filter.c	FUNCTION_28
0x21fd	      0xe800000000	                          call 0x4002242	       740	ref-filter.c	FUNCTION_28
0x2202	              0xc9	                                   leave	       740	ref-filter.c	FUNCTION_28
0x2203	              0xc3	                                     ret	       740	ref-filter.c	FUNCTION_28
pop_stack_element	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,1	32
0x1aae	              0x55	                                push rbp	       567	ref-filter.c	FUNCTION_20
0x1aaf	          0x4889e5	                            mov rbp, rsp	       567	ref-filter.c	FUNCTION_20
0x1ab2	        0x4883ec20	                           sub rsp, 0x20	       567	ref-filter.c	FUNCTION_20
0x1ab6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       567	ref-filter.c	FUNCTION_20
0x1aba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       568	ref-filter.c	FUNCTION_20
0x1abe	          0x488b00	                    mov rax, qword [rax]	       568	ref-filter.c	FUNCTION_20
0x1ac1	        0x488945f0	             mov qword [rbp - 0x10], rax	       568	ref-filter.c	FUNCTION_20
0x1ac5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       569	ref-filter.c	FUNCTION_20
0x1ac9	          0x488b00	                    mov rax, qword [rax]	       569	ref-filter.c	FUNCTION_20
0x1acc	        0x488945f8	                mov qword [rbp - 8], rax	       569	ref-filter.c	FUNCTION_20
0x1ad0	      0x48837df800	                  cmp qword [rbp - 8], 0	       571	ref-filter.c	FUNCTION_20	IF_1
0x1ad5	            0x741b	                            je 0x4001b32	       571	ref-filter.c	FUNCTION_20	IF_1
0x1ad7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1adb	        0x488d5008	                      lea rdx, [rax + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1adf	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1ae3	        0x4883c008	                              add rax, 8	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1ae7	          0x4889d6	                            mov rsi, rdx	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1aea	          0x4889c7	                            mov rdi, rax	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1aed	      0xe800000000	                          call 0x4001b32	       572	ref-filter.c	FUNCTION_20	CALL_1
0x1af2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       573	ref-filter.c	FUNCTION_20	CALL_2
0x1af6	        0x4883c008	                              add rax, 8	       573	ref-filter.c	FUNCTION_20	CALL_2
0x1afa	          0x4889c7	                            mov rdi, rax	       573	ref-filter.c	FUNCTION_20	CALL_2
0x1afd	      0xe800000000	                          call 0x4001b42	       573	ref-filter.c	FUNCTION_20	CALL_2
0x1b02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       574	ref-filter.c	FUNCTION_20	CALL_3
0x1b06	          0x4889c7	                            mov rdi, rax	       574	ref-filter.c	FUNCTION_20	CALL_3
0x1b09	      0xe800000000	                          call 0x4001b4e	       574	ref-filter.c	FUNCTION_20	CALL_3
0x1b0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       575	ref-filter.c	FUNCTION_20
0x1b12	        0x488b55f8	                mov rdx, qword [rbp - 8]	       575	ref-filter.c	FUNCTION_20
0x1b16	          0x488910	                    mov qword [rax], rdx	       575	ref-filter.c	FUNCTION_20
0x1b19	              0x90	                                     nop	       576	ref-filter.c	FUNCTION_20
0x1b1a	              0xc9	                                   leave	       576	ref-filter.c	FUNCTION_20
0x1b1b	              0xc3	                                     ret	       576	ref-filter.c	FUNCTION_20
then_atom_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,10:ELSE,2:functions,0:IF,9	118
0x1e18	              0x55	                                push rbp	       664	ref-filter.c	FUNCTION_26
0x1e19	          0x4889e5	                            mov rbp, rsp	       664	ref-filter.c	FUNCTION_26
0x1e1c	        0x4883ec30	                           sub rsp, 0x30	       664	ref-filter.c	FUNCTION_26
0x1e20	        0x48897de8	             mov qword [rbp - 0x18], rdi	       664	ref-filter.c	FUNCTION_26
0x1e24	        0x488975e0	             mov qword [rbp - 0x20], rsi	       664	ref-filter.c	FUNCTION_26
0x1e28	        0x488955d8	             mov qword [rbp - 0x28], rdx	       664	ref-filter.c	FUNCTION_26
0x1e2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       665	ref-filter.c	FUNCTION_26
0x1e30	        0x488b4008	                mov rax, qword [rax + 8]	       665	ref-filter.c	FUNCTION_26
0x1e34	        0x488945f8	                mov qword [rbp - 8], rax	       665	ref-filter.c	FUNCTION_26
0x1e38	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       666	ref-filter.c	FUNCTION_26
0x1e40	        0x488b45f8	                mov rax, qword [rbp - 8]	       668	ref-filter.c	FUNCTION_26	IF_1
0x1e44	        0x488b4020	            mov rax, qword [rax + 0x20] 	       668	ref-filter.c	FUNCTION_26	IF_1
0x1e48	    0x483d00000000	                              cmp rax, 0	       668	ref-filter.c	FUNCTION_26	IF_1
0x1e4e	            0x750c	                           jne 0x4001e9c	       668	ref-filter.c	FUNCTION_26	IF_1
0x1e50	        0x488b45f8	                mov rax, qword [rbp - 8]	       669	ref-filter.c	FUNCTION_26	IF_1
0x1e54	        0x488b4028	            mov rax, qword [rax + 0x28] 	       669	ref-filter.c	FUNCTION_26	IF_1
0x1e58	        0x488945f0	             mov qword [rbp - 0x10], rax	       669	ref-filter.c	FUNCTION_26	IF_1
0x1e5c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       670	ref-filter.c	FUNCTION_26	IF_2
0x1e61	            0x7528	                           jne 0x4001ecb	       670	ref-filter.c	FUNCTION_26	IF_2
0x1e63	      0xbf00000000	                              mov edi, 0	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e68	      0xe8f0e5ffff	                               call sym.	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e6d	          0x4889c2	                            mov rdx, rax	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e74	      0xbeffffffff	                     mov esi, 0xffffffff	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e79	          0x4889c7	                            mov rdi, rax	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e7c	      0xb800000000	                              mov eax, 0	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e81	      0xe88ee7ffff	                call sym.strbuf_addf_ret	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e86	      0xe938010000	                           jmp 0x4002003	       671	ref-filter.c	FUNCTION_26	CALL_2
0x1e8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       672	ref-filter.c	FUNCTION_26	IF_3
0x1e8f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       672	ref-filter.c	FUNCTION_26	IF_3
0x1e93	          0x83e001	                              and eax, 1	       672	ref-filter.c	FUNCTION_26	IF_3
0x1e96	            0x84c0	                             test al, al	       672	ref-filter.c	FUNCTION_26	IF_3
0x1e98	            0x7428	                            je 0x4001f02	       672	ref-filter.c	FUNCTION_26	IF_3
0x1e9a	      0xbf00000000	                              mov edi, 0	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1e9f	      0xe8b9e5ffff	                               call sym.	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1ea4	          0x4889c2	                            mov rdx, rax	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1eab	      0xbeffffffff	                     mov esi, 0xffffffff	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1eb0	          0x4889c7	                            mov rdi, rax	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1eb3	      0xb800000000	                              mov eax, 0	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1eb8	      0xe857e7ffff	                call sym.strbuf_addf_ret	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1ebd	      0xe901010000	                           jmp 0x4002003	       673	ref-filter.c	FUNCTION_26	CALL_4
0x1ec2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       674	ref-filter.c	FUNCTION_26	IF_4
0x1ec6	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       674	ref-filter.c	FUNCTION_26	IF_4
0x1eca	          0x83e002	                              and eax, 2	       674	ref-filter.c	FUNCTION_26	IF_4
0x1ecd	            0x84c0	                             test al, al	       674	ref-filter.c	FUNCTION_26	IF_4
0x1ecf	            0x7428	                            je 0x4001f39	       674	ref-filter.c	FUNCTION_26	IF_4
0x1ed1	      0xbf00000000	                              mov edi, 0	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ed6	      0xe882e5ffff	                               call sym.	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1edb	          0x4889c2	                            mov rdx, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ede	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ee2	      0xbeffffffff	                     mov esi, 0xffffffff	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ee7	          0x4889c7	                            mov rdi, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1eea	      0xb800000000	                              mov eax, 0	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1eef	      0xe820e7ffff	                call sym.strbuf_addf_ret	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ef4	      0xe9ca000000	                           jmp 0x4002003	       675	ref-filter.c	FUNCTION_26	CALL_6
0x1ef9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       676	ref-filter.c	FUNCTION_26
0x1efd	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       676	ref-filter.c	FUNCTION_26
0x1f01	          0x83ca01	                               or edx, 1	       676	ref-filter.c	FUNCTION_26
0x1f04	          0x885010	               mov byte [rax + 0x10], dl	       676	ref-filter.c	FUNCTION_26
0x1f07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       682	ref-filter.c	FUNCTION_26	IF_5
0x1f0b	            0x8b00	                    mov eax, dword [rax]	       682	ref-filter.c	FUNCTION_26	IF_5
0x1f0d	            0x85c0	                           test eax, eax	       682	ref-filter.c	FUNCTION_26	IF_5
0x1f0f	            0x752f	                           jne 0x4001f80	       682	ref-filter.c	FUNCTION_26	IF_5
0x1f11	        0x488b45f8	                mov rax, qword [rbp - 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f15	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f1d	        0x488b4008	                mov rax, qword [rax + 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f21	          0x4889d6	                            mov rsi, rdx	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f24	          0x4889c7	                            mov rdi, rax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f27	      0xe800000000	                          call 0x4001f6c	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f2c	            0x85c0	                           test eax, eax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f2e	            0x7579	                           jne 0x4001fe9	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x1f30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x1f34	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x1f38	          0x83ca04	                               or edx, 4	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x1f3b	          0x885010	               mov byte [rax + 0x10], dl	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x1f3e	            0xeb69	                           jmp 0x4001fe9	       684	ref-filter.c	FUNCTION_26	IF_5	IF_6
0x1f40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x1f44	            0x8b00	                    mov eax, dword [rax]	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x1f46	          0x83f801	                              cmp eax, 1	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x1f49	            0x752f	                           jne 0x4001fba	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x1f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f4f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f57	        0x488b4008	                mov rax, qword [rax + 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f5b	          0x4889d6	                            mov rsi, rdx	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f5e	          0x4889c7	                            mov rdi, rax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f61	      0xe800000000	                          call 0x4001fa6	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f66	            0x85c0	                           test eax, eax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f68	            0x743f	                            je 0x4001fe9	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x1f6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x1f6e	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x1f72	          0x83ca04	                               or edx, 4	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x1f75	          0x885010	               mov byte [rax + 0x10], dl	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x1f78	            0xeb2f	                           jmp 0x4001fe9	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x1f7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f7e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f82	          0x4885c0	                           test rax, rax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f85	            0x7422	                            je 0x4001fe9	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f87	        0x488b45f8	                mov rax, qword [rbp - 8]	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f8f	          0x4889c7	                            mov rdi, rax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f92	      0xe83cfeffff	                       call sym.is_empty	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f97	            0x85c0	                           test eax, eax	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f99	            0x750e	                           jne 0x4001fe9	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x1f9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x1f9f	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x1fa3	          0x83ca04	                               or edx, 4	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x1fa6	          0x885010	               mov byte [rax + 0x10], dl	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x1fa9	        0x488b45f8	                mov rax, qword [rbp - 8]	       690	ref-filter.c	FUNCTION_26	CALL_10
0x1fad	        0x4883c008	                              add rax, 8	       690	ref-filter.c	FUNCTION_26	CALL_10
0x1fb1	      0xbe00000000	                              mov esi, 0	       690	ref-filter.c	FUNCTION_26	CALL_10
0x1fb6	          0x4889c7	                            mov rdi, rax	       690	ref-filter.c	FUNCTION_26	CALL_10
0x1fb9	      0xe862e3ffff	                  call sym.strbuf_setlen	       690	ref-filter.c	FUNCTION_26	CALL_10
0x1fbe	      0xb800000000	                              mov eax, 0	       691	ref-filter.c	FUNCTION_26
0x1fc3	              0xc9	                                   leave	       692	ref-filter.c	FUNCTION_26
0x1fc4	              0xc3	                                     ret	       692	ref-filter.c	FUNCTION_26
parse_sorting_atom	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0:IF,1	45
0x6729	              0x55	                                push rbp	      2293	ref-filter.c	FUNCTION_86
0x672a	          0x4889e5	                            mov rbp, rsp	      2293	ref-filter.c	FUNCTION_86
0x672d	        0x4883ec60	                           sub rsp, 0x60	      2293	ref-filter.c	FUNCTION_86
0x6731	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2293	ref-filter.c	FUNCTION_86
0x6735	    0x64488b042528	                mov rax, qword fs:[0x28]	      2293	ref-filter.c	FUNCTION_86
0x673e	        0x488945f8	                mov qword [rbp - 8], rax	      2293	ref-filter.c	FUNCTION_86
0x6742	            0x31c0	                            xor eax, eax	      2293	ref-filter.c	FUNCTION_86
0x6744	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2298	ref-filter.c	FUNCTION_86
0x674c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2298	ref-filter.c	FUNCTION_86
0x6754	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2298	ref-filter.c	FUNCTION_86
0x675c	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x6763	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x6767	          0x4889c7	                            mov rdi, rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x676a	      0xe800000000	                          call 0x40067af	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x676f	          0x4889c2	                            mov rdx, rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x6772	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x6776	          0x4801d0	                            add rax, rdx	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x6779	        0x488945b8	             mov qword [rbp - 0x48], rax	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x677d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x6785	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2300	ref-filter.c	FUNCTION_86
0x678d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2300	ref-filter.c	FUNCTION_86
0x6795	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x6799	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x679d	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x67a1	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x67a5	          0x4889c7	                            mov rdi, rax	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x67a8	      0xe857adffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x67ad	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x67b0	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2302	ref-filter.c	FUNCTION_86	IF_1
0x67b4	            0x7916	                           jns 0x400680c	      2302	ref-filter.c	FUNCTION_86	IF_1
0x67b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x67ba	          0x4889c6	                            mov rsi, rax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x67bd	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x67c2	      0xb800000000	                              mov eax, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x67c7	      0xe800000000	                          call 0x400680c	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x67cc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x67d0	          0x4889c7	                            mov rdi, rax	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x67d3	      0xe800000000	                          call 0x4006818	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x67d8	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2305	ref-filter.c	FUNCTION_86
0x67db	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2306	ref-filter.c	FUNCTION_86
0x67df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2306	ref-filter.c	FUNCTION_86
0x67e8	            0x7405	                            je 0x400682f	      2306	ref-filter.c	FUNCTION_86
0x67ea	      0xe800000000	                          call 0x400682f	      2306	ref-filter.c	FUNCTION_86
0x67ef	              0xc9	                                   leave	      2306	ref-filter.c	FUNCTION_86
0x67f0	              0xc3	                                     ret	      2306	ref-filter.c	FUNCTION_86
show_ref	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,3:functions,0:IF,3	40
0x3b9e	              0x55	                                push rbp	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x3b9f	          0x4889e5	                            mov rbp, rsp	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x3ba2	        0x4883ec10	                           sub rsp, 0x10	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x3ba6	        0x48897df8	                mov qword [rbp - 8], rdi	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x3baa	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1307	ref-filter.c	ELSE_1	FUNCTION_51
0x3bae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x3bb2	            0x8b00	                    mov eax, dword [rax]	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x3bb4	          0x83f801	                              cmp eax, 1	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x3bb7	            0x7516	                           jne 0x4003c0f	      1308	ref-filter.c	ELSE_1	FUNCTION_51	IF_1
0x3bb9	    0x8b1500000000	            mov edx, dword [0x04003bff] 	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bc3	            0x89d6	                            mov esi, edx	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bc5	          0x4889c7	                            mov rdi, rax	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bc8	      0xe800000000	                          call 0x4003c0d	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bcd	            0xeb48	                           jmp 0x4003c57	      1309	ref-filter.c	ELSE_1	FUNCTION_51	CALL_1
0x3bcf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1310	ref-filter.c	FUNCTION_51	IF_2
0x3bd3	            0x8b00	                    mov eax, dword [rax]	      1310	ref-filter.c	FUNCTION_51	IF_2
0x3bd5	          0x83f802	                              cmp eax, 2	      1310	ref-filter.c	FUNCTION_51	IF_2
0x3bd8	            0x7517	                           jne 0x4003c31	      1310	ref-filter.c	FUNCTION_51	IF_2
0x3bda	        0x488b45f8	                mov rax, qword [rbp - 8]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3bde	          0x8b5004	                mov edx, dword [rax + 4]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3be1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3be5	            0x89d6	                            mov esi, edx	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3be7	          0x4889c7	                            mov rdi, rax	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3bea	      0xe819feffff	          call sym.lstrip_ref_components	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3bef	            0xeb26	                           jmp 0x4003c57	      1311	ref-filter.c	FUNCTION_51	ELSE_1	CALL_2
0x3bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3bf5	            0x8b00	                    mov eax, dword [rax]	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3bf7	          0x83f803	                              cmp eax, 3	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3bfa	            0x7517	                           jne 0x4003c53	      1312	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3bfc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c00	          0x8b5008	                mov edx, dword [rax + 8]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c07	            0x89d6	                            mov esi, edx	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c09	          0x4889c7	                            mov rdi, rax	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c0c	      0xe8b7feffff	          call sym.rstrip_ref_components	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c11	            0xeb04	                           jmp 0x4003c57	      1313	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_2	IF_3
0x3c13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1315	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x3c17	              0xc9	                                   leave	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
0x3c18	              0xc3	                                     ret	      1316	ref-filter.c	FUNCTION_51	ELSE_1	ELSE_3
copy_line	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	20
0x2b23	              0x55	                                push rbp	       930	ref-filter.c	FUNCTION_37
0x2b24	          0x4889e5	                            mov rbp, rsp	       930	ref-filter.c	FUNCTION_37
0x2b27	        0x4883ec20	                           sub rsp, 0x20	       930	ref-filter.c	FUNCTION_37
0x2b2b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       930	ref-filter.c	FUNCTION_37
0x2b2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       931	ref-filter.c	FUNCTION_37	CALL_1
0x2b33	      0xbe0a000000	                            mov esi, 0xa	       931	ref-filter.c	FUNCTION_37	CALL_1
0x2b38	          0x4889c7	                            mov rdi, rax	       931	ref-filter.c	FUNCTION_37	CALL_1
0x2b3b	      0xe800000000	                          call 0x4002b80	       931	ref-filter.c	FUNCTION_37	CALL_1
0x2b40	        0x488945f8	                mov qword [rbp - 8], rax	       931	ref-filter.c	FUNCTION_37	CALL_1
0x2b44	        0x488b55f8	                mov rdx, qword [rbp - 8]	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b4c	          0x4829c2	                            sub rdx, rax	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b4f	          0x4889d0	                            mov rax, rdx	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b52	          0x4889c2	                            mov rdx, rax	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b59	          0x4889d6	                            mov rsi, rdx	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b5c	          0x4889c7	                            mov rdi, rax	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b5f	      0xe800000000	                          call 0x4002ba4	       932	ref-filter.c	FUNCTION_37	CALL_2
0x2b64	              0xc9	                                   leave	       933	ref-filter.c	FUNCTION_37
0x2b65	              0xc3	                                     ret	       933	ref-filter.c	FUNCTION_37
setup_ref_filter_porcelain_msg	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0:IF,0	17
0x5c9	              0x55	                                push rbp	        34	ref-filter.c	FUNCTION_1
0x5ca	          0x4889e5	                            mov rbp, rsp	        34	ref-filter.c	FUNCTION_1
0x5cd	      0xbf00000000	                              mov edi, 0	        35	ref-filter.c	FUNCTION_1	CALL_1
0x5d2	      0xe886feffff	                               call sym.	        35	ref-filter.c	FUNCTION_1	CALL_1
0x5d7	    0x488905000000	            mov qword [0x0400061e], rax 	        35	ref-filter.c	FUNCTION_1	CALL_1
0x5de	      0xbf00000000	                              mov edi, 0	        36	ref-filter.c	FUNCTION_1	CALL_2
0x5e3	      0xe875feffff	                               call sym.	        36	ref-filter.c	FUNCTION_1	CALL_2
0x5e8	    0x488905000000	            mov qword [0x0400062f], rax 	        36	ref-filter.c	FUNCTION_1	CALL_2
0x5ef	      0xbf00000000	                              mov edi, 0	        37	ref-filter.c	FUNCTION_1	CALL_3
0x5f4	      0xe864feffff	                               call sym.	        37	ref-filter.c	FUNCTION_1	CALL_3
0x5f9	    0x488905000000	            mov qword [0x04000640], rax 	        37	ref-filter.c	FUNCTION_1	CALL_3
0x600	      0xbf00000000	                              mov edi, 0	        38	ref-filter.c	FUNCTION_1	CALL_4
0x605	      0xe853feffff	                               call sym.	        38	ref-filter.c	FUNCTION_1	CALL_4
0x60a	    0x488905000000	            mov qword [0x04000651], rax 	        38	ref-filter.c	FUNCTION_1	CALL_4
0x611	              0x90	                                     nop	        39	ref-filter.c	FUNCTION_1
0x612	              0x5d	                                 pop rbp	        39	ref-filter.c	FUNCTION_1
0x613	              0xc3	                                     ret	        39	ref-filter.c	FUNCTION_1
in_commit_list	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	26
0x4e13	              0x55	                                push rbp	      1657	ref-filter.c	FUNCTION_59
0x4e14	          0x4889e5	                            mov rbp, rsp	      1657	ref-filter.c	FUNCTION_59
0x4e17	        0x4883ec10	                           sub rsp, 0x10	      1657	ref-filter.c	FUNCTION_59
0x4e1b	        0x48897df8	                mov qword [rbp - 8], rdi	      1657	ref-filter.c	FUNCTION_59
0x4e1f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1657	ref-filter.c	FUNCTION_59
0x4e23	            0xeb35	                           jmp 0x4004e9a	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e29	        0x488d5004	                      lea rdx, [rax + 4]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e31	          0x488b00	                    mov rax, qword [rax]	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e34	        0x4883c004	                              add rax, 4	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e38	          0x4889d6	                            mov rsi, rdx	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e3b	          0x4889c7	                            mov rdi, rax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e3e	      0xe870b6ffff	                         call sym.oidcmp	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e43	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e45	            0x7507	                           jne 0x4004e8e	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4e47	      0xb801000000	                              mov eax, 1	      1660	ref-filter.c	FUNCTION_59	FOR_1	IF_1
0x4e4c	            0xeb18	                           jmp 0x4004ea6	      1660	ref-filter.c	FUNCTION_59	FOR_1	IF_1
0x4e4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e52	        0x488b4008	                mov rax, qword [rax + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e56	        0x488945f8	                mov qword [rbp - 8], rax	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e5a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e5f	            0x75c4	                           jne 0x4004e65	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4e61	      0xb800000000	                              mov eax, 0	      1661	ref-filter.c	FUNCTION_59
0x4e66	              0xc9	                                   leave	      1662	ref-filter.c	FUNCTION_59
0x4e67	              0xc3	                                     ret	      1662	ref-filter.c	FUNCTION_59
ref_array_sort	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	24
0x62a2	              0x55	                                push rbp	      2196	ref-filter.c	FUNCTION_81
0x62a3	          0x4889e5	                            mov rbp, rsp	      2196	ref-filter.c	FUNCTION_81
0x62a6	        0x4883ec10	                           sub rsp, 0x10	      2196	ref-filter.c	FUNCTION_81
0x62aa	        0x48897df8	                mov qword [rbp - 8], rdi	      2196	ref-filter.c	FUNCTION_81
0x62ae	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2196	ref-filter.c	FUNCTION_81
0x62b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62b6	            0x8b00	                    mov eax, dword [rax]	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62b8	          0x4863f0	                         movsxd rsi, eax	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62bf	        0x488b4008	                mov rax, qword [rax + 8]	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62c3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62c7	          0x4989d0	                             mov r8, rdx	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62ca	      0xb900000000	                              mov ecx, 0	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62cf	      0xba08000000	                              mov edx, 8	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62d4	          0x4889c7	                            mov rdi, rax	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62d7	      0xe800000000	                          call 0x400631c	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62dc	            0x85c0	                           test eax, eax	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62de	            0x740f	                            je 0x400632f	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62e0	      0xbf00000000	                              mov edi, 0	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62e5	      0xb800000000	                              mov eax, 0	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62ea	      0xe800000000	                          call 0x400632f	      2197	ref-filter.c	FUNCTION_81	CALL_1
0x62ef	              0x90	                                     nop	      2198	ref-filter.c	FUNCTION_81
0x62f0	              0xc9	                                   leave	      2198	ref-filter.c	FUNCTION_81
0x62f1	              0xc3	                                     ret	      2198	ref-filter.c	FUNCTION_81
find_wholine	SWITCH,0:DO,0:FOR,0:WHILE,1:CALL,2:ELSE,0:functions,0:IF,3	55
0x2a6c	              0x55	                                push rbp	       912	ref-filter.c	FUNCTION_36
0x2a6d	          0x4889e5	                            mov rbp, rsp	       912	ref-filter.c	FUNCTION_36
0x2a70	        0x4883ec30	                           sub rsp, 0x30	       912	ref-filter.c	FUNCTION_36
0x2a74	        0x48897de8	             mov qword [rbp - 0x18], rdi	       912	ref-filter.c	FUNCTION_36
0x2a78	          0x8975e4	             mov dword [rbp - 0x1c], esi	       912	ref-filter.c	FUNCTION_36
0x2a7b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       912	ref-filter.c	FUNCTION_36
0x2a7f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       912	ref-filter.c	FUNCTION_36
0x2a83	      0xe985000000	                           jmp 0x4002b4d	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x2a88	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a8b	          0x4863d0	                         movsxd rdx, eax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a8e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a96	          0x4889ce	                            mov rsi, rcx	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a99	          0x4889c7	                            mov rdi, rax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2a9c	      0xe800000000	                          call 0x4002ae1	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2aa1	            0x85c0	                           test eax, eax	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2aa3	            0x7526	                           jne 0x4002b0b	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2aa5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2aa8	          0x4863d0	                         movsxd rdx, eax	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2aab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2aaf	          0x4801d0	                            add rax, rdx	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2ab2	           0xfb600	                   movzx eax, byte [rax]	       916	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2ab5	            0x3c20	                            cmp al, 0x20	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2ab7	            0x7512	                           jne 0x4002b0b	       915	ref-filter.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x2ab9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2abc	            0x4898	                                    cdqe	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2abe	        0x488d5001	                      lea rdx, [rax + 1]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2ac2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2ac6	          0x4801d0	                            add rax, rdx	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2ac9	            0xeb56	                           jmp 0x4002b61	       917	ref-filter.c	FUNCTION_36	WHILE_1	IF_1
0x2acb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x2acf	      0xbe0a000000	                            mov esi, 0xa	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x2ad4	          0x4889c7	                            mov rdi, rax	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x2ad7	      0xe800000000	                          call 0x4002b1c	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x2adc	        0x488945f8	                mov qword [rbp - 8], rax	       918	ref-filter.c	FUNCTION_36	WHILE_1	CALL_2
0x2ae0	      0x48837df800	                  cmp qword [rbp - 8], 0	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x2ae5	            0x7507	                           jne 0x4002b2e	       919	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x2ae7	      0xb800000000	                              mov eax, 0	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x2aec	            0xeb33	                           jmp 0x4002b61	       920	ref-filter.c	FUNCTION_36	WHILE_1	IF_2
0x2aee	      0x488345f801	                  add qword [rbp - 8], 1	       921	ref-filter.c	FUNCTION_36	WHILE_1
0x2af3	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2af7	           0xfb600	                   movzx eax, byte [rax]	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2afa	            0x3c0a	                             cmp al, 0xa	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2afc	            0x7507	                           jne 0x4002b45	       922	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2afe	      0xb800000000	                              mov eax, 0	       923	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2b03	            0xeb1c	                           jmp 0x4002b61	       923	ref-filter.c	FUNCTION_36	WHILE_1	IF_3
0x2b05	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	ref-filter.c	FUNCTION_36	WHILE_1
0x2b09	        0x488945d8	             mov qword [rbp - 0x28], rax	       924	ref-filter.c	FUNCTION_36	WHILE_1
0x2b0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x2b11	           0xfb600	                   movzx eax, byte [rax]	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x2b14	            0x84c0	                             test al, al	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x2b16	     0xf856cffffff	                           jne 0x4002ac8	       914	ref-filter.c	FUNCTION_36	WHILE_1
0x2b1c	      0xb800000000	                              mov eax, 0	       926	ref-filter.c	FUNCTION_36
0x2b21	              0xc9	                                   leave	       927	ref-filter.c	FUNCTION_36
0x2b22	              0xc3	                                     ret	       927	ref-filter.c	FUNCTION_36
get_obj	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,1:functions,0:IF,1	41
0x2404	              0x55	                                push rbp	       802	ref-filter.c	FUNCTION_31
0x2405	          0x4889e5	                            mov rbp, rsp	       802	ref-filter.c	FUNCTION_31
0x2408	        0x4883ec40	                           sub rsp, 0x40	       802	ref-filter.c	FUNCTION_31
0x240c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       802	ref-filter.c	FUNCTION_31
0x2410	        0x488975d0	             mov qword [rbp - 0x30], rsi	       802	ref-filter.c	FUNCTION_31
0x2414	        0x488955c8	             mov qword [rbp - 0x38], rdx	       802	ref-filter.c	FUNCTION_31
0x2418	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       802	ref-filter.c	FUNCTION_31
0x241c	    0x64488b042528	                mov rax, qword fs:[0x28]	       802	ref-filter.c	FUNCTION_31
0x2425	        0x488945f8	                mov qword [rbp - 8], rax	       802	ref-filter.c	FUNCTION_31
0x2429	            0x31c0	                            xor eax, eax	       802	ref-filter.c	FUNCTION_31
0x242b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x242f	        0x488d4dec	                   lea rcx, [rbp - 0x14]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x2433	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       804	ref-filter.c	FUNCTION_31	CALL_1
0x2437	          0x4889ce	                            mov rsi, rcx	       804	ref-filter.c	FUNCTION_31	CALL_1
0x243a	          0x4889c7	                            mov rdi, rax	       804	ref-filter.c	FUNCTION_31	CALL_1
0x243d	      0xe8e7e0ffff	               call sym.read_object_file	       804	ref-filter.c	FUNCTION_31	CALL_1
0x2442	        0x488945f0	             mov qword [rbp - 0x10], rax	       804	ref-filter.c	FUNCTION_31	CALL_1
0x2446	      0x48837df000	               cmp qword [rbp - 0x10], 0	       806	ref-filter.c	FUNCTION_31	IF_1
0x244b	            0x742d	                            je 0x40024ba	       806	ref-filter.c	FUNCTION_31	IF_1
0x244d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2451	          0x488b10	                    mov rdx, qword [rax]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2454	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2457	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x245b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x245f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2463	          0x4989f8	                             mov r8, rdi	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2466	          0x4889c7	                            mov rdi, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2469	      0xe800000000	                          call 0x40024ae	       807	ref-filter.c	FUNCTION_31	CALL_2
0x246e	          0x4889c2	                            mov rdx, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2471	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2475	          0x488910	                    mov qword [rax], rdx	       807	ref-filter.c	FUNCTION_31	CALL_2
0x2478	            0xeb0b	                           jmp 0x40024c5	       807	ref-filter.c	FUNCTION_31	CALL_2
0x247a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x247e	    0x48c700000000	                      mov qword [rax], 0	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x2485	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       810	ref-filter.c	FUNCTION_31	ELSE_1
0x2489	        0x488b75f8	                mov rsi, qword [rbp - 8]	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x248d	    0x644833342528	                xor rsi, qword fs:[0x28]	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x2496	            0x7405	                            je 0x40024dd	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x2498	      0xe800000000	                          call 0x40024dd	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x249d	              0xc9	                                   leave	       811	ref-filter.c	FUNCTION_31	ELSE_1
0x249e	              0xc3	                                     ret	       811	ref-filter.c	FUNCTION_31	ELSE_1
grab_sub_body_contents	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,14:ELSE,6:functions,0:IF,11	226
0x3476	              0x55	                                push rbp	      1136	ref-filter.c	FUNCTION_45
0x3477	          0x4889e5	                            mov rbp, rsp	      1136	ref-filter.c	FUNCTION_45
0x347a	    0x4881ecb00000	                           sub rsp, 0xb0	      1136	ref-filter.c	FUNCTION_45
0x3481	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      1136	ref-filter.c	FUNCTION_45
0x3488	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      1136	ref-filter.c	FUNCTION_45
0x348e	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      1136	ref-filter.c	FUNCTION_45
0x3495	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	      1136	ref-filter.c	FUNCTION_45
0x349c	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      1136	ref-filter.c	FUNCTION_45
0x34a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1136	ref-filter.c	FUNCTION_45
0x34ac	        0x488945f8	                mov qword [rbp - 8], rax	      1136	ref-filter.c	FUNCTION_45
0x34b0	            0x31c0	                            xor eax, eax	      1136	ref-filter.c	FUNCTION_45
0x34b2	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1138	ref-filter.c	FUNCTION_45
0x34ba	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1138	ref-filter.c	FUNCTION_45
0x34c2	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1138	ref-filter.c	FUNCTION_45
0x34ca	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1139	ref-filter.c	FUNCTION_45
0x34d2	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1139	ref-filter.c	FUNCTION_45
0x34da	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1139	ref-filter.c	FUNCTION_45
0x34e2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1139	ref-filter.c	FUNCTION_45
0x34ea	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x34f1	      0xe9d5020000	                           jmp 0x400380b	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x34f6	    0x488b0d000000	            mov rcx, qword [0x0400353d] 	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x34fd	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3500	          0x4863d0	                         movsxd rdx, eax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3503	          0x4889d0	                            mov rax, rdx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3506	          0x4801c0	                            add rax, rax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3509	          0x4801d0	                            add rax, rdx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x350c	        0x48c1e005	                              shl rax, 5	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3510	          0x4801c8	                            add rax, rcx	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3513	        0x488945c8	             mov qword [rbp - 0x38], rax	      1142	ref-filter.c	FUNCTION_45	FOR_1
0x3517	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x351b	          0x488b00	                    mov rax, qword [rax]	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x351e	        0x488945c0	             mov qword [rbp - 0x40], rax	      1143	ref-filter.c	FUNCTION_45	FOR_1
0x3522	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x3525	            0x4898	                                    cdqe	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x3527	        0x48c1e005	                              shl rax, 5	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x352b	          0x4889c2	                            mov rdx, rax	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x352e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x3535	          0x4801d0	                            add rax, rdx	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x3538	        0x488945d0	             mov qword [rbp - 0x30], rax	      1144	ref-filter.c	FUNCTION_45	FOR_1
0x353c	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x3543	           0xf95c2	                                setne dl	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x3546	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x354a	           0xfb600	                   movzx eax, byte [rax]	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x354d	            0x3c2a	                            cmp al, 0x2a	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x354f	           0xf94c0	                                 sete al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x3552	            0x31d0	                            xor eax, edx	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x3554	            0x84c0	                             test al, al	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x3556	     0xf8567020000	                           jne 0x4003803	      1145	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x355c	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1147	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x3563	            0x7405	                            je 0x40035aa	      1147	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x3565	      0x488345c001	               add qword [rbp - 0x40], 1	      1148	ref-filter.c	FUNCTION_45	FOR_1	IF_2
0x356a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x356e	      0xbe00000000	                              mov esi, 0	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x3573	          0x4889c7	                            mov rdi, rax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x3576	      0xe800000000	                          call 0x40035bb	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x357b	            0x85c0	                           test eax, eax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x357d	            0x7443	                            je 0x4003602	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x357f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x3583	      0xbe00000000	                              mov esi, 0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x3588	          0x4889c7	                            mov rdi, rax	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x358b	      0xe800000000	                          call 0x40035d0	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x3590	            0x85c0	                           test eax, eax	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x3592	            0x742e	                            je 0x4003602	      1149	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_1
0x3594	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x3598	      0xbe00000000	                              mov esi, 0	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x359d	          0x4889c7	                            mov rdi, rax	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x35a0	      0xe800000000	                          call 0x40035e5	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x35a5	            0x85c0	                           test eax, eax	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x35a7	            0x7519	                           jne 0x4003602	      1150	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_2
0x35a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x35ad	      0xbe00000000	                              mov esi, 0	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x35b2	          0x4889c7	                            mov rdi, rax	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x35b5	      0xe800000000	                          call 0x40035fa	      1152	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_4
0x35ba	            0x85c0	                           test eax, eax	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x35bc	     0xf8404020000	                            je 0x4003806	      1151	ref-filter.c	FUNCTION_45	FOR_1	IF_3	CALL_3
0x35c2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x35c6	          0x4885c0	                           test rax, rax	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x35c9	            0x753d	                           jne 0x4003648	      1154	ref-filter.c	FUNCTION_45	FOR_1	IF_4
0x35cb	        0x4c8d4da8	                    lea r9, [rbp - 0x58]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35cf	        0x4c8d4590	                    lea r8, [rbp - 0x70]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35d3	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35d7	        0x488d5588	                   lea rdx, [rbp - 0x78]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35db	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35e2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35e9	        0x4883ec08	                              sub rsp, 8	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35ed	        0x488d7db8	                   lea rdi, [rbp - 0x48]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35f1	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35f2	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35f6	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35f7	        0x488d7db0	                   lea rdi, [rbp - 0x50]	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35fb	              0x57	                                push rdi	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35fc	          0x4889c7	                            mov rdi, rax	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x35ff	      0xe8b7fbffff	                    call sym.find_subpos	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x3604	        0x4883c420	                           add rsp, 0x20	      1155	ref-filter.c	FUNCTION_45	FOR_1	IF_4	CALL_5
0x3608	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x360c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x360f	          0x83f805	                              cmp eax, 5	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x3612	            0x7522	                           jne 0x4003676	      1160	ref-filter.c	FUNCTION_45	FOR_1	IF_5
0x3614	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x3618	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x361c	          0x4889d6	                            mov rsi, rdx	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x361f	          0x4889c7	                            mov rdi, rax	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x3622	      0xe82ef6ffff	                   call sym.copy_subject	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x3627	          0x4889c2	                            mov rdx, rax	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x362a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x362e	          0x488910	                    mov qword [rax], rdx	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x3631	      0xe991010000	                           jmp 0x4003807	      1161	ref-filter.c	FUNCTION_45	FOR_1	CALL_6
0x3636	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x363a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x363d	          0x83f802	                              cmp eax, 2	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3640	            0x7522	                           jne 0x40036a4	      1162	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3642	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3646	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x364a	          0x4889d6	                            mov rsi, rdx	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x364d	          0x4889c7	                            mov rdi, rax	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3650	      0xe800000000	                          call 0x4003695	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3655	          0x4889c2	                            mov rdx, rax	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3658	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x365c	          0x488910	                    mov qword [rax], rdx	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x365f	      0xe963010000	                           jmp 0x4003807	      1163	ref-filter.c	FUNCTION_45	FOR_1	ELSE_1	IF_6
0x3664	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3668	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x366b	          0x83f801	                              cmp eax, 1	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x366e	            0x7522	                           jne 0x40036d2	      1164	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3670	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3674	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3678	          0x4889d6	                            mov rsi, rdx	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x367b	          0x4889c7	                            mov rdi, rax	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x367e	      0xe800000000	                          call 0x40036c3	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3683	          0x4889c2	                            mov rdx, rax	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3686	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x368a	          0x488910	                    mov qword [rax], rdx	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x368d	      0xe935010000	                           jmp 0x4003807	      1165	ref-filter.c	FUNCTION_45	FOR_1	ELSE_2	IF_7
0x3692	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x3696	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x3699	          0x83f804	                              cmp eax, 4	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x369c	            0x7522	                           jne 0x4003700	      1166	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x369e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36a2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36a6	          0x4889d6	                            mov rsi, rdx	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36a9	          0x4889c7	                            mov rdi, rax	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36ac	      0xe800000000	                          call 0x40036f1	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36b1	          0x4889c2	                            mov rdx, rax	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36b8	          0x488910	                    mov qword [rax], rdx	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36bb	      0xe907010000	                           jmp 0x4003807	      1167	ref-filter.c	FUNCTION_45	FOR_1	ELSE_3	IF_8
0x36c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36c4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36c7	          0x83f803	                              cmp eax, 3	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36ca	            0x7578	                           jne 0x4003784	      1168	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36cc	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36d4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36dc	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1169	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36e4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36e8	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36ec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36f0	          0x4829d1	                            sub rcx, rdx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36f3	          0x4889ca	                            mov rdx, rcx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36f6	          0x4801d0	                            add rax, rdx	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36f9	        0x488945d8	             mov qword [rbp - 0x28], rax	      1170	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9
0x36fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3701	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3704	            0x89c1	                            mov ecx, eax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3706	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x370a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x370e	          0x4829d0	                            sub rax, rdx	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3711	          0x4889c2	                            mov rdx, rax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3714	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3718	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x371c	          0x4889c7	                            mov rdi, rax	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x371f	      0xe85cfcffff	                   call sym.append_lines	      1173	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_10
0x3724	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x3728	      0xbe00000000	                              mov esi, 0	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x372d	          0x4889c7	                            mov rdi, rax	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x3730	      0xe800000000	                          call 0x4003775	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x3735	          0x4889c2	                            mov rdx, rax	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x3738	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x373c	          0x488910	                    mov qword [rax], rdx	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x373f	      0xe983000000	                           jmp 0x4003807	      1174	ref-filter.c	FUNCTION_45	FOR_1	ELSE_4	IF_9	CALL_11
0x3744	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x3748	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x374b	          0x83f806	                              cmp eax, 6	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x374e	            0x7550	                           jne 0x40037e0	      1175	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x3750	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x3758	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x3760	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1176	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10
0x3768	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x376c	        0x488d5014	                   lea rdx, [rax + 0x14]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x3770	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x3774	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x3778	          0x4889ce	                            mov rsi, rcx	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x377b	          0x4889c7	                            mov rdi, rax	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x377e	      0xe800000000	                          call 0x40037c3	      1179	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_12
0x3783	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x3787	      0xbe00000000	                              mov esi, 0	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x378c	          0x4889c7	                            mov rdi, rax	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x378f	      0xe800000000	                          call 0x40037d4	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x3794	          0x4889c2	                            mov rdx, rax	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x3797	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x379b	          0x488910	                    mov qword [rax], rdx	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x379e	            0xeb27	                           jmp 0x4003807	      1181	ref-filter.c	FUNCTION_45	FOR_1	ELSE_5	IF_10	CALL_13
0x37a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37a4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37a7	            0x85c0	                           test eax, eax	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37a9	            0x751c	                           jne 0x4003807	      1182	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37af	          0x4889c7	                            mov rdi, rax	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37b2	      0xe800000000	                          call 0x40037f7	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37b7	          0x4889c2	                            mov rdx, rax	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37be	          0x488910	                    mov qword [rax], rdx	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37c1	            0xeb04	                           jmp 0x4003807	      1183	ref-filter.c	FUNCTION_45	FOR_1	ELSE_6	IF_11
0x37c3	              0x90	                                     nop	      1146	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x37c4	            0xeb01	                           jmp 0x4003807	      1146	ref-filter.c	FUNCTION_45	FOR_1	IF_1
0x37c6	              0x90	                                     nop	      1153	ref-filter.c	FUNCTION_45	FOR_1	IF_3
0x37c7	        0x83458401	               add dword [rbp - 0x7c], 1	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x37cb	    0x8b0500000000	            mov eax, dword [0x04003811] 	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x37d1	          0x394584	            cmp dword [rbp - 0x7c], eax 	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x37d4	     0xf8c1cfdffff	                            jl 0x4003536	      1141	ref-filter.c	FUNCTION_45	FOR_1
0x37da	              0x90	                                     nop	      1185	ref-filter.c	FUNCTION_45
0x37db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1185	ref-filter.c	FUNCTION_45
0x37df	    0x644833042528	                xor rax, qword fs:[0x28]	      1185	ref-filter.c	FUNCTION_45
0x37e8	            0x7405	                            je 0x400382f	      1185	ref-filter.c	FUNCTION_45
0x37ea	      0xe800000000	                          call 0x400382f	      1185	ref-filter.c	FUNCTION_45
0x37ef	              0xc9	                                   leave	      1185	ref-filter.c	FUNCTION_45
0x37f0	              0xc3	                                     ret	      1185	ref-filter.c	FUNCTION_45
head_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	18
0x14c1	              0x55	                                push rbp	       375	ref-filter.c	FUNCTION_15
0x14c2	          0x4889e5	                            mov rbp, rsp	       375	ref-filter.c	FUNCTION_15
0x14c5	        0x4883ec20	                           sub rsp, 0x20	       375	ref-filter.c	FUNCTION_15
0x14c9	        0x48897df8	                mov qword [rbp - 8], rdi	       375	ref-filter.c	FUNCTION_15
0x14cd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       375	ref-filter.c	FUNCTION_15
0x14d1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       375	ref-filter.c	FUNCTION_15
0x14d5	        0x48894de0	             mov qword [rbp - 0x20], rcx	       375	ref-filter.c	FUNCTION_15
0x14d9	      0xb900000000	                              mov ecx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14de	      0xba00000000	                              mov edx, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14e3	      0xbe01000000	                              mov esi, 1	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14e8	      0xbf00000000	                              mov edi, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14ed	      0xe800000000	                          call 0x4001532	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14f2	          0x4889c2	                            mov rdx, rax	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14f9	        0x48895010	             mov qword [rax + 0x10], rdx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x14fd	      0xb800000000	                              mov eax, 0	       377	ref-filter.c	FUNCTION_15
0x1502	              0xc9	                                   leave	       378	ref-filter.c	FUNCTION_15
0x1503	              0xc3	                                     ret	       378	ref-filter.c	FUNCTION_15
match_points_at	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,5:ELSE,0:functions,0:IF,4	53
0x55a3	              0x55	                                push rbp	      1894	ref-filter.c	FUNCTION_69
0x55a4	          0x4889e5	                            mov rbp, rsp	      1894	ref-filter.c	FUNCTION_69
0x55a7	        0x4883ec30	                           sub rsp, 0x30	      1894	ref-filter.c	FUNCTION_69
0x55ab	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1894	ref-filter.c	FUNCTION_69
0x55af	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1894	ref-filter.c	FUNCTION_69
0x55b3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1894	ref-filter.c	FUNCTION_69
0x55b7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1895	ref-filter.c	FUNCTION_69
0x55bf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55c7	          0x4889d6	                            mov rsi, rdx	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55ca	          0x4889c7	                            mov rdi, rax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55cd	      0xe800000000	                          call 0x4005612	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55d2	            0x85c0	                           test eax, eax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55d4	            0x7806	                            js 0x400561c	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x55d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1899	ref-filter.c	FUNCTION_69	IF_1
0x55da	            0xeb7f	                           jmp 0x400569b	      1899	ref-filter.c	FUNCTION_69	IF_1
0x55dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x55e0	          0x4889c7	                            mov rdi, rax	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x55e3	      0xe800000000	                          call 0x4005628	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x55e8	        0x488945f8	                mov qword [rbp - 8], rax	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x55ec	      0x48837df800	                  cmp qword [rbp - 8], 0	      1901	ref-filter.c	FUNCTION_69	IF_2
0x55f1	            0x7521	                           jne 0x4005654	      1901	ref-filter.c	FUNCTION_69	IF_2
0x55f3	      0xbf00000000	                              mov edi, 0	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x55f8	      0xe860aeffff	                               call sym.	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x55fd	          0x4889c2	                            mov rdx, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x5600	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x5604	          0x4889c6	                            mov rsi, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x5607	          0x4889d7	                            mov rdi, rdx	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x560a	      0xb800000000	                              mov eax, 0	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x560f	      0xe800000000	                          call 0x4005654	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x5614	        0x488b45f8	                mov rax, qword [rbp - 8]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x5618	           0xfb600	                   movzx eax, byte [rax]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x561b	          0x83e00e	                            and eax, 0xe	      1903	ref-filter.c	FUNCTION_69	IF_3
0x561e	            0x3c08	                               cmp al, 8	      1903	ref-filter.c	FUNCTION_69	IF_3
0x5620	            0x7510	                           jne 0x4005672	      1903	ref-filter.c	FUNCTION_69	IF_3
0x5622	        0x488b45f8	                mov rax, qword [rbp - 8]	      1904	ref-filter.c	FUNCTION_69	IF_3
0x5626	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1904	ref-filter.c	FUNCTION_69	IF_3
0x562a	        0x4883c004	                              add rax, 4	      1904	ref-filter.c	FUNCTION_69	IF_3
0x562e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1904	ref-filter.c	FUNCTION_69	IF_3
0x5632	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5637	            0x741d	                            je 0x4005696	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5639	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x563d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5641	          0x4889d6	                            mov rsi, rdx	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5644	          0x4889c7	                            mov rdi, rax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5647	      0xe800000000	                          call 0x400568c	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x564c	            0x85c0	                           test eax, eax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x564e	            0x7806	                            js 0x4005696	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x5650	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1906	ref-filter.c	FUNCTION_69	IF_4
0x5654	            0xeb05	                           jmp 0x400569b	      1906	ref-filter.c	FUNCTION_69	IF_4
0x5656	      0xb800000000	                              mov eax, 0	      1907	ref-filter.c	FUNCTION_69
0x565b	              0xc9	                                   leave	      1908	ref-filter.c	FUNCTION_69
0x565c	              0xc3	                                     ret	      1908	ref-filter.c	FUNCTION_69
grab_values	SWITCH,1:DO,0:FOR,0:WHILE,0:CALL,9:ELSE,0:functions,0:IF,0	111
0x3842	              0x55	                                push rbp	      1209	ref-filter.c	FUNCTION_47
0x3843	          0x4889e5	                            mov rbp, rsp	      1209	ref-filter.c	FUNCTION_47
0x3846	        0x4883ec30	                           sub rsp, 0x30	      1209	ref-filter.c	FUNCTION_47
0x384a	        0x48897df8	                mov qword [rbp - 8], rdi	      1209	ref-filter.c	FUNCTION_47
0x384e	          0x8975f4	              mov dword [rbp - 0xc], esi	      1209	ref-filter.c	FUNCTION_47
0x3851	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1209	ref-filter.c	FUNCTION_47
0x3855	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1209	ref-filter.c	FUNCTION_47
0x3859	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1209	ref-filter.c	FUNCTION_47
0x385d	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3861	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3865	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3869	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x386c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3870	          0x4989f8	                             mov r8, rdi	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3873	          0x4889c7	                            mov rdi, rax	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x3876	      0xe813edffff	             call sym.grab_common_values	      1210	ref-filter.c	FUNCTION_47	CALL_1
0x387b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x387f	           0xfb600	                   movzx eax, byte [rax]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3882	            0xd0e8	                               shr al, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3884	          0x83e007	                              and eax, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3887	           0xfb6c0	                           movzx eax, al	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x388a	          0x83f802	                              cmp eax, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x388d	     0xf8432010000	                            je 0x4003a05	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3893	          0x83f802	                              cmp eax, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3896	            0x7f0a	                            jg 0x40038e2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x3898	          0x83f801	                              cmp eax, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x389b	            0x747e	                            je 0x400395b	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x389d	      0xe903010000	                           jmp 0x40039e5	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x38a2	          0x83f803	                              cmp eax, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x38a5	     0xf841d010000	                            je 0x4003a08	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x38ab	          0x83f804	                              cmp eax, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x38ae	     0xf85f1000000	                           jne 0x40039e5	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x38b4	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38b8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38bc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38c0	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38c7	          0x4989f8	                             mov r8, rdi	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38ca	          0x4889c7	                            mov rdi, rax	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38cd	      0xe817eeffff	                call sym.grab_tag_values	      1213	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_2
0x38d2	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38d6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38da	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38de	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38e5	          0x4989f8	                             mov r8, rdi	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38e8	          0x4889c7	                            mov rdi, rax	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38eb	      0xe886fbffff	         call sym.grab_sub_body_contents	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x38f0	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x38f4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x38f8	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x38fc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x38ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x3903	          0x4989f9	                             mov r9, rdi	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x3906	          0x4989f0	                             mov r8, rsi	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x3909	          0x4889c6	                            mov rsi, rax	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x390c	      0xbf00000000	                              mov edi, 0	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x3911	      0xe814f5ffff	                    call sym.grab_person	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x3916	      0xe9ae000000	                           jmp 0x4003a09	      1216	ref-filter.c	FUNCTION_47	SWITCH_1
0x391b	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x391f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x3923	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x3927	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x392a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x392e	          0x4989f8	                             mov r8, rdi	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x3931	          0x4889c7	                            mov rdi, rax	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x3934	      0xe814efffff	             call sym.grab_commit_values	      1218	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_5
0x3939	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x393d	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x3941	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x3945	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x3948	        0x488b45f8	                mov rax, qword [rbp - 8]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x394c	          0x4989f8	                             mov r8, rdi	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x394f	          0x4889c7	                            mov rdi, rax	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x3952	      0xe81ffbffff	         call sym.grab_sub_body_contents	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x3957	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x395b	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x395f	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x3963	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x3966	        0x488b45f8	                mov rax, qword [rbp - 8]	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x396a	          0x4989f9	                             mov r9, rdi	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x396d	          0x4989f0	                             mov r8, rsi	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x3970	          0x4889c6	                            mov rsi, rax	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x3973	      0xbf00000000	                              mov edi, 0	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x3978	      0xe8adf4ffff	                    call sym.grab_person	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x397d	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3981	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3985	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3989	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x398c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3990	          0x4989f9	                             mov r9, rdi	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3993	          0x4989f0	                             mov r8, rsi	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3996	          0x4889c6	                            mov rsi, rax	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x3999	      0xbf00000000	                              mov edi, 0	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x399e	      0xe887f4ffff	                    call sym.grab_person	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x39a3	            0xeb24	                           jmp 0x4003a09	      1222	ref-filter.c	FUNCTION_47	SWITCH_1
0x39a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39a9	           0xfb600	                   movzx eax, byte [rax]	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39ac	            0xd0e8	                               shr al, 1	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39ae	          0x83e007	                              and eax, 7	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39b1	           0xfb6c0	                           movzx eax, al	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39b4	            0x89c6	                            mov esi, eax	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39b6	      0xbf00000000	                              mov edi, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39bb	      0xb800000000	                              mov eax, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39c0	      0xe800000000	                          call 0x4003a05	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x39c5	              0x90	                                     nop	      1225	ref-filter.c	FUNCTION_47	SWITCH_1
0x39c6	            0xeb01	                           jmp 0x4003a09	      1225	ref-filter.c	FUNCTION_47	SWITCH_1
0x39c8	              0x90	                                     nop	      1228	ref-filter.c	FUNCTION_47	SWITCH_1
0x39c9	              0x90	                                     nop	      1232	ref-filter.c	FUNCTION_47
0x39ca	              0xc9	                                   leave	      1232	ref-filter.c	FUNCTION_47
0x39cb	              0xc3	                                     ret	      1232	ref-filter.c	FUNCTION_47
strbuf_swap	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	39
0x256	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_91
0x257	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_91
0x25a	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_91
0x25e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_91
0x262	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_91
0x266	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_91
0x26f	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_91
0x273	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_91
0x275	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_91	CALL_1
0x279	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_91	CALL_1
0x27d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_91	CALL_1
0x281	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_91	CALL_1
0x285	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_91	CALL_1
0x289	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_91	CALL_1
0x28c	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_91	CALL_1
0x290	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_91	CALL_1
0x294	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_91	CALL_1
0x298	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_91	CALL_1
0x29c	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_91	CALL_1
0x2a0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2a8	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_91	CALL_1
0x2ad	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_91	CALL_1
0x2b0	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_91	CALL_1
0x2b3	      0xe800000000	                          call 0x40002f8	       127	strbuf.h	FUNCTION_91	CALL_1
0x2b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2bc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2c0	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_91	CALL_1
0x2c3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2c7	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_91	CALL_1
0x2cb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_91	CALL_1
0x2cf	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_91	CALL_1
0x2d3	              0x90	                                     nop	       128	strbuf.h	FUNCTION_91
0x2d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_91
0x2d8	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_91
0x2e1	            0x7405	                            je 0x4000328	       128	strbuf.h	FUNCTION_91
0x2e3	      0xe800000000	                          call 0x4000328	       128	strbuf.h	FUNCTION_91
0x2e8	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_91
0x2e9	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_91
refname_atom_parser_internal	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,12:ELSE,4:functions,0:IF,6	105
0x7ab	              0x55	                                push rbp	       136	ref-filter.c	FUNCTION_4
0x7ac	          0x4889e5	                            mov rbp, rsp	       136	ref-filter.c	FUNCTION_4
0x7af	              0x53	                                push rbx	       136	ref-filter.c	FUNCTION_4
0x7b0	        0x4883ec28	                           sub rsp, 0x28	       136	ref-filter.c	FUNCTION_4
0x7b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       136	ref-filter.c	FUNCTION_4
0x7b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       136	ref-filter.c	FUNCTION_4
0x7bc	        0x488955d8	             mov qword [rbp - 0x28], rdx	       136	ref-filter.c	FUNCTION_4
0x7c0	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       136	ref-filter.c	FUNCTION_4
0x7c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	ref-filter.c	FUNCTION_4	IF_1
0x7c8	          0x4885c0	                           test rax, rax	       137	ref-filter.c	FUNCTION_4	IF_1
0x7cb	            0x750f	                           jne 0x400081c	       137	ref-filter.c	FUNCTION_4	IF_1
0x7cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	ref-filter.c	FUNCTION_4	IF_1
0x7d1	    0xc70000000000	                      mov dword [rax], 0	       138	ref-filter.c	FUNCTION_4	IF_1
0x7d7	      0xe952010000	                           jmp 0x400096e	       138	ref-filter.c	FUNCTION_4	IF_1
0x7dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7e0	      0xbe00000000	                              mov esi, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7e5	          0x4889c7	                            mov rdi, rax	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7e8	      0xe800000000	                          call 0x400082d	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7ed	            0x85c0	                           test eax, eax	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7ef	            0x750f	                           jne 0x4000840	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x7f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x7f5	    0xc70001000000	                      mov dword [rax], 1	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x7fb	      0xe92e010000	                           jmp 0x400096e	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x800	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x804	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x808	      0xbe00000000	                              mov esi, 0	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x80d	          0x4889c7	                            mov rdi, rax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x810	      0xe8f6f7ffff	                    call sym.skip_prefix	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x815	            0x85c0	                           test eax, eax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x817	            0x7519	                           jne 0x4000872	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x819	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x81d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x821	      0xbe00000000	                              mov esi, 0	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x826	          0x4889c7	                            mov rdi, rax	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x829	      0xe8ddf7ffff	                    call sym.skip_prefix	       142	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_3
0x82e	            0x85c0	                           test eax, eax	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x830	            0x745a	                            je 0x40008cc	       141	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_2
0x832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	ref-filter.c	FUNCTION_4	ELSE_2	IF_3
0x836	    0xc70002000000	                      mov dword [rax], 2	       143	ref-filter.c	FUNCTION_4	ELSE_2	IF_3
0x83c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x840	        0x488d5004	                      lea rdx, [rax + 4]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x844	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x848	      0xbe0a000000	                            mov esi, 0xa	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x84d	          0x4889c7	                            mov rdi, rax	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x850	      0xe860f9ffff	                       call sym.strtol_i	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x855	            0x85c0	                           test eax, eax	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x857	     0xf84d1000000	                            je 0x400096e	       144	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	IF_4	CALL_4
0x85d	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x861	      0xbf00000000	                              mov edi, 0	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x866	      0xe8f2fbffff	                               call sym.	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x86b	          0x4889c2	                            mov rdx, rax	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x86e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x872	          0x4889d9	                            mov rcx, rbx	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x875	      0xbeffffffff	                     mov esi, 0xffffffff	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x87a	          0x4889c7	                            mov rdi, rax	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x87d	      0xb800000000	                              mov eax, 0	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x882	      0xe88dfdffff	                call sym.strbuf_addf_ret	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x887	      0xe9a7000000	                           jmp 0x4000973	       145	ref-filter.c	FUNCTION_4	ELSE_2	IF_3	CALL_6
0x88c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x890	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x894	      0xbe00000000	                              mov esi, 0	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x899	          0x4889c7	                            mov rdi, rax	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x89c	      0xe86af7ffff	                    call sym.skip_prefix	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x8a1	            0x85c0	                           test eax, eax	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x8a3	            0x7453	                            je 0x4000938	       146	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_7
0x8a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	ref-filter.c	FUNCTION_4	ELSE_3	IF_5
0x8a9	    0xc70003000000	                      mov dword [rax], 3	       147	ref-filter.c	FUNCTION_4	ELSE_3	IF_5
0x8af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8b3	        0x488d5008	                      lea rdx, [rax + 8]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8bb	      0xbe0a000000	                            mov esi, 0xa	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8c0	          0x4889c7	                            mov rdi, rax	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8c3	      0xe8edf8ffff	                       call sym.strtol_i	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8c8	            0x85c0	                           test eax, eax	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8ca	            0x7462	                            je 0x400096e	       148	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	IF_6	CALL_8
0x8cc	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8d0	      0xbf00000000	                              mov edi, 0	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8d5	      0xe883fbffff	                               call sym.	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8da	          0x4889c2	                            mov rdx, rax	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8e1	          0x4889d9	                            mov rcx, rbx	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8e4	      0xbeffffffff	                     mov esi, 0xffffffff	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8e9	          0x4889c7	                            mov rdi, rax	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8ec	      0xb800000000	                              mov eax, 0	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8f1	      0xe81efdffff	                call sym.strbuf_addf_ret	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8f6	            0xeb3b	                           jmp 0x4000973	       149	ref-filter.c	FUNCTION_4	ELSE_3	IF_5	CALL_10
0x8f8	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x8fc	      0xbf00000000	                              mov edi, 0	       151	ref-filter.c	FUNCTION_4	CALL_12
0x901	      0xe857fbffff	                               call sym.	       151	ref-filter.c	FUNCTION_4	CALL_12
0x906	          0x4889c6	                            mov rsi, rax	       151	ref-filter.c	FUNCTION_4	CALL_12
0x909	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x90d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       151	ref-filter.c	FUNCTION_4	CALL_12
0x911	          0x4989d8	                             mov r8, rbx	       151	ref-filter.c	FUNCTION_4	CALL_12
0x914	          0x4889d1	                            mov rcx, rdx	       151	ref-filter.c	FUNCTION_4	CALL_12
0x917	          0x4889f2	                            mov rdx, rsi	       151	ref-filter.c	FUNCTION_4	CALL_12
0x91a	      0xbeffffffff	                     mov esi, 0xffffffff	       151	ref-filter.c	FUNCTION_4	CALL_12
0x91f	          0x4889c7	                            mov rdi, rax	       151	ref-filter.c	FUNCTION_4	CALL_12
0x922	      0xb800000000	                              mov eax, 0	       151	ref-filter.c	FUNCTION_4	CALL_12
0x927	      0xe8e8fcffff	                call sym.strbuf_addf_ret	       151	ref-filter.c	FUNCTION_4	CALL_12
0x92c	            0xeb05	                           jmp 0x4000973	       151	ref-filter.c	FUNCTION_4	CALL_12
0x92e	      0xb800000000	                              mov eax, 0	       152	ref-filter.c	FUNCTION_4
0x933	        0x4883c428	                           add rsp, 0x28	       153	ref-filter.c	FUNCTION_4
0x937	              0x5b	                                 pop rbx	       153	ref-filter.c	FUNCTION_4
0x938	              0x5d	                                 pop rbp	       153	ref-filter.c	FUNCTION_4
0x939	              0xc3	                                     ret	       153	ref-filter.c	FUNCTION_4
contents_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,12:ELSE,6:functions,0:IF,8	114
0xdad	              0x55	                                push rbp	       248	ref-filter.c	FUNCTION_9
0xdae	          0x4889e5	                            mov rbp, rsp	       248	ref-filter.c	FUNCTION_9
0xdb1	              0x53	                                push rbx	       248	ref-filter.c	FUNCTION_9
0xdb2	        0x4883ec28	                           sub rsp, 0x28	       248	ref-filter.c	FUNCTION_9
0xdb6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       248	ref-filter.c	FUNCTION_9
0xdba	        0x488975e0	             mov qword [rbp - 0x20], rsi	       248	ref-filter.c	FUNCTION_9
0xdbe	        0x488955d8	             mov qword [rbp - 0x28], rdx	       248	ref-filter.c	FUNCTION_9
0xdc2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       248	ref-filter.c	FUNCTION_9
0xdc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	ref-filter.c	FUNCTION_9	IF_1
0xdca	          0x4885c0	                           test rax, rax	       249	ref-filter.c	FUNCTION_9	IF_1
0xdcd	            0x7510	                           jne 0x4000e1f	       249	ref-filter.c	FUNCTION_9	IF_1
0xdcf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       250	ref-filter.c	FUNCTION_9	IF_1
0xdd3	    0xc74010000000	               mov dword [rax + 0x10], 0	       250	ref-filter.c	FUNCTION_9	IF_1
0xdda	      0xe975010000	                           jmp 0x4000f94	       250	ref-filter.c	FUNCTION_9	IF_1
0xddf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xde3	      0xbe00000000	                              mov esi, 0	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xde8	          0x4889c7	                            mov rdi, rax	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xdeb	      0xe800000000	                          call 0x4000e30	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xdf0	            0x85c0	                           test eax, eax	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xdf2	            0x7510	                           jne 0x4000e44	       251	ref-filter.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0xdf4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0xdf8	    0xc74010010000	               mov dword [rax + 0x10], 1	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0xdff	      0xe950010000	                           jmp 0x4000f94	       252	ref-filter.c	FUNCTION_9	ELSE_1	IF_2
0xe04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe08	      0xbe00000000	                              mov esi, 0	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe0d	          0x4889c7	                            mov rdi, rax	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe10	      0xe800000000	                          call 0x4000e55	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe15	            0x85c0	                           test eax, eax	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe17	            0x7510	                           jne 0x4000e69	       253	ref-filter.c	FUNCTION_9	ELSE_2	IF_3	CALL_2
0xe19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0xe1d	    0xc74010040000	               mov dword [rax + 0x10], 4	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0xe24	      0xe92b010000	                           jmp 0x4000f94	       254	ref-filter.c	FUNCTION_9	ELSE_2	IF_3
0xe29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe2d	      0xbe00000000	                              mov esi, 0	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe32	          0x4889c7	                            mov rdi, rax	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe35	      0xe800000000	                          call 0x4000e7a	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe3a	            0x85c0	                           test eax, eax	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe3c	            0x7510	                           jne 0x4000e8e	       255	ref-filter.c	FUNCTION_9	ELSE_3	IF_4	CALL_3
0xe3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0xe42	    0xc74010050000	               mov dword [rax + 0x10], 5	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0xe49	      0xe906010000	                           jmp 0x4000f94	       256	ref-filter.c	FUNCTION_9	ELSE_3	IF_4
0xe4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe52	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe56	      0xbe00000000	                              mov esi, 0	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe5b	          0x4889c7	                            mov rdi, rax	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe5e	      0xe8a8f1ffff	                    call sym.skip_prefix	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe63	            0x85c0	                           test eax, eax	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe65	            0x7454	                            je 0x4000efb	       257	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_4
0xe67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0xe6b	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0xe6f	      0xbe00000000	                              mov esi, 0	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0xe74	          0x4889c7	                            mov rdi, rax	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0xe77	      0xe88ff1ffff	                    call sym.skip_prefix	       258	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	CALL_5
0xe7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe80	           0xfb600	                   movzx eax, byte [rax]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe83	            0x84c0	                             test al, al	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe85	            0x7406	                            je 0x4000ecd	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe8b	            0xeb05	                           jmp 0x4000ed2	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe8d	      0xb800000000	                              mov eax, 0	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe92	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe96	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe9a	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xe9e	          0x4889d1	                            mov rcx, rdx	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xea1	          0x4889c2	                            mov rdx, rax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xea4	      0xe8a2fdffff	           call sym.trailers_atom_parser	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xea9	            0x85c0	                           test eax, eax	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xeab	     0xf84a3000000	                            je 0x4000f94	       259	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6	CALL_6
0xeb1	      0xb8ffffffff	                     mov eax, 0xffffffff	       260	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6
0xeb6	      0xe99e000000	                           jmp 0x4000f99	       260	ref-filter.c	FUNCTION_9	ELSE_4	IF_5	IF_6
0xebb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xebf	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xec3	      0xbe00000000	                              mov esi, 0	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xec8	          0x4889c7	                            mov rdi, rax	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xecb	      0xe83bf1ffff	                    call sym.skip_prefix	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xed0	            0x85c0	                           test eax, eax	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xed2	            0x7454	                            je 0x4000f68	       261	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_7
0xed4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	ref-filter.c	FUNCTION_9	ELSE_5	IF_7
0xed8	    0xc74010030000	               mov dword [rax + 0x10], 3	       262	ref-filter.c	FUNCTION_9	ELSE_5	IF_7
0xedf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xee3	        0x488d5028	                   lea rdx, [rax + 0x28]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xee7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xeeb	      0xbe0a000000	                            mov esi, 0xa	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xef0	          0x4889c7	                            mov rdi, rax	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xef3	      0xe8fff1ffff	                     call sym.strtoul_ui	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xef8	            0x85c0	                           test eax, eax	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xefa	            0x7458	                            je 0x4000f94	       263	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	IF_8	CALL_8
0xefc	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf00	      0xbf00000000	                              mov edi, 0	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf05	      0xe853f5ffff	                               call sym.	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf0a	          0x4889c2	                            mov rdx, rax	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf11	          0x4889d9	                            mov rcx, rbx	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf14	      0xbeffffffff	                     mov esi, 0xffffffff	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf19	          0x4889c7	                            mov rdi, rax	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf1c	      0xb800000000	                              mov eax, 0	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf21	      0xe8eef6ffff	                call sym.strbuf_addf_ret	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf26	            0xeb31	                           jmp 0x4000f99	       264	ref-filter.c	FUNCTION_9	ELSE_5	IF_7	CALL_10
0xf28	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf2c	      0xbf00000000	                              mov edi, 0	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf31	      0xe827f5ffff	                               call sym.	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf36	          0x4889c2	                            mov rdx, rax	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf39	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf3d	          0x4889d9	                            mov rcx, rbx	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf40	      0xbeffffffff	                     mov esi, 0xffffffff	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf45	          0x4889c7	                            mov rdi, rax	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf48	      0xb800000000	                              mov eax, 0	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf4d	      0xe8c2f6ffff	                call sym.strbuf_addf_ret	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf52	            0xeb05	                           jmp 0x4000f99	       266	ref-filter.c	FUNCTION_9	CALL_12
0xf54	      0xb800000000	                              mov eax, 0	       267	ref-filter.c	FUNCTION_9
0xf59	        0x4883c428	                           add rsp, 0x28	       268	ref-filter.c	FUNCTION_9
0xf5d	              0x5b	                                 pop rbx	       268	ref-filter.c	FUNCTION_9
0xf5e	              0x5d	                                 pop rbp	       268	ref-filter.c	FUNCTION_9
0xf5f	              0xc3	                                     ret	       268	ref-filter.c	FUNCTION_9
find_next	SWITCH,0:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,1:functions,0:IF,3	29
0x2204	              0x55	                                push rbp	       746	ref-filter.c	FUNCTION_29
0x2205	          0x4889e5	                            mov rbp, rsp	       746	ref-filter.c	FUNCTION_29
0x2208	        0x48897df8	                mov qword [rbp - 8], rdi	       746	ref-filter.c	FUNCTION_29
0x220c	            0xeb39	                           jmp 0x4002287	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x220e	        0x488b45f8	                mov rax, qword [rbp - 8]	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x2212	           0xfb600	                   movzx eax, byte [rax]	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x2215	            0x3c25	                            cmp al, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x2217	            0x7529	                           jne 0x4002282	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x2219	        0x488b45f8	                mov rax, qword [rbp - 8]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x221d	        0x4883c001	                              add rax, 1	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x2221	           0xfb600	                   movzx eax, byte [rax]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x2224	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x2226	            0x7506	                           jne 0x400226e	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x2228	        0x488b45f8	                mov rax, qword [rbp - 8]	       754	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x222c	            0xeb29	                           jmp 0x4002297	       754	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x222e	        0x488b45f8	                mov rax, qword [rbp - 8]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x2232	        0x4883c001	                              add rax, 1	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x2236	           0xfb600	                   movzx eax, byte [rax]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x2239	            0x3c25	                            cmp al, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x223b	            0x7505	                           jne 0x4002282	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x223d	      0x488345f801	                  add qword [rbp - 8], 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x2242	      0x488345f801	                  add qword [rbp - 8], 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x2247	        0x488b45f8	                mov rax, qword [rbp - 8]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x224b	           0xfb600	                   movzx eax, byte [rax]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x224e	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x2250	            0x75bc	                           jne 0x400224e	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x2252	      0xb800000000	                              mov eax, 0	       761	ref-filter.c	FUNCTION_29
0x2257	              0x5d	                                 pop rbp	       762	ref-filter.c	FUNCTION_29
0x2258	              0xc3	                                     ret	       762	ref-filter.c	FUNCTION_29
ref_array_push	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	84
0x56e0	              0x55	                                push rbp	      1929	ref-filter.c	FUNCTION_71
0x56e1	          0x4889e5	                            mov rbp, rsp	      1929	ref-filter.c	FUNCTION_71
0x56e4	        0x4883ec30	                           sub rsp, 0x30	      1929	ref-filter.c	FUNCTION_71
0x56e8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1929	ref-filter.c	FUNCTION_71
0x56ec	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1929	ref-filter.c	FUNCTION_71
0x56f0	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1929	ref-filter.c	FUNCTION_71
0x56f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x56f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x56fc	          0x4889d6	                            mov rsi, rdx	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x56ff	          0x4889c7	                            mov rdi, rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x5702	      0xe856ffffff	             call sym.new_ref_array_item	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x5707	        0x488945f8	                mov qword [rbp - 8], rax	      1930	ref-filter.c	FUNCTION_71	CALL_1
0x570b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x570f	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5711	          0x8d5001	                      lea edx, [rax + 1]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5714	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5718	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x571b	            0x39c2	                            cmp edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x571d	     0xf8e93000000	                           jle 0x40057f6	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5723	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5727	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x572a	          0x8d5010	                   lea edx, [rax + 0x10]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x572d	            0x89d0	                            mov eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x572f	             0x1c0	                            add eax, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5731	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5733	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5735	          0xc1ea1f	                           shr edx, 0x1f	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5738	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x573a	            0xd1f8	                              sar eax, 1	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x573c	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x573e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5742	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5744	          0x83c001	                              add eax, 1	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5747	            0x39c2	                            cmp edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5749	            0x7d12	                           jge 0x400579d	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x574b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x574f	            0x8b00	                    mov eax, dword [rax]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5751	          0x8d5001	                      lea edx, [rax + 1]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5754	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5758	          0x895004	                mov dword [rax + 4], edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x575b	            0xeb22	                           jmp 0x40057bf	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x575d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5761	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5764	          0x8d5010	                   lea edx, [rax + 0x10]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5767	            0x89d0	                            mov eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5769	             0x1c0	                            add eax, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x576b	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x576d	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x576f	          0xc1ea1f	                           shr edx, 0x1f	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5772	             0x1d0	                            add eax, edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5774	            0xd1f8	                              sar eax, 1	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5776	            0x89c2	                            mov edx, eax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5778	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x577c	          0x895004	                mov dword [rax + 4], edx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x577f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5783	          0x8b4004	                mov eax, dword [rax + 4]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5786	            0x4898	                                    cdqe	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5788	          0x4889c6	                            mov rsi, rax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x578b	      0xbf08000000	                              mov edi, 8	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5790	      0xe810a9ffff	                        call sym.st_mult	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5795	          0x4889c2	                            mov rdx, rax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x5798	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x579c	        0x488b4008	                mov rax, qword [rax + 8]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57a0	          0x4889d6	                            mov rsi, rdx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57a3	          0x4889c7	                            mov rdi, rax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57a6	      0xe800000000	                          call 0x40057eb	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57ab	          0x4889c2	                            mov rdx, rax	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57b2	        0x48895008	                mov qword [rax + 8], rdx	      1932	ref-filter.c	FUNCTION_71	CALL_2
0x57b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x57ba	        0x488b7008	                mov rsi, qword [rax + 8]	      1933	ref-filter.c	FUNCTION_71
0x57be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x57c2	            0x8b00	                    mov eax, dword [rax]	      1933	ref-filter.c	FUNCTION_71
0x57c4	          0x8d4801	                      lea ecx, [rax + 1]	      1933	ref-filter.c	FUNCTION_71
0x57c7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1933	ref-filter.c	FUNCTION_71
0x57cb	            0x890a	                    mov dword [rdx], ecx	      1933	ref-filter.c	FUNCTION_71
0x57cd	            0x4898	                                    cdqe	      1933	ref-filter.c	FUNCTION_71
0x57cf	        0x48c1e003	                              shl rax, 3	      1933	ref-filter.c	FUNCTION_71
0x57d3	        0x488d1406	                    lea rdx, [rsi + rax]	      1933	ref-filter.c	FUNCTION_71
0x57d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1933	ref-filter.c	FUNCTION_71
0x57db	          0x488902	                    mov qword [rdx], rax	      1933	ref-filter.c	FUNCTION_71
0x57de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1935	ref-filter.c	FUNCTION_71
0x57e2	              0xc9	                                   leave	      1936	ref-filter.c	FUNCTION_71
0x57e3	              0xc3	                                     ret	      1936	ref-filter.c	FUNCTION_71
find_subpos	SWITCH,0:DO,0:FOR,0:WHILE,4:CALL,6:ELSE,0:functions,0:IF,3	137
0x31bb	              0x55	                                push rbp	      1071	ref-filter.c	FUNCTION_43
0x31bc	          0x4889e5	                            mov rbp, rsp	      1071	ref-filter.c	FUNCTION_43
0x31bf	        0x4883ec40	                           sub rsp, 0x40	      1071	ref-filter.c	FUNCTION_43
0x31c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1071	ref-filter.c	FUNCTION_43
0x31c7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1071	ref-filter.c	FUNCTION_43
0x31cb	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1071	ref-filter.c	FUNCTION_43
0x31cf	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1071	ref-filter.c	FUNCTION_43
0x31d3	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      1071	ref-filter.c	FUNCTION_43
0x31d7	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      1071	ref-filter.c	FUNCTION_43
0x31db	            0xeb2d	                           jmp 0x400324a	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x31dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1075	ref-filter.c	FUNCTION_43	WHILE_1	CALL_1
0x31e1	      0xbe0a000000	                            mov esi, 0xa	      1075	ref-filter.c	FUNCTION_43	WHILE_1	CALL_1
0x31e6	          0x4889c7	                            mov rdi, rax	      1075	ref-filter.c	FUNCTION_43	WHILE_1	CALL_1
0x31e9	      0xe800000000	                          call 0x400322e	      1075	ref-filter.c	FUNCTION_43	WHILE_1	CALL_1
0x31ee	        0x488945f8	                mov qword [rbp - 8], rax	      1075	ref-filter.c	FUNCTION_43	WHILE_1	CALL_1
0x31f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x31f6	           0xfb600	                   movzx eax, byte [rax]	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x31f9	            0x84c0	                             test al, al	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x31fb	            0x7405	                            je 0x4003242	      1076	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x31fd	      0x488345f801	                  add qword [rbp - 8], 1	      1077	ref-filter.c	FUNCTION_43	WHILE_1	IF_1
0x3202	        0x488b45f8	                mov rax, qword [rbp - 8]	      1078	ref-filter.c	FUNCTION_43	WHILE_1
0x3206	        0x488945e8	             mov qword [rbp - 0x18], rax	      1078	ref-filter.c	FUNCTION_43	WHILE_1
0x320a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x320e	           0xfb600	                   movzx eax, byte [rax]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x3211	            0x84c0	                             test al, al	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x3213	            0x7412	                            je 0x4003267	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x3215	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x3219	           0xfb600	                   movzx eax, byte [rax]	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x321c	            0x3c0a	                             cmp al, 0xa	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x321e	            0x75bd	                           jne 0x400321d	      1074	ref-filter.c	FUNCTION_43	WHILE_1
0x3220	            0xeb05	                           jmp 0x4003267	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x3222	      0x488345e801	               add qword [rbp - 0x18], 1	      1082	ref-filter.c	FUNCTION_43	WHILE_2
0x3227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x322b	           0xfb600	                   movzx eax, byte [rax]	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x322e	            0x3c0a	                             cmp al, 0xa	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x3230	            0x74f0	                            je 0x4003262	      1081	ref-filter.c	FUNCTION_43	WHILE_2
0x3232	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3236	          0x4889c7	                            mov rdi, rax	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3239	      0xe800000000	                          call 0x400327e	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x323e	          0x4889c2	                            mov rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3245	          0x4889d6	                            mov rsi, rdx	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3248	          0x4889c7	                            mov rdi, rax	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x324b	      0xe800000000	                          call 0x4003290	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3250	          0x4889c2	                            mov rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3257	          0x4801c2	                            add rdx, rax	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x325a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x325e	          0x488910	                    mov qword [rax], rdx	      1085	ref-filter.c	FUNCTION_43	CALL_3
0x3261	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x3265	          0x488b00	                    mov rax, qword [rax]	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x3268	          0x4889c7	                            mov rdi, rax	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x326b	      0xe800000000	                          call 0x40032b0	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x3270	          0x4889c2	                            mov rdx, rax	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x3273	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x3277	          0x488910	                    mov qword [rax], rdx	      1086	ref-filter.c	FUNCTION_43	CALL_4
0x327a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1089	ref-filter.c	FUNCTION_43
0x327e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1089	ref-filter.c	FUNCTION_43
0x3282	          0x488910	                    mov qword [rax], rdx	      1089	ref-filter.c	FUNCTION_43
0x3285	            0xeb2d	                           jmp 0x40032f4	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x3287	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1092	ref-filter.c	FUNCTION_43	WHILE_3	CALL_5
0x328b	      0xbe0a000000	                            mov esi, 0xa	      1092	ref-filter.c	FUNCTION_43	WHILE_3	CALL_5
0x3290	          0x4889c7	                            mov rdi, rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3	CALL_5
0x3293	      0xe800000000	                          call 0x40032d8	      1092	ref-filter.c	FUNCTION_43	WHILE_3	CALL_5
0x3298	        0x488945f8	                mov qword [rbp - 8], rax	      1092	ref-filter.c	FUNCTION_43	WHILE_3	CALL_5
0x329c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x32a0	           0xfb600	                   movzx eax, byte [rax]	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x32a3	            0x84c0	                             test al, al	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x32a5	            0x7405	                            je 0x40032ec	      1093	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x32a7	      0x488345f801	                  add qword [rbp - 8], 1	      1094	ref-filter.c	FUNCTION_43	WHILE_3	IF_2
0x32ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1095	ref-filter.c	FUNCTION_43	WHILE_3
0x32b0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1095	ref-filter.c	FUNCTION_43	WHILE_3
0x32b4	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32b8	          0x488b00	                    mov rax, qword [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32bb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32bf	            0x7616	                           jbe 0x4003317	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32c5	           0xfb600	                   movzx eax, byte [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32c8	            0x84c0	                             test al, al	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32ca	            0x740b	                            je 0x4003317	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32d0	           0xfb600	                   movzx eax, byte [rax]	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32d3	            0x3c0a	                             cmp al, 0xa	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32d5	            0x75b0	                           jne 0x40032c7	      1091	ref-filter.c	FUNCTION_43	WHILE_3
0x32d7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1097	ref-filter.c	FUNCTION_43
0x32db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1097	ref-filter.c	FUNCTION_43
0x32df	          0x488b00	                    mov rax, qword [rax]	      1097	ref-filter.c	FUNCTION_43
0x32e2	          0x4829c2	                            sub rdx, rax	      1097	ref-filter.c	FUNCTION_43
0x32e5	          0x4889d0	                            mov rax, rdx	      1097	ref-filter.c	FUNCTION_43
0x32e8	          0x4889c2	                            mov rdx, rax	      1097	ref-filter.c	FUNCTION_43
0x32eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1097	ref-filter.c	FUNCTION_43
0x32ef	          0x488910	                    mov qword [rax], rdx	      1097	ref-filter.c	FUNCTION_43
0x32f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x32f6	          0x488b00	                    mov rax, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x32f9	          0x4885c0	                           test rax, rax	      1099	ref-filter.c	FUNCTION_43	IF_3
0x32fc	            0x7435	                            je 0x4003373	      1099	ref-filter.c	FUNCTION_43	IF_3
0x32fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3302	          0x488b10	                    mov rdx, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3305	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3309	          0x488b00	                    mov rax, qword [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x330c	        0x4883e801	                              sub rax, 1	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3310	          0x4801d0	                            add rax, rdx	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3313	           0xfb600	                   movzx eax, byte [rax]	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3316	            0x3c0a	                             cmp al, 0xa	      1099	ref-filter.c	FUNCTION_43	IF_3
0x3318	            0x7519	                           jne 0x4003373	      1099	ref-filter.c	FUNCTION_43	IF_3
0x331a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x331e	          0x488b00	                    mov rax, qword [rax]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x3321	        0x488d50ff	                      lea rdx, [rax - 1]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x3325	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1100	ref-filter.c	FUNCTION_43	IF_3
0x3329	          0x488910	                    mov qword [rax], rdx	      1100	ref-filter.c	FUNCTION_43	IF_3
0x332c	            0xeb05	                           jmp 0x4003373	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x332e	      0x488345e801	               add qword [rbp - 0x18], 1	      1104	ref-filter.c	FUNCTION_43	WHILE_4
0x3333	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x3337	           0xfb600	                   movzx eax, byte [rax]	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x333a	            0x3c0a	                             cmp al, 0xa	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x333c	            0x74f0	                            je 0x400336e	      1103	ref-filter.c	FUNCTION_43	WHILE_4
0x333e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1105	ref-filter.c	FUNCTION_43
0x3342	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1105	ref-filter.c	FUNCTION_43
0x3346	          0x488910	                    mov qword [rax], rdx	      1105	ref-filter.c	FUNCTION_43
0x3349	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x334d	          0x4889c7	                            mov rdi, rax	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x3350	      0xe800000000	                          call 0x4003395	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x3355	          0x4889c2	                            mov rdx, rax	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x3358	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x335c	          0x488910	                    mov qword [rax], rdx	      1106	ref-filter.c	FUNCTION_43	CALL_6
0x335f	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1107	ref-filter.c	FUNCTION_43
0x3363	          0x488b00	                    mov rax, qword [rax]	      1107	ref-filter.c	FUNCTION_43
0x3366	          0x4889c2	                            mov rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x3369	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1107	ref-filter.c	FUNCTION_43
0x336d	          0x4829c2	                            sub rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x3370	          0x4889d0	                            mov rax, rdx	      1107	ref-filter.c	FUNCTION_43
0x3373	          0x4889c2	                            mov rdx, rax	      1107	ref-filter.c	FUNCTION_43
0x3376	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1107	ref-filter.c	FUNCTION_43
0x337a	          0x488910	                    mov qword [rax], rdx	      1107	ref-filter.c	FUNCTION_43
0x337d	              0x90	                                     nop	      1108	ref-filter.c	FUNCTION_43
0x337e	              0xc9	                                   leave	      1108	ref-filter.c	FUNCTION_43
0x337f	              0xc3	                                     ret	      1108	ref-filter.c	FUNCTION_43
st_mult	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	22
0xa5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_116
0xa6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_116
0xa9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_116
0xad	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_116
0xb1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_116
0xb5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xba	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xbc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xc3	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xc8	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xcc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xd0	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_116	IF_1	CALL_1
0xd2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xda	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xdd	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xe2	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xe7	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_116	IF_1	CALL_2
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_116
0xf0	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_116
0xf5	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_116
0xf6	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_116
copy_email	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,2	35
0x2bda	              0x55	                                push rbp	       946	ref-filter.c	FUNCTION_39
0x2bdb	          0x4889e5	                            mov rbp, rsp	       946	ref-filter.c	FUNCTION_39
0x2bde	        0x4883ec20	                           sub rsp, 0x20	       946	ref-filter.c	FUNCTION_39
0x2be2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       946	ref-filter.c	FUNCTION_39
0x2be6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       947	ref-filter.c	FUNCTION_39	CALL_1
0x2bea	      0xbe3c000000	                           mov esi, 0x3c	       947	ref-filter.c	FUNCTION_39	CALL_1
0x2bef	          0x4889c7	                            mov rdi, rax	       947	ref-filter.c	FUNCTION_39	CALL_1
0x2bf2	      0xe800000000	                          call 0x4002c37	       947	ref-filter.c	FUNCTION_39	CALL_1
0x2bf7	        0x488945f0	             mov qword [rbp - 0x10], rax	       947	ref-filter.c	FUNCTION_39	CALL_1
0x2bfb	      0x48837df000	               cmp qword [rbp - 0x10], 0	       949	ref-filter.c	FUNCTION_39	IF_1
0x2c00	            0x7507	                           jne 0x4002c49	       949	ref-filter.c	FUNCTION_39	IF_1
0x2c02	      0xb800000000	                              mov eax, 0	       950	ref-filter.c	FUNCTION_39	IF_1
0x2c07	            0xeb4a	                           jmp 0x4002c93	       950	ref-filter.c	FUNCTION_39	IF_1
0x2c09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       951	ref-filter.c	FUNCTION_39	CALL_2
0x2c0d	      0xbe3e000000	                           mov esi, 0x3e	       951	ref-filter.c	FUNCTION_39	CALL_2
0x2c12	          0x4889c7	                            mov rdi, rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x2c15	      0xe800000000	                          call 0x4002c5a	       951	ref-filter.c	FUNCTION_39	CALL_2
0x2c1a	        0x488945f8	                mov qword [rbp - 8], rax	       951	ref-filter.c	FUNCTION_39	CALL_2
0x2c1e	      0x48837df800	                  cmp qword [rbp - 8], 0	       952	ref-filter.c	FUNCTION_39	IF_2
0x2c23	            0x7507	                           jne 0x4002c6c	       952	ref-filter.c	FUNCTION_39	IF_2
0x2c25	      0xb800000000	                              mov eax, 0	       953	ref-filter.c	FUNCTION_39	IF_2
0x2c2a	            0xeb27	                           jmp 0x4002c93	       953	ref-filter.c	FUNCTION_39	IF_2
0x2c2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c30	        0x4883c001	                              add rax, 1	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c34	          0x4889c2	                            mov rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c3b	          0x4829c2	                            sub rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c3e	          0x4889d0	                            mov rax, rdx	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c41	          0x4889c2	                            mov rdx, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c48	          0x4889d6	                            mov rsi, rdx	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c4b	          0x4889c7	                            mov rdi, rax	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c4e	      0xe800000000	                          call 0x4002c93	       954	ref-filter.c	FUNCTION_39	CALL_3
0x2c53	              0xc9	                                   leave	       955	ref-filter.c	FUNCTION_39
0x2c54	              0xc3	                                     ret	       955	ref-filter.c	FUNCTION_39
grab_tag_values	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,6:ELSE,2:functions,0:IF,5	103
0x26e9	              0x55	                                push rbp	       857	ref-filter.c	FUNCTION_34
0x26ea	          0x4889e5	                            mov rbp, rsp	       857	ref-filter.c	FUNCTION_34
0x26ed	        0x4883ec50	                           sub rsp, 0x50	       857	ref-filter.c	FUNCTION_34
0x26f1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       857	ref-filter.c	FUNCTION_34
0x26f5	          0x8975d4	             mov dword [rbp - 0x2c], esi	       857	ref-filter.c	FUNCTION_34
0x26f8	        0x488955c8	             mov qword [rbp - 0x38], rdx	       857	ref-filter.c	FUNCTION_34
0x26fc	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       857	ref-filter.c	FUNCTION_34
0x2700	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       857	ref-filter.c	FUNCTION_34
0x2704	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       859	ref-filter.c	FUNCTION_34
0x2708	        0x488945f0	             mov qword [rbp - 0x10], rax	       859	ref-filter.c	FUNCTION_34
0x270c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       861	ref-filter.c	FUNCTION_34	FOR_1
0x2713	      0xe923010000	                           jmp 0x400287b	       861	ref-filter.c	FUNCTION_34	FOR_1
0x2718	    0x488b0d000000	            mov rcx, qword [0x0400275f] 	       862	ref-filter.c	FUNCTION_34	FOR_1
0x271f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2722	          0x4863d0	                         movsxd rdx, eax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2725	          0x4889d0	                            mov rax, rdx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2728	          0x4801c0	                            add rax, rax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x272b	          0x4801d0	                            add rax, rdx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x272e	        0x48c1e005	                              shl rax, 5	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2732	          0x4801c8	                            add rax, rcx	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2735	          0x488b00	                    mov rax, qword [rax]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x2738	        0x488945e8	             mov qword [rbp - 0x18], rax	       862	ref-filter.c	FUNCTION_34	FOR_1
0x273c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       863	ref-filter.c	FUNCTION_34	FOR_1
0x273f	            0x4898	                                    cdqe	       863	ref-filter.c	FUNCTION_34	FOR_1
0x2741	        0x48c1e005	                              shl rax, 5	       863	ref-filter.c	FUNCTION_34	FOR_1
0x2745	          0x4889c2	                            mov rdx, rax	       863	ref-filter.c	FUNCTION_34	FOR_1
0x2748	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       863	ref-filter.c	FUNCTION_34	FOR_1
0x274c	          0x4801d0	                            add rax, rdx	       863	ref-filter.c	FUNCTION_34	FOR_1
0x274f	        0x488945f8	                mov qword [rbp - 8], rax	       863	ref-filter.c	FUNCTION_34	FOR_1
0x2753	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2757	           0xf95c2	                                setne dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x275a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x275e	           0xfb600	                   movzx eax, byte [rax]	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2761	            0x3c2a	                            cmp al, 0x2a	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2763	           0xf94c0	                                 sete al	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2766	            0x31d0	                            xor eax, edx	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2768	            0x84c0	                             test al, al	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x276a	     0xf85c6000000	                           jne 0x4002876	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2770	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       866	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x2774	            0x7405	                            je 0x40027bb	       866	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x2776	      0x488345e801	               add qword [rbp - 0x18], 1	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x277b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x277f	      0xbe00000000	                              mov esi, 0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x2784	          0x4889c7	                            mov rdi, rax	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x2787	      0xe800000000	                          call 0x40027cc	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x278c	            0x85c0	                           test eax, eax	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x278e	            0x7514	                           jne 0x40027e4	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x2790	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x2794	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x2798	        0x488b45f8	                mov rax, qword [rbp - 8]	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x279c	          0x488910	                    mov qword [rax], rdx	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x279f	      0xe993000000	                           jmp 0x4002877	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x27a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27a8	      0xbe00000000	                              mov esi, 0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27ad	          0x4889c7	                            mov rdi, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27b0	      0xe800000000	                          call 0x40027f5	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27b5	            0x85c0	                           test eax, eax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27b7	            0x7533	                           jne 0x400282c	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27bd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27c1	          0x4885c0	                           test rax, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27c4	            0x7426	                            je 0x400282c	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x27c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27ca	        0x488b4018	            mov rax, qword [rax + 0x18] 	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27ce	           0xfb600	                   movzx eax, byte [rax]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27d1	            0xd0e8	                               shr al, 1	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27d3	          0x83e007	                              and eax, 7	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27d6	           0xfb6c0	                           movzx eax, al	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27d9	            0x89c7	                            mov edi, eax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27db	      0xe800000000	                          call 0x4002820	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27e0	          0x4889c2	                            mov rdx, rax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27e7	          0x488910	                    mov qword [rax], rdx	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27ea	            0xeb4b	                           jmp 0x4002877	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x27ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x27f0	      0xbe00000000	                              mov esi, 0	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x27f5	          0x4889c7	                            mov rdi, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x27f8	      0xe800000000	                          call 0x400283d	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x27fd	            0x85c0	                           test eax, eax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x27ff	            0x7536	                           jne 0x4002877	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x2801	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x2805	        0x488b4018	            mov rax, qword [rax + 0x18] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x2809	          0x4885c0	                           test rax, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x280c	            0x7429	                            je 0x4002877	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x280e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2812	        0x488b4018	            mov rax, qword [rax + 0x18] 	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2816	        0x4883c004	                              add rax, 4	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x281a	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x281d	      0xe800000000	                          call 0x4002862	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2822	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2825	      0xe800000000	                          call 0x400286a	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x282a	          0x4889c2	                            mov rdx, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x282d	        0x488b45f8	                mov rax, qword [rbp - 8]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2831	          0x488910	                    mov qword [rax], rdx	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2834	            0xeb01	                           jmp 0x4002877	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x2836	              0x90	                                     nop	       865	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x2837	        0x8345e401	               add dword [rbp - 0x1c], 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x283b	    0x8b0500000000	            mov eax, dword [0x04002881] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x2841	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x2844	     0xf8ccefeffff	                            jl 0x4002758	       861	ref-filter.c	FUNCTION_34	FOR_1
0x284a	              0x90	                                     nop	       875	ref-filter.c	FUNCTION_34
0x284b	              0xc9	                                   leave	       875	ref-filter.c	FUNCTION_34
0x284c	              0xc3	                                     ret	       875	ref-filter.c	FUNCTION_34
fill_missing_values	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,0:ELSE,0:functions,0:IF,1	25
0x37f1	              0x55	                                push rbp	      1192	ref-filter.c	FUNCTION_46
0x37f2	          0x4889e5	                            mov rbp, rsp	      1192	ref-filter.c	FUNCTION_46
0x37f5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1192	ref-filter.c	FUNCTION_46
0x37f9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x3800	            0xeb32	                           jmp 0x4003874	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x3802	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x3805	            0x4898	                                    cdqe	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x3807	        0x48c1e005	                              shl rax, 5	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x380b	          0x4889c2	                            mov rdx, rax	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x380e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x3812	          0x4801d0	                            add rax, rdx	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x3815	        0x488945f8	                mov qword [rbp - 8], rax	      1195	ref-filter.c	FUNCTION_46	FOR_1
0x3819	        0x488b45f8	                mov rax, qword [rbp - 8]	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x381d	          0x488b00	                    mov rax, qword [rax]	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x3820	          0x4885c0	                           test rax, rax	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x3823	            0x750b	                           jne 0x4003870	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x3825	        0x488b45f8	                mov rax, qword [rbp - 8]	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x3829	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x3830	        0x8345f401	                add dword [rbp - 0xc], 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x3834	    0x8b0500000000	            mov eax, dword [0x0400387a] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x383a	          0x3945f4	              cmp dword [rbp - 0xc], eax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x383d	            0x7cc3	                            jl 0x4003842	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x383f	              0x90	                                     nop	      1199	ref-filter.c	FUNCTION_46
0x3840	              0x5d	                                 pop rbp	      1199	ref-filter.c	FUNCTION_46
0x3841	              0xc3	                                     ret	      1199	ref-filter.c	FUNCTION_46
get_object	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,9:ELSE,2:functions,0:IF,3	89
0x41cb	              0x55	                                push rbp	      1436	ref-filter.c	FUNCTION_56
0x41cc	          0x4889e5	                            mov rbp, rsp	      1436	ref-filter.c	FUNCTION_56
0x41cf	            0x4154	                                push r12	      1436	ref-filter.c	FUNCTION_56
0x41d1	              0x53	                                push rbx	      1436	ref-filter.c	FUNCTION_56
0x41d2	        0x4883ec50	                           sub rsp, 0x50	      1436	ref-filter.c	FUNCTION_56
0x41d6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1436	ref-filter.c	FUNCTION_56
0x41da	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1436	ref-filter.c	FUNCTION_56
0x41de	          0x8955bc	             mov dword [rbp - 0x44], edx	      1436	ref-filter.c	FUNCTION_56
0x41e1	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1436	ref-filter.c	FUNCTION_56
0x41e5	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1436	ref-filter.c	FUNCTION_56
0x41e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1436	ref-filter.c	FUNCTION_56
0x41f2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1436	ref-filter.c	FUNCTION_56
0x41f6	            0x31c0	                            xor eax, eax	      1436	ref-filter.c	FUNCTION_56
0x41f8	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1438	ref-filter.c	FUNCTION_56
0x41ff	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4203	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4207	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x420b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x420f	          0x4889c7	                            mov rdi, rax	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4212	      0xe8ede1ffff	                        call sym.get_obj	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x4217	        0x488945e0	             mov qword [rbp - 0x20], rax	      1440	ref-filter.c	FUNCTION_56	CALL_1
0x421b	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1441	ref-filter.c	FUNCTION_56	IF_1
0x4220	            0x7545	                           jne 0x40042a7	      1441	ref-filter.c	FUNCTION_56	IF_1
0x4222	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1443	ref-filter.c	FUNCTION_56	CALL_4
0x4226	        0x488d5838	                   lea rbx, [rax + 0x38]	      1443	ref-filter.c	FUNCTION_56	CALL_4
0x422a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x422e	          0x4889c7	                            mov rdi, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4231	      0xe800000000	                          call 0x4004276	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4236	          0x4989c4	                            mov r12, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4239	      0xbf00000000	                              mov edi, 0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x423e	      0xe81ac2ffff	                               call sym.	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4243	          0x4889c2	                            mov rdx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4246	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x424a	          0x4989d8	                             mov r8, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x424d	          0x4c89e1	                            mov rcx, r12	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4250	      0xbeffffffff	                     mov esi, 0xffffffff	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4255	          0x4889c7	                            mov rdi, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4258	      0xb800000000	                              mov eax, 0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x425d	      0xe8b2c3ffff	                call sym.strbuf_addf_ret	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4262	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4265	            0xeb76	                           jmp 0x400431d	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x4267	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x426b	          0x488b00	                    mov rax, qword [rax]	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x426e	          0x4885c0	                           test rax, rax	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x4271	            0x7545	                           jne 0x40042f8	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x4273	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1446	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x4277	        0x488d5838	                   lea rbx, [rax + 0x38]	      1446	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x427b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x427f	          0x4889c7	                            mov rdi, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4282	      0xe800000000	                          call 0x40042c7	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4287	          0x4989c4	                            mov r12, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x428a	      0xbf00000000	                              mov edi, 0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x428f	      0xe8c9c1ffff	                               call sym.	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4294	          0x4889c2	                            mov rdx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4297	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x429b	          0x4989d8	                             mov r8, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x429e	          0x4c89e1	                            mov rcx, r12	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42a1	      0xbeffffffff	                     mov esi, 0xffffffff	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42a6	          0x4889c7	                            mov rdi, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42a9	      0xb800000000	                              mov eax, 0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42ae	      0xe861c3ffff	                call sym.strbuf_addf_ret	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42b3	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42b6	            0xeb25	                           jmp 0x400431d	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x42b8	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42bc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42c0	          0x488b10	                    mov rdx, qword [rax]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42c7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42cb	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42cf	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42d2	          0x4989f8	                             mov r8, rdi	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42d5	          0x4889c7	                            mov rdi, rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42d8	      0xe865f5ffff	                    call sym.grab_values	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x42dd	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1449	ref-filter.c	FUNCTION_56	IF_3
0x42e0	            0x85c0	                           test eax, eax	      1449	ref-filter.c	FUNCTION_56	IF_3
0x42e2	            0x750c	                           jne 0x4004330	      1449	ref-filter.c	FUNCTION_56	IF_3
0x42e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x42e8	          0x4889c7	                            mov rdi, rax	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x42eb	      0xe800000000	                          call 0x4004330	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x42f0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1451	ref-filter.c	FUNCTION_56
0x42f3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1452	ref-filter.c	FUNCTION_56
0x42f7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1452	ref-filter.c	FUNCTION_56
0x4300	            0x7405	                            je 0x4004347	      1452	ref-filter.c	FUNCTION_56
0x4302	      0xe800000000	                          call 0x4004347	      1452	ref-filter.c	FUNCTION_56
0x4307	        0x4883c450	                           add rsp, 0x50	      1452	ref-filter.c	FUNCTION_56
0x430b	              0x5b	                                 pop rbx	      1452	ref-filter.c	FUNCTION_56
0x430c	            0x415c	                                 pop r12	      1452	ref-filter.c	FUNCTION_56
0x430e	              0x5d	                                 pop rbp	      1452	ref-filter.c	FUNCTION_56
0x430f	              0xc3	                                     ret	      1452	ref-filter.c	FUNCTION_56
st_add	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	20
0x61	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_115
0x62	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_115
0x65	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_115
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_115
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_115
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_115	IF_1	CALL_1
0x75	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_115	IF_1	CALL_1
0x78	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_115	IF_1	CALL_1
0x7c	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_115	IF_1	CALL_1
0x7e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x82	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x86	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x89	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x8e	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x93	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_115	IF_1	CALL_2
0x98	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_115
0x9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_115
0xa0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_115
0xa3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_115
0xa4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_115
contains_tag_algo	SWITCH,1:DO,0:FOR,0:WHILE,1:CALL,8:ELSE,1:functions,0:IF,2	108
0x4fe9	              0x55	                                push rbp	      1699	ref-filter.c	FUNCTION_62
0x4fea	          0x4889e5	                            mov rbp, rsp	      1699	ref-filter.c	FUNCTION_62
0x4fed	        0x4883ec60	                           sub rsp, 0x60	      1699	ref-filter.c	FUNCTION_62
0x4ff1	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1699	ref-filter.c	FUNCTION_62
0x4ff5	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1699	ref-filter.c	FUNCTION_62
0x4ff9	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1699	ref-filter.c	FUNCTION_62
0x4ffd	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	ref-filter.c	FUNCTION_62
0x5006	        0x488945f8	                mov qword [rbp - 8], rax	      1699	ref-filter.c	FUNCTION_62
0x500a	            0x31c0	                            xor eax, eax	      1699	ref-filter.c	FUNCTION_62
0x500c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1700	ref-filter.c	FUNCTION_62
0x5013	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1700	ref-filter.c	FUNCTION_62
0x501a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1700	ref-filter.c	FUNCTION_62
0x5022	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x5026	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x502a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x502e	          0x4889ce	                            mov rsi, rcx	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x5031	          0x4889c7	                            mov rdi, rax	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x5034	      0xe82ffeffff	                  call sym.contains_test	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x5039	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1701	ref-filter.c	FUNCTION_62	CALL_1
0x503c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1703	ref-filter.c	FUNCTION_62	IF_1
0x5040	            0x7408	                            je 0x400508a	      1703	ref-filter.c	FUNCTION_62	IF_1
0x5042	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1704	ref-filter.c	FUNCTION_62	IF_1
0x5045	      0xe919010000	                           jmp 0x40051a3	      1704	ref-filter.c	FUNCTION_62	IF_1
0x504a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x504e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x5052	          0x4889d6	                            mov rsi, rdx	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x5055	          0x4889c7	                            mov rdi, rax	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x5058	      0xe883feffff	         call sym.push_to_contains_stack	      1706	ref-filter.c	FUNCTION_62	CALL_2
0x505d	      0xe9d3000000	                           jmp 0x4005175	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x5062	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x5066	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x5069	          0x4863d2	                         movsxd rdx, edx	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x506c	        0x48c1e204	                              shl rdx, 4	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x5070	        0x4883ea10	                           sub rdx, 0x10	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x5074	          0x4801d0	                            add rax, rdx	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x5077	        0x488945c8	             mov qword [rbp - 0x38], rax	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x507b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x507f	          0x488b00	                    mov rax, qword [rax]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x5082	        0x488945d0	             mov qword [rbp - 0x30], rax	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x5086	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x508a	        0x488b4008	                mov rax, qword [rax + 8]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x508e	        0x488945d8	             mov qword [rbp - 0x28], rax	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x5092	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x5097	            0x7524	                           jne 0x40050fd	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x5099	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x509d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x50a1	          0x4889d6	                            mov rsi, rdx	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x50a4	          0x4889c7	                            mov rdi, rax	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x50a7	      0xe813fdffff	              call sym.contains_cache_at	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x50ac	    0xc70001000000	                      mov dword [rax], 1	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x50b2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x50b5	          0x83e801	                              sub eax, 1	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x50b8	          0x8945e0	             mov dword [rbp - 0x20], eax	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x50bb	            0xeb78	                           jmp 0x4005175	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x50bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50c1	          0x488b00	                    mov rax, qword [rax]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50c4	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50c8	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50cc	          0x4889ce	                            mov rsi, rcx	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50cf	          0x4889c7	                            mov rdi, rax	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50d2	      0xe891fdffff	                  call sym.contains_test	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50d7	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50da	            0x7430	                            je 0x400514c	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50dc	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50df	            0x723d	                            jb 0x400515e	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50e1	          0x83f802	                              cmp eax, 2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50e4	            0x7402	                            je 0x4005128	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50e6	            0xeb4d	                           jmp 0x4005175	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x50e8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x50ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x50f0	          0x4889d6	                            mov rsi, rdx	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x50f3	          0x4889c7	                            mov rdi, rax	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x50f6	      0xe8c4fcffff	              call sym.contains_cache_at	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x50fb	    0xc70002000000	                      mov dword [rax], 2	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x5101	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5104	          0x83e801	                              sub eax, 1	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5107	          0x8945e0	             mov dword [rbp - 0x20], eax	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x510a	            0xeb29	                           jmp 0x4005175	      1724	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x510c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5110	        0x488b5008	                mov rdx, qword [rax + 8]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5114	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5118	        0x48895008	                mov qword [rax + 8], rdx	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x511c	            0xeb17	                           jmp 0x4005175	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x511e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x5122	          0x488b00	                    mov rax, qword [rax]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x5125	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x5129	          0x4889d6	                            mov rsi, rdx	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x512c	          0x4889c7	                            mov rdi, rax	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x512f	      0xe8acfdffff	         call sym.push_to_contains_stack	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x5134	              0x90	                                     nop	      1730	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x5135	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x5138	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x513a	     0xf8522ffffff	                           jne 0x40050a2	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x5140	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x5144	          0x4889c7	                            mov rdi, rax	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x5147	      0xe800000000	                          call 0x400518c	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x514c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x5150	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x5154	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x5158	          0x4889ce	                            mov rsi, rcx	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x515b	          0x4889c7	                            mov rdi, rax	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x515e	      0xe805fdffff	                  call sym.contains_test	      1734	ref-filter.c	FUNCTION_62	CALL_8
0x5163	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1735	ref-filter.c	FUNCTION_62
0x5167	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1735	ref-filter.c	FUNCTION_62
0x5170	            0x7405	                            je 0x40051b7	      1735	ref-filter.c	FUNCTION_62
0x5172	      0xe800000000	                          call 0x40051b7	      1735	ref-filter.c	FUNCTION_62
0x5177	              0xc9	                                   leave	      1735	ref-filter.c	FUNCTION_62
0x5178	              0xc3	                                     ret	      1735	ref-filter.c	FUNCTION_62
grab_commit_values	SWITCH,0:DO,0:FOR,2:WHILE,0:CALL,12:ELSE,2:functions,0:IF,6	142
0x284d	              0x55	                                push rbp	       879	ref-filter.c	FUNCTION_35
0x284e	          0x4889e5	                            mov rbp, rsp	       879	ref-filter.c	FUNCTION_35
0x2851	        0x4883c480	             add rsp, 0xffffffffffffff80	       879	ref-filter.c	FUNCTION_35
0x2855	        0x48897da8	             mov qword [rbp - 0x58], rdi	       879	ref-filter.c	FUNCTION_35
0x2859	          0x8975a4	             mov dword [rbp - 0x5c], esi	       879	ref-filter.c	FUNCTION_35
0x285c	        0x48895598	             mov qword [rbp - 0x68], rdx	       879	ref-filter.c	FUNCTION_35
0x2860	        0x48894d90	             mov qword [rbp - 0x70], rcx	       879	ref-filter.c	FUNCTION_35
0x2864	        0x4c894588	              mov qword [rbp - 0x78], r8	       879	ref-filter.c	FUNCTION_35
0x2868	    0x64488b042528	                mov rax, qword fs:[0x28]	       879	ref-filter.c	FUNCTION_35
0x2871	        0x488945f8	                mov qword [rbp - 8], rax	       879	ref-filter.c	FUNCTION_35
0x2875	            0x31c0	                            xor eax, eax	       879	ref-filter.c	FUNCTION_35
0x2877	        0x488b4598	             mov rax, qword [rbp - 0x68]	       881	ref-filter.c	FUNCTION_35
0x287b	        0x488945c8	             mov qword [rbp - 0x38], rax	       881	ref-filter.c	FUNCTION_35
0x287f	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       883	ref-filter.c	FUNCTION_35	FOR_1
0x2886	      0xe9bb010000	                           jmp 0x4002a86	       883	ref-filter.c	FUNCTION_35	FOR_1
0x288b	    0x488b0d000000	            mov rcx, qword [0x040028d2] 	       884	ref-filter.c	FUNCTION_35	FOR_1
0x2892	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x2895	          0x4863d0	                         movsxd rdx, eax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x2898	          0x4889d0	                            mov rax, rdx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x289b	          0x4801c0	                            add rax, rax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x289e	          0x4801d0	                            add rax, rdx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x28a1	        0x48c1e005	                              shl rax, 5	       884	ref-filter.c	FUNCTION_35	FOR_1
0x28a5	          0x4801c8	                            add rax, rcx	       884	ref-filter.c	FUNCTION_35	FOR_1
0x28a8	          0x488b00	                    mov rax, qword [rax]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x28ab	        0x488945b8	             mov qword [rbp - 0x48], rax	       884	ref-filter.c	FUNCTION_35	FOR_1
0x28af	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28b2	            0x4898	                                    cdqe	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28b4	        0x48c1e005	                              shl rax, 5	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28b8	          0x4889c2	                            mov rdx, rax	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28bf	          0x4801d0	                            add rax, rdx	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28c2	        0x488945d0	             mov qword [rbp - 0x30], rax	       885	ref-filter.c	FUNCTION_35	FOR_1
0x28c6	        0x837da400	               cmp dword [rbp - 0x5c], 0	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28ca	           0xf95c2	                                setne dl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28d1	           0xfb600	                   movzx eax, byte [rax]	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28d4	            0x3c2a	                            cmp al, 0x2a	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28d6	           0xf94c0	                                 sete al	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28d9	            0x31d0	                            xor eax, edx	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28db	            0x84c0	                             test al, al	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28dd	     0xf855e010000	                           jne 0x4002a81	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x28e3	        0x837da400	               cmp dword [rbp - 0x5c], 0	       888	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x28e7	            0x7405	                            je 0x400292e	       888	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x28e9	      0x488345b801	               add qword [rbp - 0x48], 1	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x28ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x28f2	      0xbe00000000	                              mov esi, 0	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x28f7	          0x4889c7	                            mov rdi, rax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x28fa	      0xe800000000	                          call 0x400293f	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x28ff	            0x85c0	                           test eax, eax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x2901	            0x752b	                           jne 0x400296e	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x2903	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2907	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x290a	      0xe800000000	                          call 0x400294f	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x290f	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2912	      0xe800000000	                          call 0x4002957	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2917	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x291a	      0xe800000000	                          call 0x400295f	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x291f	          0x4889c2	                            mov rdx, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2922	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2926	          0x488910	                    mov qword [rax], rdx	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x2929	      0xe914010000	                           jmp 0x4002a82	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x292e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x2932	      0xbe00000000	                              mov esi, 0	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x2937	          0x4889c7	                            mov rdi, rax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x293a	      0xe800000000	                          call 0x400297f	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x293f	            0x85c0	                           test eax, eax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x2941	            0x7543	                           jne 0x40029c6	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x2943	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x2947	        0x488b4030	            mov rax, qword [rax + 0x30] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x294b	          0x4889c7	                            mov rdi, rax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x294e	      0xe800000000	                          call 0x4002993	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x2953	            0x89c2	                            mov edx, eax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x2955	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x2959	        0x48895010	             mov qword [rax + 0x10], rdx	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x295d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2961	        0x488b4010	            mov rax, qword [rax + 0x10] 	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2965	          0x4889c6	                            mov rsi, rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2968	      0xbf00000000	                              mov edi, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x296d	      0xb800000000	                              mov eax, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2972	      0xe800000000	                          call 0x40029b7	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2977	          0x4889c2	                            mov rdx, rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x297a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x297e	          0x488910	                    mov qword [rax], rdx	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2981	      0xe9bc000000	                           jmp 0x4002a82	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x2986	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x298a	      0xbe00000000	                              mov esi, 0	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x298f	          0x4889c7	                            mov rdi, rax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x2992	      0xe800000000	                          call 0x40029d7	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x2997	            0x85c0	                           test eax, eax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x2999	     0xf85a3000000	                           jne 0x4002a82	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x299f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x29a7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x29af	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x29b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29bb	        0x488b4030	            mov rax, qword [rax + 0x30] 	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29bf	        0x488945c0	             mov qword [rbp - 0x40], rax	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29c3	            0xeb58	                           jmp 0x4002a5d	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29c5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29c9	          0x488b00	                    mov rax, qword [rax]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29cc	        0x488945d8	             mov qword [rbp - 0x28], rax	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x29d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x29d4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x29d8	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x29dc	            0x7411	                            je 0x4002a2f	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x29de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x29e2	      0xbe20000000	                           mov esi, 0x20	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x29e7	          0x4889c7	                            mov rdi, rax	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x29ea	      0xe8cbd9ffff	                   call sym.strbuf_addch	       903	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_9
0x29ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x29f3	        0x4883c004	                              add rax, 4	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x29f7	          0x4889c7	                            mov rdi, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x29fa	      0xe800000000	                          call 0x4002a3f	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x29ff	          0x4889c2	                            mov rdx, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x2a02	        0x488d45e0	                   lea rax, [rbp - 0x20]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x2a06	          0x4889d6	                            mov rsi, rdx	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x2a09	          0x4889c7	                            mov rdi, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x2a0c	      0xe817daffff	                  call sym.strbuf_addstr	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x2a11	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x2a15	        0x488b4008	                mov rax, qword [rax + 8]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x2a19	        0x488945c0	             mov qword [rbp - 0x40], rax	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x2a1d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x2a22	            0x75a1	                           jne 0x4002a05	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x2a24	        0x488d45e0	                   lea rax, [rbp - 0x20]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a28	      0xbe00000000	                              mov esi, 0	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a2d	          0x4889c7	                            mov rdi, rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a30	      0xe800000000	                          call 0x4002a75	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a35	          0x4889c2	                            mov rdx, rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a38	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a3c	          0x488910	                    mov qword [rax], rdx	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a3f	            0xeb01	                           jmp 0x4002a82	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x2a41	              0x90	                                     nop	       887	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x2a42	        0x8345b401	               add dword [rbp - 0x4c], 1	       883	ref-filter.c	FUNCTION_35	FOR_1
0x2a46	    0x8b0500000000	            mov eax, dword [0x04002a8c] 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x2a4c	          0x3945b4	            cmp dword [rbp - 0x4c], eax 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x2a4f	     0xf8c36feffff	                            jl 0x40028cb	       883	ref-filter.c	FUNCTION_35	FOR_1
0x2a55	              0x90	                                     nop	       909	ref-filter.c	FUNCTION_35
0x2a56	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	ref-filter.c	FUNCTION_35
0x2a5a	    0x644833042528	                xor rax, qword fs:[0x28]	       909	ref-filter.c	FUNCTION_35
0x2a63	            0x7405	                            je 0x4002aaa	       909	ref-filter.c	FUNCTION_35
0x2a65	      0xe800000000	                          call 0x4002aaa	       909	ref-filter.c	FUNCTION_35
0x2a6a	              0xc9	                                   leave	       909	ref-filter.c	FUNCTION_35
0x2a6b	              0xc3	                                     ret	       909	ref-filter.c	FUNCTION_35
if_then_else_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,9:ELSE,2:functions,0:IF,4	84
0x1c18	              0x55	                                push rbp	       602	ref-filter.c	FUNCTION_23
0x1c19	          0x4889e5	                            mov rbp, rsp	       602	ref-filter.c	FUNCTION_23
0x1c1c	        0x4883ec30	                           sub rsp, 0x30	       602	ref-filter.c	FUNCTION_23
0x1c20	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       602	ref-filter.c	FUNCTION_23
0x1c24	    0x64488b042528	                mov rax, qword fs:[0x28]	       602	ref-filter.c	FUNCTION_23
0x1c2d	        0x488945f8	                mov qword [rbp - 8], rax	       602	ref-filter.c	FUNCTION_23
0x1c31	            0x31c0	                            xor eax, eax	       602	ref-filter.c	FUNCTION_23
0x1c33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       603	ref-filter.c	FUNCTION_23
0x1c37	          0x488b00	                    mov rax, qword [rax]	       603	ref-filter.c	FUNCTION_23
0x1c3a	        0x488945e0	             mov qword [rbp - 0x20], rax	       603	ref-filter.c	FUNCTION_23
0x1c3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	ref-filter.c	FUNCTION_23
0x1c42	          0x488b00	                    mov rax, qword [rax]	       604	ref-filter.c	FUNCTION_23
0x1c45	        0x488945e8	             mov qword [rbp - 0x18], rax	       604	ref-filter.c	FUNCTION_23
0x1c49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       605	ref-filter.c	FUNCTION_23
0x1c4d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       605	ref-filter.c	FUNCTION_23
0x1c51	        0x488945f0	             mov qword [rbp - 0x10], rax	       605	ref-filter.c	FUNCTION_23
0x1c55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       607	ref-filter.c	FUNCTION_23	IF_1
0x1c59	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       607	ref-filter.c	FUNCTION_23	IF_1
0x1c5d	          0x83e001	                              and eax, 1	       607	ref-filter.c	FUNCTION_23	IF_1
0x1c60	            0x84c0	                             test al, al	       607	ref-filter.c	FUNCTION_23	IF_1
0x1c62	            0x7517	                           jne 0x4001cbb	       607	ref-filter.c	FUNCTION_23	IF_1
0x1c64	      0xbf00000000	                              mov edi, 0	       608	ref-filter.c	FUNCTION_23	CALL_2
0x1c69	      0xe8efe7ffff	                               call sym.	       608	ref-filter.c	FUNCTION_23	CALL_2
0x1c6e	          0x4889c7	                            mov rdi, rax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x1c71	      0xb800000000	                              mov eax, 0	       608	ref-filter.c	FUNCTION_23	CALL_2
0x1c76	      0xe800000000	                          call 0x4001cbb	       608	ref-filter.c	FUNCTION_23	CALL_2
0x1c7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       610	ref-filter.c	FUNCTION_23	IF_2
0x1c7f	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       610	ref-filter.c	FUNCTION_23	IF_2
0x1c83	          0x83e002	                              and eax, 2	       610	ref-filter.c	FUNCTION_23	IF_2
0x1c86	            0x84c0	                             test al, al	       610	ref-filter.c	FUNCTION_23	IF_2
0x1c88	            0x7470	                            je 0x4001d3a	       610	ref-filter.c	FUNCTION_23	IF_2
0x1c8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x1c8e	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x1c92	          0x83e004	                              and eax, 4	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x1c95	            0x84c0	                             test al, al	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x1c97	            0x7423	                            je 0x4001cfc	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x1c99	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x1c9d	        0x4883c008	                              add rax, 8	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x1ca1	      0xbe00000000	                              mov esi, 0	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x1ca6	          0x4889c7	                            mov rdi, rax	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x1ca9	      0xe872e6ffff	                  call sym.strbuf_setlen	       617	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_3
0x1cae	        0x488d45e0	                   lea rax, [rbp - 0x20]	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_4
0x1cb2	          0x4889c7	                            mov rdi, rax	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_4
0x1cb5	      0xe8f4fdffff	              call sym.pop_stack_element	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_4
0x1cba	            0xeb62	                           jmp 0x4001d5e	       618	ref-filter.c	FUNCTION_23	IF_2	IF_3	CALL_4
0x1cbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1cc0	        0x488d5008	                      lea rdx, [rax + 8]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1cc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1cc8	        0x4883c008	                              add rax, 8	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1ccc	          0x4889d6	                            mov rsi, rdx	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1ccf	          0x4889c7	                            mov rdi, rax	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1cd2	      0xe87fe5ffff	                    call sym.strbuf_swap	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_5
0x1cd7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_6
0x1cdb	        0x4883c008	                              add rax, 8	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_6
0x1cdf	      0xbe00000000	                              mov esi, 0	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_6
0x1ce4	          0x4889c7	                            mov rdi, rax	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_6
0x1ce7	      0xe834e6ffff	                  call sym.strbuf_setlen	       621	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_6
0x1cec	        0x488d45e0	                   lea rax, [rbp - 0x20]	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_7
0x1cf0	          0x4889c7	                            mov rdi, rax	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_7
0x1cf3	      0xe8b6fdffff	              call sym.pop_stack_element	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_7
0x1cf8	            0xeb24	                           jmp 0x4001d5e	       622	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_7
0x1cfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x1cfe	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x1d02	          0x83e004	                              and eax, 4	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x1d05	            0x84c0	                             test al, al	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x1d07	            0x7515	                           jne 0x4001d5e	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x1d09	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4	CALL_8
0x1d0d	        0x4883c008	                              add rax, 8	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4	CALL_8
0x1d11	      0xbe00000000	                              mov esi, 0	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4	CALL_8
0x1d16	          0x4889c7	                            mov rdi, rax	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4	CALL_8
0x1d19	      0xe802e6ffff	                  call sym.strbuf_setlen	       629	ref-filter.c	FUNCTION_23	ELSE_2	IF_4	CALL_8
0x1d1e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       632	ref-filter.c	FUNCTION_23
0x1d22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       632	ref-filter.c	FUNCTION_23
0x1d26	          0x488910	                    mov qword [rax], rdx	       632	ref-filter.c	FUNCTION_23
0x1d29	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       633	ref-filter.c	FUNCTION_23	CALL_9
0x1d2d	          0x4889c7	                            mov rdi, rax	       633	ref-filter.c	FUNCTION_23	CALL_9
0x1d30	      0xe800000000	                          call 0x4001d75	       633	ref-filter.c	FUNCTION_23	CALL_9
0x1d35	              0x90	                                     nop	       634	ref-filter.c	FUNCTION_23
0x1d36	        0x488b45f8	                mov rax, qword [rbp - 8]	       634	ref-filter.c	FUNCTION_23
0x1d3a	    0x644833042528	                xor rax, qword fs:[0x28]	       634	ref-filter.c	FUNCTION_23
0x1d43	            0x7405	                            je 0x4001d8a	       634	ref-filter.c	FUNCTION_23
0x1d45	      0xe800000000	                          call 0x4001d8a	       634	ref-filter.c	FUNCTION_23
0x1d4a	              0xc9	                                   leave	       634	ref-filter.c	FUNCTION_23
0x1d4b	              0xc3	                                     ret	       634	ref-filter.c	FUNCTION_23
parse_opt_merge_filter	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,8:ELSE,1:functions,0:IF,4	85
0x6928	              0x55	                                push rbp	      2347	ref-filter.c	FUNCTION_90
0x6929	          0x4889e5	                            mov rbp, rsp	      2347	ref-filter.c	FUNCTION_90
0x692c	        0x4883ec50	                           sub rsp, 0x50	      2347	ref-filter.c	FUNCTION_90
0x6930	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2347	ref-filter.c	FUNCTION_90
0x6934	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2347	ref-filter.c	FUNCTION_90
0x6938	          0x8955bc	             mov dword [rbp - 0x44], edx	      2347	ref-filter.c	FUNCTION_90
0x693b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2347	ref-filter.c	FUNCTION_90
0x6944	        0x488945f8	                mov qword [rbp - 8], rax	      2347	ref-filter.c	FUNCTION_90
0x6948	            0x31c0	                            xor eax, eax	      2347	ref-filter.c	FUNCTION_90
0x694a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2348	ref-filter.c	FUNCTION_90
0x694e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2348	ref-filter.c	FUNCTION_90
0x6952	        0x488945d8	             mov qword [rbp - 0x28], rax	      2348	ref-filter.c	FUNCTION_90
0x6956	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x695a	        0x488b4008	                mov rax, qword [rax + 8]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x695e	      0xbe00000000	                              mov esi, 0	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x6963	          0x4889c7	                            mov rdi, rax	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x6966	      0xe800000000	                          call 0x40069ab	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x696b	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x696e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2352	ref-filter.c	FUNCTION_90	IF_1
0x6972	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2352	ref-filter.c	FUNCTION_90	IF_1
0x6975	            0x85c0	                           test eax, eax	      2352	ref-filter.c	FUNCTION_90	IF_1
0x6977	            0x7446	                            je 0x40069ff	      2352	ref-filter.c	FUNCTION_90	IF_1
0x6979	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x697d	            0x7420	                            je 0x40069df	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x697f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x6983	      0xba00000000	                              mov edx, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x6988	      0xbe00000000	                              mov esi, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x698d	          0x4889c7	                            mov rdi, rax	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x6990	      0xe800000000	                          call 0x40069d5	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x6995	      0xe86696ffff	                    call sym.const_error	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x699a	      0xe9bc000000	                           jmp 0x4006a9b	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x699f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69a3	      0xba00000000	                              mov edx, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69a8	      0xbe00000000	                              mov esi, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69ad	          0x4889c7	                            mov rdi, rax	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69b0	      0xe800000000	                          call 0x40069f5	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69b5	      0xe84696ffff	                    call sym.const_error	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69ba	      0xe99c000000	                           jmp 0x4006a9b	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x69bf	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2360	ref-filter.c	FUNCTION_90
0x69c3	            0x7407	                            je 0x4006a0c	      2360	ref-filter.c	FUNCTION_90
0x69c5	      0xba02000000	                              mov edx, 2	      2360	ref-filter.c	FUNCTION_90
0x69ca	            0xeb05	                           jmp 0x4006a11	      2360	ref-filter.c	FUNCTION_90
0x69cc	      0xba01000000	                              mov edx, 1	      2360	ref-filter.c	FUNCTION_90
0x69d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2360	ref-filter.c	FUNCTION_90
0x69d5	          0x895030	             mov dword [rax + 0x30], edx	      2360	ref-filter.c	FUNCTION_90
0x69d8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69dc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69e0	          0x4889d6	                            mov rsi, rdx	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69e3	          0x4889c7	                            mov rdi, rax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69e6	      0xe800000000	                          call 0x4006a2b	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69eb	            0x85c0	                           test eax, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69ed	            0x7421	                            je 0x4006a50	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x69ef	      0xbf00000000	                              mov edi, 0	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x69f4	      0xe8649affff	                               call sym.	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x69f9	          0x4889c2	                            mov rdx, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x69fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x6a00	          0x4889c6	                            mov rsi, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x6a03	          0x4889d7	                            mov rdi, rdx	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x6a06	      0xb800000000	                              mov eax, 0	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x6a0b	      0xe800000000	                          call 0x4006a50	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x6a10	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a14	      0xbe00000000	                              mov esi, 0	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a19	          0x4889c7	                            mov rdi, rax	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a1c	      0xe800000000	                          call 0x4006a61	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a21	          0x4889c2	                            mov rdx, rax	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a28	        0x48895038	             mov qword [rax + 0x38], rdx	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x6a2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2368	ref-filter.c	FUNCTION_90	IF_4
0x6a30	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2368	ref-filter.c	FUNCTION_90	IF_4
0x6a34	          0x4885c0	                           test rax, rax	      2368	ref-filter.c	FUNCTION_90	IF_4
0x6a37	            0x751d	                           jne 0x4006a96	      2368	ref-filter.c	FUNCTION_90	IF_4
0x6a39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a3d	      0xba00000000	                              mov edx, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a42	      0xbe00000000	                              mov esi, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a47	          0x4889c7	                            mov rdi, rax	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a4a	      0xe800000000	                          call 0x4006a8f	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a4f	      0xe8ac95ffff	                    call sym.const_error	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a54	            0xeb05	                           jmp 0x4006a9b	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x6a56	      0xb800000000	                              mov eax, 0	      2371	ref-filter.c	FUNCTION_90
0x6a5b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2372	ref-filter.c	FUNCTION_90
0x6a5f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2372	ref-filter.c	FUNCTION_90
0x6a68	            0x7405	                            je 0x4006aaf	      2372	ref-filter.c	FUNCTION_90
0x6a6a	      0xe800000000	                          call 0x4006aaf	      2372	ref-filter.c	FUNCTION_90
0x6a6f	              0xc9	                                   leave	      2372	ref-filter.c	FUNCTION_90
0x6a70	              0xc3	                                     ret	      2372	ref-filter.c	FUNCTION_90
parse_ref_filter_atom	SWITCH,0:DO,0:FOR,2:WHILE,0:CALL,16:ELSE,0:functions,0:IF,10	311
0x1504	              0x55	                                push rbp	       455	ref-filter.c	FUNCTION_16
0x1505	          0x4889e5	                            mov rbp, rsp	       455	ref-filter.c	FUNCTION_16
0x1508	              0x53	                                push rbx	       455	ref-filter.c	FUNCTION_16
0x1509	        0x4883ec58	                           sub rsp, 0x58	       455	ref-filter.c	FUNCTION_16
0x150d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       455	ref-filter.c	FUNCTION_16
0x1511	        0x488975b0	             mov qword [rbp - 0x50], rsi	       455	ref-filter.c	FUNCTION_16
0x1515	        0x488955a8	             mov qword [rbp - 0x58], rdx	       455	ref-filter.c	FUNCTION_16
0x1519	        0x48894da0	             mov qword [rbp - 0x60], rcx	       455	ref-filter.c	FUNCTION_16
0x151d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       460	ref-filter.c	FUNCTION_16
0x1521	        0x488945e0	             mov qword [rbp - 0x20], rax	       460	ref-filter.c	FUNCTION_16
0x1525	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	ref-filter.c	FUNCTION_16	IF_1
0x1529	           0xfb600	                   movzx eax, byte [rax]	       461	ref-filter.c	FUNCTION_16	IF_1
0x152c	            0x3c2a	                            cmp al, 0x2a	       461	ref-filter.c	FUNCTION_16	IF_1
0x152e	            0x750f	                           jne 0x400157f	       461	ref-filter.c	FUNCTION_16	IF_1
0x1530	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	ref-filter.c	FUNCTION_16	IF_1
0x1534	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       461	ref-filter.c	FUNCTION_16	IF_1
0x1538	            0x7305	                           jae 0x400157f	       461	ref-filter.c	FUNCTION_16	IF_1
0x153a	      0x488345e001	               add qword [rbp - 0x20], 1	       462	ref-filter.c	FUNCTION_16	IF_1
0x153f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       463	ref-filter.c	FUNCTION_16	IF_2
0x1543	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       463	ref-filter.c	FUNCTION_16	IF_2
0x1547	            0x7744	                            ja 0x40015cd	       463	ref-filter.c	FUNCTION_16	IF_2
0x1549	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       465	ref-filter.c	FUNCTION_16	IF_2
0x154d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       465	ref-filter.c	FUNCTION_16	IF_2
0x1551	          0x4829c2	                            sub rdx, rax	       465	ref-filter.c	FUNCTION_16	IF_2
0x1554	          0x4889d0	                            mov rax, rdx	       465	ref-filter.c	FUNCTION_16	IF_2
0x1557	            0x89c3	                            mov ebx, eax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1559	      0xbf00000000	                              mov edi, 0	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x155e	      0xe8faeeffff	                               call sym.	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1563	          0x4889c6	                            mov rsi, rax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1566	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x156a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x156e	          0x4989d0	                             mov r8, rdx	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1571	            0x89d9	                            mov ecx, ebx	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1573	          0x4889f2	                            mov rdx, rsi	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1576	      0xbeffffffff	                     mov esi, 0xffffffff	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x157b	          0x4889c7	                            mov rdi, rax	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x157e	      0xb800000000	                              mov eax, 0	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1583	      0xe88cf0ffff	                call sym.strbuf_addf_ret	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x1588	      0xe9ca030000	                           jmp 0x4001997	       464	ref-filter.c	FUNCTION_16	IF_2	CALL_2
0x158d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       468	ref-filter.c	FUNCTION_16	FOR_1
0x1594	      0xe98b000000	                           jmp 0x4001664	       468	ref-filter.c	FUNCTION_16	FOR_1
0x1599	    0x488b0d000000	            mov rcx, qword [0x040015e0] 	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15a0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15a3	          0x4863d0	                         movsxd rdx, eax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15a6	          0x4889d0	                            mov rax, rdx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15a9	          0x4801c0	                            add rax, rax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15ac	          0x4801d0	                            add rax, rdx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15af	        0x48c1e005	                              shl rax, 5	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15b3	          0x4801c8	                            add rax, rcx	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15b6	          0x488b00	                    mov rax, qword [rax]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15b9	          0x4889c7	                            mov rdi, rax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15bc	      0xe800000000	                          call 0x4001601	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15c1	          0x8945d0	             mov dword [rbp - 0x30], eax	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x15c4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15c7	            0x4898	                                    cdqe	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15c9	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15cd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15d1	          0x4829d1	                            sub rcx, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15d4	          0x4889ca	                            mov rdx, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15d7	          0x4839d0	                            cmp rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15da	            0x7544	                           jne 0x4001660	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15dc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15df	          0x4863f0	                         movsxd rsi, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15e2	    0x488b0d000000	            mov rcx, qword [0x04001629] 	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15e9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15ec	          0x4863d0	                         movsxd rdx, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15ef	          0x4889d0	                            mov rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15f2	          0x4801c0	                            add rax, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15f5	          0x4801d0	                            add rax, rdx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15f8	        0x48c1e005	                              shl rax, 5	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15fc	          0x4801c8	                            add rax, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x15ff	          0x488b00	                    mov rax, qword [rax]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1602	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1606	          0x4889f2	                            mov rdx, rsi	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1609	          0x4889ce	                            mov rsi, rcx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x160c	          0x4889c7	                            mov rdi, rax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x160f	      0xe800000000	                          call 0x4001654	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1614	            0x85c0	                           test eax, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1616	            0x7508	                           jne 0x4001660	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x1618	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       471	ref-filter.c	FUNCTION_16	FOR_1	IF_3
0x161b	      0xe937030000	                           jmp 0x4001997	       471	ref-filter.c	FUNCTION_16	FOR_1	IF_3
0x1620	        0x8345cc01	               add dword [rbp - 0x34], 1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x1624	    0x8b0500000000	            mov eax, dword [0x0400166a] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x162a	          0x3945cc	            cmp dword [rbp - 0x34], eax 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x162d	     0xf8c66ffffff	                            jl 0x40015d9	       468	ref-filter.c	FUNCTION_16	FOR_1
0x1633	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1637	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x163b	          0x4829c2	                            sub rdx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x163e	          0x4889d0	                            mov rax, rdx	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1641	          0x4889c2	                            mov rdx, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1644	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1648	      0xbe3a000000	                           mov esi, 0x3a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x164d	          0x4889c7	                            mov rdi, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1650	      0xe800000000	                          call 0x4001695	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1655	        0x488945e8	             mov qword [rbp - 0x18], rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x1659	      0x48837de800	               cmp qword [rbp - 0x18], 0	       481	ref-filter.c	FUNCTION_16
0x165e	            0x7406	                            je 0x40016a6	       481	ref-filter.c	FUNCTION_16
0x1660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	ref-filter.c	FUNCTION_16
0x1664	            0xeb04	                           jmp 0x40016aa	       481	ref-filter.c	FUNCTION_16
0x1666	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       481	ref-filter.c	FUNCTION_16
0x166a	          0x4889c2	                            mov rdx, rax	       481	ref-filter.c	FUNCTION_16
0x166d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       481	ref-filter.c	FUNCTION_16
0x1671	          0x4829c2	                            sub rdx, rax	       481	ref-filter.c	FUNCTION_16
0x1674	          0x4889d0	                            mov rax, rdx	       481	ref-filter.c	FUNCTION_16
0x1677	          0x8945d4	             mov dword [rbp - 0x2c], eax	       481	ref-filter.c	FUNCTION_16
0x167a	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x1681	            0xeb6b	                           jmp 0x400172e	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x1683	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x1686	          0x4863d0	                         movsxd rdx, eax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x1689	          0x4889d0	                            mov rax, rdx	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x168c	          0x4801c0	                            add rax, rax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x168f	          0x4801d0	                            add rax, rdx	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x1692	        0x48c1e003	                              shl rax, 3	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x1696	    0x480500000000	                              add rax, 0	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x169c	          0x488b00	                    mov rax, qword [rax]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x169f	          0x4889c7	                            mov rdi, rax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x16a2	      0xe800000000	                          call 0x40016e7	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x16a7	          0x8945d8	             mov dword [rbp - 0x28], eax	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_7
0x16aa	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16ad	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16b0	            0x7538	                           jne 0x400172a	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16b2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16b5	          0x4863f0	                         movsxd rsi, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16b8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16bb	          0x4863d0	                         movsxd rdx, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16be	          0x4889d0	                            mov rax, rdx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16c1	          0x4801c0	                            add rax, rax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16c4	          0x4801d0	                            add rax, rdx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16c7	        0x48c1e003	                              shl rax, 3	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16cb	    0x480500000000	                              add rax, 0	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16d1	          0x488b00	                    mov rax, qword [rax]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16d4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16d8	          0x4889f2	                            mov rdx, rsi	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16db	          0x4889ce	                            mov rsi, rcx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16de	          0x4889c7	                            mov rdi, rax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16e1	      0xe800000000	                          call 0x4001726	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16e6	            0x85c0	                           test eax, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16e8	            0x740e	                            je 0x4001738	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_8
0x16ea	        0x8345cc01	               add dword [rbp - 0x34], 1	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x16ee	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x16f1	          0x83f826	                           cmp eax, 0x26	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x16f4	            0x768d	                           jbe 0x40016c3	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x16f6	            0xeb01	                           jmp 0x4001739	       484	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x16f8	              0x90	                                     nop	       487	ref-filter.c	FUNCTION_16	FOR_2	IF_4
0x16f9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       490	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x16fc	          0x83f826	                           cmp eax, 0x26	       490	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x16ff	            0x7644	                           jbe 0x4001785	       490	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x1701	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       492	ref-filter.c	FUNCTION_16	IF_5
0x1705	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       492	ref-filter.c	FUNCTION_16	IF_5
0x1709	          0x4829c2	                            sub rdx, rax	       492	ref-filter.c	FUNCTION_16	IF_5
0x170c	          0x4889d0	                            mov rax, rdx	       492	ref-filter.c	FUNCTION_16	IF_5
0x170f	            0x89c3	                            mov ebx, eax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1711	      0xbf00000000	                              mov edi, 0	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1716	      0xe842edffff	                               call sym.	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x171b	          0x4889c6	                            mov rsi, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x171e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1722	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1726	          0x4989d0	                             mov r8, rdx	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1729	            0x89d9	                            mov ecx, ebx	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x172b	          0x4889f2	                            mov rdx, rsi	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x172e	      0xbeffffffff	                     mov esi, 0xffffffff	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1733	          0x4889c7	                            mov rdi, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1736	      0xb800000000	                              mov eax, 0	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x173b	      0xe8d4eeffff	                call sym.strbuf_addf_ret	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1740	      0xe912020000	                           jmp 0x4001997	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_11
0x1745	    0x8b0500000000	            mov eax, dword [0x0400178b] 	       495	ref-filter.c	FUNCTION_16
0x174b	          0x8945dc	             mov dword [rbp - 0x24], eax	       495	ref-filter.c	FUNCTION_16
0x174e	    0x8b0500000000	            mov eax, dword [0x04001794] 	       496	ref-filter.c	FUNCTION_16
0x1754	          0x83c001	                              add eax, 1	       496	ref-filter.c	FUNCTION_16
0x1757	    0x890500000000	            mov dword [0x0400179d], eax 	       496	ref-filter.c	FUNCTION_16
0x175d	    0x8b0500000000	            mov eax, dword [0x040017a3] 	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1763	            0x4898	                                    cdqe	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1765	          0x4889c6	                            mov rsi, rax	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1768	      0xbf60000000	                           mov edi, 0x60	       497	ref-filter.c	FUNCTION_16	CALL_12
0x176d	      0xe833e9ffff	                        call sym.st_mult	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1772	          0x4889c2	                            mov rdx, rax	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1775	    0x488b05000000	            mov rax, qword [0x040017bc] 	       497	ref-filter.c	FUNCTION_16	CALL_12
0x177c	          0x4889d6	                            mov rsi, rdx	       497	ref-filter.c	FUNCTION_16	CALL_12
0x177f	          0x4889c7	                            mov rdi, rax	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1782	      0xe800000000	                          call 0x40017c7	       497	ref-filter.c	FUNCTION_16	CALL_12
0x1787	    0x488905000000	            mov qword [0x040017ce], rax 	       497	ref-filter.c	FUNCTION_16	CALL_12
0x178e	    0x488b0d000000	            mov rcx, qword [0x040017d5] 	       498	ref-filter.c	FUNCTION_16	CALL_13
0x1795	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       498	ref-filter.c	FUNCTION_16	CALL_13
0x1798	          0x4863d0	                         movsxd rdx, eax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x179b	          0x4889d0	                            mov rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_13
0x179e	          0x4801c0	                            add rax, rax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17a1	          0x4801d0	                            add rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17a4	        0x48c1e005	                              shl rax, 5	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17a8	        0x488d1c01	                    lea rbx, [rcx + rax]	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17ac	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17b0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17b4	          0x4829c2	                            sub rdx, rax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17b7	          0x4889d0	                            mov rax, rdx	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17ba	          0x4889c2	                            mov rdx, rax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17bd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17c1	          0x4889d6	                            mov rsi, rdx	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17c4	          0x4889c7	                            mov rdi, rax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17c7	      0xe800000000	                          call 0x400180c	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17cc	          0x488903	                    mov qword [rbx], rax	       498	ref-filter.c	FUNCTION_16	CALL_13
0x17cf	    0x488b0d000000	            mov rcx, qword [0x04001816] 	       499	ref-filter.c	FUNCTION_16
0x17d6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       499	ref-filter.c	FUNCTION_16
0x17d9	          0x4863d0	                         movsxd rdx, eax	       499	ref-filter.c	FUNCTION_16
0x17dc	          0x4889d0	                            mov rax, rdx	       499	ref-filter.c	FUNCTION_16
0x17df	          0x4801c0	                            add rax, rax	       499	ref-filter.c	FUNCTION_16
0x17e2	          0x4801d0	                            add rax, rdx	       499	ref-filter.c	FUNCTION_16
0x17e5	        0x48c1e005	                              shl rax, 5	       499	ref-filter.c	FUNCTION_16
0x17e9	          0x4801c1	                            add rcx, rax	       499	ref-filter.c	FUNCTION_16
0x17ec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       499	ref-filter.c	FUNCTION_16
0x17ef	          0x4863d0	                         movsxd rdx, eax	       499	ref-filter.c	FUNCTION_16
0x17f2	          0x4889d0	                            mov rax, rdx	       499	ref-filter.c	FUNCTION_16
0x17f5	          0x4801c0	                            add rax, rax	       499	ref-filter.c	FUNCTION_16
0x17f8	          0x4801d0	                            add rax, rdx	       499	ref-filter.c	FUNCTION_16
0x17fb	        0x48c1e003	                              shl rax, 3	       499	ref-filter.c	FUNCTION_16
0x17ff	    0x480500000000	                              add rax, 0	       499	ref-filter.c	FUNCTION_16
0x1805	            0x8b00	                    mov eax, dword [rax]	       499	ref-filter.c	FUNCTION_16
0x1807	          0x894108	                mov dword [rcx + 8], eax	       499	ref-filter.c	FUNCTION_16
0x180a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       500	ref-filter.c	FUNCTION_16	IF_6
0x180f	            0x744c	                            je 0x400189d	       500	ref-filter.c	FUNCTION_16	IF_6
0x1811	    0x488b0d000000	            mov rcx, qword [0x04001858] 	       501	ref-filter.c	FUNCTION_16	IF_6
0x1818	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       501	ref-filter.c	FUNCTION_16	IF_6
0x181b	          0x4863d0	                         movsxd rdx, eax	       501	ref-filter.c	FUNCTION_16	IF_6
0x181e	          0x4889d0	                            mov rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x1821	          0x4801c0	                            add rax, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x1824	          0x4801d0	                            add rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x1827	        0x48c1e005	                              shl rax, 5	       501	ref-filter.c	FUNCTION_16	IF_6
0x182b	          0x4801c8	                            add rax, rcx	       501	ref-filter.c	FUNCTION_16	IF_6
0x182e	          0x488b00	                    mov rax, qword [rax]	       501	ref-filter.c	FUNCTION_16	IF_6
0x1831	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       501	ref-filter.c	FUNCTION_16	IF_6
0x1835	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       501	ref-filter.c	FUNCTION_16	IF_6
0x1839	          0x4829d1	                            sub rcx, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x183c	          0x4889ca	                            mov rdx, rcx	       501	ref-filter.c	FUNCTION_16	IF_6
0x183f	        0x4883c201	                              add rdx, 1	       501	ref-filter.c	FUNCTION_16	IF_6
0x1843	          0x4801d0	                            add rax, rdx	       501	ref-filter.c	FUNCTION_16	IF_6
0x1846	        0x488945e8	             mov qword [rbp - 0x18], rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x184a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x184e	           0xfb600	                   movzx eax, byte [rax]	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x1851	            0x84c0	                             test al, al	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x1853	            0x7508	                           jne 0x400189d	       502	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x1855	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x185d	    0x488b0d000000	            mov rcx, qword [0x040018a4] 	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1864	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1867	          0x4863d0	                         movsxd rdx, eax	       510	ref-filter.c	FUNCTION_16	CALL_14
0x186a	          0x4889d0	                            mov rax, rdx	       510	ref-filter.c	FUNCTION_16	CALL_14
0x186d	          0x4801c0	                            add rax, rax	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1870	          0x4801d0	                            add rax, rdx	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1873	        0x48c1e005	                              shl rax, 5	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1877	          0x4801c8	                            add rax, rcx	       510	ref-filter.c	FUNCTION_16	CALL_14
0x187a	        0x4883c010	                           add rax, 0x10	       510	ref-filter.c	FUNCTION_16	CALL_14
0x187e	      0xba50000000	                           mov edx, 0x50	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1883	      0xbe00000000	                              mov esi, 0	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1888	          0x4889c7	                            mov rdi, rax	       510	ref-filter.c	FUNCTION_16	CALL_14
0x188b	      0xe800000000	                          call 0x40018d0	       510	ref-filter.c	FUNCTION_16	CALL_14
0x1890	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x1893	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x1896	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x1899	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x189c	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x189f	        0x48c1e003	                              shl rax, 3	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18a3	    0x480500000000	                              add rax, 0	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18a9	          0x488b00	                    mov rax, qword [rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18ac	          0x4885c0	                           test rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18af	            0x7457	                            je 0x4001948	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18b1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18b4	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18b7	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18ba	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18bd	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18c0	        0x48c1e003	                              shl rax, 3	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18c4	    0x480500000000	                              add rax, 0	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18ca	          0x4c8b00	                     mov r8, qword [rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18cd	    0x488b0d000000	            mov rcx, qword [0x04001914] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18d4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18d7	          0x4863d0	                         movsxd rdx, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18da	          0x4889d0	                            mov rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18dd	          0x4801c0	                            add rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18e0	          0x4801d0	                            add rax, rdx	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18e3	        0x48c1e005	                              shl rax, 5	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18e7	        0x488d3401	                    lea rsi, [rcx + rax]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18eb	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18ef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18f3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18f7	          0x4889c7	                            mov rdi, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18fa	          0x41ffd0	                                 call r8	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18fd	            0x85c0	                           test eax, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x18ff	            0x7407	                            je 0x4001948	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_15
0x1901	      0xb8ffffffff	                     mov eax, 0xffffffff	       512	ref-filter.c	FUNCTION_16	IF_8
0x1906	            0xeb4f	                           jmp 0x4001997	       512	ref-filter.c	FUNCTION_16	IF_8
0x1908	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       513	ref-filter.c	FUNCTION_16	IF_9
0x190c	           0xfb600	                   movzx eax, byte [rax]	       513	ref-filter.c	FUNCTION_16	IF_9
0x190f	            0x3c2a	                            cmp al, 0x2a	       513	ref-filter.c	FUNCTION_16	IF_9
0x1911	            0x750a	                           jne 0x400195d	       513	ref-filter.c	FUNCTION_16	IF_9
0x1913	    0xc70500000000	               mov dword [0x0400195d], 1	       514	ref-filter.c	FUNCTION_16	IF_9
0x191d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1920	          0x4863d0	                         movsxd rdx, eax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1923	          0x4889d0	                            mov rax, rdx	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1926	          0x4801c0	                            add rax, rax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1929	          0x4801d0	                            add rax, rdx	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x192c	        0x48c1e003	                              shl rax, 3	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1930	    0x480500000000	                              add rax, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1936	          0x488b00	                    mov rax, qword [rax]	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1939	      0xbe00000000	                              mov esi, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x193e	          0x4889c7	                            mov rdi, rax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1941	      0xe800000000	                          call 0x4001986	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1946	            0x85c0	                           test eax, eax	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x1948	            0x750a	                           jne 0x4001994	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_16
0x194a	    0xc70500000000	               mov dword [0x04001994], 1	       516	ref-filter.c	FUNCTION_16	IF_10
0x1954	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       517	ref-filter.c	FUNCTION_16
0x1957	        0x4883c458	                           add rsp, 0x58	       518	ref-filter.c	FUNCTION_16
0x195b	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x195c	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x195d	              0xc3	                                     ret	       518	ref-filter.c	FUNCTION_16
quote_formatting	SWITCH,1:DO,0:FOR,0:WHILE,0:CALL,5:ELSE,0:functions,0:IF,0	44
0x195e	              0x55	                                push rbp	       521	ref-filter.c	FUNCTION_17
0x195f	          0x4889e5	                            mov rbp, rsp	       521	ref-filter.c	FUNCTION_17
0x1962	        0x4883ec20	                           sub rsp, 0x20	       521	ref-filter.c	FUNCTION_17
0x1966	        0x48897df8	                mov qword [rbp - 8], rdi	       521	ref-filter.c	FUNCTION_17
0x196a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       521	ref-filter.c	FUNCTION_17
0x196e	          0x8955ec	             mov dword [rbp - 0x14], edx	       521	ref-filter.c	FUNCTION_17
0x1971	        0x837dec08	               cmp dword [rbp - 0x14], 8	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x1975	            0x7775	                            ja 0x4001a2c	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x1977	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x197a	    0x488b04c50000	                  mov rax, qword [rax*8]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x1982	            0xffe0	                                 jmp rax	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x1984	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x1988	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x198c	          0x4889d6	                            mov rsi, rdx	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x198f	          0x4889c7	                            mov rdi, rax	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x1992	      0xe891eaffff	                  call sym.strbuf_addstr	       524	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_1
0x1997	            0xeb53	                           jmp 0x4001a2c	       525	ref-filter.c	FUNCTION_17	SWITCH_1
0x1999	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x199d	        0x488b45f8	                mov rax, qword [rbp - 8]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x19a1	          0x4889d6	                            mov rsi, rdx	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x19a4	          0x4889c7	                            mov rdi, rax	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x19a7	      0xe800000000	                          call 0x40019ec	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x19ac	            0xeb3e	                           jmp 0x4001a2c	       528	ref-filter.c	FUNCTION_17	SWITCH_1
0x19ae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x19b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x19b6	          0x4889d6	                            mov rsi, rdx	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x19b9	          0x4889c7	                            mov rdi, rax	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x19bc	      0xe800000000	                          call 0x4001a01	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x19c1	            0xeb29	                           jmp 0x4001a2c	       531	ref-filter.c	FUNCTION_17	SWITCH_1
0x19c3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x19c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x19cb	          0x4889d6	                            mov rsi, rdx	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x19ce	          0x4889c7	                            mov rdi, rax	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x19d1	      0xe800000000	                          call 0x4001a16	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x19d6	            0xeb14	                           jmp 0x4001a2c	       534	ref-filter.c	FUNCTION_17	SWITCH_1
0x19d8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x19dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x19e0	          0x4889d6	                            mov rsi, rdx	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x19e3	          0x4889c7	                            mov rdi, rax	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x19e6	      0xe800000000	                          call 0x4001a2b	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x19eb	              0x90	                                     nop	       537	ref-filter.c	FUNCTION_17	SWITCH_1
0x19ec	              0x90	                                     nop	       539	ref-filter.c	FUNCTION_17
0x19ed	              0xc9	                                   leave	       539	ref-filter.c	FUNCTION_17
0x19ee	              0xc3	                                     ret	       539	ref-filter.c	FUNCTION_17
end_align_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,0	41
0x1b1c	              0x55	                                push rbp	       579	ref-filter.c	FUNCTION_21
0x1b1d	          0x4889e5	                            mov rbp, rsp	       579	ref-filter.c	FUNCTION_21
0x1b20	        0x4883ec40	                           sub rsp, 0x40	       579	ref-filter.c	FUNCTION_21
0x1b24	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       579	ref-filter.c	FUNCTION_21
0x1b28	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	ref-filter.c	FUNCTION_21
0x1b31	        0x488945f8	                mov qword [rbp - 8], rax	       579	ref-filter.c	FUNCTION_21
0x1b35	            0x31c0	                            xor eax, eax	       579	ref-filter.c	FUNCTION_21
0x1b37	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       580	ref-filter.c	FUNCTION_21
0x1b3b	          0x488b00	                    mov rax, qword [rax]	       580	ref-filter.c	FUNCTION_21
0x1b3e	        0x488945d0	             mov qword [rbp - 0x30], rax	       580	ref-filter.c	FUNCTION_21
0x1b42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       581	ref-filter.c	FUNCTION_21
0x1b46	        0x488b4028	            mov rax, qword [rax + 0x28] 	       581	ref-filter.c	FUNCTION_21
0x1b4a	        0x488945d8	             mov qword [rbp - 0x28], rax	       581	ref-filter.c	FUNCTION_21
0x1b4e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       582	ref-filter.c	FUNCTION_21
0x1b56	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       582	ref-filter.c	FUNCTION_21
0x1b5e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       582	ref-filter.c	FUNCTION_21
0x1b66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b6a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b6e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b72	          0x8b5004	                mov edx, dword [rax + 4]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b79	            0x8b30	                    mov esi, dword [rax]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b7b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b7f	          0x4889c7	                            mov rdi, rax	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b82	      0xe800000000	                          call 0x4001bc7	       584	ref-filter.c	FUNCTION_21	CALL_1
0x1b87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b8b	        0x488d5008	                      lea rdx, [rax + 8]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b8f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b93	          0x4889c6	                            mov rsi, rax	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b96	          0x4889d7	                            mov rdi, rdx	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b99	      0xe8b8e6ffff	                    call sym.strbuf_swap	       585	ref-filter.c	FUNCTION_21	CALL_2
0x1b9e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       586	ref-filter.c	FUNCTION_21	CALL_3
0x1ba2	          0x4889c7	                            mov rdi, rax	       586	ref-filter.c	FUNCTION_21	CALL_3
0x1ba5	      0xe800000000	                          call 0x4001bea	       586	ref-filter.c	FUNCTION_21	CALL_3
0x1baa	              0x90	                                     nop	       587	ref-filter.c	FUNCTION_21
0x1bab	        0x488b45f8	                mov rax, qword [rbp - 8]	       587	ref-filter.c	FUNCTION_21
0x1baf	    0x644833042528	                xor rax, qword fs:[0x28]	       587	ref-filter.c	FUNCTION_21
0x1bb8	            0x7405	                            je 0x4001bff	       587	ref-filter.c	FUNCTION_21
0x1bba	      0xe800000000	                          call 0x4001bff	       587	ref-filter.c	FUNCTION_21
0x1bbf	              0xc9	                                   leave	       587	ref-filter.c	FUNCTION_21
0x1bc0	              0xc3	                                     ret	       587	ref-filter.c	FUNCTION_21
parse_ref_sorting	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0:IF,2	54
0x6830	              0x55	                                push rbp	      2321	ref-filter.c	FUNCTION_88
0x6831	          0x4889e5	                            mov rbp, rsp	      2321	ref-filter.c	FUNCTION_88
0x6834	        0x4883ec20	                           sub rsp, 0x20	      2321	ref-filter.c	FUNCTION_88
0x6838	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2321	ref-filter.c	FUNCTION_88
0x683c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2321	ref-filter.c	FUNCTION_88
0x6840	      0xbe10000000	                           mov esi, 0x10	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x6845	      0xbf01000000	                              mov edi, 1	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x684a	      0xe800000000	                          call 0x400688f	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x684f	        0x488945f8	                mov qword [rbp - 8], rax	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x6853	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2325	ref-filter.c	FUNCTION_88
0x6857	          0x488b10	                    mov rdx, qword [rax]	      2325	ref-filter.c	FUNCTION_88
0x685a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2325	ref-filter.c	FUNCTION_88
0x685e	          0x488910	                    mov qword [rax], rdx	      2325	ref-filter.c	FUNCTION_88
0x6861	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2326	ref-filter.c	FUNCTION_88
0x6865	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2326	ref-filter.c	FUNCTION_88
0x6869	          0x488910	                    mov qword [rax], rdx	      2326	ref-filter.c	FUNCTION_88
0x686c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2328	ref-filter.c	FUNCTION_88	IF_1
0x6870	           0xfb600	                   movzx eax, byte [rax]	      2328	ref-filter.c	FUNCTION_88	IF_1
0x6873	            0x3c2d	                            cmp al, 0x2d	      2328	ref-filter.c	FUNCTION_88	IF_1
0x6875	            0x751a	                           jne 0x40068d1	      2328	ref-filter.c	FUNCTION_88	IF_1
0x6877	        0x488b45f8	                mov rax, qword [rbp - 8]	      2329	ref-filter.c	FUNCTION_88	IF_1
0x687b	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      2329	ref-filter.c	FUNCTION_88	IF_1
0x687f	          0x83ca01	                               or edx, 1	      2329	ref-filter.c	FUNCTION_88	IF_1
0x6882	          0x88500c	                mov byte [rax + 0xc], dl	      2329	ref-filter.c	FUNCTION_88	IF_1
0x6885	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2330	ref-filter.c	FUNCTION_88	IF_1
0x6889	        0x4883c001	                              add rax, 1	      2330	ref-filter.c	FUNCTION_88	IF_1
0x688d	        0x488945e0	             mov qword [rbp - 0x20], rax	      2330	ref-filter.c	FUNCTION_88	IF_1
0x6891	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x6895	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x6899	      0xbe00000000	                              mov esi, 0	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x689e	          0x4889c7	                            mov rdi, rax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68a1	      0xe86597ffff	                    call sym.skip_prefix	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68a6	            0x85c0	                           test eax, eax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68a8	            0x7519	                           jne 0x4006903	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x68ae	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x68b2	      0xbe00000000	                              mov esi, 0	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x68b7	          0x4889c7	                            mov rdi, rax	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x68ba	      0xe84c97ffff	                    call sym.skip_prefix	      2333	ref-filter.c	FUNCTION_88	IF_2	CALL_3
0x68bf	            0x85c0	                           test eax, eax	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68c1	            0x740e	                            je 0x4006911	      2332	ref-filter.c	FUNCTION_88	IF_2	CALL_2
0x68c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2334	ref-filter.c	FUNCTION_88	IF_2
0x68c7	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      2334	ref-filter.c	FUNCTION_88	IF_2
0x68cb	          0x83ca04	                               or edx, 4	      2334	ref-filter.c	FUNCTION_88	IF_2
0x68ce	          0x88500c	                mov byte [rax + 0xc], dl	      2334	ref-filter.c	FUNCTION_88	IF_2
0x68d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68d5	          0x4889c7	                            mov rdi, rax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68d8	      0xe84cfeffff	             call sym.parse_sorting_atom	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68dd	            0x89c2	                            mov edx, eax	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68e3	          0x895008	                mov dword [rax + 8], edx	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x68e6	              0x90	                                     nop	      2336	ref-filter.c	FUNCTION_88
0x68e7	              0xc9	                                   leave	      2336	ref-filter.c	FUNCTION_88
0x68e8	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
match_name_as_path	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,4:ELSE,0:functions,0:IF,3	81
0x52ad	              0x55	                                push rbp	      1782	ref-filter.c	FUNCTION_65
0x52ae	          0x4889e5	                            mov rbp, rsp	      1782	ref-filter.c	FUNCTION_65
0x52b1	        0x4883ec30	                           sub rsp, 0x30	      1782	ref-filter.c	FUNCTION_65
0x52b5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1782	ref-filter.c	FUNCTION_65
0x52b9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1782	ref-filter.c	FUNCTION_65
0x52bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1783	ref-filter.c	FUNCTION_65
0x52c1	          0x488b00	                    mov rax, qword [rax]	      1783	ref-filter.c	FUNCTION_65
0x52c4	        0x488945f0	             mov qword [rbp - 0x10], rax	      1783	ref-filter.c	FUNCTION_65
0x52c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x52cc	          0x4889c7	                            mov rdi, rax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x52cf	      0xe800000000	                          call 0x4005314	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x52d4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x52d7	    0xc745e8020000	               mov dword [rbp - 0x18], 2	      1785	ref-filter.c	FUNCTION_65
0x52de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1787	ref-filter.c	FUNCTION_65	IF_1
0x52e2	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1787	ref-filter.c	FUNCTION_65	IF_1
0x52e6	          0x83e004	                              and eax, 4	      1787	ref-filter.c	FUNCTION_65	IF_1
0x52e9	            0x84c0	                             test al, al	      1787	ref-filter.c	FUNCTION_65	IF_1
0x52eb	     0xf84b6000000	                            je 0x40053e7	      1787	ref-filter.c	FUNCTION_65	IF_1
0x52f1	        0x834de801	                or dword [rbp - 0x18], 1	      1788	ref-filter.c	FUNCTION_65	IF_1
0x52f5	      0xe9ad000000	                           jmp 0x40053e7	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x52fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x52fe	          0x488b00	                    mov rax, qword [rax]	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x5301	        0x488945f8	                mov qword [rbp - 8], rax	      1791	ref-filter.c	FUNCTION_65	FOR_1
0x5305	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x5309	          0x4889c7	                            mov rdi, rax	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x530c	      0xe800000000	                          call 0x4005351	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x5311	          0x8945ec	             mov dword [rbp - 0x14], eax	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x5314	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5317	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x531a	            0x7f63	                            jg 0x40053bf	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x531c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x531f	          0x4863d0	                         movsxd rdx, eax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x5322	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x5326	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x532a	          0x4889ce	                            mov rsi, rcx	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x532d	          0x4889c7	                            mov rdi, rax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x5330	      0xe800000000	                          call 0x4005375	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x5335	            0x85c0	                           test eax, eax	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5337	            0x7546	                           jne 0x40053bf	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5339	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x533c	          0x4863d0	                         movsxd rdx, eax	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x533f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5343	          0x4801d0	                            add rax, rdx	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5346	           0xfb600	                   movzx eax, byte [rax]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5349	            0x84c0	                             test al, al	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x534b	            0x742b	                            je 0x40053b8	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x534d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5350	          0x4863d0	                         movsxd rdx, eax	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5353	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5357	          0x4801d0	                            add rax, rdx	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x535a	           0xfb600	                   movzx eax, byte [rax]	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x535d	            0x3c2f	                            cmp al, 0x2f	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x535f	            0x7417	                            je 0x40053b8	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5361	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5364	            0x4898	                                    cdqe	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5366	        0x488d50ff	                      lea rdx, [rax - 1]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x536a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x536e	          0x4801d0	                            add rax, rdx	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5371	           0xfb600	                   movzx eax, byte [rax]	      1798	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5374	            0x3c2f	                            cmp al, 0x2f	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5376	            0x7507	                           jne 0x40053bf	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x5378	      0xb801000000	                              mov eax, 1	      1799	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x537d	            0xeb3d	                           jmp 0x40053fc	      1799	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x537f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x5383	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x5387	      0xba02000000	                              mov edx, 2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x538c	          0x4889ce	                            mov rsi, rcx	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x538f	          0x4889c7	                            mov rdi, rax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x5392	      0xe800000000	                          call 0x40053d7	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x5397	            0x85c0	                           test eax, eax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x5399	            0x7507	                           jne 0x40053e2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x539b	      0xb801000000	                              mov eax, 1	      1801	ref-filter.c	FUNCTION_65	FOR_1	IF_3
0x53a0	            0xeb1a	                           jmp 0x40053fc	      1801	ref-filter.c	FUNCTION_65	FOR_1	IF_3
0x53a2	      0x488345f008	               add qword [rbp - 0x10], 8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x53a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x53ab	          0x488b00	                    mov rax, qword [rax]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x53ae	          0x4885c0	                           test rax, rax	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x53b1	     0xf8543ffffff	                           jne 0x400533a	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x53b7	      0xb800000000	                              mov eax, 0	      1803	ref-filter.c	FUNCTION_65
0x53bc	              0xc9	                                   leave	      1804	ref-filter.c	FUNCTION_65
0x53bd	              0xc3	                                     ret	      1804	ref-filter.c	FUNCTION_65
align_atom_parser	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,22:ELSE,4:functions,0:IF,8	183
0x112d	              0x55	                                push rbp	       308	ref-filter.c	FUNCTION_13
0x112e	          0x4889e5	                            mov rbp, rsp	       308	ref-filter.c	FUNCTION_13
0x1131	              0x53	                                push rbx	       308	ref-filter.c	FUNCTION_13
0x1132	        0x4883ec78	                           sub rsp, 0x78	       308	ref-filter.c	FUNCTION_13
0x1136	        0x48897d98	             mov qword [rbp - 0x68], rdi	       308	ref-filter.c	FUNCTION_13
0x113a	        0x48897590	             mov qword [rbp - 0x70], rsi	       308	ref-filter.c	FUNCTION_13
0x113e	        0x48895588	             mov qword [rbp - 0x78], rdx	       308	ref-filter.c	FUNCTION_13
0x1142	        0x48894d80	             mov qword [rbp - 0x80], rcx	       308	ref-filter.c	FUNCTION_13
0x1146	    0x64488b042528	                mov rax, qword fs:[0x28]	       308	ref-filter.c	FUNCTION_13
0x114f	        0x488945e8	             mov qword [rbp - 0x18], rax	       308	ref-filter.c	FUNCTION_13
0x1153	            0x31c0	                            xor eax, eax	       308	ref-filter.c	FUNCTION_13
0x1155	        0x488b4590	             mov rax, qword [rbp - 0x70]	       309	ref-filter.c	FUNCTION_13
0x1159	        0x4883c010	                           add rax, 0x10	       309	ref-filter.c	FUNCTION_13
0x115d	        0x488945b8	             mov qword [rbp - 0x48], rax	       309	ref-filter.c	FUNCTION_13
0x1161	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       310	ref-filter.c	FUNCTION_13
0x1169	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       310	ref-filter.c	FUNCTION_13
0x1170	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       310	ref-filter.c	FUNCTION_13
0x1177	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       310	ref-filter.c	FUNCTION_13
0x117b	          0x83c801	                               or eax, 1	       310	ref-filter.c	FUNCTION_13
0x117e	          0x8845d0	               mov byte [rbp - 0x30], al	       310	ref-filter.c	FUNCTION_13
0x1181	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       310	ref-filter.c	FUNCTION_13
0x1189	    0xc745a4ffffff	     mov dword [rbp - 0x5c], 0xffffffff 	       312	ref-filter.c	FUNCTION_13
0x1190	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       314	ref-filter.c	FUNCTION_13	IF_1
0x1195	            0x7528	                           jne 0x40011ff	       314	ref-filter.c	FUNCTION_13	IF_1
0x1197	      0xbf00000000	                              mov edi, 0	       315	ref-filter.c	FUNCTION_13	CALL_2
0x119c	      0xe8bcf2ffff	                               call sym.	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11a1	          0x4889c2	                            mov rdx, rax	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11a4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11a8	      0xbeffffffff	                     mov esi, 0xffffffff	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11ad	          0x4889c7	                            mov rdi, rax	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11b0	      0xb800000000	                              mov eax, 0	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11b5	      0xe85af4ffff	                call sym.strbuf_addf_ret	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11ba	      0xe929020000	                           jmp 0x4001428	       315	ref-filter.c	FUNCTION_13	CALL_2
0x11bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       317	ref-filter.c	FUNCTION_13
0x11c3	    0xc70000000000	                      mov dword [rax], 0	       317	ref-filter.c	FUNCTION_13
0x11c9	        0x488b7588	             mov rsi, qword [rbp - 0x78]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11cd	        0x488d45c0	                   lea rax, [rbp - 0x40]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11d1	      0xb9ffffffff	                     mov ecx, 0xffffffff	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11d6	      0xba2c000000	                           mov edx, 0x2c	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11db	          0x4889c7	                            mov rdi, rax	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11de	      0xe800000000	                          call 0x4001223	       319	ref-filter.c	FUNCTION_13	CALL_3
0x11e3	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x11ea	      0xe98d010000	                           jmp 0x40013bc	       320	ref-filter.c	FUNCTION_13	FOR_1
0x11ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x11f3	          0x8b55a8	             mov edx, dword [rbp - 0x58]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x11f6	          0x4863d2	                         movsxd rdx, edx	       321	ref-filter.c	FUNCTION_13	FOR_1
0x11f9	        0x48c1e204	                              shl rdx, 4	       321	ref-filter.c	FUNCTION_13	FOR_1
0x11fd	          0x4801d0	                            add rax, rdx	       321	ref-filter.c	FUNCTION_13	FOR_1
0x1200	          0x488b00	                    mov rax, qword [rax]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x1203	        0x488945b0	             mov qword [rbp - 0x50], rax	       321	ref-filter.c	FUNCTION_13	FOR_1
0x1207	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x120b	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x120f	      0xbe00000000	                              mov esi, 0	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x1214	          0x4889c7	                            mov rdi, rax	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x1217	      0xe8efedffff	                    call sym.skip_prefix	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x121c	            0x85c0	                           test eax, eax	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x121e	            0x7466	                            je 0x40012c6	       324	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_4
0x1220	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x1224	          0x4889c7	                            mov rdi, rax	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x1227	      0xe89afeffff	           call sym.parse_align_position	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x122c	          0x8945ac	             mov dword [rbp - 0x54], eax	       325	ref-filter.c	FUNCTION_13	FOR_1	IF_2	CALL_5
0x122f	        0x837dac00	               cmp dword [rbp - 0x54], 0	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1233	            0x7943	                           jns 0x40012b8	       326	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1235	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1239	      0xbf00000000	                              mov edi, 0	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x123e	      0xe81af2ffff	                               call sym.	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1243	          0x4889c1	                            mov rcx, rax	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1246	        0x488b4580	             mov rax, qword [rbp - 0x80]	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x124a	          0x4889da	                            mov rdx, rbx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x124d	          0x4889ce	                            mov rsi, rcx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1250	          0x4889c7	                            mov rdi, rax	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1253	      0xb800000000	                              mov eax, 0	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x1258	      0xe800000000	                          call 0x400129d	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x125d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x1261	      0xbe00000000	                              mov esi, 0	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x1266	          0x4889c7	                            mov rdi, rax	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x1269	      0xe800000000	                          call 0x40012ae	       328	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_8
0x126e	      0xb8ffffffff	                     mov eax, 0xffffffff	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1273	      0xe970010000	                           jmp 0x4001428	       329	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3
0x1278	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x127b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x127f	            0x8910	                    mov dword [rax], edx	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x1281	      0xe9f2000000	                           jmp 0x40013b8	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x1286	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x128a	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x128e	      0xbe00000000	                              mov esi, 0	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x1293	          0x4889c7	                            mov rdi, rax	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x1296	      0xe870edffff	                    call sym.skip_prefix	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x129b	            0x85c0	                           test eax, eax	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x129d	            0x7460	                            je 0x400133f	       332	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	CALL_9
0x129f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12a3	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12a7	      0xbe0a000000	                            mov esi, 0xa	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12ac	          0x4889c7	                            mov rdi, rax	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12af	      0xe843eeffff	                     call sym.strtoul_ui	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12b4	            0x85c0	                           test eax, eax	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12b6	     0xf84bc000000	                            je 0x40013b8	       333	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_10
0x12bc	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12c0	      0xbf00000000	                              mov edi, 0	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12c5	      0xe893f1ffff	                               call sym.	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12ca	          0x4889c1	                            mov rcx, rax	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12cd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12d1	          0x4889da	                            mov rdx, rbx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12d4	          0x4889ce	                            mov rsi, rcx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12d7	          0x4889c7	                            mov rdi, rax	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12da	      0xb800000000	                              mov eax, 0	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12df	      0xe800000000	                          call 0x4001324	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x12e4	        0x488d45c0	                   lea rax, [rbp - 0x40]	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x12e8	      0xbe00000000	                              mov esi, 0	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x12ed	          0x4889c7	                            mov rdi, rax	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x12f0	      0xe800000000	                          call 0x4001335	       335	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_13
0x12f5	      0xb8ffffffff	                     mov eax, 0xffffffff	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x12fa	      0xe9e9000000	                           jmp 0x4001428	       336	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5
0x12ff	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x1303	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x1307	      0xbe0a000000	                            mov esi, 0xa	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x130c	          0x4889c7	                            mov rdi, rax	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x130f	      0xe8e3edffff	                     call sym.strtoul_ui	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x1314	            0x85c0	                           test eax, eax	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x1316	            0x7460	                            je 0x40013b8	       338	ref-filter.c	FUNCTION_13	FOR_1	ELSE_2	IF_6	CALL_14
0x1318	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x131c	          0x4889c7	                            mov rdi, rax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x131f	      0xe8a2fdffff	           call sym.parse_align_position	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x1324	          0x8945ac	             mov dword [rbp - 0x54], eax	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x1327	        0x837dac00	               cmp dword [rbp - 0x54], 0	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x132b	            0x780b	                            js 0x4001378	       340	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7	CALL_15
0x132d	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x1330	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x1334	            0x8910	                    mov dword [rax], edx	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x1336	            0xeb40	                           jmp 0x40013b8	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x1338	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x133c	      0xbf00000000	                              mov edi, 0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1341	      0xe817f1ffff	                               call sym.	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1346	          0x4889c1	                            mov rcx, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1349	        0x488b4580	             mov rax, qword [rbp - 0x80]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x134d	          0x4889da	                            mov rdx, rbx	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1350	          0x4889ce	                            mov rsi, rcx	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1353	          0x4889c7	                            mov rdi, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1356	      0xb800000000	                              mov eax, 0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x135b	      0xe800000000	                          call 0x40013a0	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x1360	        0x488d45c0	                   lea rax, [rbp - 0x40]	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x1364	      0xbe00000000	                              mov esi, 0	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x1369	          0x4889c7	                            mov rdi, rax	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x136c	      0xe800000000	                          call 0x40013b1	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x1371	      0xb8ffffffff	                     mov eax, 0xffffffff	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x1376	            0xeb70	                           jmp 0x4001428	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x1378	        0x8345a801	               add dword [rbp - 0x58], 1	       320	ref-filter.c	FUNCTION_13	FOR_1
0x137c	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       320	ref-filter.c	FUNCTION_13	FOR_1
0x137f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       320	ref-filter.c	FUNCTION_13	FOR_1
0x1382	            0x39c2	                            cmp edx, eax	       320	ref-filter.c	FUNCTION_13	FOR_1
0x1384	     0xf8765feffff	                            ja 0x400122f	       320	ref-filter.c	FUNCTION_13	FOR_1
0x138a	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       349	ref-filter.c	FUNCTION_13	IF_8
0x138d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       349	ref-filter.c	FUNCTION_13	IF_8
0x1390	            0x7536	                           jne 0x4001408	       349	ref-filter.c	FUNCTION_13	IF_8
0x1392	        0x488d45c0	                   lea rax, [rbp - 0x40]	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x1396	      0xbe00000000	                              mov esi, 0	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x139b	          0x4889c7	                            mov rdi, rax	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x139e	      0xe800000000	                          call 0x40013e3	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x13a3	      0xbf00000000	                              mov edi, 0	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13a8	      0xe8b0f0ffff	                               call sym.	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13ad	          0x4889c2	                            mov rdx, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13b0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13b4	      0xbeffffffff	                     mov esi, 0xffffffff	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13b9	          0x4889c7	                            mov rdi, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13bc	      0xb800000000	                              mov eax, 0	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13c1	      0xe84ef2ffff	                call sym.strbuf_addf_ret	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13c6	            0xeb20	                           jmp 0x4001428	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x13c8	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       353	ref-filter.c	FUNCTION_13
0x13cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       353	ref-filter.c	FUNCTION_13
0x13cf	          0x895004	                mov dword [rax + 4], edx	       353	ref-filter.c	FUNCTION_13
0x13d2	        0x488d45c0	                   lea rax, [rbp - 0x40]	       354	ref-filter.c	FUNCTION_13	CALL_22
0x13d6	      0xbe00000000	                              mov esi, 0	       354	ref-filter.c	FUNCTION_13	CALL_22
0x13db	          0x4889c7	                            mov rdi, rax	       354	ref-filter.c	FUNCTION_13	CALL_22
0x13de	      0xe800000000	                          call 0x4001423	       354	ref-filter.c	FUNCTION_13	CALL_22
0x13e3	      0xb800000000	                              mov eax, 0	       355	ref-filter.c	FUNCTION_13
0x13e8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       356	ref-filter.c	FUNCTION_13
0x13ec	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       356	ref-filter.c	FUNCTION_13
0x13f5	            0x7405	                            je 0x400143c	       356	ref-filter.c	FUNCTION_13
0x13f7	      0xe800000000	                          call 0x400143c	       356	ref-filter.c	FUNCTION_13
0x13fc	        0x4883c478	                           add rsp, 0x78	       356	ref-filter.c	FUNCTION_13
0x1400	              0x5b	                                 pop rbx	       356	ref-filter.c	FUNCTION_13
0x1401	              0x5d	                                 pop rbp	       356	ref-filter.c	FUNCTION_13
0x1402	              0xc3	                                     ret	       356	ref-filter.c	FUNCTION_13
copy_subject	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	33
0x2c55	              0x55	                                push rbp	       958	ref-filter.c	FUNCTION_40
0x2c56	          0x4889e5	                            mov rbp, rsp	       958	ref-filter.c	FUNCTION_40
0x2c59	        0x4883ec20	                           sub rsp, 0x20	       958	ref-filter.c	FUNCTION_40
0x2c5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       958	ref-filter.c	FUNCTION_40
0x2c61	        0x488975e0	             mov qword [rbp - 0x20], rsi	       958	ref-filter.c	FUNCTION_40
0x2c65	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c6d	          0x4889d6	                            mov rsi, rdx	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c70	          0x4889c7	                            mov rdi, rax	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c73	      0xe800000000	                          call 0x4002cb8	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c78	        0x488945f8	                mov qword [rbp - 8], rax	       959	ref-filter.c	FUNCTION_40	CALL_1
0x2c7c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2c83	            0xeb28	                           jmp 0x4002ced	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2c85	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c88	          0x4863d0	                         movsxd rdx, eax	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c8f	          0x4801d0	                            add rax, rdx	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c92	           0xfb600	                   movzx eax, byte [rax]	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c95	            0x3c0a	                             cmp al, 0xa	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c97	            0x7510	                           jne 0x4002ce9	       963	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c99	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c9c	          0x4863d0	                         movsxd rdx, eax	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2ca3	          0x4801d0	                            add rax, rdx	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2ca6	          0xc60020	                    mov byte [rax], 0x20	       964	ref-filter.c	FUNCTION_40	FOR_1	IF_1
0x2ca9	        0x8345f401	                add dword [rbp - 0xc], 1	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2cad	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2cb0	            0x4898	                                    cdqe	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2cb2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2cb6	            0x72cd	                            jb 0x4002cc5	       962	ref-filter.c	FUNCTION_40	FOR_1
0x2cb8	        0x488b45f8	                mov rax, qword [rbp - 8]	       966	ref-filter.c	FUNCTION_40
0x2cbc	              0xc9	                                   leave	       967	ref-filter.c	FUNCTION_40
0x2cbd	              0xc3	                                     ret	       967	ref-filter.c	FUNCTION_40
compare_refs	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	34
0x6230	              0x55	                                push rbp	      2182	ref-filter.c	FUNCTION_80
0x6231	          0x4889e5	                            mov rbp, rsp	      2182	ref-filter.c	FUNCTION_80
0x6234	        0x4883ec40	                           sub rsp, 0x40	      2182	ref-filter.c	FUNCTION_80
0x6238	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2182	ref-filter.c	FUNCTION_80
0x623c	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2182	ref-filter.c	FUNCTION_80
0x6240	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2182	ref-filter.c	FUNCTION_80
0x6244	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	ref-filter.c	FUNCTION_80
0x6248	          0x488b00	                    mov rax, qword [rax]	      2183	ref-filter.c	FUNCTION_80
0x624b	        0x488945f0	             mov qword [rbp - 0x10], rax	      2183	ref-filter.c	FUNCTION_80
0x624f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2184	ref-filter.c	FUNCTION_80
0x6253	          0x488b00	                    mov rax, qword [rax]	      2184	ref-filter.c	FUNCTION_80
0x6256	        0x488945f8	                mov qword [rbp - 8], rax	      2184	ref-filter.c	FUNCTION_80
0x625a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x625e	        0x488945e8	             mov qword [rbp - 0x18], rax	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x6262	            0xeb30	                           jmp 0x40062d4	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x6264	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x6268	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x626c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x6270	          0x4889ce	                            mov rsi, rcx	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x6273	          0x4889c7	                            mov rdi, rax	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x6276	      0xe8dffdffff	                call sym.cmp_ref_sorting	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x627b	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2188	ref-filter.c	FUNCTION_80	FOR_1	CALL_1
0x627e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x6282	            0x7405	                            je 0x40062c9	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x6284	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2190	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x6287	            0xeb17	                           jmp 0x40062e0	      2190	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x6289	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x628d	          0x488b00	                    mov rax, qword [rax]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x6290	        0x488945e8	             mov qword [rbp - 0x18], rax	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x6294	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x6299	            0x75c9	                           jne 0x40062a4	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x629b	      0xb800000000	                              mov eax, 0	      2192	ref-filter.c	FUNCTION_80
0x62a0	              0xc9	                                   leave	      2193	ref-filter.c	FUNCTION_80
0x62a1	              0xc3	                                     ret	      2193	ref-filter.c	FUNCTION_80
find_longest_prefix	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	35
0x541d	              0x55	                                push rbp	      1824	ref-filter.c	FUNCTION_67
0x541e	          0x4889e5	                            mov rbp, rsp	      1824	ref-filter.c	FUNCTION_67
0x5421	        0x4883ec20	                           sub rsp, 0x20	      1824	ref-filter.c	FUNCTION_67
0x5425	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1824	ref-filter.c	FUNCTION_67
0x5429	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1824	ref-filter.c	FUNCTION_67
0x542d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5431	        0x488945f8	                mov qword [rbp - 8], rax	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5435	            0xeb05	                           jmp 0x400547c	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5437	      0x488345f801	                  add qword [rbp - 8], 1	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x543c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5440	           0xfb600	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5443	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5445	            0x741d	                            je 0x40054a4	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5447	        0x488b45f8	                mov rax, qword [rbp - 8]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x544b	           0xfb600	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x544e	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5451	            0x4898	                                    cdqe	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5453	     0xfb680000000	                   movzx eax, byte [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x545a	           0xfb6c0	                           movzx eax, al	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x545d	          0x83e008	                              and eax, 8	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5460	            0x85c0	                           test eax, eax	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5462	            0x74d3	                            je 0x4005477	      1827	ref-filter.c	FUNCTION_67	FOR_1	CALL_1
0x5464	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5468	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x546c	          0x4829c2	                            sub rdx, rax	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x546f	          0x4889d0	                            mov rax, rdx	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5472	          0x4889c2	                            mov rdx, rax	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5475	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x547d	          0x4889ce	                            mov rsi, rcx	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5480	          0x4889c7	                            mov rdi, rax	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5483	      0xe800000000	                          call 0x40054c8	      1830	ref-filter.c	FUNCTION_67	CALL_2
0x5488	              0x90	                                     nop	      1831	ref-filter.c	FUNCTION_67
0x5489	              0xc9	                                   leave	      1831	ref-filter.c	FUNCTION_67
0x548a	              0xc3	                                     ret	      1831	ref-filter.c	FUNCTION_67
ref_kind_from_refname	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,3:ELSE,0:functions,0:IF,2	35
0x57e4	              0x55	                                push rbp	      1939	ref-filter.c	FUNCTION_72
0x57e5	          0x4889e5	                            mov rbp, rsp	      1939	ref-filter.c	FUNCTION_72
0x57e8	        0x4883ec20	                           sub rsp, 0x20	      1939	ref-filter.c	FUNCTION_72
0x57ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1939	ref-filter.c	FUNCTION_72
0x57f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x57f4	      0xbe00000000	                              mov esi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x57f9	          0x4889c7	                            mov rdi, rax	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x57fc	      0xe800000000	                          call 0x4005841	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x5801	            0x85c0	                           test eax, eax	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x5803	            0x7507	                           jne 0x400584c	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x5805	      0xb820000000	                           mov eax, 0x20	      1952	ref-filter.c	FUNCTION_72	IF_1
0x580a	            0xeb4c	                           jmp 0x4005898	      1952	ref-filter.c	FUNCTION_72	IF_1
0x580c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1954	ref-filter.c	FUNCTION_72	FOR_1	CALL_2
0x5813	            0xeb38	                           jmp 0x400588d	      1954	ref-filter.c	FUNCTION_72	FOR_1	CALL_2
0x5815	          0x8b45fc	                mov eax, dword [rbp - 4]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5818	        0x48c1e004	                              shl rax, 4	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x581c	    0x480500000000	                              add rax, 0	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5822	          0x488b10	                    mov rdx, qword [rax]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5825	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5829	          0x4889d6	                            mov rsi, rdx	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x582c	          0x4889c7	                            mov rdi, rax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x582f	      0xe800000000	                          call 0x4005874	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5834	            0x85c0	                           test eax, eax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5836	            0x7411	                            je 0x4005889	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_3
0x5838	          0x8b45fc	                mov eax, dword [rbp - 4]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x583b	        0x48c1e004	                              shl rax, 4	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x583f	    0x480500000000	                              add rax, 0	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x5845	            0x8b00	                    mov eax, dword [rax]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x5847	            0xeb0f	                           jmp 0x4005898	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x5849	        0x8345fc01	                  add dword [rbp - 4], 1	      1954	ref-filter.c	FUNCTION_72	FOR_1	CALL_2
0x584d	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1954	ref-filter.c	FUNCTION_72	FOR_1	CALL_2
0x5851	            0x76c2	                           jbe 0x4005855	      1954	ref-filter.c	FUNCTION_72	FOR_1	CALL_2
0x5853	      0xb810000000	                           mov eax, 0x10	      1959	ref-filter.c	FUNCTION_72
0x5858	              0xc9	                                   leave	      1960	ref-filter.c	FUNCTION_72
0x5859	              0xc3	                                     ret	      1960	ref-filter.c	FUNCTION_72
free_array_item	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	14
0x5ad7	              0x55	                                push rbp	      2038	ref-filter.c	FUNCTION_75
0x5ad8	          0x4889e5	                            mov rbp, rsp	      2038	ref-filter.c	FUNCTION_75
0x5adb	        0x4883ec10	                           sub rsp, 0x10	      2038	ref-filter.c	FUNCTION_75
0x5adf	        0x48897df8	                mov qword [rbp - 8], rdi	      2038	ref-filter.c	FUNCTION_75
0x5ae3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x5ae7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x5aeb	          0x4889c7	                            mov rdi, rax	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x5aee	      0xe800000000	                          call 0x4005b33	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x5af3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x5af7	          0x4889c7	                            mov rdi, rax	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x5afa	      0xe800000000	                          call 0x4005b3f	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x5aff	              0x90	                                     nop	      2041	ref-filter.c	FUNCTION_75
0x5b00	              0xc9	                                   leave	      2041	ref-filter.c	FUNCTION_75
0x5b01	              0xc3	                                     ret	      2041	ref-filter.c	FUNCTION_75
lstrip_ref_components	SWITCH,1:DO,0:FOR,1:WHILE,1:CALL,0:ELSE,0:functions,0:IF,1	62
0x3a08	              0x55	                                push rbp	      1242	ref-filter.c	FUNCTION_49
0x3a09	          0x4889e5	                            mov rbp, rsp	      1242	ref-filter.c	FUNCTION_49
0x3a0c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1242	ref-filter.c	FUNCTION_49
0x3a10	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1242	ref-filter.c	FUNCTION_49
0x3a13	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1243	ref-filter.c	FUNCTION_49
0x3a16	            0x4898	                                    cdqe	      1243	ref-filter.c	FUNCTION_49
0x3a18	        0x488945e8	             mov qword [rbp - 0x18], rax	      1243	ref-filter.c	FUNCTION_49
0x3a1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1244	ref-filter.c	FUNCTION_49
0x3a20	        0x488945f0	             mov qword [rbp - 0x10], rax	      1244	ref-filter.c	FUNCTION_49
0x3a24	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1246	ref-filter.c	FUNCTION_49	IF_1
0x3a28	     0xf898d000000	                           jns 0x4003afb	      1246	ref-filter.c	FUNCTION_49	IF_1
0x3a2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1248	ref-filter.c	FUNCTION_49	IF_1
0x3a32	        0x488945f8	                mov qword [rbp - 8], rax	      1248	ref-filter.c	FUNCTION_49	IF_1
0x3a36	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a3d	            0xeb2b	                           jmp 0x4003aaa	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a3f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a42	          0x4863d0	                         movsxd rdx, eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a45	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a49	          0x4801d0	                            add rax, rdx	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a4c	           0xfb600	                   movzx eax, byte [rax]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a4f	            0x3c2f	                            cmp al, 0x2f	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a51	            0x750b	                           jne 0x4003a9e	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a53	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a56	          0x83c001	                              add eax, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a59	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a5c	            0xeb0c	                           jmp 0x4003aaa	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a62	        0x4883c001	                              add rax, 1	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a66	        0x488945f8	                mov qword [rbp - 8], rax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a6a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a6d	          0x4863d0	                         movsxd rdx, eax	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a70	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a74	          0x4801d0	                            add rax, rdx	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a77	           0xfb600	                   movzx eax, byte [rax]	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a7a	            0x84c0	                             test al, al	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a7c	            0x75c1	                           jne 0x4003a7f	      1251	ref-filter.c	FUNCTION_49	IF_1	FOR_1
0x3a7e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a81	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a84	             0x1d0	                            add eax, edx	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a86	          0x83c001	                              add eax, 1	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a89	            0x4898	                                    cdqe	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a8b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1259	ref-filter.c	FUNCTION_49	IF_1
0x3a8f	            0xeb2a	                           jmp 0x4003afb	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x3a91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3a95	        0x488d5001	                      lea rdx, [rax + 1]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3a99	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3a9d	           0xfb600	                   movzx eax, byte [rax]	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aa0	           0xfbec0	                           movsx eax, al	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aa3	            0x85c0	                           test eax, eax	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aa5	            0x7407	                            je 0x4003aee	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aa7	          0x83f82f	                           cmp eax, 0x2f	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aaa	            0x7409	                            je 0x4003af5	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aac	            0xeb0d	                           jmp 0x4003afb	      1263	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aae	      0xb800000000	                              mov eax, 0	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3ab3	            0xeb11	                           jmp 0x4003b06	      1265	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3ab5	      0x48836de801	               sub qword [rbp - 0x18], 1	      1267	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3aba	              0x90	                                     nop	      1268	ref-filter.c	FUNCTION_49	WHILE_1	SWITCH_1
0x3abb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x3ac0	            0x7fcf	                            jg 0x4003ad1	      1262	ref-filter.c	FUNCTION_49	WHILE_1
0x3ac2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1272	ref-filter.c	FUNCTION_49
0x3ac6	              0x5d	                                 pop rbp	      1273	ref-filter.c	FUNCTION_49
0x3ac7	              0xc3	                                     ret	      1273	ref-filter.c	FUNCTION_49
objectname_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,7:ELSE,3:functions,0:IF,5	81
0xf60	              0x55	                                push rbp	       272	ref-filter.c	FUNCTION_10
0xf61	          0x4889e5	                            mov rbp, rsp	       272	ref-filter.c	FUNCTION_10
0xf64	              0x53	                                push rbx	       272	ref-filter.c	FUNCTION_10
0xf65	        0x4883ec28	                           sub rsp, 0x28	       272	ref-filter.c	FUNCTION_10
0xf69	        0x48897de8	             mov qword [rbp - 0x18], rdi	       272	ref-filter.c	FUNCTION_10
0xf6d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       272	ref-filter.c	FUNCTION_10
0xf71	        0x488955d8	             mov qword [rbp - 0x28], rdx	       272	ref-filter.c	FUNCTION_10
0xf75	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       272	ref-filter.c	FUNCTION_10
0xf79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	ref-filter.c	FUNCTION_10	IF_1
0xf7d	          0x4885c0	                           test rax, rax	       273	ref-filter.c	FUNCTION_10	IF_1
0xf80	            0x7510	                           jne 0x4000fd2	       273	ref-filter.c	FUNCTION_10	IF_1
0xf82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       274	ref-filter.c	FUNCTION_10	IF_1
0xf86	    0xc74010000000	               mov dword [rax + 0x10], 0	       274	ref-filter.c	FUNCTION_10	IF_1
0xf8d	      0xe9ef000000	                           jmp 0x40010c1	       274	ref-filter.c	FUNCTION_10	IF_1
0xf92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xf96	      0xbe00000000	                              mov esi, 0	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xf9b	          0x4889c7	                            mov rdi, rax	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xf9e	      0xe800000000	                          call 0x4000fe3	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xfa3	            0x85c0	                           test eax, eax	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xfa5	            0x7510	                           jne 0x4000ff7	       275	ref-filter.c	FUNCTION_10	ELSE_1	IF_2	CALL_1
0xfa7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0xfab	    0xc74010020000	               mov dword [rax + 0x10], 2	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0xfb2	      0xe9ca000000	                           jmp 0x40010c1	       276	ref-filter.c	FUNCTION_10	ELSE_1	IF_2
0xfb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfbb	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfbf	      0xbe00000000	                              mov esi, 0	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfc4	          0x4889c7	                            mov rdi, rax	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfc7	      0xe83ff0ffff	                    call sym.skip_prefix	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfcc	            0x85c0	                           test eax, eax	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfce	     0xf8481000000	                            je 0x4001095	       277	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_2
0xfd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       278	ref-filter.c	FUNCTION_10	ELSE_2	IF_3
0xfd8	    0xc74010010000	               mov dword [rax + 0x10], 1	       278	ref-filter.c	FUNCTION_10	ELSE_2	IF_3
0xfdf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xfe3	        0x488d5014	                   lea rdx, [rax + 0x14]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xfe7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xfeb	      0xbe0a000000	                            mov esi, 0xa	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xff0	          0x4889c7	                            mov rdi, rax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xff3	      0xe8fff0ffff	                     call sym.strtoul_ui	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xff8	            0x85c0	                           test eax, eax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xffa	            0x750b	                           jne 0x4001047	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0xffc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4
0x1000	          0x8b4014	            mov eax, dword [rax + 0x14] 	       280	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4
0x1003	            0x85c0	                           test eax, eax	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x1005	            0x752c	                           jne 0x4001073	       279	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_4	CALL_3
0x1007	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x100b	      0xbf00000000	                              mov edi, 0	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1010	      0xe848f4ffff	                               call sym.	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1015	          0x4889c2	                            mov rdx, rax	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1018	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x101c	          0x4889d9	                            mov rcx, rbx	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x101f	      0xbeffffffff	                     mov esi, 0xffffffff	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1024	          0x4889c7	                            mov rdi, rax	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1027	      0xb800000000	                              mov eax, 0	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x102c	      0xe8e3f5ffff	                call sym.strbuf_addf_ret	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1031	            0xeb53	                           jmp 0x40010c6	       281	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	CALL_5
0x1033	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1037	          0x8b4014	            mov eax, dword [rax + 0x14] 	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x103a	    0x8b1500000000	            mov edx, dword [0x04001080] 	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1040	            0x39d0	                            cmp eax, edx	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1042	            0x733d	                           jae 0x40010c1	       282	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1044	    0x8b0500000000	            mov eax, dword [0x0400108a] 	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x104a	            0x89c2	                            mov edx, eax	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x104c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1050	          0x895014	             mov dword [rax + 0x14], edx	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1053	            0xeb2c	                           jmp 0x40010c1	       283	ref-filter.c	FUNCTION_10	ELSE_2	IF_3	IF_5
0x1055	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1059	      0xbf00000000	                              mov edi, 0	       285	ref-filter.c	FUNCTION_10	CALL_7
0x105e	      0xe8faf3ffff	                               call sym.	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1063	          0x4889c2	                            mov rdx, rax	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1066	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       285	ref-filter.c	FUNCTION_10	CALL_7
0x106a	          0x4889d9	                            mov rcx, rbx	       285	ref-filter.c	FUNCTION_10	CALL_7
0x106d	      0xbeffffffff	                     mov esi, 0xffffffff	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1072	          0x4889c7	                            mov rdi, rax	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1075	      0xb800000000	                              mov eax, 0	       285	ref-filter.c	FUNCTION_10	CALL_7
0x107a	      0xe895f5ffff	                call sym.strbuf_addf_ret	       285	ref-filter.c	FUNCTION_10	CALL_7
0x107f	            0xeb05	                           jmp 0x40010c6	       285	ref-filter.c	FUNCTION_10	CALL_7
0x1081	      0xb800000000	                              mov eax, 0	       286	ref-filter.c	FUNCTION_10
0x1086	        0x4883c428	                           add rsp, 0x28	       287	ref-filter.c	FUNCTION_10
0x108a	              0x5b	                                 pop rbx	       287	ref-filter.c	FUNCTION_10
0x108b	              0x5d	                                 pop rbp	       287	ref-filter.c	FUNCTION_10
0x108c	              0xc3	                                     ret	       287	ref-filter.c	FUNCTION_10
grab_date	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,7:ELSE,0:functions,0:IF,4	89
0x2cbe	              0x55	                                push rbp	       970	ref-filter.c	FUNCTION_41
0x2cbf	          0x4889e5	                            mov rbp, rsp	       970	ref-filter.c	FUNCTION_41
0x2cc2	        0x4883ec70	                           sub rsp, 0x70	       970	ref-filter.c	FUNCTION_41
0x2cc6	        0x48897da8	             mov qword [rbp - 0x58], rdi	       970	ref-filter.c	FUNCTION_41
0x2cca	        0x488975a0	             mov qword [rbp - 0x60], rsi	       970	ref-filter.c	FUNCTION_41
0x2cce	        0x48895598	             mov qword [rbp - 0x68], rdx	       970	ref-filter.c	FUNCTION_41
0x2cd2	    0x64488b042528	                mov rax, qword fs:[0x28]	       970	ref-filter.c	FUNCTION_41
0x2cdb	        0x488945f8	                mov qword [rbp - 8], rax	       970	ref-filter.c	FUNCTION_41
0x2cdf	            0x31c0	                            xor eax, eax	       970	ref-filter.c	FUNCTION_41
0x2ce1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       971	ref-filter.c	FUNCTION_41	CALL_1
0x2ce5	      0xbe00000000	                              mov esi, 0	       971	ref-filter.c	FUNCTION_41	CALL_1
0x2cea	          0x4889c7	                            mov rdi, rax	       971	ref-filter.c	FUNCTION_41	CALL_1
0x2ced	      0xe800000000	                          call 0x4002d32	       971	ref-filter.c	FUNCTION_41	CALL_1
0x2cf2	        0x488945c0	             mov qword [rbp - 0x40], rax	       971	ref-filter.c	FUNCTION_41	CALL_1
0x2cf6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       975	ref-filter.c	FUNCTION_41
0x2cfe	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       975	ref-filter.c	FUNCTION_41
0x2d06	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       975	ref-filter.c	FUNCTION_41
0x2d0e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       984	ref-filter.c	FUNCTION_41	CALL_2
0x2d12	      0xbe3a000000	                           mov esi, 0x3a	       984	ref-filter.c	FUNCTION_41	CALL_2
0x2d17	          0x4889c7	                            mov rdi, rax	       984	ref-filter.c	FUNCTION_41	CALL_2
0x2d1a	      0xe800000000	                          call 0x4002d5f	       984	ref-filter.c	FUNCTION_41	CALL_2
0x2d1f	        0x488945c8	             mov qword [rbp - 0x38], rax	       984	ref-filter.c	FUNCTION_41	CALL_2
0x2d23	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       985	ref-filter.c	FUNCTION_41	IF_1
0x2d28	            0x7418	                            je 0x4002d82	       985	ref-filter.c	FUNCTION_41	IF_1
0x2d2a	      0x488345c801	               add qword [rbp - 0x38], 1	       986	ref-filter.c	FUNCTION_41	IF_1
0x2d2f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x2d33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x2d37	          0x4889d6	                            mov rsi, rdx	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x2d3a	          0x4889c7	                            mov rdi, rax	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x2d3d	      0xe800000000	                          call 0x4002d82	       987	ref-filter.c	FUNCTION_41	IF_1	CALL_3
0x2d42	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       990	ref-filter.c	FUNCTION_41	IF_2
0x2d47	     0xf84a9000000	                            je 0x4002e36	       990	ref-filter.c	FUNCTION_41	IF_2
0x2d4d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d51	        0x488d4802	                      lea rcx, [rax + 2]	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d55	        0x488d45b8	                   lea rax, [rbp - 0x48]	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d59	      0xba0a000000	                            mov edx, 0xa	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d5e	          0x4889c6	                            mov rsi, rax	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d61	          0x4889cf	                            mov rdi, rcx	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d64	      0xe800000000	                          call 0x4002da9	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d69	        0x488945d0	             mov qword [rbp - 0x30], rax	       992	ref-filter.c	FUNCTION_41	CALL_4
0x2d6d	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	       993	ref-filter.c	FUNCTION_41	IF_3
0x2d72	     0xf8481000000	                            je 0x4002e39	       993	ref-filter.c	FUNCTION_41	IF_3
0x2d78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d7c	      0xba0a000000	                            mov edx, 0xa	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d81	      0xbe00000000	                              mov esi, 0	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d86	          0x4889c7	                            mov rdi, rax	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d89	      0xe800000000	                          call 0x4002dce	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d8e	        0x488945d8	             mov qword [rbp - 0x28], rax	       995	ref-filter.c	FUNCTION_41	CALL_5
0x2d92	    0x48b800000000	          movabs rax, 0x8000000000000000	       996	ref-filter.c	FUNCTION_41	IF_4
0x2d9c	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       996	ref-filter.c	FUNCTION_41	IF_4
0x2da0	            0x7410	                            je 0x4002df2	       996	ref-filter.c	FUNCTION_41	IF_4
0x2da2	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       996	ref-filter.c	FUNCTION_41	IF_4
0x2dac	        0x483945d8	            cmp qword [rbp - 0x28], rax 	       996	ref-filter.c	FUNCTION_41	IF_4
0x2db0	            0x750c	                           jne 0x4002dfe	       996	ref-filter.c	FUNCTION_41	IF_4
0x2db2	      0xe800000000	                          call 0x4002df7	       996	ref-filter.c	FUNCTION_41	IF_4
0x2db7	            0x8b00	                    mov eax, dword [rax]	       996	ref-filter.c	FUNCTION_41	IF_4
0x2db9	          0x83f822	                           cmp eax, 0x22	       996	ref-filter.c	FUNCTION_41	IF_4
0x2dbc	            0x743e	                            je 0x4002e3c	       996	ref-filter.c	FUNCTION_41	IF_4
0x2dbe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dc2	            0x89c1	                            mov ecx, eax	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dc4	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dc8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dcc	            0x89ce	                            mov esi, ecx	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dce	          0x4889c7	                            mov rdi, rax	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dd1	      0xe800000000	                          call 0x4002e16	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dd6	          0x4889c7	                            mov rdi, rax	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dd9	      0xe800000000	                          call 0x4002e1e	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2dde	          0x4889c2	                            mov rdx, rax	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2de1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2de5	          0x488910	                    mov qword [rax], rdx	       998	ref-filter.c	FUNCTION_41	CALL_7
0x2de8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       999	ref-filter.c	FUNCTION_41
0x2dec	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       999	ref-filter.c	FUNCTION_41
0x2df0	        0x48895010	             mov qword [rax + 0x10], rdx	       999	ref-filter.c	FUNCTION_41
0x2df4	            0xeb1e	                           jmp 0x4002e54	       999	ref-filter.c	FUNCTION_41
0x2df6	              0x90	                                     nop	       991	ref-filter.c	FUNCTION_41	IF_2
0x2df7	            0xeb04	                           jmp 0x4002e3d	       991	ref-filter.c	FUNCTION_41	IF_2
0x2df9	              0x90	                                     nop	       994	ref-filter.c	FUNCTION_41	IF_3
0x2dfa	            0xeb01	                           jmp 0x4002e3d	       994	ref-filter.c	FUNCTION_41	IF_3
0x2dfc	              0x90	                                     nop	       997	ref-filter.c	FUNCTION_41	IF_4
0x2dfd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1002	ref-filter.c	FUNCTION_41
0x2e01	    0x48c700000000	                      mov qword [rax], 0	      1002	ref-filter.c	FUNCTION_41
0x2e08	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1003	ref-filter.c	FUNCTION_41
0x2e0c	    0x48c740100000	               mov qword [rax + 0x10], 0	      1003	ref-filter.c	FUNCTION_41
0x2e14	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	ref-filter.c	FUNCTION_41
0x2e18	    0x644833042528	                xor rax, qword fs:[0x28]	      1004	ref-filter.c	FUNCTION_41
0x2e21	            0x7405	                            je 0x4002e68	      1004	ref-filter.c	FUNCTION_41
0x2e23	      0xe800000000	                          call 0x4002e68	      1004	ref-filter.c	FUNCTION_41
0x2e28	              0xc9	                                   leave	      1004	ref-filter.c	FUNCTION_41
0x2e29	              0xc3	                                     ret	      1004	ref-filter.c	FUNCTION_41
copy_name	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	36
0x2b66	              0x55	                                push rbp	       936	ref-filter.c	FUNCTION_38
0x2b67	          0x4889e5	                            mov rbp, rsp	       936	ref-filter.c	FUNCTION_38
0x2b6a	        0x4883ec20	                           sub rsp, 0x20	       936	ref-filter.c	FUNCTION_38
0x2b6e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       936	ref-filter.c	FUNCTION_38
0x2b72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2b76	        0x488945f8	                mov qword [rbp - 8], rax	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2b7a	            0xeb41	                           jmp 0x4002bfd	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2b7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b80	      0xba02000000	                              mov edx, 2	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b85	      0xbe00000000	                              mov esi, 0	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b8a	          0x4889c7	                            mov rdi, rax	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b8d	      0xe800000000	                          call 0x4002bd2	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b92	            0x85c0	                           test eax, eax	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b94	            0x7522	                           jne 0x4002bf8	       939	ref-filter.c	FUNCTION_38	FOR_1	IF_1	CALL_1
0x2b96	        0x488b55f8	                mov rdx, qword [rbp - 8]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2b9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2b9e	          0x4829c2	                            sub rdx, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2ba1	          0x4889d0	                            mov rax, rdx	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2ba4	          0x4889c2	                            mov rdx, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2ba7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2bab	          0x4889d6	                            mov rsi, rdx	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2bae	          0x4889c7	                            mov rdi, rax	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2bb1	      0xe800000000	                          call 0x4002bf6	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2bb6	            0xeb20	                           jmp 0x4002c18	       940	ref-filter.c	FUNCTION_38	FOR_1	CALL_2
0x2bb8	      0x488345f801	                  add qword [rbp - 8], 1	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bbd	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bc1	           0xfb600	                   movzx eax, byte [rax]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bc4	            0x84c0	                             test al, al	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bc6	            0x740b	                            je 0x4002c13	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bcc	           0xfb600	                   movzx eax, byte [rax]	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bcf	            0x3c0a	                             cmp al, 0xa	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bd1	            0x75a9	                           jne 0x4002bbc	       938	ref-filter.c	FUNCTION_38	FOR_1
0x2bd3	      0xb800000000	                              mov eax, 0	       942	ref-filter.c	FUNCTION_38
0x2bd8	              0xc9	                                   leave	       943	ref-filter.c	FUNCTION_38
0x2bd9	              0xc3	                                     ret	       943	ref-filter.c	FUNCTION_38
append_lines	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,3:ELSE,0:functions,0:IF,2	70
0x3380	              0x55	                                push rbp	      1115	ref-filter.c	FUNCTION_44
0x3381	          0x4889e5	                            mov rbp, rsp	      1115	ref-filter.c	FUNCTION_44
0x3384	        0x4883ec40	                           sub rsp, 0x40	      1115	ref-filter.c	FUNCTION_44
0x3388	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1115	ref-filter.c	FUNCTION_44
0x338c	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1115	ref-filter.c	FUNCTION_44
0x3390	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1115	ref-filter.c	FUNCTION_44
0x3394	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1115	ref-filter.c	FUNCTION_44
0x3397	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	ref-filter.c	FUNCTION_44
0x339b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1120	ref-filter.c	FUNCTION_44
0x339f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x33a6	      0xe9a8000000	                           jmp 0x4003493	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x33ab	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x33af	            0x7411	                            je 0x4003402	      1123	ref-filter.c	FUNCTION_44	FOR_1	IF_1
0x33b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x33b5	      0xbe00000000	                              mov esi, 0	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x33ba	          0x4889c7	                            mov rdi, rax	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x33bd	      0xe866d0ffff	                  call sym.strbuf_addstr	      1124	ref-filter.c	FUNCTION_44	FOR_1	CALL_1
0x33c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33ca	          0x4829c2	                            sub rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33cd	          0x4889d0	                            mov rax, rdx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33d0	          0x4889c2	                            mov rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33d7	          0x4829d0	                            sub rax, rdx	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33da	          0x4889c2	                            mov rdx, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33e1	      0xbe0a000000	                            mov esi, 0xa	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33e6	          0x4889c7	                            mov rdi, rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33e9	      0xe800000000	                          call 0x400342e	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33ee	        0x488945f0	             mov qword [rbp - 0x10], rax	      1125	ref-filter.c	FUNCTION_44	FOR_1	CALL_2
0x33f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x33f7	            0x7410	                            je 0x4003449	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x33f9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x33fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3401	          0x4829c2	                            sub rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3404	          0x4889d0	                            mov rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3407	            0xeb18	                           jmp 0x4003461	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3409	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x340d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3411	          0x4829c2	                            sub rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3414	          0x4889d0	                            mov rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3417	          0x4889c2	                            mov rdx, rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x341a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x341e	          0x4829d0	                            sub rax, rdx	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3421	        0x488945f8	                mov qword [rbp - 8], rax	      1126	ref-filter.c	FUNCTION_44	FOR_1
0x3425	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x3429	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x342d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x3431	          0x4889ce	                            mov rsi, rcx	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x3434	          0x4889c7	                            mov rdi, rax	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x3437	      0xe800000000	                          call 0x400347c	      1127	ref-filter.c	FUNCTION_44	FOR_1	CALL_3
0x343c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1128	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x3441	            0x742f	                            je 0x40034b2	      1128	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x3443	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x3447	        0x4883c001	                              add rax, 1	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x344b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1130	ref-filter.c	FUNCTION_44	FOR_1
0x344f	        0x8345e401	               add dword [rbp - 0x1c], 1	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3453	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3456	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3459	            0x7d18	                           jge 0x40034b3	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x345b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x345f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3463	          0x4801d0	                            add rax, rdx	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3466	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x346a	     0xf873bffffff	                            ja 0x40033eb	      1122	ref-filter.c	FUNCTION_44	FOR_1
0x3470	            0xeb01	                           jmp 0x40034b3	      1132	ref-filter.c	FUNCTION_44
0x3472	              0x90	                                     nop	      1129	ref-filter.c	FUNCTION_44	FOR_1	IF_2
0x3473	              0x90	                                     nop	      1132	ref-filter.c	FUNCTION_44
0x3474	              0xc9	                                   leave	      1132	ref-filter.c	FUNCTION_44
0x3475	              0xc3	                                     ret	      1132	ref-filter.c	FUNCTION_44
grab_common_values	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,5:ELSE,2:functions,0:IF,5	99
0x258e	              0x55	                                push rbp	       834	ref-filter.c	FUNCTION_33
0x258f	          0x4889e5	                            mov rbp, rsp	       834	ref-filter.c	FUNCTION_33
0x2592	        0x4883ec50	                           sub rsp, 0x50	       834	ref-filter.c	FUNCTION_33
0x2596	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       834	ref-filter.c	FUNCTION_33
0x259a	          0x8975d4	             mov dword [rbp - 0x2c], esi	       834	ref-filter.c	FUNCTION_33
0x259d	        0x488955c8	             mov qword [rbp - 0x38], rdx	       834	ref-filter.c	FUNCTION_33
0x25a1	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       834	ref-filter.c	FUNCTION_33
0x25a5	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       834	ref-filter.c	FUNCTION_33
0x25a9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       837	ref-filter.c	FUNCTION_33	FOR_1
0x25b0	      0xe922010000	                           jmp 0x4002717	       837	ref-filter.c	FUNCTION_33	FOR_1
0x25b5	    0x488b0d000000	            mov rcx, qword [0x040025fc] 	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25bc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25bf	          0x4863d0	                         movsxd rdx, eax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25c2	          0x4889d0	                            mov rax, rdx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25c5	          0x4801c0	                            add rax, rax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25c8	          0x4801d0	                            add rax, rdx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25cb	        0x48c1e005	                              shl rax, 5	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25cf	          0x4801c8	                            add rax, rcx	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25d2	          0x488b00	                    mov rax, qword [rax]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25d5	        0x488945f0	             mov qword [rbp - 0x10], rax	       838	ref-filter.c	FUNCTION_33	FOR_1
0x25d9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25dc	            0x4898	                                    cdqe	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25de	        0x48c1e005	                              shl rax, 5	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25e2	          0x4889c2	                            mov rdx, rax	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25e9	          0x4801d0	                            add rax, rdx	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25ec	        0x488945f8	                mov qword [rbp - 8], rax	       839	ref-filter.c	FUNCTION_33	FOR_1
0x25f0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x25f4	           0xf95c2	                                setne dl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x25f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x25fb	           0xfb600	                   movzx eax, byte [rax]	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x25fe	            0x3c2a	                            cmp al, 0x2a	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x2600	           0xf94c0	                                 sete al	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x2603	            0x31d0	                            xor eax, edx	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x2605	            0x84c0	                             test al, al	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x2607	     0xf85c5000000	                           jne 0x4002712	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x260d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       842	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x2611	            0x7405	                            je 0x4002658	       842	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x2613	      0x488345f001	               add qword [rbp - 0x10], 1	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x2618	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x261c	      0xbe00000000	                              mov esi, 0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x2621	          0x4889c7	                            mov rdi, rax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x2624	      0xe800000000	                          call 0x4002669	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x2629	            0x85c0	                           test eax, eax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x262b	            0x7525	                           jne 0x4002692	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x262d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2631	           0xfb600	                   movzx eax, byte [rax]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2634	            0xd0e8	                               shr al, 1	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2636	          0x83e007	                              and eax, 7	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2639	           0xfb6c0	                           movzx eax, al	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x263c	            0x89c7	                            mov edi, eax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x263e	      0xe800000000	                          call 0x4002683	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2643	          0x4889c2	                            mov rdx, rax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2646	        0x488b45f8	                mov rax, qword [rbp - 8]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x264a	          0x488910	                    mov qword [rax], rdx	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x264d	      0xe981000000	                           jmp 0x4002713	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x2652	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x2656	      0xbe00000000	                              mov esi, 0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x265b	          0x4889c7	                            mov rdi, rax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x265e	      0xe800000000	                          call 0x40026a3	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x2663	            0x85c0	                           test eax, eax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x2665	            0x752e	                           jne 0x40026d5	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x2667	        0x488b45f8	                mov rax, qword [rbp - 8]	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x266b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x266f	        0x48895010	             mov qword [rax + 0x10], rdx	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x2673	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2677	          0x4889c6	                            mov rsi, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x267a	      0xbf00000000	                              mov edi, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x267f	      0xb800000000	                              mov eax, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2684	      0xe800000000	                          call 0x40026c9	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2689	          0x4889c2	                            mov rdx, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x268c	        0x488b45f8	                mov rax, qword [rbp - 8]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2690	          0x488910	                    mov qword [rax], rdx	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2693	            0xeb3e	                           jmp 0x4002713	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x2695	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x2699	            0x7438	                            je 0x4002713	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x269b	    0x488b0d000000	            mov rcx, qword [0x040026e2] 	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26a2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26a5	          0x4863d0	                         movsxd rdx, eax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26a8	          0x4889d0	                            mov rax, rdx	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26ab	          0x4801c0	                            add rax, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26ae	          0x4801d0	                            add rax, rdx	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26b1	        0x48c1e005	                              shl rax, 5	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26b5	          0x4801c1	                            add rcx, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26bc	        0x488d7004	                      lea rsi, [rax + 4]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26c0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26c8	          0x4889c7	                            mov rdi, rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26cb	      0xe8cffdffff	                call sym.grab_objectname	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26d0	            0xeb01	                           jmp 0x4002713	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x26d2	              0x90	                                     nop	       841	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x26d3	        0x8345ec01	               add dword [rbp - 0x14], 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x26d7	    0x8b0500000000	            mov eax, dword [0x0400271d] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x26dd	          0x3945ec	            cmp dword [rbp - 0x14], eax 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x26e0	     0xf8ccffeffff	                            jl 0x40025f5	       837	ref-filter.c	FUNCTION_33	FOR_1
0x26e6	              0x90	                                     nop	       853	ref-filter.c	FUNCTION_33
0x26e7	              0xc9	                                   leave	       853	ref-filter.c	FUNCTION_33
0x26e8	              0xc3	                                     ret	       853	ref-filter.c	FUNCTION_33
remote_ref_atom_parser	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,12:ELSE,5:functions,0:IF,8	156
0x93a	              0x55	                                push rbp	       157	ref-filter.c	FUNCTION_5
0x93b	          0x4889e5	                            mov rbp, rsp	       157	ref-filter.c	FUNCTION_5
0x93e	        0x4883ec60	                           sub rsp, 0x60	       157	ref-filter.c	FUNCTION_5
0x942	        0x48897db8	             mov qword [rbp - 0x48], rdi	       157	ref-filter.c	FUNCTION_5
0x946	        0x488975b0	             mov qword [rbp - 0x50], rsi	       157	ref-filter.c	FUNCTION_5
0x94a	        0x488955a8	             mov qword [rbp - 0x58], rdx	       157	ref-filter.c	FUNCTION_5
0x94e	        0x48894da0	             mov qword [rbp - 0x60], rcx	       157	ref-filter.c	FUNCTION_5
0x952	    0x64488b042528	                mov rax, qword fs:[0x28]	       157	ref-filter.c	FUNCTION_5
0x95b	        0x488945f8	                mov qword [rbp - 8], rax	       157	ref-filter.c	FUNCTION_5
0x95f	            0x31c0	                            xor eax, eax	       157	ref-filter.c	FUNCTION_5
0x961	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       158	ref-filter.c	FUNCTION_5
0x969	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       158	ref-filter.c	FUNCTION_5
0x970	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       158	ref-filter.c	FUNCTION_5
0x977	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       158	ref-filter.c	FUNCTION_5
0x97b	          0x83c801	                               or eax, 1	       158	ref-filter.c	FUNCTION_5
0x97e	          0x8845e0	               mov byte [rbp - 0x20], al	       158	ref-filter.c	FUNCTION_5
0x981	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       158	ref-filter.c	FUNCTION_5
0x989	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x98d	          0x488b00	                    mov rax, qword [rax]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x990	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x995	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x998	      0xe800000000	                          call 0x40009dd	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x99d	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x99f	            0x7418	                            je 0x40009f9	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9a1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9a5	          0x488b00	                    mov rax, qword [rax]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9a8	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9ad	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9b0	      0xe800000000	                          call 0x40009f5	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9b5	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9b7	            0x740e	                            je 0x4000a07	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x9b9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       162	ref-filter.c	FUNCTION_5	IF_1
0x9bd	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       162	ref-filter.c	FUNCTION_5	IF_1
0x9c1	          0x83ca02	                               or edx, 2	       162	ref-filter.c	FUNCTION_5	IF_1
0x9c4	          0x885020	               mov byte [rax + 0x20], dl	       162	ref-filter.c	FUNCTION_5	IF_1
0x9c7	      0x48837da800	               cmp qword [rbp - 0x58], 0	       164	ref-filter.c	FUNCTION_5	IF_2
0x9cc	            0x752f	                           jne 0x4000a3d	       164	ref-filter.c	FUNCTION_5	IF_2
0x9ce	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       165	ref-filter.c	FUNCTION_5	IF_2
0x9d2	    0xc74010000000	               mov dword [rax + 0x10], 0	       165	ref-filter.c	FUNCTION_5	IF_2
0x9d9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9dd	          0x488b10	                    mov rdx, qword [rax]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9e4	        0x488d7814	                   lea rdi, [rax + 0x14]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9e8	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9f0	          0x4889c6	                            mov rsi, rax	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9f3	      0xe8b3fdffff	   call sym.refname_atom_parser_internal	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9f8	      0xe98c010000	                           jmp 0x4000bc9	       166	ref-filter.c	FUNCTION_5	IF_2	CALL_3
0x9fd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       170	ref-filter.c	FUNCTION_5
0xa01	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       170	ref-filter.c	FUNCTION_5
0xa05	          0x83e2fe	                     and edx, 0xfffffffe	       170	ref-filter.c	FUNCTION_5
0xa08	          0x885020	               mov byte [rax + 0x20], dl	       170	ref-filter.c	FUNCTION_5
0xa0b	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa0f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa13	      0xb9ffffffff	                     mov ecx, 0xffffffff	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa18	      0xba2c000000	                           mov edx, 0x2c	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa1d	          0x4889c7	                            mov rdi, rax	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa20	      0xe800000000	                          call 0x4000a65	       171	ref-filter.c	FUNCTION_5	CALL_4
0xa25	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0xa2c	      0xe934010000	                           jmp 0x4000ba5	       173	ref-filter.c	FUNCTION_5	FOR_1
0xa31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa35	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa38	          0x4863d2	                         movsxd rdx, edx	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa3b	        0x48c1e204	                              shl rdx, 4	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa3f	          0x4801d0	                            add rax, rdx	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa42	          0x488b00	                    mov rax, qword [rax]	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa45	        0x488945c8	             mov qword [rbp - 0x38], rax	       174	ref-filter.c	FUNCTION_5	FOR_1
0xa49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa4d	      0xbe00000000	                              mov esi, 0	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa52	          0x4889c7	                            mov rdi, rax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa55	      0xe800000000	                          call 0x4000a9a	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa5a	            0x85c0	                           test eax, eax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa5c	            0x7510	                           jne 0x4000aae	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0xa5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0xa62	    0xc74010010000	               mov dword [rax + 0x10], 1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0xa69	      0xe9f3000000	                           jmp 0x4000ba1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0xa6e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa72	      0xbe00000000	                              mov esi, 0	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa77	          0x4889c7	                            mov rdi, rax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa7a	      0xe800000000	                          call 0x4000abf	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa7f	            0x85c0	                           test eax, eax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa81	            0x7510	                           jne 0x4000ad3	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0xa83	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0xa87	    0xc74010020000	               mov dword [rax + 0x10], 2	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0xa8e	      0xe9ce000000	                           jmp 0x4000ba1	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0xa93	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xa97	      0xbe00000000	                              mov esi, 0	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xa9c	          0x4889c7	                            mov rdi, rax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xa9f	      0xe800000000	                          call 0x4000ae4	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xaa4	            0x85c0	                           test eax, eax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xaa6	            0x7513	                           jne 0x4000afb	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0xaa8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0xaac	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0xab0	          0x83ca01	                               or edx, 1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0xab3	          0x885020	               mov byte [rax + 0x20], dl	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0xab6	      0xe9a6000000	                           jmp 0x4000ba1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0xabb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xabf	      0xbe00000000	                              mov esi, 0	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xac4	          0x4889c7	                            mov rdi, rax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xac7	      0xe800000000	                          call 0x4000b0c	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xacc	            0x85c0	                           test eax, eax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xace	            0x751b	                           jne 0x4000b2b	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0xad0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xad4	    0xc74010030000	               mov dword [rax + 0x10], 3	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xadb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xadf	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xae3	          0x83ca04	                               or edx, 4	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xae6	          0x885020	               mov byte [rax + 0x20], dl	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xae9	            0xeb76	                           jmp 0x4000ba1	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0xaeb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xaef	      0xbe00000000	                              mov esi, 0	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xaf4	          0x4889c7	                            mov rdi, rax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xaf7	      0xe800000000	                          call 0x4000b3c	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xafc	            0x85c0	                           test eax, eax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xafe	            0x751b	                           jne 0x4000b5b	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0xb00	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb04	    0xc74010040000	               mov dword [rax + 0x10], 4	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb0b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb0f	         0xfb65020	           movzx edx, byte [rax + 0x20] 	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb13	          0x83ca04	                               or edx, 4	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb16	          0x885020	               mov byte [rax + 0x20], dl	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb19	            0xeb46	                           jmp 0x4000ba1	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0xb1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0xb1f	    0xc74010000000	               mov dword [rax + 0x10], 0	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0xb26	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb2a	          0x488b10	                    mov rdx, qword [rax]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb2d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb31	        0x488d7814	                   lea rdi, [rax + 0x14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb35	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb39	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb3d	          0x4889c6	                            mov rsi, rax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb40	      0xe866fcffff	   call sym.refname_atom_parser_internal	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb45	            0x85c0	                           test eax, eax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb47	            0x7418	                            je 0x4000ba1	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0xb49	        0x488d45d0	                   lea rax, [rbp - 0x30]	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0xb4d	      0xbe00000000	                              mov esi, 0	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0xb52	          0x4889c7	                            mov rdi, rax	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0xb55	      0xe800000000	                          call 0x4000b9a	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0xb5a	      0xb8ffffffff	                     mov eax, 0xffffffff	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0xb5f	            0xeb28	                           jmp 0x4000bc9	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0xb61	        0x8345c401	               add dword [rbp - 0x3c], 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0xb65	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       173	ref-filter.c	FUNCTION_5	FOR_1
0xb68	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       173	ref-filter.c	FUNCTION_5	FOR_1
0xb6b	            0x39c2	                            cmp edx, eax	       173	ref-filter.c	FUNCTION_5	FOR_1
0xb6d	     0xf87befeffff	                            ja 0x4000a71	       173	ref-filter.c	FUNCTION_5	FOR_1
0xb73	        0x488d45d0	                   lea rax, [rbp - 0x30]	       198	ref-filter.c	FUNCTION_5	CALL_12
0xb77	      0xbe00000000	                              mov esi, 0	       198	ref-filter.c	FUNCTION_5	CALL_12
0xb7c	          0x4889c7	                            mov rdi, rax	       198	ref-filter.c	FUNCTION_5	CALL_12
0xb7f	      0xe800000000	                          call 0x4000bc4	       198	ref-filter.c	FUNCTION_5	CALL_12
0xb84	      0xb800000000	                              mov eax, 0	       199	ref-filter.c	FUNCTION_5
0xb89	        0x488b4df8	                mov rcx, qword [rbp - 8]	       200	ref-filter.c	FUNCTION_5
0xb8d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       200	ref-filter.c	FUNCTION_5
0xb96	            0x7405	                            je 0x4000bdd	       200	ref-filter.c	FUNCTION_5
0xb98	      0xe800000000	                          call 0x4000bdd	       200	ref-filter.c	FUNCTION_5
0xb9d	              0xc9	                                   leave	       200	ref-filter.c	FUNCTION_5
0xb9e	              0xc3	                                     ret	       200	ref-filter.c	FUNCTION_5
color_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,7:ELSE,0:functions,0:IF,3	53
0x6ea	              0x55	                                push rbp	       119	ref-filter.c	FUNCTION_3
0x6eb	          0x4889e5	                            mov rbp, rsp	       119	ref-filter.c	FUNCTION_3
0x6ee	        0x4883ec20	                           sub rsp, 0x20	       119	ref-filter.c	FUNCTION_3
0x6f2	        0x48897df8	                mov qword [rbp - 8], rdi	       119	ref-filter.c	FUNCTION_3
0x6f6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       119	ref-filter.c	FUNCTION_3
0x6fa	        0x488955e8	             mov qword [rbp - 0x18], rdx	       119	ref-filter.c	FUNCTION_3
0x6fe	        0x48894de0	             mov qword [rbp - 0x20], rcx	       119	ref-filter.c	FUNCTION_3
0x702	      0x48837de800	               cmp qword [rbp - 0x18], 0	       120	ref-filter.c	FUNCTION_3	IF_1
0x707	            0x7525	                           jne 0x400076e	       120	ref-filter.c	FUNCTION_3	IF_1
0x709	      0xbf00000000	                              mov edi, 0	       121	ref-filter.c	FUNCTION_3	CALL_2
0x70e	      0xe84afdffff	                               call sym.	       121	ref-filter.c	FUNCTION_3	CALL_2
0x713	          0x4889c2	                            mov rdx, rax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x716	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       121	ref-filter.c	FUNCTION_3	CALL_2
0x71a	      0xbeffffffff	                     mov esi, 0xffffffff	       121	ref-filter.c	FUNCTION_3	CALL_2
0x71f	          0x4889c7	                            mov rdi, rax	       121	ref-filter.c	FUNCTION_3	CALL_2
0x722	      0xb800000000	                              mov eax, 0	       121	ref-filter.c	FUNCTION_3	CALL_2
0x727	      0xe8e8feffff	                call sym.strbuf_addf_ret	       121	ref-filter.c	FUNCTION_3	CALL_2
0x72c	            0xeb7b	                           jmp 0x40007e9	       121	ref-filter.c	FUNCTION_3	CALL_2
0x72e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x732	        0x488d5010	                   lea rdx, [rax + 0x10]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x736	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x73a	          0x4889d6	                            mov rsi, rdx	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x73d	          0x4889c7	                            mov rdi, rax	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x740	      0xe800000000	                          call 0x4000785	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x745	            0x85c0	                           test eax, eax	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x747	            0x792f	                           jns 0x40007b8	       122	ref-filter.c	FUNCTION_3	IF_2	CALL_3
0x749	      0xbf00000000	                              mov edi, 0	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x74e	      0xe80afdffff	                               call sym.	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x753	          0x4889c6	                            mov rsi, rax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x756	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x75a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x75e	          0x4889d1	                            mov rcx, rdx	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x761	          0x4889f2	                            mov rdx, rsi	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x764	      0xbeffffffff	                     mov esi, 0xffffffff	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x769	          0x4889c7	                            mov rdi, rax	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x76c	      0xb800000000	                              mov eax, 0	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x771	      0xe89efeffff	                call sym.strbuf_addf_ret	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x776	            0xeb31	                           jmp 0x40007e9	       123	ref-filter.c	FUNCTION_3	IF_2	CALL_5
0x778	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x77c	          0x8b400c	              mov eax, dword [rax + 0xc]	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x77f	            0x89c6	                            mov esi, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x781	      0xbf01000000	                              mov edi, 1	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x786	      0xe800000000	                          call 0x40007cb	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x78b	            0x85c0	                           test eax, eax	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x78d	            0x7515	                           jne 0x40007e4	       129	ref-filter.c	FUNCTION_3	IF_3	CALL_6
0x78f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       130	ref-filter.c	FUNCTION_3	CALL_7
0x793	        0x4883c010	                           add rax, 0x10	       130	ref-filter.c	FUNCTION_3	CALL_7
0x797	          0x4889c6	                            mov rsi, rax	       130	ref-filter.c	FUNCTION_3	CALL_7
0x79a	      0xbf00000000	                              mov edi, 0	       130	ref-filter.c	FUNCTION_3	CALL_7
0x79f	      0xe800000000	                          call 0x40007e4	       130	ref-filter.c	FUNCTION_3	CALL_7
0x7a4	      0xb800000000	                              mov eax, 0	       131	ref-filter.c	FUNCTION_3
0x7a9	              0xc9	                                   leave	       132	ref-filter.c	FUNCTION_3
0x7aa	              0xc3	                                     ret	       132	ref-filter.c	FUNCTION_3
new_ref_array_item	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	35
0x565d	              0x55	                                push rbp	      1917	ref-filter.c	FUNCTION_70
0x565e	          0x4889e5	                            mov rbp, rsp	      1917	ref-filter.c	FUNCTION_70
0x5661	        0x4883ec20	                           sub rsp, 0x20	      1917	ref-filter.c	FUNCTION_70
0x5665	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1917	ref-filter.c	FUNCTION_70
0x5669	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1917	ref-filter.c	FUNCTION_70
0x566d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5671	          0x4889c7	                            mov rdi, rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5674	      0xe800000000	                          call 0x40056b9	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5679	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x567d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5681	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5684	      0xbf38000000	                           mov edi, 0x38	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5689	      0xe8d3a9ffff	                         call sym.st_add	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x568e	      0xbe01000000	                              mov esi, 1	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5693	          0x4889c7	                            mov rdi, rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x5696	      0xe8c6a9ffff	                         call sym.st_add	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x569b	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x569e	      0xbf01000000	                              mov edi, 1	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56a3	      0xe800000000	                          call 0x40056e8	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56a8	        0x488945f8	                mov qword [rbp - 8], rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56b0	        0x488d4838	                   lea rcx, [rax + 0x38]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56bc	          0x4889c6	                            mov rsi, rax	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56bf	          0x4889cf	                            mov rdi, rcx	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56c2	      0xe800000000	                          call 0x4005707	      1920	ref-filter.c	FUNCTION_70	CALL_1
0x56c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1921	ref-filter.c	FUNCTION_70	CALL_2
0x56cb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1921	ref-filter.c	FUNCTION_70	CALL_2
0x56cf	          0x4889d6	                            mov rsi, rdx	      1921	ref-filter.c	FUNCTION_70	CALL_2
0x56d2	          0x4889c7	                            mov rdi, rax	      1921	ref-filter.c	FUNCTION_70	CALL_2
0x56d5	      0xe829aeffff	                         call sym.oidcpy	      1921	ref-filter.c	FUNCTION_70	CALL_2
0x56da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1923	ref-filter.c	FUNCTION_70
0x56de	              0xc9	                                   leave	      1924	ref-filter.c	FUNCTION_70
0x56df	              0xc3	                                     ret	      1924	ref-filter.c	FUNCTION_70
populate_value	SWITCH,0:DO,0:FOR,2:WHILE,0:CALL,33:ELSE,17:functions,0:IF,31	429
0x4310	              0x55	                                push rbp	      1458	ref-filter.c	FUNCTION_57
0x4311	          0x4889e5	                            mov rbp, rsp	      1458	ref-filter.c	FUNCTION_57
0x4314	    0x4881ec700100	                          sub rsp, 0x170	      1458	ref-filter.c	FUNCTION_57
0x431b	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	      1458	ref-filter.c	FUNCTION_57
0x4322	    0x4889b590feff	            mov qword [rbp - 0x170], rsi	      1458	ref-filter.c	FUNCTION_57
0x4329	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	ref-filter.c	FUNCTION_57
0x4332	        0x488945f8	                mov qword [rbp - 8], rax	      1458	ref-filter.c	FUNCTION_57
0x4336	            0x31c0	                            xor eax, eax	      1458	ref-filter.c	FUNCTION_57
0x4338	    0x8b0500000000	            mov eax, dword [0x0400437e] 	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x433e	            0x4898	                                    cdqe	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4340	      0xbe20000000	                           mov esi, 0x20	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4345	          0x4889c7	                            mov rdi, rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4348	      0xe800000000	                          call 0x400438d	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x434d	          0x4889c2	                            mov rdx, rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4350	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4357	        0x48895030	             mov qword [rax + 0x30], rdx	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x435b	    0x8b0500000000	            mov eax, dword [0x040043a1] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4361	            0x85c0	                           test eax, eax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4363	            0x7470	                            je 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4365	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1465	ref-filter.c	FUNCTION_57	IF_1
0x436c	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x436f	          0x83e001	                              and eax, 1	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4372	            0x85c0	                           test eax, eax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4374	            0x745f	                            je 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4376	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1465	ref-filter.c	FUNCTION_57	IF_1
0x437d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4381	          0x4885c0	                           test rax, rax	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4384	            0x754f	                           jne 0x4004415	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4386	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x438d	        0x4883c038	                           add rax, 0x38	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4391	      0xb900000000	                              mov ecx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x4396	      0xba00000000	                              mov edx, 0	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x439b	      0xbe01000000	                              mov esi, 1	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43a0	          0x4889c7	                            mov rdi, rax	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43a3	      0xe800000000	                          call 0x40043e8	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43a8	          0x4889c2	                            mov rdx, rax	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43ab	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43b2	        0x48895020	             mov qword [rax + 0x20], rdx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x43b6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43bd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43c1	          0x4885c0	                           test rax, rax	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43c4	            0x750f	                           jne 0x4004415	      1468	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43c6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43cd	    0x48c740200000	               mov qword [rax + 0x20], 0	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x43d5	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x43df	      0xe9d4050000	                           jmp 0x40049f8	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x43e4	    0x488b0d000000	            mov rcx, qword [0x0400442b] 	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43eb	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43f1	          0x4863d0	                         movsxd rdx, eax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43f4	          0x4889d0	                            mov rax, rdx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43f7	          0x4801c0	                            add rax, rax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43fa	          0x4801d0	                            add rax, rdx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x43fd	        0x48c1e005	                              shl rax, 5	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4401	          0x4801c8	                            add rax, rcx	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4404	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x440b	    0x488b0d000000	            mov rcx, qword [0x04004452] 	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4412	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4418	          0x4863d0	                         movsxd rdx, eax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x441b	          0x4889d0	                            mov rax, rdx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x441e	          0x4801c0	                            add rax, rax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4421	          0x4801d0	                            add rax, rdx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4424	        0x48c1e005	                              shl rax, 5	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4428	          0x4801c8	                            add rax, rcx	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x442b	          0x488b00	                    mov rax, qword [rax]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x442e	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4435	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x443c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4440	    0x8b95a0feffff	            mov edx, dword [rbp - 0x160]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4446	          0x4863d2	                         movsxd rdx, edx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4449	        0x48c1e205	                              shl rdx, 5	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x444d	          0x4801d0	                            add rax, rdx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4450	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4457	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	      1477	ref-filter.c	FUNCTION_57	FOR_1
0x4461	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      1479	ref-filter.c	FUNCTION_57	FOR_1
0x446c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x4473	    0x48c740080000	                  mov qword [rax + 8], 0	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x447b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x4482	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x4489	        0x48895018	             mov qword [rax + 0x18], rdx	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x448d	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4494	           0xfb600	                   movzx eax, byte [rax]	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4497	            0x3c2a	                            cmp al, 0x2a	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4499	            0x7512	                           jne 0x40044ed	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x449b	    0xc785a4feffff	              mov dword [rbp - 0x15c], 1	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x44a5	    0x488385b0feff	              add qword [rbp - 0x150], 1	      1486	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x44ad	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44b4	      0xbe00000000	                              mov esi, 0	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44b9	          0x4889c7	                            mov rdi, rax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44bc	      0xe800000000	                          call 0x4004501	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44c1	            0x85c0	                           test eax, eax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44c3	            0x7425	                            je 0x400452a	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x44c5	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44cc	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44d3	          0x4889d6	                            mov rsi, rdx	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44d6	          0x4889c7	                            mov rdi, rax	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44d9	      0xe8abfcffff	                    call sym.get_refname	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44de	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44e5	      0xe973040000	                           jmp 0x400499d	      1490	ref-filter.c	FUNCTION_57	FOR_1	CALL_4
0x44ea	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x44f1	      0xbe00000000	                              mov esi, 0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x44f6	          0x4889c7	                            mov rdi, rax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x44f9	      0xe800000000	                          call 0x400453e	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x44fe	            0x85c0	                           test eax, eax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4500	            0x7425	                            je 0x4004567	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4502	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4509	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4510	          0x4889d6	                            mov rsi, rdx	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4513	          0x4889c7	                            mov rdi, rax	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4516	      0xe82dfcffff	                     call sym.get_symref	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x451b	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4522	      0xe936040000	                           jmp 0x400499d	      1492	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5
0x4527	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x452e	      0xbe00000000	                              mov esi, 0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4533	          0x4889c7	                            mov rdi, rax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4536	      0xe800000000	                          call 0x400457b	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x453b	            0x85c0	                           test eax, eax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x453d	     0xf8493000000	                            je 0x4004616	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x4543	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x454a	        0x488d4838	                   lea rcx, [rax + 0x38]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x454e	    0x488d85a8feff	                  lea rax, [rbp - 0x158]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4555	          0x4889c2	                            mov rdx, rax	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4558	      0xbe00000000	                              mov esi, 0	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x455d	          0x4889cf	                            mov rdi, rcx	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4560	      0xe8a6baffff	                    call sym.skip_prefix	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4565	            0x85c0	                           test eax, eax	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x4567	     0xf8434040000	                            je 0x40049e1	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x456d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4574	          0x4889c7	                            mov rdi, rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4577	      0xe800000000	                          call 0x40045bc	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x457c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x4583	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x458a	      0xbe00000000	                              mov esi, 0	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x458f	          0x4889c7	                            mov rdi, rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4592	      0xe800000000	                          call 0x40045d7	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x4597	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x459e	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x45a6	     0xf84f8030000	                            je 0x40049e4	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x45ac	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45b3	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45ba	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45c1	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45c8	          0x4889c7	                            mov rdi, rax	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45cb	      0xe849f6ffff	        call sym.fill_remote_ref_details	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x45d0	              0x90	                                     nop	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x45d1	      0xe9ce030000	                           jmp 0x40049e4	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x45d6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x45dd	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x45e1	          0x83e002	                              and eax, 2	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x45e4	            0x84c0	                             test al, al	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x45e6	     0xf84b2000000	                            je 0x40046de	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x45ec	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x45f3	        0x488d4838	                   lea rcx, [rax + 0x38]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x45f7	    0x488d85a8feff	                  lea rax, [rbp - 0x158]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x45fe	          0x4889c2	                            mov rdx, rax	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4601	      0xbe00000000	                              mov esi, 0	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4606	          0x4889cf	                            mov rdi, rcx	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4609	      0xe8fdb9ffff	                    call sym.skip_prefix	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x460e	            0x85c0	                           test eax, eax	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4610	     0xf8491030000	                            je 0x40049e7	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4616	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x461d	          0x4889c7	                            mov rdi, rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4620	      0xe800000000	                          call 0x4004665	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x4625	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x462c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4633	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4637	          0x83e004	                              and eax, 4	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x463a	            0x84c0	                             test al, al	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x463c	            0x740d	                            je 0x400468b	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x463e	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x4649	            0xeb29	                           jmp 0x40046b4	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x464b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4652	      0xbe00000000	                              mov esi, 0	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4657	          0x4889c7	                            mov rdi, rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x465a	      0xe800000000	                          call 0x400469f	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x465f	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4666	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x466e	     0xf8436030000	                            je 0x40049ea	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4674	    0x488b8dd0feff	            mov rcx, qword [rbp - 0x130]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x467b	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4682	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4689	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4690	          0x4889c7	                            mov rdi, rax	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4693	      0xe881f5ffff	        call sym.fill_remote_ref_details	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x4698	              0x90	                                     nop	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4699	      0xe913030000	                           jmp 0x40049f1	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x469e	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46a5	      0xbe00000000	                              mov esi, 0	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46aa	          0x4889c7	                            mov rdi, rax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46ad	      0xe800000000	                          call 0x40046f2	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46b2	            0x85c0	                           test eax, eax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46b4	            0x741a	                            je 0x4004710	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x46b6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x46bd	        0x488d5010	                   lea rdx, [rax + 0x10]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x46c1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x46c8	          0x488910	                    mov qword [rax], rdx	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x46cb	      0xe9e1020000	                           jmp 0x40049f1	      1523	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x46d0	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46d7	      0xbe00000000	                              mov esi, 0	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46dc	          0x4889c7	                            mov rdi, rax	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46df	      0xe800000000	                          call 0x4004724	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46e4	            0x85c0	                           test eax, eax	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46e6	     0xf85b8000000	                           jne 0x40047e4	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x46ec	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x46f3	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x46fa	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4701	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4704	          0x83e001	                              and eax, 1	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4707	            0x85c0	                           test eax, eax	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x4709	            0x741b	                            je 0x4004766	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x470b	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4712	      0xbe00000000	                              mov esi, 0	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4717	          0x4889c7	                            mov rdi, rax	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x471a	      0xe8adf2ffff	                   call sym.copy_advance	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x471f	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1527	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_18
0x4726	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x472d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4730	          0x83e002	                              and eax, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4733	            0x85c0	                           test eax, eax	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4735	            0x741b	                            je 0x4004792	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x4737	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x473e	      0xbe00000000	                              mov esi, 0	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4743	          0x4889c7	                            mov rdi, rax	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4746	      0xe881f2ffff	                   call sym.copy_advance	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x474b	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      1529	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_19
0x4752	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4759	    0x483985c0feff	           cmp qword [rbp - 0x140], rax 	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4760	            0x7513	                           jne 0x40047b5	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4762	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4769	    0x48c700000000	                      mov qword [rax], 0	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4770	      0xe93c020000	                           jmp 0x40049f1	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4775	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x477c	          0xc60000	                       mov byte [rax], 0	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x477f	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4786	        0x4883c001	                              add rax, 1	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x478a	          0x4889c7	                            mov rdi, rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x478d	      0xe800000000	                          call 0x40047d2	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4792	          0x4889c2	                            mov rdx, rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4795	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x479c	          0x488910	                    mov qword [rax], rdx	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x479f	      0xe90d020000	                           jmp 0x40049f1	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x47a4	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47ab	            0x752c	                           jne 0x4004819	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47ad	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47b4	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47bb	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47c2	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47c9	          0x4889c7	                            mov rdi, rax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47cc	      0xe8cedcffff	                call sym.grab_objectname	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47d1	            0x85c0	                           test eax, eax	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47d3	     0xf85d4010000	                           jne 0x40049ed	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x47d9	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47e0	      0xbe00000000	                              mov esi, 0	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47e5	          0x4889c7	                            mov rdi, rax	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47e8	      0xe800000000	                          call 0x400482d	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47ed	            0x85c0	                           test eax, eax	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47ef	            0x755b	                           jne 0x400488c	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x47f1	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x47f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x47fc	          0x4885c0	                           test rax, rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x47ff	            0x7438	                            je 0x4004879	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4801	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4808	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x480c	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4813	        0x4883c238	                           add rdx, 0x38	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4817	          0x4889c6	                            mov rsi, rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x481a	          0x4889d7	                            mov rdi, rdx	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x481d	      0xe800000000	                          call 0x4004862	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4822	            0x85c0	                           test eax, eax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4824	            0x7513	                           jne 0x4004879	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4826	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x482d	    0x48c700000000	                      mov qword [rax], 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4834	      0xe978010000	                           jmp 0x40049f1	      1544	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4839	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4840	    0x48c700000000	                      mov qword [rax], 0	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4847	      0xe965010000	                           jmp 0x40049f1	      1544	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x484c	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4853	      0xbe00000000	                              mov esi, 0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4858	          0x4889c7	                            mov rdi, rax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x485b	      0xe800000000	                          call 0x40048a0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4860	            0x85c0	                           test eax, eax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4862	            0x7414	                            je 0x40048b8	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4864	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x486b	    0x48c740080000	                  mov qword [rax + 8], 0	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4873	      0xe939010000	                           jmp 0x40049f1	      1547	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4878	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x487f	      0xbe00000000	                              mov esi, 0	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4884	          0x4889c7	                            mov rdi, rax	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4887	      0xe800000000	                          call 0x40048cc	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x488c	            0x85c0	                           test eax, eax	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x488e	            0x7514	                           jne 0x40048e4	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4890	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x4897	    0x48c740080000	                  mov qword [rax + 8], 0	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x489f	      0xe90d010000	                           jmp 0x40049f1	      1550	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x48a4	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48ab	      0xbe00000000	                              mov esi, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48b0	          0x4889c7	                            mov rdi, rax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48b3	      0xe800000000	                          call 0x40048f8	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48b8	            0x85c0	                           test eax, eax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48ba	            0x744f	                            je 0x400494b	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x48bc	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48c3	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48ca	      0xbe00000000	                              mov esi, 0	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48cf	          0x4889c7	                            mov rdi, rax	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48d2	      0xe834b7ffff	                    call sym.skip_prefix	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48d7	            0x85c0	                           test eax, eax	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48d9	            0x741c	                            je 0x4004937	      1554	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	IF_24	CALL_27
0x48db	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48e2	          0x4889c7	                            mov rdi, rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48e5	      0xe800000000	                          call 0x400492a	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48ea	          0x4889c2	                            mov rdx, rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48ed	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48f4	          0x488910	                    mov qword [rax], rdx	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x48f7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x48fe	    0x48c740080000	                  mov qword [rax + 8], 0	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4906	      0xe9a6000000	                           jmp 0x40049f1	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x490b	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4912	      0xbe00000000	                              mov esi, 0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4917	          0x4889c7	                            mov rdi, rax	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x491a	      0xe800000000	                          call 0x400495f	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x491f	            0x85c0	                           test eax, eax	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4921	            0x7511	                           jne 0x4004974	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x4923	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x492a	    0x48c740080000	                  mov qword [rax + 8], 0	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4932	            0xeb7d	                           jmp 0x40049f1	      1560	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x4934	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x493b	      0xbe00000000	                              mov esi, 0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4940	          0x4889c7	                            mov rdi, rax	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4943	      0xe800000000	                          call 0x4004988	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x4948	            0x85c0	                           test eax, eax	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x494a	            0x7564	                           jne 0x40049f0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x494c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4953	    0x48c740080000	                  mov qword [rax + 8], 0	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x495b	            0xeb54	                           jmp 0x40049f1	      1563	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x495d	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4964	            0x7513	                           jne 0x40049b9	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4966	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x496d	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4974	          0x488910	                    mov qword [rax], rdx	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4977	            0xeb38	                           jmp 0x40049f1	      1568	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4979	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4980	          0x4889c6	                            mov rsi, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4983	      0xbf00000000	                              mov edi, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4988	      0xb800000000	                              mov eax, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x498d	      0xe800000000	                          call 0x40049d2	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4992	          0x4889c2	                            mov rdx, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4995	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x499c	          0x488910	                    mov qword [rax], rdx	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x499f	            0xeb10	                           jmp 0x40049f1	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x49a1	              0x90	                                     nop	      1498	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7
0x49a2	            0xeb0d	                           jmp 0x40049f1	      1498	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7
0x49a4	              0x90	                                     nop	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x49a5	            0xeb0a	                           jmp 0x40049f1	      1504	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6
0x49a7	              0x90	                                     nop	      1509	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10
0x49a8	            0xeb07	                           jmp 0x40049f1	      1509	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10
0x49aa	              0x90	                                     nop	      1517	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x49ab	            0xeb04	                           jmp 0x40049f1	      1517	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x49ad	              0x90	                                     nop	      1538	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18
0x49ae	            0xeb01	                           jmp 0x40049f1	      1538	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18
0x49b0	              0x90	                                     nop	      1565	ref-filter.c	FUNCTION_57	FOR_1	ELSE_16
0x49b1	    0x8385a0feffff	              add dword [rbp - 0x160], 1	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x49b8	    0x8b0500000000	            mov eax, dword [0x040049fe] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x49be	    0x3985a0feffff	           cmp dword [rbp - 0x160], eax 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x49c4	     0xf8c1afaffff	                            jl 0x4004424	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x49ca	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x49d4	            0xeb38	                           jmp 0x4004a4e	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x49d6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49dd	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49e1	    0x8b95a0feffff	            mov edx, dword [rbp - 0x160]	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49e7	          0x4863d2	                         movsxd rdx, edx	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49ea	        0x48c1e205	                              shl rdx, 5	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49ee	          0x4801d0	                            add rax, rdx	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49f1	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x49f8	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x49ff	          0x488b00	                    mov rax, qword [rax]	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4a02	          0x4885c0	                           test rax, rax	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4a05	            0x7417	                            je 0x4004a5e	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4a07	    0x8385a0feffff	              add dword [rbp - 0x160], 1	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4a0e	    0x8b0500000000	            mov eax, dword [0x04004a54] 	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4a14	    0x3985a0feffff	           cmp dword [rbp - 0x160], eax 	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4a1a	            0x7cba	                            jl 0x4004a16	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4a1c	            0xeb01	                           jmp 0x4004a5f	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4a1e	              0x90	                                     nop	      1576	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4a1f	    0x8b0500000000	            mov eax, dword [0x04004a65] 	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4a25	    0x3b85a0feffff	            cmp eax, dword [rbp - 0x160]	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4a2b	            0x7f0a	                            jg 0x4004a77	      1578	ref-filter.c	FUNCTION_57	IF_29
0x4a2d	      0xb800000000	                              mov eax, 0	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4a32	      0xe9a1000000	                           jmp 0x4004b18	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4a37	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a3e	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a45	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a4c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a53	          0x4989c8	                             mov r8, rcx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a56	          0x4889d1	                            mov rcx, rdx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a59	      0xba00000000	                              mov edx, 0	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a5e	          0x4889c7	                            mov rdi, rax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a61	      0xe865f7ffff	                     call sym.get_object	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a66	            0x85c0	                           test eax, eax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a68	            0x7407	                            je 0x4004ab1	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4a6a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4a6f	            0xeb67	                           jmp 0x4004b18	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4a71	    0x8b0500000000	            mov eax, dword [0x04004ab7] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a77	            0x85c0	                           test eax, eax	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a79	            0x7411	                            je 0x4004acc	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a7b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a82	           0xfb600	                   movzx eax, byte [rax]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a85	          0x83e00e	                            and eax, 0xe	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a88	            0x3c08	                               cmp al, 8	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a8a	            0x7407	                            je 0x4004ad3	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4a8c	      0xb800000000	                              mov eax, 0	      1589	ref-filter.c	FUNCTION_57	IF_31
0x4a91	            0xeb45	                           jmp 0x4004b18	      1589	ref-filter.c	FUNCTION_57	IF_31
0x4a93	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1595	ref-filter.c	FUNCTION_57
0x4a9a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1595	ref-filter.c	FUNCTION_57
0x4a9e	        0x4883c004	                              add rax, 4	      1595	ref-filter.c	FUNCTION_57
0x4aa2	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      1595	ref-filter.c	FUNCTION_57
0x4aa9	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ab0	    0x488d95a8feff	                  lea rdx, [rbp - 0x158]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ab7	    0x488bb5e8feff	            mov rsi, qword [rbp - 0x118]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4abe	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ac5	          0x4989c8	                             mov r8, rcx	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ac8	          0x4889d1	                            mov rcx, rdx	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4acb	      0xba01000000	                              mov edx, 1	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ad0	          0x4889c7	                            mov rdi, rax	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ad3	      0xe8f3f6ffff	                     call sym.get_object	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4ad8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1604	ref-filter.c	FUNCTION_57
0x4adc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1604	ref-filter.c	FUNCTION_57
0x4ae5	            0x7405	                            je 0x4004b2c	      1604	ref-filter.c	FUNCTION_57
0x4ae7	      0xe800000000	                          call 0x4004b2c	      1604	ref-filter.c	FUNCTION_57
0x4aec	              0xc9	                                   leave	      1604	ref-filter.c	FUNCTION_57
0x4aed	              0xc3	                                     ret	      1604	ref-filter.c	FUNCTION_57
strbuf_addstr	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	17
0x428	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_95
0x429	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_95
0x42c	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_95
0x430	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_95
0x434	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_95
0x438	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_95	CALL_2
0x43c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x43f	      0xe800000000	                          call 0x4000484	       279	strbuf.h	FUNCTION_95	CALL_2
0x444	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x447	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_95	CALL_2
0x44b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_95	CALL_2
0x44f	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_95	CALL_2
0x452	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x455	      0xe800000000	                          call 0x400049a	       279	strbuf.h	FUNCTION_95	CALL_2
0x45a	              0x90	                                     nop	       280	strbuf.h	FUNCTION_95
0x45b	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_95
0x45c	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_95
parse_align_position	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,2:functions,0:IF,3	31
0x10c6	              0x55	                                push rbp	       296	ref-filter.c	FUNCTION_12
0x10c7	          0x4889e5	                            mov rbp, rsp	       296	ref-filter.c	FUNCTION_12
0x10ca	        0x4883ec10	                           sub rsp, 0x10	       296	ref-filter.c	FUNCTION_12
0x10ce	        0x48897df8	                mov qword [rbp - 8], rdi	       296	ref-filter.c	FUNCTION_12
0x10d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10d6	      0xbe00000000	                              mov esi, 0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10db	          0x4889c7	                            mov rdi, rax	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10de	      0xe800000000	                          call 0x4001123	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10e3	            0x85c0	                           test eax, eax	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10e5	            0x7507	                           jne 0x400112e	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x10e7	      0xb802000000	                              mov eax, 2	       298	ref-filter.c	FUNCTION_12	IF_1
0x10ec	            0xeb3d	                           jmp 0x400116b	       298	ref-filter.c	FUNCTION_12	IF_1
0x10ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x10f2	      0xbe00000000	                              mov esi, 0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x10f7	          0x4889c7	                            mov rdi, rax	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x10fa	      0xe800000000	                          call 0x400113f	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x10ff	            0x85c0	                           test eax, eax	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x1101	            0x7507	                           jne 0x400114a	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x1103	      0xb801000000	                              mov eax, 1	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x1108	            0xeb21	                           jmp 0x400116b	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x110a	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x110e	      0xbe00000000	                              mov esi, 0	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x1113	          0x4889c7	                            mov rdi, rax	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x1116	      0xe800000000	                          call 0x400115b	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x111b	            0x85c0	                           test eax, eax	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x111d	            0x7507	                           jne 0x4001166	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x111f	      0xb800000000	                              mov eax, 0	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x1124	            0xeb05	                           jmp 0x400116b	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x1126	      0xb8ffffffff	                     mov eax, 0xffffffff	       303	ref-filter.c	FUNCTION_12
0x112b	              0xc9	                                   leave	       304	ref-filter.c	FUNCTION_12
0x112c	              0xc3	                                     ret	       304	ref-filter.c	FUNCTION_12
do_merge_filter	SWITCH,0:DO,0:FOR,2:WHILE,0:CALL,11:ELSE,1:functions,0:IF,2	173
0x5b7d	              0x55	                                push rbp	      2055	ref-filter.c	FUNCTION_77
0x5b7e	          0x4889e5	                            mov rbp, rsp	      2055	ref-filter.c	FUNCTION_77
0x5b81	    0x4881ec100900	                          sub rsp, 0x910	      2055	ref-filter.c	FUNCTION_77
0x5b88	    0x4889bdf8f6ff	            mov qword [rbp - 0x908], rdi	      2055	ref-filter.c	FUNCTION_77
0x5b8f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2055	ref-filter.c	FUNCTION_77
0x5b98	        0x488945f8	                mov qword [rbp - 8], rax	      2055	ref-filter.c	FUNCTION_77
0x5b9c	            0x31c0	                            xor eax, eax	      2055	ref-filter.c	FUNCTION_77
0x5b9e	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2058	ref-filter.c	FUNCTION_77
0x5ba5	        0x488b4008	                mov rax, qword [rax + 8]	      2058	ref-filter.c	FUNCTION_77
0x5ba9	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	      2058	ref-filter.c	FUNCTION_77
0x5bb0	    0x488b85f8f6ff	            mov rax, qword [rbp - 0x908]	      2059	ref-filter.c	FUNCTION_77
0x5bb7	          0x488b00	                    mov rax, qword [rax]	      2059	ref-filter.c	FUNCTION_77
0x5bba	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	      2059	ref-filter.c	FUNCTION_77
0x5bc1	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bc8	            0x8b00	                    mov eax, dword [rax]	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bca	            0x4898	                                    cdqe	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bcc	          0x4889c6	                            mov rsi, rax	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bcf	      0xbf08000000	                              mov edi, 8	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bd4	      0xe800000000	                          call 0x4005c19	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5bd9	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	      2060	ref-filter.c	FUNCTION_77	CALL_1
0x5be0	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x5be7	      0xbe00000000	                              mov esi, 0	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x5bec	          0x4889c7	                            mov rdi, rax	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x5bef	      0xe800000000	                          call 0x4005c34	      2062	ref-filter.c	FUNCTION_77	CALL_2
0x5bf4	    0xc78504f7ffff	              mov dword [rbp - 0x8fc], 0	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5bfe	            0xeb7f	                           jmp 0x4005cbf	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c00	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c07	        0x488b4008	                mov rax, qword [rax + 8]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c0b	    0x8b9504f7ffff	            mov edx, dword [rbp - 0x8fc]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c11	          0x4863d2	                         movsxd rdx, edx	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c14	        0x48c1e203	                              shl rdx, 3	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c18	          0x4801d0	                            add rax, rdx	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c1b	          0x488b00	                    mov rax, qword [rax]	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c1e	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	      2065	ref-filter.c	FUNCTION_77	FOR_1
0x5c25	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c2c	        0x488d5038	                   lea rdx, [rax + 0x38]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c30	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c37	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c3b	          0x4889c1	                            mov rcx, rax	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c3e	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c45	          0x4889ce	                            mov rsi, rcx	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c48	          0x4889c7	                            mov rdi, rax	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c4b	      0xe800000000	                          call 0x4005c90	      2066	ref-filter.c	FUNCTION_77	FOR_1	CALL_3
0x5c50	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c56	            0x4898	                                    cdqe	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c58	    0x488d14c50000	                        lea rdx, [rax*8]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c60	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c67	          0x4801c2	                            add rdx, rax	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c6a	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c71	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c75	          0x488902	                    mov qword [rdx], rax	      2067	ref-filter.c	FUNCTION_77	FOR_1
0x5c78	    0x838504f7ffff	              add dword [rbp - 0x8fc], 1	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c7f	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c86	            0x8b00	                    mov eax, dword [rax]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c88	    0x3b8504f7ffff	            cmp eax, dword [rbp - 0x8fc]	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c8e	     0xf8f6cffffff	                            jg 0x4005c40	      2064	ref-filter.c	FUNCTION_77	FOR_1
0x5c94	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2070	ref-filter.c	FUNCTION_77
0x5c9b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2070	ref-filter.c	FUNCTION_77
0x5c9f	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2070	ref-filter.c	FUNCTION_77
0x5ca6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2070	ref-filter.c	FUNCTION_77
0x5caa	            0x8b00	                    mov eax, dword [rax]	      2070	ref-filter.c	FUNCTION_77
0x5cac	          0xc1e804	                              shr eax, 4	      2070	ref-filter.c	FUNCTION_77
0x5caf	      0x25ffffff07	                      and eax, 0x7ffffff	      2070	ref-filter.c	FUNCTION_77
0x5cb4	          0x83c802	                               or eax, 2	      2070	ref-filter.c	FUNCTION_77
0x5cb7	      0x25ffffff07	                      and eax, 0x7ffffff	      2070	ref-filter.c	FUNCTION_77
0x5cbc	          0xc1e004	                              shl eax, 4	      2070	ref-filter.c	FUNCTION_77
0x5cbf	            0x89c1	                            mov ecx, eax	      2070	ref-filter.c	FUNCTION_77
0x5cc1	            0x8b02	                    mov eax, dword [rdx]	      2070	ref-filter.c	FUNCTION_77
0x5cc3	      0x250f000080	                     and eax, 0x8000000f	      2070	ref-filter.c	FUNCTION_77
0x5cc8	             0x9c8	                             or eax, ecx	      2070	ref-filter.c	FUNCTION_77
0x5cca	            0x8902	                    mov dword [rdx], eax	      2070	ref-filter.c	FUNCTION_77
0x5ccc	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5cd3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5cd7	          0x4889c1	                            mov rcx, rax	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5cda	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5ce1	      0xba00000000	                              mov edx, 0	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5ce6	          0x4889ce	                            mov rsi, rcx	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5ce9	          0x4889c7	                            mov rdi, rax	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5cec	      0xe800000000	                          call 0x4005d31	      2071	ref-filter.c	FUNCTION_77	CALL_4
0x5cf1	     0xfb685b6f7ff	           movzx eax, byte [rbp - 0x84a]	      2073	ref-filter.c	FUNCTION_77
0x5cf8	          0x83c804	                               or eax, 4	      2073	ref-filter.c	FUNCTION_77
0x5cfb	    0x8885b6f7ffff	              mov byte [rbp - 0x84a], al	      2073	ref-filter.c	FUNCTION_77
0x5d01	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x5d08	          0x4889c7	                            mov rdi, rax	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x5d0b	      0xe800000000	                          call 0x4005d50	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x5d10	            0x85c0	                           test eax, eax	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x5d12	            0x7417	                            je 0x4005d6b	      2074	ref-filter.c	FUNCTION_77	IF_1	CALL_5
0x5d14	      0xbf00000000	                              mov edi, 0	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x5d19	      0xe83fa7ffff	                               call sym.	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x5d1e	          0x4889c7	                            mov rdi, rax	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x5d21	      0xb800000000	                              mov eax, 0	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x5d26	      0xe800000000	                          call 0x4005d6b	      2075	ref-filter.c	FUNCTION_77	CALL_7
0x5d2b	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2077	ref-filter.c	FUNCTION_77
0x5d32	            0x8b00	                    mov eax, dword [rax]	      2077	ref-filter.c	FUNCTION_77
0x5d34	    0x898508f7ffff	            mov dword [rbp - 0x8f8], eax	      2077	ref-filter.c	FUNCTION_77
0x5d3a	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2078	ref-filter.c	FUNCTION_77
0x5d41	    0xc70000000000	                      mov dword [rax], 0	      2078	ref-filter.c	FUNCTION_77
0x5d47	    0xc78504f7ffff	              mov dword [rbp - 0x8fc], 0	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5d51	      0xe9d7000000	                           jmp 0x4005e6d	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5d56	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d5d	        0x488b4008	                mov rax, qword [rax + 8]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d61	    0x8b9504f7ffff	            mov edx, dword [rbp - 0x8fc]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d67	          0x4863d2	                         movsxd rdx, edx	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d6a	        0x48c1e203	                              shl rdx, 3	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d6e	          0x4801d0	                            add rax, rdx	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d71	          0x488b00	                    mov rax, qword [rax]	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d74	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	      2081	ref-filter.c	FUNCTION_77	FOR_2
0x5d7b	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x5d82	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x5d86	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	      2082	ref-filter.c	FUNCTION_77	FOR_2
0x5d8d	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5d94	            0x8b00	                    mov eax, dword [rax]	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5d96	          0xc1e804	                              shr eax, 4	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5d99	      0x25ffffff07	                      and eax, 0x7ffffff	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5d9e	          0x83e002	                              and eax, 2	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5da1	            0x85c0	                           test eax, eax	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5da3	           0xf95c0	                                setne al	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5da6	           0xfb6c0	                           movzx eax, al	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5da9	    0x89850cf7ffff	            mov dword [rbp - 0x8f4], eax	      2084	ref-filter.c	FUNCTION_77	FOR_2
0x5daf	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5db6	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5db9	          0x83f801	                              cmp eax, 1	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dbc	           0xf94c0	                                 sete al	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dbf	           0xfb6c0	                           movzx eax, al	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dc2	    0x3b850cf7ffff	            cmp eax, dword [rbp - 0x8f4]	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dc8	            0x754d	                           jne 0x4005e57	      2086	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dca	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dd1	        0x488b7008	                mov rsi, qword [rax + 8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dd5	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5ddc	            0x8b00	                    mov eax, dword [rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dde	          0x8d4801	                      lea ecx, [rax + 1]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5de1	    0x488b9518f7ff	            mov rdx, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5de8	            0x890a	                    mov dword [rdx], ecx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dea	            0x4898	                                    cdqe	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dec	        0x48c1e003	                              shl rax, 3	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5df0	        0x488d1406	                    lea rdx, [rsi + rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5df4	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dfb	        0x488b4008	                mov rax, qword [rax + 8]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5dff	    0x8b8d04f7ffff	            mov ecx, dword [rbp - 0x8fc]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e05	          0x4863c9	                         movsxd rcx, ecx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e08	        0x48c1e103	                              shl rcx, 3	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e0c	          0x4801c8	                            add rax, rcx	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e0f	          0x488b00	                    mov rax, qword [rax]	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e12	          0x488902	                    mov qword [rdx], rax	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e15	            0xeb0f	                           jmp 0x4005e66	      2087	ref-filter.c	FUNCTION_77	FOR_2	IF_2
0x5e17	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x5e1e	          0x4889c7	                            mov rdi, rax	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x5e21	      0xe8b1fcffff	                call sym.free_array_item	      2089	ref-filter.c	FUNCTION_77	FOR_2	CALL_8
0x5e26	    0x838504f7ffff	              add dword [rbp - 0x8fc], 1	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5e2d	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5e33	    0x3b8508f7ffff	            cmp eax, dword [rbp - 0x8f8]	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5e39	     0xf8c17ffffff	                            jl 0x4005d96	      2080	ref-filter.c	FUNCTION_77	FOR_2
0x5e3f	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e46	    0x8b8508f7ffff	            mov eax, dword [rbp - 0x8f8]	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e4c	      0xbaff070004	                      mov edx, 0x40007ff	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e51	          0x4889ce	                            mov rsi, rcx	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e54	            0x89c7	                            mov edi, eax	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e56	      0xe800000000	                          call 0x4005e9b	      2092	ref-filter.c	FUNCTION_77	CALL_9
0x5e5b	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x5e62	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x5e66	      0xbeff070004	                      mov esi, 0x40007ff	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x5e6b	          0x4889c7	                            mov rdi, rax	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x5e6e	      0xe800000000	                          call 0x4005eb3	      2093	ref-filter.c	FUNCTION_77	CALL_10
0x5e73	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x5e7a	          0x4889c7	                            mov rdi, rax	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x5e7d	      0xe800000000	                          call 0x4005ec2	      2094	ref-filter.c	FUNCTION_77	CALL_11
0x5e82	              0x90	                                     nop	      2095	ref-filter.c	FUNCTION_77
0x5e83	        0x488b45f8	                mov rax, qword [rbp - 8]	      2095	ref-filter.c	FUNCTION_77
0x5e87	    0x644833042528	                xor rax, qword fs:[0x28]	      2095	ref-filter.c	FUNCTION_77
0x5e90	            0x7405	                            je 0x4005ed7	      2095	ref-filter.c	FUNCTION_77
0x5e92	      0xe800000000	                          call 0x4005ed7	      2095	ref-filter.c	FUNCTION_77
0x5e97	              0xc9	                                   leave	      2095	ref-filter.c	FUNCTION_77
0x5e98	              0xc3	                                     ret	      2095	ref-filter.c	FUNCTION_77
push_stack_element	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	23
0x1a5e	              0x55	                                push rbp	       558	ref-filter.c	FUNCTION_19
0x1a5f	          0x4889e5	                            mov rbp, rsp	       558	ref-filter.c	FUNCTION_19
0x1a62	        0x4883ec20	                           sub rsp, 0x20	       558	ref-filter.c	FUNCTION_19
0x1a66	        0x48897de8	             mov qword [rbp - 0x18], rdi	       558	ref-filter.c	FUNCTION_19
0x1a6a	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x1a6f	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x1a74	      0xe800000000	                          call 0x4001ab9	       559	ref-filter.c	FUNCTION_19	CALL_1
0x1a79	        0x488945f8	                mov qword [rbp - 8], rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x1a7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x1a81	        0x4883c008	                              add rax, 8	       561	ref-filter.c	FUNCTION_19	CALL_2
0x1a85	      0xbe00000000	                              mov esi, 0	       561	ref-filter.c	FUNCTION_19	CALL_2
0x1a8a	          0x4889c7	                            mov rdi, rax	       561	ref-filter.c	FUNCTION_19	CALL_2
0x1a8d	      0xe800000000	                          call 0x4001ad2	       561	ref-filter.c	FUNCTION_19	CALL_2
0x1a92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	ref-filter.c	FUNCTION_19
0x1a96	          0x488b10	                    mov rdx, qword [rax]	       562	ref-filter.c	FUNCTION_19
0x1a99	        0x488b45f8	                mov rax, qword [rbp - 8]	       562	ref-filter.c	FUNCTION_19
0x1a9d	          0x488910	                    mov qword [rax], rdx	       562	ref-filter.c	FUNCTION_19
0x1aa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       563	ref-filter.c	FUNCTION_19
0x1aa4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       563	ref-filter.c	FUNCTION_19
0x1aa8	          0x488910	                    mov qword [rax], rdx	       563	ref-filter.c	FUNCTION_19
0x1aab	              0x90	                                     nop	       564	ref-filter.c	FUNCTION_19
0x1aac	              0xc9	                                   leave	       564	ref-filter.c	FUNCTION_19
0x1aad	              0xc3	                                     ret	       564	ref-filter.c	FUNCTION_19
rstrip_ref_components	SWITCH,0:DO,0:FOR,1:WHILE,1:CALL,2:ELSE,1:functions,0:IF,2	65
0x3ac8	              0x55	                                push rbp	      1276	ref-filter.c	FUNCTION_50
0x3ac9	          0x4889e5	                            mov rbp, rsp	      1276	ref-filter.c	FUNCTION_50
0x3acc	        0x4883ec40	                           sub rsp, 0x40	      1276	ref-filter.c	FUNCTION_50
0x3ad0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1276	ref-filter.c	FUNCTION_50
0x3ad4	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1276	ref-filter.c	FUNCTION_50
0x3ad7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1277	ref-filter.c	FUNCTION_50
0x3ada	            0x4898	                                    cdqe	      1277	ref-filter.c	FUNCTION_50
0x3adc	        0x488945e0	             mov qword [rbp - 0x20], rax	      1277	ref-filter.c	FUNCTION_50
0x3ae0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x3ae4	          0x4889c7	                            mov rdi, rax	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x3ae7	      0xe800000000	                          call 0x4003b2c	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x3aec	        0x488945f0	             mov qword [rbp - 0x10], rax	      1278	ref-filter.c	FUNCTION_50	CALL_1
0x3af0	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1280	ref-filter.c	FUNCTION_50	IF_1
0x3af4	     0xf898d000000	                           jns 0x4003bc7	      1280	ref-filter.c	FUNCTION_50	IF_1
0x3afa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1282	ref-filter.c	FUNCTION_50	IF_1
0x3afe	        0x488945e8	             mov qword [rbp - 0x18], rax	      1282	ref-filter.c	FUNCTION_50	IF_1
0x3b02	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b09	            0xeb2b	                           jmp 0x4003b76	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b0b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b0e	          0x4863d0	                         movsxd rdx, eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b15	          0x4801d0	                            add rax, rdx	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b18	           0xfb600	                   movzx eax, byte [rax]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b1b	            0x3c2f	                            cmp al, 0x2f	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b1d	            0x750b	                           jne 0x4003b6a	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b1f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b22	          0x83c001	                              add eax, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b25	          0x8945dc	             mov dword [rbp - 0x24], eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b28	            0xeb0c	                           jmp 0x4003b76	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b2e	        0x4883c001	                              add rax, 1	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b32	        0x488945e8	             mov qword [rbp - 0x18], rax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b36	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b39	          0x4863d0	                         movsxd rdx, eax	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b40	          0x4801d0	                            add rax, rdx	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b43	           0xfb600	                   movzx eax, byte [rax]	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b46	            0x84c0	                             test al, al	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b48	            0x75c1	                           jne 0x4003b4b	      1285	ref-filter.c	FUNCTION_50	IF_1	FOR_1
0x3b4a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b4d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b50	             0x1d0	                            add eax, edx	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b52	          0x83c001	                              add eax, 1	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b55	            0x4898	                                    cdqe	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b57	        0x488945e0	             mov qword [rbp - 0x20], rax	      1293	ref-filter.c	FUNCTION_50	IF_1
0x3b5b	            0xeb2a	                           jmp 0x4003bc7	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x3b61	      0xbe2f000000	                           mov esi, 0x2f	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x3b66	          0x4889c7	                            mov rdi, rax	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x3b69	      0xe800000000	                          call 0x4003bae	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x3b6e	        0x488945f8	                mov qword [rbp - 8], rax	      1297	ref-filter.c	FUNCTION_50	WHILE_1	CALL_2
0x3b72	      0x48837df800	                  cmp qword [rbp - 8], 0	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x3b77	            0x7507	                           jne 0x4003bc0	      1298	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x3b79	      0xb800000000	                              mov eax, 0	      1299	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x3b7e	            0xeb1c	                           jmp 0x4003bdc	      1299	ref-filter.c	FUNCTION_50	WHILE_1	IF_2
0x3b80	        0x488b45f8	                mov rax, qword [rbp - 8]	      1301	ref-filter.c	FUNCTION_50	WHILE_1	ELSE_1
0x3b84	          0xc60000	                       mov byte [rax], 0	      1301	ref-filter.c	FUNCTION_50	WHILE_1	ELSE_1
0x3b87	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b8b	        0x488d50ff	                      lea rdx, [rax - 1]	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b8f	        0x488955e0	             mov qword [rbp - 0x20], rdx	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b93	          0x4885c0	                           test rax, rax	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b96	            0x7fc5	                            jg 0x4003b9d	      1296	ref-filter.c	FUNCTION_50	WHILE_1
0x3b98	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1303	ref-filter.c	FUNCTION_50	ELSE_1
0x3b9c	              0xc9	                                   leave	      1304	ref-filter.c	FUNCTION_50	ELSE_1
0x3b9d	              0xc3	                                     ret	      1304	ref-filter.c	FUNCTION_50	ELSE_1
pretty_print_ref	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:functions,0:IF,0	29
0x66c7	              0x55	                                push rbp	      2284	ref-filter.c	FUNCTION_85
0x66c8	          0x4889e5	                            mov rbp, rsp	      2284	ref-filter.c	FUNCTION_85
0x66cb	        0x4883ec30	                           sub rsp, 0x30	      2284	ref-filter.c	FUNCTION_85
0x66cf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2284	ref-filter.c	FUNCTION_85
0x66d3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2284	ref-filter.c	FUNCTION_85
0x66d7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2284	ref-filter.c	FUNCTION_85
0x66db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66e3	          0x4889d6	                            mov rsi, rdx	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66e6	          0x4889c7	                            mov rdi, rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66e9	      0xe86fefffff	             call sym.new_ref_array_item	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66ee	        0x488945f8	                mov qword [rbp - 8], rax	      2286	ref-filter.c	FUNCTION_85	CALL_1
0x66f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x66f6	          0x4889c7	                            mov rdi, rax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x66f9	      0xe8e6f0ffff	          call sym.ref_kind_from_refname	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x66fe	            0x89c2	                            mov edx, eax	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x6700	        0x488b45f8	                mov rax, qword [rbp - 8]	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x6704	          0x895018	             mov dword [rax + 0x18], edx	      2287	ref-filter.c	FUNCTION_85	CALL_2
0x6707	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x670b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x670f	          0x4889d6	                            mov rsi, rdx	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x6712	          0x4889c7	                            mov rdi, rax	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x6715	      0xe800000000	                          call 0x400675a	      2288	ref-filter.c	FUNCTION_85	CALL_3
0x671a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x671e	          0x4889c7	                            mov rdi, rax	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x6721	      0xe8b1f3ffff	                call sym.free_array_item	      2289	ref-filter.c	FUNCTION_85	CALL_4
0x6726	              0x90	                                     nop	      2290	ref-filter.c	FUNCTION_85
0x6727	              0xc9	                                   leave	      2290	ref-filter.c	FUNCTION_85
0x6728	              0xc3	                                     ret	      2290	ref-filter.c	FUNCTION_85
align_atom_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	23
0x1bc1	              0x55	                                push rbp	       591	ref-filter.c	FUNCTION_22
0x1bc2	          0x4889e5	                            mov rbp, rsp	       591	ref-filter.c	FUNCTION_22
0x1bc5	        0x4883ec30	                           sub rsp, 0x30	       591	ref-filter.c	FUNCTION_22
0x1bc9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       591	ref-filter.c	FUNCTION_22
0x1bcd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       591	ref-filter.c	FUNCTION_22
0x1bd1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       591	ref-filter.c	FUNCTION_22
0x1bd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       594	ref-filter.c	FUNCTION_22	CALL_1
0x1bd9	        0x4883c008	                              add rax, 8	       594	ref-filter.c	FUNCTION_22	CALL_1
0x1bdd	          0x4889c7	                            mov rdi, rax	       594	ref-filter.c	FUNCTION_22	CALL_1
0x1be0	      0xe879feffff	             call sym.push_stack_element	       594	ref-filter.c	FUNCTION_22	CALL_1
0x1be5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       595	ref-filter.c	FUNCTION_22
0x1be9	        0x488b4008	                mov rax, qword [rax + 8]	       595	ref-filter.c	FUNCTION_22
0x1bed	        0x488945f8	                mov qword [rbp - 8], rax	       595	ref-filter.c	FUNCTION_22
0x1bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	ref-filter.c	FUNCTION_22
0x1bf5	    0x48c740200000	               mov qword [rax + 0x20], 0	       596	ref-filter.c	FUNCTION_22
0x1bfd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	ref-filter.c	FUNCTION_22
0x1c01	        0x488b4018	            mov rax, qword [rax + 0x18] 	       597	ref-filter.c	FUNCTION_22
0x1c05	        0x488d5010	                   lea rdx, [rax + 0x10]	       597	ref-filter.c	FUNCTION_22
0x1c09	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	ref-filter.c	FUNCTION_22
0x1c0d	        0x48895028	             mov qword [rax + 0x28], rdx	       597	ref-filter.c	FUNCTION_22
0x1c11	      0xb800000000	                              mov eax, 0	       598	ref-filter.c	FUNCTION_22
0x1c16	              0xc9	                                   leave	       599	ref-filter.c	FUNCTION_22
0x1c17	              0xc3	                                     ret	       599	ref-filter.c	FUNCTION_22
cmp_ref_sorting	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,8:ELSE,4:functions,0:IF,6	129
0x605a	              0x55	                                push rbp	      2152	ref-filter.c	FUNCTION_79
0x605b	          0x4889e5	                            mov rbp, rsp	      2152	ref-filter.c	FUNCTION_79
0x605e	        0x4883ec60	                           sub rsp, 0x60	      2152	ref-filter.c	FUNCTION_79
0x6062	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2152	ref-filter.c	FUNCTION_79
0x6066	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2152	ref-filter.c	FUNCTION_79
0x606a	        0x488955a8	             mov qword [rbp - 0x58], rdx	      2152	ref-filter.c	FUNCTION_79
0x606e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2152	ref-filter.c	FUNCTION_79
0x6077	        0x488945f8	                mov qword [rbp - 8], rax	      2152	ref-filter.c	FUNCTION_79
0x607b	            0x31c0	                            xor eax, eax	      2152	ref-filter.c	FUNCTION_79
0x607d	    0x488b0d000000	            mov rcx, qword [0x040060c4] 	      2155	ref-filter.c	FUNCTION_79
0x6084	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2155	ref-filter.c	FUNCTION_79
0x6088	          0x8b4008	                mov eax, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x608b	          0x4863d0	                         movsxd rdx, eax	      2155	ref-filter.c	FUNCTION_79
0x608e	          0x4889d0	                            mov rax, rdx	      2155	ref-filter.c	FUNCTION_79
0x6091	          0x4801c0	                            add rax, rax	      2155	ref-filter.c	FUNCTION_79
0x6094	          0x4801d0	                            add rax, rdx	      2155	ref-filter.c	FUNCTION_79
0x6097	        0x48c1e005	                              shl rax, 5	      2155	ref-filter.c	FUNCTION_79
0x609b	          0x4801c8	                            add rax, rcx	      2155	ref-filter.c	FUNCTION_79
0x609e	          0x8b4008	                mov eax, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x60a1	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2155	ref-filter.c	FUNCTION_79
0x60a4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2157	ref-filter.c	FUNCTION_79
0x60ac	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2157	ref-filter.c	FUNCTION_79
0x60b4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2157	ref-filter.c	FUNCTION_79
0x60bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60c0	          0x8b7008	                mov esi, dword [rax + 8]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60c3	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60c7	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60cf	          0x4889c7	                            mov rdi, rax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60d2	      0xe817eaffff	             call sym.get_ref_atom_value	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60d7	            0x85c0	                           test eax, eax	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60d9	            0x7416	                            je 0x4006131	      2159	ref-filter.c	FUNCTION_79	IF_1	CALL_1
0x60db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x60df	          0x4889c6	                            mov rsi, rax	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x60e2	      0xbf00000000	                              mov edi, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x60e7	      0xb800000000	                              mov eax, 0	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x60ec	      0xe800000000	                          call 0x4006131	      2160	ref-filter.c	FUNCTION_79	CALL_2
0x60f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x60f5	          0x8b7008	                mov esi, dword [rax + 8]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x60f8	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x60fc	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x6100	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x6104	          0x4889c7	                            mov rdi, rax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x6107	      0xe8e2e9ffff	             call sym.get_ref_atom_value	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x610c	            0x85c0	                           test eax, eax	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x610e	            0x7416	                            je 0x4006166	      2161	ref-filter.c	FUNCTION_79	IF_2	CALL_3
0x6110	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x6114	          0x4889c6	                            mov rsi, rax	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x6117	      0xbf00000000	                              mov edi, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x611c	      0xb800000000	                              mov eax, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x6121	      0xe800000000	                          call 0x4006166	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x6126	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x612a	          0x4889c7	                            mov rdi, rax	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x612d	      0xe800000000	                          call 0x4006172	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x6132	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2164	ref-filter.c	FUNCTION_79
0x6136	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2164	ref-filter.c	FUNCTION_79
0x613a	          0x83e002	                              and eax, 2	      2164	ref-filter.c	FUNCTION_79
0x613d	            0x84c0	                             test al, al	      2164	ref-filter.c	FUNCTION_79
0x613f	            0x7407	                            je 0x4006188	      2164	ref-filter.c	FUNCTION_79
0x6141	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x6146	            0xeb05	                           jmp 0x400618d	      2164	ref-filter.c	FUNCTION_79
0x6148	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x614d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2164	ref-filter.c	FUNCTION_79
0x6151	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2165	ref-filter.c	FUNCTION_79	IF_3
0x6155	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2165	ref-filter.c	FUNCTION_79	IF_3
0x6159	          0x83e004	                              and eax, 4	      2165	ref-filter.c	FUNCTION_79	IF_3
0x615c	            0x84c0	                             test al, al	      2165	ref-filter.c	FUNCTION_79	IF_3
0x615e	            0x7421	                            je 0x40061c1	      2165	ref-filter.c	FUNCTION_79	IF_3
0x6160	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6164	          0x488b10	                    mov rdx, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6167	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x616b	          0x488b00	                    mov rax, qword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x616e	          0x4889d6	                            mov rsi, rdx	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6171	          0x4889c7	                            mov rdi, rax	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6174	      0xe800000000	                          call 0x40061b9	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6179	          0x8945c0	             mov dword [rbp - 0x40], eax	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x617c	      0xe980000000	                           jmp 0x4006241	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x6181	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x6185	            0x751f	                           jne 0x40061e6	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x6187	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x618b	          0x488b08	                    mov rcx, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x618e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x6192	          0x488b10	                    mov rdx, qword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x6195	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x6199	          0x4889ce	                            mov rsi, rcx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x619c	          0x4889d7	                            mov rdi, rdx	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x619f	            0xffd0	                                call rax	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x61a1	          0x8945c0	             mov dword [rbp - 0x40], eax	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x61a4	            0xeb5b	                           jmp 0x4006241	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x61a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61aa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61b2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61b6	          0x4839c2	                            cmp rdx, rax	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61b9	            0x7309	                           jae 0x4006204	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61bb	    0xc745c0ffffff	     mov dword [rbp - 0x40], 0xffffffff 	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61c2	            0xeb3d	                           jmp 0x4006241	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x61c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61c8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61cc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61d4	          0x4839c2	                            cmp rdx, rax	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61d7	            0x7521	                           jne 0x400623a	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61dd	        0x488d4838	                   lea rcx, [rax + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61e1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61e5	        0x488d5038	                   lea rdx, [rax + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61ed	          0x4889ce	                            mov rsi, rcx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61f0	          0x4889d7	                            mov rdi, rdx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61f3	            0xffd0	                                call rax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61f5	          0x8945c0	             mov dword [rbp - 0x40], eax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61f8	            0xeb07	                           jmp 0x4006241	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x61fa	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      2175	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_4
0x6201	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2178	ref-filter.c	FUNCTION_79
0x6205	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      2178	ref-filter.c	FUNCTION_79
0x6209	          0x83e001	                              and eax, 1	      2178	ref-filter.c	FUNCTION_79
0x620c	            0x84c0	                             test al, al	      2178	ref-filter.c	FUNCTION_79
0x620e	            0x7407	                            je 0x4006257	      2178	ref-filter.c	FUNCTION_79
0x6210	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2178	ref-filter.c	FUNCTION_79
0x6213	            0xf7d8	                                 neg eax	      2178	ref-filter.c	FUNCTION_79
0x6215	            0xeb03	                           jmp 0x400625a	      2178	ref-filter.c	FUNCTION_79
0x6217	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2178	ref-filter.c	FUNCTION_79
0x621a	        0x488b7df8	                mov rdi, qword [rbp - 8]	      2179	ref-filter.c	FUNCTION_79
0x621e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2179	ref-filter.c	FUNCTION_79
0x6227	            0x7405	                            je 0x400626e	      2179	ref-filter.c	FUNCTION_79
0x6229	      0xe800000000	                          call 0x400626e	      2179	ref-filter.c	FUNCTION_79
0x622e	              0xc9	                                   leave	      2179	ref-filter.c	FUNCTION_79
0x622f	              0xc3	                                     ret	      2179	ref-filter.c	FUNCTION_79
ref_default_sorting	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	17
0x67f1	              0x55	                                push rbp	      2310	ref-filter.c	FUNCTION_87
0x67f2	          0x4889e5	                            mov rbp, rsp	      2310	ref-filter.c	FUNCTION_87
0x67f5	        0x4883ec10	                           sub rsp, 0x10	      2310	ref-filter.c	FUNCTION_87
0x67f9	      0xbe10000000	                           mov esi, 0x10	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x67fe	      0xbf01000000	                              mov edi, 1	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x6803	      0xe800000000	                          call 0x4006848	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x6808	        0x488945f8	                mov qword [rbp - 8], rax	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x680c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2315	ref-filter.c	FUNCTION_87
0x6810	    0x48c700000000	                      mov qword [rax], 0	      2315	ref-filter.c	FUNCTION_87
0x6817	      0xbf00000000	                              mov edi, 0	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x681c	      0xe808ffffff	             call sym.parse_sorting_atom	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x6821	            0x89c2	                            mov edx, eax	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x6823	        0x488b45f8	                mov rax, qword [rbp - 8]	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x6827	          0x895008	                mov dword [rax + 8], edx	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x682a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2317	ref-filter.c	FUNCTION_87
0x682e	              0xc9	                                   leave	      2318	ref-filter.c	FUNCTION_87
0x682f	              0xc3	                                     ret	      2318	ref-filter.c	FUNCTION_87
contains_test	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,2	36
0x4e68	              0x55	                                push rbp	      1671	ref-filter.c	FUNCTION_60
0x4e69	          0x4889e5	                            mov rbp, rsp	      1671	ref-filter.c	FUNCTION_60
0x4e6c	        0x4883ec30	                           sub rsp, 0x30	      1671	ref-filter.c	FUNCTION_60
0x4e70	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1671	ref-filter.c	FUNCTION_60
0x4e74	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1671	ref-filter.c	FUNCTION_60
0x4e78	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1671	ref-filter.c	FUNCTION_60
0x4e7c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e84	          0x4889d6	                            mov rsi, rdx	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e87	          0x4889c7	                            mov rdi, rax	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e8a	      0xe830ffffff	              call sym.contains_cache_at	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e8f	        0x488945f8	                mov qword [rbp - 8], rax	      1672	ref-filter.c	FUNCTION_60	CALL_1
0x4e93	        0x488b45f8	                mov rax, qword [rbp - 8]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4e97	            0x8b00	                    mov eax, dword [rax]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4e99	            0x85c0	                           test eax, eax	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4e9b	            0x7408	                            je 0x4004ee5	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4e9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4ea1	            0x8b00	                    mov eax, dword [rax]	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4ea3	            0xeb39	                           jmp 0x4004f1e	      1676	ref-filter.c	FUNCTION_60	IF_1
0x4ea5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4ea9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4ead	          0x4889d6	                            mov rsi, rdx	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4eb0	          0x4889c7	                            mov rdi, rax	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4eb3	      0xe85bffffff	                 call sym.in_commit_list	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4eb8	            0x85c0	                           test eax, eax	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4eba	            0x7411	                            je 0x4004f0d	      1679	ref-filter.c	FUNCTION_60	IF_2	CALL_2
0x4ebc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4ec0	    0xc70002000000	                      mov dword [rax], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x4ec6	      0xb802000000	                              mov eax, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4ecb	            0xeb11	                           jmp 0x4004f1e	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4ecd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4ed1	          0x4889c7	                            mov rdi, rax	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4ed4	      0xe800000000	                          call 0x4004f19	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4ed9	      0xb800000000	                              mov eax, 0	      1686	ref-filter.c	FUNCTION_60
0x4ede	              0xc9	                                   leave	      1687	ref-filter.c	FUNCTION_60
0x4edf	              0xc3	                                     ret	      1687	ref-filter.c	FUNCTION_60
ref_array_clear	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	35
0x5b02	              0x55	                                push rbp	      2045	ref-filter.c	FUNCTION_76
0x5b03	          0x4889e5	                            mov rbp, rsp	      2045	ref-filter.c	FUNCTION_76
0x5b06	        0x4883ec20	                           sub rsp, 0x20	      2045	ref-filter.c	FUNCTION_76
0x5b0a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2045	ref-filter.c	FUNCTION_76
0x5b0e	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b15	            0xeb24	                           jmp 0x4005b7b	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b1b	        0x488b4008	                mov rax, qword [rax + 8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b1f	          0x8b55fc	                mov edx, dword [rbp - 4]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b22	          0x4863d2	                         movsxd rdx, edx	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b25	        0x48c1e203	                              shl rdx, 3	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b29	          0x4801d0	                            add rax, rdx	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b2c	          0x488b00	                    mov rax, qword [rax]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b2f	          0x4889c7	                            mov rdi, rax	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b32	      0xe8a0ffffff	                call sym.free_array_item	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x5b37	        0x8345fc01	                  add dword [rbp - 4], 1	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b3f	            0x8b00	                    mov eax, dword [rax]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b41	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b44	            0x7fd1	                            jg 0x4005b57	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x5b46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b4a	        0x488b4008	                mov rax, qword [rax + 8]	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b4e	          0x4889c7	                            mov rdi, rax	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b51	      0xe800000000	                          call 0x4005b96	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b5a	    0x48c740080000	                  mov qword [rax + 8], 0	      2050	ref-filter.c	FUNCTION_76	CALL_2
0x5b62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x5b66	    0xc74004000000	                  mov dword [rax + 4], 0	      2051	ref-filter.c	FUNCTION_76
0x5b6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x5b71	          0x8b5004	                mov edx, dword [rax + 4]	      2051	ref-filter.c	FUNCTION_76
0x5b74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2051	ref-filter.c	FUNCTION_76
0x5b78	            0x8910	                    mov dword [rax], edx	      2051	ref-filter.c	FUNCTION_76
0x5b7a	              0x90	                                     nop	      2052	ref-filter.c	FUNCTION_76
0x5b7b	              0xc9	                                   leave	      2052	ref-filter.c	FUNCTION_76
0x5b7c	              0xc3	                                     ret	      2052	ref-filter.c	FUNCTION_76
strbuf_addf_ret	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:functions,0:IF,0	41
0x614	              0x55	                                push rbp	       109	ref-filter.c	FUNCTION_2
0x615	          0x4889e5	                            mov rbp, rsp	       109	ref-filter.c	FUNCTION_2
0x618	    0x4881ecf00000	                           sub rsp, 0xf0	       109	ref-filter.c	FUNCTION_2
0x61f	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       109	ref-filter.c	FUNCTION_2
0x626	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	       109	ref-filter.c	FUNCTION_2
0x62c	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       109	ref-filter.c	FUNCTION_2
0x633	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       109	ref-filter.c	FUNCTION_2
0x63a	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       109	ref-filter.c	FUNCTION_2
0x641	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       109	ref-filter.c	FUNCTION_2
0x648	            0x84c0	                             test al, al	       109	ref-filter.c	FUNCTION_2
0x64a	            0x7420	                            je 0x40006ac	       109	ref-filter.c	FUNCTION_2
0x64c	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       109	ref-filter.c	FUNCTION_2
0x650	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       109	ref-filter.c	FUNCTION_2
0x654	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       109	ref-filter.c	FUNCTION_2
0x658	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       109	ref-filter.c	FUNCTION_2
0x65c	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       109	ref-filter.c	FUNCTION_2
0x660	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       109	ref-filter.c	FUNCTION_2
0x664	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       109	ref-filter.c	FUNCTION_2
0x668	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       109	ref-filter.c	FUNCTION_2
0x66c	    0x64488b042528	                mov rax, qword fs:[0x28]	       109	ref-filter.c	FUNCTION_2
0x675	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       109	ref-filter.c	FUNCTION_2
0x67c	            0x31c0	                            xor eax, eax	       109	ref-filter.c	FUNCTION_2
0x67e	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       111	ref-filter.c	FUNCTION_2	CALL_1
0x688	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       111	ref-filter.c	FUNCTION_2	CALL_1
0x692	        0x488d4510	                   lea rax, [rbp + 0x10]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x696	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x69d	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       111	ref-filter.c	FUNCTION_2	CALL_1
0x6a4	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       111	ref-filter.c	FUNCTION_2	CALL_1
0x6ab	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6b2	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6b9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6c0	          0x4889ce	                            mov rsi, rcx	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6c3	          0x4889c7	                            mov rdi, rax	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6c6	      0xe800000000	                          call 0x400070b	       112	ref-filter.c	FUNCTION_2	CALL_2
0x6cb	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       114	ref-filter.c	FUNCTION_2
0x6d1	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       115	ref-filter.c	FUNCTION_2
0x6d8	    0x644833342528	                xor rsi, qword fs:[0x28]	       115	ref-filter.c	FUNCTION_2
0x6e1	            0x7405	                            je 0x4000728	       115	ref-filter.c	FUNCTION_2
0x6e3	      0xe800000000	                          call 0x4000728	       115	ref-filter.c	FUNCTION_2
0x6e8	              0xc9	                                   leave	       115	ref-filter.c	FUNCTION_2
0x6e9	              0xc3	                                     ret	       115	ref-filter.c	FUNCTION_2
trailers_atom_parser	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,7:ELSE,2:functions,0:IF,3	85
0xc4b	              0x55	                                push rbp	       222	ref-filter.c	FUNCTION_8
0xc4c	          0x4889e5	                            mov rbp, rsp	       222	ref-filter.c	FUNCTION_8
0xc4f	        0x4883ec60	                           sub rsp, 0x60	       222	ref-filter.c	FUNCTION_8
0xc53	        0x48897db8	             mov qword [rbp - 0x48], rdi	       222	ref-filter.c	FUNCTION_8
0xc57	        0x488975b0	             mov qword [rbp - 0x50], rsi	       222	ref-filter.c	FUNCTION_8
0xc5b	        0x488955a8	             mov qword [rbp - 0x58], rdx	       222	ref-filter.c	FUNCTION_8
0xc5f	        0x48894da0	             mov qword [rbp - 0x60], rcx	       222	ref-filter.c	FUNCTION_8
0xc63	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	ref-filter.c	FUNCTION_8
0xc6c	        0x488945f8	                mov qword [rbp - 8], rax	       222	ref-filter.c	FUNCTION_8
0xc70	            0x31c0	                            xor eax, eax	       222	ref-filter.c	FUNCTION_8
0xc72	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       223	ref-filter.c	FUNCTION_8
0xc7a	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       223	ref-filter.c	FUNCTION_8
0xc81	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       223	ref-filter.c	FUNCTION_8
0xc88	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       223	ref-filter.c	FUNCTION_8
0xc8c	          0x83c801	                               or eax, 1	       223	ref-filter.c	FUNCTION_8
0xc8f	          0x8845e0	               mov byte [rbp - 0x20], al	       223	ref-filter.c	FUNCTION_8
0xc92	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       223	ref-filter.c	FUNCTION_8
0xc9a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       226	ref-filter.c	FUNCTION_8	IF_1
0xc9f	     0xf84d1000000	                            je 0x4000db6	       226	ref-filter.c	FUNCTION_8	IF_1
0xca5	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xca9	        0x488d45d0	                   lea rax, [rbp - 0x30]	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xcad	      0xb9ffffffff	                     mov ecx, 0xffffffff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xcb2	      0xba2c000000	                           mov edx, 0x2c	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xcb7	          0x4889c7	                            mov rdi, rax	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xcba	      0xe800000000	                          call 0x4000cff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0xcbf	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcc6	      0xe99d000000	                           jmp 0x4000da8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xccb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xccf	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcd2	          0x4863d2	                         movsxd rdx, edx	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcd5	        0x48c1e204	                              shl rdx, 4	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcd9	          0x4801d0	                            add rax, rdx	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcdc	          0x488b00	                    mov rax, qword [rax]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xcdf	        0x488945c8	             mov qword [rbp - 0x38], rax	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xce3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xce7	      0xbe00000000	                              mov esi, 0	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xcec	          0x4889c7	                            mov rdi, rax	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xcef	      0xe800000000	                          call 0x4000d34	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xcf4	            0x85c0	                           test eax, eax	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xcf6	            0x750d	                           jne 0x4000d45	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0xcf8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0xcfc	    0xc74024010000	               mov dword [rax + 0x24], 1	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0xd03	            0xeb5f	                           jmp 0x4000da4	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0xd05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd09	      0xbe00000000	                              mov esi, 0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd0e	          0x4889c7	                            mov rdi, rax	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd11	      0xe800000000	                          call 0x4000d56	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd16	            0x85c0	                           test eax, eax	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd18	            0x750d	                           jne 0x4000d67	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0xd1a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0xd1e	    0xc7401c010000	               mov dword [rax + 0x1c], 1	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0xd25	            0xeb3d	                           jmp 0x4000da4	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0xd27	      0xbf00000000	                              mov edi, 0	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd2c	      0xe82cf7ffff	                               call sym.	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd31	          0x4889c1	                            mov rcx, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd34	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd38	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd3c	          0x4889ce	                            mov rsi, rcx	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd3f	          0x4889c7	                            mov rdi, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd42	      0xb800000000	                              mov eax, 0	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd47	      0xe800000000	                          call 0x4000d8c	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0xd4c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0xd50	      0xbe00000000	                              mov esi, 0	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0xd55	          0x4889c7	                            mov rdi, rax	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0xd58	      0xe800000000	                          call 0x4000d9d	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0xd5d	      0xb8ffffffff	                     mov eax, 0xffffffff	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0xd62	            0xeb33	                           jmp 0x4000dd7	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0xd64	        0x8345c401	               add dword [rbp - 0x3c], 1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xd68	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xd6b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xd6e	            0x39c2	                            cmp edx, eax	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xd70	     0xf8755ffffff	                            ja 0x4000d0b	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0xd76	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       241	ref-filter.c	FUNCTION_8
0xd7a	    0xc74010060000	               mov dword [rax + 0x10], 6	       241	ref-filter.c	FUNCTION_8
0xd81	        0x488d45d0	                   lea rax, [rbp - 0x30]	       242	ref-filter.c	FUNCTION_8	CALL_7
0xd85	      0xbe00000000	                              mov esi, 0	       242	ref-filter.c	FUNCTION_8	CALL_7
0xd8a	          0x4889c7	                            mov rdi, rax	       242	ref-filter.c	FUNCTION_8	CALL_7
0xd8d	      0xe800000000	                          call 0x4000dd2	       242	ref-filter.c	FUNCTION_8	CALL_7
0xd92	      0xb800000000	                              mov eax, 0	       243	ref-filter.c	FUNCTION_8
0xd97	        0x488b4df8	                mov rcx, qword [rbp - 8]	       244	ref-filter.c	FUNCTION_8
0xd9b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       244	ref-filter.c	FUNCTION_8
0xda4	            0x7405	                            je 0x4000deb	       244	ref-filter.c	FUNCTION_8
0xda6	      0xe800000000	                          call 0x4000deb	       244	ref-filter.c	FUNCTION_8
0xdab	              0xc9	                                   leave	       244	ref-filter.c	FUNCTION_8
0xdac	              0xc3	                                     ret	       244	ref-filter.c	FUNCTION_8
copy_advance	SWITCH,0:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,0:functions,0:IF,0	20
0x39cc	              0x55	                                push rbp	      1235	ref-filter.c	FUNCTION_48
0x39cd	          0x4889e5	                            mov rbp, rsp	      1235	ref-filter.c	FUNCTION_48
0x39d0	        0x48897df8	                mov qword [rbp - 8], rdi	      1235	ref-filter.c	FUNCTION_48
0x39d4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1235	ref-filter.c	FUNCTION_48
0x39d8	            0xeb1d	                           jmp 0x4003a37	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x39da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39de	        0x488d5001	                      lea rdx, [rax + 1]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39e2	        0x488955f8	                mov qword [rbp - 8], rdx	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39e6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39ea	        0x488d4a01	                      lea rcx, [rdx + 1]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39ee	        0x48894df0	             mov qword [rbp - 0x10], rcx	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39f2	           0xfb612	                   movzx edx, byte [rdx]	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39f5	            0x8810	                      mov byte [rax], dl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x39f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x39fb	           0xfb600	                   movzx eax, byte [rax]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x39fe	            0x84c0	                             test al, al	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x3a00	            0x75d8	                           jne 0x4003a1a	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x3a02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	ref-filter.c	FUNCTION_48
0x3a06	              0x5d	                                 pop rbp	      1239	ref-filter.c	FUNCTION_48
0x3a07	              0xc3	                                     ret	      1239	ref-filter.c	FUNCTION_48
format_ref_array_item	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,17:ELSE,0:functions,0:IF,6	153
0x63ae	              0x55	                                push rbp	      2226	ref-filter.c	FUNCTION_83
0x63af	          0x4889e5	                            mov rbp, rsp	      2226	ref-filter.c	FUNCTION_83
0x63b2	        0x4883c480	             add rsp, 0xffffffffffffff80	      2226	ref-filter.c	FUNCTION_83
0x63b6	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2226	ref-filter.c	FUNCTION_83
0x63ba	        0x48897590	             mov qword [rbp - 0x70], rsi	      2226	ref-filter.c	FUNCTION_83
0x63be	        0x48895588	             mov qword [rbp - 0x78], rdx	      2226	ref-filter.c	FUNCTION_83
0x63c2	        0x48894d80	             mov qword [rbp - 0x80], rcx	      2226	ref-filter.c	FUNCTION_83
0x63c6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2226	ref-filter.c	FUNCTION_83
0x63cf	        0x488945f8	                mov qword [rbp - 8], rax	      2226	ref-filter.c	FUNCTION_83
0x63d3	            0x31c0	                            xor eax, eax	      2226	ref-filter.c	FUNCTION_83
0x63d5	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2228	ref-filter.c	FUNCTION_83
0x63dc	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2228	ref-filter.c	FUNCTION_83
0x63e4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2230	ref-filter.c	FUNCTION_83
0x63e8	          0x8b4008	                mov eax, dword [rax + 8]	      2230	ref-filter.c	FUNCTION_83
0x63eb	          0x8945c0	             mov dword [rbp - 0x40], eax	      2230	ref-filter.c	FUNCTION_83
0x63ee	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x63f2	        0x4883c008	                              add rax, 8	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x63f6	          0x4889c7	                            mov rdi, rax	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x63f9	      0xe860b6ffff	             call sym.push_stack_element	      2231	ref-filter.c	FUNCTION_83	CALL_1
0x63fe	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x6402	          0x488b00	                    mov rax, qword [rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x6405	        0x488945a8	             mov qword [rbp - 0x58], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x6409	      0xe9b9000000	                           jmp 0x4006507	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x640e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x6412	      0xbe29000000	                           mov esi, 0x29	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x6417	          0x4889c7	                            mov rdi, rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x641a	      0xe800000000	                          call 0x400645f	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x641f	        0x488945b8	             mov qword [rbp - 0x48], rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x6423	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x6427	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x642b	            0x7317	                           jae 0x4006484	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x642d	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x6431	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x6435	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x6439	          0x4889ce	                            mov rsi, rcx	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x643c	          0x4889c7	                            mov rdi, rax	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x643f	      0xe8aefeffff	                 call sym.append_literal	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x6444	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6448	        0x488d7002	                      lea rsi, [rax + 2]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x644c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6450	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6454	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6458	          0x4889c7	                            mov rdi, rax	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x645b	      0xe8a4b0ffff	          call sym.parse_ref_filter_atom	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6460	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x6463	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6467	            0x7838	                            js 0x40064e1	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6469	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x646d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6471	          0x8b75a4	             mov esi, dword [rbp - 0x5c]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6474	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6478	          0x4889c7	                            mov rdi, rax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x647b	      0xe86ee6ffff	             call sym.get_ref_atom_value	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6480	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6482	            0x751d	                           jne 0x40064e1	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x6484	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x6488	        0x488b4008	                mov rax, qword [rax + 8]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x648c	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x6490	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x6494	        0x488d75c0	                   lea rsi, [rbp - 0x40]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x6498	          0x4889cf	                            mov rdi, rcx	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x649b	            0xffd0	                                call rax	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x649d	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x649f	            0x741a	                            je 0x40064fb	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x64a1	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x64a5	        0x4883c008	                              add rax, 8	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x64a9	          0x4889c7	                            mov rdi, rax	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x64ac	      0xe8fdb5ffff	              call sym.pop_stack_element	      2243	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_8
0x64b1	      0xb8ffffffff	                     mov eax, 0xffffffff	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x64b6	      0xe920010000	                           jmp 0x400661b	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x64bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64bf	        0x4883c001	                              add rax, 1	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64c3	        0x488945a8	             mov qword [rbp - 0x58], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64cb	           0xfb600	                   movzx eax, byte [rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64ce	            0x84c0	                             test al, al	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64d0	            0x741b	                            je 0x400652d	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64d6	          0x4889c7	                            mov rdi, rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64d9	      0xe826bdffff	                      call sym.find_next	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64de	        0x488945b0	             mov qword [rbp - 0x50], rax	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64e2	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64e7	     0xf8521ffffff	                           jne 0x400644e	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x64ed	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2247	ref-filter.c	FUNCTION_83	IF_3
0x64f1	           0xfb600	                   movzx eax, byte [rax]	      2247	ref-filter.c	FUNCTION_83	IF_3
0x64f4	            0x84c0	                             test al, al	      2247	ref-filter.c	FUNCTION_83	IF_3
0x64f6	            0x7431	                            je 0x4006569	      2247	ref-filter.c	FUNCTION_83	IF_3
0x64f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x64fc	          0x4889c7	                            mov rdi, rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x64ff	      0xe800000000	                          call 0x4006544	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x6504	          0x4889c2	                            mov rdx, rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x6507	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x650b	          0x4801d0	                            add rax, rdx	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x650e	        0x488945b0	             mov qword [rbp - 0x50], rax	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x6512	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x6516	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x651a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x651e	          0x4889ce	                            mov rsi, rcx	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x6521	          0x4889c7	                            mov rdi, rax	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x6524	      0xe8c9fdffff	                 call sym.append_literal	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x6529	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2251	ref-filter.c	FUNCTION_83	IF_4
0x652d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2251	ref-filter.c	FUNCTION_83	IF_4
0x6530	            0x85c0	                           test eax, eax	      2251	ref-filter.c	FUNCTION_83	IF_4
0x6532	            0x743a	                            je 0x40065ae	      2251	ref-filter.c	FUNCTION_83	IF_4
0x6534	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2253	ref-filter.c	FUNCTION_83	IF_4
0x653c	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6540	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6544	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6548	          0x4889ce	                            mov rsi, rcx	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x654b	          0x4889c7	                            mov rdi, rax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x654e	      0xe89cb4ffff	                    call sym.append_atom	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6553	            0x85c0	                           test eax, eax	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6555	            0x7417	                            je 0x40065ae	      2254	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_11
0x6557	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x655b	        0x4883c008	                              add rax, 8	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x655f	          0x4889c7	                            mov rdi, rax	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x6562	      0xe847b5ffff	              call sym.pop_stack_element	      2255	ref-filter.c	FUNCTION_83	IF_4	IF_5	CALL_12
0x6567	      0xb8ffffffff	                     mov eax, 0xffffffff	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x656c	            0xeb6d	                           jmp 0x400661b	      2256	ref-filter.c	FUNCTION_83	IF_4	IF_5
0x656e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2259	ref-filter.c	FUNCTION_83	IF_6
0x6572	          0x488b00	                    mov rax, qword [rax]	      2259	ref-filter.c	FUNCTION_83	IF_6
0x6575	          0x4885c0	                           test rax, rax	      2259	ref-filter.c	FUNCTION_83	IF_6
0x6578	            0x7435	                            je 0x40065ef	      2259	ref-filter.c	FUNCTION_83	IF_6
0x657a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x657e	        0x4883c008	                              add rax, 8	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x6582	          0x4889c7	                            mov rdi, rax	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x6585	      0xe824b5ffff	              call sym.pop_stack_element	      2260	ref-filter.c	FUNCTION_83	IF_6	CALL_13
0x658a	      0xbf00000000	                              mov edi, 0	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x658f	      0xe8c99effff	                               call sym.	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x6594	          0x4889c2	                            mov rdx, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x6597	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x659b	      0xbeffffffff	                     mov esi, 0xffffffff	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x65a0	          0x4889c7	                            mov rdi, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x65a3	      0xb800000000	                              mov eax, 0	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x65a8	      0xe867a0ffff	                call sym.strbuf_addf_ret	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x65ad	            0xeb2c	                           jmp 0x400661b	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x65af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65b3	        0x488d5008	                      lea rdx, [rax + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65b7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65bb	          0x4889d6	                            mov rsi, rdx	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65be	          0x4889c7	                            mov rdi, rax	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65c1	      0xe800000000	                          call 0x4006606	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x65c6	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x65ca	        0x4883c008	                              add rax, 8	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x65ce	          0x4889c7	                            mov rdi, rax	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x65d1	      0xe8d8b4ffff	              call sym.pop_stack_element	      2264	ref-filter.c	FUNCTION_83	CALL_17
0x65d6	      0xb800000000	                              mov eax, 0	      2265	ref-filter.c	FUNCTION_83
0x65db	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2266	ref-filter.c	FUNCTION_83
0x65df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2266	ref-filter.c	FUNCTION_83
0x65e8	            0x7405	                            je 0x400662f	      2266	ref-filter.c	FUNCTION_83
0x65ea	      0xe800000000	                          call 0x400662f	      2266	ref-filter.c	FUNCTION_83
0x65ef	              0xc9	                                   leave	      2266	ref-filter.c	FUNCTION_83
0x65f0	              0xc3	                                     ret	      2266	ref-filter.c	FUNCTION_83
parse_opt_ref_sorting	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	19
0x68e9	              0x55	                                push rbp	      2339	ref-filter.c	FUNCTION_89
0x68ea	          0x4889e5	                            mov rbp, rsp	      2339	ref-filter.c	FUNCTION_89
0x68ed	        0x4883ec20	                           sub rsp, 0x20	      2339	ref-filter.c	FUNCTION_89
0x68f1	        0x48897df8	                mov qword [rbp - 8], rdi	      2339	ref-filter.c	FUNCTION_89
0x68f5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2339	ref-filter.c	FUNCTION_89
0x68f9	          0x8955ec	             mov dword [rbp - 0x14], edx	      2339	ref-filter.c	FUNCTION_89
0x68fc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2340	ref-filter.c	FUNCTION_89	IF_1
0x6901	            0x7507	                           jne 0x400694a	      2340	ref-filter.c	FUNCTION_89	IF_1
0x6903	      0xb8ffffffff	                     mov eax, 0xffffffff	      2341	ref-filter.c	FUNCTION_89	IF_1
0x6908	            0xeb1c	                           jmp 0x4006966	      2341	ref-filter.c	FUNCTION_89	IF_1
0x690a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x690e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x6912	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x6916	          0x4889d6	                            mov rsi, rdx	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x6919	          0x4889c7	                            mov rdi, rax	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x691c	      0xe800000000	                          call 0x4006961	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x6921	      0xb800000000	                              mov eax, 0	      2343	ref-filter.c	FUNCTION_89
0x6926	              0xc9	                                   leave	      2344	ref-filter.c	FUNCTION_89
0x6927	              0xc3	                                     ret	      2344	ref-filter.c	FUNCTION_89
if_atom_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,0	35
0x1d4c	              0x55	                                push rbp	       638	ref-filter.c	FUNCTION_24
0x1d4d	          0x4889e5	                            mov rbp, rsp	       638	ref-filter.c	FUNCTION_24
0x1d50	        0x4883ec30	                           sub rsp, 0x30	       638	ref-filter.c	FUNCTION_24
0x1d54	        0x48897de8	             mov qword [rbp - 0x18], rdi	       638	ref-filter.c	FUNCTION_24
0x1d58	        0x488975e0	             mov qword [rbp - 0x20], rsi	       638	ref-filter.c	FUNCTION_24
0x1d5c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       638	ref-filter.c	FUNCTION_24
0x1d60	      0xbe01000000	                              mov esi, 1	       640	ref-filter.c	FUNCTION_24	CALL_1
0x1d65	      0xbf18000000	                           mov edi, 0x18	       640	ref-filter.c	FUNCTION_24	CALL_1
0x1d6a	      0xe800000000	                          call 0x4001daf	       640	ref-filter.c	FUNCTION_24	CALL_1
0x1d6f	        0x488945f0	             mov qword [rbp - 0x10], rax	       640	ref-filter.c	FUNCTION_24	CALL_1
0x1d73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ref-filter.c	FUNCTION_24
0x1d77	        0x488b4018	            mov rax, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x1d7b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x1d7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       642	ref-filter.c	FUNCTION_24
0x1d83	        0x48895008	                mov qword [rax + 8], rdx	       642	ref-filter.c	FUNCTION_24
0x1d87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       643	ref-filter.c	FUNCTION_24
0x1d8b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       643	ref-filter.c	FUNCTION_24
0x1d8f	          0x8b5010	            mov edx, dword [rax + 0x10] 	       643	ref-filter.c	FUNCTION_24
0x1d92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       643	ref-filter.c	FUNCTION_24
0x1d96	            0x8910	                    mov dword [rax], edx	       643	ref-filter.c	FUNCTION_24
0x1d98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	ref-filter.c	FUNCTION_24	CALL_2
0x1d9c	        0x4883c008	                              add rax, 8	       645	ref-filter.c	FUNCTION_24	CALL_2
0x1da0	          0x4889c7	                            mov rdi, rax	       645	ref-filter.c	FUNCTION_24	CALL_2
0x1da3	      0xe8b6fcffff	             call sym.push_stack_element	       645	ref-filter.c	FUNCTION_24	CALL_2
0x1da8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	ref-filter.c	FUNCTION_24
0x1dac	        0x488b4008	                mov rax, qword [rax + 8]	       646	ref-filter.c	FUNCTION_24
0x1db0	        0x488945f8	                mov qword [rbp - 8], rax	       646	ref-filter.c	FUNCTION_24
0x1db4	        0x488b45f8	                mov rax, qword [rbp - 8]	       647	ref-filter.c	FUNCTION_24
0x1db8	    0x48c740200000	               mov qword [rax + 0x20], 0	       647	ref-filter.c	FUNCTION_24
0x1dc0	        0x488b45f8	                mov rax, qword [rbp - 8]	       648	ref-filter.c	FUNCTION_24
0x1dc4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       648	ref-filter.c	FUNCTION_24
0x1dc8	        0x48895028	             mov qword [rax + 0x28], rdx	       648	ref-filter.c	FUNCTION_24
0x1dcc	      0xb800000000	                              mov eax, 0	       649	ref-filter.c	FUNCTION_24
0x1dd1	              0xc9	                                   leave	       650	ref-filter.c	FUNCTION_24
0x1dd2	              0xc3	                                     ret	       650	ref-filter.c	FUNCTION_24
get_symref	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,1:functions,0:IF,1	20
0x4148	              0x55	                                push rbp	      1420	ref-filter.c	FUNCTION_54
0x4149	          0x4889e5	                            mov rbp, rsp	      1420	ref-filter.c	FUNCTION_54
0x414c	        0x4883ec10	                           sub rsp, 0x10	      1420	ref-filter.c	FUNCTION_54
0x4150	        0x48897df8	                mov qword [rbp - 8], rdi	      1420	ref-filter.c	FUNCTION_54
0x4154	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1420	ref-filter.c	FUNCTION_54
0x4158	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1421	ref-filter.c	FUNCTION_54	IF_1
0x415c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4160	          0x4885c0	                           test rax, rax	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4163	            0x7507	                           jne 0x40041ac	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4165	      0xb800000000	                              mov eax, 0	      1422	ref-filter.c	FUNCTION_54	IF_1
0x416a	            0xeb1b	                           jmp 0x40041c7	      1422	ref-filter.c	FUNCTION_54	IF_1
0x416c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4170	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4174	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4178	        0x4883c210	                           add rdx, 0x10	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x417c	          0x4889c6	                            mov rsi, rax	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x417f	          0x4889d7	                            mov rdi, rdx	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4182	      0xe817faffff	                       call sym.show_ref	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4187	              0xc9	                                   leave	      1425	ref-filter.c	FUNCTION_54
0x4188	              0xc3	                                     ret	      1425	ref-filter.c	FUNCTION_54
verify_ref_format	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,10:ELSE,0:functions,0:IF,4	108
0x2259	              0x55	                                push rbp	       769	ref-filter.c	FUNCTION_30
0x225a	          0x4889e5	                            mov rbp, rsp	       769	ref-filter.c	FUNCTION_30
0x225d	        0x4883ec60	                           sub rsp, 0x60	       769	ref-filter.c	FUNCTION_30
0x2261	        0x48897da8	             mov qword [rbp - 0x58], rdi	       769	ref-filter.c	FUNCTION_30
0x2265	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	ref-filter.c	FUNCTION_30
0x226e	        0x488945f8	                mov qword [rbp - 8], rax	       769	ref-filter.c	FUNCTION_30
0x2272	            0x31c0	                            xor eax, eax	       769	ref-filter.c	FUNCTION_30
0x2274	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       772	ref-filter.c	FUNCTION_30
0x2278	    0xc74010000000	               mov dword [rax + 0x10], 0	       772	ref-filter.c	FUNCTION_30
0x227f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x2283	          0x488b00	                    mov rax, qword [rax]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x2286	        0x488945c8	             mov qword [rbp - 0x38], rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x228a	      0xe907010000	                           jmp 0x40023d6	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x228f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x2297	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x229f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x22a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x22ab	      0xbe29000000	                           mov esi, 0x29	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x22b0	          0x4889c7	                            mov rdi, rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x22b3	      0xe800000000	                          call 0x40022f8	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x22b8	        0x488945d8	             mov qword [rbp - 0x28], rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x22bc	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x22c1	            0x752b	                           jne 0x400232e	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x22c3	      0xbf00000000	                              mov edi, 0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22c8	      0xe890e1ffff	                               call sym.	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22cd	          0x4889c2	                            mov rdx, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22d4	          0x4889c6	                            mov rsi, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22d7	          0x4889d7	                            mov rdi, rdx	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22da	      0xb800000000	                              mov eax, 0	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22df	      0xe800000000	                          call 0x4002324	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22e4	      0xe817ddffff	                    call sym.const_error	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22e9	      0xe900010000	                           jmp 0x400242e	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x22ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x22f2	        0x488d7002	                      lea rsi, [rax + 2]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x22f6	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x22fa	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x22fe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x2302	          0x4889c7	                            mov rdi, rax	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x2305	      0xe8faf1ffff	          call sym.parse_ref_filter_atom	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x230a	          0x8945bc	             mov dword [rbp - 0x44], eax	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x230d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x2311	            0x7916	                           jns 0x4002369	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x2313	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_6
0x2317	          0x4889c6	                            mov rsi, rax	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_6
0x231a	      0xbf00000000	                              mov edi, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_6
0x231f	      0xb800000000	                              mov eax, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_6
0x2324	      0xe800000000	                          call 0x4002369	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_6
0x2329	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	ref-filter.c	FUNCTION_30	FOR_1
0x232d	        0x4883c001	                              add rax, 1	       784	ref-filter.c	FUNCTION_30	FOR_1
0x2331	        0x488945c8	             mov qword [rbp - 0x38], rax	       784	ref-filter.c	FUNCTION_30	FOR_1
0x2335	    0x488b0d000000	            mov rcx, qword [0x0400237c] 	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x233c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x233f	          0x4863d0	                         movsxd rdx, eax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2342	          0x4889d0	                            mov rax, rdx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2345	          0x4801c0	                            add rax, rax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2348	          0x4801d0	                            add rax, rdx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x234b	        0x48c1e005	                              shl rax, 5	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x234f	          0x4801c8	                            add rax, rcx	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2352	          0x488b00	                    mov rax, qword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2355	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2359	      0xbe00000000	                              mov esi, 0	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x235e	          0x4889c7	                            mov rdi, rax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2361	      0xe8a5dcffff	                    call sym.skip_prefix	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2366	            0x85c0	                           test eax, eax	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x2368	            0x7420	                            je 0x40023ca	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_7
0x236a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x236e	      0xbe00000000	                              mov esi, 0	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x2373	          0x4889c7	                            mov rdi, rax	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x2376	      0xe800000000	                          call 0x40023bb	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x237b	            0x85c0	                           test eax, eax	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x237d	           0xf95c0	                                setne al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x2380	           0xfb6d0	                           movzx edx, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x2383	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x2387	          0x895010	             mov dword [rax + 0x10], edx	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x238a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_9
0x238e	          0x4889c7	                            mov rdi, rax	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_9
0x2391	      0xe800000000	                          call 0x40023d6	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_9
0x2396	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x239a	           0xfb600	                   movzx eax, byte [rax]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x239d	            0x84c0	                             test al, al	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x239f	            0x741b	                            je 0x40023fc	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23a5	          0x4889c7	                            mov rdi, rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23a8	      0xe857feffff	                      call sym.find_next	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23ad	        0x488945d0	             mov qword [rbp - 0x30], rax	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23b1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23b6	     0xf85d3feffff	                           jne 0x40022cf	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x23bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23c0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23c3	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23c5	            0x7422	                            je 0x4002429	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23c7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23cb	          0x8b400c	              mov eax, dword [rax + 0xc]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23ce	            0x89c6	                            mov esi, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23d0	      0xbf01000000	                              mov edi, 1	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23d5	      0xe800000000	                          call 0x400241a	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23da	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23dc	            0x750b	                           jne 0x4002429	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_10
0x23de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       791	ref-filter.c	FUNCTION_30	IF_4
0x23e2	    0xc74010000000	               mov dword [rax + 0x10], 0	       791	ref-filter.c	FUNCTION_30	IF_4
0x23e9	      0xb800000000	                              mov eax, 0	       792	ref-filter.c	FUNCTION_30
0x23ee	        0x488b4df8	                mov rcx, qword [rbp - 8]	       793	ref-filter.c	FUNCTION_30
0x23f2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       793	ref-filter.c	FUNCTION_30
0x23fb	            0x7405	                            je 0x4002442	       793	ref-filter.c	FUNCTION_30
0x23fd	      0xe800000000	                          call 0x4002442	       793	ref-filter.c	FUNCTION_30
0x2402	              0xc9	                                   leave	       793	ref-filter.c	FUNCTION_30
0x2403	              0xc3	                                     ret	       793	ref-filter.c	FUNCTION_30
strtol_i	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	46
0x1b5	              0x55	                                push rbp	      1026	git-compat-util.h	FUNCTION_125
0x1b6	          0x4889e5	                            mov rbp, rsp	      1026	git-compat-util.h	FUNCTION_125
0x1b9	        0x4883ec40	                           sub rsp, 0x40	      1026	git-compat-util.h	FUNCTION_125
0x1bd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1026	git-compat-util.h	FUNCTION_125
0x1c1	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1026	git-compat-util.h	FUNCTION_125
0x1c4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1026	git-compat-util.h	FUNCTION_125
0x1c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1026	git-compat-util.h	FUNCTION_125
0x1d1	        0x488945f8	                mov qword [rbp - 8], rax	      1026	git-compat-util.h	FUNCTION_125
0x1d5	            0x31c0	                            xor eax, eax	      1026	git-compat-util.h	FUNCTION_125
0x1d7	      0xe800000000	                          call 0x400021c	      1030	git-compat-util.h	FUNCTION_125
0x1dc	    0xc70000000000	                      mov dword [rax], 0	      1030	git-compat-util.h	FUNCTION_125
0x1e2	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1e5	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1ed	          0x4889ce	                            mov rsi, rcx	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1f0	          0x4889c7	                            mov rdi, rax	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1f3	      0xe800000000	                          call 0x4000238	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1f8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1031	git-compat-util.h	FUNCTION_125	CALL_1
0x1fc	      0xe800000000	                          call 0x4000241	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x201	            0x8b00	                    mov eax, dword [rax]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x203	            0x85c0	                           test eax, eax	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x205	            0x7521	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x207	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x20b	           0xfb600	                   movzx eax, byte [rax]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x20e	            0x84c0	                             test al, al	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x210	            0x7516	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x212	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x216	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x21a	            0x740c	                            je 0x4000268	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x21c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x220	            0x4898	                                    cdqe	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x222	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x226	            0x7407	                            je 0x400026f	      1032	git-compat-util.h	FUNCTION_125	IF_1
0x228	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	git-compat-util.h	FUNCTION_125	IF_1
0x22d	            0xeb11	                           jmp 0x4000280	      1033	git-compat-util.h	FUNCTION_125	IF_1
0x22f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	git-compat-util.h	FUNCTION_125
0x233	            0x89c2	                            mov edx, eax	      1034	git-compat-util.h	FUNCTION_125
0x235	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1034	git-compat-util.h	FUNCTION_125
0x239	            0x8910	                    mov dword [rax], edx	      1034	git-compat-util.h	FUNCTION_125
0x23b	      0xb800000000	                              mov eax, 0	      1035	git-compat-util.h	FUNCTION_125
0x240	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1036	git-compat-util.h	FUNCTION_125
0x244	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1036	git-compat-util.h	FUNCTION_125
0x24d	            0x7405	                            je 0x4000294	      1036	git-compat-util.h	FUNCTION_125
0x24f	      0xe800000000	                          call 0x4000294	      1036	git-compat-util.h	FUNCTION_125
0x254	              0xc9	                                   leave	      1036	git-compat-util.h	FUNCTION_125
0x255	              0xc3	                                     ret	      1036	git-compat-util.h	FUNCTION_125
if_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,3:functions,0:IF,3	50
0x1403	              0x55	                                push rbp	       360	ref-filter.c	FUNCTION_14
0x1404	          0x4889e5	                            mov rbp, rsp	       360	ref-filter.c	FUNCTION_14
0x1407	        0x4883ec20	                           sub rsp, 0x20	       360	ref-filter.c	FUNCTION_14
0x140b	        0x48897df8	                mov qword [rbp - 8], rdi	       360	ref-filter.c	FUNCTION_14
0x140f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       360	ref-filter.c	FUNCTION_14
0x1413	        0x488955e8	             mov qword [rbp - 0x18], rdx	       360	ref-filter.c	FUNCTION_14
0x1417	        0x48894de0	             mov qword [rbp - 0x20], rcx	       360	ref-filter.c	FUNCTION_14
0x141b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       361	ref-filter.c	FUNCTION_14	IF_1
0x1420	            0x7515	                           jne 0x4001477	       361	ref-filter.c	FUNCTION_14	IF_1
0x1422	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	ref-filter.c	FUNCTION_14	IF_1
0x1426	    0xc74010020000	               mov dword [rax + 0x10], 2	       362	ref-filter.c	FUNCTION_14	IF_1
0x142d	      0xb800000000	                              mov eax, 0	       363	ref-filter.c	FUNCTION_14	IF_1
0x1432	      0xe988000000	                           jmp 0x40014ff	       363	ref-filter.c	FUNCTION_14	IF_1
0x1437	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x143b	        0x488d5018	                   lea rdx, [rax + 0x18]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x143f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x1443	      0xbe00000000	                              mov esi, 0	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x1448	          0x4889c7	                            mov rdi, rax	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x144b	      0xe8bbebffff	                    call sym.skip_prefix	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x1450	            0x85c0	                           test eax, eax	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x1452	            0x740d	                            je 0x40014a1	       364	ref-filter.c	FUNCTION_14	ELSE_1	IF_2	CALL_1
0x1454	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x1458	    0xc74010000000	               mov dword [rax + 0x10], 0	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x145f	            0xeb59	                           jmp 0x40014fa	       365	ref-filter.c	FUNCTION_14	ELSE_1	IF_2
0x1461	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x1465	        0x488d5018	                   lea rdx, [rax + 0x18]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x1469	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x146d	      0xbe00000000	                              mov esi, 0	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x1472	          0x4889c7	                            mov rdi, rax	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x1475	      0xe891ebffff	                    call sym.skip_prefix	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x147a	            0x85c0	                           test eax, eax	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x147c	            0x740d	                            je 0x40014cb	       366	ref-filter.c	FUNCTION_14	ELSE_2	IF_3	CALL_2
0x147e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x1482	    0xc74010010000	               mov dword [rax + 0x10], 1	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x1489	            0xeb2f	                           jmp 0x40014fa	       367	ref-filter.c	FUNCTION_14	ELSE_2	IF_3
0x148b	      0xbf00000000	                              mov edi, 0	       369	ref-filter.c	FUNCTION_14	CALL_4
0x1490	      0xe8c8efffff	                               call sym.	       369	ref-filter.c	FUNCTION_14	CALL_4
0x1495	          0x4889c6	                            mov rsi, rax	       369	ref-filter.c	FUNCTION_14	CALL_4
0x1498	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	ref-filter.c	FUNCTION_14	CALL_4
0x149c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14a0	          0x4889d1	                            mov rcx, rdx	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14a3	          0x4889f2	                            mov rdx, rsi	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14a6	      0xbeffffffff	                     mov esi, 0xffffffff	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14ab	          0x4889c7	                            mov rdi, rax	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14ae	      0xb800000000	                              mov eax, 0	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14b3	      0xe85cf1ffff	                call sym.strbuf_addf_ret	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14b8	            0xeb05	                           jmp 0x40014ff	       369	ref-filter.c	FUNCTION_14	CALL_4
0x14ba	      0xb800000000	                              mov eax, 0	       370	ref-filter.c	FUNCTION_14
0x14bf	              0xc9	                                   leave	       371	ref-filter.c	FUNCTION_14
0x14c0	              0xc3	                                     ret	       371	ref-filter.c	FUNCTION_14
_	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	15
0x45d	              0x55	                                push rbp	        51	gettext.h	FUNCTION_131
0x45e	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_131
0x461	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_131
0x465	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_131
0x469	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_131	IF_1
0x46d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_131	IF_1
0x470	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_131	IF_1
0x472	            0x7507	                           jne 0x40004bb	        52	gettext.h	FUNCTION_131	IF_1
0x474	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_131	IF_1
0x479	            0xeb0c	                           jmp 0x40004c7	        53	gettext.h	FUNCTION_131	IF_1
0x47b	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_131	CALL_2
0x47f	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_131	CALL_2
0x482	      0xe800000000	                          call 0x40004c7	        54	gettext.h	FUNCTION_131	CALL_2
0x487	              0xc9	                                   leave	        55	gettext.h	FUNCTION_131
0x488	              0xc3	                                     ret	        55	gettext.h	FUNCTION_131
refname_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	17
0x108d	              0x55	                                push rbp	       291	ref-filter.c	FUNCTION_11
0x108e	          0x4889e5	                            mov rbp, rsp	       291	ref-filter.c	FUNCTION_11
0x1091	        0x4883ec20	                           sub rsp, 0x20	       291	ref-filter.c	FUNCTION_11
0x1095	        0x48897df8	                mov qword [rbp - 8], rdi	       291	ref-filter.c	FUNCTION_11
0x1099	        0x488975f0	             mov qword [rbp - 0x10], rsi	       291	ref-filter.c	FUNCTION_11
0x109d	        0x488955e8	             mov qword [rbp - 0x18], rdx	       291	ref-filter.c	FUNCTION_11
0x10a1	        0x48894de0	             mov qword [rbp - 0x20], rcx	       291	ref-filter.c	FUNCTION_11
0x10a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10a9	          0x488b10	                    mov rdx, qword [rax]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10b0	        0x488d7810	                   lea rdi, [rax + 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10b4	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10bc	          0x4889c6	                            mov rsi, rax	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10bf	      0xe8e7f6ffff	   call sym.refname_atom_parser_internal	       292	ref-filter.c	FUNCTION_11	CALL_1
0x10c4	              0xc9	                                   leave	       293	ref-filter.c	FUNCTION_11
0x10c5	              0xc3	                                     ret	       293	ref-filter.c	FUNCTION_11
grab_person	SWITCH,0:DO,0:FOR,2:WHILE,0:CALL,20:ELSE,4:functions,0:IF,17	263
0x2e2a	              0x55	                                push rbp	      1008	ref-filter.c	FUNCTION_42
0x2e2b	          0x4889e5	                            mov rbp, rsp	      1008	ref-filter.c	FUNCTION_42
0x2e2e	        0x4883ec60	                           sub rsp, 0x60	      1008	ref-filter.c	FUNCTION_42
0x2e32	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1008	ref-filter.c	FUNCTION_42
0x2e36	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1008	ref-filter.c	FUNCTION_42
0x2e3a	          0x8955bc	             mov dword [rbp - 0x44], edx	      1008	ref-filter.c	FUNCTION_42
0x2e3d	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1008	ref-filter.c	FUNCTION_42
0x2e41	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      1008	ref-filter.c	FUNCTION_42
0x2e45	        0x4c894da0	              mov qword [rbp - 0x60], r9	      1008	ref-filter.c	FUNCTION_42
0x2e49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x2e4d	          0x4889c7	                            mov rdi, rax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x2e50	      0xe800000000	                          call 0x4002e95	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x2e55	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1010	ref-filter.c	FUNCTION_42	CALL_1
0x2e58	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1011	ref-filter.c	FUNCTION_42
0x2e60	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x2e67	      0xe900020000	                           jmp 0x40030ac	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x2e6c	    0x488b0d000000	            mov rcx, qword [0x04002eb3] 	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e73	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e76	          0x4863d0	                         movsxd rdx, eax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e79	          0x4889d0	                            mov rax, rdx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e7c	          0x4801c0	                            add rax, rax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e7f	          0x4801d0	                            add rax, rdx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e82	        0x48c1e005	                              shl rax, 5	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e86	          0x4801c8	                            add rax, rcx	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e89	          0x488b00	                    mov rax, qword [rax]	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e8c	        0x488945e0	             mov qword [rbp - 0x20], rax	      1014	ref-filter.c	FUNCTION_42	FOR_1
0x2e90	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2e93	            0x4898	                                    cdqe	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2e95	        0x48c1e005	                              shl rax, 5	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2e99	          0x4889c2	                            mov rdx, rax	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2e9c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2ea0	          0x4801d0	                            add rax, rdx	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2ea3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1015	ref-filter.c	FUNCTION_42	FOR_1
0x2ea7	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eab	           0xf95c2	                                setne dl	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eb2	           0xfb600	                   movzx eax, byte [rax]	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eb5	            0x3c2a	                            cmp al, 0x2a	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eb7	           0xf94c0	                                 sete al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2eba	            0x31d0	                            xor eax, edx	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2ebc	            0x84c0	                             test al, al	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2ebe	     0xf859d010000	                           jne 0x40030a1	      1016	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x2ec4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1018	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x2ec8	            0x7405	                            je 0x4002f0f	      1018	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x2eca	      0x488345e001	               add qword [rbp - 0x20], 1	      1019	ref-filter.c	FUNCTION_42	FOR_1	IF_2
0x2ecf	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ed2	          0x4863d0	                         movsxd rdx, eax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ed5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ed9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2edd	          0x4889ce	                            mov rsi, rcx	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ee0	          0x4889c7	                            mov rdi, rax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ee3	      0xe800000000	                          call 0x4002f28	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ee8	            0x85c0	                           test eax, eax	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2eea	     0xf8574010000	                           jne 0x40030a4	      1020	ref-filter.c	FUNCTION_42	FOR_1	IF_3	CALL_2
0x2ef0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2ef3	          0x4863d0	                         movsxd rdx, eax	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2ef6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2efa	          0x4801d0	                            add rax, rdx	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2efd	           0xfb600	                   movzx eax, byte [rax]	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2f00	            0x84c0	                             test al, al	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2f02	            0x745e	                            je 0x4002fa2	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2f04	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f07	          0x4863d0	                         movsxd rdx, eax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f0e	          0x4801d0	                            add rax, rdx	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f11	      0xbe00000000	                              mov esi, 0	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f16	          0x4889c7	                            mov rdi, rax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f19	      0xe800000000	                          call 0x4002f5e	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f1e	            0x85c0	                           test eax, eax	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2f20	            0x7440	                            je 0x4002fa2	      1022	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x2f22	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f25	          0x4863d0	                         movsxd rdx, eax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f28	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f2c	          0x4801d0	                            add rax, rdx	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f2f	      0xbe00000000	                              mov esi, 0	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f34	          0x4889c7	                            mov rdi, rax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f37	      0xe800000000	                          call 0x4002f7c	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f3c	            0x85c0	                           test eax, eax	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f3e	            0x7422	                            je 0x4002fa2	      1023	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_3
0x2f40	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f43	          0x4863d0	                         movsxd rdx, eax	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f4a	          0x4801d0	                            add rax, rdx	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f4d	      0xbe00000000	                              mov esi, 0	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f52	          0x4889c7	                            mov rdi, rax	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f55	      0xe800000000	                          call 0x4002f9a	      1025	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_5
0x2f5a	            0x85c0	                           test eax, eax	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f5c	     0xf8405010000	                            je 0x40030a7	      1024	ref-filter.c	FUNCTION_42	FOR_1	IF_4	CALL_4
0x2f62	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x2f67	            0x751b	                           jne 0x4002fc4	      1027	ref-filter.c	FUNCTION_42	FOR_1	IF_5
0x2f69	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f6d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f71	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f74	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f78	          0x4889c7	                            mov rdi, rax	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f7b	      0xe8ecfaffff	                   call sym.find_wholine	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f80	        0x488945d8	             mov qword [rbp - 0x28], rax	      1028	ref-filter.c	FUNCTION_42	FOR_1	CALL_6
0x2f84	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x2f89	     0xf8423020000	                            je 0x40031f2	      1029	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x2f8f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2f92	          0x4863d0	                         movsxd rdx, eax	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2f95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2f99	          0x4801d0	                            add rax, rdx	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2f9c	           0xfb600	                   movzx eax, byte [rax]	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2f9f	            0x84c0	                             test al, al	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2fa1	            0x751b	                           jne 0x4002ffe	      1031	ref-filter.c	FUNCTION_42	FOR_1	IF_7
0x2fa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2fa7	          0x4889c7	                            mov rdi, rax	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2faa	      0xe874fbffff	                      call sym.copy_line	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2faf	          0x4889c2	                            mov rdx, rax	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2fb2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2fb6	          0x488910	                    mov qword [rax], rdx	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2fb9	      0xe9aa000000	                           jmp 0x40030a8	      1032	ref-filter.c	FUNCTION_42	FOR_1	CALL_7
0x2fbe	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fc1	          0x4863d0	                         movsxd rdx, eax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fc4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fc8	          0x4801d0	                            add rax, rdx	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fcb	      0xbe00000000	                              mov esi, 0	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fd0	          0x4889c7	                            mov rdi, rax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fd3	      0xe800000000	                          call 0x4003018	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fd8	            0x85c0	                           test eax, eax	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fda	            0x7518	                           jne 0x4003034	      1033	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8	CALL_8
0x2fdc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2fe0	          0x4889c7	                            mov rdi, rax	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2fe3	      0xe87efbffff	                      call sym.copy_name	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2fe8	          0x4889c2	                            mov rdx, rax	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2feb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2fef	          0x488910	                    mov qword [rax], rdx	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2ff2	            0xeb74	                           jmp 0x40030a8	      1034	ref-filter.c	FUNCTION_42	FOR_1	ELSE_1	IF_8
0x2ff4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x2ff7	          0x4863d0	                         movsxd rdx, eax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x2ffa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x2ffe	          0x4801d0	                            add rax, rdx	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x3001	      0xbe00000000	                              mov esi, 0	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x3006	          0x4889c7	                            mov rdi, rax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x3009	      0xe800000000	                          call 0x400304e	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x300e	            0x85c0	                           test eax, eax	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x3010	            0x7518	                           jne 0x400306a	      1035	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9	CALL_10
0x3012	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x3016	          0x4889c7	                            mov rdi, rax	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x3019	      0xe8bcfbffff	                     call sym.copy_email	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x301e	          0x4889c2	                            mov rdx, rax	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x3021	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x3025	          0x488910	                    mov qword [rax], rdx	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x3028	            0xeb3e	                           jmp 0x40030a8	      1036	ref-filter.c	FUNCTION_42	FOR_1	ELSE_2	IF_9
0x302a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x302d	          0x4863d0	                         movsxd rdx, eax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3030	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3034	          0x4801d0	                            add rax, rdx	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3037	      0xbe00000000	                              mov esi, 0	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x303c	          0x4889c7	                            mov rdi, rax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x303f	      0xe800000000	                          call 0x4003084	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3044	            0x85c0	                           test eax, eax	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3046	            0x7420	                            je 0x40030a8	      1037	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10	CALL_12
0x3048	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x304c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x3050	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x3054	          0x4889ce	                            mov rsi, rcx	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x3057	          0x4889c7	                            mov rdi, rax	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x305a	      0xe85ffcffff	                      call sym.grab_date	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x305f	            0xeb07	                           jmp 0x40030a8	      1038	ref-filter.c	FUNCTION_42	FOR_1	ELSE_3	IF_10
0x3061	              0x90	                                     nop	      1017	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x3062	            0xeb04	                           jmp 0x40030a8	      1017	ref-filter.c	FUNCTION_42	FOR_1	IF_1
0x3064	              0x90	                                     nop	      1021	ref-filter.c	FUNCTION_42	FOR_1	IF_3
0x3065	            0xeb01	                           jmp 0x40030a8	      1021	ref-filter.c	FUNCTION_42	FOR_1	IF_3
0x3067	              0x90	                                     nop	      1026	ref-filter.c	FUNCTION_42	FOR_1	IF_4
0x3068	        0x8345d001	               add dword [rbp - 0x30], 1	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x306c	    0x8b0500000000	            mov eax, dword [0x040030b2] 	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x3072	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x3075	     0xf8cf1fdffff	                            jl 0x4002eac	      1013	ref-filter.c	FUNCTION_42	FOR_1
0x307b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x307f	      0xbe00000000	                              mov esi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x3084	          0x4889c7	                            mov rdi, rax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x3087	      0xe800000000	                          call 0x40030cc	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x308c	            0x85c0	                           test eax, eax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x308e	            0x7419	                            je 0x40030e9	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x3090	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x3094	      0xbe00000000	                              mov esi, 0	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x3099	          0x4889c7	                            mov rdi, rax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x309c	      0xe800000000	                          call 0x40030e1	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x30a1	            0x85c0	                           test eax, eax	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x30a3	     0xf850c010000	                           jne 0x40031f5	      1045	ref-filter.c	FUNCTION_42	IF_11	CALL_15
0x30a9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1047	ref-filter.c	FUNCTION_42	IF_12
0x30ae	            0x751b	                           jne 0x400310b	      1047	ref-filter.c	FUNCTION_42	IF_12
0x30b0	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30b4	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30b8	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30bf	          0x4889c7	                            mov rdi, rax	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30c2	      0xe8a5f9ffff	                   call sym.find_wholine	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30c7	        0x488945d8	             mov qword [rbp - 0x28], rax	      1048	ref-filter.c	FUNCTION_42	CALL_16
0x30cb	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1049	ref-filter.c	FUNCTION_42	IF_13
0x30d0	     0xf84e2000000	                            je 0x40031f8	      1049	ref-filter.c	FUNCTION_42	IF_13
0x30d6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x30dd	      0xe9bf000000	                           jmp 0x40031e1	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x30e2	    0x488b0d000000	            mov rcx, qword [0x04003129] 	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30e9	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30ec	          0x4863d0	                         movsxd rdx, eax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30ef	          0x4889d0	                            mov rax, rdx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30f2	          0x4801c0	                            add rax, rax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30f5	          0x4801d0	                            add rax, rdx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30f8	        0x48c1e005	                              shl rax, 5	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30fc	          0x4801c8	                            add rax, rcx	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x30ff	          0x488b00	                    mov rax, qword [rax]	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x3102	        0x488945e8	             mov qword [rbp - 0x18], rax	      1052	ref-filter.c	FUNCTION_42	FOR_2
0x3106	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x3109	            0x4898	                                    cdqe	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x310b	        0x48c1e005	                              shl rax, 5	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x310f	          0x4889c2	                            mov rdx, rax	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x3112	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x3116	          0x4801d0	                            add rax, rdx	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x3119	        0x488945f8	                mov qword [rbp - 8], rax	      1053	ref-filter.c	FUNCTION_42	FOR_2
0x311d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3121	           0xf95c2	                                setne dl	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3124	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3128	           0xfb600	                   movzx eax, byte [rax]	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x312b	            0x3c2a	                            cmp al, 0x2a	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x312d	           0xf94c0	                                 sete al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3130	            0x31d0	                            xor eax, edx	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3132	            0x84c0	                             test al, al	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3134	            0x7566	                           jne 0x40031dc	      1054	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x3136	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1056	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x313a	            0x7405	                            je 0x4003181	      1056	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x313c	      0x488345e801	               add qword [rbp - 0x18], 1	      1057	ref-filter.c	FUNCTION_42	FOR_2	IF_15
0x3141	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x3145	      0xbe00000000	                              mov esi, 0	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x314a	          0x4889c7	                            mov rdi, rax	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x314d	      0xe800000000	                          call 0x4003192	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x3152	            0x85c0	                           test eax, eax	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x3154	            0x7419	                            je 0x40031af	      1059	ref-filter.c	FUNCTION_42	FOR_2	IF_16	CALL_17
0x3156	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x315a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x315e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x3162	          0x4889ce	                            mov rsi, rcx	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x3165	          0x4889c7	                            mov rdi, rax	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x3168	      0xe851fbffff	                      call sym.grab_date	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x316d	            0xeb2e	                           jmp 0x40031dd	      1060	ref-filter.c	FUNCTION_42	FOR_2	CALL_18
0x316f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x3173	      0xbe00000000	                              mov esi, 0	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x3178	          0x4889c7	                            mov rdi, rax	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x317b	      0xe800000000	                          call 0x40031c0	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x3180	            0x85c0	                           test eax, eax	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x3182	            0x7519	                           jne 0x40031dd	      1061	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17	CALL_19
0x3184	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x3188	          0x4889c7	                            mov rdi, rax	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x318b	      0xe893f9ffff	                      call sym.copy_line	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x3190	          0x4889c2	                            mov rdx, rax	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x3193	        0x488b45f8	                mov rax, qword [rbp - 8]	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x3197	          0x488910	                    mov qword [rax], rdx	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x319a	            0xeb01	                           jmp 0x40031dd	      1062	ref-filter.c	FUNCTION_42	FOR_2	ELSE_4	IF_17
0x319c	              0x90	                                     nop	      1055	ref-filter.c	FUNCTION_42	FOR_2	IF_14
0x319d	        0x8345d001	               add dword [rbp - 0x30], 1	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x31a1	    0x8b0500000000	            mov eax, dword [0x040031e7] 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x31a7	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x31aa	     0xf8c32ffffff	                            jl 0x4003122	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x31b0	            0xeb07	                           jmp 0x40031f9	      1051	ref-filter.c	FUNCTION_42	FOR_2
0x31b2	              0x90	                                     nop	      1030	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x31b3	            0xeb04	                           jmp 0x40031f9	      1030	ref-filter.c	FUNCTION_42	FOR_1	IF_6
0x31b5	              0x90	                                     nop	      1046	ref-filter.c	FUNCTION_42	IF_11
0x31b6	            0xeb01	                           jmp 0x40031f9	      1046	ref-filter.c	FUNCTION_42	IF_11
0x31b8	              0x90	                                     nop	      1050	ref-filter.c	FUNCTION_42	IF_13
0x31b9	              0xc9	                                   leave	      1064	ref-filter.c	FUNCTION_42
0x31ba	              0xc3	                                     ret	      1064	ref-filter.c	FUNCTION_42
get_refname	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	21
0x4189	              0x55	                                push rbp	      1428	ref-filter.c	FUNCTION_55
0x418a	          0x4889e5	                            mov rbp, rsp	      1428	ref-filter.c	FUNCTION_55
0x418d	        0x4883ec10	                           sub rsp, 0x10	      1428	ref-filter.c	FUNCTION_55
0x4191	        0x48897df8	                mov qword [rbp - 8], rdi	      1428	ref-filter.c	FUNCTION_55
0x4195	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1428	ref-filter.c	FUNCTION_55
0x4199	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1429	ref-filter.c	FUNCTION_55	IF_1
0x419d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1429	ref-filter.c	FUNCTION_55	IF_1
0x41a0	          0x83e020	                           and eax, 0x20	      1429	ref-filter.c	FUNCTION_55	IF_1
0x41a3	            0x85c0	                           test eax, eax	      1429	ref-filter.c	FUNCTION_55	IF_1
0x41a5	            0x7407	                            je 0x40041ee	      1429	ref-filter.c	FUNCTION_55	IF_1
0x41a7	      0xe800000000	                          call 0x40041ec	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x41ac	            0xeb1b	                           jmp 0x4004209	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x41ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41b2	        0x488d5038	                   lea rdx, [rax + 0x38]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41ba	        0x4883c010	                           add rax, 0x10	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41be	          0x4889d6	                            mov rsi, rdx	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41c1	          0x4889c7	                            mov rdi, rax	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41c4	      0xe8d5f9ffff	                       call sym.show_ref	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x41c9	              0xc9	                                   leave	      1432	ref-filter.c	FUNCTION_55
0x41ca	              0xc3	                                     ret	      1432	ref-filter.c	FUNCTION_55
ref_filter_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,11:ELSE,0:functions,0:IF,9	155
0x58a5	              0x55	                                push rbp	      1976	ref-filter.c	FUNCTION_74
0x58a6	          0x4889e5	                            mov rbp, rsp	      1976	ref-filter.c	FUNCTION_74
0x58a9	        0x4883ec50	                           sub rsp, 0x50	      1976	ref-filter.c	FUNCTION_74
0x58ad	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1976	ref-filter.c	FUNCTION_74
0x58b1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1976	ref-filter.c	FUNCTION_74
0x58b5	          0x8955bc	             mov dword [rbp - 0x44], edx	      1976	ref-filter.c	FUNCTION_74
0x58b8	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1976	ref-filter.c	FUNCTION_74
0x58bc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1977	ref-filter.c	FUNCTION_74
0x58c0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1977	ref-filter.c	FUNCTION_74
0x58c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1978	ref-filter.c	FUNCTION_74
0x58c8	        0x488b4008	                mov rax, qword [rax + 8]	      1978	ref-filter.c	FUNCTION_74
0x58cc	        0x488945f0	             mov qword [rbp - 0x10], rax	      1978	ref-filter.c	FUNCTION_74
0x58d0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1980	ref-filter.c	FUNCTION_74
0x58d8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1983	ref-filter.c	FUNCTION_74	IF_1
0x58db	          0x83e008	                              and eax, 8	      1983	ref-filter.c	FUNCTION_74	IF_1
0x58de	            0x85c0	                           test eax, eax	      1983	ref-filter.c	FUNCTION_74	IF_1
0x58e0	            0x742b	                            je 0x400594d	      1983	ref-filter.c	FUNCTION_74	IF_1
0x58e2	      0xbf00000000	                              mov edi, 0	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58e7	      0xe871abffff	                               call sym.	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58ec	          0x4889c2	                            mov rdx, rax	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58f3	          0x4889c6	                            mov rsi, rax	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58f6	          0x4889d7	                            mov rdi, rdx	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58f9	      0xb800000000	                              mov eax, 0	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x58fe	      0xe800000000	                          call 0x4005943	      1984	ref-filter.c	FUNCTION_74	IF_1	CALL_2
0x5903	      0xb800000000	                              mov eax, 0	      1985	ref-filter.c	FUNCTION_74	IF_1
0x5908	      0xe9c8010000	                           jmp 0x4005b15	      1985	ref-filter.c	FUNCTION_74	IF_1
0x590d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1988	ref-filter.c	FUNCTION_74	IF_2
0x5910	          0x83e004	                              and eax, 4	      1988	ref-filter.c	FUNCTION_74	IF_2
0x5913	            0x85c0	                           test eax, eax	      1988	ref-filter.c	FUNCTION_74	IF_2
0x5915	            0x742b	                            je 0x4005982	      1988	ref-filter.c	FUNCTION_74	IF_2
0x5917	      0xbf00000000	                              mov edi, 0	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x591c	      0xe83cabffff	                               call sym.	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x5921	          0x4889c2	                            mov rdx, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x5924	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x5928	          0x4889c6	                            mov rsi, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x592b	          0x4889d7	                            mov rdi, rdx	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x592e	      0xb800000000	                              mov eax, 0	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x5933	      0xe800000000	                          call 0x4005978	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x5938	      0xb800000000	                              mov eax, 0	      1990	ref-filter.c	FUNCTION_74	IF_2
0x593d	      0xe993010000	                           jmp 0x4005b15	      1990	ref-filter.c	FUNCTION_74	IF_2
0x5942	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x5946	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x594a	          0x4889d6	                            mov rsi, rdx	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x594d	          0x4889c7	                            mov rdi, rax	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x5950	      0xe805ffffff	                call sym.filter_ref_kind	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x5955	          0x8945dc	             mov dword [rbp - 0x24], eax	      1994	ref-filter.c	FUNCTION_74	CALL_5
0x5958	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1995	ref-filter.c	FUNCTION_74	IF_3
0x595c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1995	ref-filter.c	FUNCTION_74	IF_3
0x595f	          0x2345dc	             and eax, dword [rbp - 0x24]	      1995	ref-filter.c	FUNCTION_74	IF_3
0x5962	            0x85c0	                           test eax, eax	      1995	ref-filter.c	FUNCTION_74	IF_3
0x5964	            0x750a	                           jne 0x40059b0	      1995	ref-filter.c	FUNCTION_74	IF_3
0x5966	      0xb800000000	                              mov eax, 0	      1996	ref-filter.c	FUNCTION_74	IF_3
0x596b	      0xe965010000	                           jmp 0x4005b15	      1996	ref-filter.c	FUNCTION_74	IF_3
0x5970	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x5974	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x5978	          0x4889d6	                            mov rsi, rdx	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x597b	          0x4889c7	                            mov rdi, rax	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x597e	      0xe83bfaffff	           call sym.filter_pattern_match	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x5983	            0x85c0	                           test eax, eax	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x5985	            0x750a	                           jne 0x40059d1	      1998	ref-filter.c	FUNCTION_74	IF_4	CALL_6
0x5987	      0xb800000000	                              mov eax, 0	      1999	ref-filter.c	FUNCTION_74	IF_4
0x598c	      0xe944010000	                           jmp 0x4005b15	      1999	ref-filter.c	FUNCTION_74	IF_4
0x5991	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x5995	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x5998	            0x85c0	                           test eax, eax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x599a	            0x742a	                            je 0x4005a06	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x599c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59a0	        0x488d4808	                      lea rcx, [rax + 8]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59a4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59a8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59ac	          0x4889c6	                            mov rsi, rax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59af	          0x4889cf	                            mov rdi, rcx	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59b2	      0xe8ecfbffff	                call sym.match_points_at	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59b7	          0x4885c0	                           test rax, rax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59ba	            0x750a	                           jne 0x4005a06	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x59bc	      0xb800000000	                              mov eax, 0	      2002	ref-filter.c	FUNCTION_74	IF_5
0x59c1	      0xe90f010000	                           jmp 0x4005b15	      2002	ref-filter.c	FUNCTION_74	IF_5
0x59c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59ca	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59ce	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59d1	            0x7529	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59d7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59db	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59de	            0x751c	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59e4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59e8	          0x4885c0	                           test rax, rax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59eb	            0x750f	                           jne 0x4005a3c	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59f1	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59f4	            0x85c0	                           test eax, eax	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59f6	     0xf8496000000	                            je 0x4005ad2	      2009	ref-filter.c	FUNCTION_74	IF_6
0x59fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x5a00	      0xbe01000000	                              mov esi, 1	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x5a05	          0x4889c7	                            mov rdi, rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x5a08	      0xe800000000	                          call 0x4005a4d	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x5a0d	        0x488945e0	             mov qword [rbp - 0x20], rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x5a11	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x5a16	            0x750a	                           jne 0x4005a62	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x5a18	      0xb800000000	                              mov eax, 0	      2012	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x5a1d	      0xe9b3000000	                           jmp 0x4005b15	      2012	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x5a22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a26	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a2a	          0x4885c0	                           test rax, rax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a2d	            0x742b	                            je 0x4005a9a	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a33	        0x488d4810	                   lea rcx, [rax + 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a3b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a3f	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a47	          0x4889c7	                            mov rdi, rax	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a4a	      0xe82af7ffff	                call sym.commit_contains	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x5a4f	            0x85c0	                           test eax, eax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a51	            0x7507	                           jne 0x4005a9a	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a53	      0xb800000000	                              mov eax, 0	      2016	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a58	            0xeb7b	                           jmp 0x4005b15	      2016	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x5a5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a5e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a62	          0x4885c0	                           test rax, rax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a65	            0x742b	                            je 0x4005ad2	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a6b	        0x488d4828	                   lea rcx, [rax + 0x28]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a73	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a77	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a7f	          0x4889c7	                            mov rdi, rax	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a82	      0xe8f2f6ffff	                call sym.commit_contains	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x5a87	            0x85c0	                           test eax, eax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a89	            0x7407	                            je 0x4005ad2	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a8b	      0xb800000000	                              mov eax, 0	      2020	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a90	            0xeb43	                           jmp 0x4005b15	      2020	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x5a92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5a96	          0x488b00	                    mov rax, qword [rax]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5a99	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5a9d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5aa1	          0x4889ce	                            mov rsi, rcx	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5aa4	          0x4889c7	                            mov rdi, rax	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5aa7	      0xe800000000	                          call 0x4005aec	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5aac	        0x488945f8	                mov qword [rbp - 8], rax	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x5ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2029	ref-filter.c	FUNCTION_74
0x5ab4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2029	ref-filter.c	FUNCTION_74
0x5ab8	        0x48895028	             mov qword [rax + 0x28], rdx	      2029	ref-filter.c	FUNCTION_74
0x5abc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2030	ref-filter.c	FUNCTION_74
0x5ac0	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2030	ref-filter.c	FUNCTION_74
0x5ac3	          0x895014	             mov dword [rax + 0x14], edx	      2030	ref-filter.c	FUNCTION_74
0x5ac6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2031	ref-filter.c	FUNCTION_74
0x5aca	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2031	ref-filter.c	FUNCTION_74
0x5acd	          0x895018	             mov dword [rax + 0x18], edx	      2031	ref-filter.c	FUNCTION_74
0x5ad0	      0xb800000000	                              mov eax, 0	      2033	ref-filter.c	FUNCTION_74
0x5ad5	              0xc9	                                   leave	      2034	ref-filter.c	FUNCTION_74
0x5ad6	              0xc3	                                     ret	      2034	ref-filter.c	FUNCTION_74
else_atom_handler	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,7:ELSE,0:functions,0:IF,4	77
0x1fc5	              0x55	                                push rbp	       696	ref-filter.c	FUNCTION_27
0x1fc6	          0x4889e5	                            mov rbp, rsp	       696	ref-filter.c	FUNCTION_27
0x1fc9	        0x4883ec30	                           sub rsp, 0x30	       696	ref-filter.c	FUNCTION_27
0x1fcd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       696	ref-filter.c	FUNCTION_27
0x1fd1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       696	ref-filter.c	FUNCTION_27
0x1fd5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       696	ref-filter.c	FUNCTION_27
0x1fd9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       697	ref-filter.c	FUNCTION_27
0x1fdd	        0x488b4008	                mov rax, qword [rax + 8]	       697	ref-filter.c	FUNCTION_27
0x1fe1	        0x488945f8	                mov qword [rbp - 8], rax	       697	ref-filter.c	FUNCTION_27
0x1fe5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       698	ref-filter.c	FUNCTION_27
0x1fed	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	ref-filter.c	FUNCTION_27	IF_1
0x1ff1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       700	ref-filter.c	FUNCTION_27	IF_1
0x1ff5	    0x483d00000000	                              cmp rax, 0	       700	ref-filter.c	FUNCTION_27	IF_1
0x1ffb	            0x750c	                           jne 0x4002049	       700	ref-filter.c	FUNCTION_27	IF_1
0x1ffd	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	ref-filter.c	FUNCTION_27	IF_1
0x2001	        0x488b4028	            mov rax, qword [rax + 0x28] 	       701	ref-filter.c	FUNCTION_27	IF_1
0x2005	        0x488945f0	             mov qword [rbp - 0x10], rax	       701	ref-filter.c	FUNCTION_27	IF_1
0x2009	      0x48837df000	               cmp qword [rbp - 0x10], 0	       702	ref-filter.c	FUNCTION_27	IF_2
0x200e	            0x7528	                           jne 0x4002078	       702	ref-filter.c	FUNCTION_27	IF_2
0x2010	      0xbf00000000	                              mov edi, 0	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2015	      0xe843e4ffff	                               call sym.	       703	ref-filter.c	FUNCTION_27	CALL_2
0x201a	          0x4889c2	                            mov rdx, rax	       703	ref-filter.c	FUNCTION_27	CALL_2
0x201d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2021	      0xbeffffffff	                     mov esi, 0xffffffff	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2026	          0x4889c7	                            mov rdi, rax	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2029	      0xb800000000	                              mov eax, 0	       703	ref-filter.c	FUNCTION_27	CALL_2
0x202e	      0xe8e1e5ffff	                call sym.strbuf_addf_ret	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2033	      0xe9b3000000	                           jmp 0x400212b	       703	ref-filter.c	FUNCTION_27	CALL_2
0x2038	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       704	ref-filter.c	FUNCTION_27	IF_3
0x203c	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       704	ref-filter.c	FUNCTION_27	IF_3
0x2040	          0x83e001	                              and eax, 1	       704	ref-filter.c	FUNCTION_27	IF_3
0x2043	            0x84c0	                             test al, al	       704	ref-filter.c	FUNCTION_27	IF_3
0x2045	            0x7525	                           jne 0x40020ac	       704	ref-filter.c	FUNCTION_27	IF_3
0x2047	      0xbf00000000	                              mov edi, 0	       705	ref-filter.c	FUNCTION_27	CALL_4
0x204c	      0xe80ce4ffff	                               call sym.	       705	ref-filter.c	FUNCTION_27	CALL_4
0x2051	          0x4889c2	                            mov rdx, rax	       705	ref-filter.c	FUNCTION_27	CALL_4
0x2054	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       705	ref-filter.c	FUNCTION_27	CALL_4
0x2058	      0xbeffffffff	                     mov esi, 0xffffffff	       705	ref-filter.c	FUNCTION_27	CALL_4
0x205d	          0x4889c7	                            mov rdi, rax	       705	ref-filter.c	FUNCTION_27	CALL_4
0x2060	      0xb800000000	                              mov eax, 0	       705	ref-filter.c	FUNCTION_27	CALL_4
0x2065	      0xe8aae5ffff	                call sym.strbuf_addf_ret	       705	ref-filter.c	FUNCTION_27	CALL_4
0x206a	            0xeb7f	                           jmp 0x400212b	       705	ref-filter.c	FUNCTION_27	CALL_4
0x206c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	ref-filter.c	FUNCTION_27	IF_4
0x2070	         0xfb64010	           movzx eax, byte [rax + 0x10] 	       706	ref-filter.c	FUNCTION_27	IF_4
0x2074	          0x83e002	                              and eax, 2	       706	ref-filter.c	FUNCTION_27	IF_4
0x2077	            0x84c0	                             test al, al	       706	ref-filter.c	FUNCTION_27	IF_4
0x2079	            0x7425	                            je 0x40020e0	       706	ref-filter.c	FUNCTION_27	IF_4
0x207b	      0xbf00000000	                              mov edi, 0	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2080	      0xe8d8e3ffff	                               call sym.	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2085	          0x4889c2	                            mov rdx, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2088	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	ref-filter.c	FUNCTION_27	CALL_6
0x208c	      0xbeffffffff	                     mov esi, 0xffffffff	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2091	          0x4889c7	                            mov rdi, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2094	      0xb800000000	                              mov eax, 0	       707	ref-filter.c	FUNCTION_27	CALL_6
0x2099	      0xe876e5ffff	                call sym.strbuf_addf_ret	       707	ref-filter.c	FUNCTION_27	CALL_6
0x209e	            0xeb4b	                           jmp 0x400212b	       707	ref-filter.c	FUNCTION_27	CALL_6
0x20a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       708	ref-filter.c	FUNCTION_27
0x20a4	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       708	ref-filter.c	FUNCTION_27
0x20a8	          0x83ca02	                               or edx, 2	       708	ref-filter.c	FUNCTION_27
0x20ab	          0x885010	               mov byte [rax + 0x10], dl	       708	ref-filter.c	FUNCTION_27
0x20ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       709	ref-filter.c	FUNCTION_27	CALL_7
0x20b2	        0x4883c008	                              add rax, 8	       709	ref-filter.c	FUNCTION_27	CALL_7
0x20b6	          0x4889c7	                            mov rdi, rax	       709	ref-filter.c	FUNCTION_27	CALL_7
0x20b9	      0xe8a0f9ffff	             call sym.push_stack_element	       709	ref-filter.c	FUNCTION_27	CALL_7
0x20be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       710	ref-filter.c	FUNCTION_27
0x20c2	        0x488b4008	                mov rax, qword [rax + 8]	       710	ref-filter.c	FUNCTION_27
0x20c6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       710	ref-filter.c	FUNCTION_27
0x20ca	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       710	ref-filter.c	FUNCTION_27
0x20ce	        0x48895028	             mov qword [rax + 0x28], rdx	       710	ref-filter.c	FUNCTION_27
0x20d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       711	ref-filter.c	FUNCTION_27
0x20d6	        0x488b4008	                mov rax, qword [rax + 8]	       711	ref-filter.c	FUNCTION_27
0x20da	        0x488b55f8	                mov rdx, qword [rbp - 8]	       711	ref-filter.c	FUNCTION_27
0x20de	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       711	ref-filter.c	FUNCTION_27
0x20e2	        0x48895020	             mov qword [rax + 0x20], rdx	       711	ref-filter.c	FUNCTION_27
0x20e6	      0xb800000000	                              mov eax, 0	       712	ref-filter.c	FUNCTION_27
0x20eb	              0xc9	                                   leave	       713	ref-filter.c	FUNCTION_27
0x20ec	              0xc3	                                     ret	       713	ref-filter.c	FUNCTION_27
get_head_description	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,18:ELSE,5:functions,0:IF,5	120
0x3f49	              0x55	                                push rbp	      1379	ref-filter.c	FUNCTION_53
0x3f4a	          0x4889e5	                            mov rbp, rsp	      1379	ref-filter.c	FUNCTION_53
0x3f4d	              0x53	                                push rbx	      1379	ref-filter.c	FUNCTION_53
0x3f4e	    0x4881ecb80000	                           sub rsp, 0xb8	      1379	ref-filter.c	FUNCTION_53
0x3f55	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	ref-filter.c	FUNCTION_53
0x3f5e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1379	ref-filter.c	FUNCTION_53
0x3f62	            0x31c0	                            xor eax, eax	      1379	ref-filter.c	FUNCTION_53
0x3f64	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      1380	ref-filter.c	FUNCTION_53
0x3f6f	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1380	ref-filter.c	FUNCTION_53
0x3f7a	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1380	ref-filter.c	FUNCTION_53
0x3f85	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x3f8c	      0xba80000000	                           mov edx, 0x80	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x3f91	      0xbe00000000	                              mov esi, 0	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x3f96	          0x4889c7	                            mov rdi, rax	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x3f99	      0xe800000000	                          call 0x4003fde	      1382	ref-filter.c	FUNCTION_53	CALL_1
0x3f9e	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x3fa5	      0xbe01000000	                              mov esi, 1	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x3faa	          0x4889c7	                            mov rdi, rax	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x3fad	      0xe800000000	                          call 0x4003ff2	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x3fb2	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      1384	ref-filter.c	FUNCTION_53	IF_1
0x3fb8	            0x85c0	                           test eax, eax	      1384	ref-filter.c	FUNCTION_53	IF_1
0x3fba	            0x750a	                           jne 0x4004006	      1384	ref-filter.c	FUNCTION_53	IF_1
0x3fbc	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1385	ref-filter.c	FUNCTION_53	IF_1
0x3fc2	            0x85c0	                           test eax, eax	      1384	ref-filter.c	FUNCTION_53	IF_1
0x3fc4	            0x7469	                            je 0x400406f	      1384	ref-filter.c	FUNCTION_53	IF_1
0x3fc6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x3fca	          0x4885c0	                           test rax, rax	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x3fcd	            0x7430	                            je 0x400403f	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x3fcf	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fd3	      0xbf00000000	                              mov edi, 0	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fd8	      0xe880c4ffff	                               call sym.	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fdd	          0x4889c1	                            mov rcx, rax	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fe0	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fe7	          0x4889da	                            mov rdx, rbx	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fea	          0x4889ce	                            mov rsi, rcx	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3fed	          0x4889c7	                            mov rdi, rax	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3ff0	      0xb800000000	                              mov eax, 0	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3ff5	      0xe800000000	                          call 0x400403a	      1387	ref-filter.c	FUNCTION_53	IF_1	IF_2	CALL_4
0x3ffa	      0xe9f3000000	                           jmp 0x4004132	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x3fff	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003	      0xbf00000000	                              mov edi, 0	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4008	      0xe850c4ffff	                               call sym.	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x400d	          0x4889c1	                            mov rcx, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4010	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4017	          0x4889da	                            mov rdx, rbx	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x401a	          0x4889ce	                            mov rsi, rcx	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x401d	          0x4889c7	                            mov rdi, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4020	      0xb800000000	                              mov eax, 0	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4025	      0xe800000000	                          call 0x400406a	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x402a	      0xe9c3000000	                           jmp 0x4004132	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x402f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4035	            0x85c0	                           test eax, eax	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4037	            0x7430	                            je 0x40040a9	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4039	        0x488b5d88	             mov rbx, qword [rbp - 0x78]	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x403d	      0xbf00000000	                              mov edi, 0	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4042	      0xe816c4ffff	                               call sym.	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4047	          0x4889c1	                            mov rcx, rax	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x404a	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4051	          0x4889da	                            mov rdx, rbx	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4054	          0x4889ce	                            mov rsi, rcx	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4057	          0x4889c7	                            mov rdi, rax	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x405a	      0xb800000000	                              mov eax, 0	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x405f	      0xe800000000	                          call 0x40040a4	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4064	      0xe989000000	                           jmp 0x4004132	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4069	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x406d	          0x4885c0	                           test rax, rax	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4070	            0x7461	                            je 0x4004113	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4072	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4075	            0x85c0	                           test eax, eax	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4077	            0x742d	                            je 0x40040e6	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4079	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x407d	      0xbf00000000	                              mov edi, 0	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4082	      0xe8d6c3ffff	                               call sym.	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4087	          0x4889c1	                            mov rcx, rax	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x408a	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4091	          0x4889da	                            mov rdx, rbx	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4094	          0x4889ce	                            mov rsi, rcx	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x4097	          0x4889c7	                            mov rdi, rax	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x409a	      0xb800000000	                              mov eax, 0	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x409f	      0xe800000000	                          call 0x40040e4	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40a4	            0xeb4c	                           jmp 0x4004132	      1401	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5	CALL_10
0x40a6	        0x488b5d98	             mov rbx, qword [rbp - 0x68]	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40aa	      0xbf00000000	                              mov edi, 0	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40af	      0xe8a9c3ffff	                               call sym.	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40b4	          0x4889c1	                            mov rcx, rax	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40b7	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40be	          0x4889da	                            mov rdx, rbx	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40c1	          0x4889ce	                            mov rsi, rcx	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40c4	          0x4889c7	                            mov rdi, rax	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40c7	      0xb800000000	                              mov eax, 0	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40cc	      0xe800000000	                          call 0x4004111	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40d1	            0xeb1f	                           jmp 0x4004132	      1408	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	ELSE_4	CALL_12
0x40d3	      0xbf00000000	                              mov edi, 0	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40d8	      0xe880c3ffff	                               call sym.	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40dd	          0x4889c2	                            mov rdx, rax	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40e0	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40e7	          0x4889d6	                            mov rsi, rdx	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40ea	          0x4889c7	                            mov rdi, rax	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40ed	      0xe836c3ffff	                  call sym.strbuf_addstr	      1412	ref-filter.c	FUNCTION_53	CALL_14
0x40f2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x40f6	          0x4889c7	                            mov rdi, rax	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x40f9	      0xe800000000	                          call 0x400413e	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x40fe	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4102	          0x4889c7	                            mov rdi, rax	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4105	      0xe800000000	                          call 0x400414a	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x410a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x410e	          0x4889c7	                            mov rdi, rax	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4111	      0xe800000000	                          call 0x4004156	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4116	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x411d	      0xbe00000000	                              mov esi, 0	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4122	          0x4889c7	                            mov rdi, rax	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4125	      0xe800000000	                          call 0x400416a	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x412a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1417	ref-filter.c	FUNCTION_53
0x412e	    0x644833142528	                xor rdx, qword fs:[0x28]	      1417	ref-filter.c	FUNCTION_53
0x4137	            0x7405	                            je 0x400417e	      1417	ref-filter.c	FUNCTION_53
0x4139	      0xe800000000	                          call 0x400417e	      1417	ref-filter.c	FUNCTION_53
0x413e	    0x4881c4b80000	                           add rsp, 0xb8	      1417	ref-filter.c	FUNCTION_53
0x4145	              0x5b	                                 pop rbx	      1417	ref-filter.c	FUNCTION_53
0x4146	              0x5d	                                 pop rbp	      1417	ref-filter.c	FUNCTION_53
0x4147	              0xc3	                                     ret	      1417	ref-filter.c	FUNCTION_53
fill_remote_ref_details	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,15:ELSE,14:functions,0:IF,16	224
0x3c19	              0x55	                                push rbp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c1a	          0x4889e5	                            mov rbp, rsp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c1d	        0x4883ec50	                           sub rsp, 0x50	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c21	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c25	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c29	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c2d	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c31	    0x64488b042528	                mov rax, qword fs:[0x28]	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c3a	        0x488945f8	                mov qword [rbp - 8], rax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c3e	            0x31c0	                            xor eax, eax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x3c40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x3c44	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x3c47	            0x85c0	                           test eax, eax	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x3c49	            0x7526	                           jne 0x4003cb1	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x3c4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c4f	        0x488d5014	                   lea rdx, [rax + 0x14]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c53	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c57	          0x4889c6	                            mov rsi, rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c5a	          0x4889d7	                            mov rdi, rdx	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c5d	      0xe83cffffff	                       call sym.show_ref	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c62	          0x4889c2	                            mov rdx, rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c65	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c69	          0x488910	                    mov qword [rax], rdx	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c6c	      0xe9c2020000	                           jmp 0x4003f73	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x3c71	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x3c75	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x3c78	          0x83f801	                              cmp eax, 1	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x3c7b	     0xf853e010000	                           jne 0x4003dff	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x3c81	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c85	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c89	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c8d	    0x41b801000000	                              mov r8d, 1	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c93	      0xb900000000	                              mov ecx, 0	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c98	          0x4889c7	                            mov rdi, rax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3c9b	      0xe800000000	                          call 0x4003ce0	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3ca0	            0x85c0	                           test eax, eax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3ca2	            0x791e	                           jns 0x4003d02	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x3ca4	    0x488b05000000	            mov rax, qword [0x04003ceb] 	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cab	          0x4889c7	                            mov rdi, rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cae	      0xe800000000	                          call 0x4003cf3	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cb3	          0x4889c2	                            mov rdx, rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cb6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cba	          0x488910	                    mov qword [rax], rdx	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cbd	      0xe999000000	                           jmp 0x4003d9b	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x3cc2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cc5	            0x85c0	                           test eax, eax	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cc7	            0x7514	                           jne 0x4003d1d	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cc9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3ccc	            0x85c0	                           test eax, eax	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cce	            0x750d	                           jne 0x4003d1d	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cd0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cd4	    0x48c700000000	                      mov qword [rax], 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cdb	            0xeb7e	                           jmp 0x4003d9b	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x3cdd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x3ce0	            0x85c0	                           test eax, eax	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x3ce2	            0x7525	                           jne 0x4003d49	      1330	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	IF_5
0x3ce4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3ce7	    0x488b05000000	            mov rax, qword [0x04003d2e] 	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3cee	            0x89d6	                            mov esi, edx	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3cf0	          0x4889c7	                            mov rdi, rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3cf3	      0xb800000000	                              mov eax, 0	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3cf8	      0xe800000000	                          call 0x4003d3d	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3cfd	          0x4889c2	                            mov rdx, rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3d00	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3d04	          0x488910	                    mov qword [rax], rdx	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3d07	            0xeb52	                           jmp 0x4003d9b	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x3d09	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d0c	            0x85c0	                           test eax, eax	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d0e	            0x7525	                           jne 0x4003d75	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d10	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d13	    0x488b05000000	            mov rax, qword [0x04003d5a] 	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d1a	            0x89d6	                            mov esi, edx	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d1c	          0x4889c7	                            mov rdi, rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d1f	      0xb800000000	                              mov eax, 0	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d24	      0xe800000000	                          call 0x4003d69	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d29	          0x4889c2	                            mov rdx, rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d2c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d30	          0x488910	                    mov qword [rax], rdx	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d33	            0xeb26	                           jmp 0x4003d9b	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x3d35	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d38	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d3b	    0x488b05000000	            mov rax, qword [0x04003d82] 	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d42	            0x89ce	                            mov esi, ecx	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d44	          0x4889c7	                            mov rdi, rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d47	      0xb800000000	                              mov eax, 0	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d4c	      0xe800000000	                          call 0x4003d91	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d51	          0x4889c2	                            mov rdx, rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d54	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d58	          0x488910	                    mov qword [rax], rdx	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x3d5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d5f	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d63	          0x83e001	                              and eax, 1	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d66	            0x84c0	                             test al, al	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d68	     0xf85c5010000	                           jne 0x4003f73	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d6e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d72	          0x488b00	                    mov rax, qword [rax]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d75	           0xfb600	                   movzx eax, byte [rax]	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d78	            0x84c0	                             test al, al	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d7a	     0xf84b3010000	                            je 0x4003f73	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d80	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d84	          0x488b00	                    mov rax, qword [rax]	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d87	        0x488945e0	             mov qword [rbp - 0x20], rax	      1338	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x3d8b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3d8f	          0x488b00	                    mov rax, qword [rax]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3d92	          0x4889c6	                            mov rsi, rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3d95	      0xbf00000000	                              mov edi, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3d9a	      0xb800000000	                              mov eax, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3d9f	      0xe800000000	                          call 0x4003de4	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3da4	          0x4889c2	                            mov rdx, rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3da7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3dab	          0x488910	                    mov qword [rax], rdx	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x3dae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x3db2	          0x4889c7	                            mov rdi, rax	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x3db5	      0xe800000000	                          call 0x4003dfa	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x3dba	      0xe974010000	                           jmp 0x4003f73	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x3dbf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x3dc3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x3dc6	          0x83f802	                              cmp eax, 2	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x3dc9	     0xf8583000000	                           jne 0x4003e92	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x3dcf	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3dd3	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3dd7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3ddb	    0x41b801000000	                              mov r8d, 1	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3de1	      0xb900000000	                              mov ecx, 0	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3de6	          0x4889c7	                            mov rdi, rax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3de9	      0xe800000000	                          call 0x4003e2e	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3dee	            0x85c0	                           test eax, eax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3df0	     0xf883c010000	                            js 0x4003f72	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x3df6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3df9	            0x85c0	                           test eax, eax	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3dfb	            0x7517	                           jne 0x4003e54	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3dfd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e00	            0x85c0	                           test eax, eax	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e02	            0x7510	                           jne 0x4003e54	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e08	    0x48c700000000	                      mov qword [rax], 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e0f	      0xe91f010000	                           jmp 0x4003f73	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x3e14	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e17	            0x85c0	                           test eax, eax	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e19	            0x7510	                           jne 0x4003e6b	      1349	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e1f	    0x48c700000000	                      mov qword [rax], 0	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e26	      0xe908010000	                           jmp 0x4003f73	      1350	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_7	IF_11
0x3e2b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e2e	            0x85c0	                           test eax, eax	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e30	            0x7510	                           jne 0x4003e82	      1351	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e32	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e36	    0x48c700000000	                      mov qword [rax], 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e3d	      0xe9f1000000	                           jmp 0x4003f73	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x3e42	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x3e46	    0x48c700000000	                      mov qword [rax], 0	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x3e4d	      0xe9e1000000	                           jmp 0x4003f73	      1354	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_9
0x3e52	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e56	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e59	          0x83f803	                              cmp eax, 3	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e5c	            0x7567	                           jne 0x4003f05	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e5e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e62	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e66	          0x83e002	                              and eax, 2	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e69	            0x84c0	                             test al, al	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e6b	            0x7415	                            je 0x4003ec2	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e6d	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e71	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e75	          0x4889d6	                            mov rsi, rdx	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e78	          0x4889c7	                            mov rdi, rax	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e7b	      0xe800000000	                          call 0x4003ec0	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e80	            0xeb13	                           jmp 0x4003ed5	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e82	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e8a	          0x4889d6	                            mov rsi, rdx	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e8d	          0x4889c7	                            mov rdi, rax	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e90	      0xe800000000	                          call 0x4003ed5	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x3e95	        0x488945e8	             mov qword [rbp - 0x18], rax	      1357	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x3e99	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x3e9c	            0x85c0	                           test eax, eax	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x3e9e	            0x7418	                            je 0x4003ef8	      1360	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	IF_14
0x3ea0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3ea4	          0x4889c7	                            mov rdi, rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3ea7	      0xe800000000	                          call 0x4003eec	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3eac	          0x4889c2	                            mov rdx, rax	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3eaf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3eb3	          0x488910	                    mov qword [rax], rdx	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3eb6	            0xeb7b	                           jmp 0x4003f73	      1361	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_12
0x3eb8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ebc	    0x48c700000000	                      mov qword [rax], 0	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ec3	            0xeb6e	                           jmp 0x4003f73	      1363	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ec5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ec9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ecc	          0x83f804	                              cmp eax, 4	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ecf	            0x7552	                           jne 0x4003f63	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x3ed1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ed5	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ed9	            0xd0e8	                               shr al, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3edb	          0x83e001	                              and eax, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ede	           0xfb6c8	                           movzx ecx, al	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ee1	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ee5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ee9	            0x89ce	                            mov esi, ecx	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3eeb	          0x4889c7	                            mov rdi, rax	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3eee	      0xe800000000	                          call 0x4003f33	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ef3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x3ef7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x3efa	            0x85c0	                           test eax, eax	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x3efc	            0x7418	                            je 0x4003f56	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x3efe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f02	          0x4889c7	                            mov rdi, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f05	      0xe800000000	                          call 0x4003f4a	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f0a	          0x4889c2	                            mov rdx, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f0d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f11	          0x488910	                    mov qword [rax], rdx	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f14	            0xeb1d	                           jmp 0x4003f73	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x3f16	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x3f1a	    0x48c700000000	                      mov qword [rax], 0	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x3f21	            0xeb10	                           jmp 0x4003f73	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x3f23	      0xbf00000000	                              mov edi, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x3f28	      0xb800000000	                              mov eax, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x3f2d	      0xe800000000	                          call 0x4003f72	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x3f32	              0x90	                                     nop	      1345	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9
0x3f33	        0x488b45f8	                mov rax, qword [rbp - 8]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x3f37	    0x644833042528	                xor rax, qword fs:[0x28]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x3f40	            0x7405	                            je 0x4003f87	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x3f42	      0xe800000000	                          call 0x4003f87	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x3f47	              0xc9	                                   leave	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x3f48	              0xc3	                                     ret	      1376	ref-filter.c	FUNCTION_52	ELSE_3
show_ref_array_item	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,6:ELSE,0:functions,0:IF,1	48
0x65f1	              0x55	                                push rbp	      2270	ref-filter.c	FUNCTION_84
0x65f2	          0x4889e5	                            mov rbp, rsp	      2270	ref-filter.c	FUNCTION_84
0x65f5	        0x4883ec50	                           sub rsp, 0x50	      2270	ref-filter.c	FUNCTION_84
0x65f9	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2270	ref-filter.c	FUNCTION_84
0x65fd	        0x488975b0	             mov qword [rbp - 0x50], rsi	      2270	ref-filter.c	FUNCTION_84
0x6601	    0x64488b042528	                mov rax, qword fs:[0x28]	      2270	ref-filter.c	FUNCTION_84
0x660a	        0x488945f8	                mov qword [rbp - 8], rax	      2270	ref-filter.c	FUNCTION_84
0x660e	            0x31c0	                            xor eax, eax	      2270	ref-filter.c	FUNCTION_84
0x6610	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2271	ref-filter.c	FUNCTION_84
0x6618	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2271	ref-filter.c	FUNCTION_84
0x6620	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2271	ref-filter.c	FUNCTION_84
0x6628	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2272	ref-filter.c	FUNCTION_84
0x6630	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2272	ref-filter.c	FUNCTION_84
0x6638	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2272	ref-filter.c	FUNCTION_84
0x6640	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x6644	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x6648	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x664c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x6650	          0x4889c7	                            mov rdi, rax	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x6653	      0xe800000000	                          call 0x4006698	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x6658	            0x85c0	                           test eax, eax	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x665a	            0x7416	                            je 0x40066b2	      2274	ref-filter.c	FUNCTION_84	IF_1	CALL_1
0x665c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x6660	          0x4889c6	                            mov rsi, rax	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x6663	      0xbf00000000	                              mov edi, 0	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x6668	      0xb800000000	                              mov eax, 0	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x666d	      0xe800000000	                          call 0x40066b2	      2275	ref-filter.c	FUNCTION_84	CALL_2
0x6672	    0x488b0d000000	            mov rcx, qword [0x040066b9] 	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x6679	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x667d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x6681	      0xbe01000000	                              mov esi, 1	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x6686	          0x4889c7	                            mov rdi, rax	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x6689	      0xe800000000	                          call 0x40066ce	      2276	ref-filter.c	FUNCTION_84	CALL_3
0x668e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x6692	          0x4889c7	                            mov rdi, rax	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x6695	      0xe800000000	                          call 0x40066da	      2277	ref-filter.c	FUNCTION_84	CALL_4
0x669a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x669e	          0x4889c7	                            mov rdi, rax	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x66a1	      0xe800000000	                          call 0x40066e6	      2278	ref-filter.c	FUNCTION_84	CALL_5
0x66a6	      0xbf0a000000	                            mov edi, 0xa	      2279	ref-filter.c	FUNCTION_84	CALL_6
0x66ab	      0xe800000000	                          call 0x40066f0	      2279	ref-filter.c	FUNCTION_84	CALL_6
0x66b0	              0x90	                                     nop	      2280	ref-filter.c	FUNCTION_84
0x66b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2280	ref-filter.c	FUNCTION_84
0x66b5	    0x644833042528	                xor rax, qword fs:[0x28]	      2280	ref-filter.c	FUNCTION_84
0x66be	            0x7405	                            je 0x4006705	      2280	ref-filter.c	FUNCTION_84
0x66c0	      0xe800000000	                          call 0x4006705	      2280	ref-filter.c	FUNCTION_84
0x66c5	              0xc9	                                   leave	      2280	ref-filter.c	FUNCTION_84
0x66c6	              0xc3	                                     ret	      2280	ref-filter.c	FUNCTION_84
grab_objectname	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,8:ELSE,3:functions,0:IF,4	67
0x249f	              0x55	                                push rbp	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24a0	          0x4889e5	                            mov rbp, rsp	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24a3	        0x4883ec20	                           sub rsp, 0x20	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24a7	        0x48897df8	                mov qword [rbp - 8], rdi	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24ab	        0x488975f0	             mov qword [rbp - 0x10], rsi	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24af	        0x488955e8	             mov qword [rbp - 0x18], rdx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24b3	        0x48894de0	             mov qword [rbp - 0x20], rcx	       815	ref-filter.c	ELSE_1	FUNCTION_32
0x24b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24bb	      0xbe00000000	                              mov esi, 0	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24c0	          0x4889c7	                            mov rdi, rax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24c3	      0xe800000000	                          call 0x4002508	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24c8	            0x85c0	                           test eax, eax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24ca	     0xf84b7000000	                            je 0x40025c7	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x24d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x24d4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x24d7	          0x83f802	                              cmp eax, 2	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x24da	            0x7530	                           jne 0x400254c	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x24dc	    0x8b1500000000	            mov edx, dword [0x04002522] 	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24e6	            0x89d6	                            mov esi, edx	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24e8	          0x4889c7	                            mov rdi, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24eb	      0xe800000000	                          call 0x4002530	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24f0	          0x4889c7	                            mov rdi, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24f3	      0xe800000000	                          call 0x4002538	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24f8	          0x4889c2	                            mov rdx, rax	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x24ff	          0x488910	                    mov qword [rax], rdx	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x2502	      0xb801000000	                              mov eax, 1	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x2507	      0xe980000000	                           jmp 0x40025cc	       819	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x250c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x2510	          0x8b4010	            mov eax, dword [rax + 0x10] 	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x2513	            0x85c0	                           test eax, eax	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x2515	            0x7525	                           jne 0x400257c	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x2517	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x251b	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x251e	      0xe800000000	                          call 0x4002563	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x2523	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x2526	      0xe800000000	                          call 0x400256b	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x252b	          0x4889c2	                            mov rdx, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x252e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x2532	          0x488910	                    mov qword [rax], rdx	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x2535	      0xb801000000	                              mov eax, 1	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x253a	            0xeb50	                           jmp 0x40025cc	       822	ref-filter.c	FUNCTION_32	IF_1	IF_3
0x253c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2540	          0x8b4010	            mov eax, dword [rax + 0x10] 	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2543	          0x83f801	                              cmp eax, 1	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2546	            0x7530	                           jne 0x40025b8	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2548	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x254c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x254f	            0x89c2	                            mov edx, eax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2551	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2555	            0x89d6	                            mov esi, edx	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2557	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x255a	      0xe800000000	                          call 0x400259f	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x255f	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2562	      0xe800000000	                          call 0x40025a7	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2567	          0x4889c2	                            mov rdx, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x256a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x256e	          0x488910	                    mov qword [rax], rdx	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x2571	      0xb801000000	                              mov eax, 1	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2576	            0xeb14	                           jmp 0x40025cc	       825	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x2578	      0xbf00000000	                              mov edi, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x257d	      0xb800000000	                              mov eax, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x2582	      0xe800000000	                          call 0x40025c7	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x2587	      0xb800000000	                              mov eax, 0	       829	ref-filter.c	FUNCTION_32	ELSE_1
0x258c	              0xc9	                                   leave	       830	ref-filter.c	FUNCTION_32	ELSE_1
0x258d	              0xc3	                                     ret	       830	ref-filter.c	FUNCTION_32	ELSE_1
append_literal	SWITCH,0:DO,0:FOR,0:WHILE,1:CALL,3:ELSE,1:functions,0:IF,3	56
0x62f2	              0x55	                                push rbp	      2201	ref-filter.c	FUNCTION_82
0x62f3	          0x4889e5	                            mov rbp, rsp	      2201	ref-filter.c	FUNCTION_82
0x62f6	        0x4883ec30	                           sub rsp, 0x30	      2201	ref-filter.c	FUNCTION_82
0x62fa	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2201	ref-filter.c	FUNCTION_82
0x62fe	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2201	ref-filter.c	FUNCTION_82
0x6302	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2201	ref-filter.c	FUNCTION_82
0x6306	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2202	ref-filter.c	FUNCTION_82
0x630a	        0x488b4008	                mov rax, qword [rax + 8]	      2202	ref-filter.c	FUNCTION_82
0x630e	        0x4883c008	                              add rax, 8	      2202	ref-filter.c	FUNCTION_82
0x6312	        0x488945f8	                mov qword [rbp - 8], rax	      2202	ref-filter.c	FUNCTION_82
0x6316	            0xeb6f	                           jmp 0x40063c7	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x6318	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x631c	           0xfb600	                   movzx eax, byte [rax]	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x631f	            0x3c25	                            cmp al, 0x25	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x6321	            0x7547	                           jne 0x40063aa	      2205	ref-filter.c	FUNCTION_82	WHILE_1	IF_1
0x6323	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x6327	        0x4883c001	                              add rax, 1	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x632b	           0xfb600	                   movzx eax, byte [rax]	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x632e	            0x3c25	                            cmp al, 0x25	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x6330	            0x7507	                           jne 0x4006379	      2206	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x6332	      0x488345e801	               add qword [rbp - 0x18], 1	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x6337	            0xeb31	                           jmp 0x40063aa	      2207	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	IF_2
0x6339	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x633d	        0x4883c001	                              add rax, 1	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x6341	          0x4889c7	                            mov rdi, rax	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x6344	      0xe82aa2ffff	                        call sym.hex2chr	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x6349	          0x8945f4	              mov dword [rbp - 0xc], eax	      2209	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	CALL_1
0x634c	        0x837df400	                cmp dword [rbp - 0xc], 0	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x6350	            0x7818	                            js 0x40063aa	      2210	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x6352	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x6355	        0x488b45f8	                mov rax, qword [rbp - 8]	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x6359	            0x89d6	                            mov esi, edx	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x635b	          0x4889c7	                            mov rdi, rax	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x635e	      0xe857a0ffff	                   call sym.strbuf_addch	      2211	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3	CALL_2
0x6363	      0x488345e803	               add qword [rbp - 0x18], 3	      2212	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x6368	            0xeb1d	                           jmp 0x40063c7	      2213	ref-filter.c	FUNCTION_82	WHILE_1	IF_1	ELSE_1	IF_3
0x636a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x636e	           0xfb600	                   movzx eax, byte [rax]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x6371	           0xfbed0	                           movsx edx, al	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x6374	        0x488b45f8	                mov rax, qword [rbp - 8]	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x6378	            0x89d6	                            mov esi, edx	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x637a	          0x4889c7	                            mov rdi, rax	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x637d	      0xe838a0ffff	                   call sym.strbuf_addch	      2217	ref-filter.c	FUNCTION_82	WHILE_1	CALL_3
0x6382	      0x488345e801	               add qword [rbp - 0x18], 1	      2218	ref-filter.c	FUNCTION_82	WHILE_1
0x6387	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x638b	           0xfb600	                   movzx eax, byte [rax]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x638e	            0x84c0	                             test al, al	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x6390	            0x7419	                            je 0x40063eb	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x6392	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x6397	     0xf847bffffff	                            je 0x4006358	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x639d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x63a1	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x63a5	     0xf826dffffff	                            jb 0x4006358	      2204	ref-filter.c	FUNCTION_82	WHILE_1
0x63ab	              0x90	                                     nop	      2220	ref-filter.c	FUNCTION_82
0x63ac	              0xc9	                                   leave	      2220	ref-filter.c	FUNCTION_82
0x63ad	              0xc3	                                     ret	      2220	ref-filter.c	FUNCTION_82
commit_contains	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	29
0x5179	              0x55	                                push rbp	      1739	ref-filter.c	FUNCTION_63
0x517a	          0x4889e5	                            mov rbp, rsp	      1739	ref-filter.c	FUNCTION_63
0x517d	        0x4883ec20	                           sub rsp, 0x20	      1739	ref-filter.c	FUNCTION_63
0x5181	        0x48897df8	                mov qword [rbp - 8], rdi	      1739	ref-filter.c	FUNCTION_63
0x5185	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1739	ref-filter.c	FUNCTION_63
0x5189	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1739	ref-filter.c	FUNCTION_63
0x518d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1739	ref-filter.c	FUNCTION_63
0x5191	        0x488b45f8	                mov rax, qword [rbp - 8]	      1740	ref-filter.c	FUNCTION_63	IF_1
0x5195	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1740	ref-filter.c	FUNCTION_63	IF_1
0x5199	          0x83e001	                              and eax, 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x519c	            0x84c0	                             test al, al	      1740	ref-filter.c	FUNCTION_63	IF_1
0x519e	            0x7422	                            je 0x4005202	      1740	ref-filter.c	FUNCTION_63	IF_1
0x51a0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51a4	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51ac	          0x4889ce	                            mov rsi, rcx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51af	          0x4889c7	                            mov rdi, rax	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51b2	      0xe832feffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51b7	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51ba	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51bd	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51c0	            0xeb13	                           jmp 0x4005215	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x51c2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x51c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x51ca	          0x4889d6	                            mov rsi, rdx	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x51cd	          0x4889c7	                            mov rdi, rax	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x51d0	      0xe800000000	                          call 0x4005215	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x51d5	              0xc9	                                   leave	      1743	ref-filter.c	FUNCTION_63
0x51d6	              0xc3	                                     ret	      1743	ref-filter.c	FUNCTION_63
strbuf_avail	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0:IF,0	18
0x2ea	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_92
0x2eb	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_92
0x2ee	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_92
0x2f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_92
0x2f6	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_92
0x2f9	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_92
0x2fc	            0x741b	                            je 0x4000359	       141	strbuf.h	FUNCTION_92
0x2fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_92
0x302	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_92
0x305	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_92
0x309	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_92
0x30d	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_92
0x310	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_92
0x313	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_92
0x317	            0xeb05	                           jmp 0x400035e	       141	strbuf.h	FUNCTION_92
0x319	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_92
0x31e	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_92
0x31f	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_92
filter_ref_kind	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,1	25
0x585a	              0x55	                                push rbp	      1963	ref-filter.c	FUNCTION_73
0x585b	          0x4889e5	                            mov rbp, rsp	      1963	ref-filter.c	FUNCTION_73
0x585e	        0x4883ec10	                           sub rsp, 0x10	      1963	ref-filter.c	FUNCTION_73
0x5862	        0x48897df8	                mov qword [rbp - 8], rdi	      1963	ref-filter.c	FUNCTION_73
0x5866	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1963	ref-filter.c	FUNCTION_73
0x586a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1964	ref-filter.c	FUNCTION_73	IF_1
0x586e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1964	ref-filter.c	FUNCTION_73	IF_1
0x5871	          0x83f804	                              cmp eax, 4	      1964	ref-filter.c	FUNCTION_73	IF_1
0x5874	            0x7418	                            je 0x40058ce	      1964	ref-filter.c	FUNCTION_73	IF_1
0x5876	        0x488b45f8	                mov rax, qword [rbp - 8]	      1965	ref-filter.c	FUNCTION_73	IF_1
0x587a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1965	ref-filter.c	FUNCTION_73	IF_1
0x587d	          0x83f808	                              cmp eax, 8	      1964	ref-filter.c	FUNCTION_73	IF_1
0x5880	            0x740c	                            je 0x40058ce	      1964	ref-filter.c	FUNCTION_73	IF_1
0x5882	        0x488b45f8	                mov rax, qword [rbp - 8]	      1966	ref-filter.c	FUNCTION_73	IF_1
0x5886	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1966	ref-filter.c	FUNCTION_73	IF_1
0x5889	          0x83f802	                              cmp eax, 2	      1965	ref-filter.c	FUNCTION_73	IF_1
0x588c	            0x7509	                           jne 0x40058d7	      1965	ref-filter.c	FUNCTION_73	IF_1
0x588e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1967	ref-filter.c	FUNCTION_73	IF_1
0x5892	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1967	ref-filter.c	FUNCTION_73	IF_1
0x5895	            0xeb0c	                           jmp 0x40058e3	      1967	ref-filter.c	FUNCTION_73	IF_1
0x5897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x589b	          0x4889c7	                            mov rdi, rax	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x589e	      0xe841ffffff	          call sym.ref_kind_from_refname	      1968	ref-filter.c	FUNCTION_73	CALL_1
0x58a3	              0xc9	                                   leave	      1969	ref-filter.c	FUNCTION_73
0x58a4	              0xc3	                                     ret	      1969	ref-filter.c	FUNCTION_73
append_atom	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,1:functions,0:IF,1	33
0x19ef	              0x55	                                push rbp	       543	ref-filter.c	FUNCTION_18
0x19f0	          0x4889e5	                            mov rbp, rsp	       543	ref-filter.c	FUNCTION_18
0x19f3	        0x4883ec20	                           sub rsp, 0x20	       543	ref-filter.c	FUNCTION_18
0x19f7	        0x48897df8	                mov qword [rbp - 8], rdi	       543	ref-filter.c	FUNCTION_18
0x19fb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       543	ref-filter.c	FUNCTION_18
0x19ff	        0x488955e8	             mov qword [rbp - 0x18], rdx	       543	ref-filter.c	FUNCTION_18
0x1a03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       550	ref-filter.c	FUNCTION_18	IF_1
0x1a07	        0x488b4008	                mov rax, qword [rax + 8]	       550	ref-filter.c	FUNCTION_18	IF_1
0x1a0b	          0x488b00	                    mov rax, qword [rax]	       550	ref-filter.c	FUNCTION_18	IF_1
0x1a0e	          0x4885c0	                           test rax, rax	       550	ref-filter.c	FUNCTION_18	IF_1
0x1a11	            0x7526	                           jne 0x4001a79	       550	ref-filter.c	FUNCTION_18	IF_1
0x1a13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a17	            0x8b10	                    mov edx, dword [rax]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a19	        0x488b45f8	                mov rax, qword [rbp - 8]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a1d	          0x488b00	                    mov rax, qword [rax]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a20	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a24	        0x488b4908	                mov rcx, qword [rcx + 8]	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a28	        0x4883c108	                              add rcx, 8	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a2c	          0x4889c6	                            mov rsi, rax	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a2f	          0x4889cf	                            mov rdi, rcx	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a32	      0xe827ffffff	               call sym.quote_formatting	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a37	            0xeb1e	                           jmp 0x4001a97	       551	ref-filter.c	FUNCTION_18	CALL_1
0x1a39	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a3d	          0x488b00	                    mov rax, qword [rax]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a40	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a44	        0x488b5208	                mov rdx, qword [rdx + 8]	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a48	        0x4883c208	                              add rdx, 8	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a4c	          0x4889c6	                            mov rsi, rax	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a4f	          0x4889d7	                            mov rdi, rdx	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a52	      0xe8d1e9ffff	                  call sym.strbuf_addstr	       553	ref-filter.c	FUNCTION_18	CALL_2
0x1a57	      0xb800000000	                              mov eax, 0	       554	ref-filter.c	FUNCTION_18
0x1a5c	              0xc9	                                   leave	       555	ref-filter.c	FUNCTION_18
0x1a5d	              0xc3	                                     ret	       555	ref-filter.c	FUNCTION_18
for_each_fullref_in_pattern	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,6:ELSE,0:functions,0:IF,3	74
0x548b	              0x55	                                push rbp	      1842	ref-filter.c	FUNCTION_68
0x548c	          0x4889e5	                            mov rbp, rsp	      1842	ref-filter.c	FUNCTION_68
0x548f	        0x4883ec50	                           sub rsp, 0x50	      1842	ref-filter.c	FUNCTION_68
0x5493	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1842	ref-filter.c	FUNCTION_68
0x5497	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1842	ref-filter.c	FUNCTION_68
0x549b	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1842	ref-filter.c	FUNCTION_68
0x549f	          0x894db4	             mov dword [rbp - 0x4c], ecx	      1842	ref-filter.c	FUNCTION_68
0x54a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1842	ref-filter.c	FUNCTION_68
0x54ab	        0x488945f8	                mov qword [rbp - 8], rax	      1842	ref-filter.c	FUNCTION_68
0x54af	            0x31c0	                            xor eax, eax	      1842	ref-filter.c	FUNCTION_68
0x54b1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1843	ref-filter.c	FUNCTION_68
0x54b9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1843	ref-filter.c	FUNCTION_68
0x54c1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1843	ref-filter.c	FUNCTION_68
0x54c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1846	ref-filter.c	FUNCTION_68	IF_1
0x54cd	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1846	ref-filter.c	FUNCTION_68	IF_1
0x54d1	          0x83e002	                              and eax, 2	      1846	ref-filter.c	FUNCTION_68	IF_1
0x54d4	            0x84c0	                             test al, al	      1846	ref-filter.c	FUNCTION_68	IF_1
0x54d6	            0x751d	                           jne 0x4005535	      1846	ref-filter.c	FUNCTION_68	IF_1
0x54d8	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54db	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54e3	          0x4889c6	                            mov rsi, rax	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54e6	      0xbf00000000	                              mov edi, 0	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54eb	      0xe800000000	                          call 0x4005530	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54f0	      0xe998000000	                           jmp 0x40055cd	      1852	ref-filter.c	FUNCTION_68	IF_1	CALL_1
0x54f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x54f9	          0x488b00	                    mov rax, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x54fc	          0x488b00	                    mov rax, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x54ff	          0x4885c0	                           test rax, rax	      1855	ref-filter.c	FUNCTION_68	IF_2
0x5502	            0x751a	                           jne 0x400555e	      1855	ref-filter.c	FUNCTION_68	IF_2
0x5504	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x5507	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x550b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x550f	          0x4889c6	                            mov rsi, rax	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x5512	      0xbf00000000	                              mov edi, 0	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x5517	      0xe800000000	                          call 0x400555c	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x551c	            0xeb6f	                           jmp 0x40055cd	      1857	ref-filter.c	FUNCTION_68	IF_2	CALL_2
0x551e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x5522	          0x488b00	                    mov rax, qword [rax]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x5525	        0x4883c008	                              add rax, 8	      1860	ref-filter.c	FUNCTION_68	IF_3
0x5529	          0x488b00	                    mov rax, qword [rax]	      1860	ref-filter.c	FUNCTION_68	IF_3
0x552c	          0x4885c0	                           test rax, rax	      1860	ref-filter.c	FUNCTION_68	IF_3
0x552f	            0x741a	                            je 0x400558b	      1860	ref-filter.c	FUNCTION_68	IF_3
0x5531	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x5534	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x5538	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x553c	          0x4889c6	                            mov rsi, rax	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x553f	      0xbf00000000	                              mov edi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x5544	      0xe800000000	                          call 0x4005589	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x5549	            0xeb42	                           jmp 0x40055cd	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x554b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x554f	          0x488b00	                    mov rax, qword [rax]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x5552	          0x488b10	                    mov rdx, qword [rax]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x5555	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x5559	          0x4889d6	                            mov rsi, rdx	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x555c	          0x4889c7	                            mov rdi, rax	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x555f	      0xe8b9feffff	            call sym.find_longest_prefix	      1871	ref-filter.c	FUNCTION_68	CALL_4
0x5564	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x5567	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x556b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x556f	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x5573	          0x4889c7	                            mov rdi, rax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x5576	      0xe800000000	                          call 0x40055bb	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x557b	          0x8945dc	             mov dword [rbp - 0x24], eax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x557e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x5582	          0x4889c7	                            mov rdi, rax	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x5585	      0xe800000000	                          call 0x40055ca	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x558a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1875	ref-filter.c	FUNCTION_68
0x558d	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1876	ref-filter.c	FUNCTION_68
0x5591	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1876	ref-filter.c	FUNCTION_68
0x559a	            0x7405	                            je 0x40055e1	      1876	ref-filter.c	FUNCTION_68
0x559c	      0xe800000000	                          call 0x40055e1	      1876	ref-filter.c	FUNCTION_68
0x55a1	              0xc9	                                   leave	      1876	ref-filter.c	FUNCTION_68
0x55a2	              0xc3	                                     ret	      1876	ref-filter.c	FUNCTION_68
body_atom_parser	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,1	23
0xb9f	              0x55	                                push rbp	       204	ref-filter.c	FUNCTION_6
0xba0	          0x4889e5	                            mov rbp, rsp	       204	ref-filter.c	FUNCTION_6
0xba3	        0x4883ec20	                           sub rsp, 0x20	       204	ref-filter.c	FUNCTION_6
0xba7	        0x48897df8	                mov qword [rbp - 8], rdi	       204	ref-filter.c	FUNCTION_6
0xbab	        0x488975f0	             mov qword [rbp - 0x10], rsi	       204	ref-filter.c	FUNCTION_6
0xbaf	        0x488955e8	             mov qword [rbp - 0x18], rdx	       204	ref-filter.c	FUNCTION_6
0xbb3	        0x48894de0	             mov qword [rbp - 0x20], rcx	       204	ref-filter.c	FUNCTION_6
0xbb7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       205	ref-filter.c	FUNCTION_6	IF_1
0xbbc	            0x7425	                            je 0x4000c23	       205	ref-filter.c	FUNCTION_6	IF_1
0xbbe	      0xbf00000000	                              mov edi, 0	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbc3	      0xe895f8ffff	                               call sym.	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbc8	          0x4889c2	                            mov rdx, rax	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbcb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbcf	      0xbeffffffff	                     mov esi, 0xffffffff	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbd4	          0x4889c7	                            mov rdi, rax	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbd7	      0xb800000000	                              mov eax, 0	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbdc	      0xe833faffff	                call sym.strbuf_addf_ret	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbe1	            0xeb10	                           jmp 0x4000c33	       206	ref-filter.c	FUNCTION_6	CALL_2
0xbe3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	ref-filter.c	FUNCTION_6
0xbe7	    0xc74010020000	               mov dword [rax + 0x10], 2	       207	ref-filter.c	FUNCTION_6
0xbee	      0xb800000000	                              mov eax, 0	       208	ref-filter.c	FUNCTION_6
0xbf3	              0xc9	                                   leave	       209	ref-filter.c	FUNCTION_6
0xbf4	              0xc3	                                     ret	       209	ref-filter.c	FUNCTION_6
filter_pattern_match	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,2	30
0x53be	              0x55	                                push rbp	      1808	ref-filter.c	FUNCTION_66
0x53bf	          0x4889e5	                            mov rbp, rsp	      1808	ref-filter.c	FUNCTION_66
0x53c2	        0x4883ec10	                           sub rsp, 0x10	      1808	ref-filter.c	FUNCTION_66
0x53c6	        0x48897df8	                mov qword [rbp - 8], rdi	      1808	ref-filter.c	FUNCTION_66
0x53ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1808	ref-filter.c	FUNCTION_66
0x53ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x53d2	          0x488b00	                    mov rax, qword [rax]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x53d5	          0x488b00	                    mov rax, qword [rax]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x53d8	          0x4885c0	                           test rax, rax	      1809	ref-filter.c	FUNCTION_66	IF_1
0x53db	            0x7507	                           jne 0x4005424	      1809	ref-filter.c	FUNCTION_66	IF_1
0x53dd	      0xb801000000	                              mov eax, 1	      1810	ref-filter.c	FUNCTION_66	IF_1
0x53e2	            0xeb37	                           jmp 0x400545b	      1810	ref-filter.c	FUNCTION_66	IF_1
0x53e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1811	ref-filter.c	FUNCTION_66	IF_2
0x53e8	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1811	ref-filter.c	FUNCTION_66	IF_2
0x53ec	          0x83e002	                              and eax, 2	      1811	ref-filter.c	FUNCTION_66	IF_2
0x53ef	            0x84c0	                             test al, al	      1811	ref-filter.c	FUNCTION_66	IF_2
0x53f1	            0x7415	                            je 0x4005448	      1811	ref-filter.c	FUNCTION_66	IF_2
0x53f3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x53f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x53fb	          0x4889d6	                            mov rsi, rdx	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x53fe	          0x4889c7	                            mov rdi, rax	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x5401	      0xe8a7feffff	             call sym.match_name_as_path	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x5406	            0xeb13	                           jmp 0x400545b	      1812	ref-filter.c	FUNCTION_66	CALL_1
0x5408	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x540c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x5410	          0x4889d6	                            mov rsi, rdx	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x5413	          0x4889c7	                            mov rdi, rax	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x5416	      0xe8bcfdffff	                  call sym.match_pattern	      1813	ref-filter.c	FUNCTION_66	CALL_2
0x541b	              0xc9	                                   leave	      1814	ref-filter.c	FUNCTION_66
0x541c	              0xc3	                                     ret	      1814	ref-filter.c	FUNCTION_66
push_to_contains_stack	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:functions,0:IF,0	87
0x4ee0	              0x55	                                push rbp	      1690	ref-filter.c	FUNCTION_61
0x4ee1	          0x4889e5	                            mov rbp, rsp	      1690	ref-filter.c	FUNCTION_61
0x4ee4	        0x4883ec10	                           sub rsp, 0x10	      1690	ref-filter.c	FUNCTION_61
0x4ee8	        0x48897df8	                mov qword [rbp - 8], rdi	      1690	ref-filter.c	FUNCTION_61
0x4eec	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1690	ref-filter.c	FUNCTION_61
0x4ef0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4ef4	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4ef6	          0x8d5001	                      lea edx, [rax + 1]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4ef9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4efd	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f00	            0x39c2	                            cmp edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f02	     0xf8e93000000	                           jle 0x4004fdb	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f0c	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f0f	          0x8d5010	                   lea edx, [rax + 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f12	            0x89d0	                            mov eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f14	             0x1c0	                            add eax, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f16	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f18	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f1a	          0xc1ea1f	                           shr edx, 0x1f	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f1d	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f1f	            0xd1f8	                              sar eax, 1	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f21	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f27	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f29	          0x83c001	                              add eax, 1	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f2c	            0x39c2	                            cmp edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f2e	            0x7d12	                           jge 0x4004f82	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f34	            0x8b00	                    mov eax, dword [rax]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f36	          0x8d5001	                      lea edx, [rax + 1]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f3d	          0x895004	                mov dword [rax + 4], edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f40	            0xeb22	                           jmp 0x4004fa4	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f46	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f49	          0x8d5010	                   lea edx, [rax + 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f4c	            0x89d0	                            mov eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f4e	             0x1c0	                            add eax, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f50	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f52	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f54	          0xc1ea1f	                           shr edx, 0x1f	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f57	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f59	            0xd1f8	                              sar eax, 1	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f5b	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f61	          0x895004	                mov dword [rax + 4], edx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f68	          0x8b4004	                mov eax, dword [rax + 4]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f6b	            0x4898	                                    cdqe	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f6d	          0x4889c6	                            mov rsi, rax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f70	      0xbf10000000	                           mov edi, 0x10	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f75	      0xe82bb1ffff	                        call sym.st_mult	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f7a	          0x4889c2	                            mov rdx, rax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f81	        0x488b4008	                mov rax, qword [rax + 8]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f85	          0x4889d6	                            mov rsi, rdx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f88	          0x4889c7	                            mov rdi, rax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f8b	      0xe800000000	                          call 0x4004fd0	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f90	          0x4889c2	                            mov rdx, rax	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f97	        0x48895008	                mov qword [rax + 8], rdx	      1691	ref-filter.c	FUNCTION_61	CALL_1
0x4f9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1692	ref-filter.c	FUNCTION_61
0x4f9f	        0x488b5008	                mov rdx, qword [rax + 8]	      1692	ref-filter.c	FUNCTION_61
0x4fa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1692	ref-filter.c	FUNCTION_61
0x4fa7	            0x8b00	                    mov eax, dword [rax]	      1692	ref-filter.c	FUNCTION_61
0x4fa9	            0x4898	                                    cdqe	      1692	ref-filter.c	FUNCTION_61
0x4fab	        0x48c1e004	                              shl rax, 4	      1692	ref-filter.c	FUNCTION_61
0x4faf	          0x4801c2	                            add rdx, rax	      1692	ref-filter.c	FUNCTION_61
0x4fb2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	ref-filter.c	FUNCTION_61
0x4fb6	          0x488902	                    mov qword [rdx], rax	      1692	ref-filter.c	FUNCTION_61
0x4fb9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x4fbd	        0x488b7008	                mov rsi, qword [rax + 8]	      1693	ref-filter.c	FUNCTION_61
0x4fc1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x4fc5	            0x8b00	                    mov eax, dword [rax]	      1693	ref-filter.c	FUNCTION_61
0x4fc7	          0x8d4801	                      lea ecx, [rax + 1]	      1693	ref-filter.c	FUNCTION_61
0x4fca	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1693	ref-filter.c	FUNCTION_61
0x4fce	            0x890a	                    mov dword [rdx], ecx	      1693	ref-filter.c	FUNCTION_61
0x4fd0	            0x4898	                                    cdqe	      1693	ref-filter.c	FUNCTION_61
0x4fd2	        0x48c1e004	                              shl rax, 4	      1693	ref-filter.c	FUNCTION_61
0x4fd6	        0x488d1406	                    lea rdx, [rsi + rax]	      1693	ref-filter.c	FUNCTION_61
0x4fda	        0x488b45f8	                mov rax, qword [rbp - 8]	      1693	ref-filter.c	FUNCTION_61
0x4fde	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x4fe2	        0x48894208	                mov qword [rdx + 8], rax	      1693	ref-filter.c	FUNCTION_61
0x4fe6	              0x90	                                     nop	      1694	ref-filter.c	FUNCTION_61
0x4fe7	              0xc9	                                   leave	      1694	ref-filter.c	FUNCTION_61
0x4fe8	              0xc3	                                     ret	      1694	ref-filter.c	FUNCTION_61
get_ref_atom_value	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,2	35
0x4aee	              0x55	                                push rbp	      1612	ref-filter.c	FUNCTION_58
0x4aef	          0x4889e5	                            mov rbp, rsp	      1612	ref-filter.c	FUNCTION_58
0x4af2	        0x4883ec20	                           sub rsp, 0x20	      1612	ref-filter.c	FUNCTION_58
0x4af6	        0x48897df8	                mov qword [rbp - 8], rdi	      1612	ref-filter.c	FUNCTION_58
0x4afa	          0x8975f4	              mov dword [rbp - 0xc], esi	      1612	ref-filter.c	FUNCTION_58
0x4afd	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1612	ref-filter.c	FUNCTION_58
0x4b01	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1612	ref-filter.c	FUNCTION_58
0x4b05	        0x488b45f8	                mov rax, qword [rbp - 8]	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4b09	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4b0d	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4b10	            0x752e	                           jne 0x4004b80	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4b12	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b16	        0x488b45f8	                mov rax, qword [rbp - 8]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b1a	          0x4889d6	                            mov rsi, rdx	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b1d	          0x4889c7	                            mov rdi, rax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b20	      0xe8ebf7ffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b25	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b27	            0x7407	                            je 0x4004b70	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4b29	      0xb8ffffffff	                     mov eax, 0xffffffff	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x4b2e	            0xeb31	                           jmp 0x4004ba1	      1615	ref-filter.c	FUNCTION_58	IF_1	IF_2
0x4b30	        0x488b45f8	                mov rax, qword [rbp - 8]	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4b34	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4b38	          0x4889c7	                            mov rdi, rax	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4b3b	      0xe8b1ecffff	            call sym.fill_missing_values	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x4b40	        0x488b45f8	                mov rax, qword [rbp - 8]	      1618	ref-filter.c	FUNCTION_58
0x4b44	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1618	ref-filter.c	FUNCTION_58
0x4b48	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1618	ref-filter.c	FUNCTION_58
0x4b4b	          0x4863d2	                         movsxd rdx, edx	      1618	ref-filter.c	FUNCTION_58
0x4b4e	        0x48c1e205	                              shl rdx, 5	      1618	ref-filter.c	FUNCTION_58
0x4b52	          0x4801c2	                            add rdx, rax	      1618	ref-filter.c	FUNCTION_58
0x4b55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1618	ref-filter.c	FUNCTION_58
0x4b59	          0x488910	                    mov qword [rax], rdx	      1618	ref-filter.c	FUNCTION_58
0x4b5c	      0xb800000000	                              mov eax, 0	      1619	ref-filter.c	FUNCTION_58
0x4b61	              0xc9	                                   leave	      1620	ref-filter.c	FUNCTION_58
0x4b62	              0xc3	                                     ret	      1620	ref-filter.c	FUNCTION_58
filter_refs	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,11:ELSE,4:functions,0:IF,8	124
0x5e99	              0x55	                                push rbp	      2104	ref-filter.c	FUNCTION_78
0x5e9a	          0x4889e5	                            mov rbp, rsp	      2104	ref-filter.c	FUNCTION_78
0x5e9d	        0x4883c480	             add rsp, 0xffffffffffffff80	      2104	ref-filter.c	FUNCTION_78
0x5ea1	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2104	ref-filter.c	FUNCTION_78
0x5ea5	        0x48897590	             mov qword [rbp - 0x70], rsi	      2104	ref-filter.c	FUNCTION_78
0x5ea9	          0x89558c	             mov dword [rbp - 0x74], edx	      2104	ref-filter.c	FUNCTION_78
0x5eac	    0x64488b042528	                mov rax, qword fs:[0x28]	      2104	ref-filter.c	FUNCTION_78
0x5eb5	        0x488945f8	                mov qword [rbp - 8], rax	      2104	ref-filter.c	FUNCTION_78
0x5eb9	            0x31c0	                            xor eax, eax	      2104	ref-filter.c	FUNCTION_78
0x5ebb	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      2106	ref-filter.c	FUNCTION_78
0x5ec2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2107	ref-filter.c	FUNCTION_78
0x5ec9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2109	ref-filter.c	FUNCTION_78
0x5ecd	        0x488945b0	             mov qword [rbp - 0x50], rax	      2109	ref-filter.c	FUNCTION_78
0x5ed1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2110	ref-filter.c	FUNCTION_78
0x5ed5	        0x488945b8	             mov qword [rbp - 0x48], rax	      2110	ref-filter.c	FUNCTION_78
0x5ed9	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2112	ref-filter.c	FUNCTION_78	IF_1
0x5edc	          0x83e001	                              and eax, 1	      2112	ref-filter.c	FUNCTION_78	IF_1
0x5edf	            0x85c0	                           test eax, eax	      2112	ref-filter.c	FUNCTION_78	IF_1
0x5ee1	            0x7407	                            je 0x4005f2a	      2112	ref-filter.c	FUNCTION_78	IF_1
0x5ee3	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      2113	ref-filter.c	FUNCTION_78	IF_1
0x5eea	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2114	ref-filter.c	FUNCTION_78
0x5eed	          0x83e03e	                           and eax, 0x3e	      2114	ref-filter.c	FUNCTION_78
0x5ef0	            0x89c2	                            mov edx, eax	      2114	ref-filter.c	FUNCTION_78
0x5ef2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2114	ref-filter.c	FUNCTION_78
0x5ef6	          0x895044	             mov dword [rax + 0x44], edx	      2114	ref-filter.c	FUNCTION_78
0x5ef9	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x5efd	        0x4883c010	                           add rax, 0x10	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x5f01	          0x4889c7	                            mov rdi, rax	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x5f04	      0xe8b4ecffff	            call sym.init_contains_cache	      2116	ref-filter.c	FUNCTION_78	CALL_1
0x5f09	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x5f0d	        0x4883c028	                           add rax, 0x28	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x5f11	          0x4889c7	                            mov rdi, rax	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x5f14	      0xe8a4ecffff	            call sym.init_contains_cache	      2117	ref-filter.c	FUNCTION_78	CALL_2
0x5f19	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2120	ref-filter.c	FUNCTION_78	IF_2
0x5f1d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2120	ref-filter.c	FUNCTION_78	IF_2
0x5f20	            0x85c0	                           test eax, eax	      2120	ref-filter.c	FUNCTION_78	IF_2
0x5f22	            0x750f	                           jne 0x4005f73	      2120	ref-filter.c	FUNCTION_78	IF_2
0x5f24	      0xbf00000000	                              mov edi, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x5f29	      0xb800000000	                              mov eax, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x5f2e	      0xe800000000	                          call 0x4005f73	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x5f33	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x5f37	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x5f3a	          0x83f804	                              cmp eax, 4	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x5f3d	            0x7523	                           jne 0x4005fa2	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x5f3f	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f42	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f46	            0x89d1	                            mov ecx, edx	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f48	          0x4889c2	                            mov rdx, rax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f4b	      0xbe00000000	                              mov esi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f50	      0xbf00000000	                              mov edi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f55	      0xe800000000	                          call 0x4005f9a	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f5a	          0x8945a8	             mov dword [rbp - 0x58], eax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f5d	      0xe981000000	                           jmp 0x4006023	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x5f62	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f66	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f69	          0x83f808	                              cmp eax, 8	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f6c	            0x7520	                           jne 0x4005fce	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f6e	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f71	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f75	            0x89d1	                            mov ecx, edx	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f77	          0x4889c2	                            mov rdx, rax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f7a	      0xbe00000000	                              mov esi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f7f	      0xbf00000000	                              mov edi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f84	      0xe800000000	                          call 0x4005fc9	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f89	          0x8945a8	             mov dword [rbp - 0x58], eax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f8c	            0xeb55	                           jmp 0x4006023	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x5f8e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5f92	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5f95	          0x83f802	                              cmp eax, 2	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5f98	            0x7520	                           jne 0x4005ffa	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5f9a	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5f9d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fa1	            0x89d1	                            mov ecx, edx	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fa3	          0x4889c2	                            mov rdx, rax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fa6	      0xbe00000000	                              mov esi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fab	      0xbf00000000	                              mov edi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fb0	      0xe800000000	                          call 0x4005ff5	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fb5	          0x8945a8	             mov dword [rbp - 0x58], eax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fb8	            0xeb29	                           jmp 0x4006023	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x5fba	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fbe	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fc1	          0x83e01e	                           and eax, 0x1e	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fc4	            0x85c0	                           test eax, eax	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fc6	            0x741b	                            je 0x4006023	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fc8	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fcb	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fcf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fd3	      0xbe00000000	                              mov esi, 0	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fd8	          0x4889c7	                            mov rdi, rax	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fdb	      0xe8abf4ffff	    call sym.for_each_fullref_in_pattern	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fe0	          0x8945a8	             mov dword [rbp - 0x58], eax	      2136	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x5fe3	        0x837da800	               cmp dword [rbp - 0x58], 0	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5fe7	            0x751f	                           jne 0x4006048	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5fe9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5fed	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5ff0	          0x83e020	                           and eax, 0x20	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5ff3	            0x85c0	                           test eax, eax	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5ff5	            0x7411	                            je 0x4006048	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x5ff7	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x5ffb	          0x4889c6	                            mov rsi, rax	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x5ffe	      0xbf00000000	                              mov edi, 0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x6003	      0xe800000000	                          call 0x4006048	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x6008	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x600c	        0x4883c010	                           add rax, 0x10	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x6010	          0x4889c7	                            mov rdi, rax	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x6013	      0xe8c5ebffff	           call sym.clear_contains_cache	      2141	ref-filter.c	FUNCTION_78	CALL_9
0x6018	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x601c	        0x4883c028	                           add rax, 0x28	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x6020	          0x4889c7	                            mov rdi, rax	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x6023	      0xe8b5ebffff	           call sym.clear_contains_cache	      2142	ref-filter.c	FUNCTION_78	CALL_10
0x6028	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2145	ref-filter.c	FUNCTION_78	IF_8
0x602c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2145	ref-filter.c	FUNCTION_78	IF_8
0x6030	          0x4885c0	                           test rax, rax	      2145	ref-filter.c	FUNCTION_78	IF_8
0x6033	            0x740c	                            je 0x4006081	      2145	ref-filter.c	FUNCTION_78	IF_8
0x6035	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x6039	          0x4889c7	                            mov rdi, rax	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x603c	      0xe83cfbffff	                call sym.do_merge_filter	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x6041	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2148	ref-filter.c	FUNCTION_78
0x6044	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2149	ref-filter.c	FUNCTION_78
0x6048	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2149	ref-filter.c	FUNCTION_78
0x6051	            0x7405	                            je 0x4006098	      2149	ref-filter.c	FUNCTION_78
0x6053	      0xe800000000	                          call 0x4006098	      2149	ref-filter.c	FUNCTION_78
0x6058	              0xc9	                                   leave	      2149	ref-filter.c	FUNCTION_78
0x6059	              0xc3	                                     ret	      2149	ref-filter.c	FUNCTION_78
const_error	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0:IF,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_107
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_107
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_107
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_107
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_107
strbuf_setlen	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,1:functions,0:IF,2	43
0x320	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_93
0x321	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_93
0x324	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_93
0x328	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_93
0x32c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_93
0x330	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_93	IF_1
0x334	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_93	IF_1
0x337	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_93	IF_1
0x33a	            0x740d	                            je 0x4000389	       162	strbuf.h	FUNCTION_93	IF_1
0x33c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_93	IF_1
0x340	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_93	IF_1
0x343	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_93	IF_1
0x347	            0xeb05	                           jmp 0x400038e	       162	strbuf.h	FUNCTION_93	IF_1
0x349	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_93	IF_1
0x34e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_93	IF_1
0x352	            0x730f	                           jae 0x40003a3	       162	strbuf.h	FUNCTION_93	IF_1
0x354	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_93	CALL_1
0x359	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_93	CALL_1
0x35e	      0xe800000000	                          call 0x40003a3	       163	strbuf.h	FUNCTION_93	CALL_1
0x363	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_93
0x367	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_93
0x36b	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_93
0x36f	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_93	IF_2
0x373	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_93	IF_2
0x377	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_93	IF_2
0x37d	            0x7414	                            je 0x40003d3	       165	strbuf.h	FUNCTION_93	IF_2
0x37f	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_93	IF_2
0x383	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_93	IF_2
0x387	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_93	IF_2
0x38b	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_93	IF_2
0x38e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_93	IF_2
0x391	            0xeb24	                           jmp 0x40003f7	       169	strbuf.h	FUNCTION_93
0x393	     0xfb605000000	           movzx eax, byte [0x040003da] 	       168	strbuf.h	FUNCTION_93	CALL_2
0x39a	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_93	CALL_2
0x39c	            0x7419	                            je 0x40003f7	       168	strbuf.h	FUNCTION_93	CALL_2
0x39e	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x3a3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_93	CALL_2
0x3a8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x3ad	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x3b2	      0xe800000000	                          call 0x40003f7	       168	strbuf.h	FUNCTION_93	CALL_2
0x3b7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_93
0x3b8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_93
0x3b9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_93
strtoul_ui	SWITCH,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:functions,0:IF,2	54
0xf7	              0x55	                                push rbp	      1010	git-compat-util.h	FUNCTION_124
0xf8	          0x4889e5	                            mov rbp, rsp	      1010	git-compat-util.h	FUNCTION_124
0xfb	        0x4883ec40	                           sub rsp, 0x40	      1010	git-compat-util.h	FUNCTION_124
0xff	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1010	git-compat-util.h	FUNCTION_124
0x103	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1010	git-compat-util.h	FUNCTION_124
0x106	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1010	git-compat-util.h	FUNCTION_124
0x10a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1010	git-compat-util.h	FUNCTION_124
0x113	        0x488945f8	                mov qword [rbp - 8], rax	      1010	git-compat-util.h	FUNCTION_124
0x117	            0x31c0	                            xor eax, eax	      1010	git-compat-util.h	FUNCTION_124
0x119	      0xe800000000	                          call 0x400015e	      1014	git-compat-util.h	FUNCTION_124
0x11e	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_124
0x124	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x128	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x12d	          0x4889c7	                            mov rdi, rax	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x130	      0xe800000000	                          call 0x4000175	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x135	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x138	            0x7407	                            je 0x4000181	      1016	git-compat-util.h	FUNCTION_124	IF_1	CALL_1
0x13a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1017	git-compat-util.h	FUNCTION_124	IF_1
0x13f	            0xeb5e	                           jmp 0x40001df	      1017	git-compat-util.h	FUNCTION_124	IF_1
0x141	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x144	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x14c	          0x4889ce	                            mov rsi, rcx	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x14f	          0x4889c7	                            mov rdi, rax	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x152	      0xe800000000	                          call 0x4000197	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x157	        0x488945f0	             mov qword [rbp - 0x10], rax	      1018	git-compat-util.h	FUNCTION_124	CALL_2
0x15b	      0xe800000000	                          call 0x40001a0	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x160	            0x8b00	                    mov eax, dword [rax]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x162	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x164	            0x7521	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x166	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x16a	           0xfb600	                   movzx eax, byte [rax]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x16d	            0x84c0	                             test al, al	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x16f	            0x7516	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x175	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x179	            0x740c	                            je 0x40001c7	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x17b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x17f	            0x89c0	                            mov eax, eax	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x181	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x185	            0x7407	                            je 0x40001ce	      1019	git-compat-util.h	FUNCTION_124	IF_2
0x187	      0xb8ffffffff	                     mov eax, 0xffffffff	      1020	git-compat-util.h	FUNCTION_124	IF_2
0x18c	            0xeb11	                           jmp 0x40001df	      1020	git-compat-util.h	FUNCTION_124	IF_2
0x18e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1021	git-compat-util.h	FUNCTION_124
0x192	            0x89c2	                            mov edx, eax	      1021	git-compat-util.h	FUNCTION_124
0x194	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	git-compat-util.h	FUNCTION_124
0x198	            0x8910	                    mov dword [rax], edx	      1021	git-compat-util.h	FUNCTION_124
0x19a	      0xb800000000	                              mov eax, 0	      1022	git-compat-util.h	FUNCTION_124
0x19f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	git-compat-util.h	FUNCTION_124
0x1a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	git-compat-util.h	FUNCTION_124
0x1ac	            0x7405	                            je 0x40001f3	      1023	git-compat-util.h	FUNCTION_124
0x1ae	      0xe800000000	                          call 0x40001f3	      1023	git-compat-util.h	FUNCTION_124
0x1b3	              0xc9	                                   leave	      1023	git-compat-util.h	FUNCTION_124
0x1b4	              0xc3	                                     ret	      1023	git-compat-util.h	FUNCTION_124
match_pattern	SWITCH,0:DO,0:FOR,1:WHILE,0:CALL,5:ELSE,0:functions,0:IF,2	63
0x51d7	              0x55	                                push rbp	      1752	ref-filter.c	FUNCTION_64
0x51d8	          0x4889e5	                            mov rbp, rsp	      1752	ref-filter.c	FUNCTION_64
0x51db	        0x4883ec20	                           sub rsp, 0x20	      1752	ref-filter.c	FUNCTION_64
0x51df	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1752	ref-filter.c	FUNCTION_64
0x51e3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1752	ref-filter.c	FUNCTION_64
0x51e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1753	ref-filter.c	FUNCTION_64
0x51eb	          0x488b00	                    mov rax, qword [rax]	      1753	ref-filter.c	FUNCTION_64
0x51ee	        0x488945f8	                mov qword [rbp - 8], rax	      1753	ref-filter.c	FUNCTION_64
0x51f2	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1754	ref-filter.c	FUNCTION_64
0x51f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1756	ref-filter.c	FUNCTION_64	IF_1
0x51fd	         0xfb64040	           movzx eax, byte [rax + 0x40] 	      1756	ref-filter.c	FUNCTION_64	IF_1
0x5201	          0x83e004	                              and eax, 4	      1756	ref-filter.c	FUNCTION_64	IF_1
0x5204	            0x84c0	                             test al, al	      1756	ref-filter.c	FUNCTION_64	IF_1
0x5206	            0x7404	                            je 0x400524c	      1756	ref-filter.c	FUNCTION_64	IF_1
0x5208	        0x834df401	                 or dword [rbp - 0xc], 1	      1757	ref-filter.c	FUNCTION_64	IF_1
0x520c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5210	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5214	      0xbe00000000	                              mov esi, 0	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5219	          0x4889c7	                            mov rdi, rax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x521c	      0xe8eaadffff	                    call sym.skip_prefix	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5221	            0x85c0	                           test eax, eax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5223	            0x7549	                           jne 0x40052ae	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x5225	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x5229	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x522d	      0xbe00000000	                              mov esi, 0	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x5232	          0x4889c7	                            mov rdi, rax	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x5235	      0xe8d1adffff	                    call sym.skip_prefix	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x523a	            0x85c0	                           test eax, eax	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x523c	            0x7530	                           jne 0x40052ae	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x523e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x5242	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x5246	      0xbe00000000	                              mov esi, 0	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x524b	          0x4889c7	                            mov rdi, rax	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x524e	      0xe8b8adffff	                    call sym.skip_prefix	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x5253	            0x85c0	                           test eax, eax	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x5255	            0x7517	                           jne 0x40052ae	      1764	ref-filter.c	FUNCTION_64	CALL_2
0x5257	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x525b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x525f	      0xbe00000000	                              mov esi, 0	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x5264	          0x4889c7	                            mov rdi, rax	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x5267	      0xe89fadffff	                    call sym.skip_prefix	      1766	ref-filter.c	FUNCTION_64	CALL_4
0x526c	            0x85c0	                           test eax, eax	      1765	ref-filter.c	FUNCTION_64	CALL_3
0x526e	              0x90	                                     nop	      1763	ref-filter.c	FUNCTION_64	CALL_1
0x526f	            0xeb29	                           jmp 0x40052da	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x5271	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x5275	        0x488b45f8	                mov rax, qword [rbp - 8]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x5279	          0x488b00	                    mov rax, qword [rax]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x527c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x527f	          0x4889ce	                            mov rsi, rcx	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x5282	          0x4889c7	                            mov rdi, rax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x5285	      0xe800000000	                          call 0x40052ca	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x528a	            0x85c0	                           test eax, eax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x528c	            0x7507	                           jne 0x40052d5	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x528e	      0xb801000000	                              mov eax, 1	      1770	ref-filter.c	FUNCTION_64	FOR_1	IF_2
0x5293	            0xeb16	                           jmp 0x40052eb	      1770	ref-filter.c	FUNCTION_64	FOR_1	IF_2
0x5295	      0x488345f808	                  add qword [rbp - 8], 8	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x529a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x529e	          0x488b00	                    mov rax, qword [rax]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x52a1	          0x4885c0	                           test rax, rax	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x52a4	            0x75cb	                           jne 0x40052b1	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x52a6	      0xb800000000	                              mov eax, 0	      1772	ref-filter.c	FUNCTION_64
0x52ab	              0xc9	                                   leave	      1773	ref-filter.c	FUNCTION_64
0x52ac	              0xc3	                                     ret	      1773	ref-filter.c	FUNCTION_64
skip_prefix	SWITCH,0:DO,1:FOR,0:WHILE,0:CALL,0:ELSE,0:functions,0:IF,1	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_108
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_108
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_108
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_108
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_108
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_108	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_108	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_108	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_108	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_108	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_108	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_108
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_108
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_108
