Curl_SOCKS5	WHILE,0:FOR,2:CALL,62:DO,0:functions,0:IF,53:SWITCH,0:ELSE,14	620
0x40007a0	            0x4157	                                push r15	       359	socks.c	FUNCTION_3
0x40007a2	            0x4156	                                push r14	       359	socks.c	FUNCTION_3
0x40007a4	          0x4d63c0	                          movsxd r8, r8d	       383	socks.c	FUNCTION_3
0x40007a7	            0x4155	                                push r13	       359	socks.c	FUNCTION_3
0x40007a9	            0x4154	                                push r12	       359	socks.c	FUNCTION_3
0x40007ab	          0x4989d5	                            mov r13, rdx	       359	socks.c	FUNCTION_3
0x40007ae	              0x55	                                push rbp	       359	socks.c	FUNCTION_3
0x40007af	              0x53	                                push rbx	       359	socks.c	FUNCTION_3
0x40007b0	          0x4c89cb	                             mov rbx, r9	       359	socks.c	FUNCTION_3
0x40007b3	    0x4881ec080300	                          sub rsp, 0x308	       359	socks.c	FUNCTION_3
0x40007ba	          0x498b29	                     mov rbp, qword [r9]	       384	socks.c	FUNCTION_3
0x40007bd	    0x478bb4815802	    mov r14d, dword [r9 + r8*4 + 0x258] 	       383	socks.c	FUNCTION_3
0x40007c5	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       359	socks.c	FUNCTION_3
0x40007ca	          0x4889d7	                            mov rdi, rdx	       388	socks.c	FUNCTION_3	CALL_1
0x40007cd	      0x4889742418	             mov qword [rsp + 0x18], rsi	       359	socks.c	FUNCTION_3
0x40007d2	    0x64488b042528	                mov rax, qword fs:[0x28]	       359	socks.c	FUNCTION_3
0x40007db	    0x48898424f802	            mov qword [rsp + 0x2f8], rax	       359	socks.c	FUNCTION_3
0x40007e3	            0x31c0	                            xor eax, eax	       359	socks.c	FUNCTION_3
0x40007e5	        0x894c2420	             mov dword [rsp + 0x20], ecx	       359	socks.c	FUNCTION_3
0x40007e9	    0x458ba1380100	           mov r12d, dword [r9 + 0x138] 	       387	socks.c	FUNCTION_3
0x40007f0	      0xe800000000	                          call 0x40007f5	       388	socks.c	FUNCTION_3	CALL_1
0x40007f5	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	       393	socks.c	FUNCTION_3	IF_1
0x40007fc	          0x4989c7	                            mov r15, rax	       388	socks.c	FUNCTION_3	CALL_1
0x40007ff	    0x488b85480200	           mov rax, qword [rbp + 0x248] 	       390	socks.c	FUNCTION_3
0x4000806	      0x4889442408	                mov qword [rsp + 8], rax	       390	socks.c	FUNCTION_3
0x400080b	     0xf85b7010000	                           jne 0x40009c8	       393	socks.c	FUNCTION_3	IF_1
0x4000811	        0x4183fc05	                             cmp r12d, 5	       398	socks.c	FUNCTION_3	IF_2
0x4000815	            0x740d	                            je 0x4000824	       398	socks.c	FUNCTION_3	IF_2
0x4000817	    0x4981ffff0000	                           cmp r15, 0xff	       398	socks.c	FUNCTION_3	IF_2
0x400081e	     0xf8734010000	                            ja 0x4000958	       398	socks.c	FUNCTION_3	IF_2
0x4000824	        0x4183fc05	                             cmp r12d, 5	       386	socks.c	FUNCTION_3
0x4000828	       0xf94442427	                  sete byte [rsp + 0x27]	       386	socks.c	FUNCTION_3
0x400082d	            0x31f6	                            xor esi, esi	       405	socks.c	FUNCTION_3	CALL_4
0x400082f	      0xba01000000	                              mov edx, 1	       405	socks.c	FUNCTION_3	CALL_4
0x4000834	          0x4889ef	                            mov rdi, rbp	       405	socks.c	FUNCTION_3	CALL_4
0x4000837	      0xe800000000	                          call 0x400083c	       405	socks.c	FUNCTION_3	CALL_4
0x400083c	          0x4885c0	                           test rax, rax	       407	socks.c	FUNCTION_3	IF_3
0x400083f	          0x4989c4	                            mov r12, rax	       405	socks.c	FUNCTION_3	CALL_4
0x4000842	     0xf8838010000	                            js 0x4000980	       407	socks.c	FUNCTION_3	IF_3
0x4000848	      0xbe01000000	                              mov esi, 1	       413	socks.c	FUNCTION_3	CALL_6
0x400084d	          0x4489f7	                           mov edi, r14d	       413	socks.c	FUNCTION_3	CALL_6
0x4000850	      0xe800000000	                          call 0x4000855	       413	socks.c	FUNCTION_3	CALL_6
0x4000855	      0xbeffffffff	                     mov esi, 0xffffffff	       416	socks.c	FUNCTION_3	CALL_7
0x400085a	          0x4c89e1	                            mov rcx, r12	       416	socks.c	FUNCTION_3	CALL_7
0x400085d	          0x4489f2	                           mov edx, r14d	       416	socks.c	FUNCTION_3	CALL_7
0x4000860	            0x89f7	                            mov edi, esi	       416	socks.c	FUNCTION_3	CALL_7
0x4000862	      0xe800000000	                          call 0x4000867	       416	socks.c	FUNCTION_3	CALL_7
0x4000867	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       418	socks.c	FUNCTION_3	IF_4
0x400086a	     0xf8478010000	                            je 0x40009e8	       418	socks.c	FUNCTION_3	IF_4
0x4000870	            0x85c0	                           test eax, eax	       422	socks.c	FUNCTION_3	IF_5
0x4000872	     0xf84b0010000	                            je 0x4000a28	       422	socks.c	FUNCTION_3	IF_5
0x4000878	            0xa804	                              test al, 4	       427	socks.c	FUNCTION_3	IF_6
0x400087a	     0xf8588010000	                           jne 0x4000a08	       427	socks.c	FUNCTION_3	IF_6
0x4000880	    0x48f7442408fa	test qword [rsp + 8], 0xfffffffffffffffa	       432	socks.c	FUNCTION_3	IF_7
0x4000889	     0xf85d1010000	                           jne 0x4000a60	       432	socks.c	FUNCTION_3	IF_7
0x400088f	      0xf644240801	                  test byte [rsp + 8], 1	       436	socks.c	FUNCTION_3	IF_8
0x4000894	    0xc68424a00000	                mov byte [rsp + 0xa0], 5	       445	socks.c	FUNCTION_3
0x400089c	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       447	socks.c	FUNCTION_3
0x40008a4	     0xf849e010000	                            je 0x4000a48	       436	socks.c	FUNCTION_3	IF_8
0x40008aa	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       450	socks.c	FUNCTION_3	IF_11
0x40008b0	     0xf84bd020000	                            je 0x4000b73	       450	socks.c	FUNCTION_3	IF_11
0x40008b6	    0xc68424a30000	                mov byte [rsp + 0xa3], 2	       451	socks.c	FUNCTION_3	IF_11
0x40008be	      0xb802000000	                              mov eax, 2	       451	socks.c	FUNCTION_3	IF_11
0x40008c3	            0x31f6	                            xor esi, esi	       455	socks.c	FUNCTION_3	CALL_12
0x40008c5	          0x4489f7	                           mov edi, r14d	       455	socks.c	FUNCTION_3	CALL_12
0x40008c8	    0x888424a10000	               mov byte [rsp + 0xa1], al	       453	socks.c	FUNCTION_3
0x40008cf	      0xe800000000	                          call 0x40008d4	       455	socks.c	FUNCTION_3	CALL_12
0x40008d4	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       457	socks.c	FUNCTION_3	CALL_13
0x40008d8	    0x488d35000000	                   lea rsi, [0x040008df]	       457	socks.c	FUNCTION_3	CALL_13
0x40008df	            0x31c0	                            xor eax, eax	       457	socks.c	FUNCTION_3	CALL_13
0x40008e1	          0x4c89ea	                            mov rdx, r13	       457	socks.c	FUNCTION_3	CALL_13
0x40008e4	          0x4889ef	                            mov rdi, rbp	       457	socks.c	FUNCTION_3	CALL_13
0x40008e7	      0xe800000000	                          call 0x40008ec	       457	socks.c	FUNCTION_3	CALL_13
0x40008ec	      0x488d442450	                   lea rax, [rsp + 0x50]	       459	socks.c	FUNCTION_3	CALL_14
0x40008f1	          0x4489f6	                           mov esi, r14d	       459	socks.c	FUNCTION_3	CALL_14
0x40008f4	          0x4889df	                            mov rdi, rbx	       459	socks.c	FUNCTION_3	CALL_14
0x40008f7	          0x4989c0	                             mov r8, rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008fa	      0x4889442428	             mov qword [rsp + 0x28], rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008ff	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       459	socks.c	FUNCTION_3	CALL_14
0x4000907	        0x488d4802	                      lea rcx, [rax + 2]	       459	socks.c	FUNCTION_3	CALL_14
0x400090b	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       459	socks.c	FUNCTION_3	CALL_14
0x4000913	          0x4889c2	                            mov rdx, rax	       459	socks.c	FUNCTION_3	CALL_14
0x4000916	      0x4889442408	                mov qword [rsp + 8], rax	       459	socks.c	FUNCTION_3	CALL_14
0x400091b	      0xe800000000	                          call 0x4000920	       459	socks.c	FUNCTION_3	CALL_14
0x4000920	            0x85c0	                           test eax, eax	       461	socks.c	FUNCTION_3	IF_12
0x4000922	            0x7517	                           jne 0x400093b	       461	socks.c	FUNCTION_3	IF_12
0x4000924	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       461	socks.c	FUNCTION_3	IF_12
0x400092c	        0x4883c002	                              add rax, 2	       461	socks.c	FUNCTION_3	IF_12
0x4000930	      0x483b442450	            cmp rax, qword [rsp + 0x50] 	       461	socks.c	FUNCTION_3	IF_12
0x4000935	     0xf8440010000	                            je 0x4000a7b	       461	socks.c	FUNCTION_3	IF_12
0x400093b	    0x488d35000000	                   lea rsi, [0x04000942]	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000942	          0x4889ef	                            mov rdi, rbp	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000945	            0x31c0	                            xor eax, eax	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000947	    0x41bf07000000	                             mov r15d, 7	       463	socks.c	FUNCTION_3	IF_12
0x400094d	      0xe800000000	                          call 0x4000952	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000952	            0xeb43	                           jmp 0x4000997	       463	socks.c	FUNCTION_3	IF_12
0x4000954	         0xf1f4000	                         nop dword [rax]	       463	socks.c	FUNCTION_3	IF_12
0x4000958	          0x488b3b	                    mov rdi, qword [rbx]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x400095b	    0x488d35000000	                   lea rsi, [0x04000962]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000962	          0x4c89fa	                            mov rdx, r15	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000965	            0x31c0	                            xor eax, eax	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000967	      0xe800000000	                          call 0x400096c	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x400096c	      0xc644242701	                mov byte [rsp + 0x27], 1	       401	socks.c	FUNCTION_3	IF_2
0x4000971	      0xe9b7feffff	                           jmp 0x400082d	       401	socks.c	FUNCTION_3	IF_2
0x4000976	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       401	socks.c	FUNCTION_3	IF_2
0x4000980	    0x488d35000000	                   lea rsi, [0x04000987]	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000987	          0x4889ef	                            mov rdi, rbp	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x400098a	            0x31c0	                            xor eax, eax	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x400098c	    0x41bf1c000000	                          mov r15d, 0x1c	       410	socks.c	FUNCTION_3	IF_3
0x4000992	      0xe800000000	                          call 0x4000997	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000997	    0x488b8c24f802	           mov rcx, qword [rsp + 0x2f8] 	       789	socks.c	FUNCTION_3
0x400099f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       789	socks.c	FUNCTION_3
0x40009a8	          0x4489f8	                           mov eax, r15d	       789	socks.c	FUNCTION_3
0x40009ab	     0xf8597010000	                           jne 0x4000b48	       789	socks.c	FUNCTION_3
0x40009b1	    0x4881c4080300	                          add rsp, 0x308	       789	socks.c	FUNCTION_3
0x40009b8	              0x5b	                                 pop rbx	       789	socks.c	FUNCTION_3
0x40009b9	              0x5d	                                 pop rbp	       789	socks.c	FUNCTION_3
0x40009ba	            0x415c	                                 pop r12	       789	socks.c	FUNCTION_3
0x40009bc	            0x415d	                                 pop r13	       789	socks.c	FUNCTION_3
0x40009be	            0x415e	                                 pop r14	       789	socks.c	FUNCTION_3
0x40009c0	            0x415f	                                 pop r15	       789	socks.c	FUNCTION_3
0x40009c2	              0xc3	                                     ret	       789	socks.c	FUNCTION_3
0x40009c3	       0xf1f440000	                   nop dword [rax + rax]	       789	socks.c	FUNCTION_3
0x40009c8	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009cc	    0x488d35000000	                   lea rsi, [0x040009d3]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009d3	          0x4c89ea	                            mov rdx, r13	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009d6	          0x4889ef	                            mov rdi, rbp	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009d9	            0x31c0	                            xor eax, eax	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009db	      0xe800000000	                          call 0x40009e0	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009e0	      0xe92cfeffff	                           jmp 0x4000811	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009e5	           0xf1f00	                         nop dword [rax]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x40009e8	          0x488b3b	                    mov rdi, qword [rbx]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009eb	    0x488d35000000	                   lea rsi, [0x040009f2]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009f2	            0x31c0	                            xor eax, eax	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009f4	    0x41bf07000000	                             mov r15d, 7	       420	socks.c	FUNCTION_3	IF_4
0x40009fa	      0xe800000000	                          call 0x40009ff	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009ff	            0xeb96	                           jmp 0x4000997	       420	socks.c	FUNCTION_3	IF_4
0x4000a01	     0xf1f80000000	                         nop dword [rax]	       420	socks.c	FUNCTION_3	IF_4
0x4000a08	          0x488b3b	                    mov rdi, qword [rbx]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000a0b	    0x488d35000000	                   lea rsi, [0x04000a12]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000a12	            0x31c0	                            xor eax, eax	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000a14	    0x41bf07000000	                             mov r15d, 7	       429	socks.c	FUNCTION_3	IF_6
0x4000a1a	      0xe800000000	                          call 0x4000a1f	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000a1f	      0xe973ffffff	                           jmp 0x4000997	       429	socks.c	FUNCTION_3	IF_6
0x4000a24	         0xf1f4000	                         nop dword [rax]	       429	socks.c	FUNCTION_3	IF_6
0x4000a28	          0x488b3b	                    mov rdi, qword [rbx]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000a2b	    0x488d35000000	                   lea rsi, [0x04000a32]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000a32	    0x41bf1c000000	                          mov r15d, 0x1c	       424	socks.c	FUNCTION_3	IF_5
0x4000a38	      0xe800000000	                          call 0x4000a3d	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000a3d	      0xe955ffffff	                           jmp 0x4000997	       424	socks.c	FUNCTION_3	IF_5
0x4000a42	    0x660f1f440000	                    nop word [rax + rax]	       424	socks.c	FUNCTION_3	IF_5
0x4000a48	      0xb801000000	                              mov eax, 1	       447	socks.c	FUNCTION_3
0x4000a4d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       438	socks.c	FUNCTION_3	IF_8
0x4000a56	      0xe968feffff	                           jmp 0x40008c3	       438	socks.c	FUNCTION_3	IF_8
0x4000a5b	       0xf1f440000	                   nop dword [rax + rax]	       438	socks.c	FUNCTION_3	IF_8
0x4000a60	      0x488b542408	                mov rdx, qword [rsp + 8]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a65	          0x488b3b	                    mov rdi, qword [rbx]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a68	    0x488d35000000	                   lea rsi, [0x04000a6f]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a6f	            0x31c0	                            xor eax, eax	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a71	      0xe800000000	                          call 0x4000a76	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a76	      0xe914feffff	                           jmp 0x400088f	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a7b	      0xbe01000000	                              mov esi, 1	       466	socks.c	FUNCTION_3	CALL_16
0x4000a80	          0x4489f7	                           mov edi, r14d	       466	socks.c	FUNCTION_3	CALL_16
0x4000a83	      0xe800000000	                          call 0x4000a88	       466	socks.c	FUNCTION_3	CALL_16
0x4000a88	      0xbaffffffff	                     mov edx, 0xffffffff	       468	socks.c	FUNCTION_3	CALL_17
0x4000a8d	          0x4c89e1	                            mov rcx, r12	       468	socks.c	FUNCTION_3	CALL_17
0x4000a90	          0x4489f7	                           mov edi, r14d	       468	socks.c	FUNCTION_3	CALL_17
0x4000a93	            0x89d6	                            mov esi, edx	       468	socks.c	FUNCTION_3	CALL_17
0x4000a95	      0xe800000000	                          call 0x4000a9a	       468	socks.c	FUNCTION_3	CALL_17
0x4000a9a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       470	socks.c	FUNCTION_3	IF_13
0x4000a9d	            0x743e	                            je 0x4000add	       470	socks.c	FUNCTION_3	IF_13
0x4000a9f	            0x85c0	                           test eax, eax	       474	socks.c	FUNCTION_3	IF_14
0x4000aa1	            0x7420	                            je 0x4000ac3	       474	socks.c	FUNCTION_3	IF_14
0x4000aa3	            0xa804	                              test al, 4	       479	socks.c	FUNCTION_3	IF_15
0x4000aa5	            0x7452	                            je 0x4000af9	       479	socks.c	FUNCTION_3	IF_15
0x4000aa7	          0x488b3b	                    mov rdi, qword [rbx]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000aaa	    0x488d35000000	                   lea rsi, [0x04000ab1]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000ab1	            0x31c0	                            xor eax, eax	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000ab3	    0x41bf38000000	                          mov r15d, 0x38	       481	socks.c	FUNCTION_3	IF_15
0x4000ab9	      0xe800000000	                          call 0x4000abe	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000abe	      0xe9d4feffff	                           jmp 0x4000997	       481	socks.c	FUNCTION_3	IF_15
0x4000ac3	          0x488b3b	                    mov rdi, qword [rbx]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000ac6	    0x488d35000000	                   lea rsi, [0x04000acd]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000acd	    0x41bf1c000000	                          mov r15d, 0x1c	       476	socks.c	FUNCTION_3	IF_14
0x4000ad3	      0xe800000000	                          call 0x4000ad8	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000ad8	      0xe9bafeffff	                           jmp 0x4000997	       476	socks.c	FUNCTION_3	IF_14
0x4000add	          0x488b3b	                    mov rdi, qword [rbx]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000ae0	    0x488d35000000	                   lea rsi, [0x04000ae7]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000ae7	            0x31c0	                            xor eax, eax	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000ae9	    0x41bf07000000	                             mov r15d, 7	       472	socks.c	FUNCTION_3	IF_13
0x4000aef	      0xe800000000	                          call 0x4000af4	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000af4	      0xe99efeffff	                           jmp 0x4000997	       472	socks.c	FUNCTION_3	IF_13
0x4000af9	            0x31f6	                            xor esi, esi	       484	socks.c	FUNCTION_3	CALL_21
0x4000afb	          0x4489f7	                           mov edi, r14d	       484	socks.c	FUNCTION_3	CALL_21
0x4000afe	      0x4c8d642448	                   lea r12, [rsp + 0x48]	       486	socks.c	FUNCTION_3	CALL_22
0x4000b03	      0xe800000000	                          call 0x4000b08	       484	socks.c	FUNCTION_3	CALL_21
0x4000b08	      0x488b542408	                mov rdx, qword [rsp + 8]	       486	socks.c	FUNCTION_3	CALL_22
0x4000b0d	          0x4d89e0	                             mov r8, r12	       486	socks.c	FUNCTION_3	CALL_22
0x4000b10	      0xb902000000	                              mov ecx, 2	       486	socks.c	FUNCTION_3	CALL_22
0x4000b15	          0x4489f6	                           mov esi, r14d	       486	socks.c	FUNCTION_3	CALL_22
0x4000b18	          0x4889df	                            mov rdi, rbx	       486	socks.c	FUNCTION_3	CALL_22
0x4000b1b	      0xe800000000	                          call 0x4000b20	       486	socks.c	FUNCTION_3	CALL_22
0x4000b20	            0x85c0	                           test eax, eax	       487	socks.c	FUNCTION_3	IF_16
0x4000b22	            0x7508	                           jne 0x4000b2c	       487	socks.c	FUNCTION_3	IF_16
0x4000b24	    0x48837c244802	               cmp qword [rsp + 0x48], 2	       487	socks.c	FUNCTION_3	IF_16
0x4000b2a	            0x7421	                            je 0x4000b4d	       487	socks.c	FUNCTION_3	IF_16
0x4000b2c	    0x488d35000000	                   lea rsi, [0x04000b33]	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000b33	          0x4889ef	                            mov rdi, rbp	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000b36	            0x31c0	                            xor eax, eax	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000b38	    0x41bf07000000	                             mov r15d, 7	       489	socks.c	FUNCTION_3	IF_16
0x4000b3e	      0xe800000000	                          call 0x4000b43	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000b43	      0xe94ffeffff	                           jmp 0x4000997	       489	socks.c	FUNCTION_3	IF_16
0x4000b48	      0xe800000000	                          call 0x4000b4d	       789	socks.c	FUNCTION_3
0x4000b4d	    0x80bc24a00000	                cmp byte [rsp + 0xa0], 5	       492	socks.c	FUNCTION_3	IF_17
0x4000b55	            0x7426	                            je 0x4000b7d	       492	socks.c	FUNCTION_3	IF_17
0x4000b57	    0x488d35000000	                   lea rsi, [0x04000b5e]	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b5e	          0x4889ef	                            mov rdi, rbp	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b61	            0x31c0	                            xor eax, eax	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b63	    0x41bf07000000	                             mov r15d, 7	       494	socks.c	FUNCTION_3	IF_17
0x4000b69	      0xe800000000	                          call 0x4000b6e	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b6e	      0xe924feffff	                           jmp 0x4000997	       494	socks.c	FUNCTION_3	IF_17
0x4000b73	      0xb801000000	                              mov eax, 1	       494	socks.c	FUNCTION_3	IF_17
0x4000b78	      0xe946fdffff	                           jmp 0x40008c3	       494	socks.c	FUNCTION_3	IF_17
0x4000b7d	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       496	socks.c	FUNCTION_3	IF_18
0x4000b85	            0x84c0	                             test al, al	       496	socks.c	FUNCTION_3	IF_18
0x4000b87	            0x7434	                            je 0x4000bbd	       496	socks.c	FUNCTION_3	IF_18
0x4000b89	            0x3c02	                               cmp al, 2	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b8b	     0xf84b6010000	                            je 0x4000d47	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b91	            0x3c01	                               cmp al, 1	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000b93	     0xf8492010000	                            je 0x4000d2b	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000b99	             0x401	                               add al, 1	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000b9b	     0xf8449030000	                            je 0x4000eea	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000ba1	    0x488d35000000	                   lea rsi, [0x04000ba8]	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000ba8	          0x4889ef	                            mov rdi, rbp	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000bab	            0x31c0	                            xor eax, eax	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000bad	    0x41bf07000000	                             mov r15d, 7	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000bb3	      0xe800000000	                          call 0x4000bb8	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000bb8	      0xe9dafdffff	                           jmp 0x4000997	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000bbd	      0x807c242700	                cmp byte [rsp + 0x27], 0	       592	socks.c	FUNCTION_3	IF_31
0x4000bc2	    0xc68424a00000	                mov byte [rsp + 0xa0], 5	       588	socks.c	FUNCTION_3
0x4000bca	    0xc68424a10000	                mov byte [rsp + 0xa1], 1	       589	socks.c	FUNCTION_3
0x4000bd2	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       590	socks.c	FUNCTION_3
0x4000bda	     0xf858d000000	                           jne 0x4000c6d	       592	socks.c	FUNCTION_3	IF_31
0x4000be0	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000be5	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_4	CALL_3
0x4000be8	        0x4d8d6f05	                      lea r13, [r15 + 5]	       596	socks.c	FUNCTION_3	IF_31
0x4000bec	      0xb953020000	                          mov ecx, 0x253	        53	string3.h	FUNCTION_4	CALL_3
0x4000bf1	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_4	CALL_3
0x4000bf4	    0xc68424a30000	                mov byte [rsp + 0xa3], 3	       593	socks.c	FUNCTION_3	IF_31
0x4000bfc	    0x4488bc24a400	             mov byte [rsp + 0xa4], r15b	       594	socks.c	FUNCTION_3	IF_31
0x4000c04	        0x488d7805	                      lea rdi, [rax + 5]	        53	string3.h	FUNCTION_4	CALL_3
0x4000c08	      0xe800000000	                          call 0x4000c0d	        53	string3.h	FUNCTION_4	CALL_3
0x4000c0d	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       664	socks.c	FUNCTION_3
0x4000c11	        0x4d8d7d02	                      lea r15, [r13 + 2]	       665	socks.c	FUNCTION_3
0x4000c15	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       673	socks.c	FUNCTION_3	CALL_50
0x4000c1a	      0x488b542408	                mov rdx, qword [rsp + 8]	       673	socks.c	FUNCTION_3	CALL_50
0x4000c1f	          0x4489f6	                           mov esi, r14d	       673	socks.c	FUNCTION_3	CALL_50
0x4000c22	          0x4889df	                            mov rdi, rbx	       673	socks.c	FUNCTION_3	CALL_50
0x4000c25	            0x89c8	                            mov eax, ecx	       664	socks.c	FUNCTION_3
0x4000c27	    0x42888c2ca100	         mov byte [rsp + r13 + 0xa1], cl	       665	socks.c	FUNCTION_3
0x4000c2f	          0x4c89f9	                            mov rcx, r15	       673	socks.c	FUNCTION_3	CALL_50
0x4000c32	          0xc1f808	                              sar eax, 8	       664	socks.c	FUNCTION_3
0x4000c35	    0x4288842ca000	         mov byte [rsp + r13 + 0xa0], al	       664	socks.c	FUNCTION_3
0x4000c3d	      0xe800000000	                          call 0x4000c42	       673	socks.c	FUNCTION_3	CALL_50
0x4000c42	            0x85c0	                           test eax, eax	       675	socks.c	FUNCTION_3	IF_41
0x4000c44	            0x750b	                           jne 0x4000c51	       675	socks.c	FUNCTION_3	IF_41
0x4000c46	      0x4c3b7c2450	            cmp r15, qword [rsp + 0x50] 	       675	socks.c	FUNCTION_3	IF_41
0x4000c4b	     0xf8482030000	                            je 0x4000fd3	       675	socks.c	FUNCTION_3	IF_41
0x4000c51	    0x488d35000000	                   lea rsi, [0x04000c58]	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c58	          0x4889ef	                            mov rdi, rbp	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c5b	            0x31c0	                            xor eax, eax	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c5d	    0x41bf07000000	                             mov r15d, 7	       677	socks.c	FUNCTION_3	IF_41
0x4000c63	      0xe800000000	                          call 0x4000c68	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c68	      0xe92afdffff	                           jmp 0x4000997	       677	socks.c	FUNCTION_3	IF_41
0x4000c6d	      0x4c8d7c2458	                   lea r15, [rsp + 0x58]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c72	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c76	          0x4c89ee	                            mov rsi, r13	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c79	          0x4889df	                            mov rdi, rbx	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c7c	          0x4c89f9	                            mov rcx, r15	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c7f	      0xe800000000	                          call 0x4000c84	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c84	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000c87	     0xf843b030000	                            je 0x4000fc8	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000c8d	          0x83e801	                              sub eax, 1	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000c90	     0xf8417030000	                            je 0x4000fad	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000c96	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c9b	          0x4885c0	                           test rax, rax	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c9e	     0xf84ea020000	                            je 0x4000f8e	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000ca4	          0x488b08	                    mov rcx, qword [rax]	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000ca7	          0x4885c9	                           test rcx, rcx	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000caa	     0xf84de020000	                            je 0x4000f8e	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000cb0	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cb5	          0x4889cf	                            mov rdi, rcx	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cb8	      0xba40000000	                           mov edx, 0x40	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cbd	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cc2	          0x4c89fe	                            mov rsi, r15	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cc5	      0xe800000000	                          call 0x4000cca	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000cca	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000ccf	          0x8b4104	                mov eax, dword [rcx + 4]	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000cd2	          0x83f802	                              cmp eax, 2	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000cd5	     0xf843e020000	                            je 0x4000f19	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000cdb	          0x83f80a	                            cmp eax, 0xa	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cde	     0xf8589020000	                           jne 0x4000f6d	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000ce4	    0xc68424a30000	                mov byte [rsp + 0xa3], 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cec	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cf0	    0x488d84249f00	                   lea rax, [rsp + 0x9f]	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cf8	    0x41bd04000000	                             mov r13d, 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cfe	        0x4983c501	                              add r13, 1	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000d02	    0x420fb64c2a03	        movzx ecx, byte [rdx + r13 + 3] 	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000d08	        0x4983fd14	                           cmp r13, 0x14	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000d0c	        0x42880c28	                mov byte [rax + r13], cl	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000d10	            0x75ec	                           jne 0x4000cfe	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000d12	    0x488d35000000	                   lea rsi, [0x04000d19]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d19	          0x4c89fa	                            mov rdx, r15	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d1c	          0x4889ef	                            mov rdi, rbp	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d1f	            0x31c0	                            xor eax, eax	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d21	      0xe800000000	                          call 0x4000d26	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d26	      0xe930020000	                           jmp 0x4000f5b	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000d2b	    0x488d35000000	                   lea rsi, [0x04000d32]	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000d32	          0x4889ef	                            mov rdi, rbp	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000d35	            0x31c0	                            xor eax, eax	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000d37	    0x41bf07000000	                             mov r15d, 7	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000d3d	      0xe800000000	                          call 0x4000d42	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000d42	      0xe950fcffff	                           jmp 0x4000997	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000d47	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d4c	          0x4885f6	                           test rsi, rsi	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d4f	     0xf84fc000000	                            je 0x4000e51	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d55	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d5a	          0x4d85d2	                           test r10, r10	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d5d	     0xf84ee000000	                            je 0x4000e51	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d63	        0x4883caff	              or rdx, 0xffffffffffffffff	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d67	            0x31c0	                            xor eax, eax	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d69	          0x4889f7	                            mov rdi, rsi	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d6c	          0x4889d1	                            mov rcx, rdx	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d6f	            0xf2ae	              repne scasb al, byte [rdi]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d71	          0x4c89d7	                            mov rdi, r10	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d74	          0x48f7d1	                                 not rcx	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d77	        0x4c8d0c11	                     lea r9, [rcx + rdx]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d7b	          0x4889d1	                            mov rcx, rdx	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d7e	            0xf2ae	              repne scasb al, byte [rdi]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d80	          0x4d85c9	                             test r9, r9	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000d83	    0xc68424a00000	                mov byte [rsp + 0xa0], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d8b	    0x44888c24a100	              mov byte [rsp + 0xa1], r9b	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d93	          0x4889c8	                            mov rax, rcx	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d96	          0x48f7d0	                                 not rax	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d99	        0x4c8d0410	                     lea r8, [rax + rdx]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d9d	            0x742a	                            je 0x4000dc9	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000d9f	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000da4	          0x4c89ca	                             mov rdx, r9	        53	string3.h	FUNCTION_4	CALL_3
0x4000da7	      0xb956020000	                          mov ecx, 0x256	        53	string3.h	FUNCTION_4	CALL_3
0x4000dac	      0x4c89442438	              mov qword [rsp + 0x38], r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000db1	      0x4c894c2430	              mov qword [rsp + 0x30], r9	        53	string3.h	FUNCTION_4	CALL_3
0x4000db6	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_4	CALL_3
0x4000dba	      0xe800000000	                          call 0x4000dbf	        53	string3.h	FUNCTION_4	CALL_3
0x4000dbf	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	        53	string3.h	FUNCTION_4	CALL_3
0x4000dc4	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	        53	string3.h	FUNCTION_4	CALL_3
0x4000dc9	          0x4d85c0	                             test r8, r8	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000dcc	        0x498d4903	                       lea rcx, [r9 + 3]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000dd0	    0x4688840ca200	         mov byte [rsp + r9 + 0xa2], r8b	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000dd8	            0x742a	                            je 0x4000e04	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000dda	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000ddf	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000de4	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000de7	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_4	CALL_3
0x4000dec	      0x4c89442410	              mov qword [rsp + 0x10], r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000df1	        0x488d3c08	                    lea rdi, [rax + rcx]	        53	string3.h	FUNCTION_4	CALL_3
0x4000df5	      0xe800000000	                          call 0x4000dfa	        53	string3.h	FUNCTION_4	CALL_3
0x4000dfa	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000dff	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	        53	string3.h	FUNCTION_4	CALL_3
0x4000e04	        0x4e8d0c01	                      lea r9, [rcx + r8]	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e08	      0x488b542408	                mov rdx, qword [rsp + 8]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e0d	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e12	          0x4489f6	                           mov esi, r14d	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e15	          0x4889df	                            mov rdi, rbx	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e18	          0x4c89c9	                             mov rcx, r9	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e1b	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e20	      0xe800000000	                          call 0x4000e25	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000e25	            0x85c0	                           test eax, eax	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e27	            0x750c	                           jne 0x4000e35	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e29	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e2e	      0x4c3b4c2450	              cmp r9, qword [rsp + 0x50]	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e33	            0x743e	                            je 0x4000e73	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e35	    0x488d35000000	                   lea rsi, [0x04000e3c]	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000e3c	          0x4889ef	                            mov rdi, rbp	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000e3f	            0x31c0	                            xor eax, eax	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000e41	    0x41bf07000000	                             mov r15d, 7	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e47	      0xe800000000	                          call 0x4000e4c	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000e4c	      0xe946fbffff	                           jmp 0x4000997	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e51	    0xc68424a00000	                mov byte [rsp + 0xa0], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e59	    0xc68424a10000	                mov byte [rsp + 0xa1], 0	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e61	          0x4531c0	                            xor r8d, r8d	       518	socks.c	FUNCTION_3	ELSE_2	IF_21	ELSE_3
0x4000e64	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e6c	      0xb903000000	                              mov ecx, 3	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e71	            0xeb91	                           jmp 0x4000e04	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e73	      0x488b542408	                mov rdx, qword [rsp + 8]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e78	          0x4d89e0	                             mov r8, r12	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e7b	      0xb902000000	                              mov ecx, 2	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e80	          0x4489f6	                           mov esi, r14d	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e83	          0x4889df	                            mov rdi, rbx	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e86	      0xe800000000	                          call 0x4000e8b	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e8b	            0x85c0	                           test eax, eax	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e8d	            0x7508	                           jne 0x4000e97	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e8f	    0x48837c244802	               cmp qword [rsp + 0x48], 2	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e95	            0x741c	                            je 0x4000eb3	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e97	    0x488d35000000	                   lea rsi, [0x04000e9e]	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000e9e	          0x4889ef	                            mov rdi, rbp	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000ea1	            0x31c0	                            xor eax, eax	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000ea3	    0x41bf07000000	                             mov r15d, 7	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000ea9	      0xe800000000	                          call 0x4000eae	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000eae	      0xe9e4faffff	                           jmp 0x4000997	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000eb3	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000ebb	            0x84c0	                             test al, al	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000ebd	     0xf84fafcffff	                            je 0x4000bbd	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000ec3	     0xfb69424a000	           movzx edx, byte [rsp + 0xa0] 	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000ecb	    0x488d35000000	                   lea rsi, [0x04000ed2]	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000ed2	           0xfb6c8	                           movzx ecx, al	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000ed5	          0x4889ef	                            mov rdi, rbp	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000ed8	            0x31c0	                            xor eax, eax	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000eda	    0x41bf07000000	                             mov r15d, 7	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000ee0	      0xe800000000	                          call 0x4000ee5	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000ee5	      0xe9adfaffff	                           jmp 0x4000997	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000eea	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000eef	          0x4885c0	                           test rax, rax	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ef2	            0x7409	                            je 0x4000efd	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ef4	          0x803800	                       cmp byte [rax], 0	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ef7	     0xf8516010000	                           jne 0x4001013	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000efd	    0x488d35000000	                   lea rsi, [0x04000f04]	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000f04	          0x4889ef	                            mov rdi, rbp	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000f07	            0x31c0	                            xor eax, eax	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000f09	    0x41bf07000000	                             mov r15d, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000f0f	      0xe800000000	                          call 0x4000f14	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000f14	      0xe97efaffff	                           jmp 0x4000997	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000f19	    0xc68424a30000	                mov byte [rsp + 0xa3], 1	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000f21	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000f25	    0x488d84249f00	                   lea rax, [rsp + 0x9f]	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000f2d	    0x41bd04000000	                             mov r13d, 4	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000f33	        0x4983c501	                              add r13, 1	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000f37	    0x420fb64c2aff	         movzx ecx, byte [rdx + r13 - 1]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000f3d	        0x4983fd08	                              cmp r13, 8	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000f41	        0x42880c28	                mov byte [rax + r13], cl	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000f45	            0x75ec	                           jne 0x4000f33	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000f47	    0x488d35000000	                   lea rsi, [0x04000f4e]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f4e	          0x4c89fa	                            mov rdx, r15	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f51	          0x4889ef	                            mov rdi, rbp	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f54	            0x31c0	                            xor eax, eax	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f56	      0xe800000000	                          call 0x4000f5b	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f5b	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f60	          0x4889ef	                            mov rdi, rbp	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f63	      0xe800000000	                          call 0x4000f68	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f68	      0xe9a0fcffff	                           jmp 0x4000c0d	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f6d	    0x488d35000000	                   lea rsi, [0x04000f74]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f74	          0x4889ef	                            mov rdi, rbp	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f77	          0x4c89fa	                            mov rdx, r15	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f7a	            0x31c0	                            xor eax, eax	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f7c	      0xe800000000	                          call 0x4000f81	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f81	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f86	          0x4889ef	                            mov rdi, rbp	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f89	      0xe800000000	                          call 0x4000f8e	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f8e	    0x488d35000000	                   lea rsi, [0x04000f95]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f95	          0x4c89ea	                            mov rdx, r13	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f98	          0x4889ef	                            mov rdi, rbp	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f9b	            0x31c0	                            xor eax, eax	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f9d	    0x41bf06000000	                             mov r15d, 6	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000fa3	      0xe800000000	                          call 0x4000fa8	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000fa8	      0xe9eaf9ffff	                           jmp 0x4000997	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000fad	          0x4c89fe	                            mov rsi, r15	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000fb0	          0x4889df	                            mov rdi, rbx	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000fb3	      0xe800000000	                          call 0x4000fb8	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000fb8	            0x85c0	                           test eax, eax	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000fba	          0x4189c7	                           mov r15d, eax	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000fbd	     0xf84d3fcffff	                            je 0x4000c96	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000fc3	      0xe9cff9ffff	                           jmp 0x4000997	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000fc8	    0x41bf06000000	                             mov r15d, 6	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000fce	      0xe9c4f9ffff	                           jmp 0x4000997	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000fd3	      0x488b542408	                mov rdx, qword [rsp + 8]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000fd8	          0x4d89e0	                             mov r8, r12	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000fdb	      0xb90a000000	                            mov ecx, 0xa	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000fe0	          0x4489f6	                           mov esi, r14d	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000fe3	          0x4889df	                            mov rdi, rbx	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000fe6	      0xe800000000	                          call 0x4000feb	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000feb	            0x85c0	                           test eax, eax	       691	socks.c	FUNCTION_3	IF_43
0x4000fed	            0x7508	                           jne 0x4000ff7	       691	socks.c	FUNCTION_3	IF_43
0x4000fef	    0x48837c24480a	            cmp qword [rsp + 0x48], 0xa 	       691	socks.c	FUNCTION_3	IF_43
0x4000ff5	            0x7438	                            je 0x400102f	       691	socks.c	FUNCTION_3	IF_43
0x4000ff7	    0x488d35000000	                   lea rsi, [0x04000ffe]	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000ffe	          0x4889ef	                            mov rdi, rbp	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001001	            0x31c0	                            xor eax, eax	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001003	    0x41bf07000000	                             mov r15d, 7	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001009	      0xe800000000	                          call 0x400100e	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x400100e	      0xe984f9ffff	                           jmp 0x4000997	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001013	    0x488d35000000	                   lea rsi, [0x0400101a]	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400101a	          0x4889ef	                            mov rdi, rbp	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400101d	            0x31c0	                            xor eax, eax	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400101f	    0x41bf07000000	                             mov r15d, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4001025	      0xe800000000	                          call 0x400102a	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400102a	      0xe968f9ffff	                           jmp 0x4000997	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400102f	    0x80bc24a00000	                cmp byte [rsp + 0xa0], 5	       696	socks.c	FUNCTION_3	IF_44
0x4001037	            0x741c	                            je 0x4001055	       696	socks.c	FUNCTION_3	IF_44
0x4001039	    0x488d35000000	                   lea rsi, [0x04001040]	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001040	          0x4889ef	                            mov rdi, rbp	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001043	            0x31c0	                            xor eax, eax	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001045	    0x41bf07000000	                             mov r15d, 7	       699	socks.c	FUNCTION_3	IF_44
0x400104b	      0xe800000000	                          call 0x4001050	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001050	      0xe942f9ffff	                           jmp 0x4000997	       699	socks.c	FUNCTION_3	IF_44
0x4001055	     0xfb68424a300	           movzx eax, byte [rsp + 0xa3] 	       719	socks.c	FUNCTION_3	IF_45
0x400105d	            0x3c03	                               cmp al, 3	       719	socks.c	FUNCTION_3	IF_45
0x400105f	     0xf8400010000	                            je 0x4001165	       719	socks.c	FUNCTION_3	IF_45
0x4001065	            0x3c04	                               cmp al, 4	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4001067	    0x41bd0a000000	                           mov r13d, 0xa	       680	socks.c	FUNCTION_3
0x400106d	     0xf8487010000	                            je 0x40011fa	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4001073	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       746	socks.c	FUNCTION_3	IF_50
0x400107b	            0x84c0	                             test al, al	       746	socks.c	FUNCTION_3	IF_50
0x400107d	     0xf8451010000	                            je 0x40011d4	       746	socks.c	FUNCTION_3	IF_50
0x4001083	     0xfb69424a300	           movzx edx, byte [rsp + 0xa3] 	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x400108b	          0x80fa01	                               cmp dl, 1	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x400108e	     0xf84a2010000	                            je 0x4001236	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4001094	          0x80fa03	                               cmp dl, 3	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001097	     0xf84e9000000	                            je 0x4001186	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x400109d	          0x80fa04	                               cmp dl, 4	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x40010a0	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x40010a6	     0xf85ebf8ffff	                           jne 0x4000997	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x40010ac	     0xfb68c24a500	           movzx ecx, byte [rsp + 0xa5] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010b4	     0xfb69424a400	           movzx edx, byte [rsp + 0xa4] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010bc	    0x488d35000000	                   lea rsi, [0x040010c3]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c3	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c4	     0xfb78424bc00	           movzx eax, word [rsp + 0xbc] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010cc	          0x4889ef	                            mov rdi, rbp	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010cf	        0x66c1c008	                               rol ax, 8	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d3	           0xfb7c0	                           movzx eax, ax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d6	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d7	     0xfb68424c300	           movzx eax, byte [rsp + 0xc3] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010df	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e0	     0xfb68424ca00	           movzx eax, byte [rsp + 0xca] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e8	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e9	     0xfb68424d100	           movzx eax, byte [rsp + 0xd1] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f1	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f2	     0xfb68424d800	           movzx eax, byte [rsp + 0xd8] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fa	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fb	     0xfb68424df00	           movzx eax, byte [rsp + 0xdf] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001103	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001104	     0xfb68424e600	           movzx eax, byte [rsp + 0xe6] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400110c	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400110d	     0xfb68424ed00	           movzx eax, byte [rsp + 0xed] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001115	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001116	     0xfb68424f400	           movzx eax, byte [rsp + 0xf4] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400111e	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400111f	     0xfb68424fb00	           movzx eax, byte [rsp + 0xfb] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001127	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001128	     0xfb684240201	          movzx eax, byte [rsp + 0x102] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001130	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001131	     0xfb684240901	          movzx eax, byte [rsp + 0x109] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001139	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400113a	     0xfb684241001	          movzx eax, byte [rsp + 0x110] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001142	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001143	    0x440fb68c2417	          movzx r9d, byte [rsp + 0x117] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400114c	            0x31c0	                            xor eax, eax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400114e	    0x440fb6842416	          movzx r8d, byte [rsp + 0x116] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001157	      0xe800000000	                          call 0x400115c	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400115c	        0x4883c470	                           add rsp, 0x70	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001160	      0xe932f8ffff	                           jmp 0x4000997	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001165	     0xfb68424a400	           movzx eax, byte [rsp + 0xa4] 	       722	socks.c	FUNCTION_3	IF_45
0x400116d	          0x83c007	                              add eax, 7	       722	socks.c	FUNCTION_3	IF_45
0x4001170	          0x83f80a	                            cmp eax, 0xa	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x4001173	          0x4c63e8	                         movsxd r13, eax	       722	socks.c	FUNCTION_3	IF_45
0x4001176	     0xf8f84000000	                            jg 0x4001200	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x400117c	    0x80bc24a10000	                cmp byte [rsp + 0xa1], 0	       746	socks.c	FUNCTION_3	IF_50
0x4001184	            0x744e	                            je 0x40011d4	       746	socks.c	FUNCTION_3	IF_50
0x4001186	    0x420fb6842c9e	     movzx eax, byte [rsp + r13 + 0x9e] 	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x400118f	    0x420fb68c2c9f	     movzx ecx, byte [rsp + r13 + 0x9f] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001198	    0x488d35000000	                   lea rsi, [0x0400119f]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400119f	    0x42c6842c9e00	          mov byte [rsp + r13 + 0x9e], 0	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x40011a8	      0x488b542408	                mov rdx, qword [rsp + 8]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011ad	          0x4889ef	                            mov rdi, rbp	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011b0	    0x440fb68424a1	           movzx r8d, byte [rsp + 0xa1] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011b9	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x40011bf	          0xc1e008	                              shl eax, 8	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011c2	        0x4883c205	                              add rdx, 5	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011c6	             0x9c1	                             or ecx, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011c8	            0x31c0	                            xor eax, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011ca	      0xe800000000	                          call 0x40011cf	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011cf	      0xe9c3f7ffff	                           jmp 0x4000997	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x40011d4	    0x488d35000000	                   lea rsi, [0x040011db]	       785	socks.c	FUNCTION_3	CALL_61
0x40011db	          0x4889ef	                            mov rdi, rbp	       785	socks.c	FUNCTION_3	CALL_61
0x40011de	            0x31c0	                            xor eax, eax	       785	socks.c	FUNCTION_3	CALL_61
0x40011e0	          0x4531ff	                          xor r15d, r15d	       788	socks.c	FUNCTION_3
0x40011e3	      0xe800000000	                          call 0x40011e8	       785	socks.c	FUNCTION_3	CALL_61
0x40011e8	      0xbe01000000	                              mov esi, 1	       787	socks.c	FUNCTION_3	CALL_62
0x40011ed	          0x4489f7	                           mov edi, r14d	       787	socks.c	FUNCTION_3	CALL_62
0x40011f0	      0xe800000000	                          call 0x40011f5	       787	socks.c	FUNCTION_3	CALL_62
0x40011f5	      0xe99df7ffff	                           jmp 0x4000997	       788	socks.c	FUNCTION_3
0x40011fa	    0x41bd16000000	                          mov r13d, 0x16	       726	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4001200	      0x488b442408	                mov rax, qword [rsp + 8]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001205	        0x4d8d7df6	                    lea r15, [r13 - 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001209	          0x4d89e0	                             mov r8, r12	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x400120c	          0x4489f6	                           mov esi, r14d	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x400120f	          0x4889df	                            mov rdi, rbx	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001212	          0x4c89f9	                            mov rcx, r15	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001215	        0x488d500a	                    lea rdx, [rax + 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001219	      0xe800000000	                          call 0x400121e	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x400121e	            0x85c0	                           test eax, eax	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001220	     0xf85d1fdffff	                           jne 0x4000ff7	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001226	      0x4c3b7c2448	            cmp r15, qword [rsp + 0x48] 	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x400122b	     0xf85c6fdffff	                           jne 0x4000ff7	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001231	      0xe93dfeffff	                           jmp 0x4001073	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001236	     0xfb68c24a500	           movzx ecx, byte [rsp + 0xa5] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400123e	     0xfb69424a400	           movzx edx, byte [rsp + 0xa4] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001246	    0x488d35000000	                   lea rsi, [0x0400124d]	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400124d	              0x50	                                push rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400124e	     0xfb78424b000	           movzx eax, word [rsp + 0xb0] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001256	          0x4889ef	                            mov rdi, rbp	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001259	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x400125f	        0x66c1c008	                               rol ax, 8	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001263	           0xfb7c0	                           movzx eax, ax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001266	              0x50	                                push rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001267	    0x440fb68c24b7	           movzx r9d, byte [rsp + 0xb7] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001270	            0x31c0	                            xor eax, eax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001272	    0x440fb68424b6	           movzx r8d, byte [rsp + 0xb6] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400127b	      0xe800000000	                          call 0x4001280	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001280	              0x58	                                 pop rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001281	              0x5a	                                 pop rdx	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001282	      0xe910f7ffff	                           jmp 0x4000997	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
Curl_SOCKS4	WHILE,0:FOR,0:CALL,32:DO,0:functions,0:IF,18:SWITCH,1:ELSE,2	394
0x4000130	            0x4157	                                push r15	       113	socks.c	FUNCTION_2
0x4000132	            0x4156	                                push r14	       113	socks.c	FUNCTION_2
0x4000134	          0x4863c9	                         movsxd rcx, ecx	       121	socks.c	FUNCTION_2
0x4000137	            0x4155	                                push r13	       113	socks.c	FUNCTION_2
0x4000139	            0x4154	                                push r12	       113	socks.c	FUNCTION_2
0x400013b	          0x4989fe	                            mov r14, rdi	       113	socks.c	FUNCTION_2
0x400013e	              0x55	                                push rbp	       113	socks.c	FUNCTION_2
0x400013f	              0x53	                                push rbx	       113	socks.c	FUNCTION_2
0x4000140	          0x4989f5	                            mov r13, rsi	       113	socks.c	FUNCTION_2
0x4000143	          0x4189d4	                           mov r12d, edx	       113	socks.c	FUNCTION_2
0x4000146	            0x31f6	                            xor esi, esi	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000148	      0xba01000000	                              mov edx, 1	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400014d	    0x4881ec880100	                          sub rsp, 0x188	       113	socks.c	FUNCTION_2
0x4000154	          0x498b28	                     mov rbp, qword [r8]	       122	socks.c	FUNCTION_2
0x4000157	          0x4c89c3	                             mov rbx, r8	       113	socks.c	FUNCTION_2
0x400015a	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	socks.c	FUNCTION_2
0x4000163	    0x488984247801	            mov qword [rsp + 0x178], rax	       113	socks.c	FUNCTION_2
0x400016b	            0x31c0	                            xor eax, eax	       113	socks.c	FUNCTION_2
0x400016d	    0x418b80380100	            mov eax, dword [r8 + 0x138] 	       115	socks.c	FUNCTION_2
0x4000174	    0x458bbc885802	   mov r15d, dword [r8 + rcx*4 + 0x258] 	       121	socks.c	FUNCTION_2
0x400017c	          0x4889ef	                            mov rdi, rbp	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400017f	        0x8944240c	              mov dword [rsp + 0xc], eax	       115	socks.c	FUNCTION_2
0x4000183	      0xe800000000	                          call 0x4000188	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000188	          0x4885c0	                           test rax, rax	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400018b	     0xf88f7010000	                            js 0x4000388	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000191	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	       130	socks.c	FUNCTION_2	IF_2
0x4000198	            0x742e	                            je 0x40001c8	       130	socks.c	FUNCTION_2	IF_2
0x400019a	      0x837c240c06	                cmp dword [rsp + 0xc], 6	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x400019f	    0x488d05000000	                   lea rax, [0x040001a6]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001a6	    0x488d15000000	                   lea rdx, [0x040001ad]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001ad	          0x488b3b	                    mov rdi, qword [rbx]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001b0	    0x488d35000000	                   lea rsi, [0x040001b7]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001b7	          0x4589e0	                           mov r8d, r12d	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001ba	          0x4c89e9	                            mov rcx, r13	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001bd	        0x480f45d0	                         cmovne rdx, rax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c1	            0x31c0	                            xor eax, eax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c3	      0xe800000000	                          call 0x40001c8	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c8	            0x31f6	                            xor esi, esi	       134	socks.c	FUNCTION_2	CALL_4
0x40001ca	          0x4489ff	                           mov edi, r15d	       134	socks.c	FUNCTION_2	CALL_4
0x40001cd	      0xe800000000	                          call 0x40001d2	       134	socks.c	FUNCTION_2	CALL_4
0x40001d2	    0x488d35000000	                   lea rsi, [0x040001d9]	       136	socks.c	FUNCTION_2	CALL_5
0x40001d9	            0x31c0	                            xor eax, eax	       136	socks.c	FUNCTION_2	CALL_5
0x40001db	          0x4489e1	                           mov ecx, r12d	       136	socks.c	FUNCTION_2	CALL_5
0x40001de	          0x4c89ea	                            mov rdx, r13	       136	socks.c	FUNCTION_2	CALL_5
0x40001e1	          0x4889ef	                            mov rdi, rbp	       136	socks.c	FUNCTION_2	CALL_5
0x40001e4	      0xe800000000	                          call 0x40001e9	       136	socks.c	FUNCTION_2	CALL_5
0x40001e9	          0x4489e0	                           mov eax, r12d	       151	socks.c	FUNCTION_2
0x40001ec	      0xc644247004	                mov byte [rsp + 0x70], 4	       149	socks.c	FUNCTION_2
0x40001f1	      0xc644247101	                mov byte [rsp + 0x71], 1	       150	socks.c	FUNCTION_2
0x40001f6	          0xc1f808	                              sar eax, 8	       151	socks.c	FUNCTION_2
0x40001f9	      0x837c240c06	                cmp dword [rsp + 0xc], 6	       155	socks.c	FUNCTION_2	IF_3
0x40001fe	      0x4488642473	             mov byte [rsp + 0x73], r12b	       152	socks.c	FUNCTION_2
0x4000203	        0x88442472	               mov byte [rsp + 0x72], al	       151	socks.c	FUNCTION_2
0x4000207	     0xf84ab000000	                            je 0x40002b8	       155	socks.c	FUNCTION_2	IF_3
0x400020d	      0x488d442428	                   lea rax, [rsp + 0x28]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000212	          0x4489e2	                           mov edx, r12d	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000215	          0x4c89ee	                            mov rsi, r13	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000218	          0x4889df	                            mov rdi, rbx	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400021b	          0x4889c1	                            mov rcx, rax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400021e	      0x4889442410	             mov qword [rsp + 0x10], rax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000223	      0xe800000000	                          call 0x4000228	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000228	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x400022b	     0xf849f020000	                            je 0x40004d0	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x4000231	          0x83f801	                              cmp eax, 1	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x4000234	     0xf84a6020000	                            je 0x40004e0	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x400023a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x400023f	          0x4885c0	                           test rax, rax	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000242	            0x7454	                            je 0x4000298	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000244	          0x4c8b20	                    mov r12, qword [rax]	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x4000247	          0x4d85e4	                           test r12, r12	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x400024a	            0x744c	                            je 0x4000298	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x400024c	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000251	      0xba40000000	                           mov edx, 0x40	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000256	          0x4c89e7	                            mov rdi, r12	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000259	          0x4889ce	                            mov rsi, rcx	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x400025c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000261	      0xe800000000	                          call 0x4000266	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000266	    0x41837c240402	                  cmp dword [r12 + 4], 2	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400026c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000271	     0xf84a9000000	                            je 0x4000320	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000277	    0x488d35000000	                   lea rsi, [0x0400027e]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400027e	          0x4889ef	                            mov rdi, rbp	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000281	          0x4889ca	                            mov rdx, rcx	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000284	            0x31c0	                            xor eax, eax	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000286	      0xe800000000	                          call 0x400028b	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400028b	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000290	          0x4889ef	                            mov rdi, rbp	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000293	      0xe800000000	                          call 0x4000298	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000298	    0x488d35000000	                   lea rsi, [0x0400029f]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400029f	            0x31c0	                            xor eax, eax	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a1	          0x4c89ea	                            mov rdx, r13	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a4	          0x4889ef	                            mov rdi, rbp	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a7	      0xe800000000	                          call 0x40002ac	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002ac	      0xb806000000	                              mov eax, 6	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b1	            0xeb3d	                           jmp 0x40002f0	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b3	       0xf1f440000	                   nop dword [rax + rax]	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b8	          0x4d85f6	                           test r14, r14	       209	socks.c	FUNCTION_2	IF_10
0x40002bb	      0xc644247800	                mov byte [rsp + 0x78], 0	       208	socks.c	FUNCTION_2
0x40002c0	     0xf8472010000	                            je 0x4000438	       209	socks.c	FUNCTION_2	IF_10
0x40002c6	          0x4c89f7	                            mov rdi, r14	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40002c9	      0xe800000000	                          call 0x40002ce	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40002ce	    0x483dfd000000	                           cmp rax, 0xfd	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40002d4	     0xf86ce000000	                           jbe 0x40003a8	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40002da	    0x488d35000000	                   lea rsi, [0x040002e1]	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e1	            0x31c0	                            xor eax, eax	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e3	          0x4889ef	                            mov rdi, rbp	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e6	      0xe800000000	                          call 0x40002eb	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002eb	      0xb807000000	                              mov eax, 7	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x40002f0	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	       347	socks.c	FUNCTION_2
0x40002f8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       347	socks.c	FUNCTION_2
0x4000301	     0xf8577030000	                           jne 0x400067e	       347	socks.c	FUNCTION_2
0x4000307	    0x4881c4880100	                          add rsp, 0x188	       347	socks.c	FUNCTION_2
0x400030e	              0x5b	                                 pop rbx	       347	socks.c	FUNCTION_2
0x400030f	              0x5d	                                 pop rbp	       347	socks.c	FUNCTION_2
0x4000310	            0x415c	                                 pop r12	       347	socks.c	FUNCTION_2
0x4000312	            0x415d	                                 pop r13	       347	socks.c	FUNCTION_2
0x4000314	            0x415e	                                 pop r14	       347	socks.c	FUNCTION_2
0x4000316	            0x415f	                                 pop r15	       347	socks.c	FUNCTION_2
0x4000318	              0xc3	                                     ret	       347	socks.c	FUNCTION_2
0x4000319	     0xf1f80000000	                         nop dword [rax]	       347	socks.c	FUNCTION_2
0x4000320	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000325	    0x488d35000000	                   lea rsi, [0x0400032c]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400032c	          0x4889ef	                            mov rdi, rbp	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400032f	         0xfb65004	               movzx edx, byte [rax + 4]	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000333	        0x88542474	               mov byte [rsp + 0x74], dl	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000337	         0xfb65005	               movzx edx, byte [rax + 5]	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400033b	        0x88542475	               mov byte [rsp + 0x75], dl	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400033f	         0xfb65006	               movzx edx, byte [rax + 6]	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000343	        0x88542476	               mov byte [rsp + 0x76], dl	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000347	         0xfb64007	               movzx eax, byte [rax + 7]	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400034b	          0x4889ca	                            mov rdx, rcx	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400034e	        0x88442477	               mov byte [rsp + 0x77], al	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000352	            0x31c0	                            xor eax, eax	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000354	      0xe800000000	                          call 0x4000359	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000359	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x400035e	          0x4889ef	                            mov rdi, rbp	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000361	      0xe800000000	                          call 0x4000366	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000366	          0x4d85f6	                           test r14, r14	       209	socks.c	FUNCTION_2	IF_10
0x4000369	      0xc644247800	                mov byte [rsp + 0x78], 0	       208	socks.c	FUNCTION_2
0x400036e	     0xf8552ffffff	                           jne 0x40002c6	       209	socks.c	FUNCTION_2	IF_10
0x4000374	    0x41be09000000	                             mov r14d, 9	       226	socks.c	FUNCTION_2
0x400037a	      0x4c8d642470	                   lea r12, [rsp + 0x70]	       226	socks.c	FUNCTION_2
0x400037f	            0xeb5b	                           jmp 0x40003dc	       226	socks.c	FUNCTION_2
0x4000381	     0xf1f80000000	                         nop dword [rax]	       226	socks.c	FUNCTION_2
0x4000388	    0x488d35000000	                   lea rsi, [0x0400038f]	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x400038f	            0x31c0	                            xor eax, eax	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000391	          0x4889ef	                            mov rdi, rbp	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000394	      0xe800000000	                          call 0x4000399	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000399	      0xb81c000000	                           mov eax, 0x1c	       127	socks.c	FUNCTION_2	IF_1
0x400039e	      0xe94dffffff	                           jmp 0x40002f0	       127	socks.c	FUNCTION_2	IF_1
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	       127	socks.c	FUNCTION_2	IF_1
0x40003a8	      0x4c8d642470	                   lea r12, [rsp + 0x70]	        53	string3.h	FUNCTION_4	CALL_3
0x40003ad	        0x488d5001	                      lea rdx, [rax + 1]	        53	string3.h	FUNCTION_4	CALL_3
0x40003b1	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_4	CALL_3
0x40003b4	      0xb9fe000000	                           mov ecx, 0xfe	        53	string3.h	FUNCTION_4	CALL_3
0x40003b9	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_4	CALL_3
0x40003be	      0x498d7c2408	                      lea rdi, [r12 + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x40003c3	      0xe800000000	                          call 0x40003c8	        53	string3.h	FUNCTION_4	CALL_3
0x40003c8	      0x837c240c06	                cmp dword [rsp + 0xc], 6	       230	socks.c	FUNCTION_2	IF_12
0x40003cd	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       226	socks.c	FUNCTION_2
0x40003d2	        0x458d7009	                      lea r14d, [r8 + 9]	       226	socks.c	FUNCTION_2
0x40003d6	     0xf84a6000000	                            je 0x4000482	       230	socks.c	FUNCTION_2	IF_12
0x40003dc	          0x4d63ce	                         movsxd r9, r14d	       230	socks.c	FUNCTION_2	IF_12
0x40003df	    0x48c744241800	               mov qword [rsp + 0x18], 0	       225	socks.c	FUNCTION_2
0x40003e8	      0x4c8d742420	                   lea r14, [rsp + 0x20]	       244	socks.c	FUNCTION_2	CALL_19
0x40003ed	          0x4c89c9	                             mov rcx, r9	       244	socks.c	FUNCTION_2	CALL_19
0x40003f0	          0x4c89e2	                            mov rdx, r12	       244	socks.c	FUNCTION_2	CALL_19
0x40003f3	          0x4489fe	                           mov esi, r15d	       244	socks.c	FUNCTION_2	CALL_19
0x40003f6	          0x4889df	                            mov rdi, rbx	       244	socks.c	FUNCTION_2	CALL_19
0x40003f9	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       244	socks.c	FUNCTION_2	CALL_19
0x40003fe	          0x4d89f0	                             mov r8, r14	       244	socks.c	FUNCTION_2	CALL_19
0x4000401	      0xe800000000	                          call 0x4000406	       244	socks.c	FUNCTION_2	CALL_19
0x4000406	            0x85c0	                           test eax, eax	       247	socks.c	FUNCTION_2	IF_14
0x4000408	            0x7510	                           jne 0x400041a	       247	socks.c	FUNCTION_2	IF_14
0x400040a	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       247	socks.c	FUNCTION_2	IF_14
0x400040f	      0x4c394c2420	              cmp qword [rsp + 0x20], r9	       247	socks.c	FUNCTION_2	IF_14
0x4000414	     0xf84de000000	                            je 0x40004f8	       247	socks.c	FUNCTION_2	IF_14
0x400041a	    0x488d35000000	                   lea rsi, [0x04000421]	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000421	          0x4889ef	                            mov rdi, rbp	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000424	            0x31c0	                            xor eax, eax	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000426	      0xe800000000	                          call 0x400042b	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x400042b	      0xb807000000	                              mov eax, 7	       249	socks.c	FUNCTION_2	IF_14
0x4000430	      0xe9bbfeffff	                           jmp 0x40002f0	       249	socks.c	FUNCTION_2	IF_14
0x4000435	           0xf1f00	                         nop dword [rax]	       249	socks.c	FUNCTION_2	IF_14
0x4000438	      0x4c8d642470	                   lea r12, [rsp + 0x70]	       227	socks.c	FUNCTION_2	CALL_16
0x400043d	      0x498d4c2408	                      lea rcx, [r12 + 8]	       227	socks.c	FUNCTION_2	CALL_16
0x4000442	          0x4989c8	                             mov r8, rcx	       227	socks.c	FUNCTION_2	CALL_16
0x4000445	          0x418b10	                     mov edx, dword [r8]	       227	socks.c	FUNCTION_2	CALL_16
0x4000448	        0x4983c004	                               add r8, 4	       227	socks.c	FUNCTION_2	CALL_16
0x400044c	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       227	socks.c	FUNCTION_2	CALL_16
0x4000452	            0xf7d2	                                 not edx	       227	socks.c	FUNCTION_2	CALL_16
0x4000454	            0x21d0	                            and eax, edx	       227	socks.c	FUNCTION_2	CALL_16
0x4000456	      0x2580808080	                     and eax, 0x80808080	       227	socks.c	FUNCTION_2	CALL_16
0x400045b	            0x74e8	                            je 0x4000445	       227	socks.c	FUNCTION_2	CALL_16
0x400045d	            0x89c2	                            mov edx, eax	       227	socks.c	FUNCTION_2	CALL_16
0x400045f	          0xc1ea10	                           shr edx, 0x10	       227	socks.c	FUNCTION_2	CALL_16
0x4000462	      0xa980800000	                        test eax, 0x8080	       227	socks.c	FUNCTION_2	CALL_16
0x4000467	           0xf44c2	                          cmove eax, edx	       227	socks.c	FUNCTION_2	CALL_16
0x400046a	        0x498d5002	                       lea rdx, [r8 + 2]	       227	socks.c	FUNCTION_2	CALL_16
0x400046e	            0x89c6	                            mov esi, eax	       227	socks.c	FUNCTION_2	CALL_16
0x4000470	        0x4c0f44c2	                           cmove r8, rdx	       227	socks.c	FUNCTION_2	CALL_16
0x4000474	          0x4000c6	                             add sil, al	       227	socks.c	FUNCTION_2	CALL_16
0x4000477	        0x4983d803	                               sbb r8, 3	       227	socks.c	FUNCTION_2	CALL_16
0x400047b	          0x4929c8	                             sub r8, rcx	       227	socks.c	FUNCTION_2	CALL_16
0x400047e	        0x458d7009	                      lea r14d, [r8 + 9]	       226	socks.c	FUNCTION_2
0x4000482	          0x4c89ef	                            mov rdi, r13	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x4000485	      0xc644247400	                mov byte [rsp + 0x74], 0	       231	socks.c	FUNCTION_2	IF_12
0x400048a	      0xc644247500	                mov byte [rsp + 0x75], 0	       232	socks.c	FUNCTION_2	IF_12
0x400048f	      0xc644247600	                mov byte [rsp + 0x76], 0	       233	socks.c	FUNCTION_2	IF_12
0x4000494	      0xc644247701	                mov byte [rsp + 0x77], 1	       234	socks.c	FUNCTION_2	IF_12
0x4000499	      0xe800000000	                          call 0x400049e	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x400049e	          0x4d63ce	                         movsxd r9, r14d	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004a1	        0x4883c001	                              add rax, 1	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40004a5	        0x4e8d3408	                     lea r14, [rax + r9]	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004a9	      0x4889442418	             mov qword [rsp + 0x18], rax	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40004ae	    0x4981fe060100	                          cmp r14, 0x106	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004b5	     0xf8e05010000	                           jle 0x40005c0	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004bb	    0x48c744241800	               mov qword [rsp + 0x18], 0	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004c4	      0xe91fffffff	                           jmp 0x40003e8	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004c9	     0xf1f80000000	                         nop dword [rax]	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004d0	      0xb805000000	                              mov eax, 5	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004d5	      0xe916feffff	                           jmp 0x40002f0	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004da	    0x660f1f440000	                    nop word [rax + rax]	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004e0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x40004e5	          0x4889df	                            mov rdi, rbx	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x40004e8	      0xe800000000	                          call 0x40004ed	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x40004ed	      0xe948fdffff	                           jmp 0x400023a	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x40004f2	    0x660f1f440000	                    nop word [rax + rax]	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x40004f8	      0x837c240c06	                cmp dword [rsp + 0xc], 6	       251	socks.c	FUNCTION_2	IF_15
0x40004fd	            0x7549	                           jne 0x4000548	       251	socks.c	FUNCTION_2	IF_15
0x40004ff	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       251	socks.c	FUNCTION_2	IF_15
0x4000505	            0x7541	                           jne 0x4000548	       251	socks.c	FUNCTION_2	IF_15
0x4000507	          0x4c89ef	                            mov rdi, r13	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400050a	      0xe800000000	                          call 0x400050f	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400050f	        0x4c8d4801	                       lea r9, [rax + 1]	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x4000513	          0x4d89f0	                             mov r8, r14	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000516	          0x4c89ea	                            mov rdx, r13	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000519	          0x4489fe	                           mov esi, r15d	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400051c	          0x4889df	                            mov rdi, rbx	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400051f	          0x4c89c9	                             mov rcx, r9	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000522	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000527	      0xe800000000	                          call 0x400052c	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400052c	            0x85c0	                           test eax, eax	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400052e	     0xf85e6feffff	                           jne 0x400041a	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000534	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000539	      0x4c3b4c2420	              cmp r9, qword [rsp + 0x20]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400053e	     0xf85d6feffff	                           jne 0x400041a	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000544	         0xf1f4000	                         nop dword [rax]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000548	      0x488d442428	                   lea rax, [rsp + 0x28]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x400054d	          0x4531f6	                          xor r14d, r14d	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x4000550	    0x41bd08000000	                             mov r13d, 8	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x4000556	      0x4889442410	             mov qword [rsp + 0x10], rax	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x400055b	       0xf1f440000	                   nop dword [rax + rax]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000560	          0x488b3b	                    mov rdi, qword [rbx]	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000563	            0x31f6	                            xor esi, esi	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000565	      0xba01000000	                              mov edx, 1	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400056a	      0xe800000000	                          call 0x400056f	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400056f	          0x4885c0	                           test rax, rax	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000572	            0x786c	                            js 0x40005e0	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000574	      0xbaffffffff	                     mov edx, 0xffffffff	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000579	          0x4889c1	                            mov rcx, rax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400057c	          0x4489ff	                           mov edi, r15d	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400057f	            0x89d6	                            mov esi, edx	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000581	      0xe800000000	                          call 0x4000586	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000586	            0x85c0	                           test eax, eax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000588	            0x7e56	                           jle 0x40005e0	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400058a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x400058f	          0x4c89ea	                            mov rdx, r13	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000592	          0x4c89e6	                            mov rsi, r12	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000595	          0x4489ff	                           mov edi, r15d	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000598	      0xe800000000	                          call 0x400059d	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x400059d	          0x83f851	                           cmp eax, 0x51	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40005a0	            0x74be	                            je 0x4000560	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40005a2	            0x85c0	                           test eax, eax	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40005a4	            0x753a	                           jne 0x40005e0	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40005a6	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40005ab	          0x4939c5	                            cmp r13, rax	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40005ae	            0x7446	                            je 0x40005f6	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40005b0	          0x4885c0	                           test rax, rax	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40005b3	            0x742b	                            je 0x40005e0	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40005b5	          0x4929c5	                            sub r13, rax	        90	socks.c	FUNCTION_1	FOR_1
0x40005b8	          0x4901c4	                            add r12, rax	        91	socks.c	FUNCTION_1	FOR_1
0x40005bb	          0x4901c6	                            add r14, rax	        92	socks.c	FUNCTION_1	FOR_1
0x40005be	            0xeba0	                           jmp 0x4000560	        92	socks.c	FUNCTION_1	FOR_1
0x40005c0	        0x4b8d3c0c	                     lea rdi, [r12 + r9]	       110	string3.h	FUNCTION_10	CALL_3
0x40005c4	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_10	CALL_3
0x40005c7	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_10	CALL_3
0x40005ca	      0xe800000000	                          call 0x40005cf	       110	string3.h	FUNCTION_10	CALL_3
0x40005cf	          0x4d89f1	                             mov r9, r14	       110	string3.h	FUNCTION_10	CALL_3
0x40005d2	      0xe911feffff	                           jmp 0x40003e8	       110	string3.h	FUNCTION_10	CALL_3
0x40005d7	    0x660f1f840000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_10	CALL_3
0x40005e0	    0x488d35000000	                   lea rsi, [0x040005e7]	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40005e7	          0x4889ef	                            mov rdi, rbp	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40005ea	            0x31c0	                            xor eax, eax	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40005ec	      0xe800000000	                          call 0x40005f1	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x40005f1	      0xe935feffff	                           jmp 0x400042b	       269	socks.c	FUNCTION_2	IF_17
0x40005f6	          0x4d01f5	                            add r13, r14	       267	socks.c	FUNCTION_2	IF_17
0x40005f9	        0x4983fd08	                              cmp r13, 8	       267	socks.c	FUNCTION_2	IF_17
0x40005fd	            0x75e1	                           jne 0x40005e0	       267	socks.c	FUNCTION_2	IF_17
0x40005ff	      0x807c247000	                cmp byte [rsp + 0x70], 0	       292	socks.c	FUNCTION_2	IF_18
0x4000604	            0x7562	                           jne 0x4000668	       292	socks.c	FUNCTION_2	IF_18
0x4000606	       0xfb6442471	           movzx eax, byte [rsp + 0x71] 	       299	socks.c	FUNCTION_2	SWITCH_1
0x400060b	            0x3c5b	                            cmp al, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x400060d	     0xf84b4000000	                            je 0x40006c7	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000613	            0x766e	                           jbe 0x4000683	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000615	            0x3c5c	                            cmp al, 0x5c	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000617	     0xf8431010000	                            je 0x400074e	       299	socks.c	FUNCTION_2	SWITCH_1
0x400061d	            0x3c5d	                            cmp al, 0x5d	       299	socks.c	FUNCTION_2	SWITCH_1
0x400061f	     0xf85e7000000	                           jne 0x400070c	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000625	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400062a	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400062f	    0x488d35000000	                   lea rsi, [0x04000636]	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000636	            0x6a5d	                               push 0x5d	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000638	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400063d	          0x4889ef	                            mov rdi, rbp	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000640	        0x66c1c008	                               rol ax, 8	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000644	           0xfb7c0	                           movzx eax, ax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000647	              0x50	                                push rax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000648	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000651	            0x31c0	                            xor eax, eax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000653	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x400065c	      0xe800000000	                          call 0x4000661	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000661	              0x59	                                 pop rcx	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000662	              0x5e	                                 pop rsi	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000663	      0xe9c3fdffff	                           jmp 0x400042b	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000668	    0x488d35000000	                   lea rsi, [0x0400066f]	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x400066f	          0x4889ef	                            mov rdi, rbp	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000672	            0x31c0	                            xor eax, eax	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000674	      0xe800000000	                          call 0x4000679	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000679	      0xe9adfdffff	                           jmp 0x400042b	       295	socks.c	FUNCTION_2	IF_18
0x400067e	      0xe800000000	                          call 0x4000683	       347	socks.c	FUNCTION_2
0x4000683	            0x3c5a	                            cmp al, 0x5a	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000685	     0xf8581000000	                           jne 0x400070c	       299	socks.c	FUNCTION_2	SWITCH_1
0x400068b	      0x837c240c06	                cmp dword [rsp + 0xc], 6	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000690	    0x488d05000000	                   lea rax, [0x04000697]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000697	    0x488d15000000	                   lea rdx, [0x0400069e]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400069e	    0x488d35000000	                   lea rsi, [0x040006a5]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x40006a5	          0x4889ef	                            mov rdi, rbp	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x40006a8	        0x480f45d0	                         cmovne rdx, rax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x40006ac	            0x31c0	                            xor eax, eax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x40006ae	      0xe800000000	                          call 0x40006b3	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x40006b3	      0xbe01000000	                              mov esi, 1	       344	socks.c	FUNCTION_2	CALL_32
0x40006b8	          0x4489ff	                           mov edi, r15d	       344	socks.c	FUNCTION_2	CALL_32
0x40006bb	      0xe800000000	                          call 0x40006c0	       344	socks.c	FUNCTION_2	CALL_32
0x40006c0	            0x31c0	                            xor eax, eax	       346	socks.c	FUNCTION_2
0x40006c2	      0xe929fcffff	                           jmp 0x40002f0	       346	socks.c	FUNCTION_2
0x40006c7	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006cc	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006d1	    0x488d35000000	                   lea rsi, [0x040006d8]	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006d8	            0x6a5b	                               push 0x5b	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006da	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006df	          0x4889ef	                            mov rdi, rbp	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006e2	        0x66c1c008	                               rol ax, 8	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006e6	           0xfb7c0	                           movzx eax, ax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006e9	              0x50	                                push rax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006ea	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006f3	            0x31c0	                            xor eax, eax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006f5	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006fe	      0xe800000000	                          call 0x4000703	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000703	            0x4159	                                  pop r9	       311	socks.c	FUNCTION_2	SWITCH_1
0x4000705	            0x415a	                                 pop r10	       311	socks.c	FUNCTION_2	SWITCH_1
0x4000707	      0xe91ffdffff	                           jmp 0x400042b	       311	socks.c	FUNCTION_2	SWITCH_1
0x400070c	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000711	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000716	    0x488d35000000	                   lea rsi, [0x0400071d]	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400071d	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400071e	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000723	          0x4889ef	                            mov rdi, rbp	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000726	        0x66c1c008	                               rol ax, 8	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400072a	           0xfb7c0	                           movzx eax, ax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400072d	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x400072e	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000737	            0x31c0	                            xor eax, eax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000739	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000742	      0xe800000000	                          call 0x4000747	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000747	              0x58	                                 pop rax	       340	socks.c	FUNCTION_2	SWITCH_1
0x4000748	              0x5a	                                 pop rdx	       340	socks.c	FUNCTION_2	SWITCH_1
0x4000749	      0xe9ddfcffff	                           jmp 0x400042b	       340	socks.c	FUNCTION_2	SWITCH_1
0x400074e	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000753	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000758	    0x488d35000000	                   lea rsi, [0x0400075f]	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400075f	            0x6a5c	                               push 0x5c	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000761	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000766	          0x4889ef	                            mov rdi, rbp	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000769	        0x66c1c008	                               rol ax, 8	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400076d	           0xfb7c0	                           movzx eax, ax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000770	              0x50	                                push rax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000771	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400077a	            0x31c0	                            xor eax, eax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400077c	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000785	      0xe800000000	                          call 0x400078a	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400078a	              0x5f	                                 pop rdi	       321	socks.c	FUNCTION_2	SWITCH_1
0x400078b	            0x4158	                                  pop r8	       321	socks.c	FUNCTION_2	SWITCH_1
0x400078d	      0xe999fcffff	                           jmp 0x400042b	       321	socks.c	FUNCTION_2	SWITCH_1
