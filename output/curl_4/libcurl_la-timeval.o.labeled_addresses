Curl_timediff_us	IF,2:SWITCH,0:CALL,0:FOR,0:WHILE,0:DO,0:ELSE,1:functions,0	19
0x4000130	          0x4829d7	                            sub rdi, rdx	       180	timeval.c	FUNCTION_7
0x4000133	    0x48baf55ad07b	               movabs rdx, 0x8637bd05af5	       181	timeval.c	FUNCTION_7	IF_1
0x400013d	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       182	timeval.c	FUNCTION_7	IF_1
0x4000147	          0x4839d7	                            cmp rdi, rdx	       181	timeval.c	FUNCTION_7	IF_1
0x400014a	            0x7e04	                           jle 0x4000150	       181	timeval.c	FUNCTION_7	IF_1
0x400014c	            0xf3c3	                                     ret	       186	timeval.c	FUNCTION_7
0x400014e	            0x6690	                                     nop	       186	timeval.c	FUNCTION_7
0x4000150	    0x48b80ba52f84	          movabs rax, 0xfffff79c842fa50b	       183	timeval.c	FUNCTION_7	ELSE_1	IF_2
0x400015a	          0x4839c7	                            cmp rdi, rax	       183	timeval.c	FUNCTION_7	ELSE_1	IF_2
0x400015d	            0x7c19	                            jl 0x4000178	       183	timeval.c	FUNCTION_7	ELSE_1	IF_2
0x400015f	    0x4869ff40420f	                  imul rdi, rdi, 0xf4240	       185	timeval.c	FUNCTION_7
0x4000166	          0x4863c6	                         movsxd rax, esi	       185	timeval.c	FUNCTION_7
0x4000169	          0x4863c9	                         movsxd rcx, ecx	       185	timeval.c	FUNCTION_7
0x400016c	          0x4801f8	                            add rax, rdi	       185	timeval.c	FUNCTION_7
0x400016f	          0x4829c8	                            sub rax, rcx	       185	timeval.c	FUNCTION_7
0x4000172	              0xc3	                                     ret	       185	timeval.c	FUNCTION_7
0x4000173	       0xf1f440000	                   nop dword [rax + rax]	       185	timeval.c	FUNCTION_7
0x4000178	    0x48b801000000	          movabs rax, 0x8000000000000001	       184	timeval.c	FUNCTION_7	ELSE_1	IF_2
0x4000182	              0xc3	                                     ret	       186	timeval.c	FUNCTION_7
Curl_timediff	IF,2:SWITCH,0:CALL,0:FOR,0:WHILE,0:DO,0:ELSE,1:functions,0	23
0x40000d0	          0x4829d7	                            sub rdi, rdx	       166	timeval.c	FUNCTION_6
0x40000d3	    0x48baf653e3a5	            movabs rdx, 0x20c49ba5e353f6	       167	timeval.c	FUNCTION_6	IF_1
0x40000dd	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       168	timeval.c	FUNCTION_6	IF_1
0x40000e7	          0x4839d7	                            cmp rdi, rdx	       167	timeval.c	FUNCTION_6	IF_1
0x40000ea	            0x7e04	                           jle 0x40000f0	       167	timeval.c	FUNCTION_6	IF_1
0x40000ec	            0xf3c3	                                     ret	       172	timeval.c	FUNCTION_6
0x40000ee	            0x6690	                                     nop	       172	timeval.c	FUNCTION_6
0x40000f0	    0x48b80aac1c5a	          movabs rax, 0xffdf3b645a1cac0a	       169	timeval.c	FUNCTION_6	ELSE_1	IF_2
0x40000fa	          0x4839c7	                            cmp rdi, rax	       169	timeval.c	FUNCTION_6	ELSE_1	IF_2
0x40000fd	            0x7c21	                            jl 0x4000120	       169	timeval.c	FUNCTION_6	ELSE_1	IF_2
0x40000ff	            0x29ce	                            sub esi, ecx	       171	timeval.c	FUNCTION_6
0x4000101	      0xbad34d6210	                     mov edx, 0x10624dd3	       171	timeval.c	FUNCTION_6
0x4000106	            0x89f0	                            mov eax, esi	       171	timeval.c	FUNCTION_6
0x4000108	          0xc1fe1f	                           sar esi, 0x1f	       171	timeval.c	FUNCTION_6
0x400010b	            0xf7ea	                                imul edx	       171	timeval.c	FUNCTION_6
0x400010d	    0x4869c7e80300	                    imul rax, rdi, 0x3e8	       171	timeval.c	FUNCTION_6
0x4000114	          0xc1fa06	                              sar edx, 6	       171	timeval.c	FUNCTION_6
0x4000117	            0x29f2	                            sub edx, esi	       171	timeval.c	FUNCTION_6
0x4000119	          0x4863d2	                         movsxd rdx, edx	       171	timeval.c	FUNCTION_6
0x400011c	          0x4801d0	                            add rax, rdx	       171	timeval.c	FUNCTION_6
0x400011f	              0xc3	                                     ret	       171	timeval.c	FUNCTION_6
0x4000120	    0x48b801000000	          movabs rax, 0x8000000000000001	       170	timeval.c	FUNCTION_6	ELSE_1	IF_2
0x400012a	              0xc3	                                     ret	       172	timeval.c	FUNCTION_6
Curl_now	IF,0:SWITCH,0:CALL,1:FOR,0:WHILE,0:DO,0:ELSE,0:functions,0	31
0x4000040	        0x4883ec38	                           sub rsp, 0x38	        52	timeval.c	FUNCTION_2
0x4000044	      0xbf01000000	                              mov edi, 1	        63	timeval.c	FUNCTION_2	IF_1	CALL_1
0x4000049	      0x488d742410	                   lea rsi, [rsp + 0x10]	        63	timeval.c	FUNCTION_2	IF_1	CALL_1
0x400004e	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	timeval.c	FUNCTION_2
0x4000057	      0x4889442428	             mov qword [rsp + 0x28], rax	        52	timeval.c	FUNCTION_2
0x400005c	            0x31c0	                            xor eax, eax	        52	timeval.c	FUNCTION_2
0x400005e	      0xe800000000	                          call 0x4000063	        63	timeval.c	FUNCTION_2	IF_1	CALL_1
0x4000063	            0x85c0	                           test eax, eax	        63	timeval.c	FUNCTION_2	IF_1	CALL_1
0x4000065	            0x7541	                           jne 0x40000a8	        63	timeval.c	FUNCTION_2	IF_1	CALL_1
0x4000067	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        65	timeval.c	FUNCTION_2	IF_1
0x400006c	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	        65	timeval.c	FUNCTION_2	IF_1
0x4000076	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        64	timeval.c	FUNCTION_2	IF_1
0x400007b	          0x4889c8	                            mov rax, rcx	        65	timeval.c	FUNCTION_2	IF_1
0x400007e	        0x48c1f93f	                           sar rcx, 0x3f	        65	timeval.c	FUNCTION_2	IF_1
0x4000082	          0x48f7ea	                                imul rdx	        65	timeval.c	FUNCTION_2	IF_1
0x4000085	        0x48c1fa07	                              sar rdx, 7	        65	timeval.c	FUNCTION_2	IF_1
0x4000089	            0x29ca	                            sub edx, ecx	        65	timeval.c	FUNCTION_2	IF_1
0x400008b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        85	timeval.c	FUNCTION_2
0x4000090	    0x6448333c2528	                xor rdi, qword fs:[0x28]	        85	timeval.c	FUNCTION_2
0x4000099	          0x4889f0	                            mov rax, rsi	        85	timeval.c	FUNCTION_2
0x400009c	            0x751e	                           jne 0x40000bc	        85	timeval.c	FUNCTION_2
0x400009e	        0x4883c438	                           add rsp, 0x38	        85	timeval.c	FUNCTION_2
0x40000a2	              0xc3	                                     ret	        85	timeval.c	FUNCTION_2
0x40000a3	       0xf1f440000	                   nop dword [rax + rax]	        85	timeval.c	FUNCTION_2
0x40000a8	            0x31f6	                            xor esi, esi	        74	timeval.c	FUNCTION_2	ELSE_1	CALL_2
0x40000aa	          0x4889e7	                            mov rdi, rsp	        74	timeval.c	FUNCTION_2	ELSE_1	CALL_2
0x40000ad	      0xe800000000	                          call 0x40000b2	        74	timeval.c	FUNCTION_2	ELSE_1	CALL_2
0x40000b2	        0x488b3424	                    mov rsi, qword [rsp]	        75	timeval.c	FUNCTION_2	ELSE_1
0x40000b6	        0x8b542408	                mov edx, dword [rsp + 8]	        76	timeval.c	FUNCTION_2	ELSE_1
0x40000ba	            0xebcf	                           jmp 0x400008b	        76	timeval.c	FUNCTION_2	ELSE_1
0x40000bc	      0xe800000000	                          call 0x40000c1	        85	timeval.c	FUNCTION_2
