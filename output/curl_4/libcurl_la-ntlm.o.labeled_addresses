Curl_auth_is_ntlm_supported	ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:FOR,0:IF,0:SWITCH,0	2
0x4000040	      0xb801000000	                              mov eax, 1	       233	ntlm.c	FUNCTION_4
0x4000045	              0xc3	                                     ret	       233	ntlm.c	FUNCTION_4
Curl_auth_create_ntlm_type1_message	ELSE,0:WHILE,0:DO,0:functions,0:CALL,6:FOR,0:IF,0:SWITCH,0	68
0x4000260	            0x4155	                                push r13	       374	ntlm.c	FUNCTION_7
0x4000262	            0x4154	                                push r12	       374	ntlm.c	FUNCTION_7
0x4000264	              0x55	                                push rbp	       374	ntlm.c	FUNCTION_7
0x4000265	              0x53	                                push rbx	       374	ntlm.c	FUNCTION_7
0x4000266	          0x4889fd	                            mov rbp, rdi	       374	ntlm.c	FUNCTION_7
0x4000269	          0x4c89cb	                             mov rbx, r9	       374	ntlm.c	FUNCTION_7
0x400026c	    0x4881ec180400	                          sub rsp, 0x418	       374	ntlm.c	FUNCTION_7
0x4000273	        0x498b7910	              mov rdi, qword [r9 + 0x10]	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000277	    0x64488b042528	                mov rax, qword fs:[0x28]	       374	ntlm.c	FUNCTION_7
0x4000280	    0x488984240804	            mov qword [rsp + 0x408], rax	       374	ntlm.c	FUNCTION_7
0x4000288	            0x31c0	                            xor eax, eax	       374	ntlm.c	FUNCTION_7
0x400028a	    0x488b05000000	            mov rax, qword [0x04000291] 	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000291	    0x4c8ba4244004	           mov r12, qword [rsp + 0x440] 	       374	ntlm.c	FUNCTION_7
0x4000299	    0x4c8bac244804	           mov r13, qword [rsp + 0x448] 	       374	ntlm.c	FUNCTION_7
0x40002a1	            0xff10	                        call qword [rax]	       859	ntlm.c	FUNCTION_9	CALL_1
0x40002a3	    0x488d05000000	                   lea rax, [0x040002aa]	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002aa	    0x48c743100000	               mov qword [rbx + 0x10], 0	       859	ntlm.c	FUNCTION_9	CALL_1
0x40002b2	    0xc74318000000	               mov dword [rbx + 0x18], 0	       862	ntlm.c	FUNCTION_9
0x40002b9	          0x4889e3	                            mov rbx, rsp	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002bc	        0x4883ec08	                              sub rsp, 8	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002c0	    0x488d15000000	                   lea rdx, [0x040002c7]	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002c7	              0x50	                                push rax	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002c8	              0x50	                                push rax	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002c9	          0x4531c9	                            xor r9d, r9d	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002cc	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002ce	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002d0	          0x4531c0	                            xor r8d, r8d	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002d3	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002d5	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002d7	            0x31c9	                            xor ecx, ecx	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002d9	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002db	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002dd	      0xbe00040000	                          mov esi, 0x400	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002e2	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002e4	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002e6	          0x4889df	                            mov rdi, rbx	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002e9	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002eb	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002ed	            0x31c0	                            xor eax, eax	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002ef	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002f1	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002f3	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002f5	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002f7	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002f9	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002fb	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002fd	            0x6a08	                                  push 8	       412	ntlm.c	FUNCTION_7	CALL_2
0x40002ff	      0x6882000000	                               push 0x82	       412	ntlm.c	FUNCTION_7	CALL_2
0x4000304	            0x6a06	                                  push 6	       412	ntlm.c	FUNCTION_7	CALL_2
0x4000306	            0x6a00	                                  push 0	       412	ntlm.c	FUNCTION_7	CALL_2
0x4000308	      0xe800000000	                          call 0x400030d	       412	ntlm.c	FUNCTION_7	CALL_2
0x400030d	    0x4881c4c00000	                           add rsp, 0xc0	       471	ntlm.c	FUNCTION_7	CALL_6
0x4000314	      0xba20000000	                           mov edx, 0x20	       471	ntlm.c	FUNCTION_7	CALL_6
0x4000319	          0x4d89e8	                             mov r8, r13	       471	ntlm.c	FUNCTION_7	CALL_6
0x400031c	          0x4c89e1	                            mov rcx, r12	       471	ntlm.c	FUNCTION_7	CALL_6
0x400031f	          0x4889de	                            mov rsi, rbx	       471	ntlm.c	FUNCTION_7	CALL_6
0x4000322	          0x4889ef	                            mov rdi, rbp	       471	ntlm.c	FUNCTION_7	CALL_6
0x4000325	      0xe800000000	                          call 0x400032a	       471	ntlm.c	FUNCTION_7	CALL_6
0x400032a	    0x488b94240804	           mov rdx, qword [rsp + 0x408] 	       472	ntlm.c	FUNCTION_7
0x4000332	    0x644833142528	                xor rdx, qword fs:[0x28]	       472	ntlm.c	FUNCTION_7
0x400033b	            0x750e	                           jne 0x400034b	       472	ntlm.c	FUNCTION_7
0x400033d	    0x4881c4180400	                          add rsp, 0x418	       472	ntlm.c	FUNCTION_7
0x4000344	              0x5b	                                 pop rbx	       472	ntlm.c	FUNCTION_7
0x4000345	              0x5d	                                 pop rbp	       472	ntlm.c	FUNCTION_7
0x4000346	            0x415c	                                 pop r12	       472	ntlm.c	FUNCTION_7
0x4000348	            0x415d	                                 pop r13	       472	ntlm.c	FUNCTION_7
0x400034a	              0xc3	                                     ret	       472	ntlm.c	FUNCTION_7
0x400034b	      0xe800000000	call sym.Curl_auth_create_ntlm_type3_message	       472	ntlm.c	FUNCTION_7
Curl_auth_decode_ntlm_type2_message	ELSE,0:WHILE,0:DO,0:functions,0:CALL,20:FOR,0:IF,7:SWITCH,0	134
0x4000050	            0x4157	                                push r15	       254	ntlm.c	FUNCTION_5
0x4000052	            0x4156	                                push r14	       254	ntlm.c	FUNCTION_5
0x4000054	            0x4155	                                push r13	       254	ntlm.c	FUNCTION_5
0x4000056	            0x4154	                                push r12	       254	ntlm.c	FUNCTION_5
0x4000058	              0x55	                                push rbp	       254	ntlm.c	FUNCTION_5
0x4000059	              0x53	                                push rbx	       254	ntlm.c	FUNCTION_5
0x400005a	          0x4889fd	                            mov rbp, rdi	       254	ntlm.c	FUNCTION_5
0x400005d	        0x4883ec38	                           sub rsp, 0x38	       254	ntlm.c	FUNCTION_5
0x4000061	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	ntlm.c	FUNCTION_5
0x400006a	      0x4889442428	             mov qword [rsp + 0x28], rax	       254	ntlm.c	FUNCTION_5
0x400006f	            0x31c0	                            xor eax, eax	       254	ntlm.c	FUNCTION_5
0x4000071	           0xfb606	                   movzx eax, byte [rsi]	       287	ntlm.c	FUNCTION_5	IF_2	CALL_2
0x4000074	    0x48c744241800	               mov qword [rsp + 0x18], 0	       274	ntlm.c	FUNCTION_5
0x400007d	    0x48c744242000	               mov qword [rsp + 0x20], 0	       275	ntlm.c	FUNCTION_5
0x4000086	            0x84c0	                             test al, al	       287	ntlm.c	FUNCTION_5	IF_2	CALL_2
0x4000088	            0x7404	                            je 0x400008e	       287	ntlm.c	FUNCTION_5	IF_2	CALL_2
0x400008a	            0x3c3d	                            cmp al, 0x3d	       287	ntlm.c	FUNCTION_5	IF_2	CALL_2
0x400008c	            0x7542	                           jne 0x40000d0	       287	ntlm.c	FUNCTION_5	IF_2	CALL_2
0x400008e	    0x488d35000000	                   lea rsi, [0x04000095]	       295	ntlm.c	FUNCTION_5	IF_4	CALL_4
0x4000095	          0x4889ef	                            mov rdi, rbp	       295	ntlm.c	FUNCTION_5	IF_4	CALL_4
0x4000098	            0x31c0	                            xor eax, eax	       295	ntlm.c	FUNCTION_5	IF_4	CALL_4
0x400009a	      0xbb3d000000	                           mov ebx, 0x3d	       296	ntlm.c	FUNCTION_5	IF_4
0x400009f	      0xe800000000	                          call 0x40000a4	       295	ntlm.c	FUNCTION_5	IF_4	CALL_4
0x40000a4	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       334	ntlm.c	FUNCTION_5
0x40000a9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       334	ntlm.c	FUNCTION_5
0x40000b2	            0x89d8	                            mov eax, ebx	       334	ntlm.c	FUNCTION_5
0x40000b4	     0xf8591010000	                           jne 0x400024b	       334	ntlm.c	FUNCTION_5
0x40000ba	        0x4883c438	                           add rsp, 0x38	       334	ntlm.c	FUNCTION_5
0x40000be	              0x5b	                                 pop rbx	       334	ntlm.c	FUNCTION_5
0x40000bf	              0x5d	                                 pop rbp	       334	ntlm.c	FUNCTION_5
0x40000c0	            0x415c	                                 pop r12	       334	ntlm.c	FUNCTION_5
0x40000c2	            0x415d	                                 pop r13	       334	ntlm.c	FUNCTION_5
0x40000c4	            0x415e	                                 pop r14	       334	ntlm.c	FUNCTION_5
0x40000c6	            0x415f	                                 pop r15	       334	ntlm.c	FUNCTION_5
0x40000c8	              0xc3	                                     ret	       334	ntlm.c	FUNCTION_5
0x40000c9	     0xf1f80000000	                         nop dword [rax]	       334	ntlm.c	FUNCTION_5
0x40000d0	          0x4889f7	                            mov rdi, rsi	       334	ntlm.c	FUNCTION_5
0x40000d3	          0x4989d4	                            mov r12, rdx	       334	ntlm.c	FUNCTION_5
0x40000d6	      0x488d742418	                   lea rsi, [rsp + 0x18]	       288	ntlm.c	FUNCTION_5	IF_2	CALL_3
0x40000db	      0x488d542420	                   lea rdx, [rsp + 0x20]	       288	ntlm.c	FUNCTION_5	IF_2	CALL_3
0x40000e0	      0xe800000000	                          call 0x40000e5	       288	ntlm.c	FUNCTION_5	IF_2	CALL_3
0x40000e5	            0x85c0	                           test eax, eax	       289	ntlm.c	FUNCTION_5	IF_2	IF_3
0x40000e7	            0x89c3	                            mov ebx, eax	       289	ntlm.c	FUNCTION_5	IF_2	IF_3
0x40000e9	            0x75b9	                           jne 0x40000a4	       289	ntlm.c	FUNCTION_5	IF_2	IF_3
0x40000eb	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       294	ntlm.c	FUNCTION_5	IF_4
0x40000f0	          0x4885db	                           test rbx, rbx	       294	ntlm.c	FUNCTION_5	IF_4
0x40000f3	            0x7499	                            je 0x400008e	       294	ntlm.c	FUNCTION_5	IF_4
0x40000f5	    0x48837c24201f	           cmp qword [rsp + 0x20], 0x1f 	       301	ntlm.c	FUNCTION_5	IF_5
0x40000fb	    0x41c744240400	                  mov dword [r12 + 4], 0	       299	ntlm.c	FUNCTION_5
0x4000104	            0x7618	                           jbe 0x400011e	       301	ntlm.c	FUNCTION_5	IF_5
0x4000106	    0x488d35000000	                   lea rsi, [0x0400010d]	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x400010d	      0xba08000000	                              mov edx, 8	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x4000112	          0x4889df	                            mov rdi, rbx	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x4000115	      0xe800000000	                          call 0x400011a	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x400011a	            0x85c0	                           test eax, eax	       301	ntlm.c	FUNCTION_5	IF_5
0x400011c	            0x742a	                            je 0x4000148	       301	ntlm.c	FUNCTION_5	IF_5
0x400011e	    0x488b05000000	            mov rax, qword [0x04000125] 	       305	ntlm.c	FUNCTION_5	IF_5	CALL_7
0x4000125	          0x4889df	                            mov rdi, rbx	       305	ntlm.c	FUNCTION_5	IF_5	CALL_7
0x4000128	      0xbb3d000000	                           mov ebx, 0x3d	       307	ntlm.c	FUNCTION_5	IF_5
0x400012d	            0xff10	                        call qword [rax]	       305	ntlm.c	FUNCTION_5	IF_5	CALL_7
0x400012f	    0x488d35000000	                   lea rsi, [0x04000136]	       306	ntlm.c	FUNCTION_5	IF_5	CALL_8
0x4000136	          0x4889ef	                            mov rdi, rbp	       306	ntlm.c	FUNCTION_5	IF_5	CALL_8
0x4000139	            0x31c0	                            xor eax, eax	       306	ntlm.c	FUNCTION_5	IF_5	CALL_8
0x400013b	      0xe800000000	                          call 0x4000140	       306	ntlm.c	FUNCTION_5	IF_5	CALL_8
0x4000140	      0xe95fffffff	                           jmp 0x40000a4	       307	ntlm.c	FUNCTION_5	IF_5
0x4000145	           0xf1f00	                         nop dword [rax]	       307	ntlm.c	FUNCTION_5	IF_5
0x4000148	        0x488d7b08	                      lea rdi, [rbx + 8]	       303	ntlm.c	FUNCTION_5	IF_5	CALL_6
0x400014c	    0x488d35000000	                   lea rsi, [0x04000153]	       303	ntlm.c	FUNCTION_5	IF_5	CALL_6
0x4000153	      0xba04000000	                              mov edx, 4	       303	ntlm.c	FUNCTION_5	IF_5	CALL_6
0x4000158	      0xe800000000	                          call 0x400015d	       303	ntlm.c	FUNCTION_5	IF_5	CALL_6
0x400015d	            0x85c0	                           test eax, eax	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x400015f	            0x75bd	                           jne 0x400011e	       302	ntlm.c	FUNCTION_5	IF_5	CALL_5
0x4000161	        0x488d7b14	                   lea rdi, [rbx + 0x14]	       310	ntlm.c	FUNCTION_5	CALL_9
0x4000165	      0xe800000000	                          call 0x400016a	       310	ntlm.c	FUNCTION_5	CALL_9
0x400016a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       311	ntlm.c	FUNCTION_5	CALL_10
0x400016f	      0x4189442404	                mov dword [r12 + 4], eax	       310	ntlm.c	FUNCTION_5	CALL_9
0x4000174	      0xa900008000	                      test eax, 0x800000	       313	ntlm.c	FUNCTION_5	IF_6
0x4000179	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       313	ntlm.c	FUNCTION_5	IF_6
0x400017d	      0x4989542408	                mov qword [r12 + 8], rdx	        53	string3.h	FUNCTION_10	CALL_3
0x4000182	            0x7413	                            je 0x4000197	       313	ntlm.c	FUNCTION_5	IF_6
0x4000184	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       314	ntlm.c	FUNCTION_5	IF_6	CALL_11
0x4000189	          0x4531ed	                          xor r13d, r13d	       181	ntlm.c	FUNCTION_3	IF_1
0x400018c	        0x4983fe2f	                           cmp r14, 0x2f	       181	ntlm.c	FUNCTION_3	IF_1
0x4000190	            0x7718	                            ja 0x40001aa	       181	ntlm.c	FUNCTION_3	IF_1
0x4000192	      0x45896c2418	            mov dword [r12 + 0x18], r13d	       200	ntlm.c	FUNCTION_3
0x4000197	    0x488b05000000	            mov rax, qword [0x0400019e] 	       331	ntlm.c	FUNCTION_5	CALL_20
0x400019e	          0x4889df	                            mov rdi, rbx	       331	ntlm.c	FUNCTION_5	CALL_20
0x40001a1	            0x31db	                            xor ebx, ebx	       333	ntlm.c	FUNCTION_5
0x40001a3	            0xff10	                        call qword [rax]	       331	ntlm.c	FUNCTION_5	CALL_20
0x40001a5	      0xe9fafeffff	                           jmp 0x40000a4	       333	ntlm.c	FUNCTION_5
0x40001aa	        0x488d7b28	                   lea rdi, [rbx + 0x28]	       182	ntlm.c	FUNCTION_3	IF_1	CALL_1
0x40001ae	      0xe800000000	                          call 0x40001b3	       182	ntlm.c	FUNCTION_3	IF_1	CALL_1
0x40001b3	        0x488d7b2c	                   lea rdi, [rbx + 0x2c]	       183	ntlm.c	FUNCTION_3	IF_1	CALL_2
0x40001b7	        0x440fb7f8	                          movzx r15d, ax	       182	ntlm.c	FUNCTION_3	IF_1	CALL_1
0x40001bb	      0xe800000000	                          call 0x40001c0	       183	ntlm.c	FUNCTION_3	IF_1	CALL_2
0x40001c0	        0x664585ff	                         test r15w, r15w	       184	ntlm.c	FUNCTION_3	IF_1	IF_2
0x40001c4	            0x89c2	                            mov edx, eax	       183	ntlm.c	FUNCTION_3	IF_1	CALL_2
0x40001c6	            0x7479	                            je 0x4000241	       184	ntlm.c	FUNCTION_3	IF_1	IF_2
0x40001c8	        0x450fb7ef	                        movzx r13d, r15w	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001cc	        0x428d0428	                    lea eax, [rax + r13]	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001d0	          0x4939c6	                            cmp r14, rax	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001d3	            0x7205	                            jb 0x40001da	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001d5	          0x83fa2f	                           cmp edx, 0x2f	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001d8	            0x773a	                            ja 0x4000214	       185	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001da	    0x488d35000000	                   lea rsi, [0x040001e1]	       187	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x40001e1	          0x4889ef	                            mov rdi, rbp	       187	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x40001e4	            0x31c0	                            xor eax, eax	       187	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x40001e6	      0xbb3d000000	                           mov ebx, 0x3d	       189	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3
0x40001eb	      0xe800000000	                          call 0x40001f0	       187	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0x40001f0	    0x488b05000000	            mov rax, qword [0x040001f7] 	       316	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_12
0x40001f7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       316	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_12
0x40001fc	            0xff10	                        call qword [rax]	       316	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_12
0x40001fe	    0x488d35000000	                   lea rsi, [0x04000205]	       317	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_13
0x4000205	          0x4889ef	                            mov rdi, rbp	       317	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_13
0x4000208	            0x31c0	                            xor eax, eax	       317	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_13
0x400020a	      0xe800000000	                          call 0x400020f	       317	ntlm.c	FUNCTION_5	IF_6	IF_7	CALL_13
0x400020f	      0xe990feffff	                           jmp 0x40000a4	       318	ntlm.c	FUNCTION_5	IF_6	IF_7
0x4000214	    0x488b05000000	            mov rax, qword [0x0400021b] 	       192	ntlm.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400021b	        0x8954240c	              mov dword [rsp + 0xc], edx	       192	ntlm.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400021f	          0x4c89ff	                            mov rdi, r15	       192	ntlm.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000222	            0xff10	                        call qword [rax]	       192	ntlm.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x4000224	          0x4885c0	                           test rax, rax	       193	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_4
0x4000227	      0x4989442410	             mov qword [r12 + 0x10], rax	       192	ntlm.c	FUNCTION_3	IF_1	IF_2	CALL_4
0x400022c	            0x7422	                            je 0x4000250	       193	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_4
0x400022e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        53	string3.h	FUNCTION_10	CALL_3
0x4000232	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_10	CALL_3
0x4000235	        0x488d3413	                    lea rsi, [rbx + rdx]	        53	string3.h	FUNCTION_10	CALL_3
0x4000239	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_10	CALL_3
0x400023c	      0xe800000000	                          call 0x4000241	        53	string3.h	FUNCTION_10	CALL_3
0x4000241	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000246	      0xe947ffffff	                           jmp 0x4000192	        53	string3.h	FUNCTION_10	CALL_3
0x400024b	      0xe800000000	                          call 0x4000250	       334	ntlm.c	FUNCTION_5
0x4000250	      0xbb1b000000	                           mov ebx, 0x1b	       194	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_4
0x4000255	            0xeb99	                           jmp 0x40001f0	       194	ntlm.c	FUNCTION_3	IF_1	IF_2	IF_4
Curl_auth_create_ntlm_type3_message	ELSE,7:WHILE,0:DO,0:functions,0:CALL,50:FOR,0:IF,23:SWITCH,0	774
0x4000350	            0x4157	                                push r15	       498	ntlm.c	FUNCTION_8
0x4000352	            0x4156	                                push r14	       498	ntlm.c	FUNCTION_8
0x4000354	            0x4155	                                push r13	       498	ntlm.c	FUNCTION_8
0x4000356	            0x4154	                                push r12	       498	ntlm.c	FUNCTION_8
0x4000358	              0x55	                                push rbp	       498	ntlm.c	FUNCTION_8
0x4000359	              0x53	                                push rbx	       498	ntlm.c	FUNCTION_8
0x400035a	          0x4889cb	                            mov rbx, rcx	       498	ntlm.c	FUNCTION_8
0x400035d	          0x4889f5	                            mov rbp, rsi	       498	ntlm.c	FUNCTION_8
0x4000360	      0xbe5c000000	                           mov esi, 0x5c	       540	ntlm.c	FUNCTION_8	CALL_1
0x4000365	    0x4881ecf80800	                          sub rsp, 0x8f8	       498	ntlm.c	FUNCTION_8
0x400036c	    0x64488b042528	                mov rax, qword fs:[0x28]	       498	ntlm.c	FUNCTION_8
0x4000375	    0x48898424e808	            mov qword [rsp + 0x8e8], rax	       498	ntlm.c	FUNCTION_8
0x400037d	            0x31c0	                            xor eax, eax	       498	ntlm.c	FUNCTION_8
0x400037f	          0x8b4104	                mov eax, dword [rcx + 4]	       529	ntlm.c	FUNCTION_8
0x4000382	        0x48893c24	                    mov qword [rsp], rdi	       498	ntlm.c	FUNCTION_8
0x4000386	    0x488dbc24e804	                  lea rdi, [rsp + 0x4e8]	       530	ntlm.c	FUNCTION_8
0x400038e	      0xb97f000000	                           mov ecx, 0x7f	       530	ntlm.c	FUNCTION_8
0x4000393	      0x4889542410	             mov qword [rsp + 0x10], rdx	       498	ntlm.c	FUNCTION_8
0x4000398	      0x4c89442428	              mov qword [rsp + 0x28], r8	       498	ntlm.c	FUNCTION_8
0x400039d	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       498	ntlm.c	FUNCTION_8
0x40003a2	    0xc74424541800	           mov dword [rsp + 0x54], 0x18 	       524	ntlm.c	FUNCTION_8
0x40003aa	        0x89442420	             mov dword [rsp + 0x20], eax	       529	ntlm.c	FUNCTION_8
0x40003ae	            0x31c0	                            xor eax, eax	       530	ntlm.c	FUNCTION_8
0x40003b0	    0x48c744245800	               mov qword [rsp + 0x58], 0	       527	ntlm.c	FUNCTION_8
0x40003b9	          0xf348ab	              rep stosq qword [rdi], rax	       530	ntlm.c	FUNCTION_8
0x40003bc	    0x48c78424e004	              mov qword [rsp + 0x4e0], 0	       530	ntlm.c	FUNCTION_8
0x40003c8	          0xc60700	                       mov byte [rdi], 0	       530	ntlm.c	FUNCTION_8
0x40003cb	          0x4889ef	                            mov rdi, rbp	       540	ntlm.c	FUNCTION_8	CALL_1
0x40003ce	      0xe800000000	                          call 0x40003d3	       540	ntlm.c	FUNCTION_8	CALL_1
0x40003d3	          0x4885c0	                           test rax, rax	       541	ntlm.c	FUNCTION_8	IF_1
0x40003d6	     0xf84140a0000	                            je 0x4000df0	       541	ntlm.c	FUNCTION_8	IF_1
0x40003dc	          0x4889c1	                            mov rcx, rax	       546	ntlm.c	FUNCTION_8	IF_2
0x40003df	        0x4c8d7001	                      lea r14, [rax + 1]	       547	ntlm.c	FUNCTION_8	IF_2
0x40003e3	          0x4829e9	                            sub rcx, rbp	       546	ntlm.c	FUNCTION_8	IF_2
0x40003e6	      0x48894c2408	                mov qword [rsp + 8], rcx	       546	ntlm.c	FUNCTION_8	IF_2
0x40003eb	    0x4c8da424e004	                  lea r12, [rsp + 0x4e0]	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x40003f3	          0x4c89f7	                            mov rdi, r14	       552	ntlm.c	FUNCTION_8	CALL_3
0x40003f6	      0xe800000000	                          call 0x40003fb	       552	ntlm.c	FUNCTION_8	CALL_3
0x40003fb	      0xbe01040000	                          mov esi, 0x401	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x4000400	          0x4c89e7	                            mov rdi, r12	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x4000403	          0x4989c5	                            mov r13, rax	       552	ntlm.c	FUNCTION_8	CALL_3
0x4000406	      0x4889442418	             mov qword [rsp + 0x18], rax	       552	ntlm.c	FUNCTION_8	CALL_3
0x400040b	          0x4d89e7	                            mov r15, r12	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400040e	      0xe800000000	                          call 0x4000413	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x4000413	            0x85c0	                           test eax, eax	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x4000415	     0xf85b5090000	                           jne 0x4000dd0	       556	ntlm.c	FUNCTION_8	IF_3	CALL_4
0x400041b	          0x418b17	                    mov edx, dword [r15]	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400041e	        0x4983c704	                              add r15, 4	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000422	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000428	            0xf7d2	                                 not edx	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400042a	            0x21d0	                            and eax, edx	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400042c	      0x2580808080	                     and eax, 0x80808080	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000431	            0x74e8	                            je 0x400041b	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000433	            0x89c2	                            mov edx, eax	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000435	          0xc1ea10	                           shr edx, 0x10	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000438	      0xa980800000	                        test eax, 0x8080	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400043d	           0xf44c2	                          cmove eax, edx	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000440	        0x498d5702	                      lea rdx, [r15 + 2]	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000444	            0x89c1	                            mov ecx, eax	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000446	        0x4c0f44fa	                          cmove r15, rdx	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400044a	              0xc1	                              add cl, al	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x400044c	        0x4983df03	                              sbb r15, 3	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000450	          0x4d29e7	                            sub r15, r12	       561	ntlm.c	FUNCTION_8	ELSE_2	CALL_6
0x4000453	          0x8b4b18	            mov ecx, dword [rbx + 0x18] 	       565	ntlm.c	FUNCTION_8	IF_4
0x4000456	            0x85c9	                           test ecx, ecx	       565	ntlm.c	FUNCTION_8	IF_4
0x4000458	     0xf859a080000	                           jne 0x4000cf8	       565	ntlm.c	FUNCTION_8	IF_4
0x400045e	        0xf6430608	                  test byte [rbx + 6], 8	       602	ntlm.c	FUNCTION_8	ELSE_3	IF_10
0x4000462	            0x744c	                            je 0x40004b0	       602	ntlm.c	FUNCTION_8	ELSE_3	IF_10
0x4000464	        0x488b3c24	                    mov rdi, qword [rsp]	       609	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_12
0x4000468	      0x488d742460	                   lea rsi, [rsp + 0x60]	       609	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_12
0x400046d	      0xba08000000	                              mov edx, 8	       609	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_12
0x4000472	      0xe800000000	                          call 0x4000477	       609	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_12
0x4000477	            0x85c0	                           test eax, eax	       610	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_11
0x4000479	     0xf84a1090000	                            je 0x4000e20	       610	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_11
0x400047f	    0x488b9c24e808	           mov rbx, qword [rsp + 0x8e8] 	       844	ntlm.c	FUNCTION_8
0x4000487	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       844	ntlm.c	FUNCTION_8
0x4000490	     0xf85910b0000	                           jne 0x4001027	       844	ntlm.c	FUNCTION_8
0x4000496	    0x4881c4f80800	                          add rsp, 0x8f8	       844	ntlm.c	FUNCTION_8
0x400049d	              0x5b	                                 pop rbx	       844	ntlm.c	FUNCTION_8
0x400049e	              0x5d	                                 pop rbp	       844	ntlm.c	FUNCTION_8
0x400049f	            0x415c	                                 pop r12	       844	ntlm.c	FUNCTION_8
0x40004a1	            0x415d	                                 pop r13	       844	ntlm.c	FUNCTION_8
0x40004a3	            0x415e	                                 pop r14	       844	ntlm.c	FUNCTION_8
0x40004a5	            0x415f	                                 pop r15	       844	ntlm.c	FUNCTION_8
0x40004a7	              0xc3	                                     ret	       844	ntlm.c	FUNCTION_8
0x40004a8	     0xf1f84000000	                   nop dword [rax + rax]	       844	ntlm.c	FUNCTION_8
0x40004b0	    0x488d8c24c000	                   lea rcx, [rsp + 0xc0]	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004b8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004bd	        0x488b3c24	                    mov rdi, qword [rsp]	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004c1	          0x4889ca	                            mov rdx, rcx	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004c4	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004c9	      0xe800000000	                          call 0x40004ce	       646	ntlm.c	FUNCTION_8	ELSE_4	CALL_20
0x40004ce	            0x85c0	                           test eax, eax	       647	ntlm.c	FUNCTION_8	ELSE_4	IF_14
0x40004d0	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       647	ntlm.c	FUNCTION_8	ELSE_4	IF_14
0x40004d5	            0x75a8	                           jne 0x400047f	       647	ntlm.c	FUNCTION_8	ELSE_4	IF_14
0x40004d7	        0x4c8d4308	                       lea r8, [rbx + 8]	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004db	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004e3	          0x4889cf	                            mov rdi, rcx	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004e6	          0x4c89c6	                             mov rsi, r8	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004e9	          0x4889c2	                            mov rdx, rax	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004ec	      0x4c89442440	              mov qword [rsp + 0x40], r8	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004f1	      0x4889442448	             mov qword [rsp + 0x48], rax	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004f6	      0xe800000000	                          call 0x40004fb	       650	ntlm.c	FUNCTION_8	ELSE_4	CALL_21
0x40004fb	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x4000503	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x4000508	        0x488b3c24	                    mov rdi, qword [rsp]	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x400050c	          0x4889c2	                            mov rdx, rax	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x400050f	      0x4889442438	             mov qword [rsp + 0x38], rax	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x4000514	      0xe800000000	                          call 0x4000519	       653	ntlm.c	FUNCTION_8	ELSE_4	CALL_22
0x4000519	            0x85c0	                           test eax, eax	       654	ntlm.c	FUNCTION_8	ELSE_4	IF_15
0x400051b	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	       654	ntlm.c	FUNCTION_8	ELSE_4	IF_15
0x4000520	     0xf8559ffffff	                           jne 0x400047f	       654	ntlm.c	FUNCTION_8	ELSE_4	IF_15
0x4000526	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       657	ntlm.c	FUNCTION_8	ELSE_4	CALL_23
0x400052b	    0x488d94248000	                   lea rdx, [rsp + 0x80]	       657	ntlm.c	FUNCTION_8	ELSE_4	CALL_23
0x4000533	          0x4c89c6	                             mov rsi, r8	       657	ntlm.c	FUNCTION_8	ELSE_4	CALL_23
0x4000536	      0xe800000000	                          call 0x400053b	       657	ntlm.c	FUNCTION_8	ELSE_4	CALL_23
0x400053b	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       664	ntlm.c	FUNCTION_8	IF_16
0x400053f	          0x83e001	                              and eax, 1	       664	ntlm.c	FUNCTION_8	IF_16
0x4000542	        0x89442440	             mov dword [rsp + 0x40], eax	       664	ntlm.c	FUNCTION_8	IF_16
0x4000546	            0x7412	                            je 0x400055a	       664	ntlm.c	FUNCTION_8	IF_16
0x4000548	      0x48d1642408	                  shl qword [rsp + 8], 1	       665	ntlm.c	FUNCTION_8	IF_16
0x400054d	      0x4b8d442d00	                    lea rax, [r13 + r13]	       666	ntlm.c	FUNCTION_8	IF_16
0x4000552	          0x4d01ff	                            add r15, r15	       667	ntlm.c	FUNCTION_8	IF_16
0x4000555	      0x4889442418	             mov qword [rsp + 0x18], rax	       666	ntlm.c	FUNCTION_8	IF_16
0x400055a	        0x8b442454	            mov eax, dword [rsp + 0x54] 	       673	ntlm.c	FUNCTION_8
0x400055e	        0x4883ec08	                              sub rsp, 8	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000562	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       677	ntlm.c	FUNCTION_8
0x4000567	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       678	ntlm.c	FUNCTION_8
0x400056c	          0x8d5058	                   lea edx, [rax + 0x58]	       673	ntlm.c	FUNCTION_8
0x400056f	          0x4c89d9	                            mov rcx, r11	       677	ntlm.c	FUNCTION_8
0x4000572	      0x4889542418	             mov qword [rsp + 0x18], rdx	       677	ntlm.c	FUNCTION_8
0x4000577	          0x4801d1	                            add rcx, rdx	       677	ntlm.c	FUNCTION_8
0x400057a	          0x4989d2	                            mov r10, rdx	       673	ntlm.c	FUNCTION_8
0x400057d	          0x8b5304	                mov edx, dword [rbx + 4]	       762	ntlm.c	FUNCTION_8
0x4000580	          0x4889ce	                            mov rsi, rcx	       677	ntlm.c	FUNCTION_8
0x4000583	          0x4c89f9	                            mov rcx, r15	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000586	      0x4889742428	             mov qword [rsp + 0x28], rsi	       678	ntlm.c	FUNCTION_8
0x400058b	        0x498d3c31	                     lea rdi, [r9 + rsi]	       678	ntlm.c	FUNCTION_8
0x400058f	           0xfb6f5	                           movzx esi, ch	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000592	          0x4c89c9	                             mov rcx, r9	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000595	          0x4989f5	                            mov r13, rsi	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000598	          0x4189d0	                            mov r8d, edx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400059b	           0xfb6f5	                           movzx esi, ch	       681	ntlm.c	FUNCTION_8	CALL_24
0x400059e	          0x4c89d9	                            mov rcx, r11	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005a1	        0x41c1e818	                           shr r8d, 0x18	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005a5	           0xfb6cd	                           movzx ecx, ch	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005a8	            0x4150	                                 push r8	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005aa	          0x4189d0	                            mov r8d, edx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ad	          0x4989cb	                            mov r11, rcx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005b0	        0x41c1e810	                           shr r8d, 0x10	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005b4	           0xfb6cc	                           movzx ecx, ah	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005b7	           0xfb6c0	                           movzx eax, al	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ba	          0x4189c9	                            mov r9d, ecx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005bd	        0x450fb6c0	                          movzx r8d, r8b	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005c1	           0xfb6ce	                           movzx ecx, dh	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005c4	           0xfb6d2	                           movzx edx, dl	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005c7	            0x4150	                                 push r8	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005c9	              0x51	                                push rcx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ca	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005cb	          0x4889fa	                            mov rdx, rdi	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ce	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005d0	           0xfb6d6	                           movzx edx, dh	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005d3	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005d5	        0x400fb6ff	                          movzx edi, dil	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005d9	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005db	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005dd	          0x4531c0	                            xor r8d, r8d	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005e0	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005e2	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005e4	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005e6	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005e8	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ea	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ec	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005ed	        0x410fb6d7	                         movzx edx, r15b	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f1	              0x57	                                push rdi	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f2	            0x4155	                                push r13	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f4	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f5	            0x4155	                                push r13	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f7	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005f8	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005fa	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x40005fc	    0x488b8c24d800	            mov rcx, qword [rsp + 0xd8] 	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000604	           0xfb6d5	                           movzx edx, ch	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000607	           0xfb6c9	                           movzx ecx, cl	       681	ntlm.c	FUNCTION_8	CALL_24
0x400060a	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400060b	              0x51	                                push rcx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400060c	            0x31c9	                            xor ecx, ecx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400060e	              0x56	                                push rsi	       681	ntlm.c	FUNCTION_8	CALL_24
0x400060f	     0xfb69424e800	           movzx edx, byte [rsp + 0xe8] 	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000617	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000618	              0x56	                                push rsi	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000619	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400061a	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400061c	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400061e	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000626	           0xfb6f6	                           movzx esi, dh	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000629	        0x410fb6d2	                         movzx edx, r10b	       681	ntlm.c	FUNCTION_8	CALL_24
0x400062d	              0x56	                                push rsi	       681	ntlm.c	FUNCTION_8	CALL_24
0x400062e	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400062f	      0xbe00040000	                          mov esi, 0x400	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000634	            0x4153	                                push r11	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000636	     0xfb694241801	          movzx edx, byte [rsp + 0x118] 	       681	ntlm.c	FUNCTION_8	CALL_24
0x400063e	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x400063f	            0x4153	                                push r11	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000641	              0x52	                                push rdx	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000642	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000644	    0x488d15000000	                   lea rdx, [0x0400064b]	       681	ntlm.c	FUNCTION_8	CALL_24
0x400064b	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400064d	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400064f	            0x6a58	                               push 0x58	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000651	            0x4151	                                 push r9	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000653	              0x50	                                push rax	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000654	            0x4151	                                 push r9	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000656	          0x4531c9	                            xor r9d, r9d	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000659	              0x50	                                push rax	       681	ntlm.c	FUNCTION_8	CALL_24
0x400065a	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400065c	            0x31c0	                            xor eax, eax	       681	ntlm.c	FUNCTION_8	CALL_24
0x400065e	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000660	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000662	            0x6a40	                               push 0x40	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000664	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000666	            0x6a18	                               push 0x18	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000668	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400066a	            0x6a18	                               push 0x18	       681	ntlm.c	FUNCTION_8	CALL_24
0x400066c	            0x6a00	                                  push 0	       681	ntlm.c	FUNCTION_8	CALL_24
0x400066e	    0x488bbc24e801	           mov rdi, qword [rsp + 0x1e8] 	       681	ntlm.c	FUNCTION_8	CALL_24
0x4000676	      0xe800000000	                          call 0x400067b	       681	ntlm.c	FUNCTION_8	CALL_24
0x400067b	          0x4c63e8	                         movsxd r13, eax	       681	ntlm.c	FUNCTION_8	CALL_24
0x400067e	    0x4881c4b00100	                          add rsp, 0x1b0	       768	ntlm.c	FUNCTION_8	IF_17
0x4000685	    0x4981fde70300	                          cmp r13, 0x3e7	       768	ntlm.c	FUNCTION_8	IF_17
0x400068c	     0xf8636090000	                           jbe 0x4000fc8	       768	ntlm.c	FUNCTION_8	IF_17
0x4000692	        0x8b542454	            mov edx, dword [rsp + 0x54] 	       779	ntlm.c	FUNCTION_8	IF_18
0x4000696	      0xb800040000	                          mov eax, 0x400	       779	ntlm.c	FUNCTION_8	IF_18
0x400069b	            0x29d0	                            sub eax, edx	       779	ntlm.c	FUNCTION_8	IF_18
0x400069d	          0x4939c5	                            cmp r13, rax	       779	ntlm.c	FUNCTION_8	IF_18
0x40006a0	     0xf82f2080000	                            jb 0x4000f98	       779	ntlm.c	FUNCTION_8	IF_18
0x40006a6	    0x488b05000000	            mov rax, qword [0x040006ad] 	       790	ntlm.c	FUNCTION_8	CALL_34
0x40006ad	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       790	ntlm.c	FUNCTION_8	CALL_34
0x40006b2	            0xff10	                        call qword [rax]	       790	ntlm.c	FUNCTION_8	CALL_34
0x40006b4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       803	ntlm.c	FUNCTION_8	IF_19
0x40006b9	          0x4c01f8	                            add rax, r15	       803	ntlm.c	FUNCTION_8	IF_19
0x40006bc	      0x4803442408	                add rax, qword [rsp + 8]	       803	ntlm.c	FUNCTION_8	IF_19
0x40006c1	          0x4c01e8	                            add rax, r13	       803	ntlm.c	FUNCTION_8	IF_19
0x40006c4	    0x483dff030000	                          cmp rax, 0x3ff	       803	ntlm.c	FUNCTION_8	IF_19
0x40006ca	     0xf8718080000	                            ja 0x4000ee8	       803	ntlm.c	FUNCTION_8	IF_19
0x40006d0	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       809	ntlm.c	FUNCTION_8	IF_20
0x40006d4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       810	ntlm.c	FUNCTION_8	CALL_40
0x40006d9	            0x85d2	                           test edx, edx	       809	ntlm.c	FUNCTION_8	IF_20
0x40006db	     0xf8427080000	                            je 0x4000f08	       809	ntlm.c	FUNCTION_8	IF_20
0x40006e1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006e6	        0x4a8d1428	                    lea rdx, [rax + r13]	       810	ntlm.c	FUNCTION_8	CALL_40
0x40006ea	          0x48d1e9	                              shr rcx, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006ed	     0xf84d0010000	                            je 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006f3	        0x488d71f0	                   lea rsi, [rcx - 0x10]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006f7	        0x488d79ff	                      lea rdi, [rcx - 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006fb	        0x48c1ee04	                              shr rsi, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x40006ff	        0x4883c601	                              add rsi, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000703	          0x4889f0	                            mov rax, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000706	        0x48c1e004	                              shl rax, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x400070a	        0x4883ff0e	                            cmp rdi, 0xe	       341	ntlm.c	FUNCTION_6	FOR_1
0x400070e	     0xf860c090000	                           jbe 0x4001020	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000714	        0x660fefc9	                         pxor xmm1, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000718	            0x31ff	                            xor edi, edi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400071a	          0x4531c0	                            xor r8d, r8d	       341	ntlm.c	FUNCTION_6	FOR_1
0x400071d	    0xf30f6f443d00	        movdqu xmm0, xmmword [rbp + rdi]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000723	        0x4983c001	                               add r8, 1	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000727	        0x660f6fd0	                       movdqa xmm2, xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400072b	        0x660f68c1	                    punpckhbw xmm0, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x400072f	        0x660f60d1	                    punpcklbw xmm2, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000733	       0xf11447a10	movups xmmword [rdx + rdi*2 + 0x10], xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000738	         0xf11147a	      movups xmmword [rdx + rdi*2], xmm2	       343	ntlm.c	FUNCTION_6	FOR_1
0x400073c	        0x4883c710	                           add rdi, 0x10	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000740	          0x4c39c6	                             cmp rsi, r8	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000743	            0x77d8	                            ja 0x400071d	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000745	          0x4839c1	                            cmp rcx, rax	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000748	     0xf8475010000	                            je 0x40008c3	       343	ntlm.c	FUNCTION_6	FOR_1
0x400074e	            0x6690	                                     nop	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000750	       0xfb6740500	             movzx esi, byte [rbp + rax]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000755	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400075a	        0x40883442	             mov byte [rdx + rax*2], sil	       342	ntlm.c	FUNCTION_6	FOR_1
0x400075e	        0x488d7001	                      lea rsi, [rax + 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000762	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000765	     0xf8658010000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x400076b	       0xfb67c0501	        movzx edi, byte [rbp + rax + 1] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000770	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000775	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000779	        0x488d7002	                      lea rsi, [rax + 2]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400077d	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000780	     0xf863d010000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000786	       0xfb67c0502	        movzx edi, byte [rbp + rax + 2] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x400078b	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000790	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000794	        0x488d7003	                      lea rsi, [rax + 3]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000798	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400079b	     0xf8622010000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007a1	       0xfb67c0503	        movzx edi, byte [rbp + rax + 3] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007a6	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40007ab	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007af	        0x488d7004	                      lea rsi, [rax + 4]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007b3	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007b6	     0xf8607010000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007bc	       0xfb67c0504	        movzx edi, byte [rbp + rax + 4] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007c1	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40007c6	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007ca	        0x488d7005	                      lea rsi, [rax + 5]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007ce	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007d1	     0xf86ec000000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007d7	       0xfb67c0505	        movzx edi, byte [rbp + rax + 5] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007dc	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40007e1	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007e5	        0x488d7006	                      lea rsi, [rax + 6]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007e9	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007ec	     0xf86d1000000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40007f2	       0xfb67c0506	        movzx edi, byte [rbp + rax + 6] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40007f7	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40007fc	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000800	        0x488d7007	                      lea rsi, [rax + 7]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000804	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000807	     0xf86b6000000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x400080d	       0xfb67c0507	        movzx edi, byte [rbp + rax + 7] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000812	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000817	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x400081b	        0x488d7008	                      lea rsi, [rax + 8]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400081f	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000822	     0xf869b000000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000828	       0xfb67c0508	        movzx edi, byte [rbp + rax + 8] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x400082d	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000832	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000836	        0x488d7009	                      lea rsi, [rax + 9]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400083a	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400083d	     0xf8680000000	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000843	       0xfb67c0509	        movzx edi, byte [rbp + rax + 9] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000848	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400084d	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000851	        0x488d700a	                    lea rsi, [rax + 0xa]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000855	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000858	            0x7669	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x400085a	       0xfb67c050a	      movzx edi, byte [rbp + rax + 0xa] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x400085f	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000864	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000868	        0x488d700b	                    lea rsi, [rax + 0xb]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400086c	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400086f	            0x7652	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000871	       0xfb67c050b	      movzx edi, byte [rbp + rax + 0xb] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000876	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400087b	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x400087f	        0x488d700c	                    lea rsi, [rax + 0xc]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000883	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000886	            0x763b	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000888	       0xfb67c050c	      movzx edi, byte [rbp + rax + 0xc] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x400088d	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000892	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000896	        0x488d700d	                    lea rsi, [rax + 0xd]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400089a	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400089d	            0x7624	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x400089f	       0xfb67c050d	      movzx edi, byte [rbp + rax + 0xd] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40008a4	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40008a9	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40008ad	        0x488d700e	                    lea rsi, [rax + 0xe]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008b1	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008b4	            0x760d	                           jbe 0x40008c3	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008b6	       0xfb644050e	      movzx eax, byte [rbp + rax + 0xe] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40008bb	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40008c0	          0x880472	              mov byte [rdx + rsi*2], al	       342	ntlm.c	FUNCTION_6	FOR_1
0x40008c3	      0x488b442408	                mov rax, qword [rsp + 8]	       814	ntlm.c	FUNCTION_8
0x40008c8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008cd	      0x498d6c0500	                    lea rbp, [r13 + rax]	       814	ntlm.c	FUNCTION_8
0x40008d2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       818	ntlm.c	FUNCTION_8	CALL_43
0x40008d7	          0x48d1e9	                              shr rcx, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008da	        0x488d1428	                    lea rdx, [rax + rbp]	       818	ntlm.c	FUNCTION_8	CALL_43
0x40008de	     0xf84dd010000	                            je 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008e4	        0x488d71f0	                   lea rsi, [rcx - 0x10]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008e8	        0x488d79ff	                      lea rdi, [rcx - 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008ec	        0x48c1ee04	                              shr rsi, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008f0	        0x4883c601	                              add rsi, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008f4	          0x4889f0	                            mov rax, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008f7	        0x48c1e004	                              shl rax, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008fb	        0x4883ff0e	                            cmp rdi, 0xe	       341	ntlm.c	FUNCTION_6	FOR_1
0x40008ff	     0xf860b070000	                           jbe 0x4001010	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000905	        0x660fefc9	                         pxor xmm1, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000909	            0x31ff	                            xor edi, edi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400090b	          0x4531c0	                            xor r8d, r8d	       341	ntlm.c	FUNCTION_6	FOR_1
0x400090e	    0xf3410f6f043e	        movdqu xmm0, xmmword [r14 + rdi]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000914	        0x4983c001	                               add r8, 1	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000918	        0x660f6fd0	                       movdqa xmm2, xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400091c	        0x660f68c1	                    punpckhbw xmm0, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000920	        0x660f60d1	                    punpcklbw xmm2, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000924	       0xf11447a10	movups xmmword [rdx + rdi*2 + 0x10], xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000929	         0xf11147a	      movups xmmword [rdx + rdi*2], xmm2	       343	ntlm.c	FUNCTION_6	FOR_1
0x400092d	        0x4883c710	                           add rdi, 0x10	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000931	          0x4c39c6	                             cmp rsi, r8	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000934	            0x77d8	                            ja 0x400090e	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000936	          0x4839c1	                            cmp rcx, rax	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000939	     0xf8482010000	                            je 0x4000ac1	       343	ntlm.c	FUNCTION_6	FOR_1
0x400093f	              0x90	                                     nop	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000940	      0x410fb63406	             movzx esi, byte [r14 + rax]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000945	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400094a	        0x40883442	             mov byte [rdx + rax*2], sil	       342	ntlm.c	FUNCTION_6	FOR_1
0x400094e	        0x488d7001	                      lea rsi, [rax + 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000952	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000955	     0xf8666010000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x400095b	    0x410fb67c0601	        movzx edi, byte [r14 + rax + 1] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000961	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000966	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x400096a	        0x488d7002	                      lea rsi, [rax + 2]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400096e	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000971	     0xf864a010000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000977	    0x410fb67c0602	        movzx edi, byte [r14 + rax + 2] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x400097d	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000982	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000986	        0x488d7003	                      lea rsi, [rax + 3]	       341	ntlm.c	FUNCTION_6	FOR_1
0x400098a	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400098d	     0xf862e010000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000993	    0x410fb67c0603	        movzx edi, byte [r14 + rax + 3] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000999	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x400099e	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009a2	        0x488d7004	                      lea rsi, [rax + 4]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009a6	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009a9	     0xf8612010000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009af	    0x410fb67c0604	        movzx edi, byte [r14 + rax + 4] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009b5	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40009ba	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009be	        0x488d7005	                      lea rsi, [rax + 5]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009c2	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009c5	     0xf86f6000000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009cb	    0x410fb67c0605	        movzx edi, byte [r14 + rax + 5] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009d1	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40009d6	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009da	        0x488d7006	                      lea rsi, [rax + 6]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009de	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009e1	     0xf86da000000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009e7	    0x410fb67c0606	        movzx edi, byte [r14 + rax + 6] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009ed	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x40009f2	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x40009f6	        0x488d7007	                      lea rsi, [rax + 7]	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009fa	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x40009fd	     0xf86be000000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a03	    0x410fb67c0607	        movzx edi, byte [r14 + rax + 7] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a09	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a0e	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a12	        0x488d7008	                      lea rsi, [rax + 8]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a16	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a19	     0xf86a2000000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a1f	    0x410fb67c0608	        movzx edi, byte [r14 + rax + 8] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a25	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a2a	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a2e	        0x488d7009	                      lea rsi, [rax + 9]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a32	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a35	     0xf8686000000	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a3b	    0x410fb67c0609	        movzx edi, byte [r14 + rax + 9] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a41	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a46	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a4a	        0x488d700a	                    lea rsi, [rax + 0xa]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a4e	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a51	            0x766e	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a53	    0x410fb67c060a	      movzx edi, byte [r14 + rax + 0xa] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a59	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a5e	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a62	        0x488d700b	                    lea rsi, [rax + 0xb]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a66	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a69	            0x7656	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a6b	    0x410fb67c060b	      movzx edi, byte [r14 + rax + 0xb] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a71	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a76	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a7a	        0x488d700c	                    lea rsi, [rax + 0xc]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a7e	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a81	            0x763e	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a83	    0x410fb67c060c	      movzx edi, byte [r14 + rax + 0xc] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a89	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000a8e	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000a92	        0x488d700d	                    lea rsi, [rax + 0xd]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a96	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a99	            0x7626	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000a9b	    0x410fb67c060d	      movzx edi, byte [r14 + rax + 0xd] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000aa1	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000aa6	        0x40883c72	             mov byte [rdx + rsi*2], dil	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000aaa	        0x488d700e	                    lea rsi, [rax + 0xe]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000aae	          0x4839f1	                            cmp rcx, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ab1	            0x760e	                           jbe 0x4000ac1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ab3	    0x410fb644060e	      movzx eax, byte [r14 + rax + 0xe] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000ab9	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000abe	          0x880472	              mov byte [rdx + rsi*2], al	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000ac1	      0x48036c2418	             add rbp, qword [rsp + 0x18]	       822	ntlm.c	FUNCTION_8
0x4000ac6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       826	ntlm.c	FUNCTION_8	CALL_46
0x4000acb	          0x4c89ff	                            mov rdi, r15	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ace	          0x48d1ef	                              shr rdi, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ad1	        0x488d1428	                    lea rdx, [rax + rbp]	       826	ntlm.c	FUNCTION_8	CALL_46
0x4000ad5	     0xf8475040000	                            je 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000adb	        0x4c8d47f0	                    lea r8, [rdi - 0x10]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000adf	        0x488d47ff	                      lea rax, [rdi - 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ae3	        0x49c1e804	                               shr r8, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ae7	        0x4983c001	                               add r8, 1	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000aeb	          0x4c89c6	                             mov rsi, r8	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000aee	        0x48c1e604	                              shl rsi, 4	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000af2	        0x4883f80e	                            cmp rax, 0xe	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000af6	     0xf860c050000	                           jbe 0x4001008	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000afc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b01	      0x48034c2408	                add rcx, qword [rsp + 8]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b06	            0x31c0	                            xor eax, eax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b08	        0x660fefc9	                         pxor xmm1, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b0c	          0x4531c9	                            xor r9d, r9d	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b0f	          0x4c01e9	                            add rcx, r13	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b12	      0x48034c2438	             add rcx, qword [rsp + 0x38]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b17	    0x66410f6f0404	        movdqa xmm0, xmmword [r12 + rax]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b1d	        0x4983c101	                               add r9, 1	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b21	        0x660f6fd0	                       movdqa xmm2, xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b25	        0x660f68c1	                    punpckhbw xmm0, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b29	        0x660f60d1	                    punpcklbw xmm2, xmm1	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b2d	       0xf11444110	movups xmmword [rcx + rax*2 + 0x10], xmm0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b32	         0xf111441	      movups xmmword [rcx + rax*2], xmm2	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b36	        0x4883c010	                           add rax, 0x10	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b3a	          0x4d39c8	                              cmp r8, r9	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b3d	            0x77d8	                            ja 0x4000b17	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b3f	          0x4839f7	                            cmp rdi, rsi	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b42	     0xf8408040000	                            je 0x4000f50	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b48	     0xfb68434e004	    movzx eax, byte [rsp + rsi + 0x4e0] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b50	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b55	          0x880472	              mov byte [rdx + rsi*2], al	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b58	        0x488d4601	                      lea rax, [rsi + 1]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b5c	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b5f	     0xf86eb030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b65	     0xfb68c34e104	    movzx ecx, byte [rsp + rsi + 0x4e1] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b6d	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b72	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b75	        0x488d4602	                      lea rax, [rsi + 2]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b79	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b7c	     0xf86ce030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b82	     0xfb68c34e204	    movzx ecx, byte [rsp + rsi + 0x4e2] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b8a	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000b8f	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000b92	        0x488d4603	                      lea rax, [rsi + 3]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b96	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b99	     0xf86b1030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000b9f	     0xfb68c34e304	    movzx ecx, byte [rsp + rsi + 0x4e3] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000ba7	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000bac	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000baf	        0x488d4604	                      lea rax, [rsi + 4]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bb3	          0x4839f8	                            cmp rax, rdi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bb6	     0xf8394030000	                           jae 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bbc	     0xfb68c34e404	    movzx ecx, byte [rsp + rsi + 0x4e4] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000bc4	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000bc9	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000bcc	        0x488d4605	                      lea rax, [rsi + 5]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bd0	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bd3	     0xf8677030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bd9	     0xfb68c34e504	    movzx ecx, byte [rsp + rsi + 0x4e5] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000be1	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000be6	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000be9	        0x488d4606	                      lea rax, [rsi + 6]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bed	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bf0	     0xf865a030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000bf6	     0xfb68c34e604	    movzx ecx, byte [rsp + rsi + 0x4e6] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000bfe	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c03	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c06	        0x488d4607	                      lea rax, [rsi + 7]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c0a	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c0d	     0xf863d030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c13	     0xfb68c34e704	    movzx ecx, byte [rsp + rsi + 0x4e7] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c1b	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c20	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c23	        0x488d4608	                      lea rax, [rsi + 8]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c27	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c2a	     0xf8620030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c30	     0xfb68c34e804	    movzx ecx, byte [rsp + rsi + 0x4e8] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c38	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c3d	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c40	        0x488d4609	                      lea rax, [rsi + 9]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c44	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c47	     0xf8603030000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c4d	     0xfb68c34e904	    movzx ecx, byte [rsp + rsi + 0x4e9] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c55	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c5a	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c5d	        0x488d460a	                    lea rax, [rsi + 0xa]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c61	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c64	     0xf86e6020000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c6a	     0xfb68c34ea04	    movzx ecx, byte [rsp + rsi + 0x4ea] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c72	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c77	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c7a	        0x488d460b	                    lea rax, [rsi + 0xb]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c7e	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c81	     0xf86c9020000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c87	     0xfb68c34eb04	    movzx ecx, byte [rsp + rsi + 0x4eb] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c8f	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000c94	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000c97	        0x488d460c	                    lea rax, [rsi + 0xc]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c9b	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000c9e	     0xf86ac020000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ca4	     0xfb68c34ec04	    movzx ecx, byte [rsp + rsi + 0x4ec] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cac	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000cb1	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cb4	        0x488d460d	                    lea rax, [rsi + 0xd]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000cb8	          0x4839c7	                            cmp rdi, rax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000cbb	     0xf868f020000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000cc1	     0xfb68c34ed04	    movzx ecx, byte [rsp + rsi + 0x4ed] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cc9	        0x4883c60e	                            add rsi, 0xe	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000ccd	      0xc644420100	           mov byte [rdx + rax*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000cd2	          0x4839f7	                            cmp rdi, rsi	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000cd5	          0x880c42	              mov byte [rdx + rax*2], cl	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cd8	     0xf8672020000	                           jbe 0x4000f50	       341	ntlm.c	FUNCTION_6	FOR_1
0x4000cde	     0xfb68434e004	    movzx eax, byte [rsp + rsi + 0x4e0] 	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000ce6	      0xc644720100	           mov byte [rdx + rsi*2 + 1], 0	       343	ntlm.c	FUNCTION_6	FOR_1
0x4000ceb	          0x880472	              mov byte [rdx + rsi*2], al	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cee	      0xe95d020000	                           jmp 0x4000f50	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cf3	       0xf1f440000	                   nop dword [rax + rax]	       342	ntlm.c	FUNCTION_6	FOR_1
0x4000cf8	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d00	        0x488b3c24	                    mov rdi, qword [rsp]	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d04	      0xba08000000	                              mov edx, 8	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d09	          0x4889c6	                            mov rsi, rax	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d0c	      0x4889442440	             mov qword [rsp + 0x40], rax	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d11	      0xe800000000	                          call 0x4000d16	       570	ntlm.c	FUNCTION_8	IF_4	CALL_7
0x4000d16	            0x85c0	                           test eax, eax	       571	ntlm.c	FUNCTION_8	IF_4	IF_5
0x4000d18	     0xf8561f7ffff	                           jne 0x400047f	       571	ntlm.c	FUNCTION_8	IF_4	IF_5
0x4000d1e	    0x4c8d8424c000	                    lea r8, [rsp + 0xc0]	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d26	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d2b	        0x488b3c24	                    mov rdi, qword [rsp]	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d2f	          0x4c89c2	                             mov rdx, r8	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d32	      0x4c89442438	              mov qword [rsp + 0x38], r8	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d37	      0xe800000000	                          call 0x4000d3c	       574	ntlm.c	FUNCTION_8	IF_4	CALL_8
0x4000d3c	            0x85c0	                           test eax, eax	       575	ntlm.c	FUNCTION_8	IF_4	IF_6
0x4000d3e	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       575	ntlm.c	FUNCTION_8	IF_4	IF_6
0x4000d43	     0xf8536f7ffff	                           jne 0x400047f	       575	ntlm.c	FUNCTION_8	IF_4	IF_6
0x4000d49	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d51	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d56	          0x4889ea	                            mov rdx, rbp	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d59	          0x4c89ee	                            mov rsi, r13	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d5c	          0x4c89f7	                            mov rdi, r14	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d5f	          0x4989c1	                             mov r9, rax	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d62	      0x4889442438	             mov qword [rsp + 0x38], rax	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d67	      0xe800000000	                          call 0x4000d6c	       578	ntlm.c	FUNCTION_8	IF_4	CALL_9
0x4000d6c	            0x85c0	                           test eax, eax	       580	ntlm.c	FUNCTION_8	IF_4	IF_7
0x4000d6e	     0xf850bf7ffff	                           jne 0x400047f	       580	ntlm.c	FUNCTION_8	IF_4	IF_7
0x4000d74	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       584	ntlm.c	FUNCTION_8	IF_4	CALL_10
0x4000d79	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       584	ntlm.c	FUNCTION_8	IF_4	CALL_10
0x4000d7e	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	       584	ntlm.c	FUNCTION_8	IF_4	CALL_10
0x4000d86	        0x488d5308	                      lea rdx, [rbx + 8]	       584	ntlm.c	FUNCTION_8	IF_4	CALL_10
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       584	ntlm.c	FUNCTION_8	IF_4	CALL_10
0x4000d8f	            0x85c0	                           test eax, eax	       586	ntlm.c	FUNCTION_8	IF_4	IF_8
0x4000d91	     0xf85e8f6ffff	                           jne 0x400047f	       586	ntlm.c	FUNCTION_8	IF_4	IF_8
0x4000d97	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000d9c	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000da1	      0x488d4c2458	                   lea rcx, [rsp + 0x58]	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000da6	      0x4c8d442454	                    lea r8, [rsp + 0x54]	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000dab	          0x4889da	                            mov rdx, rbx	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000dae	      0xe800000000	                          call 0x4000db3	       590	ntlm.c	FUNCTION_8	IF_4	CALL_11
0x4000db3	            0x85c0	                           test eax, eax	       592	ntlm.c	FUNCTION_8	IF_4	IF_9
0x4000db5	     0xf85c4f6ffff	                           jne 0x400047f	       592	ntlm.c	FUNCTION_8	IF_4	IF_9
0x4000dbb	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       595	ntlm.c	FUNCTION_8	IF_4
0x4000dc0	      0x4889442448	             mov qword [rsp + 0x48], rax	       595	ntlm.c	FUNCTION_8	IF_4
0x4000dc5	      0xe971f7ffff	                           jmp 0x400053b	       595	ntlm.c	FUNCTION_8	IF_4
0x4000dca	    0x660f1f440000	                    nop word [rax + rax]	       595	ntlm.c	FUNCTION_8	IF_4
0x4000dd0	        0x488b3c24	                    mov rdi, qword [rsp]	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000dd4	    0x488d35000000	                   lea rsi, [0x04000ddb]	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000ddb	            0x31c0	                            xor eax, eax	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000ddd	          0x4531ff	                          xor r15d, r15d	       558	ntlm.c	FUNCTION_8	IF_3
0x4000de0	      0xe800000000	                          call 0x4000de5	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000de5	      0xe969f6ffff	                           jmp 0x4000453	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000dea	    0x660f1f440000	                    nop word [rax + rax]	       557	ntlm.c	FUNCTION_8	IF_3	CALL_5
0x4000df0	      0xbe2f000000	                           mov esi, 0x2f	       542	ntlm.c	FUNCTION_8	CALL_2
0x4000df5	          0x4889ef	                            mov rdi, rbp	       542	ntlm.c	FUNCTION_8	CALL_2
0x4000df8	      0xe800000000	                          call 0x4000dfd	       542	ntlm.c	FUNCTION_8	CALL_2
0x4000dfd	          0x4885c0	                           test rax, rax	       544	ntlm.c	FUNCTION_8	IF_2
0x4000e00	     0xf85d6f5ffff	                           jne 0x40003dc	       544	ntlm.c	FUNCTION_8	IF_2
0x4000e06	          0x4989ee	                            mov r14, rbp	       544	ntlm.c	FUNCTION_8	IF_2
0x4000e09	    0x48c744240800	                  mov qword [rsp + 8], 0	       538	ntlm.c	FUNCTION_8
0x4000e12	    0x488d2d000000	                   lea rbp, [0x04000e19]	       532	ntlm.c	FUNCTION_8
0x4000e19	      0xe9cdf5ffff	                           jmp 0x40003eb	       532	ntlm.c	FUNCTION_8
0x4000e1e	            0x6690	                                     nop	       532	ntlm.c	FUNCTION_8
0x4000e20	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       532	ntlm.c	FUNCTION_8
0x4000e25	        0x488b5308	                mov rdx, qword [rbx + 8]	       532	ntlm.c	FUNCTION_8
0x4000e29	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e31	      0xb910000000	                           mov ecx, 0x10	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e36	    0x48c784248800	               mov qword [rsp + 0x88], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000e42	    0x48c784249000	               mov qword [rsp + 0x90], 0	        90	string3.h	FUNCTION_13	CALL_6
0x4000e4e	          0x4889f7	                            mov rdi, rsi	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e51	      0x4889742438	             mov qword [rsp + 0x38], rsi	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e56	      0xbe10000000	                           mov esi, 0x10	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e5b	    0x488984248000	             mov qword [rsp + 0x80], rax	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e63	    0x48898424e800	             mov qword [rsp + 0xe8], rax	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e6b	      0x488d442470	                   lea rax, [rsp + 0x70]	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e70	    0x48899424e000	             mov qword [rsp + 0xe0], rdx	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e78	          0x4889c2	                            mov rdx, rax	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e7b	      0x4889442440	             mov qword [rsp + 0x40], rax	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e80	      0xe800000000	                          call 0x4000e85	       623	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_17
0x4000e85	            0x85c0	                           test eax, eax	       624	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_12
0x4000e87	     0xf85f2f5ffff	                           jne 0x400047f	       624	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_12
0x4000e8d	    0x488d8c24c000	                   lea rcx, [rsp + 0xc0]	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000e95	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000e9a	        0x488b3c24	                    mov rdi, qword [rsp]	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000e9e	          0x4889ca	                            mov rdx, rcx	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000ea1	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000ea6	      0xe800000000	                          call 0x4000eab	       627	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_18
0x4000eab	            0x85c0	                           test eax, eax	       628	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_13
0x4000ead	     0xf85ccf5ffff	                           jne 0x400047f	       628	ntlm.c	FUNCTION_8	ELSE_3	IF_10	IF_13
0x4000eb3	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000eb8	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ec0	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ec5	          0x4889c2	                            mov rdx, rax	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ec8	      0x4889442410	             mov qword [rsp + 0x10], rax	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ecd	          0x4889cf	                            mov rdi, rcx	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       631	ntlm.c	FUNCTION_8	ELSE_3	IF_10	CALL_19
0x4000ed5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       526	ntlm.c	FUNCTION_8
0x4000eda	      0x4889442448	             mov qword [rsp + 0x48], rax	       526	ntlm.c	FUNCTION_8
0x4000edf	      0xe957f6ffff	                           jmp 0x400053b	       526	ntlm.c	FUNCTION_8
0x4000ee4	         0xf1f4000	                         nop dword [rax]	       526	ntlm.c	FUNCTION_8
0x4000ee8	        0x488b3c24	                    mov rdi, qword [rsp]	       804	ntlm.c	FUNCTION_8	IF_19	CALL_38
0x4000eec	    0x488d35000000	                   lea rsi, [0x04000ef3]	       804	ntlm.c	FUNCTION_8	IF_19	CALL_38
0x4000ef3	            0x31c0	                            xor eax, eax	       804	ntlm.c	FUNCTION_8	IF_19	CALL_38
0x4000ef5	      0xe800000000	                          call 0x4000efa	       804	ntlm.c	FUNCTION_8	IF_19	CALL_38
0x4000efa	      0xb81b000000	                           mov eax, 0x1b	       805	ntlm.c	FUNCTION_8	IF_19
0x4000eff	      0xe97bf5ffff	                           jmp 0x400047f	       805	ntlm.c	FUNCTION_8	IF_19
0x4000f04	         0xf1f4000	                         nop dword [rax]	       805	ntlm.c	FUNCTION_8	IF_19
0x4000f08	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_10	CALL_3
0x4000f0d	        0x4a8d3c28	                    lea rdi, [rax + r13]	        53	string3.h	FUNCTION_10	CALL_3
0x4000f11	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_10	CALL_3
0x4000f14	      0xe800000000	                          call 0x4000f19	        53	string3.h	FUNCTION_10	CALL_3
0x4000f19	      0x4c036c2408	                add r13, qword [rsp + 8]	       814	ntlm.c	FUNCTION_8
0x4000f1e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000f23	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_10	CALL_3
0x4000f26	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000f2b	        0x4a8d3c28	                    lea rdi, [rax + r13]	        53	string3.h	FUNCTION_10	CALL_3
0x4000f2f	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_10	CALL_3
0x4000f32	          0x4c01ed	                            add rbp, r13	       822	ntlm.c	FUNCTION_8
0x4000f35	      0xe800000000	                          call 0x4000f3a	        53	string3.h	FUNCTION_10	CALL_3
0x4000f3a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000f3f	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_10	CALL_3
0x4000f42	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_10	CALL_3
0x4000f45	        0x488d3c28	                    lea rdi, [rax + rbp]	        53	string3.h	FUNCTION_10	CALL_3
0x4000f49	      0xe800000000	                          call 0x4000f4e	        53	string3.h	FUNCTION_10	CALL_3
0x4000f4e	            0x6690	                                     nop	        53	string3.h	FUNCTION_10	CALL_3
0x4000f50	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f55	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f5a	        0x498d142f	                    lea rdx, [r15 + rbp]	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f5e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f63	        0x488b3c24	                    mov rdi, qword [rsp]	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f67	      0xe800000000	                          call 0x4000f6c	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f6c	            0x89c5	                            mov ebp, eax	       839	ntlm.c	FUNCTION_8	CALL_49
0x4000f6e	    0x488b05000000	            mov rax, qword [0x04000f75] 	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000f75	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000f79	            0xff10	                        call qword [rax]	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000f7b	    0x48c743100000	               mov qword [rbx + 0x10], 0	       859	ntlm.c	FUNCTION_9	CALL_1
0x4000f83	    0xc74318000000	               mov dword [rbx + 0x18], 0	       862	ntlm.c	FUNCTION_9
0x4000f8a	            0x89e8	                            mov eax, ebp	       843	ntlm.c	FUNCTION_8
0x4000f8c	      0xe9eef4ffff	                           jmp 0x400047f	       843	ntlm.c	FUNCTION_8
0x4000f91	     0xf1f80000000	                         nop dword [rax]	       843	ntlm.c	FUNCTION_8
0x4000f98	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000f9d	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000fa2	            0x89d1	                            mov ecx, edx	       781	ntlm.c	FUNCTION_8	IF_18	CALL_31
0x4000fa4	          0x4889ca	                            mov rdx, rcx	        53	string3.h	FUNCTION_10	CALL_3
0x4000fa7	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        53	string3.h	FUNCTION_10	CALL_3
0x4000fac	        0x4a8d3c28	                    lea rdi, [rax + r13]	        53	string3.h	FUNCTION_10	CALL_3
0x4000fb0	      0xe800000000	                          call 0x4000fb5	        53	string3.h	FUNCTION_10	CALL_3
0x4000fb5	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       782	ntlm.c	FUNCTION_8	IF_18
0x4000fba	          0x4901cd	                            add r13, rcx	       782	ntlm.c	FUNCTION_8	IF_18
0x4000fbd	      0xe9e4f6ffff	                           jmp 0x40006a6	       782	ntlm.c	FUNCTION_8	IF_18
0x4000fc2	    0x660f1f440000	                    nop word [rax + rax]	       782	ntlm.c	FUNCTION_8	IF_18
0x4000fc8	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000fd0	    0x4a89842ce000	       mov qword [rsp + r13 + 0xe0], rax	        53	string3.h	FUNCTION_10	CALL_3
0x4000fd8	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000fe0	    0x4a89842ce800	       mov qword [rsp + r13 + 0xe8], rax	        53	string3.h	FUNCTION_10	CALL_3
0x4000fe8	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_10	CALL_3
0x4000ff0	    0x4a89842cf000	       mov qword [rsp + r13 + 0xf0], rax	        53	string3.h	FUNCTION_10	CALL_3
0x4000ff8	        0x4983c518	                           add r13, 0x18	       770	ntlm.c	FUNCTION_8	IF_17
0x4000ffc	      0xe991f6ffff	                           jmp 0x4000692	       770	ntlm.c	FUNCTION_8	IF_17
0x4001001	     0xf1f80000000	                         nop dword [rax]	       770	ntlm.c	FUNCTION_8	IF_17
0x4001008	            0x31f6	                            xor esi, esi	       341	ntlm.c	FUNCTION_6	FOR_1
0x400100a	      0xe939fbffff	                           jmp 0x4000b48	       341	ntlm.c	FUNCTION_6	FOR_1
0x400100f	              0x90	                                     nop	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001010	            0x31c0	                            xor eax, eax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001012	      0xe929f9ffff	                           jmp 0x4000940	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001017	    0x660f1f840000	                    nop word [rax + rax]	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001020	            0x31c0	                            xor eax, eax	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001022	      0xe929f7ffff	                           jmp 0x4000750	       341	ntlm.c	FUNCTION_6	FOR_1
0x4001027	      0xe800000000	                          call 0x400102c	       844	ntlm.c	FUNCTION_8
