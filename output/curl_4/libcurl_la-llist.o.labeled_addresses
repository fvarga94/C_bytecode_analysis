Curl_llist_count	FOR,0:SWITCH,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,0	2
0x4000280	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       145	llist.c	FUNCTION_5
0x4000284	              0xc3	                                     ret	       146	llist.c	FUNCTION_5
Curl_llist_insert_next	FOR,0:SWITCH,0:functions,0:ELSE,3:DO,0:IF,4:WHILE,0:CALL,0	34
0x4000060	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        62	llist.c	FUNCTION_2	IF_1
0x4000064	          0x488911	                    mov qword [rcx], rdx	        61	llist.c	FUNCTION_2
0x4000067	          0x4885c0	                           test rax, rax	        62	llist.c	FUNCTION_2	IF_1
0x400006a	            0x7434	                            je 0x40000a0	        62	llist.c	FUNCTION_2	IF_1
0x400006c	          0x4885f6	                           test rsi, rsi	        70	llist.c	FUNCTION_2	ELSE_1
0x400006f	            0x745f	                            je 0x40000d0	        70	llist.c	FUNCTION_2	ELSE_1
0x4000071	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	        70	llist.c	FUNCTION_2	ELSE_1
0x4000075	        0x48897108	                mov qword [rcx + 8], rsi	        71	llist.c	FUNCTION_2	ELSE_1
0x4000079	        0x48895110	             mov qword [rcx + 0x10], rdx	        70	llist.c	FUNCTION_2	ELSE_1
0x400007d	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000081	          0x4885d2	                           test rdx, rdx	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000084	            0x743a	                            je 0x40000c0	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000086	        0x48894a08	                mov qword [rdx + 8], rcx	        77	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x400008a	        0x48894e10	             mov qword [rsi + 0x10], rcx	        83	llist.c	FUNCTION_2	ELSE_1	IF_4
0x400008e	        0x4883c001	                              add rax, 1	        86	llist.c	FUNCTION_2
0x4000092	        0x48894718	             mov qword [rdi + 0x18], rax	        86	llist.c	FUNCTION_2
0x4000096	              0xc3	                                     ret	        87	llist.c	FUNCTION_2
0x4000097	    0x660f1f840000	                    nop word [rax + rax]	        87	llist.c	FUNCTION_2
0x40000a0	        0x4883c001	                              add rax, 1	        86	llist.c	FUNCTION_2
0x40000a4	          0x48890f	                    mov qword [rdi], rcx	        63	llist.c	FUNCTION_2	IF_1
0x40000a7	    0x48c741080000	                  mov qword [rcx + 8], 0	        64	llist.c	FUNCTION_2	IF_1
0x40000af	    0x48c741100000	               mov qword [rcx + 0x10], 0	        65	llist.c	FUNCTION_2	IF_1
0x40000b7	        0x48894f08	                mov qword [rdi + 8], rcx	        66	llist.c	FUNCTION_2	IF_1
0x40000bb	        0x48894718	             mov qword [rdi + 0x18], rax	        86	llist.c	FUNCTION_2
0x40000bf	              0xc3	                                     ret	        87	llist.c	FUNCTION_2
0x40000c0	        0x48894f08	                mov qword [rdi + 8], rcx	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x40000c4	            0xebc4	                           jmp 0x400008a	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x40000c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x40000d0	          0x488b17	                    mov rdx, qword [rdi]	        70	llist.c	FUNCTION_2	ELSE_1
0x40000d3	    0x48c741080000	                  mov qword [rcx + 8], 0	        71	llist.c	FUNCTION_2	ELSE_1
0x40000db	        0x48895110	             mov qword [rcx + 0x10], rdx	        70	llist.c	FUNCTION_2	ELSE_1
0x40000df	        0x48894a08	                mov qword [rdx + 8], rcx	        73	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000e3	          0x48890f	                    mov qword [rdi], rcx	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
0x40000e6	            0xeba6	                           jmp 0x400008e	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
Curl_llist_move	FOR,0:SWITCH,0:functions,0:ELSE,5:DO,0:IF,6:WHILE,0:CALL,0	52
0x4000290	          0x4885f6	                           test rsi, rsi	       156	llist.c	FUNCTION_6	IF_1
0x4000293	            0x7457	                            je 0x40002ec	       156	llist.c	FUNCTION_6	IF_1
0x4000295	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       156	llist.c	FUNCTION_6	IF_1
0x4000299	          0x4885c0	                           test rax, rax	       156	llist.c	FUNCTION_6	IF_1
0x400029c	            0x744e	                            je 0x40002ec	       156	llist.c	FUNCTION_6	IF_1
0x400029e	          0x483b37	                    cmp rsi, qword [rdi]	       159	llist.c	FUNCTION_6	IF_2
0x40002a1	            0x746d	                            je 0x4000310	       159	llist.c	FUNCTION_6	IF_2
0x40002a3	        0x4c8b4e10	              mov r9, qword [rsi + 0x10]	       168	llist.c	FUNCTION_6	ELSE_2
0x40002a7	        0x4c8b4608	                 mov r8, qword [rsi + 8]	       168	llist.c	FUNCTION_6	ELSE_2
0x40002ab	        0x4d894810	               mov qword [r8 + 0x10], r9	       168	llist.c	FUNCTION_6	ELSE_2
0x40002af	        0x4c8b4e10	              mov r9, qword [rsi + 0x10]	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002b3	          0x4d85c9	                             test r9, r9	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002b6	            0x7478	                            je 0x4000330	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002b8	        0x4d894108	                  mov qword [r9 + 8], r8	       172	llist.c	FUNCTION_6	ELSE_2	ELSE_3
0x40002bc	        0x4883e801	                              sub rax, 1	       175	llist.c	FUNCTION_6	ELSE_3
0x40002c0	        0x48894718	             mov qword [rdi + 0x18], rax	       175	llist.c	FUNCTION_6	ELSE_3
0x40002c4	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002c8	          0x4885c0	                           test rax, rax	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002cb	            0x7523	                           jne 0x40002f0	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002cd	          0x488932	                    mov qword [rdx], rsi	       179	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002d0	    0x48c746080000	                  mov qword [rsi + 8], 0	       180	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002d8	    0x48c746100000	               mov qword [rsi + 0x10], 0	       181	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002e0	        0x48897208	                mov qword [rdx + 8], rsi	       182	llist.c	FUNCTION_6	ELSE_3	IF_5
0x40002e4	        0x4883c001	                              add rax, 1	       196	llist.c	FUNCTION_6
0x40002e8	        0x48894218	             mov qword [rdx + 0x18], rax	       196	llist.c	FUNCTION_6
0x40002ec	            0xf3c3	                                     ret	       196	llist.c	FUNCTION_6
0x40002ee	            0x6690	                                     nop	       196	llist.c	FUNCTION_6
0x40002f0	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       185	llist.c	FUNCTION_6	ELSE_4
0x40002f4	        0x48894e08	                mov qword [rsi + 8], rcx	       186	llist.c	FUNCTION_6	ELSE_4
0x40002f8	        0x48897e10	             mov qword [rsi + 0x10], rdi	       185	llist.c	FUNCTION_6	ELSE_4
0x40002fc	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000300	          0x4885ff	                           test rdi, rdi	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000303	            0x743b	                            je 0x4000340	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000305	        0x48897708	                mov qword [rdi + 8], rsi	       188	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000309	        0x48897110	             mov qword [rcx + 0x10], rsi	       193	llist.c	FUNCTION_6	ELSE_4
0x400030d	            0xebd5	                           jmp 0x40002e4	       193	llist.c	FUNCTION_6	ELSE_4
0x400030f	              0x90	                                     nop	       193	llist.c	FUNCTION_6	ELSE_4
0x4000310	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	       160	llist.c	FUNCTION_6	IF_2
0x4000314	          0x4d85c0	                             test r8, r8	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x4000317	          0x4c8907	                     mov qword [rdi], r8	       160	llist.c	FUNCTION_6	IF_2
0x400031a	            0x7434	                            je 0x4000350	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x400031c	    0x49c740080000	                   mov qword [r8 + 8], 0	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x4000324	            0xeb96	                           jmp 0x40002bc	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x4000326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x4000330	        0x4c894708	                 mov qword [rdi + 8], r8	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000334	            0xeb86	                           jmp 0x40002bc	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000340	        0x48897208	                mov qword [rdx + 8], rsi	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x4000344	            0xebc3	                           jmp 0x4000309	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x4000346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x4000350	    0x48c747080000	                  mov qword [rdi + 8], 0	       163	llist.c	FUNCTION_6	IF_2	IF_3
0x4000358	      0xe95fffffff	                           jmp 0x40002bc	       163	llist.c	FUNCTION_6	IF_2	IF_3
Curl_llist_init	FOR,0:SWITCH,0:functions,0:ELSE,0:DO,0:IF,0:WHILE,0:CALL,0	5
0x4000040	    0x48c747180000	               mov qword [rdi + 0x18], 0	        39	llist.c	FUNCTION_1
0x4000048	        0x48897710	             mov qword [rdi + 0x10], rsi	        40	llist.c	FUNCTION_1
0x400004c	    0x48c707000000	                      mov qword [rdi], 0	        41	llist.c	FUNCTION_1
0x4000053	    0x48c747080000	                  mov qword [rdi + 8], 0	        42	llist.c	FUNCTION_1
0x400005b	              0xc3	                                     ret	        42	llist.c	FUNCTION_1
Curl_llist_destroy	FOR,0:SWITCH,0:functions,0:ELSE,0:DO,0:IF,1:WHILE,1:CALL,1	58
0x40001b0	          0x4885ff	                           test rdi, rdi	       136	llist.c	FUNCTION_4	IF_1
0x40001b3	     0xf8487000000	                            je 0x4000240	       136	llist.c	FUNCTION_4	IF_1
0x40001b9	              0x55	                                push rbp	       135	llist.c	FUNCTION_4
0x40001ba	              0x53	                                push rbx	       135	llist.c	FUNCTION_4
0x40001bb	          0x4889f5	                            mov rbp, rsi	       135	llist.c	FUNCTION_4
0x40001be	          0x4889fb	                            mov rbx, rdi	       135	llist.c	FUNCTION_4
0x40001c1	        0x4883ec08	                              sub rsp, 8	       135	llist.c	FUNCTION_4
0x40001c5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       135	llist.c	FUNCTION_4
0x40001c9	          0x4885d2	                           test rdx, rdx	       135	llist.c	FUNCTION_4
0x40001cc	            0x746a	                            je 0x4000238	       135	llist.c	FUNCTION_4
0x40001ce	        0x488b4308	                mov rax, qword [rbx + 8]	       135	llist.c	FUNCTION_4
0x40001d2	          0x4885c0	                           test rax, rax	        97	llist.c	FUNCTION_3	IF_1
0x40001d5	            0x7509	                           jne 0x40001e0	        97	llist.c	FUNCTION_3	IF_1
0x40001d7	            0xebfe	                           jmp 0x40001d7	        97	llist.c	FUNCTION_3	IF_1
0x40001d9	     0xf1f80000000	                         nop dword [rax]	        97	llist.c	FUNCTION_3	IF_1
0x40001e0	          0x483b03	                    cmp rax, qword [rbx]	       100	llist.c	FUNCTION_3	IF_2
0x40001e3	            0x746b	                            je 0x4000250	       100	llist.c	FUNCTION_3	IF_2
0x40001e5	        0x488b7008	                mov rsi, qword [rax + 8]	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x40001e9	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x40001ed	          0x4885f6	                           test rsi, rsi	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x40001f0	            0x7450	                            je 0x4000242	       109	llist.c	FUNCTION_3	ELSE_2	IF_4
0x40001f2	        0x48894e10	             mov qword [rsi + 0x10], rcx	       112	llist.c	FUNCTION_3	ELSE_2	ELSE_3
0x40001f6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       112	llist.c	FUNCTION_3	ELSE_2	ELSE_3
0x40001fa	          0x4885c9	                           test rcx, rcx	       114	llist.c	FUNCTION_3	ELSE_2	IF_5
0x40001fd	            0x7467	                            je 0x4000266	       114	llist.c	FUNCTION_3	ELSE_2	IF_5
0x40001ff	        0x48897108	                mov qword [rcx + 8], rsi	       117	llist.c	FUNCTION_3	ELSE_2	ELSE_4
0x4000203	          0x488b30	                    mov rsi, qword [rax]	       120	llist.c	FUNCTION_3
0x4000206	    0x48c740080000	                  mov qword [rax + 8], 0	       123	llist.c	FUNCTION_3
0x400020e	        0x4883ea01	                              sub rdx, 1	       126	llist.c	FUNCTION_3
0x4000212	    0x48c700000000	                      mov qword [rax], 0	       122	llist.c	FUNCTION_3
0x4000219	    0x48c740100000	               mov qword [rax + 0x10], 0	       124	llist.c	FUNCTION_3
0x4000221	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       129	llist.c	FUNCTION_3	IF_6
0x4000225	        0x48895318	             mov qword [rbx + 0x18], rdx	       126	llist.c	FUNCTION_3
0x4000229	          0x4885c0	                           test rax, rax	       129	llist.c	FUNCTION_3	IF_6
0x400022c	            0x749b	                            je 0x40001c9	       129	llist.c	FUNCTION_3	IF_6
0x400022e	          0x4889ef	                            mov rdi, rbp	       130	llist.c	FUNCTION_3	CALL_1
0x4000231	            0xffd0	                                call rax	       130	llist.c	FUNCTION_3	CALL_1
0x4000233	            0xeb90	                           jmp 0x40001c5	       130	llist.c	FUNCTION_3	CALL_1
0x4000235	           0xf1f00	                         nop dword [rax]	       130	llist.c	FUNCTION_3	CALL_1
0x4000238	        0x4883c408	                              add rsp, 8	       140	llist.c	FUNCTION_4
0x400023c	              0x5b	                                 pop rbx	       140	llist.c	FUNCTION_4
0x400023d	              0x5d	                                 pop rbp	       140	llist.c	FUNCTION_4
0x400023e	              0xc3	                                     ret	       140	llist.c	FUNCTION_4
0x400023f	              0x90	                                     nop	       140	llist.c	FUNCTION_4
0x4000240	            0xf3c3	                                     ret	       140	llist.c	FUNCTION_4
0x4000242	          0x48890b	                    mov qword [rbx], rcx	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000245	            0xebb3	                           jmp 0x40001fa	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000247	    0x660f1f840000	                    nop word [rax + rax]	       110	llist.c	FUNCTION_3	ELSE_2	IF_4
0x4000250	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       101	llist.c	FUNCTION_3	IF_2
0x4000254	          0x4885c9	                           test rcx, rcx	       103	llist.c	FUNCTION_3	IF_2	IF_3
0x4000257	          0x48890b	                    mov qword [rbx], rcx	       101	llist.c	FUNCTION_3	IF_2
0x400025a	            0x7410	                            je 0x400026c	       103	llist.c	FUNCTION_3	IF_2	IF_3
0x400025c	    0x48c741080000	                  mov qword [rcx + 8], 0	       106	llist.c	FUNCTION_3	IF_2	ELSE_1
0x4000264	            0xeb9d	                           jmp 0x4000203	       106	llist.c	FUNCTION_3	IF_2	ELSE_1
0x4000266	        0x48897308	                mov qword [rbx + 8], rsi	       115	llist.c	FUNCTION_3	ELSE_2	IF_5
0x400026a	            0xeb97	                           jmp 0x4000203	       115	llist.c	FUNCTION_3	ELSE_2	IF_5
0x400026c	    0x48c743080000	                  mov qword [rbx + 8], 0	       104	llist.c	FUNCTION_3	IF_2	IF_3
0x4000274	            0xeb8d	                           jmp 0x4000203	       104	llist.c	FUNCTION_3	IF_2	IF_3
