Curl_read16_le	IF,0:CALL,0:DO,0:FOR,0:WHILE,0:SWITCH,0:ELSE,0:functions,0	5
0x4000040	         0xfb64701	               movzx eax, byte [rdi + 1]	        42	curl_endian.c	FUNCTION_1
0x4000044	           0xfb617	                   movzx edx, byte [rdi]	        42	curl_endian.c	FUNCTION_1
0x4000047	          0xc1e008	                              shl eax, 8	        42	curl_endian.c	FUNCTION_1
0x400004a	             0x9d0	                             or eax, edx	        42	curl_endian.c	FUNCTION_1
0x400004c	              0xc3	                                     ret	        44	curl_endian.c	FUNCTION_1
Curl_write64_le	IF,0:CALL,2:DO,0:FOR,0:WHILE,0:SWITCH,0:ELSE,0:functions,0	22
0x4000090	          0x4889f8	                            mov rax, rdi	        98	curl_endian.c	FUNCTION_4
0x4000093	          0x4889fa	                            mov rdx, rdi	       122	curl_endian.c	FUNCTION_5	CALL_2
0x4000096	          0x40883e	                     mov byte [rsi], dil	        97	curl_endian.c	FUNCTION_4
0x4000099	           0xfb6c4	                           movzx eax, ah	        98	curl_endian.c	FUNCTION_4
0x400009c	        0x48c1fa20	                           sar rdx, 0x20	       122	curl_endian.c	FUNCTION_5	CALL_2
0x40000a0	          0x884601	                  mov byte [rsi + 1], al	        98	curl_endian.c	FUNCTION_4
0x40000a3	          0x4889f8	                            mov rax, rdi	        99	curl_endian.c	FUNCTION_4
0x40000a6	          0x885604	                  mov byte [rsi + 4], dl	        97	curl_endian.c	FUNCTION_4
0x40000a9	        0x48c1e810	                           shr rax, 0x10	        99	curl_endian.c	FUNCTION_4
0x40000ad	          0x884602	                  mov byte [rsi + 2], al	        99	curl_endian.c	FUNCTION_4
0x40000b0	            0x89f8	                            mov eax, edi	       100	curl_endian.c	FUNCTION_4
0x40000b2	            0x89d7	                            mov edi, edx	       100	curl_endian.c	FUNCTION_4
0x40000b4	          0xc1e818	                           shr eax, 0x18	       100	curl_endian.c	FUNCTION_4
0x40000b7	          0xc1ef18	                           shr edi, 0x18	       100	curl_endian.c	FUNCTION_4
0x40000ba	          0x884603	                  mov byte [rsi + 3], al	       100	curl_endian.c	FUNCTION_4
0x40000bd	           0xfb6c6	                           movzx eax, dh	        98	curl_endian.c	FUNCTION_4
0x40000c0	        0x40887e07	                 mov byte [rsi + 7], dil	       100	curl_endian.c	FUNCTION_4
0x40000c4	          0x884605	                  mov byte [rsi + 5], al	        98	curl_endian.c	FUNCTION_4
0x40000c7	          0x4889d0	                            mov rax, rdx	        99	curl_endian.c	FUNCTION_4
0x40000ca	        0x48c1e810	                           shr rax, 0x10	        99	curl_endian.c	FUNCTION_4
0x40000ce	          0x884606	                  mov byte [rsi + 6], al	        99	curl_endian.c	FUNCTION_4
0x40000d1	              0xc3	                                     ret	       100	curl_endian.c	FUNCTION_4
Curl_read32_le	IF,0:CALL,0:DO,0:FOR,0:WHILE,0:SWITCH,0:ELSE,0:functions,0	2
0x4000050	            0x8b07	                    mov eax, dword [rdi]	        61	curl_endian.c	FUNCTION_2
0x4000052	              0xc3	                                     ret	        63	curl_endian.c	FUNCTION_2
Curl_read16_be	IF,0:CALL,0:DO,0:FOR,0:WHILE,0:SWITCH,0:ELSE,0:functions,0	5
0x4000060	           0xfb607	                   movzx eax, byte [rdi]	        80	curl_endian.c	FUNCTION_3
0x4000063	         0xfb65701	               movzx edx, byte [rdi + 1]	        80	curl_endian.c	FUNCTION_3
0x4000067	          0xc1e008	                              shl eax, 8	        80	curl_endian.c	FUNCTION_3
0x400006a	             0x9d0	                             or eax, edx	        80	curl_endian.c	FUNCTION_3
0x400006c	              0xc3	                                     ret	        82	curl_endian.c	FUNCTION_3
