Curl_pp_sendf	CALL,3:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	119
0x40004c0	            0x4156	                                push r14	       257	pingpong.c	FUNCTION_5
0x40004c2	            0x4155	                                push r13	       257	pingpong.c	FUNCTION_5
0x40004c4	            0x4154	                                push r12	       257	pingpong.c	FUNCTION_5
0x40004c6	              0x55	                                push rbp	       257	pingpong.c	FUNCTION_5
0x40004c7	              0x53	                                push rbx	       257	pingpong.c	FUNCTION_5
0x40004c8	          0x4889fb	                            mov rbx, rdi	       257	pingpong.c	FUNCTION_5
0x40004cb	    0x4881ecf00000	                           sub rsp, 0xf0	       257	pingpong.c	FUNCTION_5
0x40004d2	            0x84c0	                             test al, al	       257	pingpong.c	FUNCTION_5
0x40004d4	      0x4889542450	             mov qword [rsp + 0x50], rdx	       257	pingpong.c	FUNCTION_5
0x40004d9	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       257	pingpong.c	FUNCTION_5
0x40004de	      0x4c89442460	              mov qword [rsp + 0x60], r8	       257	pingpong.c	FUNCTION_5
0x40004e3	      0x4c894c2468	              mov qword [rsp + 0x68], r9	       257	pingpong.c	FUNCTION_5
0x40004e8	            0x743d	                            je 0x4000527	       257	pingpong.c	FUNCTION_5
0x40004ea	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	       257	pingpong.c	FUNCTION_5
0x40004ef	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	       257	pingpong.c	FUNCTION_5
0x40004f7	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	       257	pingpong.c	FUNCTION_5
0x40004ff	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	       257	pingpong.c	FUNCTION_5
0x4000507	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	       257	pingpong.c	FUNCTION_5
0x400050f	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	       257	pingpong.c	FUNCTION_5
0x4000517	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	       257	pingpong.c	FUNCTION_5
0x400051f	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	       257	pingpong.c	FUNCTION_5
0x4000527	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	pingpong.c	FUNCTION_5
0x4000530	      0x4889442438	             mov qword [rsp + 0x38], rax	       257	pingpong.c	FUNCTION_5
0x4000535	            0x31c0	                            xor eax, eax	       257	pingpong.c	FUNCTION_5
0x4000537	    0x488d84242001	                  lea rax, [rsp + 0x120]	       260	pingpong.c	FUNCTION_5	CALL_1
0x400053f	        0x488b6b58	            mov rbp, qword [rbx + 0x58] 	       170	pingpong.c	FUNCTION_4
0x4000543	      0x4889442428	             mov qword [rsp + 0x28], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x4000548	      0x488d442440	                   lea rax, [rsp + 0x40]	       260	pingpong.c	FUNCTION_5	CALL_1
0x400054d	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	       260	pingpong.c	FUNCTION_5	CALL_1
0x4000555	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	       260	pingpong.c	FUNCTION_5	CALL_1
0x400055d	      0x4889442430	             mov qword [rsp + 0x30], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x4000562	      0xb837000000	                           mov eax, 0x37	       183	pingpong.c	FUNCTION_4	IF_1
0x4000567	          0x4885ed	                           test rbp, rbp	       181	pingpong.c	FUNCTION_4	IF_1
0x400056a	     0xf84d0000000	                            je 0x4000640	       181	pingpong.c	FUNCTION_4	IF_1
0x4000570	    0x488d3d000000	                   lea rdi, [0x04000577]	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000577	            0x31c0	                            xor eax, eax	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000579	      0xe800000000	                          call 0x400057e	       187	pingpong.c	FUNCTION_4	CALL_4
0x400057e	          0x4885c0	                           test rax, rax	       188	pingpong.c	FUNCTION_4	IF_2
0x4000581	          0x4989c4	                            mov r12, rax	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000584	     0xf84de000000	                            je 0x4000668	       188	pingpong.c	FUNCTION_4	IF_2
0x400058a	      0x488d742420	                   lea rsi, [rsp + 0x20]	       191	pingpong.c	FUNCTION_4	CALL_5
0x400058f	          0x4889c7	                            mov rdi, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000592	      0xe800000000	                          call 0x4000597	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000597	    0x4c8b35000000	            mov r14, qword [0x0400059e] 	       192	pingpong.c	FUNCTION_4	CALL_6
0x400059e	          0x4989c5	                            mov r13, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x40005a1	          0x4c89e7	                            mov rdi, r12	       192	pingpong.c	FUNCTION_4	CALL_6
0x40005a4	          0x41ff16	                        call qword [r14]	       192	pingpong.c	FUNCTION_4	CALL_6
0x40005a7	          0x4d85ed	                           test r13, r13	       193	pingpong.c	FUNCTION_4	IF_3
0x40005aa	     0xf84b8000000	                            je 0x4000668	       193	pingpong.c	FUNCTION_4	IF_3
0x40005b0	          0x4c89ef	                            mov rdi, r13	       197	pingpong.c	FUNCTION_4	CALL_7
0x40005b3	    0x48c744241800	               mov qword [rsp + 0x18], 0	       196	pingpong.c	FUNCTION_4
0x40005bc	      0xe800000000	                          call 0x40005c1	       197	pingpong.c	FUNCTION_4	CALL_7
0x40005c1	          0x4989c4	                            mov r12, rax	       197	pingpong.c	FUNCTION_4	CALL_7
0x40005c4	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       142	pingpong.c	FUNCTION_3
0x40005c8	    0x48c743100000	               mov qword [rbx + 0x10], 0	       143	pingpong.c	FUNCTION_3
0x40005d0	          0x488b00	                    mov rax, qword [rax]	       144	pingpong.c	FUNCTION_3
0x40005d3	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       144	pingpong.c	FUNCTION_3
0x40005da	        0xc6432001	                mov byte [rbx + 0x20], 1	       145	pingpong.c	FUNCTION_3
0x40005de	        0x48894318	             mov qword [rbx + 0x18], rax	       144	pingpong.c	FUNCTION_3
0x40005e2	      0xe800000000	                          call 0x40005e7	       146	pingpong.c	FUNCTION_3	CALL_1
0x40005e7	    0x8bb558020000	           mov esi, dword [rbp + 0x258] 	       211	pingpong.c	FUNCTION_4	CALL_11
0x40005ed	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       211	pingpong.c	FUNCTION_4	CALL_11
0x40005f2	        0x48895348	             mov qword [rbx + 0x48], rdx	       146	pingpong.c	FUNCTION_3	CALL_1
0x40005f6	        0x48894340	             mov qword [rbx + 0x40], rax	       146	pingpong.c	FUNCTION_3	CALL_1
0x40005fa	          0x4c89e1	                            mov rcx, r12	       211	pingpong.c	FUNCTION_4	CALL_11
0x40005fd	          0x4c89ea	                            mov rdx, r13	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000600	          0x4889ef	                            mov rdi, rbp	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000603	      0xe800000000	                          call 0x4000608	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000608	            0x85c0	                           test eax, eax	       219	pingpong.c	FUNCTION_4	IF_5
0x400060a	     0xf8580000000	                           jne 0x4000690	       219	pingpong.c	FUNCTION_4	IF_5
0x4000610	        0x488b7d00	                    mov rdi, qword [rbp]	       224	pingpong.c	FUNCTION_4	IF_6
0x4000614	    0x80bfe8070000	               cmp byte [rdi + 0x7e8], 0	       224	pingpong.c	FUNCTION_4	IF_6
0x400061b	            0x7553	                           jne 0x4000670	       224	pingpong.c	FUNCTION_4	IF_6
0x400061d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       228	pingpong.c	FUNCTION_4	IF_7
0x4000622	          0x4c39e0	                            cmp rax, r12	       228	pingpong.c	FUNCTION_4	IF_7
0x4000625	            0x7479	                            je 0x40006a0	       228	pingpong.c	FUNCTION_4	IF_7
0x4000627	        0x4c896338	             mov qword [rbx + 0x38], r12	       231	pingpong.c	FUNCTION_4	IF_7
0x400062b	          0x4929c4	                            sub r12, rax	       232	pingpong.c	FUNCTION_4	IF_7
0x400062e	        0x4c896b28	             mov qword [rbx + 0x28], r13	       230	pingpong.c	FUNCTION_4	IF_7
0x4000632	        0x4c896330	             mov qword [rbx + 0x30], r12	       232	pingpong.c	FUNCTION_4	IF_7
0x4000636	            0x31c0	                            xor eax, eax	       241	pingpong.c	FUNCTION_4
0x4000638	     0xf1f84000000	                   nop dword [rax + rax]	       241	pingpong.c	FUNCTION_4
0x4000640	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       267	pingpong.c	FUNCTION_5
0x4000645	    0x644833142528	                xor rdx, qword fs:[0x28]	       267	pingpong.c	FUNCTION_5
0x400064e	     0xf857e000000	                           jne 0x40006d2	       267	pingpong.c	FUNCTION_5
0x4000654	    0x4881c4f00000	                           add rsp, 0xf0	       267	pingpong.c	FUNCTION_5
0x400065b	              0x5b	                                 pop rbx	       267	pingpong.c	FUNCTION_5
0x400065c	              0x5d	                                 pop rbp	       267	pingpong.c	FUNCTION_5
0x400065d	            0x415c	                                 pop r12	       267	pingpong.c	FUNCTION_5
0x400065f	            0x415d	                                 pop r13	       267	pingpong.c	FUNCTION_5
0x4000661	            0x415e	                                 pop r14	       267	pingpong.c	FUNCTION_5
0x4000663	              0xc3	                                     ret	       267	pingpong.c	FUNCTION_5
0x4000664	         0xf1f4000	                         nop dword [rax]	       267	pingpong.c	FUNCTION_5
0x4000668	      0xb81b000000	                           mov eax, 0x1b	       189	pingpong.c	FUNCTION_4	IF_2
0x400066d	            0xebd1	                           jmp 0x4000640	       189	pingpong.c	FUNCTION_4	IF_2
0x400066f	              0x90	                                     nop	       189	pingpong.c	FUNCTION_4	IF_2
0x4000670	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000675	          0x4989e8	                             mov r8, rbp	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000678	          0x4c89ea	                            mov rdx, r13	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x400067b	      0xbe02000000	                              mov esi, 2	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000680	      0xe800000000	                          call 0x4000685	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000685	            0xeb96	                           jmp 0x400061d	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000687	    0x660f1f840000	                    nop word [rax + rax]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000690	        0x8944240c	              mov dword [rsp + 0xc], eax	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000694	          0x4c89ef	                            mov rdi, r13	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x4000697	          0x41ff16	                        call qword [r14]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x400069a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x400069e	            0xeba0	                           jmp 0x4000640	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x40006a0	          0x4c89ef	                            mov rdi, r13	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x40006a3	          0x41ff16	                        call qword [r14]	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x40006a6	    0x48c743280000	               mov qword [rbx + 0x28], 0	       236	pingpong.c	FUNCTION_4	ELSE_1
0x40006ae	    0x48c743380000	               mov qword [rbx + 0x38], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x40006b6	    0x48c743300000	               mov qword [rbx + 0x30], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x40006be	      0xe800000000	                          call 0x40006c3	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x40006c3	        0x48894340	             mov qword [rbx + 0x40], rax	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x40006c7	        0x48895348	             mov qword [rbx + 0x48], rdx	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x40006cb	            0x31c0	                            xor eax, eax	       241	pingpong.c	FUNCTION_4
0x40006cd	      0xe96effffff	                           jmp 0x4000640	       241	pingpong.c	FUNCTION_4
0x40006d2	      0xe800000000	                          call 0x40006d7	       267	pingpong.c	FUNCTION_5
Curl_pp_statemach	CALL,11:FOR,0:IF,11:functions,0:ELSE,6:SWITCH,0:WHILE,0:DO,0	150
0x40000d0	            0x4157	                                push r15	        82	pingpong.c	FUNCTION_2
0x40000d2	            0x4156	                                push r14	        82	pingpong.c	FUNCTION_2
0x40000d4	            0x4155	                                push r13	        82	pingpong.c	FUNCTION_2
0x40000d6	            0x4154	                                push r12	        82	pingpong.c	FUNCTION_2
0x40000d8	          0x4189f5	                           mov r13d, esi	        82	pingpong.c	FUNCTION_2
0x40000db	              0x55	                                push rbp	        82	pingpong.c	FUNCTION_2
0x40000dc	              0x53	                                push rbx	        82	pingpong.c	FUNCTION_2
0x40000dd	          0x4989fc	                            mov r12, rdi	        82	pingpong.c	FUNCTION_2
0x40000e0	        0x4883ec08	                              sub rsp, 8	        82	pingpong.c	FUNCTION_2
0x40000e4	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	        83	pingpong.c	FUNCTION_2
0x40000e8	        0x4c8b7d00	                    mov r15, qword [rbp]	        50	pingpong.c	FUNCTION_1
0x40000ec	    0x448bb5580200	          mov r14d, dword [rbp + 0x258] 	        84	pingpong.c	FUNCTION_2
0x40000f3	    0x498b9f500300	           mov rbx, qword [r15 + 0x350] 	        53	pingpong.c	FUNCTION_1
0x40000fa	          0x4885db	                           test rbx, rbx	        54	pingpong.c	FUNCTION_1
0x40000fd	            0x7504	                           jne 0x4000103	        54	pingpong.c	FUNCTION_1
0x40000ff	        0x488b5f50	            mov rbx, qword [rdi + 0x50] 	        54	pingpong.c	FUNCTION_1
0x4000103	      0xe800000000	                          call 0x4000108	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000108	      0x498b4c2448	            mov rcx, qword [r12 + 0x48] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x400010d	          0x4889d6	                            mov rsi, rdx	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000110	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000115	          0x4889c7	                            mov rdi, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000118	      0xe800000000	                          call 0x400011d	        64	pingpong.c	FUNCTION_1	CALL_2
0x400011d	    0x4d8bbf300300	           mov r15, qword [r15 + 0x330] 	        66	pingpong.c	FUNCTION_1	IF_1
0x4000124	          0x4829c3	                            sub rbx, rax	        63	pingpong.c	FUNCTION_1
0x4000127	          0x4d85ff	                           test r15, r15	        66	pingpong.c	FUNCTION_1	IF_1
0x400012a	            0x7428	                            je 0x4000154	        66	pingpong.c	FUNCTION_1	IF_1
0x400012c	      0xe800000000	                          call 0x4000131	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000131	    0x488b8d400200	           mov rcx, qword [rbp + 0x240] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000138	          0x4889d6	                            mov rsi, rdx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x400013b	    0x488b95380200	           mov rdx, qword [rbp + 0x238] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000142	          0x4889c7	                            mov rdi, rax	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000145	      0xe800000000	                          call 0x400014a	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x400014a	          0x4929c7	                            sub r15, rax	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x400014d	          0x4c39fb	                            cmp rbx, r15	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x4000150	        0x490f4fdf	                          cmovg rbx, r15	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x4000154	          0x4885db	                           test rbx, rbx	        91	pingpong.c	FUNCTION_2	IF_1
0x4000157	        0x4c8b7d00	                    mov r15, qword [rbp]	        88	pingpong.c	FUNCTION_2
0x400015b	     0xf8ebf000000	                           jle 0x4000220	        91	pingpong.c	FUNCTION_2	IF_1
0x4000161	          0x4584ed	                         test r13b, r13b	        96	pingpong.c	FUNCTION_2	IF_2
0x4000164	     0xf8486000000	                            je 0x40001f0	        96	pingpong.c	FUNCTION_2	IF_2
0x400016a	    0x4881fbe80300	                          cmp rbx, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x4000171	      0xb8e8030000	                          mov eax, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x4000176	          0x4889ef	                            mov rdi, rbp	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000179	        0x480f4dd8	                         cmovge rbx, rax	        97	pingpong.c	FUNCTION_2	IF_2
0x400017d	            0x31f6	                            xor esi, esi	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400017f	      0xe800000000	                          call 0x4000184	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000184	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000186	     0xf85e4000000	                           jne 0x4000270	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400018c	    0x49837c243000	               cmp qword [r12 + 0x30], 0	       520	pingpong.c	FUNCTION_10
0x4000192	     0xf84b0000000	                            je 0x4000248	       520	pingpong.c	FUNCTION_10
0x4000198	          0x4489f2	                           mov edx, r14d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400019b	      0xbfffffffff	                     mov edi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40001a0	          0x4889d9	                            mov rcx, rbx	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40001a3	      0xbeffffffff	                     mov esi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40001a8	      0xe800000000	                          call 0x40001ad	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40001ad	          0x4584ed	                         test r13b, r13b	       118	pingpong.c	FUNCTION_2	IF_7
0x40001b0	            0x89c3	                            mov ebx, eax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40001b2	     0xf85bd000000	                           jne 0x4000275	       118	pingpong.c	FUNCTION_2	IF_7
0x40001b8	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       129	pingpong.c	FUNCTION_2	IF_10
0x40001bb	     0xf85e7000000	                           jne 0x40002a8	       129	pingpong.c	FUNCTION_2	IF_10
0x40001c1	    0x488d35000000	                   lea rsi, [0x040001c8]	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40001c8	          0x4c89ff	                            mov rdi, r15	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40001cb	            0x31c0	                            xor eax, eax	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40001cd	      0xe800000000	                          call 0x40001d2	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40001d2	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x40001d6	      0xb81b000000	                           mov eax, 0x1b	       131	pingpong.c	FUNCTION_2	IF_10
0x40001db	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x40001dc	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x40001dd	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x40001df	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x40001e1	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x40001e3	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x40001e5	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x40001e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       137	pingpong.c	FUNCTION_2
0x40001f0	            0x31f6	                            xor esi, esi	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40001f2	          0x4889ef	                            mov rdi, rbp	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40001f5	            0x31db	                            xor ebx, ebx	       102	pingpong.c	FUNCTION_2	ELSE_1
0x40001f7	      0xe800000000	                          call 0x40001fc	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40001fc	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40001fe	            0x748c	                            je 0x400018c	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000200	      0x498b442460	            mov rax, qword [r12 + 0x60] 	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000205	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x4000209	          0x4889ef	                            mov rdi, rbp	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x400020c	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x400020d	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x400020e	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x4000210	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x4000212	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x4000214	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x4000216	            0xffe0	                                 jmp rax	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000218	     0xf1f84000000	                   nop dword [rax + rax]	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000220	    0x488d35000000	                   lea rsi, [0x04000227]	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000227	            0x31c0	                            xor eax, eax	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000229	          0x4c89ff	                            mov rdi, r15	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x400022c	      0xe800000000	                          call 0x4000231	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000231	      0xb81c000000	                           mov eax, 0x1c	        93	pingpong.c	FUNCTION_2	IF_1
0x4000236	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x400023a	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x400023b	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x400023c	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x400023e	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x4000240	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x4000242	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x4000244	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x4000245	           0xf1f00	                         nop dword [rax]	       137	pingpong.c	FUNCTION_2
0x4000248	      0x49833c2400	                      cmp qword [r12], 0	       519	pingpong.c	FUNCTION_10
0x400024d	            0x740c	                            je 0x400025b	       519	pingpong.c	FUNCTION_10
0x400024f	      0x498b442408	                mov rax, qword [r12 + 8]	       520	pingpong.c	FUNCTION_10
0x4000254	      0x4939442410	            cmp qword [r12 + 0x10], rax 	       520	pingpong.c	FUNCTION_10
0x4000259	            0x720e	                            jb 0x4000269	       520	pingpong.c	FUNCTION_10
0x400025b	            0x31f6	                            xor esi, esi	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400025d	          0x4889ef	                            mov rdi, rbp	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000260	      0xe800000000	                          call 0x4000265	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000265	            0x84c0	                             test al, al	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000267	            0x7458	                            je 0x40002c1	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000269	          0x4584ed	                         test r13b, r13b	       118	pingpong.c	FUNCTION_2	IF_7
0x400026c	            0x7492	                            je 0x4000200	       118	pingpong.c	FUNCTION_2	IF_7
0x400026e	            0x6690	                                     nop	       118	pingpong.c	FUNCTION_2	IF_7
0x4000270	      0xbb01000000	                              mov ebx, 1	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000275	          0x4889ef	                            mov rdi, rbp	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000278	      0xe800000000	                          call 0x400027d	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x400027d	            0x89c2	                            mov edx, eax	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x400027f	      0xb82a000000	                           mov eax, 0x2a	       121	pingpong.c	FUNCTION_2	IF_7	IF_8
0x4000284	            0x85d2	                           test edx, edx	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000286	            0x75ae	                           jne 0x4000236	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000288	      0xe800000000	                          call 0x400028d	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x400028d	          0x4c89ff	                            mov rdi, r15	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000290	          0x4889c6	                            mov rsi, rax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000293	      0xe800000000	                          call 0x4000298	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000298	            0x85c0	                           test eax, eax	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x400029a	     0xf8418ffffff	                            je 0x40001b8	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x40002a0	            0xeb94	                           jmp 0x4000236	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x40002a2	    0x660f1f440000	                    nop word [rax + rax]	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x40002a8	            0x85db	                           test ebx, ebx	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40002aa	     0xf8550ffffff	                           jne 0x4000200	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40002b0	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x40002b4	            0x31c0	                            xor eax, eax	       137	pingpong.c	FUNCTION_2
0x40002b6	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x40002b7	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x40002b8	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x40002ba	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x40002bc	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x40002be	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x40002c0	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x40002c1	          0x83caff	                      or edx, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40002c4	    0x49837c243000	               cmp qword [r12 + 0x30], 0	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40002ca	            0x89d7	                            mov edi, edx	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40002cc	        0x410f44fe	                         cmove edi, r14d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40002d0	        0x410f45d6	                        cmovne edx, r14d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x40002d4	      0xe9c7feffff	                           jmp 0x40001a0	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
Curl_pp_readresp	CALL,17:FOR,1:IF,20:functions,0:ELSE,7:SWITCH,0:WHILE,1:DO,0	240
0x40006e0	            0x4157	                                push r15	       278	pingpong.c	FUNCTION_6
0x40006e2	            0x4156	                                push r14	       278	pingpong.c	FUNCTION_6
0x40006e4	    0x41bf01000000	                             mov r15d, 1	       280	pingpong.c	FUNCTION_6
0x40006ea	            0x4155	                                push r13	       278	pingpong.c	FUNCTION_6
0x40006ec	            0x4154	                                push r12	       278	pingpong.c	FUNCTION_6
0x40006ee	          0x4989f6	                            mov r14, rsi	       278	pingpong.c	FUNCTION_6
0x40006f1	              0x55	                                push rbp	       278	pingpong.c	FUNCTION_6
0x40006f2	              0x53	                                push rbx	       278	pingpong.c	FUNCTION_6
0x40006f3	        0x4883ec58	                           sub rsp, 0x58	       278	pingpong.c	FUNCTION_6
0x40006f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       278	pingpong.c	FUNCTION_6
0x4000700	      0x4889442448	             mov qword [rsp + 0x48], rax	       278	pingpong.c	FUNCTION_6
0x4000705	            0x31c0	                            xor eax, eax	       278	pingpong.c	FUNCTION_6
0x4000707	        0x488b4658	            mov rax, qword [rsi + 0x58] 	       283	pingpong.c	FUNCTION_6
0x400070b	      0x4889542418	             mov qword [rsp + 0x18], rdx	       278	pingpong.c	FUNCTION_6
0x4000710	        0x897c2424	             mov dword [rsp + 0x24], edi	       278	pingpong.c	FUNCTION_6
0x4000714	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000719	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       278	pingpong.c	FUNCTION_6
0x400071e	          0x488b28	                    mov rbp, qword [rax]	       284	pingpong.c	FUNCTION_6
0x4000721	      0x4889442408	                mov qword [rsp + 8], rax	       283	pingpong.c	FUNCTION_6
0x4000726	            0x31c0	                            xor eax, eax	       286	pingpong.c	FUNCTION_6
0x4000728	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400072d	    0x4c8bad200d00	           mov r13, qword [rbp + 0xd20] 	       285	pingpong.c	FUNCTION_6
0x4000734	    0xc70200000000	                      mov dword [rdx], 0	       288	pingpong.c	FUNCTION_6
0x400073a	    0x48c701000000	                      mov qword [rcx], 0	       289	pingpong.c	FUNCTION_6
0x4000741	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       291	pingpong.c	FUNCTION_6
0x4000745	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       291	pingpong.c	FUNCTION_6
0x400074c	      0x498d5c1500	                    lea rbx, [r13 + rdx]	       291	pingpong.c	FUNCTION_6
0x4000751	          0x4989dc	                            mov r12, rbx	       294	pingpong.c	FUNCTION_6
0x4000754	        0x4c2b6618	             sub r12, qword [rsi + 0x18]	       294	pingpong.c	FUNCTION_6
0x4000758	            0xeb7a	                           jmp 0x40007d4	       296	pingpong.c	FUNCTION_6	WHILE_1
0x400075a	    0x660f1f440000	                    nop word [rax + rax]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000760	        0x498b5608	                mov rdx, qword [r14 + 8]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000764	      0x498d440d01	                lea rax, [r13 + rcx + 1]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000769	        0x488d3c13	                    lea rdi, [rbx + rdx]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x400076d	          0x4839c7	                            cmp rdi, rax	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000770	     0xf871a020000	                            ja 0x4000990	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000776	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_11	CALL_3
0x4000779	      0xe800000000	                          call 0x400077e	        53	string3.h	FUNCTION_11	CALL_3
0x400077e	        0x498b4608	                mov rax, qword [r14 + 8]	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000782	          0x498b3e	                    mov rdi, qword [r14]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000785	      0x4889442440	             mov qword [rsp + 0x40], rax	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400078a	    0x488b05000000	            mov rax, qword [0x04000791] 	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000791	            0xff10	                        call qword [rax]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000793	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000798	    0x49c706000000	                      mov qword [r14], 0	       314	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400079f	    0x49c746080000	                  mov qword [r14 + 8], 0	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007a7	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40007aa	     0xf8fbe000000	                            jg 0x400086e	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40007b0	    0x488d35000000	                   lea rsi, [0x040007b7]	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007b7	            0x31c0	                            xor eax, eax	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007b9	          0x4889ef	                            mov rdi, rbp	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007bc	          0x4531ff	                          xor r15d, r15d	       347	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40007bf	      0xe800000000	                          call 0x40007c4	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007c4	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007c8	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x40007cf	      0xb838000000	                           mov eax, 0x38	       348	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40007d4	          0x4839d1	                            cmp rcx, rdx	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007d7	            0x7657	                           jbe 0x4000830	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007d9	            0x85c0	                           test eax, eax	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007db	            0x7553	                           jne 0x4000830	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007dd	          0x4584ff	                         test r15b, r15b	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007e0	            0x744e	                            je 0x4000830	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007e2	          0x498b36	                    mov rsi, qword [r14]	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007e5	          0x4885f6	                           test rsi, rsi	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007e8	     0xf8572ffffff	                           jne 0x4000760	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007ee	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40007f3	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40007f7	          0x4829d1	                            sub rcx, rdx	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40007fa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40007ff	          0x4889da	                            mov rdx, rbx	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000802	      0xe800000000	                          call 0x4000807	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000807	          0x83f851	                           cmp eax, 0x51	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x400080a	     0xf845c020000	                            je 0x4000a6c	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000810	            0x85c0	                           test eax, eax	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000812	            0x744c	                            je 0x4000860	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000814	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000818	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x400081f	          0x4531ff	                          xor r15d, r15d	       341	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_5
0x4000822	          0x4839d1	                            cmp rcx, rdx	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000825	            0x77b2	                            ja 0x40007d9	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000827	    0x660f1f840000	                    nop word [rax + rax]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000830	      0x41c6462000	                mov byte [r14 + 0x20], 0	       461	pingpong.c	FUNCTION_6
0x4000835	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       464	pingpong.c	FUNCTION_6
0x400083a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       464	pingpong.c	FUNCTION_6
0x4000843	     0xf856e020000	                           jne 0x4000ab7	       464	pingpong.c	FUNCTION_6
0x4000849	        0x4883c458	                           add rsp, 0x58	       464	pingpong.c	FUNCTION_6
0x400084d	              0x5b	                                 pop rbx	       464	pingpong.c	FUNCTION_6
0x400084e	              0x5d	                                 pop rbp	       464	pingpong.c	FUNCTION_6
0x400084f	            0x415c	                                 pop r12	       464	pingpong.c	FUNCTION_6
0x4000851	            0x415d	                                 pop r13	       464	pingpong.c	FUNCTION_6
0x4000853	            0x415e	                                 pop r14	       464	pingpong.c	FUNCTION_6
0x4000855	            0x415f	                                 pop r15	       464	pingpong.c	FUNCTION_6
0x4000857	              0xc3	                                     ret	       464	pingpong.c	FUNCTION_6
0x4000858	     0xf1f84000000	                   nop dword [rax + rax]	       464	pingpong.c	FUNCTION_6
0x4000860	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000865	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000868	     0xf8e42ffffff	                           jle 0x40007b0	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400086e	        0x4c8d4b01	                       lea r9, [rbx + 1]	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000872	          0x4531ff	                          xor r15d, r15d	       278	pingpong.c	FUNCTION_6
0x4000875	    0x480185f00000	            add qword [rbp + 0xf0], rax 	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400087c	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       278	pingpong.c	FUNCTION_6
0x4000881	        0x49014610	            add qword [r14 + 0x10], rax 	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000885	          0x4c89fd	                            mov rbp, r15	       278	pingpong.c	FUNCTION_6
0x4000888	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       278	pingpong.c	FUNCTION_6
0x400088d	          0x4c89cb	                             mov rbx, r9	       278	pingpong.c	FUNCTION_6
0x4000890	          0x4d89f5	                            mov r13, r14	       278	pingpong.c	FUNCTION_6
0x4000893	          0x4d89e6	                            mov r14, r12	       278	pingpong.c	FUNCTION_6
0x4000896	            0xeb6e	                           jmp 0x4000906	       278	pingpong.c	FUNCTION_6
0x4000898	     0xf1f84000000	                   nop dword [rax + rax]	       278	pingpong.c	FUNCTION_6
0x40008a0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40008a5	    0x80b8e8070000	               cmp byte [rax + 0x7e8], 0	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40008ac	     0xf85b6000000	                           jne 0x4000968	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40008b2	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40008b6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40008bb	          0x4c89f1	                            mov rcx, r14	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40008be	      0xbe02000000	                              mov esi, 2	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40008c3	      0xe800000000	                          call 0x40008c8	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40008c8	            0x85c0	                           test eax, eax	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x40008ca	     0xf8565ffffff	                           jne 0x4000835	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x40008d0	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008d4	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008d9	          0x4c89f2	                            mov rdx, r14	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008dc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008e1	        0x41ff5568	                 call qword [r13 + 0x68]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008e5	            0x84c0	                             test al, al	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008e7	     0xf85be000000	                           jne 0x40009ab	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008ed	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x40008f2	        0x4883c501	                              add rbp, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x40008f6	        0x49895d18	             mov qword [r13 + 0x18], rbx	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x40008fa	          0x4531f6	                          xor r14d, r14d	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x40008fd	        0x4883c301	                              add rbx, 1	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000901	          0x4839e8	                            cmp rax, rbp	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000904	            0x7e1e	                           jle 0x4000924	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000906	        0x4983c601	                              add r14, 1	       363	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400090a	        0x807bff0a	                 cmp byte [rbx - 1], 0xa	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400090e	        0x4c8d63ff	                      lea r12, [rbx - 1]	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000912	          0x4989df	                            mov r15, rbx	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000915	            0x7489	                            je 0x40008a0	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000917	        0x4883c501	                              add rbp, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400091b	        0x4883c301	                              add rbx, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400091f	          0x4839e8	                            cmp rax, rbp	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000922	            0x7fe2	                            jg 0x4000906	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000924	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000929	          0x4d89f4	                            mov r12, r14	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400092c	          0x4c89fb	                            mov rbx, r15	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400092f	          0x4939c4	                            cmp r12, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000932	          0x4d89ee	                            mov r14, r13	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000935	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400093a	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000941	     0xf842c010000	                            je 0x4000a73	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000947	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x400094b	          0x4889c8	                            mov rax, rcx	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x400094e	          0x48d1e8	                              shr rax, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000951	          0x4839c2	                            cmp rdx, rax	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000954	     0xf8605010000	                           jbe 0x4000a5f	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x400095a	    0x41bf01000000	                             mov r15d, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000960	      0xe9a7000000	                           jmp 0x4000a0c	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000965	           0xf1f00	                         nop dword [rax]	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000968	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x400096c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000971	          0x4c89f1	                            mov rcx, r14	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000974	      0xbe01000000	                              mov esi, 1	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000979	          0x4889c7	                            mov rdi, rax	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x400097c	      0xe800000000	                          call 0x4000981	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000981	      0xe92cffffff	                           jmp 0x40008b2	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000986	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x4000990	    0x488d35000000	                   lea rsi, [0x04000997]	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x4000997	            0x31c0	                            xor eax, eax	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x4000999	          0x4889ef	                            mov rdi, rbp	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x400099c	      0xe800000000	                          call 0x40009a1	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40009a1	      0xb838000000	                           mov eax, 0x38	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40009a6	      0xe98afeffff	                           jmp 0x4000835	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40009ab	          0x4d89ee	                            mov r14, r13	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40009ae	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40009b3	          0x4c89e3	                            mov rbx, r12	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009b6	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009ba	          0x4989ef	                            mov r15, rbp	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009bd	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009c2	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_12	CALL_3
0x40009c5	          0x4829f3	                            sub rbx, rsi	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009c8	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_12	CALL_3
0x40009cb	      0xe800000000	                          call 0x40009d0	        59	string3.h	FUNCTION_12	CALL_3
0x40009d0	          0x4c89e0	                            mov rax, r12	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009d3	    0x41c6441d0000	                 mov byte [r13 + rbx], 0	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009d9	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009de	        0x4883c001	                              add rax, 1	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009e2	        0x4d8d5701	                      lea r10, [r15 + 1]	       394	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009e6	          0x4531ff	                          xor r15d, r15d	       392	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009e9	        0x49894618	             mov qword [r14 + 0x18], rax	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009ed	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009f1	          0x488903	                    mov qword [rbx], rax	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x40009f4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x40009f9	    0x49c746100000	               mov qword [r14 + 0x10], 0	       397	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a01	          0x4989c4	                            mov r12, rax	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000a04	          0x4d29d4	                            sub r12, r10	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000a07	          0x4939c2	                            cmp r10, rax	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000a0a	            0x7431	                            je 0x4000a3d	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000a0c	          0x4d85e4	                           test r12, r12	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000a0f	          0x4c89e7	                            mov rdi, r12	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000a12	            0x7429	                            je 0x4000a3d	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000a14	    0x488b05000000	            mov rax, qword [0x04000a1b] 	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000a1b	        0x49897e08	                mov qword [r14 + 8], rdi	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000a1f	            0xff10	                        call qword [rax]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000a21	          0x4885c0	                           test rax, rax	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000a24	          0x498906	                    mov qword [r14], rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000a27	     0xf8480000000	                            je 0x4000aad	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000a2d	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_11	CALL_3
0x4000a31	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_11	CALL_3
0x4000a35	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_11	CALL_3
0x4000a38	      0xe800000000	                          call 0x4000a3d	        53	string3.h	FUNCTION_11	CALL_3
0x4000a3d	    0x49c746100000	               mov qword [r14 + 0x10], 0	       452	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a45	        0x4d896e18	             mov qword [r14 + 0x18], r13	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a49	          0x4c89eb	                            mov rbx, r13	       285	pingpong.c	FUNCTION_6
0x4000a4c	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       285	pingpong.c	FUNCTION_6
0x4000a53	            0x31d2	                            xor edx, edx	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a55	            0x31c0	                            xor eax, eax	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a57	          0x4531e4	                          xor r12d, r12d	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a5a	      0xe975fdffff	                           jmp 0x40007d4	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a5f	            0x31c0	                            xor eax, eax	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a61	    0x41bf01000000	                             mov r15d, 1	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a67	      0xe968fdffff	                           jmp 0x40007d4	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000a6c	            0x31c0	                            xor eax, eax	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000a6e	      0xe9c2fdffff	                           jmp 0x4000835	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000a73	          0x4889c8	                            mov rax, rcx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a76	        0x48c1e83f	                           shr rax, 0x3f	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a7a	          0x4801c8	                            add rax, rcx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a7d	          0x48d1f8	                              sar rax, 1	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a80	          0x4939c4	                            cmp r12, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a83	     0xf8ebefeffff	                           jle 0x4000947	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000a89	    0x488d35000000	                   lea rsi, [0x04000a90]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000a90	          0x4889ef	                            mov rdi, rbp	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000a93	          0x4c89e2	                            mov rdx, r12	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000a96	            0x31c0	                            xor eax, eax	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000a98	    0x41bf01000000	                             mov r15d, 1	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000a9e	      0xe800000000	                          call 0x4000aa3	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000aa3	      0xbf28000000	                           mov edi, 0x28	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000aa8	      0xe967ffffff	                           jmp 0x4000a14	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000aad	      0xb81b000000	                           mov eax, 0x1b	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000ab2	      0xe97efdffff	                           jmp 0x4000835	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000ab7	      0xe800000000	                          call 0x4000abc	       464	pingpong.c	FUNCTION_6
Curl_pp_getsock	CALL,2:FOR,0:IF,2:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	11
0x4000ac0	            0x31c0	                            xor eax, eax	       473	pingpong.c	FUNCTION_7	IF_1
0x4000ac2	            0x85d2	                           test edx, edx	       472	pingpong.c	FUNCTION_7	IF_1
0x4000ac4	            0x741d	                            je 0x4000ae3	       472	pingpong.c	FUNCTION_7	IF_1
0x4000ac6	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       475	pingpong.c	FUNCTION_7
0x4000aca	      0x48837f3001	               cmp qword [rdi + 0x30], 1	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000acf	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       475	pingpong.c	FUNCTION_7
0x4000ad5	            0x8906	                    mov dword [rsi], eax	       475	pingpong.c	FUNCTION_7
0x4000ad7	            0x19c0	                            sbb eax, eax	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000ad9	      0x250100ffff	                     and eax, 0xffff0001	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000ade	       0x500000100	                        add eax, 0x10000	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000ae3	            0xf3c3	                                     ret	       484	pingpong.c	FUNCTION_7
Curl_pp_disconnect	CALL,1:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	9
0x4000ba0	    0x488b05000000	            mov rax, qword [0x04000ba7] 	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000ba7	              0x53	                                push rbx	       511	pingpong.c	FUNCTION_9
0x4000ba8	          0x4889fb	                            mov rbx, rdi	       511	pingpong.c	FUNCTION_9
0x4000bab	          0x488b3f	                    mov rdi, qword [rdi]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000bae	            0xff10	                        call qword [rax]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000bb0	    0x48c703000000	                      mov qword [rbx], 0	       513	pingpong.c	FUNCTION_9
0x4000bb7	            0x31c0	                            xor eax, eax	       515	pingpong.c	FUNCTION_9
0x4000bb9	              0x5b	                                 pop rbx	       515	pingpong.c	FUNCTION_9
0x4000bba	              0xc3	                                     ret	       515	pingpong.c	FUNCTION_9
Curl_pp_flushsend	CALL,3:FOR,0:IF,2:functions,0:ELSE,1:SWITCH,0:WHILE,0:DO,0	44
0x4000af0	              0x55	                                push rbp	       487	pingpong.c	FUNCTION_8
0x4000af1	              0x53	                                push rbx	       487	pingpong.c	FUNCTION_8
0x4000af2	          0x4889fb	                            mov rbx, rdi	       487	pingpong.c	FUNCTION_8
0x4000af5	        0x4883ec18	                           sub rsp, 0x18	       487	pingpong.c	FUNCTION_8
0x4000af9	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	       493	pingpong.c	FUNCTION_8
0x4000afd	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b01	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       489	pingpong.c	FUNCTION_8
0x4000b05	          0x4989e0	                             mov r8, rsp	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b08	    0x64488b042528	                mov rax, qword fs:[0x28]	       487	pingpong.c	FUNCTION_8
0x4000b11	      0x4889442408	                mov qword [rsp + 8], rax	       487	pingpong.c	FUNCTION_8
0x4000b16	            0x31c0	                            xor eax, eax	       487	pingpong.c	FUNCTION_8
0x4000b18	          0x4829ca	                            sub rdx, rcx	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b1b	        0x48035328	             add rdx, qword [rbx + 0x28]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b1f	    0x8bb758020000	           mov esi, dword [rdi + 0x258] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b25	      0xe800000000	                          call 0x4000b2a	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b2a	            0x85c0	                           test eax, eax	       494	pingpong.c	FUNCTION_8	IF_1
0x4000b2c	            0x89c5	                            mov ebp, eax	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000b2e	            0x7514	                           jne 0x4000b44	       494	pingpong.c	FUNCTION_8	IF_1
0x4000b30	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       497	pingpong.c	FUNCTION_8	IF_2
0x4000b34	        0x488b1424	                    mov rdx, qword [rsp]	       497	pingpong.c	FUNCTION_8	IF_2
0x4000b38	          0x4839d0	                            cmp rax, rdx	       497	pingpong.c	FUNCTION_8	IF_2
0x4000b3b	            0x7423	                            je 0x4000b60	       497	pingpong.c	FUNCTION_8	IF_2
0x4000b3d	          0x4829d0	                            sub rax, rdx	       499	pingpong.c	FUNCTION_8	IF_2
0x4000b40	        0x48894330	             mov qword [rbx + 0x30], rax	       499	pingpong.c	FUNCTION_8	IF_2
0x4000b44	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	pingpong.c	FUNCTION_8
0x4000b49	    0x644833342528	                xor rsi, qword fs:[0x28]	       508	pingpong.c	FUNCTION_8
0x4000b52	            0x89e8	                            mov eax, ebp	       508	pingpong.c	FUNCTION_8
0x4000b54	            0x753e	                           jne 0x4000b94	       508	pingpong.c	FUNCTION_8
0x4000b56	        0x4883c418	                           add rsp, 0x18	       508	pingpong.c	FUNCTION_8
0x4000b5a	              0x5b	                                 pop rbx	       508	pingpong.c	FUNCTION_8
0x4000b5b	              0x5d	                                 pop rbp	       508	pingpong.c	FUNCTION_8
0x4000b5c	              0xc3	                                     ret	       508	pingpong.c	FUNCTION_8
0x4000b5d	           0xf1f00	                         nop dword [rax]	       508	pingpong.c	FUNCTION_8
0x4000b60	    0x488b05000000	            mov rax, qword [0x04000b67] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b67	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b6b	            0xff10	                        call qword [rax]	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000b6d	    0x48c743280000	               mov qword [rbx + 0x28], 0	       503	pingpong.c	FUNCTION_8	ELSE_1
0x4000b75	    0x48c743380000	               mov qword [rbx + 0x38], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000b7d	    0x48c743300000	               mov qword [rbx + 0x30], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000b85	      0xe800000000	                          call 0x4000b8a	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b8a	        0x48894340	             mov qword [rbx + 0x40], rax	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b8e	        0x48895348	             mov qword [rbx + 0x48], rdx	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b92	            0xebb0	                           jmp 0x4000b44	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000b94	      0xe800000000	                          call 0x4000b99	       508	pingpong.c	FUNCTION_8
