pop3_setup_connection	SWITCH,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0:IF,1:CALL,1	25
0x4000040	              0x55	                                push rbp	      1305	pop3.c	FUNCTION_35
0x4000041	              0x53	                                push rbx	      1305	pop3.c	FUNCTION_35
0x4000042	          0x4889fd	                            mov rbp, rdi	      1305	pop3.c	FUNCTION_35
0x4000045	      0xbe01000000	                              mov esi, 1	      1045	pop3.c	FUNCTION_25	CALL_1
0x400004a	        0x4883ec08	                              sub rsp, 8	      1305	pop3.c	FUNCTION_35
0x400004e	    0x488b05000000	            mov rax, qword [0x04000055] 	      1045	pop3.c	FUNCTION_25	CALL_1
0x4000055	          0x488b1f	                    mov rbx, qword [rdi]	      1306	pop3.c	FUNCTION_35
0x4000058	      0xbf18000000	                           mov edi, 0x18	      1045	pop3.c	FUNCTION_25	CALL_1
0x400005d	            0xff10	                        call qword [rax]	      1045	pop3.c	FUNCTION_25	CALL_1
0x400005f	          0x4885c0	                           test rax, rax	      1046	pop3.c	FUNCTION_25	IF_1
0x4000062	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      1045	pop3.c	FUNCTION_25	CALL_1
0x4000069	            0x741d	                            je 0x4000088	      1046	pop3.c	FUNCTION_25	IF_1
0x400006b	    0xc68598030000	               mov byte [rbp + 0x398], 0	      1314	pop3.c	FUNCTION_35
0x4000072	    0x488383185100	             add qword [rbx + 0x5118], 1	      1315	pop3.c	FUNCTION_35
0x400007a	        0x4883c408	                              add rsp, 8	      1318	pop3.c	FUNCTION_35
0x400007e	            0x31c0	                            xor eax, eax	      1317	pop3.c	FUNCTION_35
0x4000080	              0x5b	                                 pop rbx	      1318	pop3.c	FUNCTION_35
0x4000081	              0x5d	                                 pop rbp	      1318	pop3.c	FUNCTION_35
0x4000082	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_35
0x4000083	       0xf1f440000	                   nop dword [rax + rax]	      1318	pop3.c	FUNCTION_35
0x4000088	        0x4883c408	                              add rsp, 8	      1318	pop3.c	FUNCTION_35
0x400008c	      0xb81b000000	                           mov eax, 0x1b	      1047	pop3.c	FUNCTION_25	IF_1
0x4000091	              0x5b	                                 pop rbx	      1318	pop3.c	FUNCTION_35
0x4000092	              0x5d	                                 pop rbp	      1318	pop3.c	FUNCTION_35
0x4000093	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_35
pop3_getsock	SWITCH,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0:IF,0:CALL,1	2
0x4000180	    0x4881c7500600	                          add rdi, 0x650	      1056	pop3.c	FUNCTION_26	CALL_1
0x4000187	      0xe900000000	                           jmp 0x400018c	      1056	pop3.c	FUNCTION_26	CALL_1
pop3_doing	SWITCH,0:WHILE,0:ELSE,1:DO,0:FOR,0:functions,0:IF,2:CALL,6	32
0x40006b0	              0x55	                                push rbp	      1255	pop3.c	FUNCTION_33
0x40006b1	              0x53	                                push rbx	      1255	pop3.c	FUNCTION_33
0x40006b2	          0x4889f5	                            mov rbp, rsi	      1255	pop3.c	FUNCTION_33
0x40006b5	          0x4889fb	                            mov rbx, rdi	      1255	pop3.c	FUNCTION_33
0x40006b8	        0x4883ec08	                              sub rsp, 8	      1255	pop3.c	FUNCTION_33
0x40006bc	    0x488b87e00300	           mov rax, qword [rdi + 0x3e0] 	      1014	pop3.c	FUNCTION_23	IF_1
0x40006c3	    0xf68084000000	               test byte [rax + 0x84], 1	      1014	pop3.c	FUNCTION_23	IF_1
0x40006ca	            0x7409	                            je 0x40006d5	      1014	pop3.c	FUNCTION_23	IF_1
0x40006cc	    0x80bfc4060000	               cmp byte [rdi + 0x6c4], 0	      1014	pop3.c	FUNCTION_23	IF_1
0x40006d3	            0x742b	                            je 0x4000700	      1014	pop3.c	FUNCTION_23	IF_1
0x40006d5	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1020	pop3.c	FUNCTION_23	CALL_2
0x40006dc	            0x31f6	                            xor esi, esi	      1020	pop3.c	FUNCTION_23	CALL_2
0x40006de	      0xe800000000	                          call 0x40006e3	      1020	pop3.c	FUNCTION_23	CALL_2
0x40006e3	    0x8b93c0060000	           mov edx, dword [rbx + 0x6c0] 	      1021	pop3.c	FUNCTION_23
0x40006e9	            0x85d2	                           test edx, edx	      1021	pop3.c	FUNCTION_23
0x40006eb	         0xf944500	                         sete byte [rbp]	      1021	pop3.c	FUNCTION_23
0x40006ef	            0x85c0	                           test eax, eax	      1258	pop3.c	FUNCTION_33	IF_1
0x40006f1	            0x7502	                           jne 0x40006f5	      1258	pop3.c	FUNCTION_33	IF_1
0x40006f3	            0x31c0	                            xor eax, eax	      1258	pop3.c	FUNCTION_33	IF_1
0x40006f5	        0x4883c408	                              add rsp, 8	      1267	pop3.c	FUNCTION_33
0x40006f9	              0x5b	                                 pop rbx	      1267	pop3.c	FUNCTION_33
0x40006fa	              0x5d	                                 pop rbp	      1267	pop3.c	FUNCTION_33
0x40006fb	              0xc3	                                     ret	      1267	pop3.c	FUNCTION_33
0x40006fc	         0xf1f4000	                         nop dword [rax]	      1267	pop3.c	FUNCTION_33
0x4000700	    0x488d97c40600	                  lea rdx, [rdi + 0x6c4]	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x4000707	            0x31f6	                            xor esi, esi	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x4000709	      0xe800000000	                          call 0x400070e	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x400070e	            0x85c0	                           test eax, eax	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x4000710	            0x75e3	                           jne 0x40006f5	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x4000712	    0x80bbc4060000	               cmp byte [rbx + 0x6c4], 0	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x4000719	            0x75ba	                           jne 0x40006d5	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x400071b	            0xebd6	                           jmp 0x40006f3	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
pop3_statemach_act	SWITCH,1:WHILE,0:ELSE,0:DO,1:FOR,0:functions,0:IF,4:CALL,13	461
0x4000e60	            0x4157	                                push r15	       935	pop3.c	FUNCTION_22
0x4000e62	            0x4156	                                push r14	       935	pop3.c	FUNCTION_22
0x4000e64	            0x4155	                                push r13	       935	pop3.c	FUNCTION_22
0x4000e66	            0x4154	                                push r12	       935	pop3.c	FUNCTION_22
0x4000e68	              0x55	                                push rbp	       935	pop3.c	FUNCTION_22
0x4000e69	              0x53	                                push rbx	       935	pop3.c	FUNCTION_22
0x4000e6a	    0x488daf500600	                  lea rbp, [rdi + 0x650]	       940	pop3.c	FUNCTION_22
0x4000e71	          0x4889fb	                            mov rbx, rdi	       935	pop3.c	FUNCTION_22
0x4000e74	        0x4883ec68	                           sub rsp, 0x68	       935	pop3.c	FUNCTION_22
0x4000e78	    0x448baf580200	          mov r13d, dword [rdi + 0x258] 	       937	pop3.c	FUNCTION_22
0x4000e7f	    0x64488b042528	                mov rax, qword fs:[0x28]	       935	pop3.c	FUNCTION_22
0x4000e88	      0x4889442458	             mov qword [rsp + 0x58], rax	       935	pop3.c	FUNCTION_22
0x4000e8d	            0x31c0	                            xor eax, eax	       935	pop3.c	FUNCTION_22
0x4000e8f	    0x83bfc0060000	              cmp dword [rdi + 0x6c0], 4	       944	pop3.c	FUNCTION_22	IF_1
0x4000e96	    0x48c744244800	               mov qword [rsp + 0x48], 0	       941	pop3.c	FUNCTION_22
0x4000e9f	     0xf8403060000	                            je 0x40014a8	       944	pop3.c	FUNCTION_22	IF_1
0x4000ea5	    0x4883bf800600	              cmp qword [rdi + 0x680], 0	       948	pop3.c	FUNCTION_22	IF_2
0x4000ead	     0xf85ad040000	                           jne 0x4001360	       948	pop3.c	FUNCTION_22	IF_2
0x4000eb3	      0x488d442444	                   lea rax, [rsp + 0x44]	       948	pop3.c	FUNCTION_22	IF_2
0x4000eb8	      0x4c8d742448	                   lea r14, [rsp + 0x48]	       948	pop3.c	FUNCTION_22	IF_2
0x4000ebd	    0x4c8d25000000	                   lea r12, [0x04000ec4]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000ec4	      0x4889442408	                mov qword [rsp + 8], rax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000ec9	      0x488d442450	                   lea rax, [rsp + 0x50]	       784	pop3.c	FUNCTION_17	CALL_1
0x4000ece	      0x4889442410	             mov qword [rsp + 0x10], rax	       784	pop3.c	FUNCTION_17	CALL_1
0x4000ed3	    0x488d87d80600	                  lea rax, [rdi + 0x6d8]	       784	pop3.c	FUNCTION_17	CALL_1
0x4000eda	      0x4889442428	             mov qword [rsp + 0x28], rax	       784	pop3.c	FUNCTION_17	CALL_1
0x4000edf	    0x488d87c40600	                  lea rax, [rdi + 0x6c4]	       364	pop3.c	FUNCTION_6	CALL_1
0x4000ee6	      0x4889442438	             mov qword [rsp + 0x38], rax	       364	pop3.c	FUNCTION_6	CALL_1
0x4000eeb	       0xf1f440000	                   nop dword [rax + rax]	       364	pop3.c	FUNCTION_6	CALL_1
0x4000ef0	      0x488b542408	                mov rdx, qword [rsp + 8]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000ef5	          0x4c89f1	                            mov rcx, r14	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000ef8	          0x4889ee	                            mov rsi, rbp	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000efb	          0x4489ef	                           mov edi, r13d	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000efe	      0xe800000000	                          call 0x4000f03	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000f03	            0x85c0	                           test eax, eax	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x4000f05	            0x7549	                           jne 0x4000f50	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x4000f07	        0x8b542444	            mov edx, dword [rsp + 0x44] 	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000f0b	            0x85d2	                           test edx, edx	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000f0d	            0x7478	                            je 0x4000f87	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000f0f	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f16	        0x4183ff09	                             cmp r15d, 9	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f1a	            0x7761	                            ja 0x4000f7d	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f1c	          0x4489f8	                           mov eax, r15d	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f1f	        0x49630484	         movsxd rax, dword [r12 + rax*4]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f23	          0x4c01e0	                            add rax, r12	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f26	            0xffe0	                                 jmp rax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f28	     0xf1f84000000	                   nop dword [rax + rax]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000f30	          0x83fa2b	                           cmp edx, 0x2b	       890	pop3.c	FUNCTION_21	IF_1
0x4000f33	     0xf8467040000	                            je 0x40013a0	       890	pop3.c	FUNCTION_21	IF_1
0x4000f39	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000f43	      0xb838000000	                           mov eax, 0x38	       892	pop3.c	FUNCTION_21	IF_1
0x4000f48	     0xf1f84000000	                   nop dword [rax + rax]	       892	pop3.c	FUNCTION_21	IF_1
0x4000f50	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1006	pop3.c	FUNCTION_22
0x4000f55	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1006	pop3.c	FUNCTION_22
0x4000f5e	     0xf8586070000	                           jne 0x40016ea	      1006	pop3.c	FUNCTION_22
0x4000f64	        0x4883c468	                           add rsp, 0x68	      1006	pop3.c	FUNCTION_22
0x4000f68	              0x5b	                                 pop rbx	      1006	pop3.c	FUNCTION_22
0x4000f69	              0x5d	                                 pop rbp	      1006	pop3.c	FUNCTION_22
0x4000f6a	            0x415c	                                 pop r12	      1006	pop3.c	FUNCTION_22
0x4000f6c	            0x415d	                                 pop r13	      1006	pop3.c	FUNCTION_22
0x4000f6e	            0x415e	                                 pop r14	      1006	pop3.c	FUNCTION_22
0x4000f70	            0x415f	                                 pop r15	      1006	pop3.c	FUNCTION_22
0x4000f72	              0xc3	                                     ret	      1006	pop3.c	FUNCTION_22
0x4000f73	       0xf1f440000	                   nop dword [rax + rax]	      1006	pop3.c	FUNCTION_22
0x4000f78	          0x83fa2b	                           cmp edx, 0x2b	       866	pop3.c	FUNCTION_20	IF_1
0x4000f7b	            0x751c	                           jne 0x4000f99	       866	pop3.c	FUNCTION_20	IF_1
0x4000f7d	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000f87	            0x31c0	                            xor eax, eax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4000f89	            0xebc5	                           jmp 0x4000f50	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4000f8b	       0xf1f440000	                   nop dword [rax + rax]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4000f90	          0x83fa2b	                           cmp edx, 0x2b	       843	pop3.c	FUNCTION_19	IF_1
0x4000f93	     0xf84d7010000	                            je 0x4001170	       843	pop3.c	FUNCTION_19	IF_1
0x4000f99	          0x488b3b	                    mov rdi, qword [rbx]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000f9c	    0x488d35000000	                   lea rsi, [0x04000fa3]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000fa3	            0x31c0	                            xor eax, eax	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000fa5	      0xe800000000	                          call 0x4000faa	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000faa	      0xb843000000	                           mov eax, 0x43	       868	pop3.c	FUNCTION_20	IF_1
0x4000faf	            0xeb9f	                           jmp 0x4000f50	       868	pop3.c	FUNCTION_20	IF_1
0x4000fb1	     0xf1f80000000	                         nop dword [rax]	       868	pop3.c	FUNCTION_20	IF_1
0x4000fb8	          0x83fa2b	                           cmp edx, 0x2b	       822	pop3.c	FUNCTION_18	IF_1
0x4000fbb	            0x74c0	                            je 0x4000f7d	       822	pop3.c	FUNCTION_18	IF_1
0x4000fbd	          0x488b3b	                    mov rdi, qword [rbx]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000fc0	    0x488d35000000	                   lea rsi, [0x04000fc7]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000fc7	            0x31c0	                            xor eax, eax	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000fc9	      0xe800000000	                          call 0x4000fce	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000fce	      0xb843000000	                           mov eax, 0x43	       824	pop3.c	FUNCTION_18	IF_1
0x4000fd3	      0xe978ffffff	                           jmp 0x4000f50	       824	pop3.c	FUNCTION_18	IF_1
0x4000fd8	     0xf1f84000000	                   nop dword [rax + rax]	       824	pop3.c	FUNCTION_18	IF_1
0x4000fe0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       784	pop3.c	FUNCTION_17	CALL_1
0x4000fe5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       784	pop3.c	FUNCTION_17	CALL_1
0x4000fea	          0x4889de	                            mov rsi, rbx	       784	pop3.c	FUNCTION_17	CALL_1
0x4000fed	          0x4c8b3b	                    mov r15, qword [rbx]	       778	pop3.c	FUNCTION_17
0x4000ff0	      0xe800000000	                          call 0x4000ff5	       784	pop3.c	FUNCTION_17	CALL_1
0x4000ff5	            0x85c0	                           test eax, eax	       785	pop3.c	FUNCTION_17	IF_1
0x4000ff7	     0xf8553ffffff	                           jne 0x4000f50	       785	pop3.c	FUNCTION_17	IF_1
0x4000ffd	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001001	            0x85c0	                           test eax, eax	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001003	     0xf8467030000	                            je 0x4001370	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001009	          0x83f802	                              cmp eax, 2	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x400100c	     0xf8598000000	                           jne 0x40010aa	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001012	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x400101c	      0xe989000000	                           jmp 0x40010aa	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001021	     0xf1f80000000	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001028	          0x83fa2b	                           cmp edx, 0x2b	       758	pop3.c	FUNCTION_16	IF_1
0x400102b	          0x488b3b	                    mov rdi, qword [rbx]	       754	pop3.c	FUNCTION_16
0x400102e	     0xf841c040000	                            je 0x4001450	       758	pop3.c	FUNCTION_16	IF_1
0x4001034	    0x83bff0070000	              cmp dword [rdi + 0x7f0], 1	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x400103b	            0x745d	                            je 0x400109a	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x400103d	    0x488d35000000	                   lea rsi, [0x04001044]	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001044	            0x31c0	                            xor eax, eax	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4001046	      0xe800000000	                          call 0x400104b	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x400104b	      0xb840000000	                           mov eax, 0x40	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4001050	      0xe9fbfeffff	                           jmp 0x4000f50	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4001055	           0xf1f00	                         nop dword [rax]	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4001058	          0x4c8b0b	                     mov r9, qword [rbx]	       663	pop3.c	FUNCTION_15
0x400105b	        0x89542420	             mov dword [rsp + 0x20], edx	       663	pop3.c	FUNCTION_15
0x400105f	    0x498b81200d00	            mov rax, qword [r9 + 0xd20] 	       665	pop3.c	FUNCTION_15
0x4001066	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       665	pop3.c	FUNCTION_15
0x400106b	          0x4889c7	                            mov rdi, rax	       666	pop3.c	FUNCTION_15	CALL_1
0x400106e	      0x4889442430	             mov qword [rsp + 0x30], rax	       665	pop3.c	FUNCTION_15
0x4001073	      0xe800000000	                          call 0x4001078	       666	pop3.c	FUNCTION_15	CALL_1
0x4001078	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       672	pop3.c	FUNCTION_15	IF_1
0x400107c	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       672	pop3.c	FUNCTION_15	IF_1
0x4001081	          0x83fa2a	                           cmp edx, 0x2a	       672	pop3.c	FUNCTION_15	IF_1
0x4001084	     0xf848e010000	                            je 0x4001218	       672	pop3.c	FUNCTION_15	IF_1
0x400108a	          0x83fa2b	                           cmp edx, 0x2b	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x400108d	     0xf848d000000	                            je 0x4001120	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x4001093	    0x838bf8060000	               or dword [rbx + 0x6f8], 1	       740	pop3.c	FUNCTION_15	ELSE_7
0x400109a	          0x4889df	                            mov rdi, rbx	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x400109d	      0xe8aef4ffff	    call sym.pop3_perform_authentication	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x40010a2	            0x85c0	                           test eax, eax	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010a4	     0xf85a6feffff	                           jne 0x4000f50	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010aa	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010b1	          0x4585ff	                         test r15d, r15d	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010b4	     0xf84cdfeffff	                            je 0x4000f87	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010ba	          0x4889ef	                            mov rdi, rbp	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010bd	      0xe800000000	                          call 0x40010c2	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010c2	            0x84c0	                             test al, al	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010c4	     0xf8526feffff	                           jne 0x4000ef0	      1003	pop3.c	FUNCTION_22	CALL_13
0x40010ca	            0x31c0	                            xor eax, eax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010cc	      0xe97ffeffff	                           jmp 0x4000f50	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010d1	     0xf1f80000000	                         nop dword [rax]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010d8	          0x4c8b3b	                    mov r15, qword [rbx]	       612	pop3.c	FUNCTION_14
0x40010db	        0x89542418	             mov dword [rsp + 0x18], edx	       612	pop3.c	FUNCTION_14
0x40010df	    0x498b87200d00	           mov rax, qword [r15 + 0xd20] 	       614	pop3.c	FUNCTION_14
0x40010e6	          0x4889c7	                            mov rdi, rax	       615	pop3.c	FUNCTION_14	CALL_1
0x40010e9	      0x4889442420	             mov qword [rsp + 0x20], rax	       614	pop3.c	FUNCTION_14
0x40010ee	      0xe800000000	                          call 0x40010f3	       615	pop3.c	FUNCTION_14	CALL_1
0x40010f3	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       620	pop3.c	FUNCTION_14	IF_1
0x40010f7	          0x83fa2b	                           cmp edx, 0x2b	       620	pop3.c	FUNCTION_14	IF_1
0x40010fa	     0xf84b0000000	                            je 0x40011b0	       620	pop3.c	FUNCTION_14	IF_1
0x4001100	    0x488d35000000	                   lea rsi, [0x04001107]	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001107	            0x31c0	                            xor eax, eax	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001109	          0x4c89ff	                            mov rdi, r15	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x400110c	      0xe800000000	                          call 0x4001111	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001111	      0xb808000000	                              mov eax, 8	       622	pop3.c	FUNCTION_14	IF_1
0x4001116	      0xe935feffff	                           jmp 0x4000f50	       622	pop3.c	FUNCTION_14	IF_1
0x400111b	       0xf1f440000	                   nop dword [rax + rax]	       622	pop3.c	FUNCTION_14	IF_1
0x4001120	    0x418b81f00700	            mov eax, dword [r9 + 0x7f0] 	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001127	            0x85c0	                           test eax, eax	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001129	     0xf846bffffff	                            je 0x400109a	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x400112f	    0x80bb90020000	               cmp byte [rbx + 0x290], 0	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001136	     0xf855effffff	                           jne 0x400109a	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x400113c	    0x80bb08070000	               cmp byte [rbx + 0x708], 0	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4001143	     0xf85ee040000	                           jne 0x4001637	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4001149	          0x83f801	                              cmp eax, 1	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x400114c	     0xf8448ffffff	                            je 0x400109a	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4001152	    0x488d35000000	                   lea rsi, [0x04001159]	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4001159	            0x31c0	                            xor eax, eax	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x400115b	          0x4c89cf	                             mov rdi, r9	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x400115e	      0xe800000000	                          call 0x4001163	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4001163	      0xb840000000	                           mov eax, 0x40	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x4001168	      0xe9e3fdffff	                           jmp 0x4000f50	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x400116d	           0xf1f00	                         nop dword [rax]	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x4001170	    0x488b93180200	           mov rdx, qword [rbx + 0x218] 	       850	pop3.c	FUNCTION_19	ELSE_1
0x4001177	    0x488d05000000	                   lea rax, [0x0400117e]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400117e	    0x488d35000000	                   lea rsi, [0x04001185]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001185	          0x4889ef	                            mov rdi, rbp	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001188	          0x4885d2	                           test rdx, rdx	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400118b	        0x480f44d0	                          cmove rdx, rax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400118f	            0x31c0	                            xor eax, eax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001191	      0xe800000000	                          call 0x4001196	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001196	            0x85c0	                           test eax, eax	       851	pop3.c	FUNCTION_19	IF_2
0x4001198	     0xf85b2fdffff	                           jne 0x4000f50	       851	pop3.c	FUNCTION_19	IF_2
0x400119e	    0xc783c0060000	              mov dword [rbx + 0x6c0], 8	       305	pop3.c	ELSE_1	FUNCTION_3
0x40011a8	      0xe90dffffff	                           jmp 0x40010ba	       305	pop3.c	ELSE_1	FUNCTION_3
0x40011ad	           0xf1f00	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x40011b0	        0x4883f803	                              cmp rax, 3	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011b4	            0x7614	                           jbe 0x40011ca	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011b6	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011bb	        0x488d70fe	                      lea rsi, [rax - 2]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011bf	      0x807c01fe3e	         cmp byte [rcx + rax - 2], 0x3e 	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011c4	     0xf84df030000	                            je 0x40015a9	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40011ca	    0x488d15000000	                   lea rdx, [0x040011d1]	       325	pop3.c	FUNCTION_4	CALL_1
0x40011d1	    0x488d35000000	                   lea rsi, [0x040011d8]	       325	pop3.c	FUNCTION_4	CALL_1
0x40011d8	            0x31c0	                            xor eax, eax	       325	pop3.c	FUNCTION_4	CALL_1
0x40011da	    0xc783e4060000	              mov dword [rbx + 0x6e4], 0	       320	pop3.c	FUNCTION_4
0x40011e4	    0xc783ec060000	              mov dword [rbx + 0x6ec], 0	       321	pop3.c	FUNCTION_4
0x40011ee	          0x4889ef	                            mov rdi, rbp	       325	pop3.c	FUNCTION_4	CALL_1
0x40011f1	    0xc68308070000	               mov byte [rbx + 0x708], 0	       322	pop3.c	FUNCTION_4
0x40011f8	      0xe800000000	                          call 0x40011fd	       325	pop3.c	FUNCTION_4	CALL_1
0x40011fd	            0x85c0	                           test eax, eax	       327	pop3.c	FUNCTION_4	IF_1
0x40011ff	     0xf854bfdffff	                           jne 0x4000f50	       327	pop3.c	FUNCTION_4	IF_1
0x4001205	    0xc783c0060000	              mov dword [rbx + 0x6c0], 2	       305	pop3.c	ELSE_1	FUNCTION_3
0x400120f	      0xe9a6feffff	                           jmp 0x40010ba	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001214	         0xf1f4000	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001218	        0x4883f803	                              cmp rax, 3	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400121c	      0x4889442418	             mov qword [rsp + 0x18], rax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001221	     0xf8693feffff	                           jbe 0x40010ba	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001227	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400122c	    0x488d35000000	                   lea rsi, [0x04001233]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001233	      0xba04000000	                              mov edx, 4	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001238	      0xe800000000	                          call 0x400123d	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400123d	            0x85c0	                           test eax, eax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400123f	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001244	     0xf84e1030000	                            je 0x400162b	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400124a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x400124f	    0x488d35000000	                   lea rsi, [0x04001256]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001256	      0xba04000000	                              mov edx, 4	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x400125b	      0x4c89442418	              mov qword [rsp + 0x18], r8	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001260	      0xe800000000	                          call 0x4001265	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001265	            0x85c0	                           test eax, eax	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001267	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x400126c	     0xf84f4030000	                            je 0x4001666	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001272	        0x4983f804	                               cmp r8, 4	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001276	      0x4c89442418	              mov qword [rsp + 0x18], r8	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x400127b	     0xf8439feffff	                            je 0x40010ba	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001281	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001286	    0x488d35000000	                   lea rsi, [0x0400128d]	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x400128d	      0xba05000000	                              mov edx, 5	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001292	      0xe800000000	                          call 0x4001297	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001297	            0x85c0	                           test eax, eax	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4001299	     0xf851bfeffff	                           jne 0x40010ba	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x400129f	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012a4	    0x838bf8060000	               or dword [rbx + 0x6f8], 4	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40012ab	        0x4983e805	                               sub r8, 5	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012af	     0xf84fcfdffff	                            je 0x40010b1	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012b5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40012ba	    0x49b900260000	                  movabs r9, 0x100002600	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012c4	      0x48896c2430	             mov qword [rsp + 0x30], rbp	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012c9	      0x44896c2420	            mov dword [rsp + 0x20], r13d	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012ce	          0x4c89c5	                             mov rbp, r8	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012d1	        0x4883c705	                              add rdi, 5	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40012d5	           0xf1f00	                         nop dword [rax]	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40012d8	           0xfb607	                   movzx eax, byte [rdi]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012db	            0x3c20	                            cmp al, 0x20	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012dd	     0xf860d030000	                           jbe 0x40015f0	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012e3	          0x4989ff	                            mov r15, rdi	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012e6	          0x4531ed	                          xor r13d, r13d	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x40012e9	            0xeb16	                           jmp 0x4001301	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x40012eb	       0xf1f440000	                   nop dword [rax + rax]	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x40012f0	        0x4983c501	                              add r13, 1	       709	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012f4	        0x4983c701	                              add r15, 1	       709	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012f8	          0x4939ed	                            cmp r13, rbp	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x40012fb	     0xf830f030000	                           jae 0x4001610	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001301	        0x410fb607	                   movzx eax, byte [r15]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001305	            0x3c20	                            cmp al, 0x20	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001307	            0x77e7	                            ja 0x40012f0	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001309	        0x490fa3c1	                              bt r9, rax	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400130d	            0x73e1	                           jae 0x40012f0	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400130f	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001314	          0x4c89ee	                            mov rsi, r13	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001317	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x400131c	      0xe800000000	                          call 0x4001321	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001321	            0x85c0	                           test eax, eax	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001323	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001328	            0x740b	                            je 0x4001335	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400132a	      0x4c396c2450	            cmp qword [rsp + 0x50], r13 	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400132f	     0xf84eb020000	                            je 0x4001620	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001335	          0x4c29ed	                            sub rbp, r13	       717	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4001338	          0x4c89ff	                            mov rdi, r15	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x400133b	          0x4885ed	                           test rbp, rbp	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400133e	            0x7598	                           jne 0x40012d8	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001340	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001345	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400134a	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001351	      0xe95bfdffff	                           jmp 0x40010b1	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001360	          0x4889ef	                            mov rdi, rbp	       949	pop3.c	FUNCTION_22	CALL_2
0x4001363	      0xe800000000	                          call 0x4001368	       949	pop3.c	FUNCTION_22	CALL_2
0x4001368	      0xe9e3fbffff	                           jmp 0x4000f50	       949	pop3.c	FUNCTION_22	CALL_2
0x400136d	           0xf1f00	                         nop dword [rax]	       949	pop3.c	FUNCTION_22	CALL_2
0x4001370	    0x8b83f8060000	           mov eax, dword [rbx + 0x6f8] 	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x4001376	    0x2383fc060000	            and eax, dword [rbx + 0x6fc]	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x400137c	            0xa802	                              test al, 2	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x400137e	     0xf84bc010000	                            je 0x4001540	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x4001384	    0x80bba0030000	               cmp byte [rbx + 0x3a0], 0	       424	pop3.c	FUNCTION_8	IF_1
0x400138b	     0xf8481fcffff	                            je 0x4001012	       424	pop3.c	FUNCTION_8	IF_1
0x4001391	          0x4889df	                            mov rdi, rbx	       424	pop3.c	FUNCTION_8	IF_1
0x4001394	      0xe897f0ffff	      call sym.pop3_perform_apop.part.10	       424	pop3.c	FUNCTION_8	IF_1
0x4001399	      0xe904fdffff	                           jmp 0x40010a2	       424	pop3.c	FUNCTION_8	IF_1
0x400139e	            0x6690	                                     nop	       424	pop3.c	FUNCTION_8	IF_1
0x40013a0	          0x488b2b	                    mov rbp, qword [rbx]	       883	pop3.c	FUNCTION_21
0x40013a3	    0x488b85e80100	           mov rax, qword [rbp + 0x1e8] 	       884	pop3.c	FUNCTION_21
0x40013aa	    0x48c783c80600	              mov qword [rbx + 0x6c8], 2	       899	pop3.c	FUNCTION_21
0x40013b5	    0x48c783d00600	              mov qword [rbx + 0x6d0], 2	       903	pop3.c	FUNCTION_21
0x40013c0	            0x8b08	                    mov ecx, dword [rax]	       905	pop3.c	FUNCTION_21	IF_2
0x40013c2	            0x85c9	                           test ecx, ecx	       905	pop3.c	FUNCTION_21	IF_2
0x40013c4	     0xf85b3fbffff	                           jne 0x4000f7d	       905	pop3.c	FUNCTION_21	IF_2
0x40013ca	        0x4883ec08	                              sub rsp, 8	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013ce	          0x4531c0	                            xor r8d, r8d	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013d1	            0x31c9	                            xor ecx, ecx	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013d3	            0x6a00	                                  push 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013d5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013dc	            0x31f6	                            xor esi, esi	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013de	          0x4889df	                            mov rdi, rbx	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013e1	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013e7	      0xe800000000	                          call 0x40013ec	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x40013ec	    0x488bbb500600	           mov rdi, qword [rbx + 0x650] 	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013f3	              0x58	                                 pop rax	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013f4	              0x5a	                                 pop rdx	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013f5	          0x4885ff	                           test rdi, rdi	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013f8	     0xf847ffbffff	                            je 0x4000f7d	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013fe	    0x80bde1070000	               cmp byte [rbp + 0x7e1], 0	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001405	            0x7521	                           jne 0x4001428	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001407	    0x488b93580600	           mov rdx, qword [rbx + 0x658] 	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x400140e	          0x4889fe	                            mov rsi, rdi	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001411	          0x4889df	                            mov rdi, rbx	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001414	      0xe800000000	                          call 0x4001419	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001419	            0x85c0	                           test eax, eax	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x400141b	     0xf852ffbffff	                           jne 0x4000f50	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x4001421	    0x488bbb500600	           mov rdi, qword [rbx + 0x650] 	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x4001428	    0x488b05000000	            mov rax, qword [0x0400142f] 	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x400142f	            0xff10	                        call qword [rax]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x4001431	    0x48c783500600	              mov qword [rbx + 0x650], 0	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x400143c	    0x48c783580600	              mov qword [rbx + 0x658], 0	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001447	      0xe931fbffff	                           jmp 0x4000f7d	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x400144c	         0xf1f4000	                         nop dword [rax]	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001450	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       364	pop3.c	FUNCTION_6	CALL_1
0x4001455	            0x31f6	                            xor esi, esi	       364	pop3.c	FUNCTION_6	CALL_1
0x4001457	          0x4889df	                            mov rdi, rbx	       364	pop3.c	FUNCTION_6	CALL_1
0x400145a	      0xe800000000	                          call 0x400145f	       364	pop3.c	FUNCTION_6	CALL_1
0x400145f	            0x85c0	                           test eax, eax	       366	pop3.c	FUNCTION_6	IF_1
0x4001461	     0xf85e9faffff	                           jne 0x4000f50	       366	pop3.c	FUNCTION_6	IF_1
0x4001467	    0x83bbc0060000	              cmp dword [rbx + 0x6c0], 4	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x400146e	            0x740a	                            je 0x400147a	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x4001470	    0xc783c0060000	              mov dword [rbx + 0x6c0], 4	       305	pop3.c	ELSE_1	FUNCTION_3
0x400147a	    0x80bbc4060000	               cmp byte [rbx + 0x6c4], 0	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x4001481	     0xf8433fcffff	                            je 0x40010ba	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x4001487	    0x488d05000000	                   lea rax, [0x0400148e]	       178	pop3.c	
0x400148e	    0xc68398030000	               mov byte [rbx + 0x398], 1	       181	pop3.c	
0x4001495	    0x488983e00300	            mov qword [rbx + 0x3e0], rax	       178	pop3.c	
0x400149c	      0xe929fdffff	                           jmp 0x40011ca	       178	pop3.c	
0x40014a1	     0xf1f80000000	                         nop dword [rax]	       178	pop3.c	
0x40014a8	    0x488d97c40600	                  lea rdx, [rdi + 0x6c4]	       364	pop3.c	FUNCTION_6	CALL_1
0x40014af	            0x31f6	                            xor esi, esi	       364	pop3.c	FUNCTION_6	CALL_1
0x40014b1	      0xe800000000	                          call 0x40014b6	       364	pop3.c	FUNCTION_6	CALL_1
0x40014b6	            0x85c0	                           test eax, eax	       366	pop3.c	FUNCTION_6	IF_1
0x40014b8	     0xf8592faffff	                           jne 0x4000f50	       366	pop3.c	FUNCTION_6	IF_1
0x40014be	    0x83bbc0060000	              cmp dword [rbx + 0x6c0], 4	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x40014c5	            0x740a	                            je 0x40014d1	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x40014c7	    0xc783c0060000	              mov dword [rbx + 0x6c0], 4	       305	pop3.c	ELSE_1	FUNCTION_3
0x40014d1	    0x80bbc4060000	               cmp byte [rbx + 0x6c4], 0	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40014d8	     0xf84a9faffff	                            je 0x4000f87	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40014de	    0x488d05000000	                   lea rax, [0x040014e5]	       178	pop3.c	
0x40014e5	    0x488d15000000	                   lea rdx, [0x040014ec]	       325	pop3.c	FUNCTION_4	CALL_1
0x40014ec	    0x488d35000000	                   lea rsi, [0x040014f3]	       325	pop3.c	FUNCTION_4	CALL_1
0x40014f3	    0xc68398030000	               mov byte [rbx + 0x398], 1	       181	pop3.c	
0x40014fa	    0xc783e4060000	              mov dword [rbx + 0x6e4], 0	       320	pop3.c	FUNCTION_4
0x4001504	          0x4889ef	                            mov rdi, rbp	       325	pop3.c	FUNCTION_4	CALL_1
0x4001507	    0x488983e00300	            mov qword [rbx + 0x3e0], rax	       178	pop3.c	
0x400150e	    0xc783ec060000	              mov dword [rbx + 0x6ec], 0	       321	pop3.c	FUNCTION_4
0x4001518	            0x31c0	                            xor eax, eax	       325	pop3.c	FUNCTION_4	CALL_1
0x400151a	    0xc68308070000	               mov byte [rbx + 0x708], 0	       322	pop3.c	FUNCTION_4
0x4001521	      0xe800000000	                          call 0x4001526	       325	pop3.c	FUNCTION_4	CALL_1
0x4001526	            0x85c0	                           test eax, eax	       327	pop3.c	FUNCTION_4	IF_1
0x4001528	     0xf8522faffff	                           jne 0x4000f50	       327	pop3.c	FUNCTION_4	IF_1
0x400152e	    0xc783c0060000	              mov dword [rbx + 0x6c0], 2	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001538	      0xe913faffff	                           jmp 0x4000f50	       305	pop3.c	ELSE_1	FUNCTION_3
0x400153d	           0xf1f00	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001540	            0xa801	                              test al, 1	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001542	            0x744a	                            je 0x400158e	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001544	    0x80bba0030000	               cmp byte [rbx + 0x3a0], 0	       391	pop3.c	FUNCTION_7	IF_1
0x400154b	     0xf84c1faffff	                            je 0x4001012	       391	pop3.c	FUNCTION_7	IF_1
0x4001551	    0x488b93100200	           mov rdx, qword [rbx + 0x210] 	       399	pop3.c	FUNCTION_7
0x4001558	    0x488d05000000	                   lea rax, [0x0400155f]	       398	pop3.c	FUNCTION_7	CALL_2
0x400155f	    0x488d35000000	                   lea rsi, [0x04001566]	       398	pop3.c	FUNCTION_7	CALL_2
0x4001566	          0x4889ef	                            mov rdi, rbp	       398	pop3.c	FUNCTION_7	CALL_2
0x4001569	          0x4885d2	                           test rdx, rdx	       398	pop3.c	FUNCTION_7	CALL_2
0x400156c	        0x480f44d0	                          cmove rdx, rax	       398	pop3.c	FUNCTION_7	CALL_2
0x4001570	            0x31c0	                            xor eax, eax	       398	pop3.c	FUNCTION_7	CALL_2
0x4001572	      0xe800000000	                          call 0x4001577	       398	pop3.c	FUNCTION_7	CALL_2
0x4001577	            0x85c0	                           test eax, eax	       400	pop3.c	FUNCTION_7	IF_2
0x4001579	     0xf85d1f9ffff	                           jne 0x4000f50	       400	pop3.c	FUNCTION_7	IF_2
0x400157f	    0xc783c0060000	              mov dword [rbx + 0x6c0], 7	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001589	      0xe91cfbffff	                           jmp 0x40010aa	       305	pop3.c	ELSE_1	FUNCTION_3
0x400158e	    0x488d35000000	                   lea rsi, [0x04001595]	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001595	            0x31c0	                            xor eax, eax	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001597	          0x4c89ff	                            mov rdi, r15	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400159a	      0xe800000000	                          call 0x400159f	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400159f	      0xb843000000	                           mov eax, 0x43	       802	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2
0x40015a4	      0xe9a7f9ffff	                           jmp 0x4000f50	       976	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40015a9	        0x4883fe03	                              cmp rsi, 3	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015ad	     0xf8617fcffff	                           jbe 0x40011ca	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015b3	        0x8079033c	                cmp byte [rcx + 3], 0x3c	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015b7	     0xf84b5000000	                            je 0x4001672	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015bd	          0x4889ca	                            mov rdx, rcx	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015c0	      0xb903000000	                              mov ecx, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015c5	        0x4883c204	                              add rdx, 4	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015c9	            0xeb16	                           jmp 0x40015e1	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015cb	       0xf1f440000	                   nop dword [rax + rax]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015d0	          0x4989d0	                             mov r8, rdx	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015d3	        0x4883c201	                              add rdx, 1	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015d7	        0x807aff3c	                cmp byte [rdx - 1], 0x3c	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015db	     0xf849d000000	                            je 0x400167e	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40015e1	        0x4883c101	                              add rcx, 1	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015e5	          0x4839ce	                            cmp rsi, rcx	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015e8	            0x75e6	                           jne 0x40015d0	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015ea	      0xe9dbfbffff	                           jmp 0x40011ca	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015ef	              0x90	                                     nop	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x40015f0	        0x490fa3c1	                              bt r9, rax	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40015f4	     0xf83e9fcffff	                           jae 0x40012e3	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40015fa	        0x4883c701	                              add rdi, 1	       698	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40015fe	        0x4883ed01	                              sub rbp, 1	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001602	      0xe934fdffff	                           jmp 0x400133b	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001607	    0x660f1f840000	                    nop word [rax + rax]	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001610	        0x4e8d3c2f	                    lea r15, [rdi + r13]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001614	      0xe9f6fcffff	                           jmp 0x400130f	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001619	     0xf1f80000000	                         nop dword [rax]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001620	     0x983e4060000	             or dword [rbx + 0x6e4], eax	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001626	      0xe90afdffff	                           jmp 0x4001335	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400162b	    0xc68308070000	               mov byte [rbx + 0x708], 1	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x4001632	      0xe983faffff	                           jmp 0x40010ba	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x4001637	    0x488d15000000	                   lea rdx, [0x0400163e]	       344	pop3.c	FUNCTION_5	CALL_1
0x400163e	    0x488d35000000	                   lea rsi, [0x04001645]	       344	pop3.c	FUNCTION_5	CALL_1
0x4001645	            0x31c0	                            xor eax, eax	       344	pop3.c	FUNCTION_5	CALL_1
0x4001647	          0x4889ef	                            mov rdi, rbp	       344	pop3.c	FUNCTION_5	CALL_1
0x400164a	      0xe800000000	                          call 0x400164f	       344	pop3.c	FUNCTION_5	CALL_1
0x400164f	            0x85c0	                           test eax, eax	       346	pop3.c	FUNCTION_5	IF_1
0x4001651	     0xf85f9f8ffff	                           jne 0x4000f50	       346	pop3.c	FUNCTION_5	IF_1
0x4001657	    0xc783c0060000	              mov dword [rbx + 0x6c0], 3	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001661	      0xe954faffff	                           jmp 0x40010ba	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001666	    0x838bf8060000	               or dword [rbx + 0x6f8], 1	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x400166d	      0xe948faffff	                           jmp 0x40010ba	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4001672	          0x4989c8	                             mov r8, rcx	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4001675	      0xb903000000	                              mov ecx, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400167a	        0x4983c003	                               add r8, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400167e	          0x4829c8	                            sub rax, rcx	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001681	          0x4889c2	                            mov rdx, rax	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4001684	          0x4989c7	                            mov r15, rax	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001687	        0x4883ea01	                              sub rdx, 1	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x400168b	     0xf8439fbffff	                            je 0x40011ca	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4001691	          0x4889c6	                            mov rsi, rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4001694	    0x488b05000000	            mov rax, qword [0x0400169b] 	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400169b	      0x4889542420	             mov qword [rsp + 0x20], rdx	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40016a0	      0x4c89442418	              mov qword [rsp + 0x18], r8	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40016a5	      0xbf01000000	                              mov edi, 1	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40016aa	            0xff10	                        call qword [rax]	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40016ac	          0x4885c0	                           test rax, rax	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x40016af	    0x488983000700	            mov qword [rbx + 0x700], rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40016b6	     0xf840efbffff	                            je 0x40011ca	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x40016bc	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	        53	string3.h	FUNCTION_40	CALL_3
0x40016c1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_40	CALL_3
0x40016c6	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_40	CALL_3
0x40016c9	          0x4c89c6	                             mov rsi, r8	        53	string3.h	FUNCTION_40	CALL_3
0x40016cc	      0xe800000000	                          call 0x40016d1	        53	string3.h	FUNCTION_40	CALL_3
0x40016d1	    0x488b83000700	           mov rax, qword [rbx + 0x700] 	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40016d8	    0x42c64438ff00	             mov byte [rax + r15 - 1], 0	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40016de	    0x838bf8060000	               or dword [rbx + 0x6f8], 2	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40016e5	      0xe9e0faffff	                           jmp 0x40011ca	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40016ea	      0xe800000000	                           call loc..LC1	      1006	pop3.c	FUNCTION_22
pop3_get_message	SWITCH,0:WHILE,0:ELSE,1:DO,0:FOR,2:functions,0:IF,3:CALL,1	43
0x4000270	              0x55	                                push rbp	       245	pop3.c	FUNCTION_2
0x4000271	              0x53	                                push rbx	       245	pop3.c	FUNCTION_2
0x4000272	          0x4889f5	                            mov rbp, rsi	       245	pop3.c	FUNCTION_2
0x4000275	          0x4889fb	                            mov rbx, rdi	       245	pop3.c	FUNCTION_2
0x4000278	        0x4883ec08	                              sub rsp, 8	       245	pop3.c	FUNCTION_2
0x400027c	      0xe800000000	                          call 0x4000281	       246	pop3.c	FUNCTION_2	CALL_1
0x4000281	        0x4883f802	                              cmp rax, 2	       249	pop3.c	FUNCTION_2	IF_1
0x4000285	        0x488d1403	                    lea rdx, [rbx + rax]	       269	pop3.c	FUNCTION_2	ELSE_1
0x4000289	            0x7658	                           jbe 0x40002e3	       249	pop3.c	FUNCTION_2	IF_1
0x400028b	         0xfb64b02	               movzx ecx, byte [rbx + 2]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400028f	        0x4883e802	                              sub rax, 2	       251	pop3.c	FUNCTION_2	IF_1
0x4000293	        0x488d5302	                      lea rdx, [rbx + 2]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000297	          0x80f909	                               cmp cl, 9	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029a	            0x740c	                            je 0x40002a8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029c	          0x80f920	                            cmp cl, 0x20	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029f	            0x751c	                           jne 0x40002bd	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a1	     0xf1f80000000	                         nop dword [rax]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a8	        0x4883c201	                              add rdx, 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002ac	           0xfb60a	                   movzx ecx, byte [rdx]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002af	        0x4883e801	                              sub rax, 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002b3	          0x80f920	                            cmp cl, 0x20	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002b6	            0x74f0	                            je 0x40002a8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002b8	          0x80f909	                               cmp cl, 9	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002bb	            0x74eb	                            je 0x40002a8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002bd	    0x49b800260000	                  movabs r8, 0x100002600	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002c7	    0x660f1f840000	                    nop word [rax + rax]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002d0	          0x4885c0	                           test rax, rax	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002d3	            0x740e	                            je 0x40002e3	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002d5	       0xfb64c02ff	         movzx ecx, byte [rdx + rax - 1]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002da	          0x80f920	                            cmp cl, 0x20	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002dd	            0x7611	                           jbe 0x40002f0	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002df	        0xc6040200	                 mov byte [rdx + rax], 0	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x40002e3	        0x48895500	                    mov qword [rbp], rdx	       271	pop3.c	FUNCTION_2	ELSE_1
0x40002e7	        0x4883c408	                              add rsp, 8	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002eb	              0x5b	                                 pop rbx	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002ec	              0x5d	                                 pop rbp	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002ed	              0xc3	                                     ret	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002ee	            0x6690	                                     nop	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002f0	        0x490fa3c8	                              bt r8, rcx	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002f4	        0x488d78ff	                      lea rdi, [rax - 1]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002f8	            0x73e5	                           jae 0x40002df	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002fa	          0x4889f8	                            mov rax, rdi	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002fd	            0xebd1	                           jmp 0x40002d0	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
pop3_disconnect	SWITCH,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0:IF,2:CALL,5	47
0x40000c0	              0x55	                                push rbp	      1219	pop3.c	FUNCTION_31
0x40000c1	              0x53	                                push rbx	      1219	pop3.c	FUNCTION_31
0x40000c2	    0x488daf500600	                  lea rbp, [rdi + 0x650]	      1219	pop3.c	FUNCTION_31
0x40000c9	          0x4889fb	                            mov rbx, rdi	      1219	pop3.c	FUNCTION_31
0x40000cc	        0x4883ec08	                              sub rsp, 8	      1219	pop3.c	FUNCTION_31
0x40000d0	          0x4084f6	                           test sil, sil	      1228	pop3.c	FUNCTION_31	IF_1
0x40000d3	            0x751c	                           jne 0x40000f1	      1228	pop3.c	FUNCTION_31	IF_1
0x40000d5	    0x488b87a80600	           mov rax, qword [rdi + 0x6a8] 	      1228	pop3.c	FUNCTION_31	IF_1
0x40000dc	    0x488daf500600	                  lea rbp, [rdi + 0x650]	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e3	          0x4885c0	                           test rax, rax	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e6	            0x7409	                            je 0x40000f1	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e8	    0x80b8a7030000	               cmp byte [rax + 0x3a7], 0	      1228	pop3.c	FUNCTION_31	IF_1
0x40000ef	            0x753f	                           jne 0x4000130	      1228	pop3.c	FUNCTION_31	IF_1
0x40000f1	          0x4889ef	                            mov rdi, rbp	      1233	pop3.c	FUNCTION_31	CALL_3
0x40000f4	      0xe800000000	                          call 0x40000f9	      1233	pop3.c	FUNCTION_31	CALL_3
0x40000f9	    0x8bb3ec060000	           mov esi, dword [rbx + 0x6ec] 	      1236	pop3.c	FUNCTION_31	CALL_4
0x40000ff	          0x4889df	                            mov rdi, rbx	      1236	pop3.c	FUNCTION_31	CALL_4
0x4000102	      0xe800000000	                          call 0x4000107	      1236	pop3.c	FUNCTION_31	CALL_4
0x4000107	    0x488b05000000	            mov rax, qword [0x0400010e] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x400010e	    0x488bbb000700	           mov rdi, qword [rbx + 0x700] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000115	            0xff10	                        call qword [rax]	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000117	    0x48c783000700	              mov qword [rbx + 0x700], 0	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000122	        0x4883c408	                              add rsp, 8	      1242	pop3.c	FUNCTION_31
0x4000126	            0x31c0	                            xor eax, eax	      1242	pop3.c	FUNCTION_31
0x4000128	              0x5b	                                 pop rbx	      1242	pop3.c	FUNCTION_31
0x4000129	              0x5d	                                 pop rbp	      1242	pop3.c	FUNCTION_31
0x400012a	              0xc3	                                     ret	      1242	pop3.c	FUNCTION_31
0x400012b	       0xf1f440000	                   nop dword [rax + rax]	      1242	pop3.c	FUNCTION_31
0x4000130	    0x488d15000000	                   lea rdx, [0x04000137]	       598	pop3.c	FUNCTION_13	CALL_1
0x4000137	    0x488d35000000	                   lea rsi, [0x0400013e]	       598	pop3.c	FUNCTION_13	CALL_1
0x400013e	            0x31c0	                            xor eax, eax	       598	pop3.c	FUNCTION_13	CALL_1
0x4000140	          0x4889ef	                            mov rdi, rbp	       598	pop3.c	FUNCTION_13	CALL_1
0x4000143	      0xe800000000	                          call 0x4000148	       598	pop3.c	FUNCTION_13	CALL_1
0x4000148	            0x85c0	                           test eax, eax	       600	pop3.c	FUNCTION_13	IF_1
0x400014a	            0x75a5	                           jne 0x40000f1	       600	pop3.c	FUNCTION_13	IF_1
0x400014c	    0xc783c0060000	            mov dword [rbx + 0x6c0], 0xa	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000156	            0xeb0c	                           jmp 0x4000164	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000160	            0x85c0	                           test eax, eax	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000162	            0x758d	                           jne 0x40000f1	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000164	      0xbe01000000	                              mov esi, 1	      1032	pop3.c	FUNCTION_24	CALL_1
0x4000169	          0x4889ef	                            mov rdi, rbp	      1032	pop3.c	FUNCTION_24	CALL_1
0x400016c	      0xe800000000	                          call 0x4000171	      1032	pop3.c	FUNCTION_24	CALL_1
0x4000171	    0x8b93c0060000	           mov edx, dword [rbx + 0x6c0] 	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000177	            0x85d2	                           test edx, edx	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000179	            0x75e5	                           jne 0x4000160	      1031	pop3.c	FUNCTION_24	WHILE_1
0x400017b	      0xe971ffffff	                           jmp 0x40000f1	      1031	pop3.c	FUNCTION_24	WHILE_1
pop3_done	SWITCH,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0:IF,2:CALL,3	33
0x4000200	            0x4154	                                push r12	      1117	pop3.c	FUNCTION_28
0x4000202	              0x55	                                push rbp	      1117	pop3.c	FUNCTION_28
0x4000203	              0x53	                                push rbx	      1117	pop3.c	FUNCTION_28
0x4000204	          0x488b07	                    mov rax, qword [rdi]	      1120	pop3.c	FUNCTION_28
0x4000207	    0x488ba8e80100	           mov rbp, qword [rax + 0x1e8] 	      1120	pop3.c	FUNCTION_28
0x400020e	          0x4885ed	                           test rbp, rbp	      1124	pop3.c	FUNCTION_28	IF_1
0x4000211	            0x744d	                            je 0x4000260	      1124	pop3.c	FUNCTION_28	IF_1
0x4000213	            0x85f6	                           test esi, esi	      1127	pop3.c	FUNCTION_28	IF_2
0x4000215	            0x89f3	                            mov ebx, esi	      1127	pop3.c	FUNCTION_28	IF_2
0x4000217	            0x7537	                           jne 0x4000250	      1127	pop3.c	FUNCTION_28	IF_2
0x4000219	    0x4c8b25000000	            mov r12, qword [0x04000220] 	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000220	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000224	        0x41ff1424	                        call qword [r12]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000228	    0x48c745080000	                  mov qword [rbp + 8], 0	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000230	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000234	        0x41ff1424	                        call qword [r12]	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000238	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000240	    0xc74500000000	                      mov dword [rbp], 0	      1137	pop3.c	FUNCTION_28
0x4000247	            0x89d8	                            mov eax, ebx	      1139	pop3.c	FUNCTION_28
0x4000249	              0x5b	                                 pop rbx	      1140	pop3.c	FUNCTION_28
0x400024a	              0x5d	                                 pop rbp	      1140	pop3.c	FUNCTION_28
0x400024b	            0x415c	                                 pop r12	      1140	pop3.c	FUNCTION_28
0x400024d	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_28
0x400024e	            0x6690	                                     nop	      1140	pop3.c	FUNCTION_28
0x4000250	      0xbe01000000	                              mov esi, 1	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4000255	      0xe800000000	                          call 0x400025a	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400025a	            0xebbd	                           jmp 0x4000219	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400025c	         0xf1f4000	                         nop dword [rax]	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4000260	              0x5b	                                 pop rbx	      1140	pop3.c	FUNCTION_28
0x4000261	            0x31c0	                            xor eax, eax	      1125	pop3.c	FUNCTION_28	IF_1
0x4000263	              0x5d	                                 pop rbp	      1140	pop3.c	FUNCTION_28
0x4000264	            0x415c	                                 pop r12	      1140	pop3.c	FUNCTION_28
0x4000266	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_28
pop3_continue_auth	SWITCH,0:WHILE,0:ELSE,0:DO,0:FOR,0:functions,0:IF,0:CALL,1	5
0x40000a0	          0x4889f2	                            mov rdx, rsi	       491	pop3.c	FUNCTION_10
0x40000a3	    0x488d35000000	                   lea rsi, [0x040000aa]	       494	pop3.c	FUNCTION_10	CALL_1
0x40000aa	    0x4881c7500600	                          add rdi, 0x650	       494	pop3.c	FUNCTION_10	CALL_1
0x40000b1	            0x31c0	                            xor eax, eax	       494	pop3.c	FUNCTION_10	CALL_1
0x40000b3	      0xe900000000	                           jmp 0x40000b8	       494	pop3.c	FUNCTION_10	CALL_1
Curl_pop3_write	SWITCH,1:WHILE,1:ELSE,5:DO,0:FOR,1:functions,0:IF,13:CALL,4	157
0x4000be0	            0x4157	                                push r15	      1424	pop3.c	FUNCTION_39
0x4000be2	            0x4156	                                push r14	      1424	pop3.c	FUNCTION_39
0x4000be4	            0x4155	                                push r13	      1424	pop3.c	FUNCTION_39
0x4000be6	            0x4154	                                push r12	      1424	pop3.c	FUNCTION_39
0x4000be8	              0x55	                                push rbp	      1424	pop3.c	FUNCTION_39
0x4000be9	              0x53	                                push rbx	      1424	pop3.c	FUNCTION_39
0x4000bea	          0x4889fb	                            mov rbx, rdi	      1424	pop3.c	FUNCTION_39
0x4000bed	        0x4883ec08	                              sub rsp, 8	      1424	pop3.c	FUNCTION_39
0x4000bf1	          0x4885d2	                           test rdx, rdx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bf4	          0x4c8b27	                    mov r12, qword [rdi]	      1427	pop3.c	FUNCTION_39
0x4000bf7	     0xf8408020000	                            je 0x4000e05	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bfd	          0x4989d6	                            mov r14, rdx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c00	          0x4989f5	                            mov r13, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c03	    0x488b87c80600	           mov rax, qword [rdi + 0x6c8] 	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c0a	            0x31ed	                            xor ebp, ebp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c0c	            0x31d2	                            xor edx, edx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c0e	          0x4531ff	                          xor r15d, r15d	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c11	            0xeb3b	                           jmp 0x4000c4e	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c13	       0xf1f440000	                   nop dword [rax + rax]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c18	        0x4080fe2e	                           cmp sil, 0x2e	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c1c	     0xf84fe000000	                            je 0x4000d20	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c22	        0x4080fe0a	                            cmp sil, 0xa	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c26	     0xf84c4000000	                            je 0x4000cf0	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c2c	            0x31f6	                            xor esi, esi	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c2e	          0x4885c0	                           test rax, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c31	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1491	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4000c3c	     0xf8506010000	                           jne 0x4000d48	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c42	        0x4883c501	                              add rbp, 1	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c46	          0x4889f0	                            mov rax, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c49	          0x4939ee	                            cmp r14, rbp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c4c	            0x7462	                            je 0x4000cb0	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c4e	    0x410fb6742d00	             movzx esi, byte [r13 + rbp]	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c54	        0x4080fe0d	                            cmp sil, 0xd	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c58	            0x75be	                           jne 0x4000c18	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000c5a	          0x4885c0	                           test rax, rax	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000c5d	     0xf8515010000	                           jne 0x4000d78	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000c63	          0x4885ed	                           test rbp, rbp	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4000c66	    0x48c783c80600	              mov qword [rbx + 0x6c8], 1	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000c71	     0xf8499000000	                            je 0x4000d10	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4000c77	          0x4889e9	                            mov rcx, rbp	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c7a	      0xbe01000000	                              mov esi, 1	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c7f	          0x4889df	                            mov rdi, rbx	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c82	          0x4829d1	                            sub rcx, rdx	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c85	          0x4c01ea	                            add rdx, r13	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c88	      0xe800000000	                          call 0x4000c8d	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000c8d	            0x85c0	                           test eax, eax	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000c8f	     0xf85a7010000	                           jne 0x4000e3c	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000c95	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000c9c	          0x4889ea	                            mov rdx, rbp	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000c9f	        0x4883c501	                              add rbp, 1	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000ca3	          0x4939ee	                            cmp r14, rbp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000ca6	          0x4889f0	                            mov rax, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000ca9	            0x75a3	                           jne 0x4000c4e	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000cab	       0xf1f440000	                   nop dword [rax + rax]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000cb0	        0x4883fe05	                              cmp rsi, 5	      1520	pop3.c	FUNCTION_39	IF_11
0x4000cb4	     0xf8455010000	                            je 0x4000e0f	      1520	pop3.c	FUNCTION_39	IF_11
0x4000cba	          0x4c39f2	                            cmp rdx, r14	      1536	pop3.c	FUNCTION_39	IF_13
0x4000cbd	     0xf8488010000	                            je 0x4000e4b	      1536	pop3.c	FUNCTION_39	IF_13
0x4000cc3	          0x4885f6	                           test rsi, rsi	      1536	pop3.c	FUNCTION_39	IF_13
0x4000cc6	     0xf857f010000	                           jne 0x4000e4b	      1536	pop3.c	FUNCTION_39	IF_13
0x4000ccc	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000cd0	          0x4c89f1	                            mov rcx, r14	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000cd3	          0x4889df	                            mov rdi, rbx	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000cd6	          0x4829d1	                            sub rcx, rdx	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000cd9	          0x4c01ea	                            add rdx, r13	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000cdc	      0xbe01000000	                              mov esi, 1	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000ce1	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000ce2	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000ce3	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000ce5	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000ce7	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000ce9	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000ceb	      0xe900000000	                           jmp 0x4000cf0	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000cf0	        0x4883f801	                              cmp rax, 1	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000cf4	            0x740a	                            je 0x4000d00	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000cf6	        0x4883f804	                              cmp rax, 4	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000cfa	     0xf852cffffff	                           jne 0x4000c2c	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000d00	        0x488d7001	                      lea rsi, [rax + 1]	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000d04	          0x4885c0	                           test rax, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d07	    0x4889b3c80600	            mov qword [rbx + 0x6c8], rsi	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000d0e	            0x757e	                           jne 0x4000d8e	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d10	      0xbe01000000	                              mov esi, 1	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d15	      0xe928ffffff	                           jmp 0x4000c42	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d1a	    0x660f1f440000	                    nop word [rax + rax]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d20	        0x4883f802	                              cmp rax, 2	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d24	     0xf84ae000000	                            je 0x4000dd8	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d2a	        0x4883f803	                              cmp rax, 3	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d2e	     0xf85f8feffff	                           jne 0x4000c2c	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d34	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1482	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d3f	    0x41bf01000000	                             mov r15d, 1	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d45	           0xf1f00	                         nop dword [rax]	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d48	    0x488bb3d00600	           mov rsi, qword [rbx + 0x6d0] 	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d4f	              0x90	                                     nop	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000d50	          0x4885f6	                           test rsi, rsi	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d53	            0x744b	                            je 0x4000da0	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d55	        0x4883ee01	                              sub rsi, 1	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d59	        0x4883e801	                              sub rax, 1	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d5d	    0x4889b3d00600	            mov qword [rbx + 0x6d0], rsi	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d64	            0x75ea	                           jne 0x4000d50	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d66	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d6d	      0xe9d0feffff	                           jmp 0x4000c42	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d72	    0x660f1f440000	                    nop word [rax + rax]	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000d78	        0x4883f803	                              cmp rax, 3	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000d7c	            0x7472	                            je 0x4000df0	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000d7e	    0x48c783c80600	              mov qword [rbx + 0x6c8], 1	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x4000d89	      0xbe01000000	                              mov esi, 1	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x4000d8e	          0x4839c6	                            cmp rsi, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d91	     0xf87abfeffff	                            ja 0x4000c42	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d97	            0xebaf	                           jmp 0x4000d48	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000d99	     0xf1f80000000	                         nop dword [rax]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000da0	        0x488d48ff	                      lea rcx, [rax - 1]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000da4	          0x4584ff	                         test r15b, r15b	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000da7	    0x488d15000000	                   lea rdx, [0x04000dae]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000dae	      0xbe01000000	                              mov esi, 1	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000db3	          0x4889df	                            mov rdi, rbx	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000db6	        0x480f44c8	                          cmove rcx, rax	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000dba	      0xe800000000	                          call 0x4000dbf	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000dbf	            0x85c0	                           test eax, eax	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000dc1	            0x7579	                           jne 0x4000e3c	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000dc3	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000dca	          0x4889ea	                            mov rdx, rbp	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000dcd	          0x4531ff	                          xor r15d, r15d	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000dd0	      0xe96dfeffff	                           jmp 0x4000c42	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000dd5	           0xf1f00	                         nop dword [rax]	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000dd8	    0x48c783c80600	              mov qword [rbx + 0x6c8], 3	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000de3	      0xbe03000000	                              mov esi, 3	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000de8	      0xe955feffff	                           jmp 0x4000c42	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000ded	           0xf1f00	                         nop dword [rax]	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000df0	    0x48c783c80600	              mov qword [rbx + 0x6c8], 4	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000dfb	      0xbe04000000	                              mov esi, 4	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000e00	      0xe93dfeffff	                           jmp 0x4000c42	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000e05	    0x4883bfc80600	              cmp qword [rdi + 0x6c8], 5	      1520	pop3.c	FUNCTION_39	IF_11
0x4000e0d	            0x753c	                           jne 0x4000e4b	      1520	pop3.c	FUNCTION_39	IF_11
0x4000e0f	    0x488d15000000	                   lea rdx, [0x04000e16]	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000e16	      0xb902000000	                              mov ecx, 2	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000e1b	      0xbe01000000	                              mov esi, 1	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000e20	          0x4889df	                            mov rdi, rbx	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000e23	      0xe800000000	                          call 0x4000e28	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000e28	    0x4183a424b401	     and dword [r12 + 0x1b4], 0xfffffffe	      1526	pop3.c	FUNCTION_39	IF_11
0x4000e31	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1527	pop3.c	FUNCTION_39	IF_11
0x4000e3c	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000e40	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000e41	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000e42	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000e44	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000e46	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000e48	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000e4a	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_39
0x4000e4b	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000e4f	            0x31c0	                            xor eax, eax	      1529	pop3.c	FUNCTION_39	IF_11
0x4000e51	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000e52	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000e53	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000e55	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000e57	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000e59	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000e5b	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_39
