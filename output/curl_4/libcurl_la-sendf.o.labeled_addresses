Curl_recv_plain	DO,0:WHILE,0:SWITCH,0:IF,3:ELSE,1:FOR,0:functions,0:CALL,3	59
0x4000a10	            0x4155	                                push r13	       436	sendf.c	FUNCTION_10
0x4000a12	            0x4154	                                push r12	       436	sendf.c	FUNCTION_10
0x4000a14	          0x4863c6	                         movsxd rax, esi	       437	sendf.c	FUNCTION_10
0x4000a17	              0x55	                                push rbp	       436	sendf.c	FUNCTION_10
0x4000a18	              0x53	                                push rbx	       436	sendf.c	FUNCTION_10
0x4000a19	          0x4889fd	                            mov rbp, rdi	       436	sendf.c	FUNCTION_10
0x4000a1c	          0x4989d1	                             mov r9, rdx	       436	sendf.c	FUNCTION_10
0x4000a1f	          0x4889ca	                            mov rdx, rcx	       436	sendf.c	FUNCTION_10
0x4000a22	            0x31c9	                            xor ecx, ecx	        44	socket2.h	FUNCTION_18	CALL_8
0x4000a24	        0x4883ec08	                              sub rsp, 8	       436	sendf.c	FUNCTION_10
0x4000a28	    0x8bbc87580200	   mov edi, dword [rdi + rax*4 + 0x258] 	        44	socket2.h	FUNCTION_18	CALL_8
0x4000a2f	          0x4c89ce	                             mov rsi, r9	        44	socket2.h	FUNCTION_18	CALL_8
0x4000a32	          0x4d89c4	                             mov r12, r8	       436	sendf.c	FUNCTION_10
0x4000a35	      0xe800000000	                          call 0x4000a3a	        44	socket2.h	FUNCTION_18	CALL_8
0x4000a3a	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       450	sendf.c	FUNCTION_10	IF_2
0x4000a3e	          0x4889c3	                            mov rbx, rax	        44	socket2.h	FUNCTION_18	CALL_8
0x4000a41	    0x41c704240000	                      mov dword [r12], 0	       449	sendf.c	FUNCTION_10
0x4000a49	            0x7415	                            je 0x4000a60	       450	sendf.c	FUNCTION_10	IF_2
0x4000a4b	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000a4f	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000a52	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000a53	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000a54	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000a56	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000a58	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
0x4000a59	     0xf1f80000000	                         nop dword [rax]	       475	sendf.c	FUNCTION_10
0x4000a60	      0xe800000000	                          call 0x4000a65	       451	sendf.c	FUNCTION_10	IF_2
0x4000a65	          0x448b28	                   mov r13d, dword [rax]	       451	sendf.c	FUNCTION_10	IF_2
0x4000a68	        0x4183fd0b	                           cmp r13d, 0xb	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000a6c	            0x744a	                            je 0x4000ab8	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000a6e	        0x4183fd04	                             cmp r13d, 4	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000a72	            0x7444	                            je 0x4000ab8	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000a74	          0x4489ee	                           mov esi, r13d	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a77	          0x4889ef	                            mov rdi, rbp	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a7a	      0xe800000000	                          call 0x4000a7f	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a7f	        0x488b7d00	                    mov rdi, qword [rbp]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a83	    0x488d35000000	                   lea rsi, [0x04000a8a]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a8a	          0x4889c2	                            mov rdx, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a8d	            0x31c0	                            xor eax, eax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a8f	      0xe800000000	                          call 0x4000a94	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000a94	        0x488b4500	                    mov rax, qword [rbp]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000a98	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000a9f	    0x41c704243800	                   mov dword [r12], 0x38	       471	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000aa7	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000aab	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000aae	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000aaf	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000ab0	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000ab2	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000ab4	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
0x4000ab5	           0xf1f00	                         nop dword [rax]	       475	sendf.c	FUNCTION_10
0x4000ab8	    0x41c704245100	                   mov dword [r12], 0x51	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000ac0	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000ac4	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000ac7	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000ac8	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000ac9	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000acb	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000acd	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
Curl_client_write	DO,0:WHILE,0:SWITCH,0:IF,3:ELSE,0:FOR,0:functions,0:CALL,5	404
0x4000ad0	            0x4157	                                push r15	       644	sendf.c	FUNCTION_13
0x4000ad2	            0x4156	                                push r14	       644	sendf.c	FUNCTION_13
0x4000ad4	            0x4155	                                push r13	       644	sendf.c	FUNCTION_13
0x4000ad6	            0x4154	                                push r12	       644	sendf.c	FUNCTION_13
0x4000ad8	              0x55	                                push rbp	       644	sendf.c	FUNCTION_13
0x4000ad9	              0x53	                                push rbx	       644	sendf.c	FUNCTION_13
0x4000ada	          0x4889fb	                            mov rbx, rdi	       644	sendf.c	FUNCTION_13
0x4000add	        0x4883ec28	                           sub rsp, 0x28	       644	sendf.c	FUNCTION_13
0x4000ae1	          0x4885c9	                           test rcx, rcx	       647	sendf.c	FUNCTION_13	IF_1
0x4000ae4	          0x4c8b3f	                    mov r15, qword [rdi]	       645	sendf.c	FUNCTION_13
0x4000ae7	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       644	sendf.c	FUNCTION_13
0x4000aec	        0x89742404	                mov dword [rsp + 4], esi	       644	sendf.c	FUNCTION_13
0x4000af0	      0x4889542408	                mov qword [rsp + 8], rdx	       644	sendf.c	FUNCTION_13
0x4000af5	            0x7551	                           jne 0x4000b48	       647	sendf.c	FUNCTION_13	IF_1
0x4000af7	          0x4189f6	                           mov r14d, esi	       647	sendf.c	FUNCTION_13	IF_1
0x4000afa	          0x4889d7	                            mov rdi, rdx	       648	sendf.c	FUNCTION_13	CALL_1
0x4000afd	      0xe800000000	                          call 0x4000b02	       648	sendf.c	FUNCTION_13	CALL_1
0x4000b02	          0x4989c4	                            mov r12, rax	       648	sendf.c	FUNCTION_13	CALL_1
0x4000b05	          0x4489f0	                           mov eax, r14d	       653	sendf.c	FUNCTION_13	IF_2
0x4000b08	          0x83e001	                              and eax, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000b0b	            0x7422	                            je 0x4000b2f	       653	sendf.c	FUNCTION_13	IF_2
0x4000b0d	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b14	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000b1b	      0xb801000000	                              mov eax, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000b20	            0x740d	                            je 0x4000b2f	       653	sendf.c	FUNCTION_13	IF_2
0x4000b22	    0x80bbfc060000	           cmp byte [rbx + 0x6fc], 0x41 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b29	     0xf84b1020000	                            je 0x4000de0	       654	sendf.c	FUNCTION_13	IF_2
0x4000b2f	          0x4d85e4	                           test r12, r12	       559	sendf.c	FUNCTION_12	IF_1
0x4000b32	            0x754d	                           jne 0x4000b81	       559	sendf.c	FUNCTION_12	IF_1
0x4000b34	            0x31c0	                            xor eax, eax	       540	sendf.c	FUNCTION_11
0x4000b36	        0x4883c428	                           add rsp, 0x28	       669	sendf.c	FUNCTION_13
0x4000b3a	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000b3b	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000b3c	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000b3e	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000b40	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000b42	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000b44	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000b45	           0xf1f00	                         nop dword [rax]	       669	sendf.c	FUNCTION_13
0x4000b48	      0xf644240401	                  test byte [rsp + 4], 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000b4d	          0x4989cc	                            mov r12, rcx	       653	sendf.c	FUNCTION_13	IF_2
0x4000b50	     0xf8432010000	                            je 0x4000c88	       653	sendf.c	FUNCTION_13	IF_2
0x4000b56	    0x488b87e00300	           mov rax, qword [rdi + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b5d	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000b64	     0xf84be010000	                            je 0x4000d28	       653	sendf.c	FUNCTION_13	IF_2
0x4000b6a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b6f	    0x80b8fc060000	           cmp byte [rax + 0x6fc], 0x41 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b76	     0xf8464020000	                            je 0x4000de0	       654	sendf.c	FUNCTION_13	IF_2
0x4000b7c	      0xb801000000	                              mov eax, 1	       654	sendf.c	FUNCTION_13	IF_2
0x4000b81	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000b89	     0xf85b1010000	                           jne 0x4000d40	       564	sendf.c	FUNCTION_12	IF_2
0x4000b8f	            0x85c0	                           test eax, eax	       568	sendf.c	FUNCTION_12	IF_3
0x4000b91	     0xf84ff000000	                            je 0x4000c96	       568	sendf.c	FUNCTION_12	IF_3
0x4000b97	      0xf644240402	                  test byte [rsp + 4], 2	       570	sendf.c	FUNCTION_12	IF_4
0x4000b9c	    0x498b9f880200	           mov rbx, qword [r15 + 0x288] 	       569	sendf.c	FUNCTION_12	IF_3
0x4000ba3	    0x48c744241800	               mov qword [rsp + 0x18], 0	       554	sendf.c	FUNCTION_12
0x4000bac	     0xf85ed000000	                           jne 0x4000c9f	       570	sendf.c	FUNCTION_12	IF_4
0x4000bb2	          0x4885db	                           test rbx, rbx	       570	sendf.c	FUNCTION_12	IF_4
0x4000bb5	      0x4c8b742408	                mov r14, qword [rsp + 8]	       554	sendf.c	FUNCTION_12
0x4000bba	          0x4d89e5	                            mov r13, r12	       554	sendf.c	FUNCTION_12
0x4000bbd	     0xf841e010000	                            je 0x4000ce1	       554	sendf.c	FUNCTION_12
0x4000bc3	       0xf1f440000	                   nop dword [rax + rax]	       554	sendf.c	FUNCTION_12
0x4000bc8	    0x4981fd004000	                         cmp r13, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000bcf	      0xbd00400000	                         mov ebp, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000bd4	    0x498b8f100200	           mov rcx, qword [r15 + 0x210] 	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000bdb	        0x490f46ed	                         cmovbe rbp, r13	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000bdf	      0xbe01000000	                              mov esi, 1	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000be4	          0x4c89f7	                            mov rdi, r14	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000be7	          0x4889ea	                            mov rdx, rbp	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000bea	            0xffd3	                                call rbx	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000bec	    0x483d01000010	                     cmp rax, 0x10000001	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000bf2	     0xf84b0020000	                            je 0x4000ea8	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000bf8	          0x4839c5	                            cmp rbp, rax	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000bfb	     0xf85df020000	                           jne 0x4000ee0	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000c01	          0x4901ee	                            add r14, rbp	       603	sendf.c	FUNCTION_12	WHILE_1
0x4000c04	          0x4929ed	                            sub r13, rbp	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000c07	            0x75bf	                           jne 0x4000bc8	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000c09	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       607	sendf.c	FUNCTION_12	IF_9
0x4000c0e	          0x4885db	                           test rbx, rbx	       607	sendf.c	FUNCTION_12	IF_9
0x4000c11	     0xf841dffffff	                            je 0x4000b34	       607	sendf.c	FUNCTION_12	IF_9
0x4000c17	      0xbe01000000	                              mov esi, 1	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000c1c	          0x4c89ff	                            mov rdi, r15	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000c1f	      0xe800000000	                          call 0x4000c24	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000c24	    0x498b8f200200	           mov rcx, qword [r15 + 0x220] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c2b	          0x4c89e2	                            mov rdx, r12	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c2e	      0xbe01000000	                              mov esi, 1	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c33	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c38	            0xffd3	                                call rbx	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c3a	            0x31f6	                            xor esi, esi	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000c3c	          0x4889c3	                            mov rbx, rax	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000c3f	          0x4c89ff	                            mov rdi, r15	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000c42	      0xe800000000	                          call 0x4000c47	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000c47	    0x4881fb010000	                     cmp rbx, 0x10000001	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000c4e	     0xf84cc030000	                            je 0x4001020	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000c54	          0x4c39e3	                            cmp rbx, r12	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000c57	     0xf84d7feffff	                            je 0x4000b34	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000c5d	    0x488d35000000	                   lea rsi, [0x04000c64]	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000c64	          0x4c89ff	                            mov rdi, r15	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000c67	            0x31c0	                            xor eax, eax	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000c69	      0xe800000000	                          call 0x4000c6e	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000c6e	        0x4883c428	                           add rsp, 0x28	       669	sendf.c	FUNCTION_13
0x4000c72	      0xb817000000	                           mov eax, 0x17	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000c77	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000c78	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000c79	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000c7b	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000c7d	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000c7f	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000c81	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000c82	    0x660f1f440000	                    nop word [rax + rax]	       669	sendf.c	FUNCTION_13
0x4000c88	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000c90	     0xf85aa000000	                           jne 0x4000d40	       564	sendf.c	FUNCTION_12	IF_2
0x4000c96	      0xf644240402	                  test byte [rsp + 4], 2	       570	sendf.c	FUNCTION_12	IF_4
0x4000c9b	            0x743b	                            je 0x4000cd8	       570	sendf.c	FUNCTION_12	IF_4
0x4000c9d	            0x31db	                            xor ebx, ebx	       555	sendf.c	FUNCTION_12
0x4000c9f	    0x498b87900200	           mov rax, qword [r15 + 0x290] 	       571	sendf.c	FUNCTION_12	IF_4
0x4000ca6	          0x4885c0	                           test rax, rax	       570	sendf.c	FUNCTION_12	IF_4
0x4000ca9	      0x4889442418	             mov qword [rsp + 0x18], rax	       571	sendf.c	FUNCTION_12	IF_4
0x4000cae	     0xf85fefeffff	                           jne 0x4000bb2	       570	sendf.c	FUNCTION_12	IF_4
0x4000cb4	    0x4983bf200200	              cmp qword [r15 + 0x220], 0	       571	sendf.c	FUNCTION_12	IF_4
0x4000cbc	     0xf84f0feffff	                            je 0x4000bb2	       571	sendf.c	FUNCTION_12	IF_4
0x4000cc2	    0x498b87880200	           mov rax, qword [r15 + 0x288] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000cc9	      0x4889442418	             mov qword [rsp + 0x18], rax	       577	sendf.c	FUNCTION_12	IF_4
0x4000cce	      0xe9dffeffff	                           jmp 0x4000bb2	       577	sendf.c	FUNCTION_12	IF_4
0x4000cd3	       0xf1f440000	                   nop dword [rax + rax]	       577	sendf.c	FUNCTION_12	IF_4
0x4000cd8	    0x48c744241800	               mov qword [rsp + 0x18], 0	       554	sendf.c	FUNCTION_12
0x4000ce1	          0x4c89e0	                            mov rax, r12	       554	sendf.c	FUNCTION_12
0x4000ce4	      0xb900400000	                         mov ecx, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000ce9	     0xf1f80000000	                         nop dword [rax]	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000cf0	    0x483d00400000	                         cmp rax, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000cf6	          0x4889ca	                            mov rdx, rcx	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000cf9	        0x480f46d0	                         cmovbe rdx, rax	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000cfd	          0x4829d0	                            sub rax, rdx	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d00	            0x75ee	                           jne 0x4000cf0	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d02	      0xe902ffffff	                           jmp 0x4000c09	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d07	          0x4889c7	                            mov rdi, rax	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000d0a	          0x4c89e2	                            mov rdx, r12	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d0d	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d12	      0xe800000000	                          call 0x4000d17	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d17	          0x4885c0	                           test rax, rax	        85	sendf.c	FUNCTION_1	IF_4
0x4000d1a	          0x4889c5	                            mov rbp, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d1d	     0xf8511010000	                           jne 0x4000e34	        85	sendf.c	FUNCTION_1	IF_4
0x4000d23	       0xf1f440000	                   nop dword [rax + rax]	        85	sendf.c	FUNCTION_1	IF_4
0x4000d28	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000d30	     0xf8461feffff	                            je 0x4000b97	       564	sendf.c	FUNCTION_12	IF_2
0x4000d36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       564	sendf.c	FUNCTION_12	IF_2
0x4000d40	    0x418b87604d00	          mov eax, dword [r15 + 0x4d60] 	       491	sendf.c	FUNCTION_11	IF_1
0x4000d47	            0x85c0	                           test eax, eax	       491	sendf.c	FUNCTION_11	IF_1
0x4000d49	     0xf84d1010000	                            je 0x4000f20	       491	sendf.c	FUNCTION_11	IF_1
0x4000d4f	        0x8b742404	                mov esi, dword [rsp + 4]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d53	    0x413bb7784d00	          cmp esi, dword [r15 + 0x4d78] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d5a	     0xf8400040000	                            je 0x4001160	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d60	          0x83f801	                              cmp eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000d63	     0xf86cd030000	                           jbe 0x4001136	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000d69	    0x413bb7904d00	          cmp esi, dword [r15 + 0x4d90] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d70	     0xf84b9030000	                            je 0x400112f	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d76	          0x83f802	                              cmp eax, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000d79	     0xf84a6030000	                            je 0x4001125	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000d7f	    0x413bb7a84d00	          cmp esi, dword [r15 + 0x4da8] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d86	     0xf8439030000	                            je 0x40010c5	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000d8c	      0xbb03000000	                              mov ebx, 3	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000d91	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d96	          0x4c89e6	                            mov rsi, r12	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d99	      0xe800000000	                          call 0x4000d9e	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d9e	          0x4885c0	                           test rax, rax	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000da1	     0xf8469010000	                            je 0x4000f10	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000da7	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000dab	        0x498d14d7	                  lea rdx, [r15 + rdx*8]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000daf	    0x488982684d00	          mov qword [rdx + 0x4d68], rax 	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000db6	        0x8b442404	                mov eax, dword [rsp + 4]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000dba	    0x4c89a2704d00	          mov qword [rdx + 0x4d70], r12 	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000dc1	    0x8982784d0000	          mov dword [rdx + 0x4d78], eax 	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000dc7	    0x418387604d00	             add dword [r15 + 0x4d60], 1	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000dcf	    0x41838fb40100	            or dword [r15 + 0x1b4], 0x10	       535	sendf.c	FUNCTION_11
0x4000dd7	      0xe958fdffff	                           jmp 0x4000b34	       535	sendf.c	FUNCTION_11
0x4000ddc	         0xf1f4000	                         nop dword [rax]	       535	sendf.c	FUNCTION_11
0x4000de0	      0x488b442408	                mov rax, qword [rsp + 8]	        65	sendf.c	FUNCTION_1	IF_1
0x4000de5	          0x4885c0	                           test rax, rax	        65	sendf.c	FUNCTION_1	IF_1
0x4000de8	     0xf8439010000	                            je 0x4000f27	        65	sendf.c	FUNCTION_1	IF_1
0x4000dee	          0x4d85e4	                           test r12, r12	        65	sendf.c	FUNCTION_1	IF_1
0x4000df1	     0xf8430010000	                            je 0x4000f27	        65	sendf.c	FUNCTION_1	IF_1
0x4000df7	    0x4180bf025100	              cmp byte [r15 + 0x5102], 0	        69	sendf.c	FUNCTION_1	IF_2
0x4000dff	     0xf8402ffffff	                            je 0x4000d07	        69	sendf.c	FUNCTION_1	IF_2
0x4000e05	          0x80380a	                     cmp byte [rax], 0xa	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000e08	     0xf8432030000	                            je 0x4001140	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000e0e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        84	sendf.c	FUNCTION_1	CALL_2
0x4000e13	    0x41c687025100	              mov byte [r15 + 0x5102], 0	        80	sendf.c	FUNCTION_1	IF_2
0x4000e1b	          0x4c89e2	                            mov rdx, r12	        84	sendf.c	FUNCTION_1	CALL_2
0x4000e1e	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x4000e23	      0xe800000000	                          call 0x4000e28	        84	sendf.c	FUNCTION_1	CALL_2
0x4000e28	          0x4885c0	                           test rax, rax	        85	sendf.c	FUNCTION_1	IF_4
0x4000e2b	          0x4889c5	                            mov rbp, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x4000e2e	     0xf84d3010000	                            je 0x4001007	        85	sendf.c	FUNCTION_1	IF_4
0x4000e34	      0x488b442408	                mov rax, qword [rsp + 8]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e39	          0x4989ed	                            mov r13, rbp	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e3c	      0x4a8d5c20ff	                lea rbx, [rax + r12 - 1]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e41	          0x4839dd	                            cmp rbp, rbx	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e44	            0x722f	                            jb 0x4000e75	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e46	      0xe98c010000	                           jmp 0x4000fd7	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e4b	       0xf1f440000	                   nop dword [rax + rax]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e50	         0xfb65501	               movzx edx, byte [rbp + 1]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e54	        0x488d4501	                      lea rax, [rbp + 1]	        91	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e58	        0x41885500	                      mov byte [r13], dl	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e5c	    0x498387085100	             add qword [r15 + 0x5108], 1	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e64	        0x488d6801	                      lea rbp, [rax + 1]	       107	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e68	        0x4983c501	                              add r13, 1	       106	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e6c	          0x4839dd	                            cmp rbp, rbx	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e6f	     0xf8362010000	                           jae 0x4000fd7	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e75	    0x488d35000000	                   lea rsi, [0x04000e7c]	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e7c	      0xba02000000	                              mov edx, 2	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e81	          0x4889ef	                            mov rdi, rbp	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e84	      0xe800000000	                          call 0x4000e89	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e89	            0x85c0	                           test eax, eax	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e8b	            0x74c3	                            je 0x4000e50	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e8d	         0xfb64500	                   movzx eax, byte [rbp]	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e91	            0x3c0d	                             cmp al, 0xd	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e93	     0xf849f000000	                            je 0x4000f38	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e99	        0x41884500	                      mov byte [r13], al	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000e9d	          0x4889e8	                            mov rax, rbp	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000ea0	            0xebc2	                           jmp 0x4000e64	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000ea2	    0x660f1f440000	                    nop word [rax + rax]	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000ea8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ead	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000eb4	    0xf68084000000	           test byte [rax + 0x84], 0x10 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ebb	     0xf8484000000	                            je 0x4000f45	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ec1	    0x488d35000000	                   lea rsi, [0x04000ec8]	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000ec8	            0x31c0	                            xor eax, eax	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000eca	          0x4c89ff	                            mov rdi, r15	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000ed2	      0xb817000000	                           mov eax, 0x17	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ed7	      0xe95afcffff	                           jmp 0x4000b36	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000edc	         0xf1f4000	                         nop dword [rax]	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ee0	    0x488d35000000	                   lea rsi, [0x04000ee7]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ee7	          0x4889e9	                            mov rcx, rbp	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eea	          0x4889c2	                            mov rdx, rax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eed	          0x4c89ff	                            mov rdi, r15	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ef0	            0x31c0	                            xor eax, eax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ef2	      0xe800000000	                          call 0x4000ef7	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ef7	        0x4883c428	                           add rsp, 0x28	       669	sendf.c	FUNCTION_13
0x4000efb	      0xb817000000	                           mov eax, 0x17	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000f00	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000f01	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000f02	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000f04	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000f06	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000f08	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000f0a	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000f0b	       0xf1f440000	                   nop dword [rax + rax]	       669	sendf.c	FUNCTION_13
0x4000f10	      0xb81b000000	                           mov eax, 0x1b	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000f15	      0xe91cfcffff	                           jmp 0x4000b36	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000f1a	    0x660f1f440000	                    nop word [rax + rax]	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000f20	            0x31db	                            xor ebx, ebx	       502	sendf.c	FUNCTION_11	ELSE_1
0x4000f22	      0xe96afeffff	                           jmp 0x4000d91	       502	sendf.c	FUNCTION_11	ELSE_1
0x4000f27	      0xb801000000	                              mov eax, 1	        65	sendf.c	FUNCTION_1	IF_1
0x4000f2c	      0xe9fefbffff	                           jmp 0x4000b2f	        65	sendf.c	FUNCTION_1	IF_1
0x4000f31	     0xf1f80000000	                         nop dword [rax]	        65	sendf.c	FUNCTION_1	IF_1
0x4000f38	      0x41c645000a	                     mov byte [r13], 0xa	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000f3d	          0x4889e8	                            mov rax, rbp	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000f40	      0xe91fffffff	                           jmp 0x4000e64	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000f45	    0x418b87604d00	          mov eax, dword [r15 + 0x4d60] 	       491	sendf.c	FUNCTION_11	IF_1
0x4000f4c	            0x85c0	                           test eax, eax	       491	sendf.c	FUNCTION_11	IF_1
0x4000f4e	     0xf84c5000000	                            je 0x4001019	       491	sendf.c	FUNCTION_11	IF_1
0x4000f54	        0x8b7c2404	                mov edi, dword [rsp + 4]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f58	    0x413bbf784d00	          cmp edi, dword [r15 + 0x4d78] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f5f	     0xf8402020000	                            je 0x4001167	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f65	          0x83f801	                              cmp eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000f68	     0xf866c020000	                           jbe 0x40011da	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000f6e	    0x413bbf904d00	          cmp edi, dword [r15 + 0x4d90] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f75	     0xf8458020000	                            je 0x40011d3	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f7b	          0x83f802	                              cmp eax, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000f7e	     0xf8445020000	                            je 0x40011c9	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000f84	    0x413bbfa84d00	          cmp edi, dword [r15 + 0x4da8] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f8b	     0xf8431020000	                            je 0x40011c2	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000f91	      0xbb03000000	                              mov ebx, 3	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000f96	          0x4c89ee	                            mov rsi, r13	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000f99	          0x4c89f7	                            mov rdi, r14	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000f9c	      0xe800000000	                          call 0x4000fa1	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000fa1	          0x4885c0	                           test rax, rax	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000fa4	     0xf8466ffffff	                            je 0x4000f10	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000faa	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000fae	        0x498d14d7	                  lea rdx, [r15 + rdx*8]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000fb2	    0x488982684d00	          mov qword [rdx + 0x4d68], rax 	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000fb9	        0x8b442404	                mov eax, dword [rsp + 4]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000fbd	    0x4c89aa704d00	          mov qword [rdx + 0x4d70], r13 	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000fc4	    0x8982784d0000	          mov dword [rdx + 0x4d78], eax 	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000fca	    0x418387604d00	             add dword [r15 + 0x4d60], 1	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000fd2	      0xe9f8fdffff	                           jmp 0x4000dcf	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000fd7	      0x4c03642408	                add r12, qword [rsp + 8]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000fdc	          0x4c39e5	                            cmp rbp, r12	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000fdf	            0x7314	                           jae 0x4000ff5	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000fe1	         0xfb64500	                   movzx eax, byte [rbp]	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000fe5	            0x3c0d	                             cmp al, 0xd	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000fe7	     0xf84c6000000	                            je 0x40010b3	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000fed	        0x41884500	                      mov byte [r13], al	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000ff1	        0x4983c501	                              add r13, 1	       122	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000ff5	          0x4d39ec	                            cmp r12, r13	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000ff8	            0x7605	                           jbe 0x4000fff	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000ffa	      0x41c6450000	                       mov byte [r13], 0	       126	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000fff	          0x4d89ec	                            mov r12, r13	       128	sendf.c	FUNCTION_1	IF_4
0x4001002	      0x4c2b642408	                sub r12, qword [rsp + 8]	       128	sendf.c	FUNCTION_1	IF_4
0x4001007	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       128	sendf.c	FUNCTION_1	IF_4
0x400100c	          0x4c8b38	                    mov r15, qword [rax]	       128	sendf.c	FUNCTION_1	IF_4
0x400100f	      0xb801000000	                              mov eax, 1	       128	sendf.c	FUNCTION_1	IF_4
0x4001014	      0xe916fbffff	                           jmp 0x4000b2f	       128	sendf.c	FUNCTION_1	IF_4
0x4001019	            0x31db	                            xor ebx, ebx	       502	sendf.c	FUNCTION_11	ELSE_1
0x400101b	      0xe976ffffff	                           jmp 0x4000f96	       502	sendf.c	FUNCTION_11	ELSE_1
0x4001020	    0x418b87604d00	          mov eax, dword [r15 + 0x4d60] 	       491	sendf.c	FUNCTION_11	IF_1
0x4001027	            0x85c0	                           test eax, eax	       491	sendf.c	FUNCTION_11	IF_1
0x4001029	     0xf8480000000	                            je 0x40010af	       491	sendf.c	FUNCTION_11	IF_1
0x400102f	    0x4183bf784d00	            cmp dword [r15 + 0x4d78], 2 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001037	     0xf8423010000	                            je 0x4001160	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x400103d	          0x83f801	                              cmp eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001040	     0xf86a8010000	                           jbe 0x40011ee	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001046	    0x4183bf904d00	            cmp dword [r15 + 0x4d90], 2 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x400104e	     0xf84db000000	                            je 0x400112f	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001054	          0x83f802	                              cmp eax, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001057	     0xf8487010000	                            je 0x40011e4	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400105d	    0x4183bfa84d00	            cmp dword [r15 + 0x4da8], 2 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001065	            0x745e	                            je 0x40010c5	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001067	      0xbb03000000	                              mov ebx, 3	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400106c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4001071	          0x4c89e6	                            mov rsi, r12	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4001074	      0xe800000000	                          call 0x4001079	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4001079	          0x4885c0	                           test rax, rax	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x400107c	     0xf848efeffff	                            je 0x4000f10	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4001082	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4001086	        0x498d14d7	                  lea rdx, [r15 + rdx*8]	       526	sendf.c	FUNCTION_11	ELSE_2
0x400108a	    0x488982684d00	          mov qword [rdx + 0x4d68], rax 	       526	sendf.c	FUNCTION_11	ELSE_2
0x4001091	    0x4c89a2704d00	          mov qword [rdx + 0x4d70], r12 	       527	sendf.c	FUNCTION_11	ELSE_2
0x4001098	    0xc782784d0000	            mov dword [rdx + 0x4d78], 2 	       528	sendf.c	FUNCTION_11	ELSE_2
0x40010a2	    0x418387604d00	             add dword [r15 + 0x4d60], 1	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x40010aa	      0xe920fdffff	                           jmp 0x4000dcf	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x40010af	            0x31db	                            xor ebx, ebx	       502	sendf.c	FUNCTION_11	ELSE_1
0x40010b1	            0xebb9	                           jmp 0x400106c	       502	sendf.c	FUNCTION_11	ELSE_1
0x40010b3	      0x41c645000a	                     mov byte [r13], 0xa	       114	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x40010b8	    0x41c687025100	              mov byte [r15 + 0x5102], 1	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x40010c0	      0xe92cffffff	                           jmp 0x4000ff1	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x40010c5	      0xb802000000	                              mov eax, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40010ca	        0x488d0440	                  lea rax, [rax + rax*2]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40010ce	          0x4d89e5	                            mov r13, r12	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40010d1	        0x498d1cc7	                  lea rbx, [r15 + rax*8]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40010d5	    0x488b05000000	            mov rax, qword [0x040010dc] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40010dc	    0x4c03ab704d00	           add r13, qword [rbx + 0x4d70]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40010e3	    0x488bbb684d00	          mov rdi, qword [rbx + 0x4d68] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40010ea	          0x4c89ee	                            mov rsi, r13	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40010ed	            0xff10	                        call qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40010ef	          0x4885c0	                           test rax, rax	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x40010f2	          0x4889c5	                            mov rbp, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40010f5	     0xf8415feffff	                            je 0x4000f10	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x40010fb	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_20	CALL_3
0x40010fe	    0x4803bb704d00	           add rdi, qword [rbx + 0x4d70]	        53	string3.h	FUNCTION_20	CALL_3
0x4001105	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_20	CALL_3
0x400110a	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_20	CALL_3
0x400110d	      0xe800000000	                          call 0x4001112	        53	string3.h	FUNCTION_20	CALL_3
0x4001112	    0x4889ab684d00	          mov qword [rbx + 0x4d68], rbp 	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001119	    0x4c89ab704d00	          mov qword [rbx + 0x4d70], r13 	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001120	      0xe9aafcffff	                           jmp 0x4000dcf	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001125	      0xbb02000000	                              mov ebx, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400112a	      0xe962fcffff	                           jmp 0x4000d91	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400112f	      0xb801000000	                              mov eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001134	            0xeb94	                           jmp 0x40010ca	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001136	      0xbb01000000	                              mov ebx, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400113b	      0xe951fcffff	                           jmp 0x4000d91	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4001140	        0x4983ec01	                              sub r12, 1	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4001144	        0x488d7001	                      lea rsi, [rax + 1]	        59	string3.h	FUNCTION_21	CALL_3
0x4001148	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_21	CALL_3
0x400114b	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_21	CALL_3
0x400114e	      0xe800000000	                          call 0x4001153	        59	string3.h	FUNCTION_21	CALL_3
0x4001153	    0x498387085100	             add qword [r15 + 0x5108], 1	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x400115b	      0xe9aefcffff	                           jmp 0x4000e0e	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x4001160	            0x31c0	                            xor eax, eax	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001162	      0xe963ffffff	                           jmp 0x40010ca	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001167	            0x31c0	                            xor eax, eax	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4001169	        0x488d0440	                  lea rax, [rax + rax*2]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x400116d	          0x4d89ec	                            mov r12, r13	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001170	        0x498d1cc7	                  lea rbx, [r15 + rax*8]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001174	    0x488b05000000	            mov rax, qword [0x0400117b] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400117b	    0x4c03a3704d00	           add r12, qword [rbx + 0x4d70]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4001182	    0x488bbb684d00	          mov rdi, qword [rbx + 0x4d68] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4001189	          0x4c89e6	                            mov rsi, r12	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400118c	            0xff10	                        call qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400118e	          0x4885c0	                           test rax, rax	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4001191	          0x4889c5	                            mov rbp, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4001194	     0xf8476fdffff	                            je 0x4000f10	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x400119a	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_20	CALL_3
0x400119d	    0x4803bb704d00	           add rdi, qword [rbx + 0x4d70]	        53	string3.h	FUNCTION_20	CALL_3
0x40011a4	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_20	CALL_3
0x40011a7	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_20	CALL_3
0x40011aa	      0xe800000000	                          call 0x40011af	        53	string3.h	FUNCTION_20	CALL_3
0x40011af	    0x4889ab684d00	          mov qword [rbx + 0x4d68], rbp 	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40011b6	    0x4c89a3704d00	          mov qword [rbx + 0x4d70], r12 	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40011bd	      0xe90dfcffff	                           jmp 0x4000dcf	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40011c2	      0xb802000000	                              mov eax, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011c7	            0xeba0	                           jmp 0x4001169	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011c9	      0xbb02000000	                              mov ebx, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011ce	      0xe9c3fdffff	                           jmp 0x4000f96	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011d3	      0xb801000000	                              mov eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011d8	            0xeb8f	                           jmp 0x4001169	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011da	      0xbb01000000	                              mov ebx, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011df	      0xe9b2fdffff	                           jmp 0x4000f96	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011e4	      0xbb02000000	                              mov ebx, 2	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011e9	      0xe97efeffff	                           jmp 0x400106c	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011ee	      0xbb01000000	                              mov ebx, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x40011f3	      0xe974feffff	                           jmp 0x400106c	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
Curl_infof	DO,0:WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,5	93
0x4000050	            0x4154	                                push r12	       234	sendf.c	FUNCTION_4
0x4000052	              0x55	                                push rbp	       234	sendf.c	FUNCTION_4
0x4000053	              0x53	                                push rbx	       234	sendf.c	FUNCTION_4
0x4000054	          0x4889fb	                            mov rbx, rdi	       234	sendf.c	FUNCTION_4
0x4000057	    0x4881ece00800	                          sub rsp, 0x8e0	       234	sendf.c	FUNCTION_4
0x400005e	            0x84c0	                             test al, al	       234	sendf.c	FUNCTION_4
0x4000060	    0x488994244008	            mov qword [rsp + 0x840], rdx	       234	sendf.c	FUNCTION_4
0x4000068	    0x48898c244808	            mov qword [rsp + 0x848], rcx	       234	sendf.c	FUNCTION_4
0x4000070	    0x4c8984245008	             mov qword [rsp + 0x850], r8	       234	sendf.c	FUNCTION_4
0x4000078	    0x4c898c245808	             mov qword [rsp + 0x858], r9	       234	sendf.c	FUNCTION_4
0x4000080	            0x7440	                            je 0x40000c2	       234	sendf.c	FUNCTION_4
0x4000082	     0xf2984246008	      movaps xmmword [rsp + 0x860], xmm0	       234	sendf.c	FUNCTION_4
0x400008a	     0xf298c247008	      movaps xmmword [rsp + 0x870], xmm1	       234	sendf.c	FUNCTION_4
0x4000092	     0xf2994248008	      movaps xmmword [rsp + 0x880], xmm2	       234	sendf.c	FUNCTION_4
0x400009a	     0xf299c249008	      movaps xmmword [rsp + 0x890], xmm3	       234	sendf.c	FUNCTION_4
0x40000a2	     0xf29a424a008	      movaps xmmword [rsp + 0x8a0], xmm4	       234	sendf.c	FUNCTION_4
0x40000aa	     0xf29ac24b008	      movaps xmmword [rsp + 0x8b0], xmm5	       234	sendf.c	FUNCTION_4
0x40000b2	     0xf29b424c008	      movaps xmmword [rsp + 0x8c0], xmm6	       234	sendf.c	FUNCTION_4
0x40000ba	     0xf29bc24d008	      movaps xmmword [rsp + 0x8d0], xmm7	       234	sendf.c	FUNCTION_4
0x40000c2	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	sendf.c	FUNCTION_4
0x40000cb	    0x488984242808	            mov qword [rsp + 0x828], rax	       234	sendf.c	FUNCTION_4
0x40000d3	            0x31c0	                            xor eax, eax	       234	sendf.c	FUNCTION_4
0x40000d5	          0x4885db	                           test rbx, rbx	       235	sendf.c	FUNCTION_4	IF_1
0x40000d8	            0x7409	                            je 0x40000e3	       235	sendf.c	FUNCTION_4	IF_1
0x40000da	    0x80bbe8070000	               cmp byte [rbx + 0x7e8], 0	       235	sendf.c	FUNCTION_4	IF_1
0x40000e1	            0x752d	                           jne 0x4000110	       235	sendf.c	FUNCTION_4	IF_1
0x40000e3	    0x488b84242808	           mov rax, qword [rsp + 0x828] 	       245	sendf.c	FUNCTION_4
0x40000eb	    0x644833042528	                xor rax, qword fs:[0x28]	       245	sendf.c	FUNCTION_4
0x40000f4	     0xf850f010000	                           jne 0x4000209	       245	sendf.c	FUNCTION_4
0x40000fa	    0x4881c4e00800	                          add rsp, 0x8e0	       245	sendf.c	FUNCTION_4
0x4000101	              0x5b	                                 pop rbx	       245	sendf.c	FUNCTION_4
0x4000102	              0x5d	                                 pop rbp	       245	sendf.c	FUNCTION_4
0x4000103	            0x415c	                                 pop r12	       245	sendf.c	FUNCTION_4
0x4000105	              0xc3	                                     ret	       245	sendf.c	FUNCTION_4
0x4000106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       245	sendf.c	FUNCTION_4
0x4000110	    0x488d84240009	                  lea rax, [rsp + 0x900]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000118	      0x4c8d642420	                   lea r12, [rsp + 0x20]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400011d	      0x488d4c2408	                      lea rcx, [rsp + 8]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000122	          0x4889f2	                            mov rdx, rsi	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000125	      0xbe01080000	                          mov esi, 0x801	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400012a	    0xc74424081000	               mov dword [rsp + 8], 0x10	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000132	      0x4889442410	             mov qword [rsp + 0x10], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000137	    0x488d84243008	                  lea rax, [rsp + 0x830]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x400013f	          0x4c89e7	                            mov rdi, r12	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000142	          0x4c89e5	                            mov rbp, r12	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000145	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x400014d	      0x4889442418	             mov qword [rsp + 0x18], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000152	      0xe800000000	                          call 0x4000157	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x4000157	          0x8b5500	                    mov edx, dword [rbp]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400015a	        0x4883c504	                              add rbp, 4	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400015e	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000164	            0xf7d2	                                 not edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000166	            0x21d0	                            and eax, edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000168	      0x2580808080	                     and eax, 0x80808080	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400016d	            0x74e8	                            je 0x4000157	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400016f	            0x89c2	                            mov edx, eax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000171	          0xc1ea10	                           shr edx, 0x10	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000174	      0xa980800000	                        test eax, 0x8080	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000179	           0xf44c2	                          cmove eax, edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400017c	        0x488d5502	                      lea rdx, [rbp + 2]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000180	            0x89c7	                            mov edi, eax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000182	        0x480f44ea	                          cmove rbp, rdx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000186	          0x4000c7	                             add dil, al	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000189	        0x4883dd03	                              sbb rbp, 3	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400018d	          0x4c29e5	                            sub rbp, r12	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000190	    0x4883bbc00200	              cmp qword [rbx + 0x2c0], 0	       809	sendf.c	FUNCTION_16	IF_4
0x4000198	            0x7436	                            je 0x40001d0	       809	sendf.c	FUNCTION_16	IF_4
0x400019a	          0x4889df	                            mov rdi, rbx	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400019d	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x40001a2	      0xe800000000	                          call 0x40001a7	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x40001a7	            0x31f6	                            xor esi, esi	       811	sendf.c	FUNCTION_16	IF_4
0x40001a9	          0x4889df	                            mov rdi, rbx	       811	sendf.c	FUNCTION_16	IF_4
0x40001ac	    0x4c8b83f80100	            mov r8, qword [rbx + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x40001b3	          0x4889e9	                            mov rcx, rbp	       811	sendf.c	FUNCTION_16	IF_4
0x40001b6	          0x4c89e2	                            mov rdx, r12	       811	sendf.c	FUNCTION_16	IF_4
0x40001b9	    0xff93c0020000	                call qword [rbx + 0x2c0]	       811	sendf.c	FUNCTION_16	IF_4
0x40001bf	            0x31f6	                            xor esi, esi	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001c1	          0x4889df	                            mov rdi, rbx	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001c4	      0xe800000000	                          call 0x40001c9	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001c9	      0xe915ffffff	                           jmp 0x40000e3	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001ce	            0x6690	                                     nop	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40001d0	    0x488b8bf00100	           mov rcx, qword [rbx + 0x1f0] 	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001d7	    0x488d3d000000	                   lea rdi, [0x040001de]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001de	      0xba01000000	                              mov edx, 1	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001e3	      0xbe02000000	                              mov esi, 2	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001e8	      0xe800000000	                          call 0x40001ed	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40001ed	    0x488b8bf00100	           mov rcx, qword [rbx + 0x1f0] 	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40001f4	      0xba01000000	                              mov edx, 1	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40001f9	          0x4889ee	                            mov rsi, rbp	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40001fc	          0x4c89e7	                            mov rdi, r12	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40001ff	      0xe800000000	                          call 0x4000204	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000204	      0xe9dafeffff	                           jmp 0x40000e3	       245	sendf.c	FUNCTION_4
0x4000209	      0xe800000000	                          call 0x400020e	       245	sendf.c	FUNCTION_4
Curl_write_plain	DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	80
0x4000910	            0x4155	                                push r13	       422	sendf.c	FUNCTION_9
0x4000912	            0x4154	                                push r12	       422	sendf.c	FUNCTION_9
0x4000914	            0x31c0	                            xor eax, eax	       363	sendf.c	FUNCTION_8
0x4000916	              0x55	                                push rbp	       422	sendf.c	FUNCTION_9
0x4000917	              0x53	                                push rbx	       422	sendf.c	FUNCTION_9
0x4000918	          0x4889fb	                            mov rbx, rdi	       422	sendf.c	FUNCTION_9
0x400091b	          0x4989d2	                            mov r10, rdx	       422	sendf.c	FUNCTION_9
0x400091e	          0x4d89c4	                             mov r12, r8	       422	sendf.c	FUNCTION_9
0x4000921	          0x4889ca	                            mov rdx, rcx	       422	sendf.c	FUNCTION_9
0x4000924	        0x4883ec08	                              sub rsp, 8	       422	sendf.c	FUNCTION_9
0x4000928	    0x39b75c020000	           cmp dword [rdi + 0x25c], esi 	       363	sendf.c	FUNCTION_8
0x400092e	           0xf94c0	                                 sete al	       363	sendf.c	FUNCTION_8
0x4000931	    0x480594000000	                           add rax, 0x94	       363	sendf.c	FUNCTION_8
0x4000937	    0x80bbb6030000	               cmp byte [rbx + 0x3b6], 0	       373	sendf.c	FUNCTION_8	IF_1
0x400093e	        0x8b7c8708	       mov edi, dword [rdi + rax*4 + 8] 	       363	sendf.c	FUNCTION_8
0x4000942	            0x743c	                            je 0x4000980	       373	sendf.c	FUNCTION_8	IF_1
0x4000944	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       375	sendf.c	FUNCTION_8	IF_1
0x4000948	      0xb900000020	                     mov ecx, 0x20000000	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400094d	          0x4c89d6	                            mov rsi, r10	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000950	        0x448b4810	            mov r9d, dword [rax + 0x10] 	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000954	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000958	      0xe800000000	                          call 0x400095d	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400095d	          0x4889c5	                            mov rbp, rax	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000960	            0x31c0	                            xor eax, eax	       382	sendf.c	FUNCTION_8
0x4000962	    0xc683b6030000	               mov byte [rbx + 0x3b6], 0	       376	sendf.c	FUNCTION_8	IF_1
0x4000969	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x400096d	            0x7429	                            je 0x4000998	       383	sendf.c	FUNCTION_8	IF_2
0x400096f	        0x49892c24	                    mov qword [r12], rbp	       429	sendf.c	FUNCTION_9
0x4000973	        0x4883c408	                              add rsp, 8	       432	sendf.c	FUNCTION_9
0x4000977	              0x5b	                                 pop rbx	       432	sendf.c	FUNCTION_9
0x4000978	              0x5d	                                 pop rbp	       432	sendf.c	FUNCTION_9
0x4000979	            0x415c	                                 pop r12	       432	sendf.c	FUNCTION_9
0x400097b	            0x415d	                                 pop r13	       432	sendf.c	FUNCTION_9
0x400097d	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
0x400097e	            0x6690	                                     nop	       432	sendf.c	FUNCTION_9
0x4000980	      0xb900400000	                         mov ecx, 0x4000	       380	sendf.c	FUNCTION_8	CALL_2
0x4000985	          0x4c89d6	                            mov rsi, r10	       380	sendf.c	FUNCTION_8	CALL_2
0x4000988	      0xe800000000	                          call 0x400098d	       380	sendf.c	FUNCTION_8	CALL_2
0x400098d	          0x4889c5	                            mov rbp, rax	       380	sendf.c	FUNCTION_8	CALL_2
0x4000990	            0x31c0	                            xor eax, eax	       382	sendf.c	FUNCTION_8
0x4000992	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x4000996	            0x75d7	                           jne 0x400096f	       383	sendf.c	FUNCTION_8	IF_2
0x4000998	      0xe800000000	                          call 0x400099d	       384	sendf.c	FUNCTION_8	IF_2
0x400099d	          0x448b28	                   mov r13d, dword [rax]	       384	sendf.c	FUNCTION_8	IF_2
0x40009a0	        0x4183fd0b	                           cmp r13d, 0xb	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009a4	           0xf94c2	                                 sete dl	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009a7	        0x4183fd04	                             cmp r13d, 4	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009ab	           0xf94c0	                                 sete al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009ae	             0x8c2	                               or dl, al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009b0	            0x7546	                           jne 0x40009f8	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009b2	        0x4183fd73	                          cmp r13d, 0x73	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009b6	            0x7440	                            je 0x40009f8	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009b8	          0x4489ee	                           mov esi, r13d	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009bb	          0x4889df	                            mov rdi, rbx	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009be	      0xe800000000	                          call 0x40009c3	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009c3	          0x488b3b	                    mov rdi, qword [rbx]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009c6	    0x488d35000000	                   lea rsi, [0x040009cd]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009cd	          0x4889c2	                            mov rdx, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d0	            0x31c0	                            xor eax, eax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d2	      0xe800000000	                          call 0x40009d7	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d7	          0x488b03	                    mov rax, qword [rbx]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009da	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009e1	        0x49892c24	                    mov qword [r12], rbp	       429	sendf.c	FUNCTION_9
0x40009e5	        0x4883c408	                              add rsp, 8	       432	sendf.c	FUNCTION_9
0x40009e9	              0x5b	                                 pop rbx	       432	sendf.c	FUNCTION_9
0x40009ea	      0xb837000000	                           mov eax, 0x37	       406	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009ef	              0x5d	                                 pop rbp	       432	sendf.c	FUNCTION_9
0x40009f0	            0x415c	                                 pop r12	       432	sendf.c	FUNCTION_9
0x40009f2	            0x415d	                                 pop r13	       432	sendf.c	FUNCTION_9
0x40009f4	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
0x40009f5	           0xf1f00	                         nop dword [rax]	       432	sendf.c	FUNCTION_9
0x40009f8	            0x31ed	                            xor ebp, ebp	       399	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009fa	      0xb851000000	                           mov eax, 0x51	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009ff	        0x49892c24	                    mov qword [r12], rbp	       429	sendf.c	FUNCTION_9
0x4000a03	        0x4883c408	                              add rsp, 8	       432	sendf.c	FUNCTION_9
0x4000a07	              0x5b	                                 pop rbx	       432	sendf.c	FUNCTION_9
0x4000a08	              0x5d	                                 pop rbp	       432	sendf.c	FUNCTION_9
0x4000a09	            0x415c	                                 pop r12	       432	sendf.c	FUNCTION_9
0x4000a0b	            0x415d	                                 pop r13	       432	sendf.c	FUNCTION_9
0x4000a0d	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
Curl_recv_has_postponed_data	DO,0:WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	2
0x4000040	            0x31c0	                            xor eax, eax	       226	sendf.c	FUNCTION_3
0x4000042	              0xc3	                                     ret	       226	sendf.c	FUNCTION_3
Curl_read	DO,0:WHILE,0:SWITCH,0:IF,4:ELSE,1:FOR,0:functions,0:CALL,6	101
0x4001250	            0x4157	                                push r15	       707	sendf.c	FUNCTION_15
0x4001252	            0x4156	                                push r14	       707	sendf.c	FUNCTION_15
0x4001254	          0x4189f7	                           mov r15d, esi	       707	sendf.c	FUNCTION_15
0x4001257	            0x4155	                                push r13	       707	sendf.c	FUNCTION_15
0x4001259	            0x4154	                                push r12	       707	sendf.c	FUNCTION_15
0x400125b	      0xbe01000000	                              mov esi, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4001260	              0x55	                                push rbp	       707	sendf.c	FUNCTION_15
0x4001261	              0x53	                                push rbx	       707	sendf.c	FUNCTION_15
0x4001262	          0x4889fb	                            mov rbx, rdi	       707	sendf.c	FUNCTION_15
0x4001265	          0x4989d5	                            mov r13, rdx	       707	sendf.c	FUNCTION_15
0x4001268	          0x4889cd	                            mov rbp, rcx	       707	sendf.c	FUNCTION_15
0x400126b	          0x4d89c4	                             mov r12, r8	       707	sendf.c	FUNCTION_15
0x400126e	        0x4883ec18	                           sub rsp, 0x18	       707	sendf.c	FUNCTION_15
0x4001272	          0x4c8b37	                    mov r14, qword [rdi]	       712	sendf.c	FUNCTION_15
0x4001275	    0x64488b042528	                mov rax, qword fs:[0x28]	       707	sendf.c	FUNCTION_15
0x400127e	      0x4889442408	                mov qword [rsp + 8], rax	       707	sendf.c	FUNCTION_15
0x4001283	            0x31c0	                            xor eax, eax	       707	sendf.c	FUNCTION_15
0x4001285	    0xc74424043800	               mov dword [rsp + 4], 0x38	       708	sendf.c	FUNCTION_15
0x400128d	    0x498bbea80000	            mov rdi, qword [r14 + 0xa8] 	       715	sendf.c	FUNCTION_15	CALL_1
0x4001294	      0xe800000000	                          call 0x4001299	       715	sendf.c	FUNCTION_15	CALL_1
0x4001299	            0x84c0	                             test al, al	       715	sendf.c	FUNCTION_15	CALL_1
0x400129b	            0x740c	                            je 0x40012a9	       715	sendf.c	FUNCTION_15	CALL_1
0x400129d	    0x488b83600700	           mov rax, qword [rbx + 0x760] 	       716	sendf.c	FUNCTION_15
0x40012a4	          0x833801	                      cmp dword [rax], 1	       715	sendf.c	FUNCTION_15	CALL_1
0x40012a7	            0x7477	                            je 0x4001320	       715	sendf.c	FUNCTION_15	CALL_1
0x40012a9	            0x31c0	                            xor eax, eax	       721	sendf.c	FUNCTION_15
0x40012ab	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x40012b2	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x40012ba	          0x4889e9	                            mov rcx, rbp	       749	sendf.c	FUNCTION_15
0x40012bd	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x40012c2	          0x4c89ea	                            mov rdx, r13	       749	sendf.c	FUNCTION_15
0x40012c5	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x40012c8	           0xf94c0	                                 sete al	       721	sendf.c	FUNCTION_15
0x40012cb	    0x4939ae900700	           cmp qword [r14 + 0x790], rbp 	       749	sendf.c	FUNCTION_15
0x40012d2	    0x490f468e9007	         cmovbe rcx, qword [r14 + 0x790]	       749	sendf.c	FUNCTION_15
0x40012da	          0x4889c6	                            mov rsi, rax	       721	sendf.c	FUNCTION_15
0x40012dd	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x40012e1	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x40012e4	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x40012e7	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x40012ea	     0xf88c0000000	                            js 0x40013b0	       750	sendf.c	FUNCTION_15	IF_3
0x40012f0	        0x49012c24	                    add qword [r12], rbp	       759	sendf.c	FUNCTION_15
0x40012f4	            0x31c0	                            xor eax, eax	       761	sendf.c	FUNCTION_15
0x40012f6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       762	sendf.c	FUNCTION_15
0x40012fb	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       762	sendf.c	FUNCTION_15
0x4001304	     0xf85e4000000	                           jne 0x40013ee	       762	sendf.c	FUNCTION_15
0x400130a	        0x4883c418	                           add rsp, 0x18	       762	sendf.c	FUNCTION_15
0x400130e	              0x5b	                                 pop rbx	       762	sendf.c	FUNCTION_15
0x400130f	              0x5d	                                 pop rbp	       762	sendf.c	FUNCTION_15
0x4001310	            0x415c	                                 pop r12	       762	sendf.c	FUNCTION_15
0x4001312	            0x415d	                                 pop r13	       762	sendf.c	FUNCTION_15
0x4001314	            0x415e	                                 pop r14	       762	sendf.c	FUNCTION_15
0x4001316	            0x415f	                                 pop r15	       762	sendf.c	FUNCTION_15
0x4001318	              0xc3	                                     ret	       762	sendf.c	FUNCTION_15
0x4001319	     0xf1f80000000	                         nop dword [rax]	       762	sendf.c	FUNCTION_15
0x4001320	            0x31f6	                            xor esi, esi	       721	sendf.c	FUNCTION_15
0x4001322	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x4001329	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x4001331	    0x488b83a00400	           mov rax, qword [rbx + 0x4a0] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001338	    0x488b93a80400	           mov rdx, qword [rbx + 0x4a8] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400133f	        0x400f94c6	                                sete sil	       721	sendf.c	FUNCTION_15
0x4001343	          0x4829c2	                            sub rdx, rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001346	          0x4839ea	                            cmp rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001349	        0x480f47d5	                          cmova rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400134d	          0x4885d2	                           test rdx, rdx	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4001350	          0x4989d6	                            mov r14, rdx	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001353	            0x756b	                           jne 0x40013c0	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4001355	    0x4881fd004000	                         cmp rbp, 0x4000	       749	sendf.c	FUNCTION_15
0x400135c	          0x4863c6	                         movsxd rax, esi	       749	sendf.c	FUNCTION_15
0x400135f	      0xb900400000	                         mov ecx, 0x4000	       749	sendf.c	FUNCTION_15
0x4001364	        0x480f46cd	                         cmovbe rcx, rbp	       749	sendf.c	FUNCTION_15
0x4001368	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x400136c	    0x488b93980400	           mov rdx, qword [rbx + 0x498] 	       749	sendf.c	FUNCTION_15
0x4001373	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x4001378	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x400137b	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x400137e	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x4001381	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x4001384	            0x782a	                            js 0x40013b0	       750	sendf.c	FUNCTION_15	IF_3
0x4001386	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	        53	string3.h	FUNCTION_20	CALL_3
0x400138d	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_20	CALL_3
0x4001390	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_20	CALL_3
0x4001393	      0xe800000000	                          call 0x4001398	        53	string3.h	FUNCTION_20	CALL_3
0x4001398	    0x4889aba80400	            mov qword [rbx + 0x4a8], rbp	       755	sendf.c	FUNCTION_15	IF_4
0x400139f	    0x4889aba00400	            mov qword [rbx + 0x4a0], rbp	       756	sendf.c	FUNCTION_15	IF_4
0x40013a6	      0xe945ffffff	                           jmp 0x40012f0	       756	sendf.c	FUNCTION_15	IF_4
0x40013ab	       0xf1f440000	                   nop dword [rax + rax]	       756	sendf.c	FUNCTION_15	IF_4
0x40013b0	        0x8b442404	                mov eax, dword [rsp + 4]	       751	sendf.c	FUNCTION_15	IF_3
0x40013b4	      0xe93dffffff	                           jmp 0x40012f6	       751	sendf.c	FUNCTION_15	IF_3
0x40013b9	     0xf1f80000000	                         nop dword [rax]	       751	sendf.c	FUNCTION_15	IF_3
0x40013c0	    0x480383980400	            add rax, qword [rbx + 0x498]	        53	string3.h	FUNCTION_20	CALL_3
0x40013c7	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_20	CALL_3
0x40013ca	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_20	CALL_3
0x40013cd	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_20	CALL_3
0x40013d0	      0xe800000000	                          call 0x40013d5	        53	string3.h	FUNCTION_20	CALL_3
0x40013d5	    0x4c01b3a00400	           add qword [rbx + 0x4a0], r14 	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40013dc	    0xc683b1030000	               mov byte [rbx + 0x3b1], 0	       734	sendf.c	FUNCTION_15	IF_1	IF_2
0x40013e3	            0x31c0	                            xor eax, eax	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x40013e5	        0x4d893424	                    mov qword [r12], r14	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x40013e9	      0xe908ffffff	                           jmp 0x40012f6	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x40013ee	      0xe800000000	                          call 0x40013f3	       762	sendf.c	FUNCTION_15
Curl_sendf	DO,0:WHILE,0:SWITCH,0:IF,4:ELSE,1:FOR,1:functions,0:CALL,7	185
0x4000410	            0x4157	                                push r15	       277	sendf.c	FUNCTION_6
0x4000412	            0x4156	                                push r14	       277	sendf.c	FUNCTION_6
0x4000414	          0x4989f6	                            mov r14, rsi	       277	sendf.c	FUNCTION_6
0x4000417	            0x4155	                                push r13	       277	sendf.c	FUNCTION_6
0x4000419	            0x4154	                                push r12	       277	sendf.c	FUNCTION_6
0x400041b	          0x4189fd	                           mov r13d, edi	       277	sendf.c	FUNCTION_6
0x400041e	              0x55	                                push rbp	       277	sendf.c	FUNCTION_6
0x400041f	              0x53	                                push rbx	       277	sendf.c	FUNCTION_6
0x4000420	    0x4881eca80100	                          sub rsp, 0x1a8	       277	sendf.c	FUNCTION_6
0x4000427	            0x84c0	                             test al, al	       277	sendf.c	FUNCTION_6
0x4000429	    0x48898c240801	            mov qword [rsp + 0x108], rcx	       277	sendf.c	FUNCTION_6
0x4000431	    0x4c8984241001	             mov qword [rsp + 0x110], r8	       277	sendf.c	FUNCTION_6
0x4000439	    0x4c898c241801	             mov qword [rsp + 0x118], r9	       277	sendf.c	FUNCTION_6
0x4000441	            0x7440	                            je 0x4000483	       277	sendf.c	FUNCTION_6
0x4000443	     0xf2984242001	      movaps xmmword [rsp + 0x120], xmm0	       277	sendf.c	FUNCTION_6
0x400044b	     0xf298c243001	      movaps xmmword [rsp + 0x130], xmm1	       277	sendf.c	FUNCTION_6
0x4000453	     0xf2994244001	      movaps xmmword [rsp + 0x140], xmm2	       277	sendf.c	FUNCTION_6
0x400045b	     0xf299c245001	      movaps xmmword [rsp + 0x150], xmm3	       277	sendf.c	FUNCTION_6
0x4000463	     0xf29a4246001	      movaps xmmword [rsp + 0x160], xmm4	       277	sendf.c	FUNCTION_6
0x400046b	     0xf29ac247001	      movaps xmmword [rsp + 0x170], xmm5	       277	sendf.c	FUNCTION_6
0x4000473	     0xf29b4248001	      movaps xmmword [rsp + 0x180], xmm6	       277	sendf.c	FUNCTION_6
0x400047b	     0xf29bc249001	      movaps xmmword [rsp + 0x190], xmm7	       277	sendf.c	FUNCTION_6
0x4000483	    0x64488b042528	                mov rax, qword fs:[0x28]	       277	sendf.c	FUNCTION_6
0x400048c	    0x48898424e800	             mov qword [rsp + 0xe8], rax	       277	sendf.c	FUNCTION_6
0x4000494	            0x31c0	                            xor eax, eax	       277	sendf.c	FUNCTION_6
0x4000496	    0x488d8424e001	                  lea rax, [rsp + 0x1e0]	       285	sendf.c	FUNCTION_6	CALL_1
0x400049e	      0x488d742428	                   lea rsi, [rsp + 0x28]	       286	sendf.c	FUNCTION_6	CALL_2
0x40004a3	          0x4889d7	                            mov rdi, rdx	       286	sendf.c	FUNCTION_6	CALL_2
0x40004a6	      0x4889442430	             mov qword [rsp + 0x30], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x40004ab	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	       285	sendf.c	FUNCTION_6	CALL_1
0x40004b3	          0x4d8b26	                    mov r12, qword [r14]	       278	sendf.c	FUNCTION_6
0x40004b6	    0xc74424281800	           mov dword [rsp + 0x28], 0x18 	       285	sendf.c	FUNCTION_6	CALL_1
0x40004be	    0xc744242c3000	           mov dword [rsp + 0x2c], 0x30 	       285	sendf.c	FUNCTION_6	CALL_1
0x40004c6	      0x4889442438	             mov qword [rsp + 0x38], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x40004cb	      0xe800000000	                          call 0x40004d0	       286	sendf.c	FUNCTION_6	CALL_2
0x40004d0	          0x4889c1	                            mov rcx, rax	       286	sendf.c	FUNCTION_6	CALL_2
0x40004d3	      0x4889442410	             mov qword [rsp + 0x10], rax	       286	sendf.c	FUNCTION_6	CALL_2
0x40004d8	      0xb81b000000	                           mov eax, 0x1b	       289	sendf.c	FUNCTION_6	IF_1
0x40004dd	          0x4885c9	                           test rcx, rcx	       288	sendf.c	FUNCTION_6	IF_1
0x40004e0	          0x4889cd	                            mov rbp, rcx	       288	sendf.c	FUNCTION_6	IF_1
0x40004e3	     0xf8410020000	                            je 0x40006f9	       288	sendf.c	FUNCTION_6	IF_1
0x40004e9	          0x4889cf	                            mov rdi, rcx	       292	sendf.c	FUNCTION_6	CALL_4
0x40004ec	      0xe800000000	                          call 0x40004f1	       292	sendf.c	FUNCTION_6	CALL_4
0x40004f1	          0x4989c7	                            mov r15, rax	       292	sendf.c	FUNCTION_6	CALL_4
0x40004f4	      0x488d442424	                   lea rax, [rsp + 0x24]	       292	sendf.c	FUNCTION_6	CALL_4
0x40004f9	        0x48890424	                    mov qword [rsp], rax	       292	sendf.c	FUNCTION_6	CALL_4
0x40004fd	      0x488d442440	                   lea rax, [rsp + 0x40]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000502	      0x4889442408	                mov qword [rsp + 8], rax	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000507	            0xeb21	                           jmp 0x400052a	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000509	     0xf1f80000000	                         nop dword [rax]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000510	    0x4180bc24e807	               cmp byte [r12 + 0x7e8], 0	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000519	            0x7575	                           jne 0x4000590	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x400051b	          0x4939df	                            cmp r15, rbx	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400051e	     0xf84a4010000	                            je 0x40006c8	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000524	          0x4929df	                            sub r15, rbx	       308	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000527	          0x4801dd	                            add rbp, rbx	       309	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400052a	            0x31c0	                            xor eax, eax	       335	sendf.c	FUNCTION_7
0x400052c	    0x4539ae5c0200	          cmp dword [r14 + 0x25c], r13d 	       335	sendf.c	FUNCTION_7
0x4000533	    0xc74424240000	               mov dword [rsp + 0x24], 0	       334	sendf.c	FUNCTION_7
0x400053b	        0x4c8b0424	                     mov r8, qword [rsp]	       337	sendf.c	FUNCTION_7
0x400053f	          0x4c89f9	                            mov rcx, r15	       337	sendf.c	FUNCTION_7
0x4000542	          0x4889ea	                            mov rdx, rbp	       337	sendf.c	FUNCTION_7
0x4000545	          0x4c89f7	                            mov rdi, r14	       337	sendf.c	FUNCTION_7
0x4000548	           0xf94c0	                                 sete al	       335	sendf.c	FUNCTION_7
0x400054b	          0x4889c6	                            mov rsi, rax	       335	sendf.c	FUNCTION_7
0x400054e	        0x4883c050	                           add rax, 0x50	       337	sendf.c	FUNCTION_7
0x4000552	        0x41ff14c6	                call qword [r14 + rax*8]	       337	sendf.c	FUNCTION_7
0x4000556	          0x4885c0	                           test rax, rax	       340	sendf.c	FUNCTION_7	IF_1
0x4000559	          0x4889c3	                            mov rbx, rax	       337	sendf.c	FUNCTION_7
0x400055c	            0x79b2	                           jns 0x4000510	       340	sendf.c	FUNCTION_7	IF_1
0x400055e	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000562	            0x85c0	                           test eax, eax	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000564	     0xf8476010000	                            je 0x40006e0	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400056a	          0x83f851	                           cmp eax, 0x51	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400056d	     0xf845d010000	                            je 0x40006d0	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000573	            0x85c0	                           test eax, eax	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x4000575	     0xf856a010000	                           jne 0x40006e5	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x400057b	    0x4180bc24e807	               cmp byte [r12 + 0x7e8], 0	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000584	            0x7495	                            je 0x400051b	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000590	    0x4180bc24d107	               cmp byte [r12 + 0x7d1], 0	       843	sendf.c	FUNCTION_17	IF_1
0x4000599	     0xf84d9000000	                            je 0x4000678	       843	sendf.c	FUNCTION_17	IF_1
0x400059f	    0x4d8b8ee00000	              mov r9, qword [r14 + 0xe0]	       843	sendf.c	FUNCTION_17	IF_1
0x40005a6	          0x4d85c9	                             test r9, r9	       843	sendf.c	FUNCTION_17	IF_1
0x40005a9	     0xf84c9000000	                            je 0x4000678	       843	sendf.c	FUNCTION_17	IF_1
0x40005af	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005b4	    0x4c8d05000000	                    lea r8, [0x040005bb]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005bb	    0x488d0d000000	                   lea rcx, [0x040005c2]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005c2	    0x488d15000000	                   lea rdx, [0x040005c9]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005c9	      0xbea0000000	                           mov esi, 0xa0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005ce	            0x31c0	                            xor eax, eax	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005d0	      0xe800000000	                          call 0x40005d5	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40005d5	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005da	          0x418b11	                     mov edx, dword [r9]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005dd	        0x4983c104	                               add r9, 4	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005e1	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005e7	            0xf7d2	                                 not edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005e9	            0x21d0	                            and eax, edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005eb	      0x2580808080	                     and eax, 0x80808080	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005f0	            0x74e8	                            je 0x40005da	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005f2	            0x89c2	                            mov edx, eax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005f4	          0xc1ea10	                           shr edx, 0x10	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005f7	      0xa980800000	                        test eax, 0x8080	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005fc	           0xf44c2	                          cmove eax, edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x40005ff	        0x498d5102	                       lea rdx, [r9 + 2]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000603	            0x89c7	                            mov edi, eax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000605	        0x4c0f44ca	                           cmove r9, rdx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000609	          0x4000c7	                             add dil, al	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400060c	        0x4983d903	                               sbb r9, 3	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000610	      0x4c2b4c2408	                 sub r9, qword [rsp + 8]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000615	    0x4983bc24c002	              cmp qword [r12 + 0x2c0], 0	       809	sendf.c	FUNCTION_16	IF_4
0x400061e	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       809	sendf.c	FUNCTION_16	IF_4
0x4000623	     0xf84f7000000	                            je 0x4000720	       809	sendf.c	FUNCTION_16	IF_4
0x4000629	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400062e	          0x4c89e7	                            mov rdi, r12	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4000631	      0xe800000000	                          call 0x4000636	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4000636	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       811	sendf.c	FUNCTION_16	IF_4
0x400063b	            0x31f6	                            xor esi, esi	       811	sendf.c	FUNCTION_16	IF_4
0x400063d	    0x4d8b8424f801	            mov r8, qword [r12 + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x4000645	      0x488b542408	                mov rdx, qword [rsp + 8]	       811	sendf.c	FUNCTION_16	IF_4
0x400064a	          0x4c89e7	                            mov rdi, r12	       811	sendf.c	FUNCTION_16	IF_4
0x400064d	          0x4c89c9	                             mov rcx, r9	       811	sendf.c	FUNCTION_16	IF_4
0x4000650	    0x41ff9424c002	                call qword [r12 + 0x2c0]	       811	sendf.c	FUNCTION_16	IF_4
0x4000658	            0x31f6	                            xor esi, esi	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x400065a	          0x4c89e7	                            mov rdi, r12	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x400065d	        0x89442418	             mov dword [rsp + 0x18], eax	       811	sendf.c	FUNCTION_16	IF_4
0x4000661	      0xe800000000	                          call 0x4000666	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4000666	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x400066a	            0x85c0	                           test eax, eax	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x400066c	     0xf85a9feffff	                           jne 0x400051b	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4000672	    0x660f1f440000	                    nop word [rax + rax]	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4000678	    0x4983bc24c002	              cmp qword [r12 + 0x2c0], 0	       809	sendf.c	FUNCTION_16	IF_4
0x4000681	     0xf8494feffff	                            je 0x400051b	       809	sendf.c	FUNCTION_16	IF_4
0x4000687	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400068c	          0x4c89e7	                            mov rdi, r12	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400068f	      0xe800000000	                          call 0x4000694	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4000694	    0x4d8b8424f801	            mov r8, qword [r12 + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x400069c	          0x4889d9	                            mov rcx, rbx	       811	sendf.c	FUNCTION_16	IF_4
0x400069f	          0x4889ea	                            mov rdx, rbp	       811	sendf.c	FUNCTION_16	IF_4
0x40006a2	      0xbe04000000	                              mov esi, 4	       811	sendf.c	FUNCTION_16	IF_4
0x40006a7	          0x4c89e7	                            mov rdi, r12	       811	sendf.c	FUNCTION_16	IF_4
0x40006aa	    0x41ff9424c002	                call qword [r12 + 0x2c0]	       811	sendf.c	FUNCTION_16	IF_4
0x40006b2	            0x31f6	                            xor esi, esi	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40006b4	          0x4c89e7	                            mov rdi, r12	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40006b7	      0xe800000000	                          call 0x40006bc	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x40006bc	          0x4939df	                            cmp r15, rbx	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006bf	     0xf855ffeffff	                           jne 0x4000524	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006c5	           0xf1f00	                         nop dword [rax]	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006c8	            0x31c0	                            xor eax, eax	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006ca	            0xeb19	                           jmp 0x40006e5	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006cc	         0xf1f4000	                         nop dword [rax]	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40006d0	            0x31db	                            xor ebx, ebx	       345	sendf.c	FUNCTION_7	SWITCH_1
0x40006d2	      0xe939feffff	                           jmp 0x4000510	       345	sendf.c	FUNCTION_7	SWITCH_1
0x40006d7	    0x660f1f840000	                    nop word [rax + rax]	       345	sendf.c	FUNCTION_7	SWITCH_1
0x40006e0	      0xb837000000	                           mov eax, 0x37	       352	sendf.c	FUNCTION_7	SWITCH_1
0x40006e5	    0x488b15000000	            mov rdx, qword [0x040006ec] 	       315	sendf.c	FUNCTION_6	CALL_7
0x40006ec	          0x890424	                    mov dword [rsp], eax	       315	sendf.c	FUNCTION_6	CALL_7
0x40006ef	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       315	sendf.c	FUNCTION_6	CALL_7
0x40006f4	            0xff12	                        call qword [rdx]	       315	sendf.c	FUNCTION_6	CALL_7
0x40006f6	          0x8b0424	                    mov eax, dword [rsp]	       315	sendf.c	FUNCTION_6	CALL_7
0x40006f9	    0x488bbc24e800	            mov rdi, qword [rsp + 0xe8] 	       318	sendf.c	FUNCTION_6
0x4000701	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       318	sendf.c	FUNCTION_6
0x400070a	            0x7556	                           jne 0x4000762	       318	sendf.c	FUNCTION_6
0x400070c	    0x4881c4a80100	                          add rsp, 0x1a8	       318	sendf.c	FUNCTION_6
0x4000713	              0x5b	                                 pop rbx	       318	sendf.c	FUNCTION_6
0x4000714	              0x5d	                                 pop rbp	       318	sendf.c	FUNCTION_6
0x4000715	            0x415c	                                 pop r12	       318	sendf.c	FUNCTION_6
0x4000717	            0x415d	                                 pop r13	       318	sendf.c	FUNCTION_6
0x4000719	            0x415e	                                 pop r14	       318	sendf.c	FUNCTION_6
0x400071b	            0x415f	                                 pop r15	       318	sendf.c	FUNCTION_6
0x400071d	              0xc3	                                     ret	       318	sendf.c	FUNCTION_6
0x400071e	            0x6690	                                     nop	       318	sendf.c	FUNCTION_6
0x4000720	    0x498b8c24f001	           mov rcx, qword [r12 + 0x1f0] 	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4000728	    0x488d3d000000	                   lea rdi, [0x0400072f]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x400072f	      0xba01000000	                              mov edx, 1	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4000734	      0xbe02000000	                              mov esi, 2	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4000739	      0xe800000000	                          call 0x400073e	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x400073e	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000743	    0x498b8c24f001	           mov rcx, qword [r12 + 0x1f0] 	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x400074b	      0xba01000000	                              mov edx, 1	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000750	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000755	          0x4c89ce	                             mov rsi, r9	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000758	      0xe800000000	                          call 0x400075d	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x400075d	      0xe916ffffff	                           jmp 0x4000678	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000762	      0xe800000000	                          call 0x4000767	       318	sendf.c	FUNCTION_6
Curl_failf	DO,0:WHILE,0:SWITCH,0:IF,3:ELSE,0:FOR,0:functions,0:CALL,6	107
0x4000210	            0x4154	                                push r12	       252	sendf.c	FUNCTION_5
0x4000212	              0x55	                                push rbp	       252	sendf.c	FUNCTION_5
0x4000213	          0x4889fd	                            mov rbp, rdi	       252	sendf.c	FUNCTION_5
0x4000216	              0x53	                                push rbx	       252	sendf.c	FUNCTION_5
0x4000217	    0x4881ece00100	                          sub rsp, 0x1e0	       252	sendf.c	FUNCTION_5
0x400021e	            0x84c0	                             test al, al	       252	sendf.c	FUNCTION_5
0x4000220	    0x488994244001	            mov qword [rsp + 0x140], rdx	       252	sendf.c	FUNCTION_5
0x4000228	    0x48898c244801	            mov qword [rsp + 0x148], rcx	       252	sendf.c	FUNCTION_5
0x4000230	    0x4c8984245001	             mov qword [rsp + 0x150], r8	       252	sendf.c	FUNCTION_5
0x4000238	    0x4c898c245801	             mov qword [rsp + 0x158], r9	       252	sendf.c	FUNCTION_5
0x4000240	            0x7440	                            je 0x4000282	       252	sendf.c	FUNCTION_5
0x4000242	     0xf2984246001	      movaps xmmword [rsp + 0x160], xmm0	       252	sendf.c	FUNCTION_5
0x400024a	     0xf298c247001	      movaps xmmword [rsp + 0x170], xmm1	       252	sendf.c	FUNCTION_5
0x4000252	     0xf2994248001	      movaps xmmword [rsp + 0x180], xmm2	       252	sendf.c	FUNCTION_5
0x400025a	     0xf299c249001	      movaps xmmword [rsp + 0x190], xmm3	       252	sendf.c	FUNCTION_5
0x4000262	     0xf29a424a001	      movaps xmmword [rsp + 0x1a0], xmm4	       252	sendf.c	FUNCTION_5
0x400026a	     0xf29ac24b001	      movaps xmmword [rsp + 0x1b0], xmm5	       252	sendf.c	FUNCTION_5
0x4000272	     0xf29b424c001	      movaps xmmword [rsp + 0x1c0], xmm6	       252	sendf.c	FUNCTION_5
0x400027a	     0xf29bc24d001	      movaps xmmword [rsp + 0x1d0], xmm7	       252	sendf.c	FUNCTION_5
0x4000282	    0x64488b042528	                mov rax, qword fs:[0x28]	       252	sendf.c	FUNCTION_5
0x400028b	    0x488984242801	            mov qword [rsp + 0x128], rax	       252	sendf.c	FUNCTION_5
0x4000293	            0x31c0	                            xor eax, eax	       252	sendf.c	FUNCTION_5
0x4000295	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       253	sendf.c	FUNCTION_5	IF_1
0x400029c	            0x750e	                           jne 0x40002ac	       253	sendf.c	FUNCTION_5	IF_1
0x400029e	    0x4883bd000200	              cmp qword [rbp + 0x200], 0	       253	sendf.c	FUNCTION_5	IF_1
0x40002a6	     0xf84e4000000	                            je 0x4000390	       253	sendf.c	FUNCTION_5	IF_1
0x40002ac	    0x488d84240002	                  lea rax, [rsp + 0x200]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002b4	      0x4c8d642420	                   lea r12, [rsp + 0x20]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002b9	      0x488d4c2408	                      lea rcx, [rsp + 8]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002be	          0x4889f2	                            mov rdx, rsi	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002c1	      0xbe00010000	                          mov esi, 0x100	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002c6	    0xc74424081000	               mov dword [rsp + 8], 0x10	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002ce	      0x4889442410	             mov qword [rsp + 0x10], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002d3	    0x488d84243001	                  lea rax, [rsp + 0x130]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002db	          0x4c89e7	                            mov rdi, r12	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002de	          0x4c89e3	                            mov rbx, r12	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40002e1	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002e9	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40002ee	      0xe800000000	                          call 0x40002f3	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40002f3	            0x8b13	                    mov edx, dword [rbx]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40002f5	        0x4883c304	                              add rbx, 4	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40002f9	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40002ff	            0xf7d2	                                 not edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000301	            0x21d0	                            and eax, edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000303	      0x2580808080	                     and eax, 0x80808080	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000308	            0x74e9	                            je 0x40002f3	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400030a	            0x89c2	                            mov edx, eax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400030c	          0xc1ea10	                           shr edx, 0x10	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400030f	      0xa980800000	                        test eax, 0x8080	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000314	           0xf44c2	                          cmove eax, edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000317	        0x488d5302	                      lea rdx, [rbx + 2]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400031b	            0x89c7	                            mov edi, eax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400031d	        0x480f44da	                          cmove rbx, rdx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000321	          0x4000c7	                             add dil, al	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000324	    0x488bbd000200	           mov rdi, qword [rbp + 0x200] 	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400032b	        0x4883db03	                              sbb rbx, 3	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400032f	          0x4c29e3	                            sub rbx, r12	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000332	          0x4885ff	                           test rdi, rdi	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000335	            0x7409	                            je 0x4000340	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000337	    0x80bdb84d0000	              cmp byte [rbp + 0x4db8], 0	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400033e	            0x7470	                            je 0x40003b0	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000340	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000347	            0x7447	                            je 0x4000390	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000349	      0xc6441c200a	        mov byte [rsp + rbx + 0x20], 0xa	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x400034e	        0x4883c301	                              add rbx, 1	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000352	    0x4883bdc00200	              cmp qword [rbp + 0x2c0], 0	       809	sendf.c	FUNCTION_16	IF_4
0x400035a	      0xc6441c2000	          mov byte [rsp + rbx + 0x20], 0	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x400035f	            0x746f	                            je 0x40003d0	       809	sendf.c	FUNCTION_16	IF_4
0x4000361	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4000366	          0x4889ef	                            mov rdi, rbp	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4000369	      0xe800000000	                          call 0x400036e	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400036e	            0x31f6	                            xor esi, esi	       811	sendf.c	FUNCTION_16	IF_4
0x4000370	          0x4889ef	                            mov rdi, rbp	       811	sendf.c	FUNCTION_16	IF_4
0x4000373	    0x4c8b85f80100	            mov r8, qword [rbp + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x400037a	          0x4889d9	                            mov rcx, rbx	       811	sendf.c	FUNCTION_16	IF_4
0x400037d	          0x4c89e2	                            mov rdx, r12	       811	sendf.c	FUNCTION_16	IF_4
0x4000380	    0xff95c0020000	                call qword [rbp + 0x2c0]	       811	sendf.c	FUNCTION_16	IF_4
0x4000386	            0x31f6	                            xor esi, esi	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4000388	          0x4889ef	                            mov rdi, rbp	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x400038b	      0xe800000000	                          call 0x4000390	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4000390	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	       272	sendf.c	FUNCTION_5
0x4000398	    0x644833042528	                xor rax, qword fs:[0x28]	       272	sendf.c	FUNCTION_5
0x40003a1	            0x7563	                           jne 0x4000406	       272	sendf.c	FUNCTION_5
0x40003a3	    0x4881c4e00100	                          add rsp, 0x1e0	       272	sendf.c	FUNCTION_5
0x40003aa	              0x5b	                                 pop rbx	       272	sendf.c	FUNCTION_5
0x40003ab	              0x5d	                                 pop rbp	       272	sendf.c	FUNCTION_5
0x40003ac	            0x415c	                                 pop r12	       272	sendf.c	FUNCTION_5
0x40003ae	              0xc3	                                     ret	       272	sendf.c	FUNCTION_5
0x40003af	              0x90	                                     nop	       272	sendf.c	FUNCTION_5
0x40003b0	        0x488d5301	                      lea rdx, [rbx + 1]	       110	string3.h	FUNCTION_26	CALL_3
0x40003b4	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_26	CALL_3
0x40003b7	      0xe800000000	                          call 0x40003bc	       110	string3.h	FUNCTION_26	CALL_3
0x40003bc	    0xc685b84d0000	              mov byte [rbp + 0x4db8], 1	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x40003c3	      0xe978ffffff	                           jmp 0x4000340	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x40003c8	     0xf1f84000000	                   nop dword [rax + rax]	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x40003d0	    0x488b8df00100	           mov rcx, qword [rbp + 0x1f0] 	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40003d7	    0x488d3d000000	                   lea rdi, [0x040003de]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40003de	      0xba01000000	                              mov edx, 1	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40003e3	      0xbe02000000	                              mov esi, 2	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40003e8	      0xe800000000	                          call 0x40003ed	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40003ed	    0x488b8df00100	           mov rcx, qword [rbp + 0x1f0] 	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40003f4	      0xba01000000	                              mov edx, 1	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40003f9	          0x4889de	                            mov rsi, rbx	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40003fc	          0x4c89e7	                            mov rdi, r12	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40003ff	      0xe800000000	                          call 0x4000404	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x4000404	            0xeb8a	                           jmp 0x4000390	       272	sendf.c	FUNCTION_5
0x4000406	      0xe800000000	                          call 0x400040b	       272	sendf.c	FUNCTION_5
Curl_read_plain	DO,0:WHILE,0:SWITCH,0:IF,2:ELSE,0:FOR,0:functions,0:CALL,1	24
0x4001200	              0x53	                                push rbx	       675	sendf.c	FUNCTION_14
0x4001201	          0x4889cb	                            mov rbx, rcx	       675	sendf.c	FUNCTION_14
0x4001204	            0x31c9	                            xor ecx, ecx	        44	socket2.h	FUNCTION_18	CALL_8
0x4001206	      0xe800000000	                          call 0x400120b	        44	socket2.h	FUNCTION_18	CALL_8
0x400120b	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       678	sendf.c	FUNCTION_14	IF_1
0x400120f	            0x740f	                            je 0x4001220	       678	sendf.c	FUNCTION_14	IF_1
0x4001211	          0x488903	                    mov qword [rbx], rax	       692	sendf.c	FUNCTION_14
0x4001214	            0x31c0	                            xor eax, eax	       693	sendf.c	FUNCTION_14
0x4001216	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x4001217	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
0x4001218	     0xf1f84000000	                   nop dword [rax + rax]	       694	sendf.c	FUNCTION_14
0x4001220	      0xe800000000	                          call 0x4001225	       679	sendf.c	FUNCTION_14	IF_1
0x4001225	            0x8b00	                    mov eax, dword [rax]	       679	sendf.c	FUNCTION_14	IF_1
0x4001227	          0x83f80b	                            cmp eax, 0xb	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x400122a	            0x7414	                            je 0x4001240	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x400122c	          0x83f804	                              cmp eax, 4	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x400122f	            0x740f	                            je 0x4001240	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x4001231	      0xb838000000	                           mov eax, 0x38	       688	sendf.c	FUNCTION_14	IF_1
0x4001236	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x4001237	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
0x4001238	     0xf1f84000000	                   nop dword [rax + rax]	       694	sendf.c	FUNCTION_14
0x4001240	      0xb851000000	                           mov eax, 0x51	       687	sendf.c	FUNCTION_14	IF_1	IF_2
0x4001245	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x4001246	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
