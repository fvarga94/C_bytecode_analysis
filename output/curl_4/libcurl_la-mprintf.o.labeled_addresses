alloc_addbyter	CALL,2:functions,0:ELSE,1:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,5	48
0x4000070	            0x4154	                                push r12	      1030	mprintf.c	FUNCTION_8
0x4000072	              0x55	                                push rbp	      1030	mprintf.c	FUNCTION_8
0x4000073	            0x89fd	                            mov ebp, edi	      1030	mprintf.c	FUNCTION_8
0x4000075	              0x53	                                push rbx	      1030	mprintf.c	FUNCTION_8
0x4000076	          0x488b3e	                    mov rdi, qword [rsi]	      1034	mprintf.c	FUNCTION_8	IF_1
0x4000079	          0x4889f3	                            mov rbx, rsi	      1030	mprintf.c	FUNCTION_8
0x400007c	          0x4885ff	                           test rdi, rdi	      1034	mprintf.c	FUNCTION_8	IF_1
0x400007f	            0x7467	                            je 0x40000e8	      1034	mprintf.c	FUNCTION_8	IF_1
0x4000081	        0x488b4608	                mov rax, qword [rsi + 8]	      1043	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x4000085	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      1043	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x4000089	        0x488d4801	                      lea rcx, [rax + 1]	      1043	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x400008d	          0x4839d1	                            cmp rcx, rdx	      1043	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x4000090	            0x723d	                            jb 0x40000cf	      1043	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x4000092	        0x4c8d2412	                    lea r12, [rdx + rdx]	      1045	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x4000096	          0x4c39e2	                            cmp rdx, r12	      1048	mprintf.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x4000099	            0x7215	                            jb 0x40000b0	      1048	mprintf.c	FUNCTION_8	ELSE_1	IF_3	IF_4
0x400009b	    0xc74318010000	               mov dword [rbx + 0x18], 1	      1037	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000a2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1038	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000a7	            0xeb33	                           jmp 0x40000dc	      1038	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000a9	     0xf1f80000000	                         nop dword [rax]	      1038	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000b0	    0x488b05000000	            mov rax, qword [0x040000b7] 	      1049	mprintf.c	FUNCTION_8	ELSE_1	IF_3	CALL_2
0x40000b7	          0x4c89e6	                            mov rsi, r12	      1049	mprintf.c	FUNCTION_8	ELSE_1	IF_3	CALL_2
0x40000ba	            0xff10	                        call qword [rax]	      1049	mprintf.c	FUNCTION_8	ELSE_1	IF_3	CALL_2
0x40000bc	          0x4885c0	                           test rax, rax	      1051	mprintf.c	FUNCTION_8	ELSE_1	IF_3	IF_5
0x40000bf	          0x4889c7	                            mov rdi, rax	      1049	mprintf.c	FUNCTION_8	ELSE_1	IF_3	CALL_2
0x40000c2	            0x74d7	                            je 0x400009b	      1051	mprintf.c	FUNCTION_8	ELSE_1	IF_3	IF_5
0x40000c4	          0x488903	                    mov qword [rbx], rax	      1055	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x40000c7	        0x488b4308	                mov rax, qword [rbx + 8]	      1055	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x40000cb	        0x4c896310	             mov qword [rbx + 0x10], r12	      1056	mprintf.c	FUNCTION_8	ELSE_1	IF_3
0x40000cf	        0x40882c07	               mov byte [rdi + rax], bpl	      1059	mprintf.c	FUNCTION_8
0x40000d3	      0x4883430801	                  add qword [rbx + 8], 1	      1061	mprintf.c	FUNCTION_8
0x40000d8	        0x400fb6c5	                          movzx eax, bpl	      1061	mprintf.c	FUNCTION_8
0x40000dc	              0x5b	                                 pop rbx	      1064	mprintf.c	FUNCTION_8
0x40000dd	              0x5d	                                 pop rbp	      1064	mprintf.c	FUNCTION_8
0x40000de	            0x415c	                                 pop r12	      1064	mprintf.c	FUNCTION_8
0x40000e0	              0xc3	                                     ret	      1064	mprintf.c	FUNCTION_8
0x40000e1	     0xf1f80000000	                         nop dword [rax]	      1064	mprintf.c	FUNCTION_8
0x40000e8	    0x488b05000000	            mov rax, qword [0x040000ef] 	      1035	mprintf.c	FUNCTION_8	IF_1	CALL_1
0x40000ef	      0xbf20000000	                           mov edi, 0x20	      1035	mprintf.c	FUNCTION_8	IF_1	CALL_1
0x40000f4	            0xff10	                        call qword [rax]	      1035	mprintf.c	FUNCTION_8	IF_1	CALL_1
0x40000f6	          0x4885c0	                           test rax, rax	      1036	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000f9	          0x488903	                    mov qword [rbx], rax	      1035	mprintf.c	FUNCTION_8	IF_1	CALL_1
0x40000fc	            0x749d	                            je 0x400009b	      1036	mprintf.c	FUNCTION_8	IF_1	IF_2
0x40000fe	          0x4889c7	                            mov rdi, rax	      1036	mprintf.c	FUNCTION_8	IF_1	IF_2
0x4000101	    0x48c743102000	           mov qword [rbx + 0x10], 0x20 	      1040	mprintf.c	FUNCTION_8	IF_1
0x4000109	    0x48c743080000	                  mov qword [rbx + 8], 0	      1041	mprintf.c	FUNCTION_8	IF_1
0x4000111	            0x31c0	                            xor eax, eax	      1041	mprintf.c	FUNCTION_8	IF_1
0x4000113	            0xebba	                           jmp 0x40000cf	      1041	mprintf.c	FUNCTION_8	IF_1
dprintf_Pass1	CALL,19:functions,0:ELSE,11:SWITCH,3:FOR,1:WHILE,2:DO,0:IF,23	503
0x4000130	            0x4157	                                push r15	       229	mprintf.c	FUNCTION_3
0x4000132	            0x4156	                                push r14	       229	mprintf.c	FUNCTION_3
0x4000134	          0x4989cf	                            mov r15, rcx	       229	mprintf.c	FUNCTION_3
0x4000137	            0x4155	                                push r13	       229	mprintf.c	FUNCTION_3
0x4000139	            0x4154	                                push r12	       229	mprintf.c	FUNCTION_3
0x400013b	    0x4c8d35000000	                   lea r14, [0x04000142]	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000142	              0x55	                                push rbp	       229	mprintf.c	FUNCTION_3
0x4000143	              0x53	                                push rbx	       229	mprintf.c	FUNCTION_3
0x4000144	          0x4889f5	                            mov rbp, rsi	       229	mprintf.c	FUNCTION_3
0x4000147	    0x4c8d2d000000	                   lea r13, [0x0400014e]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400014e	        0x4883ec58	                           sub rsp, 0x58	       229	mprintf.c	FUNCTION_3
0x4000152	    0x64488b042528	                mov rax, qword fs:[0x28]	       229	mprintf.c	FUNCTION_3
0x400015b	      0x4889442448	             mov qword [rsp + 0x48], rax	       229	mprintf.c	FUNCTION_3
0x4000160	            0x31c0	                            xor eax, eax	       229	mprintf.c	FUNCTION_3
0x4000162	      0x488d442440	                   lea rax, [rsp + 0x40]	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x4000167	      0x4889542420	             mov qword [rsp + 0x20], rdx	       229	mprintf.c	FUNCTION_3
0x400016c	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       230	mprintf.c	FUNCTION_3
0x4000171	    0x48c744241000	               mov qword [rsp + 0x10], 0	       236	mprintf.c	FUNCTION_3
0x400017a	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       231	mprintf.c	FUNCTION_3
0x4000182	      0x4889442428	             mov qword [rsp + 0x28], rax	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x4000187	            0xeb1d	                           jmp 0x40001a6	       239	mprintf.c	FUNCTION_3	WHILE_1
0x4000189	     0xf1f80000000	                         nop dword [rax]	       239	mprintf.c	FUNCTION_3	WHILE_1
0x4000190	        0x488d5f01	                      lea rbx, [rdi + 1]	       240	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000194	      0x48895c2440	             mov qword [rsp + 0x40], rbx	       240	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000199	        0x807bff25	                cmp byte [rbx - 1], 0x25	       240	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x400019d	     0xf84f5010000	                            je 0x4000398	       240	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40001a3	          0x4889df	                            mov rdi, rbx	       240	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40001a6	          0x803f00	                       cmp byte [rdi], 0	       239	mprintf.c	FUNCTION_3	WHILE_1
0x40001a9	            0x75e5	                           jne 0x4000190	       239	mprintf.c	FUNCTION_3	WHILE_1
0x40001ab	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       239	mprintf.c	FUNCTION_3	WHILE_1
0x40001b0	          0x4889e8	                            mov rax, rbp	       239	mprintf.c	FUNCTION_3	WHILE_1
0x40001b3	    0x4c8d05000000	                    lea r8, [0x040001ba]	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40001ba	          0x4989c9	                             mov r9, rcx	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40001bd	        0x49c1e105	                               shl r9, 5	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40001c1	          0x4901e9	                             add r9, rbp	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40001c4	          0x4885c9	                           test rcx, rcx	       485	mprintf.c	FUNCTION_3	FOR_1
0x40001c7	     0xf8ea7000000	                           jle 0x4000274	       485	mprintf.c	FUNCTION_3	FOR_1
0x40001cd	           0xf1f00	                         nop dword [rax]	       485	mprintf.c	FUNCTION_3	FOR_1
0x40001d0	          0x8b4804	                mov ecx, dword [rax + 4]	       488	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001d3	          0xf6c540	                           test ch, 0x40	       488	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001d6	            0x742a	                            je 0x4000202	       488	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001d8	        0x488b5008	                mov rdx, qword [rax + 8]	       489	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001dc	          0x418b37	                    mov esi, dword [r15]	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001df	        0x48c1e205	                              shl rdx, 5	       489	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001e3	          0x4801ea	                            add rdx, rbp	       489	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001e6	          0x83fe2f	                           cmp esi, 0x2f	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001e9	     0xf8751010000	                            ja 0x4000340	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001ef	            0x89f7	                            mov edi, esi	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001f1	        0x49037f10	             add rdi, qword [r15 + 0x10]	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001f5	          0x83c608	                              add esi, 8	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001f8	          0x418937	                    mov dword [r15], esi	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x40001fb	          0x486337	                 movsxd rsi, dword [rdi]	       489	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x40001fe	        0x48897218	             mov qword [rdx + 0x18], rsi	       489	mprintf.c	FUNCTION_3	FOR_1	IF_17
0x4000202	    0xf7c100000100	                       test ecx, 0x10000	       492	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x4000208	            0x742a	                            je 0x4000234	       492	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x400020a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       493	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x400020e	          0x418b37	                    mov esi, dword [r15]	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000211	        0x48c1e205	                              shl rdx, 5	       493	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x4000215	          0x4801ea	                            add rdx, rbp	       493	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x4000218	          0x83fe2f	                           cmp esi, 0x2f	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x400021b	     0xf8737010000	                            ja 0x4000358	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000221	            0x89f7	                            mov edi, esi	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000223	        0x49037f10	             add rdi, qword [r15 + 0x10]	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000227	          0x83c608	                              add esi, 8	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x400022a	          0x418937	                    mov dword [r15], esi	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x400022d	          0x486337	                 movsxd rsi, dword [rdi]	       493	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x4000230	        0x48897218	             mov qword [rdx + 0x18], rsi	       493	mprintf.c	FUNCTION_3	FOR_1	IF_18
0x4000234	          0x833809	                      cmp dword [rax], 9	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000237	            0x772e	                            ja 0x4000267	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000239	            0x8b10	                    mov edx, dword [rax]	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x400023b	        0x49631490	          movsxd rdx, dword [r8 + rdx*4]	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x400023f	          0x4c01c2	                             add rdx, r8	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000242	            0xffe2	                                 jmp rdx	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000244	         0xf1f4000	                         nop dword [rax]	       497	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000248	          0x418b17	                    mov edx, dword [r15]	       515	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_7	IF_20
0x400024b	          0x83fa2f	                           cmp edx, 0x2f	       515	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_7	IF_20
0x400024e	     0xf862c010000	                           jbe 0x4000380	       515	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_7	IF_20
0x4000254	        0x498b4f08	                mov rcx, qword [r15 + 8]	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000258	        0x488d5108	                      lea rdx, [rcx + 8]	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x400025c	        0x49895708	                mov qword [r15 + 8], rdx	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000260	          0x488b11	                    mov rdx, qword [rcx]	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000263	        0x48895018	             mov qword [rax + 0x18], rdx	       523	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000267	        0x4883c020	                           add rax, 0x20	       523	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x400026b	          0x4939c1	                             cmp r9, rax	       485	mprintf.c	FUNCTION_3	FOR_1
0x400026e	     0xf855cffffff	                           jne 0x40001d0	       485	mprintf.c	FUNCTION_3	FOR_1
0x4000274	            0x31c0	                            xor eax, eax	       550	mprintf.c	FUNCTION_3
0x4000276	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       552	mprintf.c	FUNCTION_3
0x400027b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       552	mprintf.c	FUNCTION_3
0x4000284	     0xf85f2060000	                           jne 0x400097c	       552	mprintf.c	FUNCTION_3
0x400028a	        0x4883c458	                           add rsp, 0x58	       552	mprintf.c	FUNCTION_3
0x400028e	              0x5b	                                 pop rbx	       552	mprintf.c	FUNCTION_3
0x400028f	              0x5d	                                 pop rbp	       552	mprintf.c	FUNCTION_3
0x4000290	            0x415c	                                 pop r12	       552	mprintf.c	FUNCTION_3
0x4000292	            0x415d	                                 pop r13	       552	mprintf.c	FUNCTION_3
0x4000294	            0x415e	                                 pop r14	       552	mprintf.c	FUNCTION_3
0x4000296	            0x415f	                                 pop r15	       552	mprintf.c	FUNCTION_3
0x4000298	              0xc3	                                     ret	       552	mprintf.c	FUNCTION_3
0x4000299	     0xf1f80000000	                         nop dword [rax]	       552	mprintf.c	FUNCTION_3
0x40002a0	        0x418b5704	                mov edx, dword [r15 + 4]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002a4	    0x81faaf000000	                           cmp edx, 0xaf	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002aa	     0xf8780010000	                            ja 0x4000430	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002b0	            0x89d1	                            mov ecx, edx	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002b2	        0x49034f10	             add rcx, qword [r15 + 0x10]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002b6	          0x83c210	                           add edx, 0x10	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002b9	        0x41895704	                mov dword [r15 + 4], edx	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002bd	        0xf20f1001	                 movsd xmm0, qword [rcx]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002c1	      0xf20f114018	          movsd qword [rax + 0x18], xmm0	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x40002c6	            0xeb9f	                           jmp 0x4000267	       536	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40002c8	     0xf1f84000000	                   nop dword [rax + rax]	       536	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x40002d0	          0x8b5004	                mov edx, dword [rax + 4]	       510	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	IF_19
0x40002d3	            0x89d6	                            mov esi, edx	       510	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	IF_19
0x40002d5	    0x81e640020000	                          and esi, 0x240	       510	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	IF_19
0x40002db	    0x81fe40020000	                          cmp esi, 0x240	       510	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	IF_19
0x40002e1	     0xf8461ffffff	                            je 0x4000248	       510	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	IF_19
0x40002e7	          0xf6c140	                           test cl, 0x40	       513	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_7	IF_20
0x40002ea	     0xf8558ffffff	                           jne 0x4000248	       513	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_7	IF_20
0x40002f0	    0x81e220020000	                          and edx, 0x220	       519	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	IF_21
0x40002f6	    0x81fa20020000	                          cmp edx, 0x220	       519	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	IF_21
0x40002fc	          0x418b17	                    mov edx, dword [r15]	       521	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_15
0x40002ff	            0x746f	                            je 0x4000370	       519	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	IF_21
0x4000301	          0xf6c120	                           test cl, 0x20	       522	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000304	            0x756a	                           jne 0x4000370	       522	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000306	          0x80e502	                               and ch, 2	       525	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000309	     0xf8451030000	                            je 0x4000660	       525	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400030f	          0x83fa2f	                           cmp edx, 0x2f	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000312	     0xf87ea040000	                            ja 0x4000802	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000318	            0x89d1	                            mov ecx, edx	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400031a	        0x49034f10	             add rcx, qword [r15 + 0x10]	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400031e	          0x83c208	                              add edx, 8	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000321	          0x418917	                    mov dword [r15], edx	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000324	            0x8b09	                    mov ecx, dword [rcx]	       526	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000326	        0x48894818	             mov qword [rax + 0x18], rcx	       526	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400032a	      0xe938ffffff	                           jmp 0x4000267	       526	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400032f	              0x90	                                     nop	       526	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000330	    0xc70003000000	                      mov dword [rax], 3	       542	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000336	      0xe92cffffff	                           jmp 0x4000267	       543	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x400033b	       0xf1f440000	                   nop dword [rax + rax]	       543	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3
0x4000340	        0x498b7f08	                mov rdi, qword [r15 + 8]	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x4000344	        0x488d7708	                      lea rsi, [rdi + 8]	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x4000348	        0x49897708	                mov qword [r15 + 8], rsi	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x400034c	      0xe9aafeffff	                           jmp 0x40001fb	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x4000351	     0xf1f80000000	                         nop dword [rax]	       490	mprintf.c	FUNCTION_3	FOR_1	IF_17	CALL_9
0x4000358	        0x498b7f08	                mov rdi, qword [r15 + 8]	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x400035c	        0x488d7708	                      lea rsi, [rdi + 8]	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000360	        0x49897708	                mov qword [r15 + 8], rsi	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000364	      0xe9c4feffff	                           jmp 0x400022d	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000369	     0xf1f80000000	                         nop dword [rax]	       494	mprintf.c	FUNCTION_3	FOR_1	IF_18	CALL_10
0x4000370	          0x83fa2f	                           cmp edx, 0x2f	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000373	     0xf87dbfeffff	                            ja 0x4000254	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000379	     0xf1f80000000	                         nop dword [rax]	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000380	            0x89d1	                            mov ecx, edx	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000382	          0x83c208	                              add edx, 8	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000385	        0x49034f10	             add rcx, qword [r15 + 0x10]	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000389	          0x418917	                    mov dword [r15], edx	       524	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x400038c	      0xe9cffeffff	                           jmp 0x4000260	       523	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000391	     0xf1f80000000	                         nop dword [rax]	       523	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_9	IF_22
0x4000398	        0x807f0125	                cmp byte [rdi + 1], 0x25	       241	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x400039c	     0xf84a6000000	                            je 0x4000448	       241	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x40003a2	      0x8344241c01	               add dword [rsp + 0x1c], 1	       250	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40003a7	          0x4531e4	                          xor r12d, r12d	       180	mprintf.c	FUNCTION_1
0x40003aa	            0xeb14	                           jmp 0x40003c0	       180	mprintf.c	FUNCTION_1
0x40003ac	         0xf1f4000	                         nop dword [rax]	       180	mprintf.c	FUNCTION_1
0x40003b0	           0xfbe03	                   movsx eax, byte [rbx]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x40003b3	        0x438d14a4	                  lea edx, [r12 + r12*4]	       182	mprintf.c	FUNCTION_1	WHILE_1
0x40003b7	        0x4883c301	                              add rbx, 1	       184	mprintf.c	FUNCTION_1	WHILE_1
0x40003bb	      0x448d6450d0	          lea r12d, [rax + rdx*2 - 0x30]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x40003c0	           0xfb63b	                   movzx edi, byte [rbx]	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40003c3	      0xe800000000	                          call 0x40003c8	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40003c8	            0x85c0	                           test eax, eax	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40003ca	            0x75e4	                           jne 0x40003b0	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40003cc	          0x4585e4	                         test r12d, r12d	       186	mprintf.c	FUNCTION_1	IF_1
0x40003cf	            0x7409	                            je 0x40003da	       186	mprintf.c	FUNCTION_1	IF_1
0x40003d1	          0x803b24	                    cmp byte [rbx], 0x24	       186	mprintf.c	FUNCTION_1	IF_1
0x40003d4	     0xf845e020000	                            je 0x4000638	       186	mprintf.c	FUNCTION_1	IF_1
0x40003da	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       186	mprintf.c	FUNCTION_1	IF_1
0x40003df	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	       255	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x40003e4	      0x4889442408	                mov qword [rsp + 8], rax	       255	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x40003e9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       255	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x40003ee	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       255	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x40003f3	    0x48c744243000	               mov qword [rsp + 0x30], 0	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40003fc	          0x4839c8	                            cmp rax, rcx	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40003ff	        0x480f4cc1	                          cmovl rax, rcx	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000403	            0x31db	                            xor ebx, ebx	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000405	          0x4531c0	                            xor r8d, r8d	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000408	      0x4889442410	             mov qword [rsp + 0x10], rax	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400040d	           0xf1f00	                         nop dword [rax]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000410	           0xfb617	                   movzx edx, byte [rdi]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000413	          0x8d42e0	                   lea eax, [rdx - 0x20]	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000416	            0x3c5a	                            cmp al, 0x5a	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000418	            0x776e	                            ja 0x4000488	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x400041a	           0xfb6c0	                           movzx eax, al	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x400041d	        0x49630486	         movsxd rax, dword [r14 + rax*4]	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000421	          0x4c01f0	                            add rax, r14	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000424	            0xffe0	                                 jmp rax	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000426	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       201	mprintf.c	FUNCTION_2	SWITCH_1
0x4000430	        0x498b4f08	                mov rcx, qword [r15 + 8]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x4000434	        0x488d5108	                      lea rdx, [rcx + 8]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x4000438	        0x49895708	                mov qword [r15 + 8], rdx	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x400043c	      0xe97cfeffff	                           jmp 0x40002bd	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x4000441	     0xf1f80000000	                         nop dword [rax]	       535	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	CALL_19
0x4000448	        0x4883c702	                              add rdi, 2	       242	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x400044c	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       242	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x4000451	      0xe950fdffff	                           jmp 0x40001a6	       243	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x4000456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       243	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_2
0x4000460	        0x4c8d6701	                      lea r12, [rdi + 1]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000464	      0x4c89642440	             mov qword [rsp + 0x40], r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000469	           0xfb607	                   movzx eax, byte [rdi]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400046c	          0x83e820	                           sub eax, 0x20	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400046f	            0x3c5a	                            cmp al, 0x5a	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000471	     0xf87b9010000	                            ja 0x4000630	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000477	           0xfb6c0	                           movzx eax, al	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400047a	      0x4963448500	         movsxd rax, dword [r13 + rax*4]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400047f	          0x4c01e8	                            add rax, r13	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000482	            0xffe0	                                 jmp rax	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000484	         0xf1f4000	                         nop dword [rax]	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000488	      0x4c8b642408	                mov r12, qword [rsp + 8]	       390	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x400048d	        0x4983ec01	                              sub r12, 1	       390	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x4000491	        0x4983fc7f	                           cmp r12, 0x7f	       390	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x4000495	     0xf87b3020000	                            ja 0x400074e	       390	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x400049b	          0x83ea45	                           sub edx, 0x45	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400049e	          0x80fa33	                            cmp dl, 0x33	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004a1	     0xf87c1040000	                            ja 0x4000968	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004a7	    0x488d05000000	                   lea rax, [0x040004ae]	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004ae	           0xfb6d2	                           movzx edx, dl	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004b1	    0x488d0d000000	                   lea rcx, [0x040004b8]	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004b8	        0x48630490	         movsxd rax, dword [rax + rdx*4]	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004bc	          0x4801c8	                            add rax, rcx	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004bf	            0xffe0	                                 jmp rax	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004c1	     0xf1f80000000	                         nop dword [rax]	       394	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40004c8	          0xf6c320	                           test bl, 0x20	       333	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_10
0x40004cb	            0x7543	                           jne 0x4000510	       333	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_10
0x40004cd	          0x83cb20	                            or ebx, 0x20	       357	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40004d0	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40004d3	      0xe938ffffff	                           jmp 0x4000410	       359	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40004d8	     0xf1f84000000	                   nop dword [rax + rax]	       359	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40004e0	            0x89d8	                            mov eax, ebx	       362	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_11
0x40004e2	          0x80cc01	                                or ah, 1	       362	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_11
0x40004e5	          0xf6c304	                              test bl, 4	       362	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_11
0x40004e8	           0xf44d8	                          cmove ebx, eax	       362	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_11
0x40004eb	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x40004f0	      0xba0a000000	                            mov edx, 0xa	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x40004f5	          0x80cf20	                             or bh, 0x20	       366	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40004f8	      0xe800000000	                          call 0x40004fd	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x40004fd	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x4000502	          0x4989c0	                             mov r8, rax	       367	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	CALL_7
0x4000505	      0xe906ffffff	                           jmp 0x4000410	       368	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400050a	    0x660f1f440000	                    nop word [rax + rax]	       368	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000510	          0x83cb40	                            or ebx, 0x40	       342	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000513	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000516	      0xe9f5feffff	                           jmp 0x4000410	       343	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400051b	       0xf1f440000	                   nop dword [rax + rax]	       343	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000520	          0x80cb80	                             or bl, 0x80	       339	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000523	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000526	      0xe9e5feffff	                           jmp 0x4000410	       340	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400052b	       0xf1f440000	                   nop dword [rax + rax]	       340	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000530	          0x83cb10	                            or ebx, 0x10	       321	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000533	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000536	      0xe9d5feffff	                           jmp 0x4000410	       322	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400053b	       0xf1f440000	                   nop dword [rax + rax]	       322	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000540	        0x807f012a	                cmp byte [rdi + 1], 0x2a	       299	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000544	     0xf840e020000	                            je 0x4000758	       299	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x400054a	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x400054f	          0x4c89e7	                            mov rdi, r12	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000552	      0xba0a000000	                            mov edx, 0xa	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000557	      0x4c89442438	              mov qword [rsp + 0x38], r8	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x400055c	          0x80cf80	                             or bh, 0x80	       316	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4
0x400055f	      0xe800000000	                          call 0x4000564	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000564	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000569	      0x4889442430	             mov qword [rsp + 0x30], rax	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x400056e	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000573	      0xe998feffff	                           jmp 0x4000410	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000578	     0xf1f84000000	                   nop dword [rax + rax]	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000580	          0x80e7fe	                            and bh, 0xfe	       317	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_4	CALL_6
0x4000583	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000586	          0x83cb04	                               or ebx, 4	       293	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000589	      0xe982feffff	                           jmp 0x4000410	       294	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400058e	            0x6690	                                     nop	       294	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000590	          0x83cb02	                               or ebx, 2	       289	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000593	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000596	      0xe975feffff	                           jmp 0x4000410	       290	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400059b	       0xf1f440000	                   nop dword [rax + rax]	       290	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005a0	          0x80cf40	                             or bh, 0x40	       370	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005a3	          0x4531c0	                            xor r8d, r8d	       180	mprintf.c	FUNCTION_1
0x40005a6	      0x8344241c01	               add dword [rsp + 0x1c], 1	       371	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005ab	        0x895c2438	             mov dword [rsp + 0x38], ebx	       371	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005af	          0x4489c3	                            mov ebx, r8d	       371	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005b2	            0xeb14	                           jmp 0x40005c8	       371	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005b4	         0xf1f4000	                         nop dword [rax]	       371	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x40005b8	      0x410fbe0424	                   movsx eax, byte [r12]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x40005bd	          0x8d149b	                  lea edx, [rbx + rbx*4]	       182	mprintf.c	FUNCTION_1	WHILE_1
0x40005c0	        0x4983c401	                              add r12, 1	       184	mprintf.c	FUNCTION_1	WHILE_1
0x40005c4	        0x8d5c50d0	           lea ebx, [rax + rdx*2 - 0x30]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x40005c8	      0x410fb63c24	                   movzx edi, byte [r12]	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005cd	      0xe800000000	                          call 0x40005d2	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005d2	            0x85c0	                           test eax, eax	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005d4	            0x75e2	                           jne 0x40005b8	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005d6	          0x4c63c3	                          movsxd r8, ebx	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005d9	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40005dd	          0x4585c0	                           test r8d, r8d	       186	mprintf.c	FUNCTION_1	IF_1
0x40005e0	            0x740b	                            je 0x40005ed	       186	mprintf.c	FUNCTION_1	IF_1
0x40005e2	      0x41803c2424	                    cmp byte [r12], 0x24	       186	mprintf.c	FUNCTION_1	IF_1
0x40005e7	     0xf8494000000	                            je 0x4000681	       186	mprintf.c	FUNCTION_1	IF_1
0x40005ed	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       186	mprintf.c	FUNCTION_1	IF_1
0x40005f2	      0x4c6344241c	          movsxd r8, dword [rsp + 0x1c] 	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x40005f7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x40005fc	          0x4c39c0	                             cmp rax, r8	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x40005ff	        0x490f4cc0	                           cmovl rax, r8	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x4000603	      0x4889442410	             mov qword [rsp + 0x10], rax	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x4000608	      0xe903feffff	                           jmp 0x4000410	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x400060d	           0xf1f00	                         nop dword [rax]	       377	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	ELSE_6
0x4000610	          0x83cb08	                               or ebx, 8	       296	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000613	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000616	      0xe9f5fdffff	                           jmp 0x4000410	       297	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400061b	       0xf1f440000	                   nop dword [rax + rax]	       297	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000620	          0x83cb01	                               or ebx, 1	       286	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000623	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000626	      0xe9e5fdffff	                           jmp 0x4000410	       287	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x400062b	       0xf1f440000	                   nop dword [rax + rax]	       287	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000630	          0x4c89e7	                            mov rdi, r12	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000633	      0xe9d8fdffff	                           jmp 0x4000410	       284	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1
0x4000638	          0x4963c4	                        movsxd rax, r12d	       188	mprintf.c	FUNCTION_1	IF_1
0x400063b	        0x488d7b01	                      lea rdi, [rbx + 1]	       186	mprintf.c	FUNCTION_1	IF_1
0x400063f	          0x4885c0	                           test rax, rax	       253	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x4000642	      0x4889442408	                mov qword [rsp + 8], rax	       188	mprintf.c	FUNCTION_1	IF_1
0x4000647	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       187	mprintf.c	FUNCTION_1	IF_1
0x400064c	     0xf8597fdffff	                           jne 0x40003e9	       253	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x4000652	      0xe988fdffff	                           jmp 0x40003df	       253	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x4000657	    0x660f1f840000	                    nop word [rax + rax]	       253	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_3
0x4000660	          0x83fa2f	                           cmp edx, 0x2f	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x4000663	     0xf8788010000	                            ja 0x40007f1	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x4000669	            0x89d1	                            mov ecx, edx	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x400066b	        0x49034f10	             add rcx, qword [r15 + 0x10]	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x400066f	          0x83c208	                              add edx, 8	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x4000672	          0x418917	                    mov dword [r15], edx	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x4000675	          0x486311	                 movsxd rdx, dword [rcx]	       529	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_11
0x4000678	        0x48895018	             mov qword [rax + 0x18], rdx	       529	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_11
0x400067c	      0xe9e6fbffff	                           jmp 0x4000267	       529	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_11
0x4000681	      0x498d7c2401	                      lea rdi, [r12 + 1]	       186	mprintf.c	FUNCTION_1	IF_1
0x4000686	          0x4d85c0	                             test r8, r8	       374	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_12
0x4000689	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       187	mprintf.c	FUNCTION_1	IF_1
0x400068e	     0xf8563ffffff	                           jne 0x40005f7	       374	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_12
0x4000694	      0xe959ffffff	                           jmp 0x40005f2	       374	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_12
0x4000699	     0xf1f80000000	                         nop dword [rax]	       374	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_12
0x40006a0	          0x83cb08	                               or ebx, 8	       396	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40006a3	        0x49c1e405	                              shl r12, 5	       399	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40006a7	      0x4a8d442500	                    lea rax, [rbp + r12]	       399	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40006ac	    0xc70001000000	                      mov dword [rax], 1	       399	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40006b2	    0x660f1f440000	                    nop word [rax + rax]	       399	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40006b8	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       456	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40006bd	          0xf6c740	                           test bh, 0x40	       458	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006c0	          0x895804	                mov dword [rax + 4], ebx	       454	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40006c3	        0x4c894008	                 mov qword [rax + 8], r8	       455	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40006c7	        0x48894810	             mov qword [rax + 0x10], rcx	       456	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x40006cb	            0x742c	                            je 0x40006f9	       458	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006cd	        0x498d50ff	                       lea rdx, [r8 - 1]	       461	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006d1	        0x48895008	                mov qword [rax + 8], rdx	       462	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006d5	        0x48c1e205	                              shl rdx, 5	       463	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006d9	          0x4801ea	                            add rdx, rbp	       463	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006dc	    0xc70209000000	                      mov dword [rdx], 9	       463	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006e2	    0xc74204000000	                  mov dword [rdx + 4], 0	       464	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006e9	    0x48c742080000	                  mov qword [rdx + 8], 0	       466	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006f1	    0x48c742100000	               mov qword [rdx + 0x10], 0	       467	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_15
0x40006f9	    0x81e300000100	                        and ebx, 0x10000	       469	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x40006ff	            0x7433	                            je 0x4000734	       469	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000701	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       472	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000706	        0x4883ea01	                              sub rdx, 1	       472	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x400070a	        0x48895010	             mov qword [rax + 0x10], rdx	       473	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x400070e	        0x48c1e205	                              shl rdx, 5	       474	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000712	      0x488d441500	                    lea rax, [rbp + rdx]	       474	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000717	    0xc70009000000	                      mov dword [rax], 9	       474	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x400071d	    0xc74004000000	                  mov dword [rax + 4], 0	       475	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000724	    0x48c740080000	                  mov qword [rax + 8], 0	       477	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x400072c	    0x48c740100000	               mov qword [rax + 0x10], 0	       478	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_16
0x4000734	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000739	        0x488d4701	                      lea rax, [rdi + 1]	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x400073d	          0x488901	                    mov qword [rcx], rax	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000740	        0x488d4108	                      lea rax, [rcx + 8]	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000744	      0x4889442420	             mov qword [rsp + 0x20], rax	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x4000749	      0xe958faffff	                           jmp 0x40001a6	       480	mprintf.c	FUNCTION_3	WHILE_1	IF_1
0x400074e	      0xb801000000	                              mov eax, 1	       392	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x4000753	      0xe91efbffff	                           jmp 0x4000276	       392	mprintf.c	FUNCTION_3	WHILE_1	IF_1	IF_14
0x4000758	        0x4c8d6702	                      lea r12, [rdi + 2]	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x400075c	    0x81cb00000100	                         or ebx, 0x10000	       302	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000762	          0x4889e8	                            mov rax, rbp	       302	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000765	            0x31d2	                            xor edx, edx	       180	mprintf.c	FUNCTION_1
0x4000767	        0x895c2438	             mov dword [rsp + 0x38], ebx	       180	mprintf.c	FUNCTION_1
0x400076b	      0x8344241c01	               add dword [rsp + 0x1c], 1	       304	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000770	      0x4c89642440	             mov qword [rsp + 0x40], r12	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000775	          0x4c89e5	                            mov rbp, r12	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000778	      0x4c89442430	              mov qword [rsp + 0x30], r8	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x400077d	            0x89d3	                            mov ebx, edx	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x400077f	          0x4989c4	                            mov r12, rax	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000782	            0xeb13	                           jmp 0x4000797	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000784	         0xf1f4000	                         nop dword [rax]	       303	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7
0x4000788	         0xfbe4500	                   movsx eax, byte [rbp]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x400078c	          0x8d149b	                  lea edx, [rbx + rbx*4]	       182	mprintf.c	FUNCTION_1	WHILE_1
0x400078f	        0x4883c501	                              add rbp, 1	       184	mprintf.c	FUNCTION_1	WHILE_1
0x4000793	        0x8d5c50d0	           lea ebx, [rax + rdx*2 - 0x30]	       183	mprintf.c	FUNCTION_1	WHILE_1
0x4000797	         0xfb67d00	                   movzx edi, byte [rbp]	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x400079b	      0xe800000000	                          call 0x40007a0	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007a0	            0x85c0	                           test eax, eax	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007a2	            0x75e4	                           jne 0x4000788	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007a4	            0x89da	                            mov edx, ebx	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007a6	          0x4c89e0	                            mov rax, r12	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007a9	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       181	mprintf.c	FUNCTION_1	WHILE_1	CALL_1
0x40007ae	            0x85d2	                           test edx, edx	       186	mprintf.c	FUNCTION_1	IF_1
0x40007b0	          0x4989ec	                            mov r12, rbp	       186	mprintf.c	FUNCTION_1	IF_1
0x40007b3	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	       186	mprintf.c	FUNCTION_1	IF_1
0x40007b7	          0x4889c5	                            mov rbp, rax	       186	mprintf.c	FUNCTION_1	IF_1
0x40007ba	            0x740b	                            je 0x40007c7	       186	mprintf.c	FUNCTION_1	IF_1
0x40007bc	      0x41803c2424	                    cmp byte [r12], 0x24	       186	mprintf.c	FUNCTION_1	IF_1
0x40007c1	     0xf847a010000	                            je 0x4000941	       186	mprintf.c	FUNCTION_1	IF_1
0x40007c7	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       186	mprintf.c	FUNCTION_1	IF_1
0x40007cc	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007d1	      0x4889442430	             mov qword [rsp + 0x30], rax	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007d6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007db	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007e0	          0x4839c8	                            cmp rax, rcx	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007e3	        0x480f4cc1	                          cmovl rax, rcx	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007e7	      0x4889442410	             mov qword [rsp + 0x10], rax	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007ec	      0xe91ffcffff	                           jmp 0x4000410	       310	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	ELSE_3
0x40007f1	        0x498b4f08	                mov rcx, qword [r15 + 8]	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x40007f5	        0x488d5108	                      lea rdx, [rcx + 8]	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x40007f9	        0x49895708	                mov qword [r15 + 8], rdx	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x40007fd	      0xe973feffff	                           jmp 0x4000675	       530	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	CALL_18
0x4000802	        0x498b4f08	                mov rcx, qword [r15 + 8]	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000806	        0x488d5108	                      lea rdx, [rcx + 8]	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400080a	        0x49895708	                mov qword [r15 + 8], rdx	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x400080e	      0xe911fbffff	                           jmp 0x4000324	       527	mprintf.c	FUNCTION_3	FOR_1	SWITCH_3	ELSE_8	ELSE_10	IF_23
0x4000813	        0x49c1e405	                              shl r12, 5	       419	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000817	          0x80cf0a	                              or bh, 0xa	       420	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400081a	      0x4a8d442500	                    lea rax, [rbp + r12]	       419	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400081f	    0xc70003000000	                      mov dword [rax], 3	       419	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000825	      0xe98efeffff	                           jmp 0x40006b8	       421	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400082a	        0x49c1e405	                              shl r12, 5	       438	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400082e	    0x81cb00100400	                         or ebx, 0x41000	       439	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000834	      0x4a8d442500	                    lea rax, [rbp + r12]	       438	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000839	    0xc70007000000	                      mov dword [rax], 7	       438	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400083f	      0xe974feffff	                           jmp 0x40006b8	       440	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000844	        0x49c1e405	                              shl r12, 5	       446	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000848	    0x81cb00100800	                         or ebx, 0x81000	       447	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400084e	      0x4a8d442500	                    lea rax, [rbp + r12]	       446	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000853	    0xc70007000000	                      mov dword [rax], 7	       446	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000859	      0xe95afeffff	                           jmp 0x40006b8	       448	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400085e	        0x49c1e405	                              shl r12, 5	       423	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000862	          0x80cf1a	                             or bh, 0x1a	       424	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000865	      0x4a8d442500	                    lea rax, [rbp + r12]	       423	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400086a	    0xc70003000000	                      mov dword [rax], 3	       423	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000870	      0xe943feffff	                           jmp 0x40006b8	       425	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000875	        0x49c1e405	                              shl r12, 5	       427	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000879	    0x81cb00000200	                         or ebx, 0x20000	       428	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400087f	      0x4a8d442500	                    lea rax, [rbp + r12]	       427	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000884	    0xc70003000000	                      mov dword [rax], 3	       427	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400088a	      0xe929feffff	                           jmp 0x40006b8	       429	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400088f	        0x49c1e405	                              shl r12, 5	       408	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000893	      0x4a8d442500	                    lea rax, [rbp + r12]	       408	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000898	    0xc70003000000	                      mov dword [rax], 3	       408	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400089e	      0xe915feffff	                           jmp 0x40006b8	       409	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008a3	        0x49c1e405	                              shl r12, 5	       434	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008a7	    0x81cb00000400	                         or ebx, 0x40000	       435	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008ad	      0x4a8d442500	                    lea rax, [rbp + r12]	       434	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008b2	    0xc70007000000	                      mov dword [rax], 7	       434	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008b8	      0xe9fbfdffff	                           jmp 0x40006b8	       436	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008bd	        0x49c1e405	                              shl r12, 5	       431	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008c1	      0x4a8d442500	                    lea rax, [rbp + r12]	       431	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008c6	    0xc70007000000	                      mov dword [rax], 7	       431	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008cc	      0xe9e7fdffff	                           jmp 0x40006b8	       432	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008d1	        0x49c1e405	                              shl r12, 5	       442	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008d5	    0x81cb00000800	                         or ebx, 0x80000	       443	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008db	      0x4a8d442500	                    lea rax, [rbp + r12]	       442	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008e0	    0xc70007000000	                      mov dword [rax], 7	       442	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008e6	      0xe9cdfdffff	                           jmp 0x40006b8	       444	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008eb	        0x49c1e405	                              shl r12, 5	       402	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008ef	      0x4a8d442500	                    lea rax, [rbp + r12]	       402	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008f4	    0xc70004000000	                      mov dword [rax], 4	       402	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008fa	      0xe9b9fdffff	                           jmp 0x40006b8	       403	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x40008ff	        0x49c1e405	                              shl r12, 5	       415	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000903	          0x80cf04	                                or bh, 4	       416	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000906	      0x4a8d442500	                    lea rax, [rbp + r12]	       415	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400090b	    0xc70003000000	                      mov dword [rax], 3	       415	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000911	      0xe9a2fdffff	                           jmp 0x40006b8	       417	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000916	        0x49c1e405	                              shl r12, 5	       405	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400091a	      0x4a8d442500	                    lea rax, [rbp + r12]	       405	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400091f	    0xc70002000000	                      mov dword [rax], 2	       405	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000925	      0xe98efdffff	                           jmp 0x40006b8	       406	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400092a	        0x49c1e405	                              shl r12, 5	       411	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400092e	          0x80cf02	                                or bh, 2	       412	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000931	      0x4a8d442500	                    lea rax, [rbp + r12]	       411	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000936	    0xc70003000000	                      mov dword [rax], 3	       411	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400093c	      0xe977fdffff	                           jmp 0x40006b8	       413	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000941	          0x4863c2	                         movsxd rax, edx	       188	mprintf.c	FUNCTION_1	IF_1
0x4000944	      0x498d7c2401	                      lea rdi, [r12 + 1]	       186	mprintf.c	FUNCTION_1	IF_1
0x4000949	          0x4885c0	                           test rax, rax	       307	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	IF_8
0x400094c	      0x4889442430	             mov qword [rsp + 0x30], rax	       188	mprintf.c	FUNCTION_1	IF_1
0x4000951	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       187	mprintf.c	FUNCTION_1	IF_1
0x4000956	     0xf857afeffff	                           jne 0x40007d6	       307	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	IF_8
0x400095c	      0xe96bfeffff	                           jmp 0x40007cc	       307	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	IF_8
0x4000961	     0xf1f80000000	                         nop dword [rax]	       307	mprintf.c	FUNCTION_3	WHILE_1	IF_1	WHILE_2	ELSE_2	SWITCH_1	IF_7	IF_8
0x4000968	        0x49c1e405	                              shl r12, 5	       450	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400096c	      0x4a8d442500	                    lea rax, [rbp + r12]	       450	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000971	    0xc70000000000	                      mov dword [rax], 0	       450	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x4000977	      0xe93cfdffff	                           jmp 0x40006b8	       451	mprintf.c	FUNCTION_3	WHILE_1	IF_1	SWITCH_2
0x400097c	      0xe800000000	                          call 0x4000981	       552	mprintf.c	FUNCTION_3
curl_mvfprintf	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	4
0x4002b50	          0x4889d1	                            mov rcx, rdx	      1172	mprintf.c	FUNCTION_17	CALL_1
0x4002b53	          0x4889f2	                            mov rdx, rsi	      1172	mprintf.c	FUNCTION_17	CALL_1
0x4002b56	    0x488b35000000	            mov rsi, qword [0x04002b5d] 	      1172	mprintf.c	FUNCTION_17	CALL_1
0x4002b5d	      0xe9dedeffff	                 jmp sym.dprintf_formatf	      1172	mprintf.c	FUNCTION_17	CALL_1
curl_maprintf	CALL,5:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3	67
0x4002680	    0x4881ec080100	                          sub rsp, 0x108	      1067	mprintf.c	FUNCTION_9
0x4002687	            0x84c0	                             test al, al	      1067	mprintf.c	FUNCTION_9
0x4002689	          0x4989fa	                            mov r10, rdi	      1067	mprintf.c	FUNCTION_9
0x400268c	      0x4889742458	             mov qword [rsp + 0x58], rsi	      1067	mprintf.c	FUNCTION_9
0x4002691	      0x4889542460	             mov qword [rsp + 0x60], rdx	      1067	mprintf.c	FUNCTION_9
0x4002696	      0x48894c2468	             mov qword [rsp + 0x68], rcx	      1067	mprintf.c	FUNCTION_9
0x400269b	      0x4c89442470	              mov qword [rsp + 0x70], r8	      1067	mprintf.c	FUNCTION_9
0x40026a0	      0x4c894c2478	              mov qword [rsp + 0x78], r9	      1067	mprintf.c	FUNCTION_9
0x40026a5	            0x7440	                            je 0x40026e7	      1067	mprintf.c	FUNCTION_9
0x40026a7	     0xf2984248000	       movaps xmmword [rsp + 0x80], xmm0	      1067	mprintf.c	FUNCTION_9
0x40026af	     0xf298c249000	       movaps xmmword [rsp + 0x90], xmm1	      1067	mprintf.c	FUNCTION_9
0x40026b7	     0xf299424a000	       movaps xmmword [rsp + 0xa0], xmm2	      1067	mprintf.c	FUNCTION_9
0x40026bf	     0xf299c24b000	       movaps xmmword [rsp + 0xb0], xmm3	      1067	mprintf.c	FUNCTION_9
0x40026c7	     0xf29a424c000	       movaps xmmword [rsp + 0xc0], xmm4	      1067	mprintf.c	FUNCTION_9
0x40026cf	     0xf29ac24d000	       movaps xmmword [rsp + 0xd0], xmm5	      1067	mprintf.c	FUNCTION_9
0x40026d7	     0xf29b424e000	       movaps xmmword [rsp + 0xe0], xmm6	      1067	mprintf.c	FUNCTION_9
0x40026df	     0xf29bc24f000	       movaps xmmword [rsp + 0xf0], xmm7	      1067	mprintf.c	FUNCTION_9
0x40026e7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1067	mprintf.c	FUNCTION_9
0x40026f0	      0x4889442448	             mov qword [rsp + 0x48], rax	      1067	mprintf.c	FUNCTION_9
0x40026f5	            0x31c0	                            xor eax, eax	      1067	mprintf.c	FUNCTION_9
0x40026f7	    0x488d84241001	                  lea rax, [rsp + 0x110]	      1077	mprintf.c	FUNCTION_9	CALL_1
0x40026ff	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1078	mprintf.c	FUNCTION_9	CALL_2
0x4002704	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1078	mprintf.c	FUNCTION_9	CALL_2
0x4002709	    0x488d3560d9ff	            lea rsi, sym.alloc_addbyter 	      1078	mprintf.c	FUNCTION_9	CALL_2
0x4002710	          0x4c89d2	                            mov rdx, r10	      1078	mprintf.c	FUNCTION_9	CALL_2
0x4002713	      0x4889442438	             mov qword [rsp + 0x38], rax	      1077	mprintf.c	FUNCTION_9	CALL_1
0x4002718	      0x488d442450	                   lea rax, [rsp + 0x50]	      1077	mprintf.c	FUNCTION_9	CALL_1
0x400271d	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1072	mprintf.c	FUNCTION_9
0x4002726	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1073	mprintf.c	FUNCTION_9
0x400272f	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1074	mprintf.c	FUNCTION_9
0x4002738	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1075	mprintf.c	FUNCTION_9
0x4002740	    0xc74424300800	               mov dword [rsp + 0x30], 8	      1077	mprintf.c	FUNCTION_9	CALL_1
0x4002748	    0xc74424343000	           mov dword [rsp + 0x34], 0x30 	      1077	mprintf.c	FUNCTION_9	CALL_1
0x4002750	      0x4889442440	             mov qword [rsp + 0x40], rax	      1077	mprintf.c	FUNCTION_9	CALL_1
0x4002755	      0xe8e6e2ffff	                call sym.dprintf_formatf	      1078	mprintf.c	FUNCTION_9	CALL_2
0x400275a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1080	mprintf.c	FUNCTION_9	IF_1
0x400275d	            0x7441	                            je 0x40027a0	      1080	mprintf.c	FUNCTION_9	IF_1
0x400275f	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1080	mprintf.c	FUNCTION_9	IF_1
0x4002763	            0x85c0	                           test eax, eax	      1080	mprintf.c	FUNCTION_9	IF_1
0x4002765	            0x7539	                           jne 0x40027a0	      1080	mprintf.c	FUNCTION_9	IF_1
0x4002767	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1085	mprintf.c	FUNCTION_9	IF_3
0x400276d	            0x7459	                            je 0x40027c8	      1085	mprintf.c	FUNCTION_9	IF_3
0x400276f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1086	mprintf.c	FUNCTION_9	IF_3
0x4002774	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1086	mprintf.c	FUNCTION_9	IF_3
0x4002779	        0xc6040200	                 mov byte [rdx + rax], 0	      1086	mprintf.c	FUNCTION_9	IF_3
0x400277d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1087	mprintf.c	FUNCTION_9	IF_3
0x4002782	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1090	mprintf.c	FUNCTION_9
0x4002787	    0x644833342528	                xor rsi, qword fs:[0x28]	      1090	mprintf.c	FUNCTION_9
0x4002790	            0x7548	                           jne 0x40027da	      1090	mprintf.c	FUNCTION_9
0x4002792	    0x4881c4080100	                          add rsp, 0x108	      1090	mprintf.c	FUNCTION_9
0x4002799	              0xc3	                                     ret	      1090	mprintf.c	FUNCTION_9
0x400279a	    0x660f1f440000	                    nop word [rax + rax]	      1090	mprintf.c	FUNCTION_9
0x40027a0	            0x31c0	                            xor eax, eax	      1083	mprintf.c	FUNCTION_9	IF_1
0x40027a2	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1081	mprintf.c	FUNCTION_9	IF_1	IF_2
0x40027a8	            0x74d8	                            je 0x4002782	      1081	mprintf.c	FUNCTION_9	IF_1	IF_2
0x40027aa	    0x488b15000000	            mov rdx, qword [0x040027b1] 	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027b1	      0x4889442408	                mov qword [rsp + 8], rax	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027b6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027bb	            0xff12	                        call qword [rdx]	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027bd	      0x488b442408	                mov rax, qword [rsp + 8]	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027c2	            0xebbe	                           jmp 0x4002782	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027c4	         0xf1f4000	                         nop dword [rax]	      1082	mprintf.c	FUNCTION_9	IF_1	CALL_4
0x40027c8	    0x488b05000000	            mov rax, qword [0x040027cf] 	      1089	mprintf.c	FUNCTION_9	CALL_5
0x40027cf	    0x488d3d000000	                   lea rdi, [0x040027d6]	      1089	mprintf.c	FUNCTION_9	CALL_5
0x40027d6	            0xff10	                        call qword [rax]	      1089	mprintf.c	FUNCTION_9	CALL_5
0x40027d8	            0xeba8	                           jmp 0x4002782	      1089	mprintf.c	FUNCTION_9	CALL_5
0x40027da	      0xe800000000	                          call 0x40027df	      1090	mprintf.c	FUNCTION_9
curl_msprintf	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	36
0x40028b0	    0x4881ece80000	                           sub rsp, 0xe8	      1126	mprintf.c	FUNCTION_12
0x40028b7	            0x84c0	                             test al, al	      1126	mprintf.c	FUNCTION_12
0x40028b9	      0x48897c2408	                mov qword [rsp + 8], rdi	      1126	mprintf.c	FUNCTION_12
0x40028be	      0x4889542440	             mov qword [rsp + 0x40], rdx	      1126	mprintf.c	FUNCTION_12
0x40028c3	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      1126	mprintf.c	FUNCTION_12
0x40028c8	      0x4c89442450	              mov qword [rsp + 0x50], r8	      1126	mprintf.c	FUNCTION_12
0x40028cd	      0x4c894c2458	              mov qword [rsp + 0x58], r9	      1126	mprintf.c	FUNCTION_12
0x40028d2	            0x743a	                            je 0x400290e	      1126	mprintf.c	FUNCTION_12
0x40028d4	       0xf29442460	       movaps xmmword [rsp + 0x60], xmm0	      1126	mprintf.c	FUNCTION_12
0x40028d9	       0xf294c2470	       movaps xmmword [rsp + 0x70], xmm1	      1126	mprintf.c	FUNCTION_12
0x40028de	     0xf2994248000	       movaps xmmword [rsp + 0x80], xmm2	      1126	mprintf.c	FUNCTION_12
0x40028e6	     0xf299c249000	       movaps xmmword [rsp + 0x90], xmm3	      1126	mprintf.c	FUNCTION_12
0x40028ee	     0xf29a424a000	       movaps xmmword [rsp + 0xa0], xmm4	      1126	mprintf.c	FUNCTION_12
0x40028f6	     0xf29ac24b000	       movaps xmmword [rsp + 0xb0], xmm5	      1126	mprintf.c	FUNCTION_12
0x40028fe	     0xf29b424c000	       movaps xmmword [rsp + 0xc0], xmm6	      1126	mprintf.c	FUNCTION_12
0x4002906	     0xf29bc24d000	       movaps xmmword [rsp + 0xd0], xmm7	      1126	mprintf.c	FUNCTION_12
0x400290e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1126	mprintf.c	FUNCTION_12
0x4002917	      0x4889442428	             mov qword [rsp + 0x28], rax	      1126	mprintf.c	FUNCTION_12
0x400291c	            0x31c0	                            xor eax, eax	      1126	mprintf.c	FUNCTION_12
0x400291e	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	      1129	mprintf.c	FUNCTION_12	CALL_1
0x4002926	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1130	mprintf.c	FUNCTION_12	CALL_2
0x400292b	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1130	mprintf.c	FUNCTION_12	CALL_2
0x4002930	      0x4889442418	             mov qword [rsp + 0x18], rax	      1129	mprintf.c	FUNCTION_12	CALL_1
0x4002935	      0x488d442430	                   lea rax, [rsp + 0x30]	      1129	mprintf.c	FUNCTION_12	CALL_1
0x400293a	    0xc74424101000	           mov dword [rsp + 0x10], 0x10 	      1129	mprintf.c	FUNCTION_12	CALL_1
0x4002942	    0xc74424143000	           mov dword [rsp + 0x14], 0x30 	      1129	mprintf.c	FUNCTION_12	CALL_1
0x400294a	      0x4889442420	             mov qword [rsp + 0x20], rax	      1129	mprintf.c	FUNCTION_12	CALL_1
0x400294f	      0xe87cefffff	    call sym.dprintf_formatf.constprop.1	      1130	mprintf.c	FUNCTION_12	CALL_2
0x4002954	      0x488b542408	                mov rdx, qword [rsp + 8]	      1132	mprintf.c	FUNCTION_12
0x4002959	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1134	mprintf.c	FUNCTION_12
0x400295e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1134	mprintf.c	FUNCTION_12
0x4002967	          0xc60200	                       mov byte [rdx], 0	      1132	mprintf.c	FUNCTION_12
0x400296a	            0x7508	                           jne 0x4002974	      1134	mprintf.c	FUNCTION_12
0x400296c	    0x4881c4e80000	                           add rsp, 0xe8	      1134	mprintf.c	FUNCTION_12
0x4002973	              0xc3	                                     ret	      1134	mprintf.c	FUNCTION_12
0x4002974	      0xe800000000	                          call 0x4002979	      1134	mprintf.c	FUNCTION_12
curl_msnprintf	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	31
0x4000990	    0x4881ecd80000	                           sub rsp, 0xd8	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x4000997	            0x84c0	                             test al, al	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x4000999	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x400099e	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009a3	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009a8	            0x7437	                            je 0x40009e1	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009aa	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009af	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009b4	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009b9	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009c1	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009c9	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009d1	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009d9	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009ea	      0x4889442418	             mov qword [rsp + 0x18], rax	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009ef	            0x31c0	                            xor eax, eax	      1019	mprintf.c	ELSE_1	FUNCTION_7
0x40009f1	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x40009f9	          0x4889e1	                            mov rcx, rsp	      1023	mprintf.c	ELSE_1	FUNCTION_7	CALL_2
0x40009fc	      0x4889442408	                mov qword [rsp + 8], rax	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x4000a01	      0x488d442420	                   lea rax, [rsp + 0x20]	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x4000a06	    0xc70424180000	                   mov dword [rsp], 0x18	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x4000a0d	    0xc74424043000	               mov dword [rsp + 4], 0x30	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x4000a15	      0x4889442410	             mov qword [rsp + 0x10], rax	      1022	mprintf.c	ELSE_1	FUNCTION_7	CALL_1
0x4000a1a	      0xe800000000	                          call 0x4000a1f	      1023	mprintf.c	ELSE_1	FUNCTION_7	CALL_2
0x4000a1f	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1026	mprintf.c	ELSE_1	FUNCTION_7
0x4000a24	    0x644833142528	                xor rdx, qword fs:[0x28]	      1026	mprintf.c	ELSE_1	FUNCTION_7
0x4000a2d	            0x7508	                           jne 0x4000a37	      1026	mprintf.c	ELSE_1	FUNCTION_7
0x4000a2f	    0x4881c4d80000	                           add rsp, 0xd8	      1026	mprintf.c	ELSE_1	FUNCTION_7
0x4000a36	              0xc3	                                     ret	      1026	mprintf.c	ELSE_1	FUNCTION_7
0x4000a37	      0xe800000000	                          call 0x4000a3c	      1026	mprintf.c	ELSE_1	FUNCTION_7
curl_mfprintf	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	34
0x4002a50	    0x4881ecd80000	                           sub rsp, 0xd8	      1148	mprintf.c	FUNCTION_14
0x4002a57	            0x84c0	                             test al, al	      1148	mprintf.c	FUNCTION_14
0x4002a59	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1148	mprintf.c	FUNCTION_14
0x4002a5e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      1148	mprintf.c	FUNCTION_14
0x4002a63	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1148	mprintf.c	FUNCTION_14
0x4002a68	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1148	mprintf.c	FUNCTION_14
0x4002a6d	            0x7437	                            je 0x4002aa6	      1148	mprintf.c	FUNCTION_14
0x4002a6f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      1148	mprintf.c	FUNCTION_14
0x4002a74	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      1148	mprintf.c	FUNCTION_14
0x4002a79	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      1148	mprintf.c	FUNCTION_14
0x4002a7e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      1148	mprintf.c	FUNCTION_14
0x4002a86	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      1148	mprintf.c	FUNCTION_14
0x4002a8e	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      1148	mprintf.c	FUNCTION_14
0x4002a96	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      1148	mprintf.c	FUNCTION_14
0x4002a9e	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      1148	mprintf.c	FUNCTION_14
0x4002aa6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1148	mprintf.c	FUNCTION_14
0x4002aaf	      0x4889442418	             mov qword [rsp + 0x18], rax	      1148	mprintf.c	FUNCTION_14
0x4002ab4	            0x31c0	                            xor eax, eax	      1148	mprintf.c	FUNCTION_14
0x4002ab6	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002abe	          0x4889f2	                            mov rdx, rsi	      1152	mprintf.c	FUNCTION_14	CALL_2
0x4002ac1	          0x4889e1	                            mov rcx, rsp	      1152	mprintf.c	FUNCTION_14	CALL_2
0x4002ac4	    0x488b35000000	            mov rsi, qword [0x04002acb] 	      1152	mprintf.c	FUNCTION_14	CALL_2
0x4002acb	      0x4889442408	                mov qword [rsp + 8], rax	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002ad0	      0x488d442420	                   lea rax, [rsp + 0x20]	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002ad5	    0xc70424100000	                   mov dword [rsp], 0x10	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002adc	    0xc74424043000	               mov dword [rsp + 4], 0x30	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002ae4	      0x4889442410	             mov qword [rsp + 0x10], rax	      1151	mprintf.c	FUNCTION_14	CALL_1
0x4002ae9	      0xe852dfffff	                call sym.dprintf_formatf	      1152	mprintf.c	FUNCTION_14	CALL_2
0x4002aee	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1155	mprintf.c	FUNCTION_14
0x4002af3	    0x644833142528	                xor rdx, qword fs:[0x28]	      1155	mprintf.c	FUNCTION_14
0x4002afc	            0x7508	                           jne 0x4002b06	      1155	mprintf.c	FUNCTION_14
0x4002afe	    0x4881c4d80000	                           add rsp, 0xd8	      1155	mprintf.c	FUNCTION_14
0x4002b05	              0xc3	                                     ret	      1155	mprintf.c	FUNCTION_14
0x4002b06	      0xe800000000	                          call 0x4002b0b	      1155	mprintf.c	FUNCTION_14
addbyter	CALL,0:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,1	12
0x4000040	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       986	mprintf.c	FUNCTION_5	IF_1
0x4000044	        0x48394608	                cmp qword [rsi + 8], rax	       986	mprintf.c	FUNCTION_5	IF_1
0x4000048	            0x7316	                           jae 0x4000060	       986	mprintf.c	FUNCTION_5	IF_1
0x400004a	          0x488b06	                    mov rax, qword [rsi]	       988	mprintf.c	FUNCTION_5	IF_1
0x400004d	          0x408838	                     mov byte [rax], dil	       988	mprintf.c	FUNCTION_5	IF_1
0x4000050	        0x400fb6c7	                          movzx eax, dil	       988	mprintf.c	FUNCTION_5	IF_1
0x4000054	        0x48830601	                      add qword [rsi], 1	       989	mprintf.c	FUNCTION_5	IF_1
0x4000058	      0x4883460801	                  add qword [rsi + 8], 1	       990	mprintf.c	FUNCTION_5	IF_1
0x400005d	              0xc3	                                     ret	       991	mprintf.c	FUNCTION_5	IF_1
0x400005e	            0x6690	                                     nop	       991	mprintf.c	FUNCTION_5	IF_1
0x4000060	      0xb8ffffffff	                     mov eax, 0xffffffff	       993	mprintf.c	FUNCTION_5
0x4000065	              0xc3	                                     ret	       994	mprintf.c	FUNCTION_5
curl_mvaprintf	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,3	45
0x40027e0	        0x4883ec48	                           sub rsp, 0x48	      1093	mprintf.c	FUNCTION_10
0x40027e4	          0x4889fa	                            mov rdx, rdi	      1093	mprintf.c	FUNCTION_10
0x40027e7	          0x4889f1	                            mov rcx, rsi	      1093	mprintf.c	FUNCTION_10
0x40027ea	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1102	mprintf.c	FUNCTION_10	CALL_1
0x40027ef	    0x488d357ad8ff	            lea rsi, sym.alloc_addbyter 	      1102	mprintf.c	FUNCTION_10	CALL_1
0x40027f6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1097	mprintf.c	FUNCTION_10
0x40027ff	    0x64488b042528	                mov rax, qword fs:[0x28]	      1093	mprintf.c	FUNCTION_10
0x4002808	      0x4889442438	             mov qword [rsp + 0x38], rax	      1093	mprintf.c	FUNCTION_10
0x400280d	            0x31c0	                            xor eax, eax	      1093	mprintf.c	FUNCTION_10
0x400280f	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1098	mprintf.c	FUNCTION_10
0x4002818	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1099	mprintf.c	FUNCTION_10
0x4002821	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1100	mprintf.c	FUNCTION_10
0x4002829	      0xe812e2ffff	                call sym.dprintf_formatf	      1102	mprintf.c	FUNCTION_10	CALL_1
0x400282e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1103	mprintf.c	FUNCTION_10	IF_1
0x4002831	            0x743d	                            je 0x4002870	      1103	mprintf.c	FUNCTION_10	IF_1
0x4002833	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1103	mprintf.c	FUNCTION_10	IF_1
0x4002837	            0x85c0	                           test eax, eax	      1103	mprintf.c	FUNCTION_10	IF_1
0x4002839	            0x7535	                           jne 0x4002870	      1103	mprintf.c	FUNCTION_10	IF_1
0x400283b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1109	mprintf.c	FUNCTION_10	IF_3
0x4002841	            0x7455	                            je 0x4002898	      1109	mprintf.c	FUNCTION_10	IF_3
0x4002843	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1110	mprintf.c	FUNCTION_10	IF_3
0x4002848	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1110	mprintf.c	FUNCTION_10	IF_3
0x400284d	        0xc6040200	                 mov byte [rdx + rax], 0	      1110	mprintf.c	FUNCTION_10	IF_3
0x4002851	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1111	mprintf.c	FUNCTION_10	IF_3
0x4002856	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1114	mprintf.c	FUNCTION_10
0x400285b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1114	mprintf.c	FUNCTION_10
0x4002864	            0x7544	                           jne 0x40028aa	      1114	mprintf.c	FUNCTION_10
0x4002866	        0x4883c448	                           add rsp, 0x48	      1114	mprintf.c	FUNCTION_10
0x400286a	              0xc3	                                     ret	      1114	mprintf.c	FUNCTION_10
0x400286b	       0xf1f440000	                   nop dword [rax + rax]	      1114	mprintf.c	FUNCTION_10
0x4002870	            0x31c0	                            xor eax, eax	      1106	mprintf.c	FUNCTION_10	IF_1
0x4002872	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1104	mprintf.c	FUNCTION_10	IF_1	IF_2
0x4002878	            0x74dc	                            je 0x4002856	      1104	mprintf.c	FUNCTION_10	IF_1	IF_2
0x400287a	    0x488b15000000	            mov rdx, qword [0x04002881] 	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x4002881	      0x4889442408	                mov qword [rsp + 8], rax	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x4002886	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x400288b	            0xff12	                        call qword [rdx]	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x400288d	      0x488b442408	                mov rax, qword [rsp + 8]	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x4002892	            0xebc2	                           jmp 0x4002856	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x4002894	         0xf1f4000	                         nop dword [rax]	      1105	mprintf.c	FUNCTION_10	IF_1	CALL_2
0x4002898	    0x488b05000000	            mov rax, qword [0x0400289f] 	      1113	mprintf.c	FUNCTION_10	CALL_3
0x400289f	    0x488d3d000000	                   lea rdi, [0x040028a6]	      1113	mprintf.c	FUNCTION_10	CALL_3
0x40028a6	            0xff10	                        call qword [rax]	      1113	mprintf.c	FUNCTION_10	CALL_3
0x40028a8	            0xebac	                           jmp 0x4002856	      1113	mprintf.c	FUNCTION_10	CALL_3
0x40028aa	      0xe800000000	                          call 0x40028af	      1114	mprintf.c	FUNCTION_10
curl_mvsprintf	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	8
0x4002b10	        0x4883ec18	                           sub rsp, 0x18	      1158	mprintf.c	FUNCTION_15
0x4002b14	      0x48897c2408	                mov qword [rsp + 8], rdi	      1158	mprintf.c	FUNCTION_15
0x4002b19	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1160	mprintf.c	FUNCTION_15	CALL_1
0x4002b1e	      0xe8adedffff	    call sym.dprintf_formatf.constprop.1	      1160	mprintf.c	FUNCTION_15	CALL_1
0x4002b23	      0x488b542408	                mov rdx, qword [rsp + 8]	      1161	mprintf.c	FUNCTION_15
0x4002b28	          0xc60200	                       mov byte [rdx], 0	      1161	mprintf.c	FUNCTION_15
0x4002b2b	        0x4883c418	                           add rsp, 0x18	      1163	mprintf.c	FUNCTION_15
0x4002b2f	              0xc3	                                     ret	      1163	mprintf.c	FUNCTION_15
curl_mprintf	CALL,3:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	37
0x4002980	    0x4881ecd80000	                           sub rsp, 0xd8	      1137	mprintf.c	FUNCTION_13
0x4002987	            0x84c0	                             test al, al	      1137	mprintf.c	FUNCTION_13
0x4002989	      0x4889742428	             mov qword [rsp + 0x28], rsi	      1137	mprintf.c	FUNCTION_13
0x400298e	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1137	mprintf.c	FUNCTION_13
0x4002993	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      1137	mprintf.c	FUNCTION_13
0x4002998	      0x4c89442440	              mov qword [rsp + 0x40], r8	      1137	mprintf.c	FUNCTION_13
0x400299d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1137	mprintf.c	FUNCTION_13
0x40029a2	            0x7437	                            je 0x40029db	      1137	mprintf.c	FUNCTION_13
0x40029a4	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	      1137	mprintf.c	FUNCTION_13
0x40029a9	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	      1137	mprintf.c	FUNCTION_13
0x40029ae	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	      1137	mprintf.c	FUNCTION_13
0x40029b3	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	      1137	mprintf.c	FUNCTION_13
0x40029bb	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	      1137	mprintf.c	FUNCTION_13
0x40029c3	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	      1137	mprintf.c	FUNCTION_13
0x40029cb	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	      1137	mprintf.c	FUNCTION_13
0x40029d3	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	      1137	mprintf.c	FUNCTION_13
0x40029db	    0x64488b042528	                mov rax, qword fs:[0x28]	      1137	mprintf.c	FUNCTION_13
0x40029e4	      0x4889442418	             mov qword [rsp + 0x18], rax	      1137	mprintf.c	FUNCTION_13
0x40029e9	            0x31c0	                            xor eax, eax	      1137	mprintf.c	FUNCTION_13
0x40029eb	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1140	mprintf.c	FUNCTION_13	CALL_1
0x40029f3	          0x4889fa	                            mov rdx, rdi	      1142	mprintf.c	FUNCTION_13	CALL_2
0x40029f6	          0x4889e1	                            mov rcx, rsp	      1142	mprintf.c	FUNCTION_13	CALL_2
0x40029f9	      0x4889442408	                mov qword [rsp + 8], rax	      1140	mprintf.c	FUNCTION_13	CALL_1
0x40029fe	      0x488d442420	                   lea rax, [rsp + 0x20]	      1140	mprintf.c	FUNCTION_13	CALL_1
0x4002a03	    0x488b35000000	            mov rsi, qword [0x04002a0a] 	      1142	mprintf.c	FUNCTION_13	CALL_2
0x4002a0a	    0xc70424080000	                      mov dword [rsp], 8	      1140	mprintf.c	FUNCTION_13	CALL_1
0x4002a11	    0xc74424043000	               mov dword [rsp + 4], 0x30	      1140	mprintf.c	FUNCTION_13	CALL_1
0x4002a19	      0x4889442410	             mov qword [rsp + 0x10], rax	      1140	mprintf.c	FUNCTION_13	CALL_1
0x4002a1e	    0x488b05000000	            mov rax, qword [0x04002a25] 	      1142	mprintf.c	FUNCTION_13	CALL_2
0x4002a25	          0x488b38	                    mov rdi, qword [rax]	      1142	mprintf.c	FUNCTION_13	CALL_2
0x4002a28	      0xe813e0ffff	                call sym.dprintf_formatf	      1142	mprintf.c	FUNCTION_13	CALL_2
0x4002a2d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1145	mprintf.c	FUNCTION_13
0x4002a32	    0x644833142528	                xor rdx, qword fs:[0x28]	      1145	mprintf.c	FUNCTION_13
0x4002a3b	            0x7508	                           jne 0x4002a45	      1145	mprintf.c	FUNCTION_13
0x4002a3d	    0x4881c4d80000	                           add rsp, 0xd8	      1145	mprintf.c	FUNCTION_13
0x4002a44	              0xc3	                                     ret	      1145	mprintf.c	FUNCTION_13
0x4002a45	      0xe800000000	                          call 0x4002a4a	      1145	mprintf.c	FUNCTION_13
curl_mvprintf	CALL,1:functions,0:ELSE,0:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,0	6
0x4002b30	    0x488b05000000	            mov rax, qword [0x04002b37] 	      1167	mprintf.c	FUNCTION_16	CALL_1
0x4002b37	          0x4889fa	                            mov rdx, rdi	      1166	mprintf.c	FUNCTION_16
0x4002b3a	          0x4889f1	                            mov rcx, rsi	      1166	mprintf.c	FUNCTION_16
0x4002b3d	    0x488b35000000	            mov rsi, qword [0x04002b44] 	      1167	mprintf.c	FUNCTION_16	CALL_1
0x4002b44	          0x488b38	                    mov rdi, qword [rax]	      1167	mprintf.c	FUNCTION_16	CALL_1
0x4002b47	      0xe9f4deffff	                 jmp sym.dprintf_formatf	      1167	mprintf.c	FUNCTION_16	CALL_1
curl_mvsnprintf	CALL,1:functions,0:ELSE,1:SWITCH,0:FOR,0:WHILE,0:DO,0:IF,2	28
0x4001850	        0x4883ec28	                           sub rsp, 0x28	       998	mprintf.c	FUNCTION_6
0x4001854	      0x4889742410	             mov qword [rsp + 0x10], rsi	      1004	mprintf.c	FUNCTION_6
0x4001859	    0x488d35e0e7ff	                   lea rsi, sym.addbyter	      1006	mprintf.c	FUNCTION_6	CALL_1
0x4001860	        0x48893c24	                    mov qword [rsp], rdi	      1002	mprintf.c	FUNCTION_6
0x4001864	          0x4889e7	                            mov rdi, rsp	      1006	mprintf.c	FUNCTION_6	CALL_1
0x4001867	    0x48c744240800	                  mov qword [rsp + 8], 0	      1003	mprintf.c	FUNCTION_6
0x4001870	    0x64488b042528	                mov rax, qword fs:[0x28]	       998	mprintf.c	FUNCTION_6
0x4001879	      0x4889442418	             mov qword [rsp + 0x18], rax	       998	mprintf.c	FUNCTION_6
0x400187e	            0x31c0	                            xor eax, eax	       998	mprintf.c	FUNCTION_6
0x4001880	      0xe8bbf1ffff	                call sym.dprintf_formatf	      1006	mprintf.c	FUNCTION_6	CALL_1
0x4001885	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1007	mprintf.c	FUNCTION_6	IF_1
0x4001888	            0x7418	                            je 0x40018a2	      1007	mprintf.c	FUNCTION_6	IF_1
0x400188a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1007	mprintf.c	FUNCTION_6	IF_1
0x400188f	          0x4885d2	                           test rdx, rdx	      1007	mprintf.c	FUNCTION_6	IF_1
0x4001892	            0x740e	                            je 0x40018a2	      1007	mprintf.c	FUNCTION_6	IF_1
0x4001894	      0x483b542408	                cmp rdx, qword [rsp + 8]	      1009	mprintf.c	FUNCTION_6	IF_1	IF_2
0x4001899	        0x488b1424	                    mov rdx, qword [rsp]	      1011	mprintf.c	FUNCTION_6	IF_1	IF_2
0x400189d	            0x7421	                            je 0x40018c0	      1009	mprintf.c	FUNCTION_6	IF_1	IF_2
0x400189f	          0xc60200	                       mov byte [rdx], 0	      1013	mprintf.c	FUNCTION_6	IF_1	ELSE_1
0x40018a2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018b0	            0x7514	                           jne 0x40018c6	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018b2	        0x4883c428	                           add rsp, 0x28	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018b6	              0xc3	                                     ret	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018b7	    0x660f1f840000	                    nop word [rax + rax]	      1016	mprintf.c	FUNCTION_6	ELSE_1
0x40018c0	        0xc642ff00	                   mov byte [rdx - 1], 0	      1011	mprintf.c	FUNCTION_6	IF_1	IF_2
0x40018c4	            0xebdc	                           jmp 0x40018a2	      1011	mprintf.c	FUNCTION_6	IF_1	IF_2
0x40018c6	      0xe800000000	                          call 0x40018cb	      1016	mprintf.c	FUNCTION_6	ELSE_1
