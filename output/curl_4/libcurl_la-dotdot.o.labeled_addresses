Curl_dedotdotify	functions,0:ELSE,7:SWITCH,0:CALL,17:DO,2:IF,14:WHILE,2:FOR,0	181
0x4000040	            0x4155	                                push r13	        54	dotdot.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        54	dotdot.c	FUNCTION_1
0x4000044	              0x55	                                push rbp	        54	dotdot.c	FUNCTION_1
0x4000045	              0x53	                                push rbx	        54	dotdot.c	FUNCTION_1
0x4000046	          0x4889fb	                            mov rbx, rdi	        54	dotdot.c	FUNCTION_1
0x4000049	        0x4883ec08	                              sub rsp, 8	        54	dotdot.c	FUNCTION_1
0x400004d	      0xe800000000	                          call 0x4000052	        55	dotdot.c	FUNCTION_1	CALL_1
0x4000052	        0x488d7801	                      lea rdi, [rax + 1]	        58	dotdot.c	FUNCTION_1	CALL_2
0x4000056	    0x488b05000000	            mov rax, qword [0x0400005d] 	        58	dotdot.c	FUNCTION_1	CALL_2
0x400005d	            0xff10	                        call qword [rax]	        58	dotdot.c	FUNCTION_1	CALL_2
0x400005f	          0x4885c0	                           test rax, rax	        62	dotdot.c	FUNCTION_1	IF_1
0x4000062	     0xf8425020000	                            je 0x400028d	        62	dotdot.c	FUNCTION_1	IF_1
0x4000068	          0x4889c5	                            mov rbp, rax	        62	dotdot.c	FUNCTION_1	IF_1
0x400006b	    0x488b05000000	            mov rax, qword [0x04000072] 	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000072	          0x4889df	                            mov rdi, rbx	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000075	            0xff10	                        call qword [rax]	        66	dotdot.c	FUNCTION_1	CALL_3
0x4000077	          0x4885c0	                           test rax, rax	        67	dotdot.c	FUNCTION_1	IF_2
0x400007a	          0x4989c4	                            mov r12, rax	        66	dotdot.c	FUNCTION_1	CALL_3
0x400007d	     0xf8425020000	                            je 0x40002a8	        67	dotdot.c	FUNCTION_1	IF_2
0x4000083	          0x803800	                       cmp byte [rax], 0	        74	dotdot.c	FUNCTION_1	IF_3
0x4000086	     0xf84d4010000	                            je 0x4000260	        74	dotdot.c	FUNCTION_1	IF_3
0x400008c	      0xbe3f000000	                           mov esi, 0x3f	        85	dotdot.c	FUNCTION_1	CALL_6
0x4000091	          0x4889c7	                            mov rdi, rax	        85	dotdot.c	FUNCTION_1	CALL_6
0x4000094	      0xe800000000	                          call 0x4000099	        85	dotdot.c	FUNCTION_1	CALL_6
0x4000099	          0x4885c0	                           test rax, rax	        86	dotdot.c	FUNCTION_1	IF_4
0x400009c	            0x7403	                            je 0x40000a1	        86	dotdot.c	FUNCTION_1	IF_4
0x400009e	          0xc60000	                       mov byte [rax], 0	        87	dotdot.c	FUNCTION_1	IF_4
0x40000a1	          0x4989ed	                            mov r13, rbp	        54	dotdot.c	FUNCTION_1
0x40000a4	          0x4c89e2	                            mov rdx, r12	        54	dotdot.c	FUNCTION_1
0x40000a7	    0x4c8d0d000000	                    lea r9, [0x040000ae]	        54	dotdot.c	FUNCTION_1
0x40000ae	            0xeb1c	                           jmp 0x40000cc	        54	dotdot.c	FUNCTION_1
0x40000b0	    0x488d35000000	                   lea rsi, [0x040000b7]	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000b7	      0xb903000000	                              mov ecx, 3	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000bc	          0x4889d7	                            mov rdi, rdx	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000c1	            0x755d	                           jne 0x4000120	        98	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6	CALL_8
0x40000c3	        0x4883c203	                              add rdx, 3	        99	dotdot.c	FUNCTION_1	DO_1	ELSE_1	IF_6
0x40000c7	          0x803a00	                       cmp byte [rdx], 0	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40000ca	            0x7418	                            je 0x40000e4	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40000cc	      0xb902000000	                              mov ecx, 2	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000d1	          0x4c89ce	                             mov rsi, r9	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000d4	          0x4889d7	                            mov rdi, rdx	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000d7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000d9	            0x75d5	                           jne 0x40000b0	        94	dotdot.c	FUNCTION_1	DO_1	IF_5	CALL_7
0x40000db	        0x4883c202	                              add rdx, 2	       107	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7
0x40000df	          0x803a00	                       cmp byte [rdx], 0	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40000e2	            0x75e8	                           jne 0x40000cc	       166	dotdot.c	FUNCTION_1	WHILE_2
0x40000e4	          0x4885c0	                           test rax, rax	       168	dotdot.c	FUNCTION_1	IF_14
0x40000e7	            0x741d	                            je 0x4000106	       168	dotdot.c	FUNCTION_1	IF_14
0x40000e9	          0x4c29e0	                            sub rax, r12	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40000ec	          0x4801c3	                            add rbx, rax	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40000ef	          0x4889df	                            mov rdi, rbx	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40000f2	      0xe800000000	                          call 0x40000f7	       174	dotdot.c	FUNCTION_1	IF_14	CALL_15
0x40000f7	        0x488d5001	                      lea rdx, [rax + 1]	        53	string3.h	FUNCTION_2	CALL_3
0x40000fb	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_2	CALL_3
0x40000fe	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_2	CALL_3
0x4000101	      0xe800000000	                          call 0x4000106	        53	string3.h	FUNCTION_2	CALL_3
0x4000106	    0x488b05000000	            mov rax, qword [0x0400010d] 	       178	dotdot.c	FUNCTION_1	CALL_17
0x400010d	          0x4c89e7	                            mov rdi, r12	       178	dotdot.c	FUNCTION_1	CALL_17
0x4000110	            0xff10	                        call qword [rax]	       178	dotdot.c	FUNCTION_1	CALL_17
0x4000112	          0x4889e8	                            mov rax, rbp	       179	dotdot.c	FUNCTION_1
0x4000115	        0x4883c408	                              add rsp, 8	       180	dotdot.c	FUNCTION_1
0x4000119	              0x5b	                                 pop rbx	       180	dotdot.c	FUNCTION_1
0x400011a	              0x5d	                                 pop rbp	       180	dotdot.c	FUNCTION_1
0x400011b	            0x415c	                                 pop r12	       180	dotdot.c	FUNCTION_1
0x400011d	            0x415d	                                 pop r13	       180	dotdot.c	FUNCTION_1
0x400011f	              0xc3	                                     ret	       180	dotdot.c	FUNCTION_1
0x4000120	    0x488d35000000	                   lea rsi, [0x04000127]	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000127	      0xb903000000	                              mov ecx, 3	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x400012c	          0x4889d7	                            mov rdi, rdx	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x400012f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000131	            0x74a8	                            je 0x40000db	       106	dotdot.c	FUNCTION_1	DO_1	ELSE_2	IF_7	CALL_9
0x4000133	        0x440fb602	                   movzx r8d, byte [rdx]	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000137	        0x4183f82f	                           cmp r8d, 0x2f	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400013b	            0x7523	                           jne 0x4000160	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x400013d	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000141	            0x756d	                           jne 0x40001b0	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000143	        0x807a0200	                   cmp byte [rdx + 2], 0	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000147	            0x7567	                           jne 0x40001b0	       110	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8	CALL_10
0x4000149	        0xc642012f	                mov byte [rdx + 1], 0x2f	       111	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x400014d	        0x4883c201	                              add rdx, 1	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000151	      0xe971ffffff	                           jmp 0x40000c7	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       112	dotdot.c	FUNCTION_1	DO_1	ELSE_3	IF_8
0x4000160	    0x488d35000000	                   lea rsi, [0x04000167]	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x4000167	      0xb904000000	                              mov ecx, 4	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x400016c	          0x4889d7	                            mov rdi, rdx	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x400016f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x4000171	     0xf85c9000000	                           jne 0x4000240	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x4000177	        0x4883c203	                              add rdx, 3	       122	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x400017b	          0x4939ed	                            cmp r13, rbp	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x400017e	            0x7625	                           jbe 0x40001a5	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000180	      0x41807dff2f	                cmp byte [r13 - 1], 0x2f	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x4000185	        0x498d4dff	                      lea rcx, [r13 - 1]	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000189	            0x7512	                           jne 0x400019d	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x400018b	      0xe9f0000000	                           jmp 0x4000280	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x4000190	        0x4883e901	                              sub rcx, 1	       126	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x4000194	          0x80392f	                    cmp byte [rcx], 0x2f	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x4000197	     0xf84e3000000	                            je 0x4000280	       127	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	IF_10
0x400019d	          0x4839cd	                            cmp rbp, rcx	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001a0	            0x75ee	                           jne 0x4000190	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001a2	          0x4989ed	                            mov r13, rbp	       125	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9
0x40001a5	      0x41c6450000	                       mov byte [r13], 0	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001aa	      0xe918ffffff	                           jmp 0x40000c7	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001af	              0x90	                                     nop	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001b0	    0x488d35000000	                   lea rsi, [0x040001b7]	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40001b7	      0xb904000000	                              mov ecx, 4	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40001bc	          0x4889d7	                            mov rdi, rdx	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40001bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40001c1	            0x74b4	                            je 0x4000177	       121	dotdot.c	FUNCTION_1	DO_1	ELSE_4	IF_9	CALL_11
0x40001c3	        0x807a012e	                cmp byte [rdx + 1], 0x2e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001c7	            0x7550	                           jne 0x4000219	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001c9	        0x807a022e	                cmp byte [rdx + 2], 0x2e	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001cd	            0x754a	                           jne 0x4000219	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001cf	        0x807a0300	                   cmp byte [rdx + 3], 0	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001d3	            0x7544	                           jne 0x4000219	       132	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	CALL_12
0x40001d5	        0xc642022f	                mov byte [rdx + 2], 0x2f	       133	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001d9	        0x4883c202	                              add rdx, 2	       134	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x40001dd	          0x4939ed	                            cmp r13, rbp	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001e0	            0x76c3	                           jbe 0x40001a5	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001e2	      0x41807dff2f	                cmp byte [r13 - 1], 0x2f	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001e7	        0x498d4dff	                      lea rcx, [r13 - 1]	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001eb	            0x7514	                           jne 0x4000201	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001ed	      0xe98e000000	                           jmp 0x4000280	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001f2	    0x660f1f440000	                    nop word [rax + rax]	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001f8	        0x4883e901	                              sub rcx, 1	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x40001fc	          0x80392f	                    cmp byte [rcx], 0x2f	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x40001ff	            0x747f	                            je 0x4000280	       139	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1	IF_12
0x4000201	          0x4839cd	                            cmp rbp, rcx	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000204	            0x75f2	                           jne 0x40001f8	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000206	            0xeb9a	                           jmp 0x40001a2	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000208	     0xf1f84000000	                   nop dword [rax + rax]	       137	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000210	        0x4080fe2f	                           cmp sil, 0x2f	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000214	            0x741b	                            je 0x4000231	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000216	          0x4989cd	                            mov r13, rcx	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000219	        0x4883c201	                              add rdx, 1	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400021d	         0xfb672ff	               movzx esi, byte [rdx - 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000221	        0x498d4d01	                      lea rcx, [r13 + 1]	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000225	        0x408871ff	                 mov byte [rcx - 1], sil	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000229	           0xfb632	                   movzx esi, byte [rdx]	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400022c	          0x4084f6	                           test sil, sil	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400022f	            0x75df	                           jne 0x4000210	       162	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000231	      0x41c6450100	                   mov byte [r13 + 1], 0	       163	dotdot.c	FUNCTION_1	DO_1	ELSE_7
0x4000236	          0x4989cd	                            mov r13, rcx	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000239	      0xe989feffff	                           jmp 0x40000c7	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x400023e	            0x6690	                                     nop	       160	dotdot.c	FUNCTION_1	DO_1	ELSE_7	DO_2
0x4000240	        0x4183f82e	                           cmp r8d, 0x2e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000244	            0x75d3	                           jne 0x4000219	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000246	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400024a	            0x84c9	                             test cl, cl	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400024c	            0x7546	                           jne 0x4000294	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400024e	          0xc60200	                       mov byte [rdx], 0	       149	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000251	        0xc6450000	                       mov byte [rbp], 0	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000255	      0xe96dfeffff	                           jmp 0x40000c7	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x400025a	    0x660f1f440000	                    nop word [rax + rax]	       150	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13
0x4000260	    0x488b05000000	            mov rax, qword [0x04000267] 	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x4000267	          0x4889ef	                            mov rdi, rbp	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x400026a	            0xff10	                        call qword [rax]	        76	dotdot.c	FUNCTION_1	IF_3	CALL_5
0x400026c	        0x4883c408	                              add rsp, 8	       180	dotdot.c	FUNCTION_1
0x4000270	          0x4c89e0	                            mov rax, r12	        77	dotdot.c	FUNCTION_1	IF_3
0x4000273	              0x5b	                                 pop rbx	       180	dotdot.c	FUNCTION_1
0x4000274	              0x5d	                                 pop rbp	       180	dotdot.c	FUNCTION_1
0x4000275	            0x415c	                                 pop r12	       180	dotdot.c	FUNCTION_1
0x4000277	            0x415d	                                 pop r13	       180	dotdot.c	FUNCTION_1
0x4000279	              0xc3	                                     ret	       180	dotdot.c	FUNCTION_1
0x400027a	    0x660f1f440000	                    nop word [rax + rax]	       180	dotdot.c	FUNCTION_1
0x4000280	          0x4989cd	                            mov r13, rcx	       138	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11	WHILE_1
0x4000283	      0x41c6450000	                       mov byte [r13], 0	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x4000288	      0xe93afeffff	                           jmp 0x40000c7	       142	dotdot.c	FUNCTION_1	DO_1	ELSE_5	IF_11
0x400028d	            0x31c0	                            xor eax, eax	        63	dotdot.c	FUNCTION_1	IF_1
0x400028f	      0xe981feffff	                           jmp 0x4000115	        63	dotdot.c	FUNCTION_1	IF_1
0x4000294	          0x80f92e	                            cmp cl, 0x2e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000297	            0x7580	                           jne 0x4000219	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x4000299	        0x807a0200	                   cmp byte [rdx + 2], 0	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400029d	            0x74af	                            je 0x400024e	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x400029f	      0xe975ffffff	                           jmp 0x4000219	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x40002a4	         0xf1f4000	                         nop dword [rax]	       148	dotdot.c	FUNCTION_1	DO_1	ELSE_6	IF_13	CALL_14
0x40002a8	    0x488b05000000	            mov rax, qword [0x040002af] 	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x40002af	          0x4889ef	                            mov rdi, rbp	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x40002b2	            0xff10	                        call qword [rax]	        68	dotdot.c	FUNCTION_1	IF_2	CALL_4
0x40002b4	            0x31c0	                            xor eax, eax	        69	dotdot.c	FUNCTION_1	IF_2
0x40002b6	      0xe95afeffff	                           jmp 0x4000115	        69	dotdot.c	FUNCTION_1	IF_2
